

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jun 28 17:35:33 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           ; Version 2.05
    81                           ; Generated 20/12/2018 GMT
    82                           ; 
    83                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F47J53 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataCOMRAM
   116  0044FC                     __pidataCOMRAM:
   117                           	opt callstack 0
   118                           
   119                           ;initializer for _tiempo_anterior_1
   120  0044FC  0041               	dw	65
   121                           
   122                           ;initializer for _TIME_MAX
   123  0044FE  03A7               	dw	935
   124                           
   125                           ;initializer for _velocidad
   126  004500  01C2               	dw	450
   127                           
   128                           ;initializer for _cicle_90
   129  004502  01C2               	dw	450
   130                           
   131                           	psect	idataBANK1
   132  004504                     __pidataBANK1:
   133                           	opt callstack 0
   134                           
   135                           ;initializer for main@F7117
   136  004504  48                 	db	72
   137  004505  4F                 	db	79
   138  004506  4C                 	db	76
   139  004507  41                 	db	65
   140  004508  21                 	db	33
   141  004509  00                 	db	0
   142  0000                     _RPINR16	set	3831
   143  0000                     _RPOR23	set	3799
   144  0000                     _RPINR1	set	3809
   145  0000                     _PPSCON	set	3775
   146  0000                     _T5CONbits	set	3874
   147  0000                     _CCPR7L	set	3850
   148  0000                     _TMR5L	set	3875
   149  0000                     _TMR5H	set	3876
   150  0000                     _T5CON	set	3874
   151  0000                     _CCPTMRS1bits	set	3921
   152  0000                     _CCP7CONbits	set	3849
   153  0000                     _ANCON1	set	3913
   154  0000                     _ANCON0	set	3912
   155  0000                     _PORTAbits	set	3968
   156  0000                     _TXREG2	set	4009
   157  0000                     _RCREG1	set	4015
   158  0000                     _TXREG1	set	4014
   159  0000                     _T2CONbits	set	4042
   160  0000                     _PIE3bits	set	4003
   161  0000                     _PIR3bits	set	4004
   162  0000                     _SPBRG2	set	4011
   163  0000                     _BAUDCON2bits	set	3964
   164  0000                     _RCSTA2	set	3996
   165  0000                     _TXSTA2	set	4008
   166  0000                     _PIR5bits	set	3992
   167  0000                     _PIE5bits	set	3985
   168  0000                     _PORTDbits	set	3971
   169  0000                     _TRISDbits	set	3989
   170  0000                     _PIE1bits	set	3997
   171  0000                     _PIR1bits	set	3998
   172  0000                     _SPBRG1	set	4016
   173  0000                     _BAUDCON1bits	set	3966
   174  0000                     _RCSTA1	set	4012
   175  0000                     _TXSTA1	set	4013
   176  0000                     _TRISCbits	set	3988
   177  0000                     _TMR2	set	4044
   178  0000                     _PR2	set	4043
   179  0000                     _T2CON	set	4042
   180  0000                     _INTCON3bits	set	4080
   181  0000                     _INTCON2bits	set	4081
   182  0000                     _INTCONbits	set	4082
   183  0000                     _TRISBbits	set	3987
   184  0000                     _TRISAbits	set	3986
   185  0000                     _RCREG2	set	4010
   186                           
   187                           	psect	smallconst
   188  000F00                     __psmallconst:
   189                           	opt callstack 0
   190  000F00  00                 	db	0
   191  000F01                     STR_5:
   192  000F01  56                 	db	86	;'V'
   193  000F02  65                 	db	101	;'e'
   194  000F03  6C                 	db	108	;'l'
   195  000F04  6F                 	db	111	;'o'
   196  000F05  63                 	db	99	;'c'
   197  000F06  69                 	db	105	;'i'
   198  000F07  64                 	db	100	;'d'
   199  000F08  61                 	db	97	;'a'
   200  000F09  64                 	db	100	;'d'
   201  000F0A  20                 	db	32
   202  000F0B  66                 	db	102	;'f'
   203  000F0C  69                 	db	105	;'i'
   204  000F0D  6A                 	db	106	;'j'
   205  000F0E  61                 	db	97	;'a'
   206  000F0F  64                 	db	100	;'d'
   207  000F10  61                 	db	97	;'a'
   208  000F11  20                 	db	32
   209  000F12  61                 	db	97	;'a'
   210  000F13  6C                 	db	108	;'l'
   211  000F14  3A                 	db	58	;':'
   212  000F15  20                 	db	32
   213  000F16  25                 	db	37
   214  000F17  30                 	db	48	;'0'
   215  000F18  33                 	db	51	;'3'
   216  000F19  75                 	db	117	;'u'
   217  000F1A  25                 	db	37
   218  000F1B  63                 	db	99	;'c'
   219  000F1C  00                 	db	0
   220  000F1D                     STR_2:
   221  000F1D  4C                 	db	76	;'L'
   222  000F1E  4C                 	db	76	;'L'
   223  000F1F  41                 	db	65	;'A'
   224  000F20  4D                 	db	77	;'M'
   225  000F21  45                 	db	69	;'E'
   226  000F22  4E                 	db	78	;'N'
   227  000F23  20                 	db	32
   228  000F24  41                 	db	65	;'A'
   229  000F25  20                 	db	32
   230  000F26  4C                 	db	76	;'L'
   231  000F27  4F                 	db	79	;'O'
   232  000F28  53                 	db	83	;'S'
   233  000F29  20                 	db	32
   234  000F2A  42                 	db	66	;'B'
   235  000F2B  4F                 	db	79	;'O'
   236  000F2C  4D                 	db	77	;'M'
   237  000F2D  42                 	db	66	;'B'
   238  000F2E  45                 	db	69	;'E'
   239  000F2F  52                 	db	82	;'R'
   240  000F30  4F                 	db	79	;'O'
   241  000F31  53                 	db	83	;'S'
   242  000F32  20                 	db	32
   243  000F33  50                 	db	80	;'P'
   244  000F34  4C                 	db	76	;'L'
   245  000F35  53                 	db	83	;'S'
   246  000F36  21                 	db	33
   247  000F37  00                 	db	0
   248  000F38                     STR_4:
   249  000F38  56                 	db	86	;'V'
   250  000F39  65                 	db	101	;'e'
   251  000F3A  68                 	db	104	;'h'
   252  000F3B  69                 	db	105	;'i'
   253  000F3C  63                 	db	99	;'c'
   254  000F3D  75                 	db	117	;'u'
   255  000F3E  6C                 	db	108	;'l'
   256  000F3F  6F                 	db	111	;'o'
   257  000F40  20                 	db	32
   258  000F41  65                 	db	101	;'e'
   259  000F42  6E                 	db	110	;'n'
   260  000F43  20                 	db	32
   261  000F44  72                 	db	114	;'r'
   262  000F45  65                 	db	101	;'e'
   263  000F46  76                 	db	118	;'v'
   264  000F47  65                 	db	101	;'e'
   265  000F48  72                 	db	114	;'r'
   266  000F49  73                 	db	115	;'s'
   267  000F4A  61                 	db	97	;'a'
   268  000F4B  21                 	db	33
   269  000F4C  00                 	db	0
   270  000F4D                     STR_3:
   271  000F4D  4D                 	db	77	;'M'
   272  000F4E  6F                 	db	111	;'o'
   273  000F4F  74                 	db	116	;'t'
   274  000F50  6F                 	db	111	;'o'
   275  000F51  72                 	db	114	;'r'
   276  000F52  65                 	db	101	;'e'
   277  000F53  73                 	db	115	;'s'
   278  000F54  20                 	db	32
   279  000F55  65                 	db	101	;'e'
   280  000F56  6E                 	db	110	;'n'
   281  000F57  63                 	db	99	;'c'
   282  000F58  65                 	db	101	;'e'
   283  000F59  6E                 	db	110	;'n'
   284  000F5A  64                 	db	100	;'d'
   285  000F5B  69                 	db	105	;'i'
   286  000F5C  64                 	db	100	;'d'
   287  000F5D  6F                 	db	111	;'o'
   288  000F5E  73                 	db	115	;'s'
   289  000F5F  21                 	db	33
   290  000F60  00                 	db	0
   291  000F61                     STR_1:
   292  000F61  25                 	db	37
   293  000F62  30                 	db	48	;'0'
   294  000F63  33                 	db	51	;'3'
   295  000F64  2E                 	db	46
   296  000F65  31                 	db	49	;'1'
   297  000F66  66                 	db	102	;'f'
   298  000F67  20                 	db	32
   299  000F68  63                 	db	99	;'c'
   300  000F69  6D                 	db	109	;'m'
   301  000F6A  00                 	db	0
   302  000F6B  47                 	db	71	;'G'
   303  000F6C  69                 	db	105	;'i'
   304  000F6D  72                 	db	114	;'r'
   305  000F6E  61                 	db	97	;'a'
   306  000F6F  6E                 	db	110	;'n'
   307  000F70  64                 	db	100	;'d'
   308  000F71  6F                 	db	111	;'o'
   309  000F72  00                 	db	0
   310  000F73                     STR_7:
   311  000F73  49                 	db	73	;'I'
   312  000F74  4E                 	db	78	;'N'
   313  000F75  46                 	db	70	;'F'
   314  000F76  00                 	db	0
   315  000F77                     STR_11:
   316  000F77  4E                 	db	78	;'N'
   317  000F78  41                 	db	65	;'A'
   318  000F79  4E                 	db	78	;'N'
   319  000F7A  00                 	db	0
   320  000F7B                     STR_8:
   321  000F7B  69                 	db	105	;'i'
   322  000F7C  6E                 	db	110	;'n'
   323  000F7D  66                 	db	102	;'f'
   324  000F7E  00                 	db	0
   325  000F7F                     STR_12:
   326  000F7F  6E                 	db	110	;'n'
   327  000F80  61                 	db	97	;'a'
   328  000F81  6E                 	db	110	;'n'
   329  000F82  00                 	db	0
   330  000F83                     STR_15:
   331  000F83  6C                 	db	108	;'l'
   332  000F84  66                 	db	102	;'f'
   333  000F85  00                 	db	0
   334  0000                     
   335                           ; #config settings
   336  000F86  00                 	db	0	; dummy byte at the end
   337  0000                     
   338                           	psect	cinit
   339  003F8E                     __pcinit:
   340                           	opt callstack 0
   341  003F8E                     start_initialization:
   342                           	opt callstack 0
   343  003F8E                     __initialization:
   344                           	opt callstack 0
   345                           
   346                           ; Initialize objects allocated to BANK1 (6 bytes)
   347                           ; load TBLPTR registers with __pidataBANK1
   348  003F8E  0E04               	movlw	low __pidataBANK1
   349  003F90  6EF6               	movwf	tblptrl,c
   350  003F92  0E45               	movlw	high __pidataBANK1
   351  003F94  6EF7               	movwf	tblptrh,c
   352  003F96  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   353  003F98  6EF8               	movwf	tblptru,c
   354  003F9A  EE01  F0CA         	lfsr	0,__pdataBANK1
   355  003F9E  EE10 F006          	lfsr	1,6
   356  003FA2                     copy_data0:
   357  003FA2  0009               	tblrd		*+
   358  003FA4  CFF5 FFEE          	movff	tablat,postinc0
   359  003FA8  50E5               	movf	postdec1,w,c
   360  003FAA  50E1               	movf	fsr1l,w,c
   361  003FAC  E1FA               	bnz	copy_data0
   362                           
   363                           ; Initialize objects allocated to COMRAM (8 bytes)
   364                           ; load TBLPTR registers with __pidataCOMRAM
   365  003FAE  0EFC               	movlw	low __pidataCOMRAM
   366  003FB0  6EF6               	movwf	tblptrl,c
   367  003FB2  0E44               	movlw	high __pidataCOMRAM
   368  003FB4  6EF7               	movwf	tblptrh,c
   369  003FB6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   370  003FB8  6EF8               	movwf	tblptru,c
   371  003FBA  EE00  F045         	lfsr	0,__pdataCOMRAM
   372  003FBE  EE10 F008          	lfsr	1,8
   373  003FC2                     copy_data1:
   374  003FC2  0009               	tblrd		*+
   375  003FC4  CFF5 FFEE          	movff	tablat,postinc0
   376  003FC8  50E5               	movf	postdec1,w,c
   377  003FCA  50E1               	movf	fsr1l,w,c
   378  003FCC  E1FA               	bnz	copy_data1
   379                           
   380                           ; Clear objects allocated to BANK1 (125 bytes)
   381  003FCE  EE01  F000         	lfsr	0,__pbssBANK1
   382  003FD2  0E7D               	movlw	125
   383  003FD4                     clear_0:
   384  003FD4  6AEE               	clrf	postinc0,c
   385  003FD6  06E8               	decf	wreg,f,c
   386  003FD8  E1FD               	bnz	clear_0
   387                           
   388                           ; Clear objects allocated to COMRAM (27 bytes)
   389  003FDA  EE00  F02A         	lfsr	0,__pbssCOMRAM
   390  003FDE  0E1B               	movlw	27
   391  003FE0                     clear_1:
   392  003FE0  6AEE               	clrf	postinc0,c
   393  003FE2  06E8               	decf	wreg,f,c
   394  003FE4  E1FD               	bnz	clear_1
   395  003FE6                     end_of_initialization:
   396                           	opt callstack 0
   397  003FE6                     __end_of__initialization:
   398                           	opt callstack 0
   399  003FE6  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   400  003FE8  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   401  003FEA  0100               	movlb	0
   402  003FEC  EFB7  F01B         	goto	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMRAM
   405  00002A                     __pbssCOMRAM:
   406                           	opt callstack 0
   407  00002A                     floorf@F524:
   408                           	opt callstack 0
   409  00002A                     	ds	4
   410  00002E                     ___fpclassifyf@F463:
   411                           	opt callstack 0
   412  00002E                     	ds	4
   413  000032                     _distancia:
   414                           	opt callstack 0
   415  000032                     	ds	4
   416  000036                     _width:
   417                           	opt callstack 0
   418  000036                     	ds	2
   419  000038                     _prec:
   420                           	opt callstack 0
   421  000038                     	ds	2
   422  00003A                     _flags:
   423                           	opt callstack 0
   424  00003A                     	ds	2
   425  00003C                     _contador_timer_5:
   426                           	opt callstack 0
   427  00003C                     	ds	2
   428  00003E                     _parar:
   429                           	opt callstack 0
   430  00003E                     	ds	2
   431  000040                     _estadoFuego:
   432                           	opt callstack 0
   433  000040                     	ds	1
   434  000041                     _contador_datos:
   435                           	opt callstack 0
   436  000041                     	ds	1
   437  000042                     _servo_dirreccion:
   438                           	opt callstack 0
   439  000042                     	ds	1
   440  000043                     _indicador:
   441                           	opt callstack 0
   442  000043                     	ds	1
   443  000044                     _motor:
   444                           	opt callstack 0
   445  000044                     	ds	1
   446                           
   447                           	psect	dataCOMRAM
   448  000045                     __pdataCOMRAM:
   449                           	opt callstack 0
   450  000045                     _tiempo_anterior_1:
   451                           	opt callstack 0
   452  000045                     	ds	2
   453  000047                     _TIME_MAX:
   454                           	opt callstack 0
   455  000047                     	ds	2
   456  000049                     _velocidad:
   457                           	opt callstack 0
   458  000049                     	ds	2
   459  00004B                     _cicle_90:
   460                           	opt callstack 0
   461  00004B                     	ds	2
   462                           
   463                           	psect	bssBANK1
   464  000100                     __pbssBANK1:
   465                           	opt callstack 0
   466  000100                     	ds	20
   467  000114                     	ds	8
   468  00011C                     _nout:
   469                           	opt callstack 0
   470  00011C                     	ds	2
   471  00011E                     _bandera_distancia:
   472                           	opt callstack 0
   473  00011E                     	ds	1
   474  00011F                     _obstaculo:
   475                           	opt callstack 0
   476  00011F                     	ds	1
   477  000120                     _bandera_servo:
   478                           	opt callstack 0
   479  000120                     	ds	1
   480  000121                     _bandera:
   481                           	opt callstack 0
   482  000121                     	ds	1
   483  000122                     _bandera_fuego:
   484                           	opt callstack 0
   485  000122                     	ds	1
   486  000123                     _dbuf:
   487                           	opt callstack 0
   488  000123                     	ds	80
   489  000173                     _datos:
   490                           	opt callstack 0
   491  000173                     	ds	10
   492                           
   493                           	psect	dataBANK1
   494  0001CA                     __pdataBANK1:
   495                           	opt callstack 0
   496  0001CA                     main@F7117:
   497                           	opt callstack 0
   498  0001CA                     	ds	6
   499                           
   500                           	psect	cstackBANK1
   501  00017D                     __pcstackBANK1:
   502                           	opt callstack 0
   503  00017D                     vfpfcnvrt@llu:
   504                           	opt callstack 0
   505                           
   506                           ; 8 bytes @ 0x0
   507  00017D                     	ds	8
   508  000185                     vfpfcnvrt@done:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x8
   512  000185                     	ds	2
   513  000187                     _vfpfcnvrt$1338:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0xA
   517  000187                     	ds	2
   518  000189                     _vfpfcnvrt$1339:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0xC
   522  000189                     	ds	2
   523  00018B                     _vfpfcnvrt$1344:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0xE
   527  00018B                     	ds	2
   528  00018D                     vfpfcnvrt@f:
   529                           	opt callstack 0
   530                           
   531                           ; 4 bytes @ 0x10
   532  00018D                     	ds	4
   533  000191                     vfpfcnvrt@ct:
   534                           	opt callstack 0
   535                           
   536                           ; 3 bytes @ 0x14
   537  000191                     	ds	3
   538  000194                     vfpfcnvrt@c:
   539                           	opt callstack 0
   540                           
   541                           ; 1 bytes @ 0x17
   542  000194                     	ds	1
   543  000195                     ?_sprintf:
   544                           	opt callstack 0
   545  000195                     sprintf@s:
   546                           	opt callstack 0
   547                           
   548                           ; 2 bytes @ 0x18
   549  000195                     	ds	2
   550  000197                     sprintf@fmt:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x1A
   554  000197                     	ds	6
   555  00019D                     terminal@comand:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x20
   559  00019D                     	ds	2
   560  00019F                     ??_terminal:
   561                           
   562                           ; 1 bytes @ 0x22
   563  00019F                     	ds	5
   564  0001A4                     terminal@texto:
   565                           	opt callstack 0
   566                           
   567                           ; 20 bytes @ 0x27
   568  0001A4                     	ds	20
   569  0001B8                     terminal@medicion:
   570                           	opt callstack 0
   571                           
   572                           ; 2 bytes @ 0x3B
   573  0001B8                     	ds	2
   574  0001BA                     terminal@degree:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x3D
   578  0001BA                     	ds	2
   579  0001BC                     main@text:
   580                           	opt callstack 0
   581                           
   582                           ; 6 bytes @ 0x3F
   583  0001BC                     	ds	6
   584  0001C2                     main@texto:
   585                           	opt callstack 0
   586                           
   587                           ; 8 bytes @ 0x45
   588  0001C2                     	ds	8
   589                           
   590                           	psect	cstackBANK0
   591  000060                     __pcstackBANK0:
   592                           	opt callstack 0
   593  000060                     ??_definirVelocidad:
   594  000060                     ??_rutinaArranque:
   595  000060                     ?_length:
   596                           	opt callstack 0
   597  000060                     ?_estadoDirreccion:
   598                           	opt callstack 0
   599  000060                     ?_strlen:
   600                           	opt callstack 0
   601  000060                     ?___fpclassifyf:
   602                           	opt callstack 0
   603  000060                     ?_isupper:
   604                           	opt callstack 0
   605  000060                     ?_isdigit:
   606                           	opt callstack 0
   607  000060                     ?_strncmp:
   608                           	opt callstack 0
   609  000060                     ?_isspace:
   610                           	opt callstack 0
   611  000060                     ?___wmul:
   612                           	opt callstack 0
   613  000060                     ?___awdiv:
   614                           	opt callstack 0
   615  000060                     ?___awmod:
   616                           	opt callstack 0
   617  000060                     ?___fldiv:
   618                           	opt callstack 0
   619  000060                     ?___flneg:
   620                           	opt callstack 0
   621  000060                     ?___xxtofl:
   622                           	opt callstack 0
   623  000060                     ?___lodiv:
   624                           	opt callstack 0
   625  000060                     ?___lomod:
   626                           	opt callstack 0
   627  000060                     length@text:
   628                           	opt callstack 0
   629  000060                     dirreccion@degree:
   630                           	opt callstack 0
   631  000060                     ___wmul@multiplier:
   632                           	opt callstack 0
   633  000060                     ___awdiv@dividend:
   634                           	opt callstack 0
   635  000060                     ___awmod@dividend:
   636                           	opt callstack 0
   637  000060                     isdigit@c:
   638                           	opt callstack 0
   639  000060                     isspace@c:
   640                           	opt callstack 0
   641  000060                     isupper@c:
   642                           	opt callstack 0
   643  000060                     fputc@c:
   644                           	opt callstack 0
   645  000060                     strcpy@dest:
   646                           	opt callstack 0
   647  000060                     strlen@s:
   648                           	opt callstack 0
   649  000060                     strncmp@_l:
   650                           	opt callstack 0
   651  000060                     ___fleq@ff1:
   652                           	opt callstack 0
   653  000060                     ___flneg@f1:
   654                           	opt callstack 0
   655  000060                     ___fldiv@b:
   656                           	opt callstack 0
   657  000060                     ___xxtofl@val:
   658                           	opt callstack 0
   659  000060                     ___fpclassifyf@x:
   660                           	opt callstack 0
   661  000060                     ___lodiv@dividend:
   662                           	opt callstack 0
   663  000060                     ___lomod@dividend:
   664                           	opt callstack 0
   665                           
   666                           ; 8 bytes @ 0x0
   667  000060                     	ds	2
   668  000062                     ??_length:
   669  000062                     ??_estadoDirreccion:
   670  000062                     ??_dirreccion:
   671  000062                     ??_isupper:
   672  000062                     ??_isdigit:
   673  000062                     ??_isspace:
   674  000062                     ___wmul@multiplicand:
   675                           	opt callstack 0
   676  000062                     ___awdiv@divisor:
   677                           	opt callstack 0
   678  000062                     ___awmod@divisor:
   679                           	opt callstack 0
   680  000062                     fputc@fp:
   681                           	opt callstack 0
   682  000062                     strcpy@src:
   683                           	opt callstack 0
   684  000062                     strlen@a:
   685                           	opt callstack 0
   686  000062                     strncmp@_r:
   687                           	opt callstack 0
   688                           
   689                           ; 2 bytes @ 0x2
   690  000062                     	ds	2
   691  000064                     ??_fputc:
   692  000064                     ??___fpclassifyf:
   693  000064                     ??_strcpy:
   694  000064                     ??___xxtofl:
   695  000064                     dirreccion@tiempo_1:
   696                           	opt callstack 0
   697  000064                     ___awdiv@counter:
   698                           	opt callstack 0
   699  000064                     ___awmod@counter:
   700                           	opt callstack 0
   701  000064                     length@longitud:
   702                           	opt callstack 0
   703  000064                     estadoDirreccion@angulo:
   704                           	opt callstack 0
   705  000064                     ___wmul@product:
   706                           	opt callstack 0
   707  000064                     strncmp@n:
   708                           	opt callstack 0
   709  000064                     ___fleq@ff2:
   710                           	opt callstack 0
   711  000064                     ___fldiv@a:
   712                           	opt callstack 0
   713                           
   714                           ; 4 bytes @ 0x4
   715  000064                     	ds	1
   716  000065                     ___awdiv@sign:
   717                           	opt callstack 0
   718  000065                     ___awmod@sign:
   719                           	opt callstack 0
   720                           
   721                           ; 1 bytes @ 0x5
   722  000065                     	ds	1
   723  000066                     ??_strncmp:
   724  000066                     ?_tolower:
   725                           	opt callstack 0
   726  000066                     length@dato:
   727                           	opt callstack 0
   728  000066                     estadoDirreccion@valor:
   729                           	opt callstack 0
   730  000066                     _isspace$1847:
   731                           	opt callstack 0
   732  000066                     ___awdiv@quotient:
   733                           	opt callstack 0
   734  000066                     strcpy@s:
   735                           	opt callstack 0
   736  000066                     tolower@c:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0x6
   740  000066                     	ds	1
   741  000067                     ?_atoi:
   742                           	opt callstack 0
   743  000067                     length@i:
   744                           	opt callstack 0
   745  000067                     atoi@s:
   746                           	opt callstack 0
   747  000067                     strncmp@l:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x7
   751  000067                     	ds	1
   752  000068                     ??_tolower:
   753  000068                     ??___fldiv:
   754  000068                     ??___fleq:
   755  000068                     ___xxtofl@sign:
   756                           	opt callstack 0
   757  000068                     enviarRS232@valores:
   758                           	opt callstack 0
   759  000068                     ___fpclassifyf@e:
   760                           	opt callstack 0
   761  000068                     strcpy@d:
   762                           	opt callstack 0
   763  000068                     ___lodiv@divisor:
   764                           	opt callstack 0
   765  000068                     ___lomod@divisor:
   766                           	opt callstack 0
   767                           
   768                           ; 8 bytes @ 0x8
   769  000068                     	ds	1
   770  000069                     ??_atoi:
   771  000069                     ___xxtofl@exp:
   772                           	opt callstack 0
   773  000069                     fputs@s:
   774                           	opt callstack 0
   775  000069                     strncmp@r:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0x9
   779  000069                     	ds	1
   780  00006A                     ??_enviarRS232:
   781  00006A                     ___xxtofl@arg:
   782                           	opt callstack 0
   783  00006A                     ___fpclassifyf@u:
   784                           	opt callstack 0
   785                           
   786                           ; 4 bytes @ 0xA
   787  00006A                     	ds	1
   788  00006B                     fputs@fp:
   789                           	opt callstack 0
   790                           
   791                           ; 2 bytes @ 0xB
   792  00006B                     	ds	1
   793  00006C                     enviarRS232@longitud_texto:
   794                           	opt callstack 0
   795  00006C                     _tolower$1932:
   796                           	opt callstack 0
   797  00006C                     ___fldiv@rem:
   798                           	opt callstack 0
   799                           
   800                           ; 4 bytes @ 0xC
   801  00006C                     	ds	1
   802  00006D                     fputs@c:
   803                           	opt callstack 0
   804  00006D                     atoi@neg:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0xD
   808  00006D                     	ds	1
   809  00006E                     ?___flmul:
   810                           	opt callstack 0
   811  00006E                     enviarRS232@i:
   812                           	opt callstack 0
   813  00006E                     fputs@i:
   814                           	opt callstack 0
   815  00006E                     ___flmul@b:
   816                           	opt callstack 0
   817                           
   818                           ; 4 bytes @ 0xE
   819  00006E                     	ds	1
   820  00006F                     _atoi$1816:
   821                           	opt callstack 0
   822                           
   823                           ; 2 bytes @ 0xF
   824  00006F                     	ds	1
   825  000070                     ?_pad:
   826                           	opt callstack 0
   827  000070                     ___lomod@counter:
   828                           	opt callstack 0
   829  000070                     ___fldiv@sign:
   830                           	opt callstack 0
   831  000070                     pad@fp:
   832                           	opt callstack 0
   833  000070                     ___lodiv@quotient:
   834                           	opt callstack 0
   835                           
   836                           ; 8 bytes @ 0x10
   837  000070                     	ds	1
   838  000071                     ___fldiv@new_exp:
   839                           	opt callstack 0
   840  000071                     _atoi$1818:
   841                           	opt callstack 0
   842                           
   843                           ; 2 bytes @ 0x11
   844  000071                     	ds	1
   845  000072                     pad@buf:
   846                           	opt callstack 0
   847  000072                     ___flmul@a:
   848                           	opt callstack 0
   849                           
   850                           ; 4 bytes @ 0x12
   851  000072                     	ds	1
   852  000073                     _atoi$1817:
   853                           	opt callstack 0
   854  000073                     ___fldiv@grs:
   855                           	opt callstack 0
   856                           
   857                           ; 4 bytes @ 0x13
   858  000073                     	ds	1
   859  000074                     pad@p:
   860                           	opt callstack 0
   861  000074                     atoi@n:
   862                           	opt callstack 0
   863                           
   864                           ; 2 bytes @ 0x14
   865  000074                     	ds	2
   866  000076                     ??___flmul:
   867  000076                     ??_pad:
   868                           
   869                           ; 1 bytes @ 0x16
   870  000076                     	ds	1
   871  000077                     ___fldiv@bexp:
   872                           	opt callstack 0
   873  000077                     pad@i:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0x17
   877  000077                     	ds	1
   878  000078                     ___lodiv@counter:
   879                           	opt callstack 0
   880  000078                     ___fldiv@aexp:
   881                           	opt callstack 0
   882                           
   883                           ; 1 bytes @ 0x18
   884  000078                     	ds	1
   885  000079                     ?_floorf:
   886                           	opt callstack 0
   887  000079                     pad@w:
   888                           	opt callstack 0
   889  000079                     floorf@x:
   890                           	opt callstack 0
   891                           
   892                           ; 4 bytes @ 0x19
   893  000079                     	ds	1
   894  00007A                     ___flmul@sign:
   895                           	opt callstack 0
   896                           
   897                           ; 1 bytes @ 0x1A
   898  00007A                     	ds	1
   899  00007B                     ?_ctoa:
   900                           	opt callstack 0
   901  00007B                     ?_utoa:
   902                           	opt callstack 0
   903  00007B                     ___flmul@aexp:
   904                           	opt callstack 0
   905  00007B                     ctoa@fp:
   906                           	opt callstack 0
   907  00007B                     utoa@fp:
   908                           	opt callstack 0
   909                           
   910                           ; 2 bytes @ 0x1B
   911  00007B                     	ds	1
   912  00007C                     ___flmul@grs:
   913                           	opt callstack 0
   914                           
   915                           ; 4 bytes @ 0x1C
   916  00007C                     	ds	1
   917  00007D                     ??_floorf:
   918  00007D                     ctoa@c:
   919                           	opt callstack 0
   920  00007D                     utoa@d:
   921                           	opt callstack 0
   922                           
   923                           ; 8 bytes @ 0x1D
   924  00007D                     	ds	1
   925  00007E                     ctoa@w:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0x1E
   929  00007E                     	ds	2
   930  000080                     ___flmul@bexp:
   931                           	opt callstack 0
   932                           
   933                           ; 1 bytes @ 0x20
   934  000080                     	ds	1
   935  000081                     ___flmul@prod:
   936                           	opt callstack 0
   937                           
   938                           ; 4 bytes @ 0x21
   939  000081                     	ds	2
   940  000083                     floorf@m:
   941                           	opt callstack 0
   942                           
   943                           ; 4 bytes @ 0x23
   944  000083                     	ds	2
   945  000085                     ??_utoa:
   946  000085                     ___flmul@temp:
   947                           	opt callstack 0
   948                           
   949                           ; 2 bytes @ 0x25
   950  000085                     	ds	2
   951  000087                     ?___fladd:
   952                           	opt callstack 0
   953  000087                     ?___fltol:
   954                           	opt callstack 0
   955  000087                     floorf@e:
   956                           	opt callstack 0
   957  000087                     ___flge@ff1:
   958                           	opt callstack 0
   959  000087                     ___fltol@f1:
   960                           	opt callstack 0
   961  000087                     ___fladd@b:
   962                           	opt callstack 0
   963                           
   964                           ; 4 bytes @ 0x27
   965  000087                     	ds	2
   966  000089                     floorf@u:
   967                           	opt callstack 0
   968                           
   969                           ; 4 bytes @ 0x29
   970  000089                     	ds	2
   971  00008B                     ??___fltol:
   972  00008B                     ___flge@ff2:
   973                           	opt callstack 0
   974  00008B                     ___fladd@a:
   975                           	opt callstack 0
   976                           
   977                           ; 4 bytes @ 0x2B
   978  00008B                     	ds	2
   979  00008D                     utoa@p:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x2D
   983  00008D                     	ds	2
   984  00008F                     ??___fladd:
   985  00008F                     ??___flge:
   986  00008F                     ___fltol@sign1:
   987                           	opt callstack 0
   988  00008F                     utoa@w:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x2F
   992  00008F                     	ds	1
   993  000090                     ___fltol@exp1:
   994                           	opt callstack 0
   995                           
   996                           ; 1 bytes @ 0x30
   997  000090                     	ds	1
   998  000091                     utoa@n:
   999                           	opt callstack 0
  1000                           
  1001                           ; 8 bytes @ 0x31
  1002  000091                     	ds	2
  1003  000093                     ___fladd@signs:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x33
  1007  000093                     	ds	1
  1008  000094                     ___fladd@aexp:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 1 bytes @ 0x34
  1012  000094                     	ds	1
  1013  000095                     ___fladd@bexp:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x35
  1017  000095                     	ds	1
  1018  000096                     ___fladd@grs:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x36
  1022  000096                     	ds	1
  1023  000097                     ?___flsub:
  1024                           	opt callstack 0
  1025  000097                     fijarVelocidad@DC:
  1026                           	opt callstack 0
  1027  000097                     ___flsub@b:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x37
  1031  000097                     	ds	2
  1032  000099                     utoa@i:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x39
  1036  000099                     	ds	2
  1037  00009B                     ___flsub@a:
  1038                           	opt callstack 0
  1039  00009B                     _fijarVelocidad$2157:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 4 bytes @ 0x3B
  1043  00009B                     	ds	4
  1044  00009F                     ?_efgtoa:
  1045                           	opt callstack 0
  1046  00009F                     fijarVelocidad@speed:
  1047                           	opt callstack 0
  1048  00009F                     efgtoa@fp:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x3F
  1052  00009F                     	ds	2
  1053  0000A1                     efgtoa@f:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 4 bytes @ 0x41
  1057  0000A1                     	ds	4
  1058  0000A5                     efgtoa@c:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 1 bytes @ 0x45
  1062  0000A5                     	ds	1
  1063  0000A6                     ??_efgtoa:
  1064                           
  1065                           ; 1 bytes @ 0x46
  1066  0000A6                     	ds	5
  1067  0000AB                     efgtoa@ou:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x4B
  1071  0000AB                     	ds	4
  1072  0000AF                     _efgtoa$1306:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x4F
  1076  0000AF                     	ds	2
  1077  0000B1                     _efgtoa$1307:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x51
  1081  0000B1                     	ds	2
  1082  0000B3                     _efgtoa$1311:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x53
  1086  0000B3                     	ds	2
  1087  0000B5                     _efgtoa$1315:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x55
  1091  0000B5                     	ds	2
  1092  0000B7                     _efgtoa$1316:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x57
  1096  0000B7                     	ds	2
  1097  0000B9                     _efgtoa$1317:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x59
  1101  0000B9                     	ds	2
  1102  0000BB                     efgtoa@t:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x5B
  1106  0000BB                     	ds	2
  1107  0000BD                     efgtoa@pp:
  1108                           	opt callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x5D
  1111  0000BD                     	ds	2
  1112  0000BF                     efgtoa@m:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x5F
  1116  0000BF                     	ds	2
  1117  0000C1                     efgtoa@ne:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x61
  1121  0000C1                     	ds	2
  1122  0000C3                     efgtoa@d:
  1123                           	opt callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x63
  1126  0000C3                     	ds	2
  1127  0000C5                     efgtoa@sign:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x65
  1131  0000C5                     	ds	2
  1132  0000C7                     efgtoa@p:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x67
  1136  0000C7                     	ds	2
  1137  0000C9                     efgtoa@nmode:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x69
  1141  0000C9                     	ds	1
  1142  0000CA                     efgtoa@w:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x6A
  1146  0000CA                     	ds	2
  1147  0000CC                     efgtoa@mode:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x6C
  1151  0000CC                     	ds	1
  1152  0000CD                     efgtoa@h:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x6D
  1156  0000CD                     	ds	4
  1157  0000D1                     efgtoa@l:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x71
  1161  0000D1                     	ds	4
  1162  0000D5                     efgtoa@i:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x75
  1166  0000D5                     	ds	2
  1167  0000D7                     efgtoa@g:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x77
  1171  0000D7                     	ds	4
  1172  0000DB                     efgtoa@e:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x7B
  1176  0000DB                     	ds	2
  1177  0000DD                     efgtoa@n:
  1178                           	opt callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x7D
  1181  0000DD                     	ds	2
  1182  0000DF                     efgtoa@u:
  1183                           	opt callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x7F
  1186  0000DF                     	ds	4
  1187  0000E3                     ?_vfpfcnvrt:
  1188                           	opt callstack 0
  1189  0000E3                     vfpfcnvrt@fp:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x83
  1193  0000E3                     	ds	2
  1194  0000E5                     vfpfcnvrt@fmt:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x85
  1198  0000E5                     	ds	2
  1199  0000E7                     vfpfcnvrt@ap:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x87
  1203  0000E7                     	ds	2
  1204  0000E9                     ??_vfpfcnvrt:
  1205                           
  1206                           ; 1 bytes @ 0x89
  1207  0000E9                     	ds	4
  1208  0000ED                     ?_vfprintf:
  1209                           	opt callstack 0
  1210  0000ED                     vfprintf@fp:
  1211                           	opt callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x8D
  1214  0000ED                     	ds	2
  1215  0000EF                     vfprintf@fmt:
  1216                           	opt callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x8F
  1219  0000EF                     	ds	2
  1220  0000F1                     vfprintf@ap:
  1221                           	opt callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x91
  1224  0000F1                     	ds	2
  1225  0000F3                     vfprintf@cfmt:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x93
  1229  0000F3                     	ds	2
  1230  0000F5                     
  1231                           ; 1 bytes @ 0x95
  1232  0000F5                     	ds	2
  1233  0000F7                     sprintf@ap:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x97
  1237  0000F7                     	ds	2
  1238  0000F9                     sprintf@f:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 6 bytes @ 0x99
  1242  0000F9                     	ds	6
  1243  0000FF                     
  1244                           ; 1 bytes @ 0x9F
  1245                           
  1246                           	psect	cstackCOMRAM
  1247  000001                     __pcstackCOMRAM:
  1248                           	opt callstack 0
  1249  000001                     ?i2___awdiv:
  1250                           	opt callstack 0
  1251  000001                     i2___awdiv@dividend:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x0
  1255  000001                     	ds	2
  1256  000003                     i2___awdiv@divisor:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x2
  1260  000003                     	ds	2
  1261  000005                     i2___awdiv@counter:
  1262                           	opt callstack 0
  1263                           
  1264                           ; 1 bytes @ 0x4
  1265  000005                     	ds	1
  1266  000006                     i2___awdiv@sign:
  1267                           	opt callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x5
  1270  000006                     	ds	1
  1271  000007                     i2___awdiv@quotient:
  1272                           	opt callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x6
  1275  000007                     	ds	2
  1276  000009                     ?i2___xxtofl:
  1277                           	opt callstack 0
  1278  000009                     i2___xxtofl@val:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 4 bytes @ 0x8
  1282  000009                     	ds	4
  1283  00000D                     ??i2___xxtofl:
  1284                           
  1285                           ; 1 bytes @ 0xC
  1286  00000D                     	ds	4
  1287  000011                     i2___xxtofl@sign:
  1288                           	opt callstack 0
  1289                           
  1290                           ; 1 bytes @ 0x10
  1291  000011                     	ds	1
  1292  000012                     i2___xxtofl@exp:
  1293                           	opt callstack 0
  1294                           
  1295                           ; 1 bytes @ 0x11
  1296  000012                     	ds	1
  1297  000013                     i2___xxtofl@arg:
  1298                           	opt callstack 0
  1299                           
  1300                           ; 4 bytes @ 0x12
  1301  000013                     	ds	4
  1302  000017                     ?i2___fladd:
  1303                           	opt callstack 0
  1304  000017                     i2___fladd@b:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 4 bytes @ 0x16
  1308  000017                     	ds	4
  1309  00001B                     i2___fladd@a:
  1310                           	opt callstack 0
  1311                           
  1312                           ; 4 bytes @ 0x1A
  1313  00001B                     	ds	4
  1314  00001F                     ??i2___fladd:
  1315                           
  1316                           ; 1 bytes @ 0x1E
  1317  00001F                     	ds	4
  1318  000023                     i2___fladd@signs:
  1319                           	opt callstack 0
  1320                           
  1321                           ; 1 bytes @ 0x22
  1322  000023                     	ds	1
  1323  000024                     i2___fladd@aexp:
  1324                           	opt callstack 0
  1325                           
  1326                           ; 1 bytes @ 0x23
  1327  000024                     	ds	1
  1328  000025                     i2___fladd@bexp:
  1329                           	opt callstack 0
  1330                           
  1331                           ; 1 bytes @ 0x24
  1332  000025                     	ds	1
  1333  000026                     i2___fladd@grs:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 1 bytes @ 0x25
  1337  000026                     	ds	1
  1338  000027                     ??_rutina:
  1339                           
  1340                           ; 1 bytes @ 0x26
  1341  000027                     	ds	2
  1342  000029                     rutina@dato:
  1343                           	opt callstack 0
  1344                           
  1345                           ; 1 bytes @ 0x28
  1346  000029                     	ds	1
  1347                           
  1348 ;;
  1349 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1350 ;;
  1351 ;; *************** function _main *****************
  1352 ;; Defined at:
  1353 ;;		line 96 in file "auto.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  texto           8   69[BANK1 ] unsigned char [8]
  1358 ;;  text            6   63[BANK1 ] unsigned char [6]
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1372 ;;Total ram usage:       14 bytes
  1373 ;; Hardware stack levels required when called:   11
  1374 ;; This function calls:
  1375 ;;		_PWMServo
  1376 ;;		_configuracionInicial
  1377 ;;		_enviarRS232
  1378 ;;		_frenarMotor
  1379 ;;		_sprintf
  1380 ;;		_terminal
  1381 ;; This function is called by:
  1382 ;;		Startup code after reset
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text0
  1387  00376E                     __ptext0:
  1388                           	opt callstack 0
  1389  00376E                     _main:
  1390                           	opt callstack 20
  1391                           
  1392                           ;auto.c: 97:     unsigned char text[] = "HOLA!";
  1393                           
  1394                           ;incstack = 0
  1395  00376E  EE21  F0CA         	lfsr	2,main@F7117
  1396  003772  EE11  F0BC         	lfsr	1,main@text
  1397  003776  0E05               	movlw	5
  1398  003778                     u9621:
  1399  003778  CFDB FFE3          	movff	plusw2,plusw1
  1400  00377C  06E8               	decf	wreg,f,c
  1401  00377E  E2FC               	bc	u9621
  1402                           
  1403                           ;auto.c: 98:     unsigned char texto[8] = {'\0'};
  1404  003780  EE21  F0C2         	lfsr	2,main@texto
  1405  003784  0E07               	movlw	7
  1406  003786                     u9631:
  1407  003786  6ADE               	clrf	postinc2,c
  1408  003788  06E8               	decf	wreg,f,c
  1409  00378A  E2FD               	bc	u9631
  1410                           
  1411                           ;auto.c: 99:     configuracionInicial();
  1412  00378C  EC33  F022         	call	_configuracionInicial	;wreg free
  1413                           
  1414                           ;auto.c: 100:     enviarRS232(text);
  1415  003790  0EBC               	movlw	low main@text
  1416  003792  0100               	movlb	0	; () banked
  1417  003794  6F68               	movwf	enviarRS232@valores& (0+255),b
  1418  003796  0E01               	movlw	high main@text
  1419  003798  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1420  00379A  EC53  F01F         	call	_enviarRS232	;wreg free
  1421  00379E                     l7527:
  1422                           
  1423                           ;auto.c: 102:         if(bandera == 1){
  1424  00379E  0101               	movlb	1	; () banked
  1425  0037A0  0521               	decf	_bandera& (0+255),w,b
  1426  0037A2  A4D8               	btfss	status,2,c
  1427  0037A4  D008               	goto	l7533
  1428                           
  1429                           ; BSR set to: 1
  1430                           ;auto.c: 103:             bandera = 0;
  1431  0037A6  0E00               	movlw	0
  1432  0037A8  6F21               	movwf	_bandera& (0+255),b
  1433                           
  1434                           ; BSR set to: 1
  1435                           ;auto.c: 104:             terminal(datos);
  1436  0037AA  0E73               	movlw	low _datos
  1437  0037AC  6F9D               	movwf	terminal@comand& (0+255),b
  1438  0037AE  0E01               	movlw	high _datos
  1439  0037B0  6F9E               	movwf	(terminal@comand+1)& (0+255),b
  1440  0037B2  EC6E  F017         	call	_terminal	;wreg free
  1441  0037B6                     l7533:
  1442                           
  1443                           ;auto.c: 106:         if(bandera_servo == 1){
  1444  0037B6  0101               	movlb	1	; () banked
  1445  0037B8  0520               	decf	_bandera_servo& (0+255),w,b
  1446  0037BA  A4D8               	btfss	status,2,c
  1447  0037BC  D004               	goto	l7539
  1448                           
  1449                           ; BSR set to: 1
  1450                           ;auto.c: 107:             bandera_servo = 0;
  1451  0037BE  0E00               	movlw	0
  1452  0037C0  6F20               	movwf	_bandera_servo& (0+255),b
  1453                           
  1454                           ; BSR set to: 1
  1455                           ;auto.c: 108:             PWMServo();
  1456  0037C2  ECA9  F020         	call	_PWMServo	;wreg free
  1457  0037C6                     l7539:
  1458                           
  1459                           ;auto.c: 110:         if(obstaculo == 1){
  1460  0037C6  0101               	movlb	1	; () banked
  1461  0037C8  051F               	decf	_obstaculo& (0+255),w,b
  1462  0037CA  A4D8               	btfss	status,2,c
  1463  0037CC  D004               	goto	l7545
  1464                           
  1465                           ; BSR set to: 1
  1466                           ;auto.c: 111:             obstaculo = 0;
  1467  0037CE  0E00               	movlw	0
  1468  0037D0  6F1F               	movwf	_obstaculo& (0+255),b
  1469                           
  1470                           ; BSR set to: 1
  1471                           ;auto.c: 112:             frenarMotor();
  1472  0037D2  EC57  F022         	call	_frenarMotor	;wreg free
  1473  0037D6                     l7545:
  1474                           
  1475                           ;auto.c: 114:         if(bandera_distancia == 1){
  1476  0037D6  0101               	movlb	1	; () banked
  1477  0037D8  051E               	decf	_bandera_distancia& (0+255),w,b
  1478  0037DA  A4D8               	btfss	status,2,c
  1479  0037DC  D01B               	goto	l7553
  1480                           
  1481                           ; BSR set to: 1
  1482                           ;auto.c: 115:             bandera_distancia = 0;
  1483  0037DE  0E00               	movlw	0
  1484  0037E0  6F1E               	movwf	_bandera_distancia& (0+255),b
  1485                           
  1486                           ; BSR set to: 1
  1487                           ;auto.c: 116:             sprintf(texto,"%03.1f cm",distancia);
  1488  0037E2  0EC2               	movlw	low main@texto
  1489  0037E4  6F95               	movwf	sprintf@s& (0+255),b
  1490  0037E6  0E01               	movlw	high main@texto
  1491  0037E8  6F96               	movwf	(sprintf@s+1)& (0+255),b
  1492  0037EA  0E61               	movlw	low STR_1
  1493  0037EC  6F97               	movwf	sprintf@fmt& (0+255),b
  1494  0037EE  0E0F               	movlw	high STR_1
  1495  0037F0  6F98               	movwf	(sprintf@fmt+1)& (0+255),b
  1496  0037F2  C032  F199         	movff	_distancia,?_sprintf+4
  1497  0037F6  C033  F19A         	movff	_distancia+1,?_sprintf+5
  1498  0037FA  C034  F19B         	movff	_distancia+2,?_sprintf+6
  1499  0037FE  C035  F19C         	movff	_distancia+3,?_sprintf+7
  1500  003802  EC29  F020         	call	_sprintf	;wreg free
  1501                           
  1502                           ;auto.c: 117:             enviarRS232(texto);
  1503  003806  0EC2               	movlw	low main@texto
  1504  003808  0100               	movlb	0	; () banked
  1505  00380A  6F68               	movwf	enviarRS232@valores& (0+255),b
  1506  00380C  0E01               	movlw	high main@texto
  1507  00380E  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1508  003810  EC53  F01F         	call	_enviarRS232	;wreg free
  1509  003814                     l7553:
  1510                           
  1511                           ;auto.c: 119:         if(bandera_fuego == 1){
  1512  003814  0101               	movlb	1	; () banked
  1513  003816  0522               	decf	_bandera_fuego& (0+255),w,b
  1514  003818  A4D8               	btfss	status,2,c
  1515  00381A  D7C1               	goto	l7527
  1516                           
  1517                           ; BSR set to: 1
  1518                           ;auto.c: 120:             bandera_fuego = 0;
  1519  00381C  0E00               	movlw	0
  1520  00381E  6F22               	movwf	_bandera_fuego& (0+255),b
  1521                           
  1522                           ; BSR set to: 1
  1523                           ;auto.c: 121:             enviarRS232("LLAMEN A LOS BOMBEROS PLS!");
  1524  003820  0E1D               	movlw	low STR_2
  1525  003822  0100               	movlb	0	; () banked
  1526  003824  6F68               	movwf	enviarRS232@valores& (0+255),b
  1527  003826  0E0F               	movlw	high STR_2
  1528  003828  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1529  00382A  EC53  F01F         	call	_enviarRS232	;wreg free
  1530  00382E  D7B7               	goto	l7527
  1531  003830                     __end_of_main:
  1532                           	opt callstack 0
  1533                           
  1534 ;; *************** function _terminal *****************
  1535 ;; Defined at:
  1536 ;;		line 136 in file "auto.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  comand          2   32[BANK1 ] PTR unsigned char 
  1539 ;;		 -> datos(10), 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  texto          20   39[BANK1 ] unsigned char [20]
  1542 ;;  degree          2   61[BANK1 ] unsigned int 
  1543 ;;  medicion        2   59[BANK1 ] unsigned int 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1553 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1554 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1555 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1556 ;;      Totals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1557 ;;Total ram usage:       31 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:   10
  1560 ;; This function calls:
  1561 ;;		_adelante
  1562 ;;		_atras
  1563 ;;		_cambiarPWM
  1564 ;;		_dirreccion
  1565 ;;		_encenderMotor
  1566 ;;		_enviarRS232
  1567 ;;		_estadoDirreccion
  1568 ;;		_fijarVelocidad
  1569 ;;		_frenarMotor
  1570 ;;		_sprintf
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text1
  1577  002EDC                     __ptext1:
  1578                           	opt callstack 0
  1579  002EDC                     _terminal:
  1580                           	opt callstack 20
  1581                           
  1582                           ;auto.c: 138:     unsigned int degree;;auto.c: 139:     unsigned char texto[20] = {'\0'}
      +                          ;
  1583                           
  1584                           ;incstack = 0
  1585  002EDC  EE21  F0A4         	lfsr	2,terminal@texto
  1586  002EE0  0E13               	movlw	19
  1587  002EE2                     u9591:
  1588  002EE2  6ADE               	clrf	postinc2,c
  1589  002EE4  06E8               	decf	wreg,f,c
  1590  002EE6  E2FD               	bc	u9591
  1591                           
  1592                           ;auto.c: 140:     TXREG2 = 0x55;
  1593  002EE8  0E55               	movlw	85
  1594  002EEA  6EA9               	movwf	4009,c	;volatile
  1595                           
  1596                           ;auto.c: 141:     switch (comand[0]){
  1597  002EEC  D085               	goto	l7493
  1598  002EEE                     l7463:
  1599                           
  1600                           ; BSR set to: 1
  1601                           ;auto.c: 143:             adelante();
  1602  002EEE  EC79  F022         	call	_adelante	;wreg free
  1603                           
  1604                           ;auto.c: 144:             encenderMotor();
  1605  002EF2  EC67  F022         	call	_encenderMotor	;wreg free
  1606                           
  1607                           ;auto.c: 145:             enviarRS232("Motores encendidos!");
  1608  002EF6  0E4D               	movlw	low STR_3
  1609  002EF8  0100               	movlb	0	; () banked
  1610  002EFA  6F68               	movwf	enviarRS232@valores& (0+255),b
  1611  002EFC  0E0F               	movlw	high STR_3
  1612  002EFE  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1613  002F00  EC53  F01F         	call	_enviarRS232	;wreg free
  1614                           
  1615                           ;auto.c: 146:             break;
  1616  002F04  0012               	return	
  1617  002F06                     l7469:
  1618                           
  1619                           ; BSR set to: 1
  1620                           ;auto.c: 148:             atras();
  1621  002F06  EC74  F022         	call	_atras	;wreg free
  1622                           
  1623                           ;auto.c: 149:             encenderMotor();
  1624  002F0A  EC67  F022         	call	_encenderMotor	;wreg free
  1625                           
  1626                           ;auto.c: 150:             enviarRS232("Vehiculo en reversa!");
  1627  002F0E  0E38               	movlw	low STR_4
  1628  002F10  0100               	movlb	0	; () banked
  1629  002F12  6F68               	movwf	enviarRS232@valores& (0+255),b
  1630  002F14  0E0F               	movlw	high STR_4
  1631  002F16  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1632  002F18  EC53  F01F         	call	_enviarRS232	;wreg free
  1633                           
  1634                           ;auto.c: 151:             break;
  1635  002F1C  0012               	return	
  1636  002F1E                     l7475:
  1637                           
  1638                           ; BSR set to: 1
  1639                           ;auto.c: 153:             degree = estadoDirreccion(2);
  1640  002F1E  0E02               	movlw	2
  1641  002F20  ECD4  F01E         	call	_estadoDirreccion
  1642  002F24  C060  F1BA         	movff	?_estadoDirreccion,terminal@degree
  1643  002F28  C061  F1BB         	movff	?_estadoDirreccion+1,terminal@degree+1
  1644                           
  1645                           ;auto.c: 154:             dirreccion(degree);
  1646  002F2C  C1BA  F060         	movff	terminal@degree,dirreccion@degree
  1647  002F30  C1BB  F061         	movff	terminal@degree+1,dirreccion@degree+1
  1648  002F34  EC0B  F01E         	call	_dirreccion	;wreg free
  1649                           
  1650                           ;auto.c: 155:             break;
  1651  002F38  0012               	return	
  1652  002F3A                     l7477:
  1653                           
  1654                           ; BSR set to: 1
  1655                           ;auto.c: 157:             degree = estadoDirreccion(1);
  1656  002F3A  0E01               	movlw	1
  1657  002F3C  ECD4  F01E         	call	_estadoDirreccion
  1658  002F40  C060  F1BA         	movff	?_estadoDirreccion,terminal@degree
  1659  002F44  C061  F1BB         	movff	?_estadoDirreccion+1,terminal@degree+1
  1660                           
  1661                           ;auto.c: 158:             dirreccion(degree);
  1662  002F48  C1BA  F060         	movff	terminal@degree,dirreccion@degree
  1663  002F4C  C1BB  F061         	movff	terminal@degree+1,dirreccion@degree+1
  1664  002F50  EC0B  F01E         	call	_dirreccion	;wreg free
  1665                           
  1666                           ;auto.c: 159:             break;
  1667  002F54  0012               	return	
  1668  002F56                     l7479:
  1669                           
  1670                           ; BSR set to: 1
  1671                           ;auto.c: 161:             frenarMotor();
  1672  002F56  EC57  F022         	call	_frenarMotor	;wreg free
  1673                           
  1674                           ;auto.c: 162:             break;
  1675  002F5A  0012               	return	
  1676  002F5C                     l7481:
  1677                           
  1678                           ; BSR set to: 1
  1679                           ;auto.c: 164:             medicion = (comand[1] - 0x30)*100 + (comand[2] - 0x30)*10 + co
      +                          mand[3] - 0x30;
  1680  002F5C  EE20 F001          	lfsr	2,1
  1681  002F60  519D               	movf	terminal@comand& (0+255),w,b
  1682  002F62  26D9               	addwf	fsr2l,f,c
  1683  002F64  519E               	movf	(terminal@comand+1)& (0+255),w,b
  1684  002F66  22DA               	addwfc	fsr2h,f,c
  1685  002F68  50DF               	movf	indf2,w,c
  1686  002F6A  6F9F               	movwf	??_terminal& (0+255),b
  1687  002F6C  519F               	movf	??_terminal& (0+255),w,b
  1688  002F6E  0D64               	mullw	100
  1689  002F70  CFF3 F1A0          	movff	prodl,??_terminal+1
  1690  002F74  CFF4 F1A1          	movff	prodh,??_terminal+2
  1691  002F78  EE20 F002          	lfsr	2,2
  1692  002F7C  519D               	movf	terminal@comand& (0+255),w,b
  1693  002F7E  26D9               	addwf	fsr2l,f,c
  1694  002F80  519E               	movf	(terminal@comand+1)& (0+255),w,b
  1695  002F82  22DA               	addwfc	fsr2h,f,c
  1696  002F84  50DF               	movf	indf2,w,c
  1697  002F86  6FA2               	movwf	(??_terminal+3)& (0+255),b
  1698  002F88  51A2               	movf	(??_terminal+3)& (0+255),w,b
  1699  002F8A  0D0A               	mullw	10
  1700  002F8C  50F3               	movf	prodl,w,c
  1701  002F8E  27A0               	addwf	(??_terminal+1)& (0+255),f,b
  1702  002F90  50F4               	movf	prodh,w,c
  1703  002F92  23A1               	addwfc	(??_terminal+2)& (0+255),f,b
  1704  002F94  EE20 F003          	lfsr	2,3
  1705  002F98  519D               	movf	terminal@comand& (0+255),w,b
  1706  002F9A  26D9               	addwf	fsr2l,f,c
  1707  002F9C  519E               	movf	(terminal@comand+1)& (0+255),w,b
  1708  002F9E  22DA               	addwfc	fsr2h,f,c
  1709  002FA0  50DF               	movf	indf2,w,c
  1710  002FA2  6FA3               	movwf	(??_terminal+4)& (0+255),b
  1711  002FA4  51A3               	movf	(??_terminal+4)& (0+255),w,b
  1712  002FA6  27A0               	addwf	(??_terminal+1)& (0+255),f,b
  1713  002FA8  0E00               	movlw	0
  1714  002FAA  23A1               	addwfc	(??_terminal+2)& (0+255),f,b
  1715  002FAC  0E30               	movlw	48
  1716  002FAE  25A0               	addwf	(??_terminal+1)& (0+255),w,b
  1717  002FB0  6FB8               	movwf	terminal@medicion& (0+255),b
  1718  002FB2  0EEB               	movlw	235
  1719  002FB4  21A1               	addwfc	(??_terminal+2)& (0+255),w,b
  1720  002FB6  6FB9               	movwf	(terminal@medicion+1)& (0+255),b
  1721                           
  1722                           ; BSR set to: 1
  1723                           ;auto.c: 165:             fijarVelocidad(medicion);
  1724  002FB8  51B8               	movf	terminal@medicion& (0+255),w,b
  1725  002FBA  EC0A  F01A         	call	_fijarVelocidad
  1726                           
  1727                           ;auto.c: 166:             cambiarPWM();
  1728  002FBE  EC6E  F022         	call	_cambiarPWM	;wreg free
  1729                           
  1730                           ;auto.c: 167:             sprintf(texto, "Velocidad fijada al: %03u%c", medicion, '%');
  1731  002FC2  0EA4               	movlw	low terminal@texto
  1732  002FC4  0101               	movlb	1	; () banked
  1733  002FC6  6F95               	movwf	sprintf@s& (0+255),b
  1734  002FC8  0E01               	movlw	high terminal@texto
  1735  002FCA  6F96               	movwf	(sprintf@s+1)& (0+255),b
  1736  002FCC  0E01               	movlw	low STR_5
  1737  002FCE  6F97               	movwf	sprintf@fmt& (0+255),b
  1738  002FD0  0E0F               	movlw	high STR_5
  1739  002FD2  6F98               	movwf	(sprintf@fmt+1)& (0+255),b
  1740  002FD4  C1B8  F199         	movff	terminal@medicion,?_sprintf+4
  1741  002FD8  C1B9  F19A         	movff	terminal@medicion+1,?_sprintf+5
  1742  002FDC  0E00               	movlw	0
  1743  002FDE  6F9C               	movwf	(?_sprintf+7)& (0+255),b
  1744  002FE0  0E25               	movlw	37
  1745  002FE2  6F9B               	movwf	(?_sprintf+6)& (0+255),b
  1746  002FE4  EC29  F020         	call	_sprintf	;wreg free
  1747                           
  1748                           ;auto.c: 168:             enviarRS232(texto);
  1749  002FE8  0EA4               	movlw	low terminal@texto
  1750  002FEA  0100               	movlb	0	; () banked
  1751  002FEC  6F68               	movwf	enviarRS232@valores& (0+255),b
  1752  002FEE  0E01               	movlw	high terminal@texto
  1753  002FF0  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1754  002FF2  EC53  F01F         	call	_enviarRS232	;wreg free
  1755                           
  1756                           ;auto.c: 169:             break;
  1757  002FF6  0012               	return	
  1758  002FF8                     l7493:
  1759  002FF8  C19D  FFD9         	movff	terminal@comand,fsr2l
  1760  002FFC  C19E  FFDA         	movff	terminal@comand+1,fsr2h
  1761  003000  50DF               	movf	indf2,w,c
  1762  003002  0101               	movlb	1	; () banked
  1763  003004  6F9F               	movwf	??_terminal& (0+255),b
  1764  003006  6BA0               	clrf	(??_terminal+1)& (0+255),b
  1765                           
  1766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1767                           ; Switch size 1, requested type "simple"
  1768                           ; Number of cases is 1, Range of values is 0 to 0
  1769                           ; switch strategies available:
  1770                           ; Name         Instructions Cycles
  1771                           ; simple_byte            4     3 (average)
  1772                           ;	Chosen strategy is simple_byte
  1773  003008  51A0               	movf	(??_terminal+1)& (0+255),w,b
  1774  00300A  0A00               	xorlw	0	; case 0
  1775  00300C  A4D8               	btfss	status,2,c
  1776  00300E  0012               	return	
  1777                           
  1778                           ; BSR set to: 1
  1779                           ; Switch size 1, requested type "simple"
  1780                           ; Number of cases is 6, Range of values is 70 to 119
  1781                           ; switch strategies available:
  1782                           ; Name         Instructions Cycles
  1783                           ; simple_byte           19    10 (average)
  1784                           ;	Chosen strategy is simple_byte
  1785  003010  519F               	movf	??_terminal& (0+255),w,b
  1786  003012  0A46               	xorlw	70	; case 70
  1787  003014  B4D8               	btfsc	status,2,c
  1788  003016  D7A2               	goto	l7481
  1789  003018  0A27               	xorlw	39	; case 97
  1790  00301A  B4D8               	btfsc	status,2,c
  1791  00301C  D780               	goto	l7475
  1792  00301E  0A02               	xorlw	2	; case 99
  1793  003020  B4D8               	btfsc	status,2,c
  1794  003022  D799               	goto	l7479
  1795  003024  0A07               	xorlw	7	; case 100
  1796  003026  B4D8               	btfsc	status,2,c
  1797  003028  D788               	goto	l7477
  1798  00302A  0A17               	xorlw	23	; case 115
  1799  00302C  B4D8               	btfsc	status,2,c
  1800  00302E  D76B               	goto	l7469
  1801  003030  0A04               	xorlw	4	; case 119
  1802  003032  A4D8               	btfss	status,2,c
  1803  003034  0012               	return	
  1804  003036  D75B               	goto	l7463
  1805  003038                     __end_of_terminal:
  1806                           	opt callstack 0
  1807                           
  1808 ;; *************** function _sprintf *****************
  1809 ;; Defined at:
  1810 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  s               2   24[BANK1 ] PTR unsigned char 
  1813 ;;		 -> terminal@texto(20), main@texto(8), 
  1814 ;;  fmt             2   26[BANK1 ] PTR const unsigned char 
  1815 ;;		 -> STR_5(28), STR_1(10), 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  f               6  153[BANK0 ] struct _IO_FILE
  1818 ;;  ap              2  151[BANK0 ] PTR void [1]
  1819 ;;		 -> ?_sprintf(2), 
  1820 ;;  ret             2    0        int 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  2   24[BANK1 ] int 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1830 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1831 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1833 ;;      Totals:         0      10       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1834 ;;Total ram usage:       18 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    9
  1837 ;; This function calls:
  1838 ;;		_vfprintf
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;;		_terminal
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text2
  1846  004052                     __ptext2:
  1847                           	opt callstack 0
  1848  004052                     _sprintf:
  1849                           	opt callstack 20
  1850                           
  1851                           ;incstack = 0
  1852  004052  0E99               	movlw	low (?_sprintf+4)
  1853  004054  0100               	movlb	0	; () banked
  1854  004056  6FF7               	movwf	sprintf@ap& (0+255),b
  1855  004058  0E01               	movlw	high (?_sprintf+4)
  1856  00405A  6FF8               	movwf	(sprintf@ap+1)& (0+255),b
  1857  00405C  C195  F0F9         	movff	sprintf@s,sprintf@f
  1858  004060  C196  F0FA         	movff	sprintf@s+1,sprintf@f+1
  1859                           
  1860                           ; BSR set to: 0
  1861  004064  0E00               	movlw	0
  1862  004066  6FFC               	movwf	(sprintf@f+3)& (0+255),b
  1863  004068  0E00               	movlw	0
  1864  00406A  6FFB               	movwf	(sprintf@f+2)& (0+255),b
  1865                           
  1866                           ; BSR set to: 0
  1867  00406C  0E00               	movlw	0
  1868  00406E  6FFE               	movwf	(sprintf@f+5)& (0+255),b
  1869  004070  0E00               	movlw	0
  1870  004072  6FFD               	movwf	(sprintf@f+4)& (0+255),b
  1871                           
  1872                           ; BSR set to: 0
  1873  004074  0EF9               	movlw	low sprintf@f
  1874  004076  6FED               	movwf	vfprintf@fp& (0+255),b
  1875  004078  0E00               	movlw	high sprintf@f
  1876  00407A  6FEE               	movwf	(vfprintf@fp+1)& (0+255),b
  1877  00407C  C197  F0EF         	movff	sprintf@fmt,vfprintf@fmt
  1878  004080  C198  F0F0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1879  004084  0EF7               	movlw	low sprintf@ap
  1880  004086  6FF1               	movwf	vfprintf@ap& (0+255),b
  1881  004088  0E00               	movlw	high sprintf@ap
  1882  00408A  6FF2               	movwf	(vfprintf@ap+1)& (0+255),b
  1883  00408C  ECF8  F01F         	call	_vfprintf	;wreg free
  1884  004090  0100               	movlb	0	; () banked
  1885  004092  51FB               	movf	(sprintf@f+2)& (0+255),w,b
  1886  004094  0101               	movlb	1	; () banked
  1887  004096  2595               	addwf	sprintf@s& (0+255),w,b
  1888  004098  6ED9               	movwf	fsr2l,c
  1889  00409A  0100               	movlb	0	; () banked
  1890  00409C  51FC               	movf	(sprintf@f+3)& (0+255),w,b
  1891  00409E  0101               	movlb	1	; () banked
  1892  0040A0  2196               	addwfc	(sprintf@s+1)& (0+255),w,b
  1893  0040A2  6EDA               	movwf	fsr2h,c
  1894  0040A4  0E00               	movlw	0
  1895  0040A6  6EDF               	movwf	indf2,c
  1896                           
  1897                           ; BSR set to: 1
  1898  0040A8  0012               	return		;funcret
  1899  0040AA                     __end_of_sprintf:
  1900                           	opt callstack 0
  1901                           
  1902 ;; *************** function _vfprintf *****************
  1903 ;; Defined at:
  1904 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  fp              2  141[BANK0 ] PTR struct _IO_FILE
  1907 ;;		 -> sprintf@f(6), 
  1908 ;;  fmt             2  143[BANK0 ] PTR const unsigned char 
  1909 ;;		 -> STR_5(28), STR_1(10), 
  1910 ;;  ap              2  145[BANK0 ] PTR PTR void 
  1911 ;;		 -> sprintf@ap(2), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  cfmt            2  147[BANK0 ] PTR unsigned char 
  1914 ;;		 -> STR_5(28), STR_1(10), 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  2  141[BANK0 ] int 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1924 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1925 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1928 ;;Total ram usage:        8 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    8
  1931 ;; This function calls:
  1932 ;;		_vfpfcnvrt
  1933 ;; This function is called by:
  1934 ;;		_sprintf
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text3
  1939  003FF0                     __ptext3:
  1940                           	opt callstack 0
  1941  003FF0                     _vfprintf:
  1942                           	opt callstack 20
  1943                           
  1944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1945                           
  1946                           ; BSR set to: 1
  1947                           ;incstack = 0
  1948  003FF0  C0EF  F0F3         	movff	vfprintf@fmt,vfprintf@cfmt
  1949  003FF4  C0F0  F0F4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1950                           
  1951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1952  003FF8  0E00               	movlw	0
  1953  003FFA  0101               	movlb	1	; () banked
  1954  003FFC  6F1D               	movwf	(_nout+1)& (0+255),b
  1955  003FFE  0E00               	movlw	0
  1956  004000  6F1C               	movwf	_nout& (0+255),b
  1957                           
  1958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1959  004002  D017               	goto	l7245
  1960  004004                     l7243:
  1961                           
  1962                           ; BSR set to: 1
  1963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1964  004004  C0ED  F0E3         	movff	vfprintf@fp,vfpfcnvrt@fp
  1965  004008  C0EE  F0E4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1966  00400C  0EF3               	movlw	low vfprintf@cfmt
  1967  00400E  0100               	movlb	0	; () banked
  1968  004010  6FE5               	movwf	vfpfcnvrt@fmt& (0+255),b
  1969  004012  0E00               	movlw	high vfprintf@cfmt
  1970  004014  6FE6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1971  004016  C0F1  F0E7         	movff	vfprintf@ap,vfpfcnvrt@ap
  1972  00401A  C0F2  F0E8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1973  00401E  EC86  F00C         	call	_vfpfcnvrt	;wreg free
  1974  004022  0100               	movlb	0	; () banked
  1975  004024  51E3               	movf	?_vfpfcnvrt& (0+255),w,b
  1976  004026  0101               	movlb	1	; () banked
  1977  004028  271C               	addwf	_nout& (0+255),f,b
  1978  00402A  0100               	movlb	0	; () banked
  1979  00402C  51E4               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1980  00402E  0101               	movlb	1	; () banked
  1981  004030  231D               	addwfc	(_nout+1)& (0+255),f,b
  1982  004032                     l7245:
  1983                           
  1984                           ; BSR set to: 1
  1985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1986  004032  C0F3  FFF6         	movff	vfprintf@cfmt,tblptrl
  1987  004036  C0F4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1988  00403A                     	if	0	;tblptru may be non-zero
  1989  00403A                     	endif
  1990  00403A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1991  00403A  0E00               	movlw	low (__mediumconst shr (0+16))
  1992  00403C  6EF8               	movwf	tblptru,c
  1993  00403E                     	endif
  1994  00403E  0008               	tblrd		*
  1995  004040  50F5               	movf	tablat,w,c
  1996  004042  0900               	iorlw	0
  1997  004044  A4D8               	btfss	status,2,c
  1998  004046  D7DE               	goto	l7243
  1999                           
  2000                           ; BSR set to: 1
  2001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2002  004048  C11C  F0ED         	movff	_nout,?_vfprintf
  2003  00404C  C11D  F0EE         	movff	_nout+1,?_vfprintf+1
  2004                           
  2005                           ; BSR set to: 1
  2006  004050  0012               	return		;funcret
  2007  004052                     __end_of_vfprintf:
  2008                           	opt callstack 0
  2009                           
  2010 ;; *************** function _vfpfcnvrt *****************
  2011 ;; Defined at:
  2012 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  fp              2  131[BANK0 ] PTR struct _IO_FILE
  2015 ;;		 -> sprintf@f(6), 
  2016 ;;  fmt             2  133[BANK0 ] PTR PTR unsigned char 
  2017 ;;		 -> vfprintf@cfmt(2), 
  2018 ;;  ap              2  135[BANK0 ] PTR PTR void 
  2019 ;;		 -> sprintf@ap(2), 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  llu             8    0[BANK1 ] unsigned long long 
  2022 ;;  ll              8    0        long long 
  2023 ;;  f               4   16[BANK1 ] long long 
  2024 ;;  ct              3   20[BANK1 ] unsigned char [3]
  2025 ;;  vp              3    0        PTR void 
  2026 ;;  cp              3    0        PTR unsigned char 
  2027 ;;  done            2    8[BANK1 ] int 
  2028 ;;  i               2    0        int 
  2029 ;;  c               1   23[BANK1 ] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  2  131[BANK0 ] int 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2039 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2040 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2041 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2042 ;;      Totals:         0      10      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2043 ;;Total ram usage:       34 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    7
  2046 ;; This function calls:
  2047 ;;		_atoi
  2048 ;;		_ctoa
  2049 ;;		_efgtoa
  2050 ;;		_fputc
  2051 ;;		_isdigit
  2052 ;;		_isupper
  2053 ;;		_strncmp
  2054 ;;		_tolower
  2055 ;;		_utoa
  2056 ;; This function is called by:
  2057 ;;		_vfprintf
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text4
  2062  00190C                     __ptext4:
  2063                           	opt callstack 0
  2064  00190C                     _vfpfcnvrt:
  2065                           	opt callstack 20
  2066                           
  2067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2068                           
  2069                           ; BSR set to: 1
  2070                           ;incstack = 0
  2071  00190C  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2072  001910  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2073  001914  CFDE FFF6          	movff	postinc2,tblptrl
  2074  001918  CFDD FFF7          	movff	postdec2,tblptrh
  2075  00191C                     	if	0	;tblptru may be non-zero
  2076  00191C                     	endif
  2077  00191C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2078  00191C  0E00               	movlw	low (__mediumconst shr (0+16))
  2079  00191E  6EF8               	movwf	tblptru,c
  2080  001920                     	endif
  2081  001920  0008               	tblrd		*
  2082  001922  50F5               	movf	tablat,w,c
  2083  001924  0A25               	xorlw	37
  2084  001926  A4D8               	btfss	status,2,c
  2085  001928  D308               	goto	l7201
  2086                           
  2087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2088  00192A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2089  00192E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2090  001932  2ADE               	incf	postinc2,f,c
  2091  001934  0E00               	movlw	0
  2092  001936  22DD               	addwfc	postdec2,f,c
  2093                           
  2094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2095  001938  0E00               	movlw	0
  2096  00193A  6E37               	movwf	_width+1,c
  2097  00193C  0E00               	movlw	0
  2098  00193E  6E36               	movwf	_width,c
  2099  001940  C036  F03A         	movff	_width,_flags
  2100  001944  C037  F03B         	movff	_width+1,_flags+1
  2101                           
  2102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2103  001948  6838               	setf	_prec,c
  2104  00194A  6839               	setf	_prec+1,c
  2105                           
  2106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2107  00194C  0E00               	movlw	0
  2108  00194E  0101               	movlb	1	; () banked
  2109  001950  6F86               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2110  001952  0E00               	movlw	0
  2111  001954  D015               	goto	L1
  2112  001956                     l7063:
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2116  001956  803A               	bsf	_flags,0,c
  2117  001958                     l7065:
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2121  001958  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2122  00195C  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2123  001960  2ADE               	incf	postinc2,f,c
  2124  001962  0E00               	movlw	0
  2125  001964  22DD               	addwfc	postdec2,f,c
  2126                           
  2127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2128  001966  D032               	goto	l7089
  2129  001968                     l7067:
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2133  001968  823A               	bsf	_flags,1,c
  2134  00196A  D7F6               	goto	l7065
  2135  00196C                     l7071:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2139  00196C  843A               	bsf	_flags,2,c
  2140  00196E  D7F4               	goto	l7065
  2141  001970                     l7075:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2145  001970  863A               	bsf	_flags,3,c
  2146  001972  D7F2               	goto	l7065
  2147  001974                     l7079:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2151  001974  883A               	bsf	_flags,4,c
  2152  001976  D7F0               	goto	l7065
  2153  001978                     l7083:
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2157  001978  0E00               	movlw	0
  2158  00197A  0101               	movlb	1	; () banked
  2159  00197C  6F86               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2160  00197E  0E01               	movlw	1
  2161  001980                     L1:
  2162  001980  6F85               	movwf	vfpfcnvrt@done& (0+255),b
  2163                           
  2164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2165  001982  D024               	goto	l7089
  2166  001984                     l7087:
  2167                           
  2168                           ; BSR set to: 1
  2169  001984  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2170  001988  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2171  00198C  CFDE FFF6          	movff	postinc2,tblptrl
  2172  001990  CFDD FFF7          	movff	postdec2,tblptrh
  2173  001994                     	if	0	;tblptru may be non-zero
  2174  001994                     	endif
  2175  001994                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2176  001994  0E00               	movlw	low (__mediumconst shr (0+16))
  2177  001996  6EF8               	movwf	tblptru,c
  2178  001998                     	endif
  2179  001998  0008               	tblrd		*
  2180  00199A  50F5               	movf	tablat,w,c
  2181  00199C  0100               	movlb	0	; () banked
  2182  00199E  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2183  0019A0  6BEA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2184                           
  2185                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2186                           ; Switch size 1, requested type "simple"
  2187                           ; Number of cases is 1, Range of values is 0 to 0
  2188                           ; switch strategies available:
  2189                           ; Name         Instructions Cycles
  2190                           ; simple_byte            4     3 (average)
  2191                           ;	Chosen strategy is simple_byte
  2192  0019A2  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2193  0019A4  0A00               	xorlw	0	; case 0
  2194  0019A6  A4D8               	btfss	status,2,c
  2195  0019A8  D7E7               	goto	l7083
  2196                           
  2197                           ; BSR set to: 0
  2198                           ; Switch size 1, requested type "simple"
  2199                           ; Number of cases is 5, Range of values is 32 to 48
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte           16     9 (average)
  2203                           ;	Chosen strategy is simple_byte
  2204  0019AA  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2205  0019AC  0A20               	xorlw	32	; case 32
  2206  0019AE  B4D8               	btfsc	status,2,c
  2207  0019B0  D7DF               	goto	l7075
  2208  0019B2  0A03               	xorlw	3	; case 35
  2209  0019B4  B4D8               	btfsc	status,2,c
  2210  0019B6  D7DE               	goto	l7079
  2211  0019B8  0A08               	xorlw	8	; case 43
  2212  0019BA  B4D8               	btfsc	status,2,c
  2213  0019BC  D7D7               	goto	l7071
  2214  0019BE  0A06               	xorlw	6	; case 45
  2215  0019C0  B4D8               	btfsc	status,2,c
  2216  0019C2  D7C9               	goto	l7063
  2217  0019C4  0A1D               	xorlw	29	; case 48
  2218  0019C6  B4D8               	btfsc	status,2,c
  2219  0019C8  D7CF               	goto	l7067
  2220  0019CA  D7D6               	goto	l7083
  2221  0019CC                     l7089:
  2222                           
  2223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2224  0019CC  0101               	movlb	1	; () banked
  2225  0019CE  5185               	movf	vfpfcnvrt@done& (0+255),w,b
  2226  0019D0  1186               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2227  0019D2  B4D8               	btfsc	status,2,c
  2228  0019D4  D7D7               	goto	l7087
  2229                           
  2230                           ; BSR set to: 1
  2231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2232  0019D6  B03A               	btfsc	_flags,0,c
  2233                           
  2234                           ; BSR set to: 1
  2235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2236  0019D8  923A               	bcf	_flags,1,c
  2237                           
  2238                           ; BSR set to: 1
  2239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2240  0019DA  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2241  0019DE  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2242  0019E2  CFDE FFF6          	movff	postinc2,tblptrl
  2243  0019E6  CFDD FFF7          	movff	postdec2,tblptrh
  2244  0019EA                     	if	0	;tblptru may be non-zero
  2245  0019EA                     	endif
  2246  0019EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2247  0019EA  0E00               	movlw	low (__mediumconst shr (0+16))
  2248  0019EC  6EF8               	movwf	tblptru,c
  2249  0019EE                     	endif
  2250  0019EE  0008               	tblrd		*
  2251  0019F0  50F5               	movf	tablat,w,c
  2252  0019F2  0A2A               	xorlw	42
  2253  0019F4  A4D8               	btfss	status,2,c
  2254  0019F6  D023               	goto	l7101
  2255                           
  2256                           ; BSR set to: 1
  2257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2258  0019F8  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2259  0019FC  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2260  001A00  2ADE               	incf	postinc2,f,c
  2261  001A02  0E00               	movlw	0
  2262  001A04  22DD               	addwfc	postdec2,f,c
  2263                           
  2264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2265  001A06  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2266  001A0A  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2267  001A0E  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2268  001A12  0E02               	movlw	2
  2269  001A14  26DE               	addwf	postinc2,f,c
  2270  001A16  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2271  001A1A  0E00               	movlw	0
  2272  001A1C  22DD               	addwfc	postdec2,f,c
  2273  001A1E  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2274  001A22  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2275  001A26  CFDE F036          	movff	postinc2,_width
  2276  001A2A  CFDD F037          	movff	postdec2,_width+1
  2277                           
  2278                           ; BSR set to: 1
  2279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2280  001A2E  AE37               	btfss	_width+1,7,c
  2281  001A30  D043               	goto	u9220
  2282                           
  2283                           ; BSR set to: 1
  2284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2285  001A32  803A               	bsf	_flags,0,c
  2286                           
  2287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2288  001A34  6C36               	negf	_width,c
  2289  001A36  1E37               	comf	_width+1,f,c
  2290  001A38  B0D8               	btfsc	status,0,c
  2291  001A3A  2A37               	incf	_width+1,f,c
  2292  001A3C  D03D               	goto	u9220
  2293  001A3E                     l7101:
  2294                           
  2295                           ; BSR set to: 1
  2296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2297  001A3E  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2298  001A42  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2299  001A46  CFDE F067          	movff	postinc2,atoi@s
  2300  001A4A  CFDD F068          	movff	postdec2,atoi@s+1
  2301  001A4E  EC1C  F018         	call	_atoi	;wreg free
  2302  001A52  C067  F036         	movff	?_atoi,_width
  2303  001A56  C068  F037         	movff	?_atoi+1,_width+1
  2304                           
  2305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2306  001A5A  D007               	goto	l7105
  2307  001A5C                     l7103:
  2308                           
  2309                           ; BSR set to: 1
  2310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2311  001A5C  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2312  001A60  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2313  001A64  2ADE               	incf	postinc2,f,c
  2314  001A66  0E00               	movlw	0
  2315  001A68  22DD               	addwfc	postdec2,f,c
  2316  001A6A                     l7105:
  2317  001A6A  0ED0               	movlw	208
  2318  001A6C  0100               	movlb	0	; () banked
  2319  001A6E  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2320  001A70  0EFF               	movlw	255
  2321  001A72  6FEA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2322  001A74  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2323  001A78  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2324  001A7C  CFDE FFF6          	movff	postinc2,tblptrl
  2325  001A80  CFDD FFF7          	movff	postdec2,tblptrh
  2326  001A84                     	if	0	;tblptru may be non-zero
  2327  001A84                     	endif
  2328  001A84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2329  001A84  0E00               	movlw	low (__mediumconst shr (0+16))
  2330  001A86  6EF8               	movwf	tblptru,c
  2331  001A88                     	endif
  2332  001A88  0008               	tblrd		*
  2333  001A8A  50F5               	movf	tablat,w,c
  2334  001A8C  6FEB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2335  001A8E  6BEC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2336  001A90  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2337  001A92  27EB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2338  001A94  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2339  001A96  23EC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2340  001A98  51EC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2341  001A9A  E106               	bnz	u9200
  2342  001A9C  0E0A               	movlw	10
  2343  001A9E  5DEB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2344  001AA0  B0D8               	btfsc	status,0,c
  2345  001AA2  D002               	goto	u9200
  2346  001AA4  0E01               	movlw	1
  2347  001AA6  D001               	goto	u9210
  2348  001AA8                     u9200:
  2349  001AA8  0E00               	movlw	0
  2350  001AAA                     u9210:
  2351  001AAA  0101               	movlb	1	; () banked
  2352  001AAC  6F87               	movwf	_vfpfcnvrt$1338& (0+255),b
  2353  001AAE  6B88               	clrf	(_vfpfcnvrt$1338+1)& (0+255),b
  2354                           
  2355                           ; BSR set to: 1
  2356  001AB0  5187               	movf	_vfpfcnvrt$1338& (0+255),w,b
  2357  001AB2  1188               	iorwf	(_vfpfcnvrt$1338+1)& (0+255),w,b
  2358  001AB4  A4D8               	btfss	status,2,c
  2359  001AB6  D7D2               	goto	l7103
  2360  001AB8                     u9220:
  2361                           
  2362                           ; BSR set to: 1
  2363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2364  001AB8  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2365  001ABC  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2366  001AC0  CFDE FFF6          	movff	postinc2,tblptrl
  2367  001AC4  CFDD FFF7          	movff	postdec2,tblptrh
  2368  001AC8                     	if	0	;tblptru may be non-zero
  2369  001AC8                     	endif
  2370  001AC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2371  001AC8  0E00               	movlw	low (__mediumconst shr (0+16))
  2372  001ACA  6EF8               	movwf	tblptru,c
  2373  001ACC                     	endif
  2374  001ACC  0008               	tblrd		*
  2375  001ACE  50F5               	movf	tablat,w,c
  2376  001AD0  0A2E               	xorlw	46
  2377  001AD2  A4D8               	btfss	status,2,c
  2378  001AD4  D073               	goto	u9270
  2379                           
  2380                           ; BSR set to: 1
  2381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2382  001AD6  0E00               	movlw	0
  2383  001AD8  6E39               	movwf	_prec+1,c
  2384  001ADA  0E00               	movlw	0
  2385  001ADC  6E38               	movwf	_prec,c
  2386                           
  2387                           ; BSR set to: 1
  2388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2389  001ADE  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2390  001AE2  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2391  001AE6  2ADE               	incf	postinc2,f,c
  2392  001AE8  0E00               	movlw	0
  2393  001AEA  22DD               	addwfc	postdec2,f,c
  2394                           
  2395                           ; BSR set to: 1
  2396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2397  001AEC  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2398  001AF0  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2399  001AF4  CFDE FFF6          	movff	postinc2,tblptrl
  2400  001AF8  CFDD FFF7          	movff	postdec2,tblptrh
  2401  001AFC                     	if	0	;tblptru may be non-zero
  2402  001AFC                     	endif
  2403  001AFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2404  001AFC  0E00               	movlw	low (__mediumconst shr (0+16))
  2405  001AFE  6EF8               	movwf	tblptru,c
  2406  001B00                     	endif
  2407  001B00  0008               	tblrd		*
  2408  001B02  50F5               	movf	tablat,w,c
  2409  001B04  0A2A               	xorlw	42
  2410  001B06  A4D8               	btfss	status,2,c
  2411  001B08  D01C               	goto	l7121
  2412                           
  2413                           ; BSR set to: 1
  2414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2415  001B0A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2416  001B0E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2417  001B12  2ADE               	incf	postinc2,f,c
  2418  001B14  0E00               	movlw	0
  2419  001B16  22DD               	addwfc	postdec2,f,c
  2420                           
  2421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2422  001B18  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2423  001B1C  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2424  001B20  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2425  001B24  0E02               	movlw	2
  2426  001B26  26DE               	addwf	postinc2,f,c
  2427  001B28  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2428  001B2C  0E00               	movlw	0
  2429  001B2E  22DD               	addwfc	postdec2,f,c
  2430  001B30  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2431  001B34  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2432  001B38  CFDE F038          	movff	postinc2,_prec
  2433  001B3C  CFDD F039          	movff	postdec2,_prec+1
  2434                           
  2435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2436  001B40  D03D               	goto	u9270
  2437  001B42                     l7121:
  2438                           
  2439                           ; BSR set to: 1
  2440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2441  001B42  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2442  001B46  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2443  001B4A  CFDE F067          	movff	postinc2,atoi@s
  2444  001B4E  CFDD F068          	movff	postdec2,atoi@s+1
  2445  001B52  EC1C  F018         	call	_atoi	;wreg free
  2446  001B56  C067  F038         	movff	?_atoi,_prec
  2447  001B5A  C068  F039         	movff	?_atoi+1,_prec+1
  2448                           
  2449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2450  001B5E  D007               	goto	l7125
  2451  001B60                     l7123:
  2452                           
  2453                           ; BSR set to: 1
  2454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2455  001B60  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2456  001B64  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2457  001B68  2ADE               	incf	postinc2,f,c
  2458  001B6A  0E00               	movlw	0
  2459  001B6C  22DD               	addwfc	postdec2,f,c
  2460  001B6E                     l7125:
  2461  001B6E  0ED0               	movlw	208
  2462  001B70  0100               	movlb	0	; () banked
  2463  001B72  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2464  001B74  0EFF               	movlw	255
  2465  001B76  6FEA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2466  001B78  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2467  001B7C  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2468  001B80  CFDE FFF6          	movff	postinc2,tblptrl
  2469  001B84  CFDD FFF7          	movff	postdec2,tblptrh
  2470  001B88                     	if	0	;tblptru may be non-zero
  2471  001B88                     	endif
  2472  001B88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2473  001B88  0E00               	movlw	low (__mediumconst shr (0+16))
  2474  001B8A  6EF8               	movwf	tblptru,c
  2475  001B8C                     	endif
  2476  001B8C  0008               	tblrd		*
  2477  001B8E  50F5               	movf	tablat,w,c
  2478  001B90  6FEB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2479  001B92  6BEC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2480  001B94  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2481  001B96  27EB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2482  001B98  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2483  001B9A  23EC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2484  001B9C  51EC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2485  001B9E  E106               	bnz	u9250
  2486  001BA0  0E0A               	movlw	10
  2487  001BA2  5DEB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2488  001BA4  B0D8               	btfsc	status,0,c
  2489  001BA6  D002               	goto	u9250
  2490  001BA8  0E01               	movlw	1
  2491  001BAA  D001               	goto	u9260
  2492  001BAC                     u9250:
  2493  001BAC  0E00               	movlw	0
  2494  001BAE                     u9260:
  2495  001BAE  0101               	movlb	1	; () banked
  2496  001BB0  6F89               	movwf	_vfpfcnvrt$1339& (0+255),b
  2497  001BB2  6B8A               	clrf	(_vfpfcnvrt$1339+1)& (0+255),b
  2498                           
  2499                           ; BSR set to: 1
  2500  001BB4  5189               	movf	_vfpfcnvrt$1339& (0+255),w,b
  2501  001BB6  118A               	iorwf	(_vfpfcnvrt$1339+1)& (0+255),w,b
  2502  001BB8  A4D8               	btfss	status,2,c
  2503  001BBA  D7D2               	goto	l7123
  2504  001BBC                     u9270:
  2505                           
  2506                           ; BSR set to: 1
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2508  001BBC  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2509  001BC0  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2510  001BC4  CFDE FFF6          	movff	postinc2,tblptrl
  2511  001BC8  CFDD FFF7          	movff	postdec2,tblptrh
  2512  001BCC                     	if	0	;tblptru may be non-zero
  2513  001BCC                     	endif
  2514  001BCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2515  001BCC  0E00               	movlw	low (__mediumconst shr (0+16))
  2516  001BCE  6EF8               	movwf	tblptru,c
  2517  001BD0                     	endif
  2518  001BD0  0008               	tblrd		*
  2519  001BD2  50F5               	movf	tablat,w,c
  2520  001BD4  0100               	movlb	0	; () banked
  2521  001BD6  6F66               	movwf	tolower@c& (0+255),b
  2522  001BD8  6B67               	clrf	(tolower@c+1)& (0+255),b
  2523  001BDA  ECD1  F020         	call	_tolower	;wreg free
  2524  001BDE  0100               	movlb	0	; () banked
  2525  001BE0  5166               	movf	?_tolower& (0+255),w,b
  2526  001BE2  0101               	movlb	1	; () banked
  2527  001BE4  6F91               	movwf	vfpfcnvrt@ct& (0+255),b
  2528                           
  2529                           ; BSR set to: 1
  2530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2531  001BE6  5191               	movf	vfpfcnvrt@ct& (0+255),w,b
  2532  001BE8  B4D8               	btfsc	status,2,c
  2533  001BEA  D03D               	goto	l7141
  2534                           
  2535                           ; BSR set to: 1
  2536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2537  001BEC  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2538  001BF0  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2539  001BF4  CFDE F0E9          	movff	postinc2,??_vfpfcnvrt
  2540  001BF8  CFDD F0EA          	movff	postdec2,??_vfpfcnvrt+1
  2541  001BFC  0E01               	movlw	1
  2542  001BFE  0100               	movlb	0	; () banked
  2543  001C00  27E9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2544  001C02  0E00               	movlw	0
  2545  001C04  23EA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2546  001C06  C0E9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2547  001C0A  C0EA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2548  001C0E                     	if	0	;tblptru may be non-zero
  2549  001C0E                     	endif
  2550  001C0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2551  001C0E  0E00               	movlw	low (__mediumconst shr (0+16))
  2552  001C10  6EF8               	movwf	tblptru,c
  2553  001C12                     	endif
  2554  001C12  0008               	tblrd		*
  2555  001C14  50F5               	movf	tablat,w,c
  2556  001C16  6F66               	movwf	tolower@c& (0+255),b
  2557  001C18  6B67               	clrf	(tolower@c+1)& (0+255),b
  2558  001C1A  ECD1  F020         	call	_tolower	;wreg free
  2559  001C1E  0100               	movlb	0	; () banked
  2560  001C20  5166               	movf	?_tolower& (0+255),w,b
  2561  001C22  0101               	movlb	1	; () banked
  2562  001C24  6F92               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2563                           
  2564                           ; BSR set to: 1
  2565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2566  001C26  5192               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2567  001C28  B4D8               	btfsc	status,2,c
  2568  001C2A  D01D               	goto	l7141
  2569                           
  2570                           ; BSR set to: 1
  2571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2572  001C2C  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2573  001C30  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2574  001C34  CFDE F0E9          	movff	postinc2,??_vfpfcnvrt
  2575  001C38  CFDD F0EA          	movff	postdec2,??_vfpfcnvrt+1
  2576  001C3C  0E02               	movlw	2
  2577  001C3E  0100               	movlb	0	; () banked
  2578  001C40  27E9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2579  001C42  0E00               	movlw	0
  2580  001C44  23EA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2581  001C46  C0E9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2582  001C4A  C0EA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2583  001C4E                     	if	0	;tblptru may be non-zero
  2584  001C4E                     	endif
  2585  001C4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2586  001C4E  0E00               	movlw	low (__mediumconst shr (0+16))
  2587  001C50  6EF8               	movwf	tblptru,c
  2588  001C52                     	endif
  2589  001C52  0008               	tblrd		*
  2590  001C54  50F5               	movf	tablat,w,c
  2591  001C56  6F66               	movwf	tolower@c& (0+255),b
  2592  001C58  6B67               	clrf	(tolower@c+1)& (0+255),b
  2593  001C5A  ECD1  F020         	call	_tolower	;wreg free
  2594  001C5E  0100               	movlb	0	; () banked
  2595  001C60  5166               	movf	?_tolower& (0+255),w,b
  2596  001C62  0101               	movlb	1	; () banked
  2597  001C64  6F93               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2598  001C66                     l7141:
  2599                           
  2600                           ; BSR set to: 1
  2601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  2602  001C66  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2603  001C6A  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2604  001C6E  CFDE FFF6          	movff	postinc2,tblptrl
  2605  001C72  CFDD FFF7          	movff	postdec2,tblptrh
  2606  001C76                     	if	0	;tblptru may be non-zero
  2607  001C76                     	endif
  2608  001C76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2609  001C76  0E00               	movlw	low (__mediumconst shr (0+16))
  2610  001C78  6EF8               	movwf	tblptru,c
  2611  001C7A                     	endif
  2612  001C7A  0008               	tblrd		*
  2613  001C7C  50F5               	movf	tablat,w,c
  2614  001C7E  0A63               	xorlw	99
  2615  001C80  A4D8               	btfss	status,2,c
  2616  001C82  D026               	goto	l7149
  2617                           
  2618                           ; BSR set to: 1
  2619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  2620  001C84  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2621  001C88  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2622  001C8C  2ADE               	incf	postinc2,f,c
  2623  001C8E  0E00               	movlw	0
  2624  001C90  22DD               	addwfc	postdec2,f,c
  2625                           
  2626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2627  001C92  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2628  001C96  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2629  001C9A  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2630  001C9E  0E02               	movlw	2
  2631  001CA0  26DE               	addwf	postinc2,f,c
  2632  001CA2  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2633  001CA6  0E00               	movlw	0
  2634  001CA8  22DD               	addwfc	postdec2,f,c
  2635  001CAA  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2636  001CAE  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2637  001CB2  50DF               	movf	indf2,w,c
  2638  001CB4  6F94               	movwf	vfpfcnvrt@c& (0+255),b
  2639                           
  2640                           ; BSR set to: 1
  2641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  2642  001CB6  C0E3  F07B         	movff	vfpfcnvrt@fp,ctoa@fp
  2643  001CBA  C0E4  F07C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2644  001CBE  C194  F07D         	movff	vfpfcnvrt@c,ctoa@c
  2645  001CC2  EC80  F020         	call	_ctoa	;wreg free
  2646  001CC6  C07B  F0E3         	movff	?_ctoa,?_vfpfcnvrt
  2647  001CCA  C07C  F0E4         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2648  001CCE  0012               	return	
  2649  001CD0                     l7149:
  2650                           
  2651                           ; BSR set to: 1
  2652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2653  001CD0  0E66               	movlw	102
  2654  001CD2  1991               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2655  001CD4  A4D8               	btfss	status,2,c
  2656  001CD6  D041               	goto	l7161
  2657                           
  2658                           ; BSR set to: 1
  2659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2660  001CD8  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2661  001CDC  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2662  001CE0  CFDE FFF6          	movff	postinc2,tblptrl
  2663  001CE4  CFDD FFF7          	movff	postdec2,tblptrh
  2664  001CE8                     	if	0	;tblptru may be non-zero
  2665  001CE8                     	endif
  2666  001CE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2667  001CE8  0E00               	movlw	low (__mediumconst shr (0+16))
  2668  001CEA  6EF8               	movwf	tblptru,c
  2669  001CEC                     	endif
  2670  001CEC  0008               	tblrd		*
  2671  001CEE  CFF5 F194          	movff	tablat,vfpfcnvrt@c
  2672                           
  2673                           ; BSR set to: 1
  2674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2675  001CF2  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2676  001CF6  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2677  001CFA  2ADE               	incf	postinc2,f,c
  2678  001CFC  0E00               	movlw	0
  2679  001CFE  22DD               	addwfc	postdec2,f,c
  2680                           
  2681                           ; BSR set to: 1
  2682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2683  001D00  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2684  001D04  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2685  001D08  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2686  001D0C  0E04               	movlw	4
  2687  001D0E  26DE               	addwf	postinc2,f,c
  2688  001D10  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2689  001D14  0E00               	movlw	0
  2690  001D16  22DD               	addwfc	postdec2,f,c
  2691  001D18  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2692  001D1C  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2693  001D20  CFDE F18D          	movff	postinc2,vfpfcnvrt@f
  2694  001D24  CFDE F18E          	movff	postinc2,vfpfcnvrt@f+1
  2695  001D28  CFDE F18F          	movff	postinc2,vfpfcnvrt@f+2
  2696  001D2C  CFDE F190          	movff	postinc2,vfpfcnvrt@f+3
  2697  001D30                     l7157:
  2698                           
  2699                           ; BSR set to: 1
  2700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2701  001D30  C0E3  F09F         	movff	vfpfcnvrt@fp,efgtoa@fp
  2702  001D34  C0E4  F0A0         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2703  001D38  C18D  F0A1         	movff	vfpfcnvrt@f,efgtoa@f
  2704  001D3C  C18E  F0A2         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2705  001D40  C18F  F0A3         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2706  001D44  C190  F0A4         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2707  001D48  C194  F0A5         	movff	vfpfcnvrt@c,efgtoa@c
  2708  001D4C  ECC4  F007         	call	_efgtoa	;wreg free
  2709  001D50  C09F  F0E3         	movff	?_efgtoa,?_vfpfcnvrt
  2710  001D54  C0A0  F0E4         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2711  001D58  0012               	return	
  2712  001D5A                     l7161:
  2713                           
  2714                           ; BSR set to: 1
  2715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2716  001D5A  0E91               	movlw	low vfpfcnvrt@ct
  2717  001D5C  0100               	movlb	0	; () banked
  2718  001D5E  6F60               	movwf	strncmp@_l& (0+255),b
  2719  001D60  0E01               	movlw	high vfpfcnvrt@ct
  2720  001D62  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2721  001D64  0E83               	movlw	low STR_15
  2722  001D66  6F62               	movwf	strncmp@_r& (0+255),b
  2723  001D68  0E0F               	movlw	high STR_15
  2724  001D6A  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2725  001D6C  0E00               	movlw	0
  2726  001D6E  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2727  001D70  0E02               	movlw	2
  2728  001D72  6F64               	movwf	strncmp@n& (0+255),b
  2729  001D74  ECCE  F01C         	call	_strncmp	;wreg free
  2730  001D78  0100               	movlb	0	; () banked
  2731  001D7A  5160               	movf	?_strncmp& (0+255),w,b
  2732  001D7C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2733  001D7E  A4D8               	btfss	status,2,c
  2734  001D80  D05A               	goto	l7177
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2738  001D82  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2739  001D86  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2740  001D8A  CFDE F0E9          	movff	postinc2,??_vfpfcnvrt
  2741  001D8E  CFDD F0EA          	movff	postdec2,??_vfpfcnvrt+1
  2742  001D92  0E01               	movlw	1
  2743  001D94  27E9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2744  001D96  0E00               	movlw	0
  2745  001D98  23EA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2746  001D9A  C0E9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2747  001D9E  C0EA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2748  001DA2                     	if	0	;tblptru may be non-zero
  2749  001DA2                     	endif
  2750  001DA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2751  001DA2  0E00               	movlw	low (__mediumconst shr (0+16))
  2752  001DA4  6EF8               	movwf	tblptru,c
  2753  001DA6                     	endif
  2754  001DA6  0008               	tblrd		*
  2755  001DA8  CFF5 F194          	movff	tablat,vfpfcnvrt@c
  2756  001DAC  0EBF               	movlw	191
  2757  001DAE  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2758  001DB0  0EFF               	movlw	255
  2759  001DB2  6FEA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2760  001DB4  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2761  001DB8  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2762  001DBC  CFDE FFF6          	movff	postinc2,tblptrl
  2763  001DC0  CFDD FFF7          	movff	postdec2,tblptrh
  2764  001DC4                     	if	0	;tblptru may be non-zero
  2765  001DC4                     	endif
  2766  001DC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2767  001DC4  0E00               	movlw	low (__mediumconst shr (0+16))
  2768  001DC6  6EF8               	movwf	tblptru,c
  2769  001DC8                     	endif
  2770  001DC8  0008               	tblrd		*
  2771  001DCA  50F5               	movf	tablat,w,c
  2772  001DCC  6FEB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2773  001DCE  6BEC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2774  001DD0  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2775  001DD2  27EB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2776  001DD4  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2777  001DD6  23EC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2778  001DD8  51EC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2779  001DDA  E106               	bnz	u9330
  2780  001DDC  0E1A               	movlw	26
  2781  001DDE  5DEB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2782  001DE0  B0D8               	btfsc	status,0,c
  2783  001DE2  D002               	goto	u9330
  2784  001DE4  0E01               	movlw	1
  2785  001DE6  D001               	goto	u9340
  2786  001DE8                     u9330:
  2787  001DE8  0E00               	movlw	0
  2788  001DEA                     u9340:
  2789  001DEA  0101               	movlb	1	; () banked
  2790  001DEC  6F8B               	movwf	_vfpfcnvrt$1344& (0+255),b
  2791  001DEE  6B8C               	clrf	(_vfpfcnvrt$1344+1)& (0+255),b
  2792                           
  2793                           ; BSR set to: 1
  2794  001DF0  518B               	movf	_vfpfcnvrt$1344& (0+255),w,b
  2795  001DF2  118C               	iorwf	(_vfpfcnvrt$1344+1)& (0+255),w,b
  2796                           
  2797                           ; BSR set to: 1
  2798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2799                           
  2800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2801                           
  2802                           ; BSR set to: 1
  2803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2804  001DF4  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2805  001DF8  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2806  001DFC  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2807  001E00  0E04               	movlw	4
  2808  001E02  26DE               	addwf	postinc2,f,c
  2809  001E04  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2810  001E08  0E00               	movlw	0
  2811  001E0A  22DD               	addwfc	postdec2,f,c
  2812  001E0C  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2813  001E10  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2814  001E14  CFDE F18D          	movff	postinc2,vfpfcnvrt@f
  2815  001E18  CFDE F18E          	movff	postinc2,vfpfcnvrt@f+1
  2816  001E1C  CFDE F18F          	movff	postinc2,vfpfcnvrt@f+2
  2817  001E20  CFDE F190          	movff	postinc2,vfpfcnvrt@f+3
  2818                           
  2819                           ; BSR set to: 1
  2820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2821                           
  2822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  2823  001E24  0E02               	movlw	2
  2824  001E26  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2825  001E2A  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2826  001E2E  26DE               	addwf	postinc2,f,c
  2827  001E30  0E00               	movlw	0
  2828  001E32  22DD               	addwfc	postdec2,f,c
  2829  001E34  D77D               	goto	l7157
  2830  001E36                     l7177:
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  2834  001E36  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2835  001E3A  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2836  001E3E  CFDE FFF6          	movff	postinc2,tblptrl
  2837  001E42  CFDD FFF7          	movff	postdec2,tblptrh
  2838  001E46                     	if	0	;tblptru may be non-zero
  2839  001E46                     	endif
  2840  001E46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2841  001E46  0E00               	movlw	low (__mediumconst shr (0+16))
  2842  001E48  6EF8               	movwf	tblptru,c
  2843  001E4A                     	endif
  2844  001E4A  0008               	tblrd		*
  2845  001E4C  50F5               	movf	tablat,w,c
  2846  001E4E  0A75               	xorlw	117
  2847  001E50  A4D8               	btfss	status,2,c
  2848  001E52  D041               	goto	l7185
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  2852  001E54  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2853  001E58  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2854  001E5C  2ADE               	incf	postinc2,f,c
  2855  001E5E  0E00               	movlw	0
  2856  001E60  22DD               	addwfc	postdec2,f,c
  2857                           
  2858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2859  001E62  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2860  001E66  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2861  001E6A  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2862  001E6E  0E02               	movlw	2
  2863  001E70  26DE               	addwf	postinc2,f,c
  2864  001E72  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2865  001E76  0E00               	movlw	0
  2866  001E78  22DD               	addwfc	postdec2,f,c
  2867  001E7A  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2868  001E7E  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2869  001E82  CFDE F0EB          	movff	postinc2,??_vfpfcnvrt+2
  2870  001E86  CFDD F0EC          	movff	postdec2,??_vfpfcnvrt+3
  2871  001E8A  C0EB  F17D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2872  001E8E  C0EC  F17E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2873  001E92  0101               	movlb	1	; () banked
  2874  001E94  6B7F               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2875  001E96  6B80               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2876  001E98  6B81               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2877  001E9A  6B82               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2878  001E9C  6B83               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2879  001E9E  6B84               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2880                           
  2881                           ; BSR set to: 1
  2882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  2883  001EA0  C0E3  F07B         	movff	vfpfcnvrt@fp,utoa@fp
  2884  001EA4  C0E4  F07C         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2885  001EA8  C17D  F07D         	movff	vfpfcnvrt@llu,utoa@d
  2886  001EAC  C17E  F07E         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2887  001EB0  C17F  F07F         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2888  001EB4  C180  F080         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2889  001EB8  C181  F081         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2890  001EBC  C182  F082         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2891  001EC0  C183  F083         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2892  001EC4  C184  F084         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2893  001EC8  EC93  F016         	call	_utoa	;wreg free
  2894  001ECC  C07B  F0E3         	movff	?_utoa,?_vfpfcnvrt
  2895  001ED0  C07C  F0E4         	movff	?_utoa+1,?_vfpfcnvrt+1
  2896  001ED4  0012               	return	
  2897  001ED6                     l7185:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2901  001ED6  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2902  001EDA  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2903  001EDE  CFDE FFF6          	movff	postinc2,tblptrl
  2904  001EE2  CFDD FFF7          	movff	postdec2,tblptrh
  2905  001EE6                     	if	0	;tblptru may be non-zero
  2906  001EE6                     	endif
  2907  001EE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2908  001EE6  0E00               	movlw	low (__mediumconst shr (0+16))
  2909  001EE8  6EF8               	movwf	tblptru,c
  2910  001EEA                     	endif
  2911  001EEA  0008               	tblrd		*
  2912  001EEC  50F5               	movf	tablat,w,c
  2913  001EEE  0A25               	xorlw	37
  2914  001EF0  A4D8               	btfss	status,2,c
  2915  001EF2  D017               	goto	l7195
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2919  001EF4  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2920  001EF8  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2921  001EFC  2ADE               	incf	postinc2,f,c
  2922  001EFE  0E00               	movlw	0
  2923  001F00  22DD               	addwfc	postdec2,f,c
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2927  001F02  0E00               	movlw	0
  2928  001F04  6F61               	movwf	(fputc@c+1)& (0+255),b
  2929  001F06  0E25               	movlw	37
  2930  001F08  6F60               	movwf	fputc@c& (0+255),b
  2931  001F0A  C0E3  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2932  001F0E  C0E4  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2933  001F12  EC26  F01D         	call	_fputc	;wreg free
  2934  001F16                     l7191:
  2935                           
  2936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2937  001F16  0E00               	movlw	0
  2938  001F18  0100               	movlb	0	; () banked
  2939  001F1A  6FE4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2940  001F1C  0E01               	movlw	1
  2941  001F1E  6FE3               	movwf	?_vfpfcnvrt& (0+255),b
  2942  001F20  0012               	return	
  2943  001F22                     l7195:
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2947  001F22  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2948  001F26  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2949  001F2A  2ADE               	incf	postinc2,f,c
  2950  001F2C  0E00               	movlw	0
  2951  001F2E  22DD               	addwfc	postdec2,f,c
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2955  001F30  0E00               	movlw	0
  2956  001F32  6FE4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2957  001F34  0E00               	movlw	0
  2958  001F36  6FE3               	movwf	?_vfpfcnvrt& (0+255),b
  2959  001F38  0012               	return	
  2960  001F3A                     l7201:
  2961                           
  2962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2963  001F3A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2964  001F3E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2965  001F42  CFDE FFF6          	movff	postinc2,tblptrl
  2966  001F46  CFDD FFF7          	movff	postdec2,tblptrh
  2967  001F4A                     	if	0	;tblptru may be non-zero
  2968  001F4A                     	endif
  2969  001F4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2970  001F4A  0E00               	movlw	low (__mediumconst shr (0+16))
  2971  001F4C  6EF8               	movwf	tblptru,c
  2972  001F4E                     	endif
  2973  001F4E  0008               	tblrd		*
  2974  001F50  50F5               	movf	tablat,w,c
  2975  001F52  0100               	movlb	0	; () banked
  2976  001F54  6F60               	movwf	fputc@c& (0+255),b
  2977  001F56  6B61               	clrf	(fputc@c+1)& (0+255),b
  2978  001F58  C0E3  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2979  001F5C  C0E4  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2980  001F60  EC26  F01D         	call	_fputc	;wreg free
  2981                           
  2982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2983  001F64  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2984  001F68  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2985  001F6C  2ADE               	incf	postinc2,f,c
  2986  001F6E  0E00               	movlw	0
  2987  001F70  22DD               	addwfc	postdec2,f,c
  2988  001F72  D7D1               	goto	l7191
  2989  001F74                     __end_of_vfpfcnvrt:
  2990                           	opt callstack 0
  2991                           
  2992 ;; *************** function _utoa *****************
  2993 ;; Defined at:
  2994 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2997 ;;		 -> sprintf@f(6), 
  2998 ;;  d               8   29[BANK0 ] unsigned long long 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;  n               8   49[BANK0 ] unsigned long long 
  3001 ;;  i               2   57[BANK0 ] int 
  3002 ;;  w               2   47[BANK0 ] int 
  3003 ;;  p               2   45[BANK0 ] int 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  2   27[BANK0 ] int 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3013 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3014 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3015 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3016 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3017 ;;Total ram usage:       32 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    6
  3020 ;; This function calls:
  3021 ;;		___lodiv
  3022 ;;		___lomod
  3023 ;;		_pad
  3024 ;; This function is called by:
  3025 ;;		_vfpfcnvrt
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text5
  3030  002D26                     __ptext5:
  3031                           	opt callstack 0
  3032  002D26                     _utoa:
  3033                           	opt callstack 20
  3034                           
  3035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  3036                           
  3037                           ;incstack = 0
  3038  002D26  AE39               	btfss	_prec+1,7,c
  3039                           
  3040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  3041  002D28  923A               	bcf	_flags,1,c
  3042                           
  3043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  3044  002D2A  BE39               	btfsc	_prec+1,7,c
  3045  002D2C  D005               	goto	u8970
  3046  002D2E  5039               	movf	_prec+1,w,c
  3047  002D30  E109               	bnz	l443
  3048  002D32  0438               	decf	_prec,w,c
  3049  002D34  B0D8               	btfsc	status,0,c
  3050  002D36  D006               	goto	l443
  3051  002D38                     u8970:
  3052  002D38  0E00               	movlw	0
  3053  002D3A  0100               	movlb	0	; () banked
  3054  002D3C  6F8E               	movwf	(utoa@p+1)& (0+255),b
  3055  002D3E  0E01               	movlw	1
  3056  002D40  6F8D               	movwf	utoa@p& (0+255),b
  3057  002D42  D004               	goto	l445
  3058  002D44                     l443:
  3059  002D44  C038  F08D         	movff	_prec,utoa@p
  3060  002D48  C039  F08E         	movff	_prec+1,utoa@p+1
  3061  002D4C                     l445:
  3062                           
  3063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  3064  002D4C  C036  F08F         	movff	_width,utoa@w
  3065  002D50  C037  F090         	movff	_width+1,utoa@w+1
  3066                           
  3067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  3068  002D54  C07D  F091         	movff	utoa@d,utoa@n
  3069  002D58  C07E  F092         	movff	utoa@d+1,utoa@n+1
  3070  002D5C  C07F  F093         	movff	utoa@d+2,utoa@n+2
  3071  002D60  C080  F094         	movff	utoa@d+3,utoa@n+3
  3072  002D64  C081  F095         	movff	utoa@d+4,utoa@n+4
  3073  002D68  C082  F096         	movff	utoa@d+5,utoa@n+5
  3074  002D6C  C083  F097         	movff	utoa@d+6,utoa@n+6
  3075  002D70  C084  F098         	movff	utoa@d+7,utoa@n+7
  3076                           
  3077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  3078  002D74  0E00               	movlw	0
  3079  002D76  0100               	movlb	0	; () banked
  3080  002D78  6F9A               	movwf	(utoa@i+1)& (0+255),b
  3081  002D7A  0E4F               	movlw	79
  3082  002D7C  6F99               	movwf	utoa@i& (0+255),b
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  3086  002D7E  0E00               	movlw	0
  3087  002D80  0101               	movlb	1	; () banked
  3088  002D82  6F72               	movwf	(_dbuf+79)& (0+255),b
  3089                           
  3090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3091  002D84  D077               	goto	l6977
  3092  002D86                     l6967:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  3096  002D86  0799               	decf	utoa@i& (0+255),f,b
  3097  002D88  A0D8               	btfss	status,0,c
  3098  002D8A  079A               	decf	(utoa@i+1)& (0+255),f,b
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  3102  002D8C  0E23               	movlw	low _dbuf
  3103  002D8E  2599               	addwf	utoa@i& (0+255),w,b
  3104  002D90  6ED9               	movwf	fsr2l,c
  3105  002D92  0E01               	movlw	high _dbuf
  3106  002D94  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  3107  002D96  6EDA               	movwf	fsr2h,c
  3108  002D98  C091  F060         	movff	utoa@n,___lomod@dividend
  3109  002D9C  C092  F061         	movff	utoa@n+1,___lomod@dividend+1
  3110  002DA0  C093  F062         	movff	utoa@n+2,___lomod@dividend+2
  3111  002DA4  C094  F063         	movff	utoa@n+3,___lomod@dividend+3
  3112  002DA8  C095  F064         	movff	utoa@n+4,___lomod@dividend+4
  3113  002DAC  C096  F065         	movff	utoa@n+5,___lomod@dividend+5
  3114  002DB0  C097  F066         	movff	utoa@n+6,___lomod@dividend+6
  3115  002DB4  C098  F067         	movff	utoa@n+7,___lomod@dividend+7
  3116  002DB8  0E0A               	movlw	10
  3117  002DBA  6F68               	movwf	___lomod@divisor& (0+255),b
  3118  002DBC  0E00               	movlw	0
  3119  002DBE  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  3120  002DC0  0E00               	movlw	0
  3121  002DC2  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  3122  002DC4  0E00               	movlw	0
  3123  002DC6  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  3124  002DC8  0E00               	movlw	0
  3125  002DCA  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  3126  002DCC  0E00               	movlw	0
  3127  002DCE  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  3128  002DD0  0E00               	movlw	0
  3129  002DD2  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  3130  002DD4  0E00               	movlw	0
  3131  002DD6  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  3132  002DD8  EC76  F01C         	call	___lomod	;wreg free
  3133  002DDC  C060  F085         	movff	?___lomod,??_utoa
  3134  002DE0  C061  F086         	movff	?___lomod+1,??_utoa+1
  3135  002DE4  C062  F087         	movff	?___lomod+2,??_utoa+2
  3136  002DE8  C063  F088         	movff	?___lomod+3,??_utoa+3
  3137  002DEC  C064  F089         	movff	?___lomod+4,??_utoa+4
  3138  002DF0  C065  F08A         	movff	?___lomod+5,??_utoa+5
  3139  002DF4  C066  F08B         	movff	?___lomod+6,??_utoa+6
  3140  002DF8  C067  F08C         	movff	?___lomod+7,??_utoa+7
  3141  002DFC  0100               	movlb	0	; () banked
  3142  002DFE  5185               	movf	??_utoa& (0+255),w,b
  3143  002E00  0F30               	addlw	48
  3144  002E02  6EDF               	movwf	indf2,c
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  3148  002E04  078D               	decf	utoa@p& (0+255),f,b
  3149  002E06  A0D8               	btfss	status,0,c
  3150  002E08  078E               	decf	(utoa@p+1)& (0+255),f,b
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  3154  002E0A  078F               	decf	utoa@w& (0+255),f,b
  3155  002E0C  A0D8               	btfss	status,0,c
  3156  002E0E  0790               	decf	(utoa@w+1)& (0+255),f,b
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  3160  002E10  C091  F060         	movff	utoa@n,___lodiv@dividend
  3161  002E14  C092  F061         	movff	utoa@n+1,___lodiv@dividend+1
  3162  002E18  C093  F062         	movff	utoa@n+2,___lodiv@dividend+2
  3163  002E1C  C094  F063         	movff	utoa@n+3,___lodiv@dividend+3
  3164  002E20  C095  F064         	movff	utoa@n+4,___lodiv@dividend+4
  3165  002E24  C096  F065         	movff	utoa@n+5,___lodiv@dividend+5
  3166  002E28  C097  F066         	movff	utoa@n+6,___lodiv@dividend+6
  3167  002E2C  C098  F067         	movff	utoa@n+7,___lodiv@dividend+7
  3168  002E30  0E0A               	movlw	10
  3169  002E32  6F68               	movwf	___lodiv@divisor& (0+255),b
  3170  002E34  0E00               	movlw	0
  3171  002E36  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  3172  002E38  0E00               	movlw	0
  3173  002E3A  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  3174  002E3C  0E00               	movlw	0
  3175  002E3E  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  3176  002E40  0E00               	movlw	0
  3177  002E42  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  3178  002E44  0E00               	movlw	0
  3179  002E46  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  3180  002E48  0E00               	movlw	0
  3181  002E4A  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  3182  002E4C  0E00               	movlw	0
  3183  002E4E  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  3184  002E50  ECE8  F01A         	call	___lodiv	;wreg free
  3185  002E54  C060  F091         	movff	?___lodiv,utoa@n
  3186  002E58  C061  F092         	movff	?___lodiv+1,utoa@n+1
  3187  002E5C  C062  F093         	movff	?___lodiv+2,utoa@n+2
  3188  002E60  C063  F094         	movff	?___lodiv+3,utoa@n+3
  3189  002E64  C064  F095         	movff	?___lodiv+4,utoa@n+4
  3190  002E68  C065  F096         	movff	?___lodiv+5,utoa@n+5
  3191  002E6C  C066  F097         	movff	?___lodiv+6,utoa@n+6
  3192  002E70  C067  F098         	movff	?___lodiv+7,utoa@n+7
  3193  002E74                     l6977:
  3194                           
  3195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3196  002E74  0100               	movlb	0	; () banked
  3197  002E76  5199               	movf	utoa@i& (0+255),w,b
  3198  002E78  119A               	iorwf	(utoa@i+1)& (0+255),w,b
  3199  002E7A  B4D8               	btfsc	status,2,c
  3200  002E7C  D01A               	goto	u9020
  3201                           
  3202                           ; BSR set to: 0
  3203  002E7E  5191               	movf	utoa@n& (0+255),w,b
  3204  002E80  1192               	iorwf	(utoa@n+1)& (0+255),w,b
  3205  002E82  1193               	iorwf	(utoa@n+2)& (0+255),w,b
  3206  002E84  1194               	iorwf	(utoa@n+3)& (0+255),w,b
  3207  002E86  1195               	iorwf	(utoa@n+4)& (0+255),w,b
  3208  002E88  1196               	iorwf	(utoa@n+5)& (0+255),w,b
  3209  002E8A  1197               	iorwf	(utoa@n+6)& (0+255),w,b
  3210  002E8C  1198               	iorwf	(utoa@n+7)& (0+255),w,b
  3211  002E8E  A4D8               	btfss	status,2,c
  3212  002E90  D77A               	goto	l6967
  3213                           
  3214                           ; BSR set to: 0
  3215  002E92  BF8E               	btfsc	(utoa@p+1)& (0+255),7,b
  3216  002E94  D005               	goto	u9000
  3217  002E96  518E               	movf	(utoa@p+1)& (0+255),w,b
  3218  002E98  E102               	bnz	u9001
  3219  002E9A  058D               	decf	utoa@p& (0+255),w,b
  3220  002E9C  B0D8               	btfsc	status,0,c
  3221  002E9E                     u9001:
  3222  002E9E  D773               	goto	l6967
  3223  002EA0                     u9000:
  3224                           
  3225                           ; BSR set to: 0
  3226  002EA0  BF90               	btfsc	(utoa@w+1)& (0+255),7,b
  3227  002EA2  D007               	goto	u9020
  3228  002EA4  5190               	movf	(utoa@w+1)& (0+255),w,b
  3229  002EA6  E103               	bnz	u9010
  3230  002EA8  058F               	decf	utoa@w& (0+255),w,b
  3231  002EAA  A0D8               	btfss	status,0,c
  3232  002EAC  D002               	goto	u9020
  3233  002EAE                     u9010:
  3234                           
  3235                           ; BSR set to: 0
  3236  002EAE  B23A               	btfsc	_flags,1,c
  3237  002EB0  D76A               	goto	l6967
  3238  002EB2                     u9020:
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  3242  002EB2  C07B  F070         	movff	utoa@fp,pad@fp
  3243  002EB6  C07C  F071         	movff	utoa@fp+1,pad@fp+1
  3244  002EBA  0E23               	movlw	low _dbuf
  3245  002EBC  2599               	addwf	utoa@i& (0+255),w,b
  3246  002EBE  6F72               	movwf	pad@buf& (0+255),b
  3247  002EC0  0E01               	movlw	high _dbuf
  3248  002EC2  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  3249  002EC4  6F73               	movwf	(pad@buf+1)& (0+255),b
  3250  002EC6  C08F  F074         	movff	utoa@w,pad@p
  3251  002ECA  C090  F075         	movff	utoa@w+1,pad@p+1
  3252  002ECE  EC77  F01D         	call	_pad	;wreg free
  3253  002ED2  C070  F07B         	movff	?_pad,?_utoa
  3254  002ED6  C071  F07C         	movff	?_pad+1,?_utoa+1
  3255  002EDA  0012               	return		;funcret
  3256  002EDC                     __end_of_utoa:
  3257                           	opt callstack 0
  3258                           
  3259 ;; *************** function ___lomod *****************
  3260 ;; Defined at:
  3261 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3264 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  counter         1   16[BANK0 ] unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  8    0[BANK0 ] unsigned long long 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3276 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3277 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3279 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3280 ;;Total ram usage:       17 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    2
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_utoa
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text6
  3291  0038EC                     __ptext6:
  3292                           	opt callstack 0
  3293  0038EC                     ___lomod:
  3294                           	opt callstack 23
  3295                           
  3296                           ;incstack = 0
  3297  0038EC  0100               	movlb	0	; () banked
  3298  0038EE  5168               	movf	___lomod@divisor& (0+255),w,b
  3299  0038F0  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  3300  0038F2  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  3301  0038F4  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  3302  0038F6  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  3303  0038F8  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  3304  0038FA  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  3305  0038FC  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  3306  0038FE  B4D8               	btfsc	status,2,c
  3307  003900  D03C               	goto	l959
  3308                           
  3309                           ; BSR set to: 0
  3310  003902  0E01               	movlw	1
  3311  003904  6F70               	movwf	___lomod@counter& (0+255),b
  3312  003906  D00A               	goto	l6621
  3313  003908                     l6619:
  3314                           
  3315                           ; BSR set to: 0
  3316  003908  90D8               	bcf	status,0,c
  3317  00390A  3768               	rlcf	___lomod@divisor& (0+255),f,b
  3318  00390C  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  3319  00390E  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  3320  003910  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  3321  003912  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  3322  003914  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  3323  003916  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  3324  003918  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  3325  00391A  2B70               	incf	___lomod@counter& (0+255),f,b
  3326  00391C                     l6621:
  3327                           
  3328                           ; BSR set to: 0
  3329  00391C  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  3330  00391E  D7F4               	goto	l6619
  3331  003920                     u8390:
  3332                           
  3333                           ; BSR set to: 0
  3334  003920  5168               	movf	___lomod@divisor& (0+255),w,b
  3335  003922  5D60               	subwf	___lomod@dividend& (0+255),w,b
  3336  003924  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3337  003926  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  3338  003928  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3339  00392A  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  3340  00392C  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3341  00392E  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  3342  003930  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3343  003932  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  3344  003934  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3345  003936  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  3346  003938  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3347  00393A  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  3348  00393C  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3349  00393E  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  3350  003940  A0D8               	btfss	status,0,c
  3351  003942  D010               	goto	l6627
  3352                           
  3353                           ; BSR set to: 0
  3354  003944  5168               	movf	___lomod@divisor& (0+255),w,b
  3355  003946  5F60               	subwf	___lomod@dividend& (0+255),f,b
  3356  003948  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3357  00394A  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  3358  00394C  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3359  00394E  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  3360  003950  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3361  003952  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  3362  003954  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3363  003956  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  3364  003958  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3365  00395A  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  3366  00395C  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3367  00395E  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  3368  003960  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3369  003962  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  3370  003964                     l6627:
  3371                           
  3372                           ; BSR set to: 0
  3373  003964  90D8               	bcf	status,0,c
  3374  003966  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  3375  003968  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  3376  00396A  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  3377  00396C  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  3378  00396E  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  3379  003970  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  3380  003972  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  3381  003974  3368               	rrcf	___lomod@divisor& (0+255),f,b
  3382                           
  3383                           ; BSR set to: 0
  3384  003976  2F70               	decfsz	___lomod@counter& (0+255),f,b
  3385  003978  D7D3               	goto	u8390
  3386  00397A                     l959:
  3387                           
  3388                           ; BSR set to: 0
  3389  00397A  C060  F060         	movff	___lomod@dividend,?___lomod
  3390  00397E  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  3391  003982  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  3392  003986  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  3393  00398A  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  3394  00398E  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  3395  003992  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  3396  003996  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  3397                           
  3398                           ; BSR set to: 0
  3399  00399A  0012               	return		;funcret
  3400  00399C                     __end_of___lomod:
  3401                           	opt callstack 0
  3402                           
  3403 ;; *************** function ___lodiv *****************
  3404 ;; Defined at:
  3405 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3408 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  quotient        8   16[BANK0 ] unsigned long long 
  3411 ;;  counter         1   24[BANK0 ] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  8    0[BANK0 ] unsigned long long 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3421 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3422 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3424 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3425 ;;Total ram usage:       25 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    2
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_utoa
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text7
  3436  0035D0                     __ptext7:
  3437                           	opt callstack 0
  3438  0035D0                     ___lodiv:
  3439                           	opt callstack 23
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;incstack = 0
  3443  0035D0  EE20  F070         	lfsr	2,___lodiv@quotient
  3444  0035D4  0E07               	movlw	7
  3445  0035D6                     u8341:
  3446  0035D6  6ADE               	clrf	postinc2,c
  3447  0035D8  06E8               	decf	wreg,f,c
  3448  0035DA  E2FD               	bc	u8341
  3449  0035DC  0100               	movlb	0	; () banked
  3450  0035DE  5168               	movf	___lodiv@divisor& (0+255),w,b
  3451  0035E0  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  3452  0035E2  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  3453  0035E4  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  3454  0035E6  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  3455  0035E8  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  3456  0035EA  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  3457  0035EC  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  3458  0035EE  B4D8               	btfsc	status,2,c
  3459  0035F0  D046               	goto	l949
  3460                           
  3461                           ; BSR set to: 0
  3462  0035F2  0E01               	movlw	1
  3463  0035F4  6F78               	movwf	___lodiv@counter& (0+255),b
  3464  0035F6  D00A               	goto	l6601
  3465  0035F8                     l6599:
  3466                           
  3467                           ; BSR set to: 0
  3468  0035F8  90D8               	bcf	status,0,c
  3469  0035FA  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  3470  0035FC  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  3471  0035FE  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  3472  003600  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  3473  003602  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  3474  003604  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  3475  003606  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  3476  003608  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  3477  00360A  2B78               	incf	___lodiv@counter& (0+255),f,b
  3478  00360C                     l6601:
  3479                           
  3480                           ; BSR set to: 0
  3481  00360C  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  3482  00360E  D7F4               	goto	l6599
  3483  003610                     u8360:
  3484                           
  3485                           ; BSR set to: 0
  3486  003610  90D8               	bcf	status,0,c
  3487  003612  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  3488  003614  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  3489  003616  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  3490  003618  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  3491  00361A  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  3492  00361C  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  3493  00361E  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  3494  003620  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  3495                           
  3496                           ; BSR set to: 0
  3497  003622  5168               	movf	___lodiv@divisor& (0+255),w,b
  3498  003624  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  3499  003626  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3500  003628  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  3501  00362A  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3502  00362C  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  3503  00362E  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3504  003630  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  3505  003632  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3506  003634  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  3507  003636  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3508  003638  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  3509  00363A  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3510  00363C  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  3511  00363E  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3512  003640  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  3513  003642  A0D8               	btfss	status,0,c
  3514  003644  D011               	goto	l6611
  3515                           
  3516                           ; BSR set to: 0
  3517  003646  5168               	movf	___lodiv@divisor& (0+255),w,b
  3518  003648  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  3519  00364A  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3520  00364C  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  3521  00364E  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3522  003650  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  3523  003652  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3524  003654  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  3525  003656  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3526  003658  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  3527  00365A  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3528  00365C  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  3529  00365E  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3530  003660  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  3531  003662  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3532  003664  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  3533                           
  3534                           ; BSR set to: 0
  3535  003666  8170               	bsf	___lodiv@quotient& (0+255),0,b
  3536  003668                     l6611:
  3537                           
  3538                           ; BSR set to: 0
  3539  003668  90D8               	bcf	status,0,c
  3540  00366A  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  3541  00366C  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  3542  00366E  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  3543  003670  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  3544  003672  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  3545  003674  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  3546  003676  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  3547  003678  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  3548                           
  3549                           ; BSR set to: 0
  3550  00367A  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  3551  00367C  D7C9               	goto	u8360
  3552  00367E                     l949:
  3553                           
  3554                           ; BSR set to: 0
  3555  00367E  C070  F060         	movff	___lodiv@quotient,?___lodiv
  3556  003682  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  3557  003686  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  3558  00368A  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  3559  00368E  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  3560  003692  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  3561  003696  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  3562  00369A  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  3563                           
  3564                           ; BSR set to: 0
  3565  00369E  0012               	return		;funcret
  3566  0036A0                     __end_of___lodiv:
  3567                           	opt callstack 0
  3568                           
  3569 ;; *************** function _strncmp *****************
  3570 ;; Defined at:
  3571 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  3574 ;;		 -> vfpfcnvrt@ct(3), 
  3575 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  3576 ;;		 -> STR_17(3), 
  3577 ;;  n               2    4[BANK0 ] unsigned int 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  3580 ;;		 -> STR_17(3), 
  3581 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  3582 ;;		 -> vfpfcnvrt@ct(3), 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  2    0[BANK0 ] int 
  3585 ;; Registers used:
  3586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3592 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3593 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3595 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;Total ram usage:       11 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    2
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_vfpfcnvrt
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text8
  3607  00399C                     __ptext8:
  3608                           	opt callstack 0
  3609  00399C                     _strncmp:
  3610                           	opt callstack 24
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;incstack = 0
  3614  00399C  C060  F067         	movff	strncmp@_l,strncmp@l
  3615  0039A0  C061  F068         	movff	strncmp@_l+1,strncmp@l+1
  3616  0039A4  C062  F069         	movff	strncmp@_r,strncmp@r
  3617  0039A8  C063  F06A         	movff	strncmp@_r+1,strncmp@r+1
  3618  0039AC  0100               	movlb	0	; () banked
  3619  0039AE  0764               	decf	strncmp@n& (0+255),f,b
  3620  0039B0  A0D8               	btfss	status,0,c
  3621  0039B2  0765               	decf	(strncmp@n+1)& (0+255),f,b
  3622  0039B4  2964               	incf	strncmp@n& (0+255),w,b
  3623  0039B6  E10F               	bnz	l7041
  3624  0039B8  2965               	incf	(strncmp@n+1)& (0+255),w,b
  3625  0039BA  A4D8               	btfss	status,2,c
  3626  0039BC  D00C               	goto	l7041
  3627                           
  3628                           ; BSR set to: 0
  3629  0039BE  0E00               	movlw	0
  3630  0039C0  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3631  0039C2  0E00               	movlw	0
  3632  0039C4  6F60               	movwf	?_strncmp& (0+255),b
  3633  0039C6  0012               	return	
  3634  0039C8                     l7039:
  3635                           
  3636                           ; BSR set to: 0
  3637  0039C8  4B67               	infsnz	strncmp@l& (0+255),f,b
  3638  0039CA  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  3639  0039CC  4B69               	infsnz	strncmp@r& (0+255),f,b
  3640  0039CE  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  3641  0039D0  0764               	decf	strncmp@n& (0+255),f,b
  3642  0039D2  A0D8               	btfss	status,0,c
  3643  0039D4  0765               	decf	(strncmp@n+1)& (0+255),f,b
  3644  0039D6                     l7041:
  3645                           
  3646                           ; BSR set to: 0
  3647  0039D6  C067  FFD9         	movff	strncmp@l,fsr2l
  3648  0039DA  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3649  0039DE  50DF               	movf	indf2,w,c
  3650  0039E0  B4D8               	btfsc	status,2,c
  3651  0039E2  D020               	goto	u9140
  3652                           
  3653                           ; BSR set to: 0
  3654  0039E4  C069  FFF6         	movff	strncmp@r,tblptrl
  3655  0039E8  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3656  0039EC                     	if	0	;tblptru may be non-zero
  3657  0039EC                     	endif
  3658  0039EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3659  0039EC  0E00               	movlw	low (__mediumconst shr (0+16))
  3660  0039EE  6EF8               	movwf	tblptru,c
  3661  0039F0                     	endif
  3662  0039F0  0008               	tblrd		*
  3663  0039F2  50F5               	movf	tablat,w,c
  3664  0039F4  0900               	iorlw	0
  3665  0039F6  B4D8               	btfsc	status,2,c
  3666  0039F8  D015               	goto	u9140
  3667                           
  3668                           ; BSR set to: 0
  3669  0039FA  5164               	movf	strncmp@n& (0+255),w,b
  3670  0039FC  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  3671  0039FE  B4D8               	btfsc	status,2,c
  3672  003A00  D011               	goto	u9140
  3673                           
  3674                           ; BSR set to: 0
  3675  003A02  C067  FFD9         	movff	strncmp@l,fsr2l
  3676  003A06  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3677  003A0A  50DF               	movf	indf2,w,c
  3678  003A0C  6F66               	movwf	??_strncmp& (0+255),b
  3679  003A0E  C069  FFF6         	movff	strncmp@r,tblptrl
  3680  003A12  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3681  003A16                     	if	0	;tblptru may be non-zero
  3682  003A16                     	endif
  3683  003A16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3684  003A16  0E00               	movlw	low (__mediumconst shr (0+16))
  3685  003A18  6EF8               	movwf	tblptru,c
  3686  003A1A                     	endif
  3687  003A1A  0008               	tblrd		*
  3688  003A1C  50F5               	movf	tablat,w,c
  3689  003A1E  1966               	xorwf	??_strncmp& (0+255),w,b
  3690  003A20  B4D8               	btfsc	status,2,c
  3691  003A22  D7D2               	goto	l7039
  3692  003A24                     u9140:
  3693                           
  3694                           ; BSR set to: 0
  3695  003A24  C067  FFD9         	movff	strncmp@l,fsr2l
  3696  003A28  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3697  003A2C  50DF               	movf	indf2,w,c
  3698  003A2E  6F66               	movwf	??_strncmp& (0+255),b
  3699  003A30  C069  FFF6         	movff	strncmp@r,tblptrl
  3700  003A34  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3701  003A38                     	if	0	;tblptru may be non-zero
  3702  003A38                     	endif
  3703  003A38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3704  003A38  0E00               	movlw	low (__mediumconst shr (0+16))
  3705  003A3A  6EF8               	movwf	tblptru,c
  3706  003A3C                     	endif
  3707  003A3C  0008               	tblrd		*
  3708  003A3E  50F5               	movf	tablat,w,c
  3709  003A40  5D66               	subwf	??_strncmp& (0+255),w,b
  3710  003A42  6F60               	movwf	?_strncmp& (0+255),b
  3711  003A44  6B61               	clrf	(?_strncmp+1)& (0+255),b
  3712  003A46  A0D8               	btfss	status,0,c
  3713  003A48  0761               	decf	(?_strncmp+1)& (0+255),f,b
  3714                           
  3715                           ; BSR set to: 0
  3716  003A4A  0012               	return		;funcret
  3717  003A4C                     __end_of_strncmp:
  3718                           	opt callstack 0
  3719                           
  3720 ;; *************** function _efgtoa *****************
  3721 ;; Defined at:
  3722 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  3725 ;;		 -> sprintf@f(6), 
  3726 ;;  f               4   65[BANK0 ] PTR struct _IO_FILE
  3727 ;;  c               1   69[BANK0 ] unsigned char 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  u               4  127[BANK0 ] unsigned char 
  3730 ;;  g               4  119[BANK0 ] unsigned char 
  3731 ;;  l               4  113[BANK0 ] unsigned char 
  3732 ;;  h               4  109[BANK0 ] unsigned char 
  3733 ;;  ou              4   75[BANK0 ] unsigned char 
  3734 ;;  n               2  125[BANK0 ] int 
  3735 ;;  e               2  123[BANK0 ] int 
  3736 ;;  i               2  117[BANK0 ] int 
  3737 ;;  w               2  106[BANK0 ] int 
  3738 ;;  p               2  103[BANK0 ] int 
  3739 ;;  sign            2  101[BANK0 ] int 
  3740 ;;  d               2   99[BANK0 ] int 
  3741 ;;  ne              2   97[BANK0 ] int 
  3742 ;;  m               2   95[BANK0 ] int 
  3743 ;;  pp              2   93[BANK0 ] int 
  3744 ;;  t               2   91[BANK0 ] int 
  3745 ;;  mode            1  108[BANK0 ] unsigned char 
  3746 ;;  nmode           1  105[BANK0 ] unsigned char 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  2   63[BANK0 ] int 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3756 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3757 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3758 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3759 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3760 ;;Total ram usage:       68 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    6
  3763 ;; This function calls:
  3764 ;;		___awdiv
  3765 ;;		___awmod
  3766 ;;		___fladd
  3767 ;;		___fldiv
  3768 ;;		___fleq
  3769 ;;		___flge
  3770 ;;		___flmul
  3771 ;;		___flneg
  3772 ;;		___flsub
  3773 ;;		___fltol
  3774 ;;		___fpclassifyf
  3775 ;;		_floorf
  3776 ;;		_isupper
  3777 ;;		_pad
  3778 ;;		_strcpy
  3779 ;;		_tolower
  3780 ;; This function is called by:
  3781 ;;		_vfpfcnvrt
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text9
  3786  000F88                     __ptext9:
  3787                           	opt callstack 0
  3788  000F88                     _efgtoa:
  3789                           	opt callstack 20
  3790                           
  3791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;incstack = 0
  3795  000F88  0E00               	movlw	0
  3796  000F8A  0100               	movlb	0	; () banked
  3797  000F8C  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  3798  000F8E  0E00               	movlw	0
  3799  000F90  6FC5               	movwf	efgtoa@sign& (0+255),b
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3803  000F92  C0A1  F0D7         	movff	efgtoa@f,efgtoa@g
  3804  000F96  C0A2  F0D8         	movff	efgtoa@f+1,efgtoa@g+1
  3805  000F9A  C0A3  F0D9         	movff	efgtoa@f+2,efgtoa@g+2
  3806  000F9E  C0A4  F0DA         	movff	efgtoa@f+3,efgtoa@g+3
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3810  000FA2  AFDA               	btfss	(efgtoa@g+3)& (0+255),7,b
  3811  000FA4  D016               	goto	l6667
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3815  000FA6  0E00               	movlw	0
  3816  000FA8  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  3817  000FAA  0E01               	movlw	1
  3818  000FAC  6FC5               	movwf	efgtoa@sign& (0+255),b
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3822  000FAE  C0D7  F060         	movff	efgtoa@g,___flneg@f1
  3823  000FB2  C0D8  F061         	movff	efgtoa@g+1,___flneg@f1+1
  3824  000FB6  C0D9  F062         	movff	efgtoa@g+2,___flneg@f1+2
  3825  000FBA  C0DA  F063         	movff	efgtoa@g+3,___flneg@f1+3
  3826  000FBE  ECA9  F021         	call	___flneg	;wreg free
  3827  000FC2  C060  F0D7         	movff	?___flneg,efgtoa@g
  3828  000FC6  C061  F0D8         	movff	?___flneg+1,efgtoa@g+1
  3829  000FCA  C062  F0D9         	movff	?___flneg+2,efgtoa@g+2
  3830  000FCE  C063  F0DA         	movff	?___flneg+3,efgtoa@g+3
  3831  000FD2                     l6667:
  3832                           
  3833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3834  000FD2  0E00               	movlw	0
  3835  000FD4  0100               	movlb	0	; () banked
  3836  000FD6  6FDE               	movwf	(efgtoa@n+1)& (0+255),b
  3837  000FD8  0E00               	movlw	0
  3838  000FDA  6FDD               	movwf	efgtoa@n& (0+255),b
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3842  000FDC  C036  F0CA         	movff	_width,efgtoa@w
  3843  000FE0  C037  F0CB         	movff	_width+1,efgtoa@w+1
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3847  000FE4  51C5               	movf	efgtoa@sign& (0+255),w,b
  3848  000FE6  11C6               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3849  000FE8  A4D8               	btfss	status,2,c
  3850  000FEA  D002               	goto	u8460
  3851                           
  3852                           ; BSR set to: 0
  3853  000FEC  A43A               	btfss	_flags,2,c
  3854  000FEE  D013               	goto	l6687
  3855  000FF0                     u8460:
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3859  000FF0  51C5               	movf	efgtoa@sign& (0+255),w,b
  3860  000FF2  11C6               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3861  000FF4  A4D8               	btfss	status,2,c
  3862  000FF6  D004               	goto	l6679
  3863                           
  3864                           ; BSR set to: 0
  3865  000FF8  0E00               	movlw	0
  3866  000FFA  6FB0               	movwf	(_efgtoa$1306+1)& (0+255),b
  3867  000FFC  0E2B               	movlw	43
  3868  000FFE  D003               	goto	L2
  3869  001000                     l6679:
  3870                           
  3871                           ; BSR set to: 0
  3872  001000  0E00               	movlw	0
  3873  001002  6FB0               	movwf	(_efgtoa$1306+1)& (0+255),b
  3874  001004  0E2D               	movlw	45
  3875  001006                     L2:
  3876  001006  6FAF               	movwf	_efgtoa$1306& (0+255),b
  3877                           
  3878                           ; BSR set to: 0
  3879  001008  C0AF  F123         	movff	_efgtoa$1306,_dbuf
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3883  00100C  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  3884  00100E  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3888  001010  07CA               	decf	efgtoa@w& (0+255),f,b
  3889  001012  A0D8               	btfss	status,0,c
  3890  001014  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  3891  001016                     l6687:
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3895  001016  C0D7  F060         	movff	efgtoa@g,___fpclassifyf@x
  3896  00101A  C0D8  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3897  00101E  C0D9  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3898  001022  C0DA  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3899  001026  EC50  F01B         	call	___fpclassifyf	;wreg free
  3900  00102A  0100               	movlb	0	; () banked
  3901  00102C  0560               	decf	?___fpclassifyf& (0+255),w,b
  3902  00102E  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3903  001030  A4D8               	btfss	status,2,c
  3904  001032  D04C               	goto	l6705
  3905                           
  3906                           ; BSR set to: 0
  3907  001034  0EBF               	movlw	191
  3908  001036  6FA6               	movwf	??_efgtoa& (0+255),b
  3909  001038  0EFF               	movlw	255
  3910  00103A  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  3911  00103C  51A5               	movf	efgtoa@c& (0+255),w,b
  3912  00103E  6FA8               	movwf	(??_efgtoa+2)& (0+255),b
  3913  001040  6BA9               	clrf	(??_efgtoa+3)& (0+255),b
  3914  001042  51A6               	movf	??_efgtoa& (0+255),w,b
  3915  001044  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  3916  001046  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  3917  001048  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3918  00104A  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  3919  00104C  E106               	bnz	u8490
  3920  00104E  0E1A               	movlw	26
  3921  001050  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  3922  001052  B0D8               	btfsc	status,0,c
  3923  001054  D002               	goto	u8490
  3924  001056  0E01               	movlw	1
  3925  001058  D001               	goto	u8500
  3926  00105A                     u8490:
  3927  00105A  0E00               	movlw	0
  3928  00105C                     u8500:
  3929  00105C  6FB1               	movwf	_efgtoa$1307& (0+255),b
  3930  00105E  6BB2               	clrf	(_efgtoa$1307+1)& (0+255),b
  3931                           
  3932                           ; BSR set to: 0
  3933  001060  51B1               	movf	_efgtoa$1307& (0+255),w,b
  3934  001062  11B2               	iorwf	(_efgtoa$1307+1)& (0+255),w,b
  3935  001064  B4D8               	btfsc	status,2,c
  3936  001066  D00D               	goto	l6697
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3940  001068  0E23               	movlw	low _dbuf
  3941  00106A  25DD               	addwf	efgtoa@n& (0+255),w,b
  3942  00106C  6F60               	movwf	strcpy@dest& (0+255),b
  3943  00106E  0E01               	movlw	high _dbuf
  3944  001070  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3945  001072  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3946  001074  0E73               	movlw	low STR_7
  3947  001076  6F62               	movwf	strcpy@src& (0+255),b
  3948  001078  0E0F               	movlw	high STR_7
  3949  00107A  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3950  00107C  EC55  F020         	call	_strcpy	;wreg free
  3951                           
  3952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3953  001080  D00C               	goto	l6699
  3954  001082                     l6697:
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3958  001082  0E23               	movlw	low _dbuf
  3959  001084  25DD               	addwf	efgtoa@n& (0+255),w,b
  3960  001086  6F60               	movwf	strcpy@dest& (0+255),b
  3961  001088  0E01               	movlw	high _dbuf
  3962  00108A  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3963  00108C  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3964  00108E  0E7B               	movlw	low STR_8
  3965  001090  6F62               	movwf	strcpy@src& (0+255),b
  3966  001092  0E0F               	movlw	high STR_8
  3967  001094  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3968  001096  EC55  F020         	call	_strcpy	;wreg free
  3969  00109A                     l6699:
  3970                           
  3971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3972  00109A  0100               	movlb	0	; () banked
  3973  00109C  0EFD               	movlw	253
  3974  00109E  27CA               	addwf	efgtoa@w& (0+255),f,b
  3975  0010A0  0EFF               	movlw	255
  3976  0010A2  23CB               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3977  0010A4                     l6701:
  3978                           
  3979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3980  0010A4  C09F  F070         	movff	efgtoa@fp,pad@fp
  3981  0010A8  C0A0  F071         	movff	efgtoa@fp+1,pad@fp+1
  3982  0010AC  0E23               	movlw	low _dbuf
  3983  0010AE  0100               	movlb	0	; () banked
  3984  0010B0  6F72               	movwf	pad@buf& (0+255),b
  3985  0010B2  0E01               	movlw	high _dbuf
  3986  0010B4  6F73               	movwf	(pad@buf+1)& (0+255),b
  3987  0010B6  C0CA  F074         	movff	efgtoa@w,pad@p
  3988  0010BA  C0CB  F075         	movff	efgtoa@w+1,pad@p+1
  3989  0010BE  EC77  F01D         	call	_pad	;wreg free
  3990  0010C2  C070  F09F         	movff	?_pad,?_efgtoa
  3991  0010C6  C071  F0A0         	movff	?_pad+1,?_efgtoa+1
  3992  0010CA  0012               	return	
  3993  0010CC                     l6705:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3997  0010CC  C0D7  F060         	movff	efgtoa@g,___fpclassifyf@x
  3998  0010D0  C0D8  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3999  0010D4  C0D9  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4000  0010D8  C0DA  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4001  0010DC  EC50  F01B         	call	___fpclassifyf	;wreg free
  4002  0010E0  0100               	movlb	0	; () banked
  4003  0010E2  5160               	movf	?___fpclassifyf& (0+255),w,b
  4004  0010E4  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  4005  0010E6  A4D8               	btfss	status,2,c
  4006  0010E8  D034               	goto	l6723
  4007                           
  4008                           ; BSR set to: 0
  4009  0010EA  0EBF               	movlw	191
  4010  0010EC  6FA6               	movwf	??_efgtoa& (0+255),b
  4011  0010EE  0EFF               	movlw	255
  4012  0010F0  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  4013  0010F2  51A5               	movf	efgtoa@c& (0+255),w,b
  4014  0010F4  6FA8               	movwf	(??_efgtoa+2)& (0+255),b
  4015  0010F6  6BA9               	clrf	(??_efgtoa+3)& (0+255),b
  4016  0010F8  51A6               	movf	??_efgtoa& (0+255),w,b
  4017  0010FA  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  4018  0010FC  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  4019  0010FE  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4020  001100  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  4021  001102  E106               	bnz	u8530
  4022  001104  0E1A               	movlw	26
  4023  001106  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  4024  001108  B0D8               	btfsc	status,0,c
  4025  00110A  D002               	goto	u8530
  4026  00110C  0E01               	movlw	1
  4027  00110E  D001               	goto	u8540
  4028  001110                     u8530:
  4029  001110  0E00               	movlw	0
  4030  001112                     u8540:
  4031  001112  6FB3               	movwf	_efgtoa$1311& (0+255),b
  4032  001114  6BB4               	clrf	(_efgtoa$1311+1)& (0+255),b
  4033                           
  4034                           ; BSR set to: 0
  4035  001116  51B3               	movf	_efgtoa$1311& (0+255),w,b
  4036  001118  11B4               	iorwf	(_efgtoa$1311+1)& (0+255),w,b
  4037  00111A  B4D8               	btfsc	status,2,c
  4038  00111C  D00D               	goto	l6715
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4042  00111E  0E23               	movlw	low _dbuf
  4043  001120  25DD               	addwf	efgtoa@n& (0+255),w,b
  4044  001122  6F60               	movwf	strcpy@dest& (0+255),b
  4045  001124  0E01               	movlw	high _dbuf
  4046  001126  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4047  001128  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4048  00112A  0E77               	movlw	low STR_11
  4049  00112C  6F62               	movwf	strcpy@src& (0+255),b
  4050  00112E  0E0F               	movlw	high STR_11
  4051  001130  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4052  001132  EC55  F020         	call	_strcpy	;wreg free
  4053                           
  4054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4055  001136  D7B1               	goto	l6699
  4056  001138                     l6715:
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4060  001138  0E23               	movlw	low _dbuf
  4061  00113A  25DD               	addwf	efgtoa@n& (0+255),w,b
  4062  00113C  6F60               	movwf	strcpy@dest& (0+255),b
  4063  00113E  0E01               	movlw	high _dbuf
  4064  001140  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4065  001142  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4066  001144  0E7F               	movlw	low STR_12
  4067  001146  6F62               	movwf	strcpy@src& (0+255),b
  4068  001148  0E0F               	movlw	high STR_12
  4069  00114A  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4070  00114C  EC55  F020         	call	_strcpy	;wreg free
  4071  001150  D7A4               	goto	l6699
  4072  001152                     l6723:
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4076  001152  0E00               	movlw	0
  4077  001154  6FDF               	movwf	efgtoa@u& (0+255),b
  4078  001156  0E00               	movlw	0
  4079  001158  6FE0               	movwf	(efgtoa@u+1)& (0+255),b
  4080  00115A  0E80               	movlw	128
  4081  00115C  6FE1               	movwf	(efgtoa@u+2)& (0+255),b
  4082  00115E  0E3F               	movlw	63
  4083  001160  6FE2               	movwf	(efgtoa@u+3)& (0+255),b
  4084                           
  4085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4086  001162  0E00               	movlw	0
  4087  001164  6FDC               	movwf	(efgtoa@e+1)& (0+255),b
  4088  001166  0E00               	movlw	0
  4089  001168  6FDB               	movwf	efgtoa@e& (0+255),b
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4093  00116A  C0D7  F060         	movff	efgtoa@g,___fleq@ff1
  4094  00116E  C0D8  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  4095  001172  C0D9  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  4096  001176  C0DA  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  4097  00117A  0E00               	movlw	0
  4098  00117C  6F64               	movwf	___fleq@ff2& (0+255),b
  4099  00117E  0E00               	movlw	0
  4100  001180  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4101  001182  0E00               	movlw	0
  4102  001184  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4103  001186  0E00               	movlw	0
  4104  001188  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4105  00118A  ECC5  F01D         	call	___fleq	;wreg free
  4106  00118E  0100               	movlb	0	; () banked
  4107  001190  A0D8               	btfss	status,0,c
  4108  001192  D01E               	goto	l6733
  4109  001194  D078               	goto	u8580
  4110  001196                     l6729:
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4114  001196  C0DF  F06E         	movff	efgtoa@u,___flmul@b
  4115  00119A  C0E0  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4116  00119E  C0E1  F070         	movff	efgtoa@u+2,___flmul@b+2
  4117  0011A2  C0E2  F071         	movff	efgtoa@u+3,___flmul@b+3
  4118  0011A6  0E00               	movlw	0
  4119  0011A8  6F72               	movwf	___flmul@a& (0+255),b
  4120  0011AA  0E00               	movlw	0
  4121  0011AC  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4122  0011AE  0E20               	movlw	32
  4123  0011B0  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4124  0011B2  0E41               	movlw	65
  4125  0011B4  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4126  0011B6  ECBA  F00F         	call	___flmul	;wreg free
  4127  0011BA  C06E  F0DF         	movff	?___flmul,efgtoa@u
  4128  0011BE  C06F  F0E0         	movff	?___flmul+1,efgtoa@u+1
  4129  0011C2  C070  F0E1         	movff	?___flmul+2,efgtoa@u+2
  4130  0011C6  C071  F0E2         	movff	?___flmul+3,efgtoa@u+3
  4131                           
  4132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4133  0011CA  0100               	movlb	0	; () banked
  4134  0011CC  4BDB               	infsnz	efgtoa@e& (0+255),f,b
  4135  0011CE  2BDC               	incf	(efgtoa@e+1)& (0+255),f,b
  4136  0011D0                     l6733:
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4140  0011D0  C0D7  F087         	movff	efgtoa@g,___flge@ff1
  4141  0011D4  C0D8  F088         	movff	efgtoa@g+1,___flge@ff1+1
  4142  0011D8  C0D9  F089         	movff	efgtoa@g+2,___flge@ff1+2
  4143  0011DC  C0DA  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  4144  0011E0  0E00               	movlw	0
  4145  0011E2  6F72               	movwf	___flmul@a& (0+255),b
  4146  0011E4  0E00               	movlw	0
  4147  0011E6  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4148  0011E8  0E20               	movlw	32
  4149  0011EA  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4150  0011EC  0E41               	movlw	65
  4151  0011EE  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4152  0011F0  C0DF  F06E         	movff	efgtoa@u,___flmul@b
  4153  0011F4  C0E0  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4154  0011F8  C0E1  F070         	movff	efgtoa@u+2,___flmul@b+2
  4155  0011FC  C0E2  F071         	movff	efgtoa@u+3,___flmul@b+3
  4156  001200  ECBA  F00F         	call	___flmul	;wreg free
  4157  001204  C06E  F08B         	movff	?___flmul,___flge@ff2
  4158  001208  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  4159  00120C  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  4160  001210  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  4161  001214  EC7F  F01A         	call	___flge	;wreg free
  4162  001218  0100               	movlb	0	; () banked
  4163  00121A  A0D8               	btfss	status,0,c
  4164  00121C  D01F               	goto	l6739
  4165  00121E  D7BB               	goto	l6729
  4166  001220                     l6735:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4170  001220  C0DF  F060         	movff	efgtoa@u,___fldiv@b
  4171  001224  C0E0  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4172  001228  C0E1  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4173  00122C  C0E2  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4174  001230  0E00               	movlw	0
  4175  001232  6F64               	movwf	___fldiv@a& (0+255),b
  4176  001234  0E00               	movlw	0
  4177  001236  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4178  001238  0E20               	movlw	32
  4179  00123A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4180  00123C  0E41               	movlw	65
  4181  00123E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4182  001240  EC71  F014         	call	___fldiv	;wreg free
  4183  001244  C060  F0DF         	movff	?___fldiv,efgtoa@u
  4184  001248  C061  F0E0         	movff	?___fldiv+1,efgtoa@u+1
  4185  00124C  C062  F0E1         	movff	?___fldiv+2,efgtoa@u+2
  4186  001250  C063  F0E2         	movff	?___fldiv+3,efgtoa@u+3
  4187                           
  4188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4189  001254  0100               	movlb	0	; () banked
  4190  001256  07DB               	decf	efgtoa@e& (0+255),f,b
  4191  001258  A0D8               	btfss	status,0,c
  4192  00125A  07DC               	decf	(efgtoa@e+1)& (0+255),f,b
  4193  00125C                     l6739:
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4197  00125C  C0D7  F087         	movff	efgtoa@g,___flge@ff1
  4198  001260  C0D8  F088         	movff	efgtoa@g+1,___flge@ff1+1
  4199  001264  C0D9  F089         	movff	efgtoa@g+2,___flge@ff1+2
  4200  001268  C0DA  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  4201  00126C  C0DF  F08B         	movff	efgtoa@u,___flge@ff2
  4202  001270  C0E0  F08C         	movff	efgtoa@u+1,___flge@ff2+1
  4203  001274  C0E1  F08D         	movff	efgtoa@u+2,___flge@ff2+2
  4204  001278  C0E2  F08E         	movff	efgtoa@u+3,___flge@ff2+3
  4205  00127C  EC7F  F01A         	call	___flge	;wreg free
  4206  001280  0100               	movlb	0	; () banked
  4207  001282  A0D8               	btfss	status,0,c
  4208  001284  D7CD               	goto	l6735
  4209  001286                     u8580:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4213  001286  C0A5  F066         	movff	efgtoa@c,tolower@c
  4214  00128A  6B67               	clrf	(tolower@c+1)& (0+255),b
  4215  00128C  ECD1  F020         	call	_tolower	;wreg free
  4216  001290  0100               	movlb	0	; () banked
  4217  001292  5166               	movf	?_tolower& (0+255),w,b
  4218  001294  6FCC               	movwf	efgtoa@mode& (0+255),b
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4222  001296  C0CC  F0C9         	movff	efgtoa@mode,efgtoa@nmode
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4226  00129A  0E67               	movlw	103
  4227  00129C  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4228  00129E  A4D8               	btfss	status,2,c
  4229  0012A0  D019               	goto	l6755
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4233  0012A2  5038               	movf	_prec,w,c
  4234  0012A4  1039               	iorwf	_prec+1,w,c
  4235  0012A6  A4D8               	btfss	status,2,c
  4236  0012A8  D004               	goto	l6751
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4240  0012AA  0E00               	movlw	0
  4241  0012AC  6E39               	movwf	_prec+1,c
  4242  0012AE  0E01               	movlw	1
  4243  0012B0  6E38               	movwf	_prec,c
  4244  0012B2                     l6751:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4248  0012B2  BE39               	btfsc	_prec+1,7,c
  4249  0012B4  D005               	goto	u8610
  4250  0012B6  5039               	movf	_prec+1,w,c
  4251  0012B8  E108               	bnz	l383
  4252  0012BA  0438               	decf	_prec,w,c
  4253  0012BC  B0D8               	btfsc	status,0,c
  4254  0012BE  D005               	goto	l383
  4255  0012C0                     u8610:
  4256                           
  4257                           ; BSR set to: 0
  4258  0012C0  0E00               	movlw	0
  4259  0012C2  6FC8               	movwf	(efgtoa@p+1)& (0+255),b
  4260  0012C4  0E06               	movlw	6
  4261  0012C6  6FC7               	movwf	efgtoa@p& (0+255),b
  4262  0012C8  D008               	goto	l6761
  4263  0012CA                     l383:
  4264                           
  4265                           ; BSR set to: 0
  4266  0012CA  C038  F0C7         	movff	_prec,efgtoa@p
  4267  0012CE  C039  F0C8         	movff	_prec+1,efgtoa@p+1
  4268  0012D2  D003               	goto	l6761
  4269  0012D4                     l6755:
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4273  0012D4  AE39               	btfss	_prec+1,7,c
  4274  0012D6  D7F9               	goto	l383
  4275  0012D8  D7F3               	goto	u8610
  4276  0012DA                     l6761:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4280  0012DA  0E67               	movlw	103
  4281  0012DC  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4282  0012DE  A4D8               	btfss	status,2,c
  4283  0012E0  D022               	goto	l6771
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4287  0012E2  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4288  0012E4  D006               	goto	u8640
  4289  0012E6  0EFC               	movlw	252
  4290  0012E8  5DDB               	subwf	efgtoa@e& (0+255),w,b
  4291  0012EA  0EFF               	movlw	255
  4292  0012EC  59DC               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4293  0012EE  A0D8               	btfss	status,0,c
  4294  0012F0  D018               	goto	l6769
  4295  0012F2                     u8640:
  4296                           
  4297                           ; BSR set to: 0
  4298  0012F2  0EFF               	movlw	255
  4299  0012F4  6FA6               	movwf	??_efgtoa& (0+255),b
  4300  0012F6  0EFF               	movlw	255
  4301  0012F8  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  4302  0012FA  C0C7  F0A8         	movff	efgtoa@p,??_efgtoa+2
  4303  0012FE  C0C8  F0A9         	movff	efgtoa@p+1,??_efgtoa+3
  4304  001302  51A6               	movf	??_efgtoa& (0+255),w,b
  4305  001304  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  4306  001306  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  4307  001308  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4308  00130A  51DB               	movf	efgtoa@e& (0+255),w,b
  4309  00130C  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  4310  00130E  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  4311  001310  0A80               	xorlw	128
  4312  001312  6FAA               	movwf	(??_efgtoa+4)& (0+255),b
  4313  001314  51DC               	movf	(efgtoa@e+1)& (0+255),w,b
  4314  001316  0A80               	xorlw	128
  4315  001318  59AA               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4316  00131A  A0D8               	btfss	status,0,c
  4317  00131C  D002               	goto	l6769
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4321  00131E  0E66               	movlw	102
  4322  001320  D001               	goto	L3
  4323  001322                     l6769:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4327  001322  0E65               	movlw	101
  4328  001324                     L3:
  4329  001324  6FC9               	movwf	efgtoa@nmode& (0+255),b
  4330  001326                     l6771:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4334  001326  C0C7  F0BF         	movff	efgtoa@p,efgtoa@m
  4335  00132A  C0C8  F0C0         	movff	efgtoa@p+1,efgtoa@m+1
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4339  00132E  0E67               	movlw	103
  4340  001330  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4341  001332  A4D8               	btfss	status,2,c
  4342  001334  D005               	goto	u8680
  4343                           
  4344                           ; BSR set to: 0
  4345  001336  0E66               	movlw	102
  4346  001338  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4347  00133A  B4D8               	btfsc	status,2,c
  4348                           
  4349                           ; BSR set to: 0
  4350  00133C  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4351  00133E  D002               	goto	l6781
  4352  001340                     u8680:
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4356  001340  4BBF               	infsnz	efgtoa@m& (0+255),f,b
  4357  001342  2BC0               	incf	(efgtoa@m+1)& (0+255),f,b
  4358  001344                     l6781:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4362  001344  0E66               	movlw	102
  4363  001346  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4364  001348  A4D8               	btfss	status,2,c
  4365  00134A  D016               	goto	l6791
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4369  00134C  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4370  00134E  D00C               	goto	l6787
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4374  001350  0E00               	movlw	0
  4375  001352  6FDF               	movwf	efgtoa@u& (0+255),b
  4376  001354  0E00               	movlw	0
  4377  001356  6FE0               	movwf	(efgtoa@u+1)& (0+255),b
  4378  001358  0E80               	movlw	128
  4379  00135A  6FE1               	movwf	(efgtoa@u+2)& (0+255),b
  4380  00135C  0E3F               	movlw	63
  4381  00135E  6FE2               	movwf	(efgtoa@u+3)& (0+255),b
  4382                           
  4383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4384  001360  0E00               	movlw	0
  4385  001362  6FDC               	movwf	(efgtoa@e+1)& (0+255),b
  4386  001364  0E00               	movlw	0
  4387  001366  6FDB               	movwf	efgtoa@e& (0+255),b
  4388  001368                     l6787:
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4392  001368  0E67               	movlw	103
  4393  00136A  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4394  00136C  B4D8               	btfsc	status,2,c
  4395  00136E  D004               	goto	l6791
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4399  001370  51DB               	movf	efgtoa@e& (0+255),w,b
  4400  001372  27BF               	addwf	efgtoa@m& (0+255),f,b
  4401  001374  51DC               	movf	(efgtoa@e+1)& (0+255),w,b
  4402  001376  23C0               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4403  001378                     l6791:
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4407  001378  0E00               	movlw	0
  4408  00137A  6FD6               	movwf	(efgtoa@i+1)& (0+255),b
  4409  00137C  0E00               	movlw	0
  4410  00137E  6FD5               	movwf	efgtoa@i& (0+255),b
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4414  001380  C0D7  F0CD         	movff	efgtoa@g,efgtoa@h
  4415  001384  C0D8  F0CE         	movff	efgtoa@g+1,efgtoa@h+1
  4416  001388  C0D9  F0CF         	movff	efgtoa@g+2,efgtoa@h+2
  4417  00138C  C0DA  F0D0         	movff	efgtoa@g+3,efgtoa@h+3
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4421  001390  C0DF  F0AB         	movff	efgtoa@u,efgtoa@ou
  4422  001394  C0E0  F0AC         	movff	efgtoa@u+1,efgtoa@ou+1
  4423  001398  C0E1  F0AD         	movff	efgtoa@u+2,efgtoa@ou+2
  4424  00139C  C0E2  F0AE         	movff	efgtoa@u+3,efgtoa@ou+3
  4425                           
  4426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4427  0013A0  D07C               	goto	l6805
  4428  0013A2                     l6797:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4432  0013A2  C0CD  F060         	movff	efgtoa@h,___fldiv@b
  4433  0013A6  C0CE  F061         	movff	efgtoa@h+1,___fldiv@b+1
  4434  0013AA  C0CF  F062         	movff	efgtoa@h+2,___fldiv@b+2
  4435  0013AE  C0D0  F063         	movff	efgtoa@h+3,___fldiv@b+3
  4436  0013B2  C0DF  F064         	movff	efgtoa@u,___fldiv@a
  4437  0013B6  C0E0  F065         	movff	efgtoa@u+1,___fldiv@a+1
  4438  0013BA  C0E1  F066         	movff	efgtoa@u+2,___fldiv@a+2
  4439  0013BE  C0E2  F067         	movff	efgtoa@u+3,___fldiv@a+3
  4440  0013C2  EC71  F014         	call	___fldiv	;wreg free
  4441  0013C6  C060  F079         	movff	?___fldiv,floorf@x
  4442  0013CA  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  4443  0013CE  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  4444  0013D2  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  4445  0013D6  ECB6  F015         	call	_floorf	;wreg free
  4446  0013DA  C079  F0D1         	movff	?_floorf,efgtoa@l
  4447  0013DE  C07A  F0D2         	movff	?_floorf+1,efgtoa@l+1
  4448  0013E2  C07B  F0D3         	movff	?_floorf+2,efgtoa@l+2
  4449  0013E6  C07C  F0D4         	movff	?_floorf+3,efgtoa@l+3
  4450                           
  4451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4452  0013EA  C0D1  F087         	movff	efgtoa@l,___fltol@f1
  4453  0013EE  C0D2  F088         	movff	efgtoa@l+1,___fltol@f1+1
  4454  0013F2  C0D3  F089         	movff	efgtoa@l+2,___fltol@f1+2
  4455  0013F6  C0D4  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  4456  0013FA  EC18  F01C         	call	___fltol	;wreg free
  4457  0013FE  C087  F0C3         	movff	?___fltol,efgtoa@d
  4458  001402  C088  F0C4         	movff	?___fltol+1,efgtoa@d+1
  4459                           
  4460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4461  001406  C0CD  F097         	movff	efgtoa@h,___flsub@b
  4462  00140A  C0CE  F098         	movff	efgtoa@h+1,___flsub@b+1
  4463  00140E  C0CF  F099         	movff	efgtoa@h+2,___flsub@b+2
  4464  001412  C0D0  F09A         	movff	efgtoa@h+3,___flsub@b+3
  4465  001416  C0DF  F072         	movff	efgtoa@u,___flmul@a
  4466  00141A  C0E0  F073         	movff	efgtoa@u+1,___flmul@a+1
  4467  00141E  C0E1  F074         	movff	efgtoa@u+2,___flmul@a+2
  4468  001422  C0E2  F075         	movff	efgtoa@u+3,___flmul@a+3
  4469  001426  C0D1  F06E         	movff	efgtoa@l,___flmul@b
  4470  00142A  C0D2  F06F         	movff	efgtoa@l+1,___flmul@b+1
  4471  00142E  C0D3  F070         	movff	efgtoa@l+2,___flmul@b+2
  4472  001432  C0D4  F071         	movff	efgtoa@l+3,___flmul@b+3
  4473  001436  ECBA  F00F         	call	___flmul	;wreg free
  4474  00143A  C06E  F09B         	movff	?___flmul,___flsub@a
  4475  00143E  C06F  F09C         	movff	?___flmul+1,___flsub@a+1
  4476  001442  C070  F09D         	movff	?___flmul+2,___flsub@a+2
  4477  001446  C071  F09E         	movff	?___flmul+3,___flsub@a+3
  4478  00144A  ECF8  F020         	call	___flsub	;wreg free
  4479  00144E  C097  F0CD         	movff	?___flsub,efgtoa@h
  4480  001452  C098  F0CE         	movff	?___flsub+1,efgtoa@h+1
  4481  001456  C099  F0CF         	movff	?___flsub+2,efgtoa@h+2
  4482  00145A  C09A  F0D0         	movff	?___flsub+3,efgtoa@h+3
  4483                           
  4484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4485  00145E  C0DF  F060         	movff	efgtoa@u,___fldiv@b
  4486  001462  C0E0  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4487  001466  C0E1  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4488  00146A  C0E2  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4489  00146E  0E00               	movlw	0
  4490  001470  0100               	movlb	0	; () banked
  4491  001472  6F64               	movwf	___fldiv@a& (0+255),b
  4492  001474  0E00               	movlw	0
  4493  001476  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4494  001478  0E20               	movlw	32
  4495  00147A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4496  00147C  0E41               	movlw	65
  4497  00147E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4498  001480  EC71  F014         	call	___fldiv	;wreg free
  4499  001484  C060  F0DF         	movff	?___fldiv,efgtoa@u
  4500  001488  C061  F0E0         	movff	?___fldiv+1,efgtoa@u+1
  4501  00148C  C062  F0E1         	movff	?___fldiv+2,efgtoa@u+2
  4502  001490  C063  F0E2         	movff	?___fldiv+3,efgtoa@u+3
  4503                           
  4504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4505  001494  0100               	movlb	0	; () banked
  4506  001496  4BD5               	infsnz	efgtoa@i& (0+255),f,b
  4507  001498  2BD6               	incf	(efgtoa@i+1)& (0+255),f,b
  4508  00149A                     l6805:
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4512  00149A  51BF               	movf	efgtoa@m& (0+255),w,b
  4513  00149C  5DD5               	subwf	efgtoa@i& (0+255),w,b
  4514  00149E  51D6               	movf	(efgtoa@i+1)& (0+255),w,b
  4515  0014A0  0A80               	xorlw	128
  4516  0014A2  6FA6               	movwf	??_efgtoa& (0+255),b
  4517  0014A4  51C0               	movf	(efgtoa@m+1)& (0+255),w,b
  4518  0014A6  0A80               	xorlw	128
  4519  0014A8  59A6               	subwfb	??_efgtoa& (0+255),w,b
  4520  0014AA  A0D8               	btfss	status,0,c
  4521  0014AC  D77A               	goto	l6797
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4525  0014AE  C0DF  F06E         	movff	efgtoa@u,___flmul@b
  4526  0014B2  C0E0  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4527  0014B6  C0E1  F070         	movff	efgtoa@u+2,___flmul@b+2
  4528  0014BA  C0E2  F071         	movff	efgtoa@u+3,___flmul@b+3
  4529  0014BE  0E00               	movlw	0
  4530  0014C0  6F72               	movwf	___flmul@a& (0+255),b
  4531  0014C2  0E00               	movlw	0
  4532  0014C4  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4533  0014C6  0EA0               	movlw	160
  4534  0014C8  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4535  0014CA  0E40               	movlw	64
  4536  0014CC  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4537  0014CE  ECBA  F00F         	call	___flmul	;wreg free
  4538  0014D2  C06E  F0D1         	movff	?___flmul,efgtoa@l
  4539  0014D6  C06F  F0D2         	movff	?___flmul+1,efgtoa@l+1
  4540  0014DA  C070  F0D3         	movff	?___flmul+2,efgtoa@l+2
  4541  0014DE  C071  F0D4         	movff	?___flmul+3,efgtoa@l+3
  4542                           
  4543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4544  0014E2  C0CD  F087         	movff	efgtoa@h,___flge@ff1
  4545  0014E6  C0CE  F088         	movff	efgtoa@h+1,___flge@ff1+1
  4546  0014EA  C0CF  F089         	movff	efgtoa@h+2,___flge@ff1+2
  4547  0014EE  C0D0  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  4548  0014F2  C0D1  F08B         	movff	efgtoa@l,___flge@ff2
  4549  0014F6  C0D2  F08C         	movff	efgtoa@l+1,___flge@ff2+1
  4550  0014FA  C0D3  F08D         	movff	efgtoa@l+2,___flge@ff2+2
  4551  0014FE  C0D4  F08E         	movff	efgtoa@l+3,___flge@ff2+3
  4552  001502  EC7F  F01A         	call	___flge	;wreg free
  4553  001506  0100               	movlb	0	; () banked
  4554  001508  A0D8               	btfss	status,0,c
  4555  00150A  D016               	goto	u8750
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4559                           
  4560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4564  00150C  C0CD  F060         	movff	efgtoa@h,___fleq@ff1
  4565  001510  C0CE  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  4566  001514  C0CF  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  4567  001518  C0D0  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  4568  00151C  C0D1  F064         	movff	efgtoa@l,___fleq@ff2
  4569  001520  C0D2  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  4570  001524  C0D3  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  4571  001528  C0D4  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  4572  00152C  ECC5  F01D         	call	___fleq	;wreg free
  4573  001530  0100               	movlb	0	; () banked
  4574  001532  B0D8               	btfsc	status,0,c
  4575                           
  4576                           ; BSR set to: 0
  4577  001534  B1C3               	btfsc	efgtoa@d& (0+255),0,b
  4578  001536  D008               	goto	l6819
  4579  001538                     u8750:
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4583  001538  0E00               	movlw	0
  4584  00153A  6FD1               	movwf	efgtoa@l& (0+255),b
  4585  00153C  0E00               	movlw	0
  4586  00153E  6FD2               	movwf	(efgtoa@l+1)& (0+255),b
  4587  001540  0E00               	movlw	0
  4588  001542  6FD3               	movwf	(efgtoa@l+2)& (0+255),b
  4589  001544  0E00               	movlw	0
  4590  001546  6FD4               	movwf	(efgtoa@l+3)& (0+255),b
  4591  001548                     l6819:
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4595  001548  C0D7  F087         	movff	efgtoa@g,___fladd@b
  4596  00154C  C0D8  F088         	movff	efgtoa@g+1,___fladd@b+1
  4597  001550  C0D9  F089         	movff	efgtoa@g+2,___fladd@b+2
  4598  001554  C0DA  F08A         	movff	efgtoa@g+3,___fladd@b+3
  4599  001558  C0D1  F08B         	movff	efgtoa@l,___fladd@a
  4600  00155C  C0D2  F08C         	movff	efgtoa@l+1,___fladd@a+1
  4601  001560  C0D3  F08D         	movff	efgtoa@l+2,___fladd@a+2
  4602  001564  C0D4  F08E         	movff	efgtoa@l+3,___fladd@a+3
  4603  001568  EC64  F011         	call	___fladd	;wreg free
  4604  00156C  C087  F0CD         	movff	?___fladd,efgtoa@h
  4605  001570  C088  F0CE         	movff	?___fladd+1,efgtoa@h+1
  4606  001574  C089  F0CF         	movff	?___fladd+2,efgtoa@h+2
  4607  001578  C08A  F0D0         	movff	?___fladd+3,efgtoa@h+3
  4608                           
  4609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4610  00157C  C0AB  F0DF         	movff	efgtoa@ou,efgtoa@u
  4611  001580  C0AC  F0E0         	movff	efgtoa@ou+1,efgtoa@u+1
  4612  001584  C0AD  F0E1         	movff	efgtoa@ou+2,efgtoa@u+2
  4613  001588  C0AE  F0E2         	movff	efgtoa@ou+3,efgtoa@u+3
  4614                           
  4615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4616  00158C  0E65               	movlw	101
  4617  00158E  0100               	movlb	0	; () banked
  4618  001590  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4619  001592  B4D8               	btfsc	status,2,c
  4620  001594  D005               	goto	l6827
  4621                           
  4622                           ; BSR set to: 0
  4623  001596  C0DB  F0C1         	movff	efgtoa@e,efgtoa@ne
  4624  00159A  C0DC  F0C2         	movff	efgtoa@e+1,efgtoa@ne+1
  4625  00159E  D004               	goto	l409
  4626  0015A0                     l6827:
  4627                           
  4628                           ; BSR set to: 0
  4629  0015A0  0E00               	movlw	0
  4630  0015A2  6FC2               	movwf	(efgtoa@ne+1)& (0+255),b
  4631  0015A4  0E00               	movlw	0
  4632  0015A6  6FC1               	movwf	efgtoa@ne& (0+255),b
  4633  0015A8                     l409:
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4637  0015A8  0E00               	movlw	0
  4638  0015AA  6FBE               	movwf	(efgtoa@pp+1)& (0+255),b
  4639  0015AC  0E00               	movlw	0
  4640  0015AE  6FBD               	movwf	efgtoa@pp& (0+255),b
  4641                           
  4642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4643  0015B0  0E00               	movlw	0
  4644  0015B2  6FBC               	movwf	(efgtoa@t+1)& (0+255),b
  4645  0015B4  0E00               	movlw	0
  4646  0015B6  6FBB               	movwf	efgtoa@t& (0+255),b
  4647                           
  4648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4649  0015B8  0E00               	movlw	0
  4650  0015BA  6FD6               	movwf	(efgtoa@i+1)& (0+255),b
  4651  0015BC  0E00               	movlw	0
  4652  0015BE  6FD5               	movwf	efgtoa@i& (0+255),b
  4653                           
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4655  0015C0  D0C8               	goto	l6877
  4656  0015C2                     l6829:
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4660  0015C2  C0CD  F060         	movff	efgtoa@h,___fldiv@b
  4661  0015C6  C0CE  F061         	movff	efgtoa@h+1,___fldiv@b+1
  4662  0015CA  C0CF  F062         	movff	efgtoa@h+2,___fldiv@b+2
  4663  0015CE  C0D0  F063         	movff	efgtoa@h+3,___fldiv@b+3
  4664  0015D2  C0DF  F064         	movff	efgtoa@u,___fldiv@a
  4665  0015D6  C0E0  F065         	movff	efgtoa@u+1,___fldiv@a+1
  4666  0015DA  C0E1  F066         	movff	efgtoa@u+2,___fldiv@a+2
  4667  0015DE  C0E2  F067         	movff	efgtoa@u+3,___fldiv@a+3
  4668  0015E2  EC71  F014         	call	___fldiv	;wreg free
  4669  0015E6  C060  F079         	movff	?___fldiv,floorf@x
  4670  0015EA  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  4671  0015EE  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  4672  0015F2  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  4673  0015F6  ECB6  F015         	call	_floorf	;wreg free
  4674  0015FA  C079  F0D1         	movff	?_floorf,efgtoa@l
  4675  0015FE  C07A  F0D2         	movff	?_floorf+1,efgtoa@l+1
  4676  001602  C07B  F0D3         	movff	?_floorf+2,efgtoa@l+2
  4677  001606  C07C  F0D4         	movff	?_floorf+3,efgtoa@l+3
  4678                           
  4679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4680  00160A  C0D1  F087         	movff	efgtoa@l,___fltol@f1
  4681  00160E  C0D2  F088         	movff	efgtoa@l+1,___fltol@f1+1
  4682  001612  C0D3  F089         	movff	efgtoa@l+2,___fltol@f1+2
  4683  001616  C0D4  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  4684  00161A  EC18  F01C         	call	___fltol	;wreg free
  4685  00161E  C087  F0C3         	movff	?___fltol,efgtoa@d
  4686  001622  C088  F0C4         	movff	?___fltol+1,efgtoa@d+1
  4687                           
  4688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4689  001626  B83A               	btfsc	_flags,4,c
  4690  001628  D00D               	goto	l6841
  4691  00162A  0100               	movlb	0	; () banked
  4692  00162C  51C3               	movf	efgtoa@d& (0+255),w,b
  4693  00162E  11C4               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4694  001630  A4D8               	btfss	status,2,c
  4695  001632  D008               	goto	l6841
  4696                           
  4697                           ; BSR set to: 0
  4698  001634  0E67               	movlw	103
  4699  001636  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4700  001638  B4D8               	btfsc	status,2,c
  4701                           
  4702                           ; BSR set to: 0
  4703  00163A  AFC2               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4704  00163C  D003               	goto	l6841
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4708  00163E  4BBB               	infsnz	efgtoa@t& (0+255),f,b
  4709  001640  2BBC               	incf	(efgtoa@t+1)& (0+255),f,b
  4710                           
  4711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4712  001642  D03A               	goto	l6869
  4713  001644                     l6841:
  4714                           
  4715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4716  001644  0100               	movlb	0	; () banked
  4717  001646  51BD               	movf	efgtoa@pp& (0+255),w,b
  4718  001648  11BE               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4719  00164A  B4D8               	btfsc	status,2,c
  4720                           
  4721                           ; BSR set to: 0
  4722  00164C  AFC2               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4723  00164E  D022               	goto	l6861
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4727  001650  0E23               	movlw	low _dbuf
  4728  001652  25DD               	addwf	efgtoa@n& (0+255),w,b
  4729  001654  6ED9               	movwf	fsr2l,c
  4730  001656  0E01               	movlw	high _dbuf
  4731  001658  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4732  00165A  6EDA               	movwf	fsr2h,c
  4733  00165C  0E2E               	movlw	46
  4734  00165E  6EDF               	movwf	indf2,c
  4735                           
  4736                           ; BSR set to: 0
  4737  001660  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4738  001662  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4742  001664  07CA               	decf	efgtoa@w& (0+255),f,b
  4743  001666  A0D8               	btfss	status,0,c
  4744  001668  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4748  00166A  0E00               	movlw	0
  4749  00166C  6FBE               	movwf	(efgtoa@pp+1)& (0+255),b
  4750  00166E  0E01               	movlw	1
  4751  001670  6FBD               	movwf	efgtoa@pp& (0+255),b
  4752  001672  D010               	goto	l6861
  4753  001674                     l6853:
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4757  001674  0E23               	movlw	low _dbuf
  4758  001676  25DD               	addwf	efgtoa@n& (0+255),w,b
  4759  001678  6ED9               	movwf	fsr2l,c
  4760  00167A  0E01               	movlw	high _dbuf
  4761  00167C  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4762  00167E  6EDA               	movwf	fsr2h,c
  4763  001680  0E30               	movlw	48
  4764  001682  6EDF               	movwf	indf2,c
  4765                           
  4766                           ; BSR set to: 0
  4767  001684  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4768  001686  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4772  001688  07CA               	decf	efgtoa@w& (0+255),f,b
  4773  00168A  A0D8               	btfss	status,0,c
  4774  00168C  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4778  00168E  07BB               	decf	efgtoa@t& (0+255),f,b
  4779  001690  A0D8               	btfss	status,0,c
  4780  001692  07BC               	decf	(efgtoa@t+1)& (0+255),f,b
  4781  001694                     l6861:
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4785  001694  51BB               	movf	efgtoa@t& (0+255),w,b
  4786  001696  11BC               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4787  001698  A4D8               	btfss	status,2,c
  4788  00169A  D7EC               	goto	l6853
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4792  00169C  0E23               	movlw	low _dbuf
  4793  00169E  25DD               	addwf	efgtoa@n& (0+255),w,b
  4794  0016A0  6ED9               	movwf	fsr2l,c
  4795  0016A2  0E01               	movlw	high _dbuf
  4796  0016A4  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4797  0016A6  6EDA               	movwf	fsr2h,c
  4798  0016A8  51C3               	movf	efgtoa@d& (0+255),w,b
  4799  0016AA  0F30               	addlw	48
  4800  0016AC  6EDF               	movwf	indf2,c
  4801                           
  4802                           ; BSR set to: 0
  4803  0016AE  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4804  0016B0  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4808  0016B2  07CA               	decf	efgtoa@w& (0+255),f,b
  4809  0016B4  A0D8               	btfss	status,0,c
  4810  0016B6  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  4811  0016B8                     l6869:
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4815  0016B8  C0CD  F097         	movff	efgtoa@h,___flsub@b
  4816  0016BC  C0CE  F098         	movff	efgtoa@h+1,___flsub@b+1
  4817  0016C0  C0CF  F099         	movff	efgtoa@h+2,___flsub@b+2
  4818  0016C4  C0D0  F09A         	movff	efgtoa@h+3,___flsub@b+3
  4819  0016C8  C0DF  F072         	movff	efgtoa@u,___flmul@a
  4820  0016CC  C0E0  F073         	movff	efgtoa@u+1,___flmul@a+1
  4821  0016D0  C0E1  F074         	movff	efgtoa@u+2,___flmul@a+2
  4822  0016D4  C0E2  F075         	movff	efgtoa@u+3,___flmul@a+3
  4823  0016D8  C0D1  F06E         	movff	efgtoa@l,___flmul@b
  4824  0016DC  C0D2  F06F         	movff	efgtoa@l+1,___flmul@b+1
  4825  0016E0  C0D3  F070         	movff	efgtoa@l+2,___flmul@b+2
  4826  0016E4  C0D4  F071         	movff	efgtoa@l+3,___flmul@b+3
  4827  0016E8  ECBA  F00F         	call	___flmul	;wreg free
  4828  0016EC  C06E  F09B         	movff	?___flmul,___flsub@a
  4829  0016F0  C06F  F09C         	movff	?___flmul+1,___flsub@a+1
  4830  0016F4  C070  F09D         	movff	?___flmul+2,___flsub@a+2
  4831  0016F8  C071  F09E         	movff	?___flmul+3,___flsub@a+3
  4832  0016FC  ECF8  F020         	call	___flsub	;wreg free
  4833  001700  C097  F0CD         	movff	?___flsub,efgtoa@h
  4834  001704  C098  F0CE         	movff	?___flsub+1,efgtoa@h+1
  4835  001708  C099  F0CF         	movff	?___flsub+2,efgtoa@h+2
  4836  00170C  C09A  F0D0         	movff	?___flsub+3,efgtoa@h+3
  4837                           
  4838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4839  001710  C0DF  F060         	movff	efgtoa@u,___fldiv@b
  4840  001714  C0E0  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4841  001718  C0E1  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4842  00171C  C0E2  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4843  001720  0E00               	movlw	0
  4844  001722  0100               	movlb	0	; () banked
  4845  001724  6F64               	movwf	___fldiv@a& (0+255),b
  4846  001726  0E00               	movlw	0
  4847  001728  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4848  00172A  0E20               	movlw	32
  4849  00172C  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4850  00172E  0E41               	movlw	65
  4851  001730  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4852  001732  EC71  F014         	call	___fldiv	;wreg free
  4853  001736  C060  F0DF         	movff	?___fldiv,efgtoa@u
  4854  00173A  C061  F0E0         	movff	?___fldiv+1,efgtoa@u+1
  4855  00173E  C062  F0E1         	movff	?___fldiv+2,efgtoa@u+2
  4856  001742  C063  F0E2         	movff	?___fldiv+3,efgtoa@u+3
  4857                           
  4858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4859  001746  0100               	movlb	0	; () banked
  4860  001748  07C1               	decf	efgtoa@ne& (0+255),f,b
  4861  00174A  A0D8               	btfss	status,0,c
  4862  00174C  07C2               	decf	(efgtoa@ne+1)& (0+255),f,b
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4866  00174E  4BD5               	infsnz	efgtoa@i& (0+255),f,b
  4867  001750  2BD6               	incf	(efgtoa@i+1)& (0+255),f,b
  4868  001752                     l6877:
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4872  001752  51BF               	movf	efgtoa@m& (0+255),w,b
  4873  001754  5DD5               	subwf	efgtoa@i& (0+255),w,b
  4874  001756  51D6               	movf	(efgtoa@i+1)& (0+255),w,b
  4875  001758  0A80               	xorlw	128
  4876  00175A  6FA6               	movwf	??_efgtoa& (0+255),b
  4877  00175C  51C0               	movf	(efgtoa@m+1)& (0+255),w,b
  4878  00175E  0A80               	xorlw	128
  4879  001760  59A6               	subwfb	??_efgtoa& (0+255),w,b
  4880  001762  B0D8               	btfsc	status,0,c
  4881  001764  D008               	goto	u8850
  4882                           
  4883                           ; BSR set to: 0
  4884  001766  BFDE               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4885  001768  D72C               	goto	l6829
  4886  00176A  51DE               	movf	(efgtoa@n+1)& (0+255),w,b
  4887  00176C  E104               	bnz	u8850
  4888  00176E  0E4B               	movlw	75
  4889  001770  5DDD               	subwf	efgtoa@n& (0+255),w,b
  4890  001772  A0D8               	btfss	status,0,c
  4891  001774  D726               	goto	l6829
  4892  001776                     u8850:
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4896  001776  51BD               	movf	efgtoa@pp& (0+255),w,b
  4897  001778  11BE               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4898  00177A  B4D8               	btfsc	status,2,c
  4899                           
  4900                           ; BSR set to: 0
  4901  00177C  A83A               	btfss	_flags,4,c
  4902  00177E  D00A               	goto	l6889
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4906  001780  0E23               	movlw	low _dbuf
  4907  001782  25DD               	addwf	efgtoa@n& (0+255),w,b
  4908  001784  6ED9               	movwf	fsr2l,c
  4909  001786  0E01               	movlw	high _dbuf
  4910  001788  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4911  00178A  6EDA               	movwf	fsr2h,c
  4912  00178C  0E2E               	movlw	46
  4913  00178E  6EDF               	movwf	indf2,c
  4914                           
  4915                           ; BSR set to: 0
  4916  001790  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4917  001792  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4918  001794                     l6889:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4922  001794  0E23               	movlw	low _dbuf
  4923  001796  25DD               	addwf	efgtoa@n& (0+255),w,b
  4924  001798  6ED9               	movwf	fsr2l,c
  4925  00179A  0E01               	movlw	high _dbuf
  4926  00179C  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4927  00179E  6EDA               	movwf	fsr2h,c
  4928  0017A0  0E00               	movlw	0
  4929  0017A2  6EDF               	movwf	indf2,c
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4933  0017A4  0E65               	movlw	101
  4934  0017A6  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4935  0017A8  A4D8               	btfss	status,2,c
  4936  0017AA  D47C               	goto	l6701
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4940  0017AC  0E00               	movlw	0
  4941  0017AE  6FD6               	movwf	(efgtoa@i+1)& (0+255),b
  4942  0017B0  0E4F               	movlw	79
  4943  0017B2  6FD5               	movwf	efgtoa@i& (0+255),b
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4947  0017B4  0E23               	movlw	low _dbuf
  4948  0017B6  25D5               	addwf	efgtoa@i& (0+255),w,b
  4949  0017B8  6ED9               	movwf	fsr2l,c
  4950  0017BA  0E01               	movlw	high _dbuf
  4951  0017BC  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4952  0017BE  6EDA               	movwf	fsr2h,c
  4953  0017C0  0E00               	movlw	0
  4954  0017C2  6EDF               	movwf	indf2,c
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4958  0017C4  0E00               	movlw	0
  4959  0017C6  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  4960  0017C8  0E00               	movlw	0
  4961  0017CA  6FC5               	movwf	efgtoa@sign& (0+255),b
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4965  0017CC  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4966  0017CE  D008               	goto	l6905
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4970  0017D0  0E00               	movlw	0
  4971  0017D2  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  4972  0017D4  0E01               	movlw	1
  4973  0017D6  6FC5               	movwf	efgtoa@sign& (0+255),b
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4977  0017D8  6DDB               	negf	efgtoa@e& (0+255),b
  4978  0017DA  1FDC               	comf	(efgtoa@e+1)& (0+255),f,b
  4979  0017DC  B0D8               	btfsc	status,0,c
  4980  0017DE  2BDC               	incf	(efgtoa@e+1)& (0+255),f,b
  4981  0017E0                     l6905:
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4985  0017E0  0E00               	movlw	0
  4986  0017E2  6FC8               	movwf	(efgtoa@p+1)& (0+255),b
  4987  0017E4  0E02               	movlw	2
  4988  0017E6  6FC7               	movwf	efgtoa@p& (0+255),b
  4989                           
  4990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4991  0017E8  D02C               	goto	l6917
  4992  0017EA                     l6907:
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4996  0017EA  07D5               	decf	efgtoa@i& (0+255),f,b
  4997  0017EC  A0D8               	btfss	status,0,c
  4998  0017EE  07D6               	decf	(efgtoa@i+1)& (0+255),f,b
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  5002  0017F0  0E23               	movlw	low _dbuf
  5003  0017F2  25D5               	addwf	efgtoa@i& (0+255),w,b
  5004  0017F4  6ED9               	movwf	fsr2l,c
  5005  0017F6  0E01               	movlw	high _dbuf
  5006  0017F8  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5007  0017FA  6EDA               	movwf	fsr2h,c
  5008  0017FC  C0DB  F060         	movff	efgtoa@e,___awmod@dividend
  5009  001800  C0DC  F061         	movff	efgtoa@e+1,___awmod@dividend+1
  5010  001804  0E00               	movlw	0
  5011  001806  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5012  001808  0E0A               	movlw	10
  5013  00180A  6F62               	movwf	___awmod@divisor& (0+255),b
  5014  00180C  EC8E  F01F         	call	___awmod	;wreg free
  5015  001810  0100               	movlb	0	; () banked
  5016  001812  5160               	movf	?___awmod& (0+255),w,b
  5017  001814  0F30               	addlw	48
  5018  001816  6EDF               	movwf	indf2,c
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  5022  001818  C0DB  F060         	movff	efgtoa@e,___awdiv@dividend
  5023  00181C  C0DC  F061         	movff	efgtoa@e+1,___awdiv@dividend+1
  5024  001820  0E00               	movlw	0
  5025  001822  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5026  001824  0E0A               	movlw	10
  5027  001826  6F62               	movwf	___awdiv@divisor& (0+255),b
  5028  001828  EC4F  F01E         	call	___awdiv	;wreg free
  5029  00182C  C060  F0DB         	movff	?___awdiv,efgtoa@e
  5030  001830  C061  F0DC         	movff	?___awdiv+1,efgtoa@e+1
  5031                           
  5032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  5033  001834  0100               	movlb	0	; () banked
  5034  001836  07C7               	decf	efgtoa@p& (0+255),f,b
  5035  001838  A0D8               	btfss	status,0,c
  5036  00183A  07C8               	decf	(efgtoa@p+1)& (0+255),f,b
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  5040  00183C  07CA               	decf	efgtoa@w& (0+255),f,b
  5041  00183E  A0D8               	btfss	status,0,c
  5042  001840  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  5043  001842                     l6917:
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5047  001842  51DB               	movf	efgtoa@e& (0+255),w,b
  5048  001844  11DC               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5049  001846  A4D8               	btfss	status,2,c
  5050  001848  D7D0               	goto	l6907
  5051                           
  5052                           ; BSR set to: 0
  5053  00184A  BFC8               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5054  00184C  D005               	goto	u8910
  5055  00184E  51C8               	movf	(efgtoa@p+1)& (0+255),w,b
  5056  001850  E1CC               	bnz	l6907
  5057  001852  05C7               	decf	efgtoa@p& (0+255),w,b
  5058  001854  B0D8               	btfsc	status,0,c
  5059  001856  D7C9               	goto	l6907
  5060  001858                     u8910:
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  5064  001858  07D5               	decf	efgtoa@i& (0+255),f,b
  5065  00185A  A0D8               	btfss	status,0,c
  5066  00185C  07D6               	decf	(efgtoa@i+1)& (0+255),f,b
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  5070  00185E  51C5               	movf	efgtoa@sign& (0+255),w,b
  5071  001860  11C6               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5072  001862  A4D8               	btfss	status,2,c
  5073  001864  D004               	goto	l6927
  5074                           
  5075                           ; BSR set to: 0
  5076  001866  0E00               	movlw	0
  5077  001868  6FB6               	movwf	(_efgtoa$1315+1)& (0+255),b
  5078  00186A  0E2B               	movlw	43
  5079  00186C  D003               	goto	L4
  5080  00186E                     l6927:
  5081                           
  5082                           ; BSR set to: 0
  5083  00186E  0E00               	movlw	0
  5084  001870  6FB6               	movwf	(_efgtoa$1315+1)& (0+255),b
  5085  001872  0E2D               	movlw	45
  5086  001874                     L4:
  5087  001874  6FB5               	movwf	_efgtoa$1315& (0+255),b
  5088                           
  5089                           ; BSR set to: 0
  5090  001876  0E23               	movlw	low _dbuf
  5091  001878  25D5               	addwf	efgtoa@i& (0+255),w,b
  5092  00187A  6ED9               	movwf	fsr2l,c
  5093  00187C  0E01               	movlw	high _dbuf
  5094  00187E  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5095  001880  6EDA               	movwf	fsr2h,c
  5096  001882  C0B5  FFDF         	movff	_efgtoa$1315,indf2
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  5100  001886  07CA               	decf	efgtoa@w& (0+255),f,b
  5101  001888  A0D8               	btfss	status,0,c
  5102  00188A  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5106  00188C  07D5               	decf	efgtoa@i& (0+255),f,b
  5107  00188E  A0D8               	btfss	status,0,c
  5108  001890  07D6               	decf	(efgtoa@i+1)& (0+255),f,b
  5109                           
  5110                           ; BSR set to: 0
  5111  001892  0EBF               	movlw	191
  5112  001894  6FA6               	movwf	??_efgtoa& (0+255),b
  5113  001896  0EFF               	movlw	255
  5114  001898  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  5115  00189A  51A5               	movf	efgtoa@c& (0+255),w,b
  5116  00189C  6FA8               	movwf	(??_efgtoa+2)& (0+255),b
  5117  00189E  6BA9               	clrf	(??_efgtoa+3)& (0+255),b
  5118  0018A0  51A6               	movf	??_efgtoa& (0+255),w,b
  5119  0018A2  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  5120  0018A4  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  5121  0018A6  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5122  0018A8  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  5123  0018AA  E106               	bnz	u8930
  5124  0018AC  0E1A               	movlw	26
  5125  0018AE  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  5126  0018B0  B0D8               	btfsc	status,0,c
  5127  0018B2  D002               	goto	u8930
  5128  0018B4  0E01               	movlw	1
  5129  0018B6  D001               	goto	u8940
  5130  0018B8                     u8930:
  5131  0018B8  0E00               	movlw	0
  5132  0018BA                     u8940:
  5133  0018BA  6FB9               	movwf	_efgtoa$1317& (0+255),b
  5134  0018BC  6BBA               	clrf	(_efgtoa$1317+1)& (0+255),b
  5135                           
  5136                           ; BSR set to: 0
  5137  0018BE  51B9               	movf	_efgtoa$1317& (0+255),w,b
  5138  0018C0  11BA               	iorwf	(_efgtoa$1317+1)& (0+255),w,b
  5139  0018C2  A4D8               	btfss	status,2,c
  5140  0018C4  D004               	goto	l6943
  5141                           
  5142                           ; BSR set to: 0
  5143  0018C6  0E00               	movlw	0
  5144  0018C8  6FB8               	movwf	(_efgtoa$1316+1)& (0+255),b
  5145  0018CA  0E65               	movlw	101
  5146  0018CC  D003               	goto	L5
  5147  0018CE                     l6943:
  5148                           
  5149                           ; BSR set to: 0
  5150  0018CE  0E00               	movlw	0
  5151  0018D0  6FB8               	movwf	(_efgtoa$1316+1)& (0+255),b
  5152  0018D2  0E45               	movlw	69
  5153  0018D4                     L5:
  5154  0018D4  6FB7               	movwf	_efgtoa$1316& (0+255),b
  5155                           
  5156                           ; BSR set to: 0
  5157  0018D6  0E23               	movlw	low _dbuf
  5158  0018D8  25D5               	addwf	efgtoa@i& (0+255),w,b
  5159  0018DA  6ED9               	movwf	fsr2l,c
  5160  0018DC  0E01               	movlw	high _dbuf
  5161  0018DE  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5162  0018E0  6EDA               	movwf	fsr2h,c
  5163  0018E2  C0B7  FFDF         	movff	_efgtoa$1316,indf2
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  5167  0018E6  07CA               	decf	efgtoa@w& (0+255),f,b
  5168  0018E8  A0D8               	btfss	status,0,c
  5169  0018EA  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  5173  0018EC  0E23               	movlw	low _dbuf
  5174  0018EE  25DD               	addwf	efgtoa@n& (0+255),w,b
  5175  0018F0  6F60               	movwf	strcpy@dest& (0+255),b
  5176  0018F2  0E01               	movlw	high _dbuf
  5177  0018F4  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5178  0018F6  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  5179  0018F8  0E23               	movlw	low _dbuf
  5180  0018FA  25D5               	addwf	efgtoa@i& (0+255),w,b
  5181  0018FC  6F62               	movwf	strcpy@src& (0+255),b
  5182  0018FE  0E01               	movlw	high _dbuf
  5183  001900  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5184  001902  6F63               	movwf	(strcpy@src+1)& (0+255),b
  5185  001904  EC55  F020         	call	_strcpy	;wreg free
  5186  001908  EF52  F008         	goto	l6701
  5187  00190C                     __end_of_efgtoa:
  5188                           	opt callstack 0
  5189                           
  5190 ;; *************** function _tolower *****************
  5191 ;; Defined at:
  5192 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  c               2    6[BANK0 ] int 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  2    6[BANK0 ] int 
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5207 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5208 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5209 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5210 ;;Total ram usage:        8 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    3
  5213 ;; This function calls:
  5214 ;;		_isupper
  5215 ;; This function is called by:
  5216 ;;		_efgtoa
  5217 ;;		_vfpfcnvrt
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text10
  5222  0041A2                     __ptext10:
  5223                           	opt callstack 0
  5224  0041A2                     _tolower:
  5225                           	opt callstack 23
  5226                           
  5227                           ;incstack = 0
  5228  0041A2  0EBF               	movlw	191
  5229  0041A4  0100               	movlb	0	; () banked
  5230  0041A6  6F68               	movwf	??_tolower& (0+255),b
  5231  0041A8  0EFF               	movlw	255
  5232  0041AA  6F69               	movwf	(??_tolower+1)& (0+255),b
  5233  0041AC  C066  F06A         	movff	tolower@c,??_tolower+2
  5234  0041B0  C067  F06B         	movff	tolower@c+1,??_tolower+3
  5235  0041B4  5168               	movf	??_tolower& (0+255),w,b
  5236  0041B6  276A               	addwf	(??_tolower+2)& (0+255),f,b
  5237  0041B8  5169               	movf	(??_tolower+1)& (0+255),w,b
  5238  0041BA  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  5239  0041BC  516B               	movf	(??_tolower+3)& (0+255),w,b
  5240  0041BE  E106               	bnz	u7490
  5241  0041C0  0E1A               	movlw	26
  5242  0041C2  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  5243  0041C4  B0D8               	btfsc	status,0,c
  5244  0041C6  D002               	goto	u7490
  5245  0041C8  0E01               	movlw	1
  5246  0041CA  D001               	goto	u7500
  5247  0041CC                     u7490:
  5248  0041CC  0E00               	movlw	0
  5249  0041CE                     u7500:
  5250  0041CE  6F6C               	movwf	_tolower$1932& (0+255),b
  5251  0041D0  6B6D               	clrf	(_tolower$1932+1)& (0+255),b
  5252                           
  5253                           ; BSR set to: 0
  5254  0041D2  516C               	movf	_tolower$1932& (0+255),w,b
  5255  0041D4  116D               	iorwf	(_tolower$1932+1)& (0+255),w,b
  5256  0041D6  B4D8               	btfsc	status,2,c
  5257  0041D8  D006               	goto	l1313
  5258                           
  5259                           ; BSR set to: 0
  5260  0041DA  0E20               	movlw	32
  5261  0041DC  1166               	iorwf	tolower@c& (0+255),w,b
  5262  0041DE  6F66               	movwf	?_tolower& (0+255),b
  5263  0041E0  5167               	movf	(tolower@c+1)& (0+255),w,b
  5264  0041E2  6F67               	movwf	(?_tolower+1)& (0+255),b
  5265  0041E4  0012               	return	
  5266  0041E6                     l1313:
  5267                           
  5268                           ; BSR set to: 0
  5269  0041E6  C066  F066         	movff	tolower@c,?_tolower
  5270  0041EA  C067  F067         	movff	tolower@c+1,?_tolower+1
  5271                           
  5272                           ; BSR set to: 0
  5273  0041EE  0012               	return		;funcret
  5274  0041F0                     __end_of_tolower:
  5275                           	opt callstack 0
  5276                           
  5277 ;; *************** function _isupper *****************
  5278 ;; Defined at:
  5279 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;  c               2    0[BANK0 ] int 
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  2    0[BANK0 ] int 
  5286 ;; Registers used:
  5287 ;;		wreg, status,2, status,0
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5293 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5295 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5296 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5297 ;;Total ram usage:        6 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; Hardware stack levels required when called:    2
  5300 ;; This function calls:
  5301 ;;		Nothing
  5302 ;; This function is called by:
  5303 ;;		_efgtoa
  5304 ;;		_vfpfcnvrt
  5305 ;;		_tolower
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text11
  5310  0042EE                     __ptext11:
  5311                           	opt callstack 0
  5312  0042EE                     _isupper:
  5313                           	opt callstack 23
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;incstack = 0
  5317  0042EE  0EBF               	movlw	191
  5318  0042F0  0100               	movlb	0	; () banked
  5319  0042F2  6F62               	movwf	??_isupper& (0+255),b
  5320  0042F4  0EFF               	movlw	255
  5321  0042F6  6F63               	movwf	(??_isupper+1)& (0+255),b
  5322  0042F8  C060  F064         	movff	isupper@c,??_isupper+2
  5323  0042FC  C061  F065         	movff	isupper@c+1,??_isupper+3
  5324  004300  5162               	movf	??_isupper& (0+255),w,b
  5325  004302  2764               	addwf	(??_isupper+2)& (0+255),f,b
  5326  004304  5163               	movf	(??_isupper+1)& (0+255),w,b
  5327  004306  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  5328  004308  5165               	movf	(??_isupper+3)& (0+255),w,b
  5329  00430A  E106               	bnz	u6950
  5330  00430C  0E1A               	movlw	26
  5331  00430E  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  5332  004310  B0D8               	btfsc	status,0,c
  5333  004312  D002               	goto	u6950
  5334  004314  0E01               	movlw	1
  5335  004316  D001               	goto	u6960
  5336  004318                     u6950:
  5337  004318  0E00               	movlw	0
  5338  00431A                     u6960:
  5339  00431A  6F60               	movwf	?_isupper& (0+255),b
  5340  00431C  6B61               	clrf	(?_isupper+1)& (0+255),b
  5341                           
  5342                           ; BSR set to: 0
  5343  00431E  0012               	return		;funcret
  5344  004320                     __end_of_isupper:
  5345                           	opt callstack 0
  5346                           
  5347 ;; *************** function _strcpy *****************
  5348 ;; Defined at:
  5349 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  5352 ;;		 -> dbuf(80), 
  5353 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  5354 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  5355 ;;		 -> dbuf(80), 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  d               2    8[BANK0 ] PTR unsigned char 
  5358 ;;		 -> dbuf(80), 
  5359 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5360 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  5361 ;;		 -> dbuf(80), 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  2    0[BANK0 ] PTR unsigned char 
  5364 ;; Registers used:
  5365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5371 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5372 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;Total ram usage:       10 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    2
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_efgtoa
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text12
  5386  0040AA                     __ptext12:
  5387                           	opt callstack 0
  5388  0040AA                     _strcpy:
  5389                           	opt callstack 23
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;incstack = 0
  5393  0040AA  C062  F066         	movff	strcpy@src,strcpy@s
  5394  0040AE  C063  F067         	movff	strcpy@src+1,strcpy@s+1
  5395  0040B2  C060  F068         	movff	strcpy@dest,strcpy@d
  5396  0040B6  C061  F069         	movff	strcpy@dest+1,strcpy@d+1
  5397  0040BA                     l6099:
  5398  0040BA  0100               	movlb	0	; () banked
  5399  0040BC  5166               	movf	strcpy@s& (0+255),w,b
  5400  0040BE  6F64               	movwf	??_strcpy& (0+255),b
  5401  0040C0  5167               	movf	(strcpy@s+1)& (0+255),w,b
  5402  0040C2  6F65               	movwf	(??_strcpy+1)& (0+255),b
  5403  0040C4  4B66               	infsnz	strcpy@s& (0+255),f,b
  5404  0040C6  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  5405  0040C8  C064  FFF6         	movff	??_strcpy,tblptrl
  5406  0040CC  C065  FFF7         	movff	??_strcpy+1,tblptrh
  5407  0040D0  0E00               	movlw	low (__smallconst shr (0+16))
  5408  0040D2  6EF8               	movwf	tblptru,c
  5409  0040D4  C068  FFD9         	movff	strcpy@d,fsr2l
  5410  0040D8  C069  FFDA         	movff	strcpy@d+1,fsr2h
  5411  0040DC  4B68               	infsnz	strcpy@d& (0+255),f,b
  5412  0040DE  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  5413  0040E0  0E0E               	movlw	(high __ramtop+-1)
  5414  0040E2  64F7               	cpfsgt	tblptrh,c
  5415  0040E4  D003               	bra	u7477
  5416  0040E6  0008               	tblrd		*
  5417  0040E8  50F5               	movf	tablat,w,c
  5418  0040EA  D005               	bra	u7470
  5419  0040EC                     u7477:
  5420  0040EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5421  0040F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5422  0040F4  50E7               	movf	indf1,w,c
  5423  0040F6                     u7470:
  5424  0040F6  6EDF               	movwf	indf2,c
  5425  0040F8  50DF               	movf	indf2,w,c
  5426  0040FA  B4D8               	btfsc	status,2,c
  5427  0040FC  0012               	return	
  5428  0040FE  D7DD               	goto	l6099
  5429  004100                     __end_of_strcpy:
  5430                           	opt callstack 0
  5431                           
  5432 ;; *************** function _floorf *****************
  5433 ;; Defined at:
  5434 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;  x               4   25[BANK0 ] float 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  u               4   41[BANK0 ] struct .
  5439 ;;  m               4   35[BANK0 ] unsigned long 
  5440 ;;  e               2   39[BANK0 ] int 
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  4   25[BANK0 ] float 
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5451 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5452 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5453 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5454 ;;Total ram usage:       20 bytes
  5455 ;; Hardware stack levels used:    1
  5456 ;; Hardware stack levels required when called:    2
  5457 ;; This function calls:
  5458 ;;		Nothing
  5459 ;; This function is called by:
  5460 ;;		_efgtoa
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text13
  5465  002B6C                     __ptext13:
  5466                           	opt callstack 0
  5467  002B6C                     _floorf:
  5468                           	opt callstack 23
  5469                           
  5470                           ;incstack = 0
  5471  002B6C  C02A  F089         	movff	floorf@F524,floorf@u
  5472  002B70  C02B  F08A         	movff	floorf@F524+1,floorf@u+1
  5473  002B74  C02C  F08B         	movff	floorf@F524+2,floorf@u+2
  5474  002B78  C02D  F08C         	movff	floorf@F524+3,floorf@u+3
  5475  002B7C  C079  F089         	movff	floorf@x,floorf@u
  5476  002B80  C07A  F08A         	movff	floorf@x+1,floorf@u+1
  5477  002B84  C07B  F08B         	movff	floorf@x+2,floorf@u+2
  5478  002B88  C07C  F08C         	movff	floorf@x+3,floorf@u+3
  5479  002B8C  0E81               	movlw	129
  5480  002B8E  0100               	movlb	0	; () banked
  5481  002B90  6F7D               	movwf	??_floorf& (0+255),b
  5482  002B92  0EFF               	movlw	255
  5483  002B94  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5484  002B96  C089  F07F         	movff	floorf@u,??_floorf+2
  5485  002B9A  C08A  F080         	movff	floorf@u+1,??_floorf+3
  5486  002B9E  C08B  F081         	movff	floorf@u+2,??_floorf+4
  5487  002BA2  C08C  F082         	movff	floorf@u+3,??_floorf+5
  5488  002BA6  0E18               	movlw	24
  5489  002BA8  D005               	goto	u7520
  5490  002BAA                     u7525:
  5491  002BAA  90D8               	bcf	status,0,c
  5492  002BAC  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  5493  002BAE  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  5494  002BB0  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5495  002BB2  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5496  002BB4                     u7520:
  5497  002BB4  2EE8               	decfsz	wreg,f,c
  5498  002BB6  D7F9               	goto	u7525
  5499  002BB8  517F               	movf	(??_floorf+2)& (0+255),w,b
  5500  002BBA  257D               	addwf	??_floorf& (0+255),w,b
  5501  002BBC  6F87               	movwf	floorf@e& (0+255),b
  5502  002BBE  0E00               	movlw	0
  5503  002BC0  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  5504  002BC2  6F88               	movwf	(floorf@e+1)& (0+255),b
  5505  002BC4  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  5506  002BC6  D00F               	goto	l6117
  5507  002BC8  5188               	movf	(floorf@e+1)& (0+255),w,b
  5508  002BCA  E104               	bnz	u7530
  5509  002BCC  0E17               	movlw	23
  5510  002BCE  5D87               	subwf	floorf@e& (0+255),w,b
  5511  002BD0  A0D8               	btfss	status,0,c
  5512  002BD2  D009               	goto	l6117
  5513  002BD4                     u7530:
  5514                           
  5515                           ; BSR set to: 0
  5516  002BD4  C079  F079         	movff	floorf@x,?_floorf
  5517  002BD8  C07A  F07A         	movff	floorf@x+1,?_floorf+1
  5518  002BDC  C07B  F07B         	movff	floorf@x+2,?_floorf+2
  5519  002BE0  C07C  F07C         	movff	floorf@x+3,?_floorf+3
  5520  002BE4  0012               	return	
  5521  002BE6                     l6117:
  5522                           
  5523                           ; BSR set to: 0
  5524  002BE6  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  5525  002BE8  D05F               	goto	l6127
  5526                           
  5527                           ; BSR set to: 0
  5528  002BEA  C087  F07D         	movff	floorf@e,??_floorf
  5529  002BEE  0EFF               	movlw	255
  5530  002BF0  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5531  002BF2  0EFF               	movlw	255
  5532  002BF4  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5533  002BF6  0E7F               	movlw	127
  5534  002BF8  6F80               	movwf	(??_floorf+3)& (0+255),b
  5535  002BFA  0E00               	movlw	0
  5536  002BFC  6F81               	movwf	(??_floorf+4)& (0+255),b
  5537  002BFE                     u7555:
  5538  002BFE  677D               	tstfsz	??_floorf& (0+255),b
  5539  002C00  D001               	goto	u7556
  5540  002C02  D007               	goto	u7557
  5541  002C04                     u7556:
  5542  002C04  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  5543  002C06  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  5544  002C08  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5545  002C0A  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5546  002C0C  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5547  002C0E  2F7D               	decfsz	??_floorf& (0+255),f,b
  5548  002C10  D7F6               	goto	u7555
  5549  002C12                     u7557:
  5550  002C12  C07E  F083         	movff	??_floorf+1,floorf@m
  5551  002C16  C07F  F084         	movff	??_floorf+2,floorf@m+1
  5552  002C1A  C080  F085         	movff	??_floorf+3,floorf@m+2
  5553  002C1E  C081  F086         	movff	??_floorf+4,floorf@m+3
  5554  002C22  0100               	movlb	0	; () banked
  5555  002C24  5183               	movf	floorf@m& (0+255),w,b
  5556  002C26  1589               	andwf	floorf@u& (0+255),w,b
  5557  002C28  6F7D               	movwf	??_floorf& (0+255),b
  5558  002C2A  5184               	movf	(floorf@m+1)& (0+255),w,b
  5559  002C2C  158A               	andwf	(floorf@u+1)& (0+255),w,b
  5560  002C2E  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5561  002C30  5185               	movf	(floorf@m+2)& (0+255),w,b
  5562  002C32  158B               	andwf	(floorf@u+2)& (0+255),w,b
  5563  002C34  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5564  002C36  5186               	movf	(floorf@m+3)& (0+255),w,b
  5565  002C38  158C               	andwf	(floorf@u+3)& (0+255),w,b
  5566  002C3A  6F80               	movwf	(??_floorf+3)& (0+255),b
  5567  002C3C  517D               	movf	??_floorf& (0+255),w,b
  5568  002C3E  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5569  002C40  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5570  002C42  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5571  002C44  B4D8               	btfsc	status,2,c
  5572  002C46  D7C6               	goto	u7530
  5573                           
  5574                           ; BSR set to: 0
  5575  002C48  C089  F07D         	movff	floorf@u,??_floorf
  5576  002C4C  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  5577  002C50  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  5578  002C54  C08C  F080         	movff	floorf@u+3,??_floorf+3
  5579  002C58  0E20               	movlw	32
  5580  002C5A  D005               	goto	u7570
  5581  002C5C                     u7575:
  5582  002C5C  90D8               	bcf	status,0,c
  5583  002C5E  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5584  002C60  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5585  002C62  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5586  002C64  337D               	rrcf	??_floorf& (0+255),f,b
  5587  002C66                     u7570:
  5588  002C66  2EE8               	decfsz	wreg,f,c
  5589  002C68  D7F9               	goto	u7575
  5590  002C6A  517D               	movf	??_floorf& (0+255),w,b
  5591  002C6C  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5592  002C6E  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5593  002C70  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5594  002C72  B4D8               	btfsc	status,2,c
  5595  002C74  D008               	goto	l1233
  5596                           
  5597                           ; BSR set to: 0
  5598  002C76  5183               	movf	floorf@m& (0+255),w,b
  5599  002C78  2789               	addwf	floorf@u& (0+255),f,b
  5600  002C7A  5184               	movf	(floorf@m+1)& (0+255),w,b
  5601  002C7C  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  5602  002C7E  5185               	movf	(floorf@m+2)& (0+255),w,b
  5603  002C80  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  5604  002C82  5186               	movf	(floorf@m+3)& (0+255),w,b
  5605  002C84  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  5606  002C86                     l1233:
  5607                           
  5608                           ; BSR set to: 0
  5609  002C86  1D83               	comf	floorf@m& (0+255),w,b
  5610  002C88  6F7D               	movwf	??_floorf& (0+255),b
  5611  002C8A  1D84               	comf	(floorf@m+1)& (0+255),w,b
  5612  002C8C  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5613  002C8E  1D85               	comf	(floorf@m+2)& (0+255),w,b
  5614  002C90  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5615  002C92  1D86               	comf	(floorf@m+3)& (0+255),w,b
  5616  002C94  6F80               	movwf	(??_floorf+3)& (0+255),b
  5617  002C96  517D               	movf	??_floorf& (0+255),w,b
  5618  002C98  1789               	andwf	floorf@u& (0+255),f,b
  5619  002C9A  517E               	movf	(??_floorf+1)& (0+255),w,b
  5620  002C9C  178A               	andwf	(floorf@u+1)& (0+255),f,b
  5621  002C9E  517F               	movf	(??_floorf+2)& (0+255),w,b
  5622  002CA0  178B               	andwf	(floorf@u+2)& (0+255),f,b
  5623  002CA2  5180               	movf	(??_floorf+3)& (0+255),w,b
  5624  002CA4  178C               	andwf	(floorf@u+3)& (0+255),f,b
  5625  002CA6  D036               	goto	l6135
  5626  002CA8                     l6127:
  5627                           
  5628                           ; BSR set to: 0
  5629  002CA8  C089  F07D         	movff	floorf@u,??_floorf
  5630  002CAC  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  5631  002CB0  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  5632  002CB4  C08C  F080         	movff	floorf@u+3,??_floorf+3
  5633  002CB8  0E20               	movlw	32
  5634  002CBA  D005               	goto	u7590
  5635  002CBC                     u7595:
  5636  002CBC  90D8               	bcf	status,0,c
  5637  002CBE  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5638  002CC0  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5639  002CC2  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5640  002CC4  337D               	rrcf	??_floorf& (0+255),f,b
  5641  002CC6                     u7590:
  5642  002CC6  2EE8               	decfsz	wreg,f,c
  5643  002CC8  D7F9               	goto	u7595
  5644  002CCA  517D               	movf	??_floorf& (0+255),w,b
  5645  002CCC  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5646  002CCE  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5647  002CD0  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5648  002CD2  A4D8               	btfss	status,2,c
  5649  002CD4  D008               	goto	l6131
  5650                           
  5651                           ; BSR set to: 0
  5652  002CD6  0E00               	movlw	0
  5653  002CD8  6F89               	movwf	floorf@u& (0+255),b
  5654  002CDA  0E00               	movlw	0
  5655  002CDC  6F8A               	movwf	(floorf@u+1)& (0+255),b
  5656  002CDE  0E00               	movlw	0
  5657  002CE0  6F8B               	movwf	(floorf@u+2)& (0+255),b
  5658  002CE2  0E00               	movlw	0
  5659  002CE4  D016               	goto	L6
  5660  002CE6                     l6131:
  5661                           
  5662                           ; BSR set to: 0
  5663  002CE6  90D8               	bcf	status,0,c
  5664  002CE8  3589               	rlcf	floorf@u& (0+255),w,b
  5665  002CEA  6F7D               	movwf	??_floorf& (0+255),b
  5666  002CEC  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  5667  002CEE  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5668  002CF0  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  5669  002CF2  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5670  002CF4  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  5671  002CF6  6F80               	movwf	(??_floorf+3)& (0+255),b
  5672  002CF8  517D               	movf	??_floorf& (0+255),w,b
  5673  002CFA  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5674  002CFC  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5675  002CFE  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5676  002D00  B4D8               	btfsc	status,2,c
  5677  002D02  D008               	goto	l6135
  5678                           
  5679                           ; BSR set to: 0
  5680  002D04  0E00               	movlw	0
  5681  002D06  6F89               	movwf	floorf@u& (0+255),b
  5682  002D08  0E00               	movlw	0
  5683  002D0A  6F8A               	movwf	(floorf@u+1)& (0+255),b
  5684  002D0C  0E80               	movlw	128
  5685  002D0E  6F8B               	movwf	(floorf@u+2)& (0+255),b
  5686  002D10  0EBF               	movlw	191
  5687  002D12                     L6:
  5688  002D12  6F8C               	movwf	(floorf@u+3)& (0+255),b
  5689  002D14                     l6135:
  5690                           
  5691                           ; BSR set to: 0
  5692  002D14  C089  F079         	movff	floorf@u,?_floorf
  5693  002D18  C08A  F07A         	movff	floorf@u+1,?_floorf+1
  5694  002D1C  C08B  F07B         	movff	floorf@u+2,?_floorf+2
  5695  002D20  C08C  F07C         	movff	floorf@u+3,?_floorf+3
  5696                           
  5697                           ; BSR set to: 0
  5698  002D24  0012               	return		;funcret
  5699  002D26                     __end_of_floorf:
  5700                           	opt callstack 0
  5701                           
  5702 ;; *************** function ___fpclassifyf *****************
  5703 ;; Defined at:
  5704 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  x               4    0[BANK0 ] float 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  u               4   10[BANK0 ] struct .
  5709 ;;  e               2    8[BANK0 ] int 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  2    0[BANK0 ] int 
  5712 ;; Registers used:
  5713 ;;		wreg, status,2, status,0
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5719 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5720 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5721 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5722 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5723 ;;Total ram usage:       14 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    2
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		_efgtoa
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text14
  5734  0036A0                     __ptext14:
  5735                           	opt callstack 0
  5736  0036A0                     ___fpclassifyf:
  5737                           	opt callstack 23
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;incstack = 0
  5741  0036A0  C02E  F06A         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5742  0036A4  C02F  F06B         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5743  0036A8  C030  F06C         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5744  0036AC  C031  F06D         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5745  0036B0  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  5746  0036B4  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5747  0036B8  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5748  0036BC  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5749  0036C0  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5750  0036C4  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5751  0036C8  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5752  0036CC  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5753  0036D0  0E18               	movlw	24
  5754  0036D2  D006               	goto	u7400
  5755  0036D4                     u7405:
  5756  0036D4  0100               	movlb	0	; () banked
  5757  0036D6  90D8               	bcf	status,0,c
  5758  0036D8  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5759  0036DA  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5760  0036DC  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5761  0036DE  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5762  0036E0                     u7400:
  5763  0036E0  2EE8               	decfsz	wreg,f,c
  5764  0036E2  D7F8               	goto	u7405
  5765  0036E4  5164               	movf	??___fpclassifyf& (0+255),w,b
  5766  0036E6  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5767  0036E8  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5768  0036EA  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5769  0036EC  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5770  0036EE  A4D8               	btfss	status,2,c
  5771  0036F0  D019               	goto	l6087
  5772                           
  5773                           ; BSR set to: 0
  5774  0036F2  90D8               	bcf	status,0,c
  5775  0036F4  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5776  0036F6  6F64               	movwf	??___fpclassifyf& (0+255),b
  5777  0036F8  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5778  0036FA  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5779  0036FC  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5780  0036FE  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5781  003700  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5782  003702  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5783  003704  5164               	movf	??___fpclassifyf& (0+255),w,b
  5784  003706  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5785  003708  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5786  00370A  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5787  00370C  A4D8               	btfss	status,2,c
  5788  00370E  D005               	goto	l6083
  5789                           
  5790                           ; BSR set to: 0
  5791  003710  0E00               	movlw	0
  5792  003712  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5793  003714  0E02               	movlw	2
  5794  003716  6F60               	movwf	?___fpclassifyf& (0+255),b
  5795  003718  0012               	return	
  5796  00371A                     l6083:
  5797                           
  5798                           ; BSR set to: 0
  5799  00371A  0E00               	movlw	0
  5800  00371C  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5801  00371E  0E03               	movlw	3
  5802  003720  6F60               	movwf	?___fpclassifyf& (0+255),b
  5803  003722  0012               	return	
  5804  003724                     l6087:
  5805                           
  5806                           ; BSR set to: 0
  5807  003724  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5808  003726  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5809  003728  A4D8               	btfss	status,2,c
  5810  00372A  D01C               	goto	l6093
  5811                           
  5812                           ; BSR set to: 0
  5813  00372C  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5814  003730  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5815  003734  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5816  003738  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5817  00373C  0E09               	movlw	9
  5818  00373E                     u7445:
  5819  00373E  90D8               	bcf	status,0,c
  5820  003740  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5821  003742  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5822  003744  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5823  003746  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5824  003748  2EE8               	decfsz	wreg,f,c
  5825  00374A  D7F9               	goto	u7445
  5826  00374C  5164               	movf	??___fpclassifyf& (0+255),w,b
  5827  00374E  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5828  003750  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5829  003752  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5830  003754  A4D8               	btfss	status,2,c
  5831  003756  D002               	goto	u7450
  5832  003758  0E01               	movlw	1
  5833  00375A  D001               	goto	u7460
  5834  00375C                     u7450:
  5835  00375C  0E00               	movlw	0
  5836  00375E                     u7460:
  5837  00375E  6F60               	movwf	?___fpclassifyf& (0+255),b
  5838  003760  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5839  003762  0012               	return	
  5840  003764                     l6093:
  5841                           
  5842                           ; BSR set to: 0
  5843  003764  0E00               	movlw	0
  5844  003766  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5845  003768  0E04               	movlw	4
  5846  00376A  6F60               	movwf	?___fpclassifyf& (0+255),b
  5847                           
  5848                           ; BSR set to: 0
  5849  00376C  0012               	return		;funcret
  5850  00376E                     __end_of___fpclassifyf:
  5851                           	opt callstack 0
  5852                           
  5853 ;; *************** function ___flsub *****************
  5854 ;; Defined at:
  5855 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;  b               4   55[BANK0 ] int 
  5858 ;;  a               4   59[BANK0 ] int 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;		None
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  4   55[BANK0 ] int 
  5863 ;; Registers used:
  5864 ;;		wreg, status,2, status,0, cstack
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5870 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5873 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5874 ;;Total ram usage:        8 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; Hardware stack levels required when called:    3
  5877 ;; This function calls:
  5878 ;;		___fladd
  5879 ;; This function is called by:
  5880 ;;		_efgtoa
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text15
  5885  0041F0                     __ptext15:
  5886                           	opt callstack 0
  5887  0041F0                     ___flsub:
  5888                           	opt callstack 22
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;incstack = 0
  5892  0041F0  0E00               	movlw	0
  5893  0041F2  0100               	movlb	0	; () banked
  5894  0041F4  1B9B               	xorwf	___flsub@a& (0+255),f,b
  5895  0041F6  0E00               	movlw	0
  5896  0041F8  1B9C               	xorwf	(___flsub@a+1)& (0+255),f,b
  5897  0041FA  0E00               	movlw	0
  5898  0041FC  1B9D               	xorwf	(___flsub@a+2)& (0+255),f,b
  5899  0041FE  0E80               	movlw	128
  5900  004200  1B9E               	xorwf	(___flsub@a+3)& (0+255),f,b
  5901                           
  5902                           ; BSR set to: 0
  5903  004202  C097  F087         	movff	___flsub@b,___fladd@b
  5904  004206  C098  F088         	movff	___flsub@b+1,___fladd@b+1
  5905  00420A  C099  F089         	movff	___flsub@b+2,___fladd@b+2
  5906  00420E  C09A  F08A         	movff	___flsub@b+3,___fladd@b+3
  5907  004212  C09B  F08B         	movff	___flsub@a,___fladd@a
  5908  004216  C09C  F08C         	movff	___flsub@a+1,___fladd@a+1
  5909  00421A  C09D  F08D         	movff	___flsub@a+2,___fladd@a+2
  5910  00421E  C09E  F08E         	movff	___flsub@a+3,___fladd@a+3
  5911  004222  EC64  F011         	call	___fladd	;wreg free
  5912  004226  C087  F097         	movff	?___fladd,?___flsub
  5913  00422A  C088  F098         	movff	?___fladd+1,?___flsub+1
  5914  00422E  C089  F099         	movff	?___fladd+2,?___flsub+2
  5915  004232  C08A  F09A         	movff	?___fladd+3,?___flsub+3
  5916  004236  0012               	return		;funcret
  5917  004238                     __end_of___flsub:
  5918                           	opt callstack 0
  5919                           
  5920 ;; *************** function ___flneg *****************
  5921 ;; Defined at:
  5922 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;  f1              4    0[BANK0 ] int 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  4    0[BANK0 ] int 
  5929 ;; Registers used:
  5930 ;;		wreg, status,2, status,0
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5936 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5939 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5940 ;;Total ram usage:        4 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:    2
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_efgtoa
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text16
  5951  004352                     __ptext16:
  5952                           	opt callstack 0
  5953  004352                     ___flneg:
  5954                           	opt callstack 23
  5955                           
  5956                           ;incstack = 0
  5957  004352  0100               	movlb	0	; () banked
  5958  004354  5160               	movf	___flneg@f1& (0+255),w,b
  5959  004356  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5960  004358  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5961  00435A  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5962  00435C  B4D8               	btfsc	status,2,c
  5963  00435E  D008               	goto	l6545
  5964                           
  5965                           ; BSR set to: 0
  5966  004360  0E00               	movlw	0
  5967  004362  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5968  004364  0E00               	movlw	0
  5969  004366  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5970  004368  0E00               	movlw	0
  5971  00436A  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5972  00436C  0E80               	movlw	128
  5973  00436E  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5974  004370                     l6545:
  5975                           
  5976                           ; BSR set to: 0
  5977  004370  C060  F060         	movff	___flneg@f1,?___flneg
  5978  004374  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  5979  004378  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  5980  00437C  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  5981                           
  5982                           ; BSR set to: 0
  5983  004380  0012               	return		;funcret
  5984  004382                     __end_of___flneg:
  5985                           	opt callstack 0
  5986                           
  5987 ;; *************** function ___flge *****************
  5988 ;; Defined at:
  5989 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  ff1             4   39[BANK0 ] int 
  5992 ;;  ff2             4   43[BANK0 ] int 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;		None               void
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, status,0
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6004 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6006 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6007 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6008 ;;Total ram usage:       12 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    2
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_efgtoa
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text17
  6019  0034FE                     __ptext17:
  6020                           	opt callstack 0
  6021  0034FE                     ___flge:
  6022                           	opt callstack 23
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;incstack = 0
  6026  0034FE  0E00               	movlw	0
  6027  003500  0100               	movlb	0	; () banked
  6028  003502  1587               	andwf	___flge@ff1& (0+255),w,b
  6029  003504  6F8F               	movwf	??___flge& (0+255),b
  6030  003506  0E00               	movlw	0
  6031  003508  1588               	andwf	(___flge@ff1+1)& (0+255),w,b
  6032  00350A  6F90               	movwf	(??___flge+1)& (0+255),b
  6033  00350C  0E80               	movlw	128
  6034  00350E  1589               	andwf	(___flge@ff1+2)& (0+255),w,b
  6035  003510  6F91               	movwf	(??___flge+2)& (0+255),b
  6036  003512  0E7F               	movlw	127
  6037  003514  158A               	andwf	(___flge@ff1+3)& (0+255),w,b
  6038  003516  6F92               	movwf	(??___flge+3)& (0+255),b
  6039  003518  518F               	movf	??___flge& (0+255),w,b
  6040  00351A  1190               	iorwf	(??___flge+1)& (0+255),w,b
  6041  00351C  1191               	iorwf	(??___flge+2)& (0+255),w,b
  6042  00351E  1192               	iorwf	(??___flge+3)& (0+255),w,b
  6043  003520  A4D8               	btfss	status,2,c
  6044  003522  D008               	goto	l6523
  6045                           
  6046                           ; BSR set to: 0
  6047  003524  0E00               	movlw	0
  6048  003526  6F87               	movwf	___flge@ff1& (0+255),b
  6049  003528  0E00               	movlw	0
  6050  00352A  6F88               	movwf	(___flge@ff1+1)& (0+255),b
  6051  00352C  0E00               	movlw	0
  6052  00352E  6F89               	movwf	(___flge@ff1+2)& (0+255),b
  6053  003530  0E00               	movlw	0
  6054  003532  6F8A               	movwf	(___flge@ff1+3)& (0+255),b
  6055  003534                     l6523:
  6056                           
  6057                           ; BSR set to: 0
  6058  003534  0E00               	movlw	0
  6059  003536  158B               	andwf	___flge@ff2& (0+255),w,b
  6060  003538  6F8F               	movwf	??___flge& (0+255),b
  6061  00353A  0E00               	movlw	0
  6062  00353C  158C               	andwf	(___flge@ff2+1)& (0+255),w,b
  6063  00353E  6F90               	movwf	(??___flge+1)& (0+255),b
  6064  003540  0E80               	movlw	128
  6065  003542  158D               	andwf	(___flge@ff2+2)& (0+255),w,b
  6066  003544  6F91               	movwf	(??___flge+2)& (0+255),b
  6067  003546  0E7F               	movlw	127
  6068  003548  158E               	andwf	(___flge@ff2+3)& (0+255),w,b
  6069  00354A  6F92               	movwf	(??___flge+3)& (0+255),b
  6070  00354C  518F               	movf	??___flge& (0+255),w,b
  6071  00354E  1190               	iorwf	(??___flge+1)& (0+255),w,b
  6072  003550  1191               	iorwf	(??___flge+2)& (0+255),w,b
  6073  003552  1192               	iorwf	(??___flge+3)& (0+255),w,b
  6074  003554  A4D8               	btfss	status,2,c
  6075  003556  D008               	goto	l6527
  6076                           
  6077                           ; BSR set to: 0
  6078  003558  0E00               	movlw	0
  6079  00355A  6F8B               	movwf	___flge@ff2& (0+255),b
  6080  00355C  0E00               	movlw	0
  6081  00355E  6F8C               	movwf	(___flge@ff2+1)& (0+255),b
  6082  003560  0E00               	movlw	0
  6083  003562  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
  6084  003564  0E00               	movlw	0
  6085  003566  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
  6086  003568                     l6527:
  6087                           
  6088                           ; BSR set to: 0
  6089  003568  AF8A               	btfss	(___flge@ff1+3)& (0+255),7,b
  6090  00356A  D009               	goto	l6531
  6091                           
  6092                           ; BSR set to: 0
  6093  00356C  6D87               	negf	___flge@ff1& (0+255),b
  6094  00356E  1F88               	comf	(___flge@ff1+1)& (0+255),f,b
  6095  003570  B0D8               	btfsc	status,0,c
  6096  003572  2B88               	incf	(___flge@ff1+1)& (0+255),f,b
  6097  003574  1F89               	comf	(___flge@ff1+2)& (0+255),f,b
  6098  003576  B0D8               	btfsc	status,0,c
  6099  003578  2B89               	incf	(___flge@ff1+2)& (0+255),f,b
  6100  00357A  0E80               	movlw	128
  6101  00357C  578A               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6102  00357E                     l6531:
  6103                           
  6104                           ; BSR set to: 0
  6105  00357E  AF8E               	btfss	(___flge@ff2+3)& (0+255),7,b
  6106  003580  D009               	goto	l776
  6107                           
  6108                           ; BSR set to: 0
  6109  003582  6D8B               	negf	___flge@ff2& (0+255),b
  6110  003584  1F8C               	comf	(___flge@ff2+1)& (0+255),f,b
  6111  003586  B0D8               	btfsc	status,0,c
  6112  003588  2B8C               	incf	(___flge@ff2+1)& (0+255),f,b
  6113  00358A  1F8D               	comf	(___flge@ff2+2)& (0+255),f,b
  6114  00358C  B0D8               	btfsc	status,0,c
  6115  00358E  2B8D               	incf	(___flge@ff2+2)& (0+255),f,b
  6116  003590  0E80               	movlw	128
  6117  003592  578E               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6118  003594                     l776:
  6119                           
  6120                           ; BSR set to: 0
  6121  003594  0E00               	movlw	0
  6122  003596  1B87               	xorwf	___flge@ff1& (0+255),f,b
  6123  003598  0E00               	movlw	0
  6124  00359A  1B88               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6125  00359C  0E00               	movlw	0
  6126  00359E  1B89               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6127  0035A0  0E80               	movlw	128
  6128  0035A2  1B8A               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6129  0035A4  0E00               	movlw	0
  6130  0035A6  1B8B               	xorwf	___flge@ff2& (0+255),f,b
  6131  0035A8  0E00               	movlw	0
  6132  0035AA  1B8C               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6133  0035AC  0E00               	movlw	0
  6134  0035AE  1B8D               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6135  0035B0  0E80               	movlw	128
  6136  0035B2  1B8E               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6137  0035B4  518B               	movf	___flge@ff2& (0+255),w,b
  6138  0035B6  5D87               	subwf	___flge@ff1& (0+255),w,b
  6139  0035B8  518C               	movf	(___flge@ff2+1)& (0+255),w,b
  6140  0035BA  5988               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6141  0035BC  518D               	movf	(___flge@ff2+2)& (0+255),w,b
  6142  0035BE  5989               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6143  0035C0  518E               	movf	(___flge@ff2+3)& (0+255),w,b
  6144  0035C2  598A               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6145  0035C4  B0D8               	btfsc	status,0,c
  6146  0035C6  D002               	goto	l6537
  6147                           
  6148                           ; BSR set to: 0
  6149  0035C8  90D8               	bcf	status,0,c
  6150  0035CA  0012               	return	
  6151  0035CC                     l6537:
  6152                           
  6153                           ; BSR set to: 0
  6154  0035CC  80D8               	bsf	status,0,c
  6155                           
  6156                           ; BSR set to: 0
  6157  0035CE  0012               	return		;funcret
  6158  0035D0                     __end_of___flge:
  6159                           	opt callstack 0
  6160                           
  6161 ;; *************** function ___fleq *****************
  6162 ;; Defined at:
  6163 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  ff1             4    0[BANK0 ] int 
  6166 ;;  ff2             4    4[BANK0 ] int 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;		None               void
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6178 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6180 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6181 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6182 ;;Total ram usage:       12 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:    2
  6185 ;; This function calls:
  6186 ;;		Nothing
  6187 ;; This function is called by:
  6188 ;;		_efgtoa
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text18
  6193  003B8A                     __ptext18:
  6194                           	opt callstack 0
  6195  003B8A                     ___fleq:
  6196                           	opt callstack 23
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;incstack = 0
  6200  003B8A  0E00               	movlw	0
  6201  003B8C  0100               	movlb	0	; () banked
  6202  003B8E  1560               	andwf	___fleq@ff1& (0+255),w,b
  6203  003B90  6F68               	movwf	??___fleq& (0+255),b
  6204  003B92  0E00               	movlw	0
  6205  003B94  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6206  003B96  6F69               	movwf	(??___fleq+1)& (0+255),b
  6207  003B98  0E80               	movlw	128
  6208  003B9A  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6209  003B9C  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6210  003B9E  0E7F               	movlw	127
  6211  003BA0  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6212  003BA2  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6213  003BA4  5168               	movf	??___fleq& (0+255),w,b
  6214  003BA6  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6215  003BA8  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6216  003BAA  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6217  003BAC  A4D8               	btfss	status,2,c
  6218  003BAE  D008               	goto	l6507
  6219                           
  6220                           ; BSR set to: 0
  6221  003BB0  0E00               	movlw	0
  6222  003BB2  6F60               	movwf	___fleq@ff1& (0+255),b
  6223  003BB4  0E00               	movlw	0
  6224  003BB6  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6225  003BB8  0E00               	movlw	0
  6226  003BBA  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6227  003BBC  0E00               	movlw	0
  6228  003BBE  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6229  003BC0                     l6507:
  6230                           
  6231                           ; BSR set to: 0
  6232  003BC0  0E00               	movlw	0
  6233  003BC2  1564               	andwf	___fleq@ff2& (0+255),w,b
  6234  003BC4  6F68               	movwf	??___fleq& (0+255),b
  6235  003BC6  0E00               	movlw	0
  6236  003BC8  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6237  003BCA  6F69               	movwf	(??___fleq+1)& (0+255),b
  6238  003BCC  0E80               	movlw	128
  6239  003BCE  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6240  003BD0  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6241  003BD2  0E7F               	movlw	127
  6242  003BD4  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6243  003BD6  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6244  003BD8  5168               	movf	??___fleq& (0+255),w,b
  6245  003BDA  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6246  003BDC  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6247  003BDE  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6248  003BE0  A4D8               	btfss	status,2,c
  6249  003BE2  D008               	goto	l6511
  6250                           
  6251                           ; BSR set to: 0
  6252  003BE4  0E00               	movlw	0
  6253  003BE6  6F64               	movwf	___fleq@ff2& (0+255),b
  6254  003BE8  0E00               	movlw	0
  6255  003BEA  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6256  003BEC  0E00               	movlw	0
  6257  003BEE  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6258  003BF0  0E00               	movlw	0
  6259  003BF2  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6260  003BF4                     l6511:
  6261                           
  6262                           ; BSR set to: 0
  6263  003BF4  5164               	movf	___fleq@ff2& (0+255),w,b
  6264  003BF6  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6265  003BF8  E10A               	bnz	u8200
  6266  003BFA  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6267  003BFC  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6268  003BFE  E107               	bnz	u8200
  6269  003C00  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6270  003C02  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6271  003C04  E104               	bnz	u8200
  6272  003C06  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6273  003C08  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6274  003C0A  B4D8               	btfsc	status,2,c
  6275  003C0C  D002               	goto	l6515
  6276  003C0E                     u8200:
  6277                           
  6278                           ; BSR set to: 0
  6279  003C0E  90D8               	bcf	status,0,c
  6280  003C10  0012               	return	
  6281  003C12                     l6515:
  6282                           
  6283                           ; BSR set to: 0
  6284  003C12  80D8               	bsf	status,0,c
  6285                           
  6286                           ; BSR set to: 0
  6287  003C14  0012               	return		;funcret
  6288  003C16                     __end_of___fleq:
  6289                           	opt callstack 0
  6290                           
  6291 ;; *************** function ___fldiv *****************
  6292 ;; Defined at:
  6293 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;  b               4    0[BANK0 ] int 
  6296 ;;  a               4    4[BANK0 ] int 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  grs             4   19[BANK0 ] unsigned long 
  6299 ;;  rem             4   12[BANK0 ] unsigned long 
  6300 ;;  new_exp         2   17[BANK0 ] short 
  6301 ;;  aexp            1   24[BANK0 ] unsigned char 
  6302 ;;  bexp            1   23[BANK0 ] unsigned char 
  6303 ;;  sign            1   16[BANK0 ] unsigned char 
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  4    0[BANK0 ] unsigned char 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6313 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6314 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6315 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6316 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6317 ;;Total ram usage:       25 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    2
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_efgtoa
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text19
  6328  0028E2                     __ptext19:
  6329                           	opt callstack 0
  6330  0028E2                     ___fldiv:
  6331                           	opt callstack 23
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;incstack = 0
  6335  0028E2  0100               	movlb	0	; () banked
  6336  0028E4  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6337  0028E6  0B80               	andlw	128
  6338  0028E8  6F70               	movwf	___fldiv@sign& (0+255),b
  6339  0028EA  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6340  0028EC  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  6341  0028EE  6F77               	movwf	___fldiv@bexp& (0+255),b
  6342                           
  6343                           ; BSR set to: 0
  6344  0028F0  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
  6345                           
  6346                           ; BSR set to: 0
  6347  0028F2  8177               	bsf	___fldiv@bexp& (0+255),0,b
  6348                           
  6349                           ; BSR set to: 0
  6350  0028F4  5177               	movf	___fldiv@bexp& (0+255),w,b
  6351  0028F6  B4D8               	btfsc	status,2,c
  6352  0028F8  D00D               	goto	l6165
  6353                           
  6354                           ; BSR set to: 0
  6355  0028FA  2977               	incf	___fldiv@bexp& (0+255),w,b
  6356  0028FC  A4D8               	btfss	status,2,c
  6357  0028FE  D008               	goto	l6161
  6358                           
  6359                           ; BSR set to: 0
  6360  002900  0E00               	movlw	0
  6361  002902  6F60               	movwf	___fldiv@b& (0+255),b
  6362  002904  0E00               	movlw	0
  6363  002906  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6364  002908  0E00               	movlw	0
  6365  00290A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6366  00290C  0E00               	movlw	0
  6367  00290E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6368  002910                     l6161:
  6369                           
  6370                           ; BSR set to: 0
  6371  002910  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6372  002912  D006               	goto	L7
  6373  002914                     l6165:
  6374                           
  6375                           ; BSR set to: 0
  6376  002914  0E00               	movlw	0
  6377  002916  6F60               	movwf	___fldiv@b& (0+255),b
  6378  002918  0E00               	movlw	0
  6379  00291A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6380  00291C  0E00               	movlw	0
  6381  00291E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6382  002920                     L7:
  6383  002920  0E00               	movlw	0
  6384  002922  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6385                           
  6386                           ; BSR set to: 0
  6387  002924  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6388  002926  0B80               	andlw	128
  6389  002928  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  6390                           
  6391                           ; BSR set to: 0
  6392  00292A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6393  00292C  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  6394  00292E  6F78               	movwf	___fldiv@aexp& (0+255),b
  6395                           
  6396                           ; BSR set to: 0
  6397  002930  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
  6398                           
  6399                           ; BSR set to: 0
  6400  002932  8178               	bsf	___fldiv@aexp& (0+255),0,b
  6401                           
  6402                           ; BSR set to: 0
  6403  002934  5178               	movf	___fldiv@aexp& (0+255),w,b
  6404  002936  B4D8               	btfsc	status,2,c
  6405  002938  D00D               	goto	l6185
  6406                           
  6407                           ; BSR set to: 0
  6408  00293A  2978               	incf	___fldiv@aexp& (0+255),w,b
  6409  00293C  A4D8               	btfss	status,2,c
  6410  00293E  D008               	goto	l6181
  6411                           
  6412                           ; BSR set to: 0
  6413  002940  0E00               	movlw	0
  6414  002942  6F64               	movwf	___fldiv@a& (0+255),b
  6415  002944  0E00               	movlw	0
  6416  002946  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6417  002948  0E00               	movlw	0
  6418  00294A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6419  00294C  0E00               	movlw	0
  6420  00294E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6421  002950                     l6181:
  6422                           
  6423                           ; BSR set to: 0
  6424  002950  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  6425  002952  D006               	goto	L8
  6426  002954                     l6185:
  6427                           
  6428                           ; BSR set to: 0
  6429  002954  0E00               	movlw	0
  6430  002956  6F64               	movwf	___fldiv@a& (0+255),b
  6431  002958  0E00               	movlw	0
  6432  00295A  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6433  00295C  0E00               	movlw	0
  6434  00295E  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6435  002960                     L8:
  6436  002960  0E00               	movlw	0
  6437  002962  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6438                           
  6439                           ; BSR set to: 0
  6440  002964  5164               	movf	___fldiv@a& (0+255),w,b
  6441  002966  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6442  002968  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6443  00296A  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6444  00296C  A4D8               	btfss	status,2,c
  6445  00296E  D017               	goto	l6199
  6446                           
  6447                           ; BSR set to: 0
  6448  002970  0E00               	movlw	0
  6449  002972  6F60               	movwf	___fldiv@b& (0+255),b
  6450  002974  0E00               	movlw	0
  6451  002976  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6452  002978  0E00               	movlw	0
  6453  00297A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6454  00297C  0E00               	movlw	0
  6455  00297E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6456                           
  6457                           ; BSR set to: 0
  6458  002980  0E80               	movlw	128
  6459  002982  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6460  002984  0E7F               	movlw	127
  6461  002986  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6462  002988                     l6193:
  6463                           
  6464                           ; BSR set to: 0
  6465  002988  5170               	movf	___fldiv@sign& (0+255),w,b
  6466  00298A  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6467                           
  6468                           ; BSR set to: 0
  6469  00298C  C060  F060         	movff	___fldiv@b,?___fldiv
  6470  002990  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  6471  002994  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  6472  002998  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  6473  00299C  0012               	return	
  6474  00299E                     l6199:
  6475                           
  6476                           ; BSR set to: 0
  6477  00299E  5177               	movf	___fldiv@bexp& (0+255),w,b
  6478  0029A0  A4D8               	btfss	status,2,c
  6479  0029A2  D009               	goto	l6207
  6480                           
  6481                           ; BSR set to: 0
  6482                           
  6483                           ; BSR set to: 0
  6484  0029A4  0E00               	movlw	0
  6485  0029A6  6F60               	movwf	?___fldiv& (0+255),b
  6486  0029A8  0E00               	movlw	0
  6487  0029AA  6F61               	movwf	(?___fldiv+1)& (0+255),b
  6488  0029AC  0E00               	movlw	0
  6489  0029AE  6F62               	movwf	(?___fldiv+2)& (0+255),b
  6490  0029B0  0E00               	movlw	0
  6491  0029B2  6F63               	movwf	(?___fldiv+3)& (0+255),b
  6492  0029B4  0012               	return	
  6493  0029B6                     l6207:
  6494                           
  6495                           ; BSR set to: 0
  6496  0029B6  5178               	movf	___fldiv@aexp& (0+255),w,b
  6497  0029B8  C077  F068         	movff	___fldiv@bexp,??___fldiv
  6498  0029BC  6B69               	clrf	(??___fldiv+1)& (0+255),b
  6499  0029BE  5F68               	subwf	??___fldiv& (0+255),f,b
  6500  0029C0  0E00               	movlw	0
  6501  0029C2  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  6502  0029C4  0E7F               	movlw	127
  6503  0029C6  2568               	addwf	??___fldiv& (0+255),w,b
  6504  0029C8  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6505  0029CA  0E00               	movlw	0
  6506  0029CC  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  6507  0029CE  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6508                           
  6509                           ; BSR set to: 0
  6510  0029D0  C060  F06C         	movff	___fldiv@b,___fldiv@rem
  6511  0029D4  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
  6512  0029D8  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
  6513  0029DC  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
  6514                           
  6515                           ; BSR set to: 0
  6516  0029E0  0E00               	movlw	0
  6517  0029E2  6F60               	movwf	___fldiv@b& (0+255),b
  6518  0029E4  0E00               	movlw	0
  6519  0029E6  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6520  0029E8  0E00               	movlw	0
  6521  0029EA  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6522  0029EC  0E00               	movlw	0
  6523  0029EE  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6524                           
  6525                           ; BSR set to: 0
  6526  0029F0  0E00               	movlw	0
  6527  0029F2  6F73               	movwf	___fldiv@grs& (0+255),b
  6528  0029F4  0E00               	movlw	0
  6529  0029F6  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  6530  0029F8  0E00               	movlw	0
  6531  0029FA  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  6532  0029FC  0E00               	movlw	0
  6533  0029FE  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  6534                           
  6535                           ; BSR set to: 0
  6536  002A00  0E00               	movlw	0
  6537  002A02  6F78               	movwf	___fldiv@aexp& (0+255),b
  6538  002A04  D028               	goto	l1095
  6539  002A06                     l6217:
  6540                           
  6541                           ; BSR set to: 0
  6542  002A06  5178               	movf	___fldiv@aexp& (0+255),w,b
  6543  002A08  B4D8               	btfsc	status,2,c
  6544  002A0A  D011               	goto	l6225
  6545                           
  6546                           ; BSR set to: 0
  6547  002A0C  90D8               	bcf	status,0,c
  6548  002A0E  376C               	rlcf	___fldiv@rem& (0+255),f,b
  6549  002A10  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6550  002A12  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6551  002A14  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6552  002A16  90D8               	bcf	status,0,c
  6553  002A18  3760               	rlcf	___fldiv@b& (0+255),f,b
  6554  002A1A  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6555  002A1C  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6556  002A1E  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6557                           
  6558                           ; BSR set to: 0
  6559  002A20  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6560                           
  6561                           ; BSR set to: 0
  6562  002A22  8160               	bsf	___fldiv@b& (0+255),0,b
  6563                           
  6564                           ; BSR set to: 0
  6565  002A24  90D8               	bcf	status,0,c
  6566  002A26  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6567  002A28  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6568  002A2A  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6569  002A2C  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6570  002A2E                     l6225:
  6571                           
  6572                           ; BSR set to: 0
  6573  002A2E  5164               	movf	___fldiv@a& (0+255),w,b
  6574  002A30  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  6575  002A32  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6576  002A34  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6577  002A36  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6578  002A38  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6579  002A3A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6580  002A3C  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6581  002A3E  A0D8               	btfss	status,0,c
  6582  002A40  D009               	goto	l6231
  6583                           
  6584                           ; BSR set to: 0
  6585  002A42  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6586                           
  6587                           ; BSR set to: 0
  6588  002A44  5164               	movf	___fldiv@a& (0+255),w,b
  6589  002A46  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  6590  002A48  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6591  002A4A  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6592  002A4C  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6593  002A4E  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6594  002A50  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6595  002A52  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6596  002A54                     l6231:
  6597                           
  6598                           ; BSR set to: 0
  6599  002A54  2B78               	incf	___fldiv@aexp& (0+255),f,b
  6600  002A56                     l1095:
  6601                           
  6602                           ; BSR set to: 0
  6603  002A56  0E19               	movlw	25
  6604  002A58  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  6605  002A5A  D7D5               	goto	l6217
  6606                           
  6607                           ; BSR set to: 0
  6608  002A5C  516C               	movf	___fldiv@rem& (0+255),w,b
  6609  002A5E  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6610  002A60  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6611  002A62  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6612  002A64  B4D8               	btfsc	status,2,c
  6613  002A66  D011               	goto	l6243
  6614                           
  6615                           ; BSR set to: 0
  6616  002A68  8173               	bsf	___fldiv@grs& (0+255),0,b
  6617  002A6A  D00F               	goto	l6243
  6618  002A6C                     l6237:
  6619                           
  6620                           ; BSR set to: 0
  6621  002A6C  90D8               	bcf	status,0,c
  6622  002A6E  3760               	rlcf	___fldiv@b& (0+255),f,b
  6623  002A70  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6624  002A72  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6625  002A74  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6626                           
  6627                           ; BSR set to: 0
  6628  002A76  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6629                           
  6630                           ; BSR set to: 0
  6631  002A78  8160               	bsf	___fldiv@b& (0+255),0,b
  6632                           
  6633                           ; BSR set to: 0
  6634  002A7A  90D8               	bcf	status,0,c
  6635  002A7C  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6636  002A7E  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6637  002A80  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6638  002A82  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6639  002A84  0771               	decf	___fldiv@new_exp& (0+255),f,b
  6640  002A86  A0D8               	btfss	status,0,c
  6641  002A88  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6642  002A8A                     l6243:
  6643                           
  6644                           ; BSR set to: 0
  6645  002A8A  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6646  002A8C  D7EF               	goto	l6237
  6647                           
  6648                           ; BSR set to: 0
  6649  002A8E  0E00               	movlw	0
  6650  002A90  6F78               	movwf	___fldiv@aexp& (0+255),b
  6651                           
  6652                           ; BSR set to: 0
  6653  002A92  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6654  002A94  D017               	goto	l1106
  6655                           
  6656                           ; BSR set to: 0
  6657  002A96  0EFF               	movlw	255
  6658  002A98  1573               	andwf	___fldiv@grs& (0+255),w,b
  6659  002A9A  6F68               	movwf	??___fldiv& (0+255),b
  6660  002A9C  0EFF               	movlw	255
  6661  002A9E  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6662  002AA0  6F69               	movwf	(??___fldiv+1)& (0+255),b
  6663  002AA2  0EFF               	movlw	255
  6664  002AA4  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6665  002AA6  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  6666  002AA8  0E7F               	movlw	127
  6667  002AAA  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6668  002AAC  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  6669  002AAE  5168               	movf	??___fldiv& (0+255),w,b
  6670  002AB0  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  6671  002AB2  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  6672  002AB4  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  6673  002AB6  B4D8               	btfsc	status,2,c
  6674  002AB8  D003               	goto	l1107
  6675  002ABA                     u7800:
  6676                           
  6677                           ; BSR set to: 0
  6678  002ABA  0E01               	movlw	1
  6679  002ABC  6F78               	movwf	___fldiv@aexp& (0+255),b
  6680  002ABE  D002               	goto	l1106
  6681  002AC0                     l1107:
  6682                           
  6683                           ; BSR set to: 0
  6684  002AC0  B160               	btfsc	___fldiv@b& (0+255),0,b
  6685  002AC2  D7FB               	goto	u7800
  6686  002AC4                     l1106:
  6687                           
  6688                           ; BSR set to: 0
  6689  002AC4  5178               	movf	___fldiv@aexp& (0+255),w,b
  6690  002AC6  B4D8               	btfsc	status,2,c
  6691  002AC8  D01F               	goto	l6263
  6692                           
  6693                           ; BSR set to: 0
  6694  002ACA  0E01               	movlw	1
  6695  002ACC  2760               	addwf	___fldiv@b& (0+255),f,b
  6696  002ACE  0E00               	movlw	0
  6697  002AD0  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6698  002AD2  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6699  002AD4  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6700                           
  6701                           ; BSR set to: 0
  6702  002AD6  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  6703  002AD8  D017               	goto	l6263
  6704                           
  6705                           ; BSR set to: 0
  6706  002ADA  C060  F068         	movff	___fldiv@b,??___fldiv
  6707  002ADE  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
  6708  002AE2  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
  6709  002AE6  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
  6710  002AEA  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  6711  002AEC  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  6712  002AEE  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  6713  002AF0  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  6714  002AF2  3368               	rrcf	??___fldiv& (0+255),f,b
  6715  002AF4  C068  F060         	movff	??___fldiv,___fldiv@b
  6716  002AF8  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
  6717  002AFC  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
  6718  002B00  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
  6719                           
  6720                           ; BSR set to: 0
  6721  002B04  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  6722  002B06  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6723  002B08                     l6263:
  6724                           
  6725                           ; BSR set to: 0
  6726  002B08  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6727  002B0A  D010               	goto	l6267
  6728  002B0C  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6729  002B0E  E103               	bnz	u7840
  6730  002B10  2971               	incf	___fldiv@new_exp& (0+255),w,b
  6731  002B12  A0D8               	btfss	status,0,c
  6732  002B14  D00B               	goto	l6267
  6733  002B16                     u7840:
  6734                           
  6735                           ; BSR set to: 0
  6736  002B16  0E00               	movlw	0
  6737  002B18  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6738  002B1A  6971               	setf	___fldiv@new_exp& (0+255),b
  6739  002B1C  0E00               	movlw	0
  6740  002B1E  6F60               	movwf	___fldiv@b& (0+255),b
  6741  002B20  0E00               	movlw	0
  6742  002B22  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6743  002B24  0E00               	movlw	0
  6744  002B26  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6745  002B28  0E00               	movlw	0
  6746  002B2A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6747  002B2C                     l6267:
  6748                           
  6749                           ; BSR set to: 0
  6750  002B2C  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6751  002B2E  D005               	goto	u7850
  6752  002B30  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6753  002B32  E111               	bnz	l6271
  6754  002B34  0571               	decf	___fldiv@new_exp& (0+255),w,b
  6755  002B36  B0D8               	btfsc	status,0,c
  6756  002B38  D00E               	goto	l6271
  6757  002B3A                     u7850:
  6758                           
  6759                           ; BSR set to: 0
  6760  002B3A  0E00               	movlw	0
  6761  002B3C  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6762  002B3E  0E00               	movlw	0
  6763  002B40  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6764  002B42  0E00               	movlw	0
  6765  002B44  6F60               	movwf	___fldiv@b& (0+255),b
  6766  002B46  0E00               	movlw	0
  6767  002B48  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6768  002B4A  0E00               	movlw	0
  6769  002B4C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6770  002B4E  0E00               	movlw	0
  6771  002B50  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6772  002B52  0E00               	movlw	0
  6773  002B54  6F70               	movwf	___fldiv@sign& (0+255),b
  6774  002B56                     l6271:
  6775                           
  6776                           ; BSR set to: 0
  6777  002B56  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
  6778                           
  6779                           ; BSR set to: 0
  6780  002B5A  A177               	btfss	___fldiv@bexp& (0+255),0,b
  6781  002B5C  D002               	goto	l6277
  6782                           
  6783                           ; BSR set to: 0
  6784  002B5E  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6785  002B60  D001               	goto	l6279
  6786  002B62                     l6277:
  6787                           
  6788                           ; BSR set to: 0
  6789  002B62  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  6790  002B64                     l6279:
  6791                           
  6792                           ; BSR set to: 0
  6793  002B64  90D8               	bcf	status,0,c
  6794  002B66  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  6795  002B68  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6796  002B6A  D70E               	goto	l6193
  6797  002B6C                     __end_of___fldiv:
  6798                           	opt callstack 0
  6799                           
  6800 ;; *************** function ___awmod *****************
  6801 ;; Defined at:
  6802 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  dividend        2    0[BANK0 ] int 
  6805 ;;  divisor         2    2[BANK0 ] int 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  sign            1    5[BANK0 ] unsigned char 
  6808 ;;  counter         1    4[BANK0 ] unsigned char 
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  2    0[BANK0 ] int 
  6811 ;; Registers used:
  6812 ;;		wreg, status,2, status,0
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6818 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6819 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6821 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6822 ;;Total ram usage:        6 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; Hardware stack levels required when called:    2
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		_efgtoa
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           	psect	text20
  6833  003F1C                     __ptext20:
  6834                           	opt callstack 0
  6835  003F1C                     ___awmod:
  6836                           	opt callstack 23
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;incstack = 0
  6840  003F1C  0E00               	movlw	0
  6841  003F1E  0100               	movlb	0	; () banked
  6842  003F20  6F65               	movwf	___awmod@sign& (0+255),b
  6843                           
  6844                           ; BSR set to: 0
  6845  003F22  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6846  003F24  D006               	goto	l6475
  6847                           
  6848                           ; BSR set to: 0
  6849  003F26  6D60               	negf	___awmod@dividend& (0+255),b
  6850  003F28  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6851  003F2A  B0D8               	btfsc	status,0,c
  6852  003F2C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6853                           
  6854                           ; BSR set to: 0
  6855  003F2E  0E01               	movlw	1
  6856  003F30  6F65               	movwf	___awmod@sign& (0+255),b
  6857  003F32                     l6475:
  6858                           
  6859                           ; BSR set to: 0
  6860  003F32  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6861  003F34  D004               	goto	l6479
  6862                           
  6863                           ; BSR set to: 0
  6864  003F36  6D62               	negf	___awmod@divisor& (0+255),b
  6865  003F38  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  6866  003F3A  B0D8               	btfsc	status,0,c
  6867  003F3C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  6868  003F3E                     l6479:
  6869                           
  6870                           ; BSR set to: 0
  6871  003F3E  5162               	movf	___awmod@divisor& (0+255),w,b
  6872  003F40  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6873  003F42  B4D8               	btfsc	status,2,c
  6874  003F44  D018               	goto	l6495
  6875                           
  6876                           ; BSR set to: 0
  6877  003F46  0E01               	movlw	1
  6878  003F48  6F64               	movwf	___awmod@counter& (0+255),b
  6879  003F4A  D004               	goto	l6485
  6880  003F4C                     l6483:
  6881                           
  6882                           ; BSR set to: 0
  6883  003F4C  90D8               	bcf	status,0,c
  6884  003F4E  3762               	rlcf	___awmod@divisor& (0+255),f,b
  6885  003F50  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6886  003F52  2B64               	incf	___awmod@counter& (0+255),f,b
  6887  003F54                     l6485:
  6888                           
  6889                           ; BSR set to: 0
  6890  003F54  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6891  003F56  D7FA               	goto	l6483
  6892  003F58                     u8150:
  6893                           
  6894                           ; BSR set to: 0
  6895  003F58  5162               	movf	___awmod@divisor& (0+255),w,b
  6896  003F5A  5D60               	subwf	___awmod@dividend& (0+255),w,b
  6897  003F5C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6898  003F5E  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6899  003F60  A0D8               	btfss	status,0,c
  6900  003F62  D004               	goto	l6491
  6901                           
  6902                           ; BSR set to: 0
  6903  003F64  5162               	movf	___awmod@divisor& (0+255),w,b
  6904  003F66  5F60               	subwf	___awmod@dividend& (0+255),f,b
  6905  003F68  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6906  003F6A  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6907  003F6C                     l6491:
  6908                           
  6909                           ; BSR set to: 0
  6910  003F6C  90D8               	bcf	status,0,c
  6911  003F6E  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6912  003F70  3362               	rrcf	___awmod@divisor& (0+255),f,b
  6913                           
  6914                           ; BSR set to: 0
  6915  003F72  2F64               	decfsz	___awmod@counter& (0+255),f,b
  6916  003F74  D7F1               	goto	u8150
  6917  003F76                     l6495:
  6918                           
  6919                           ; BSR set to: 0
  6920  003F76  5165               	movf	___awmod@sign& (0+255),w,b
  6921  003F78  B4D8               	btfsc	status,2,c
  6922  003F7A  D004               	goto	l6499
  6923                           
  6924                           ; BSR set to: 0
  6925  003F7C  6D60               	negf	___awmod@dividend& (0+255),b
  6926  003F7E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6927  003F80  B0D8               	btfsc	status,0,c
  6928  003F82  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6929  003F84                     l6499:
  6930                           
  6931                           ; BSR set to: 0
  6932  003F84  C060  F060         	movff	___awmod@dividend,?___awmod
  6933  003F88  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  6934                           
  6935                           ; BSR set to: 0
  6936  003F8C  0012               	return		;funcret
  6937  003F8E                     __end_of___awmod:
  6938                           	opt callstack 0
  6939                           
  6940 ;; *************** function ___awdiv *****************
  6941 ;; Defined at:
  6942 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  dividend        2    0[BANK0 ] int 
  6945 ;;  divisor         2    2[BANK0 ] int 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  quotient        2    6[BANK0 ] int 
  6948 ;;  sign            1    5[BANK0 ] unsigned char 
  6949 ;;  counter         1    4[BANK0 ] unsigned char 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  2    0[BANK0 ] int 
  6952 ;; Registers used:
  6953 ;;		wreg, status,2, status,0
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6960 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6962 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6963 ;;Total ram usage:        8 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    2
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		_efgtoa
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text21
  6974  003C9E                     __ptext21:
  6975                           	opt callstack 0
  6976  003C9E                     ___awdiv:
  6977                           	opt callstack 23
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;incstack = 0
  6981  003C9E  0E00               	movlw	0
  6982  003CA0  0100               	movlb	0	; () banked
  6983  003CA2  6F65               	movwf	___awdiv@sign& (0+255),b
  6984                           
  6985                           ; BSR set to: 0
  6986  003CA4  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6987  003CA6  D006               	goto	l6431
  6988                           
  6989                           ; BSR set to: 0
  6990  003CA8  6D62               	negf	___awdiv@divisor& (0+255),b
  6991  003CAA  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6992  003CAC  B0D8               	btfsc	status,0,c
  6993  003CAE  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6994                           
  6995                           ; BSR set to: 0
  6996  003CB0  0E01               	movlw	1
  6997  003CB2  6F65               	movwf	___awdiv@sign& (0+255),b
  6998  003CB4                     l6431:
  6999                           
  7000                           ; BSR set to: 0
  7001  003CB4  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7002  003CB6  D006               	goto	l6437
  7003                           
  7004                           ; BSR set to: 0
  7005  003CB8  6D60               	negf	___awdiv@dividend& (0+255),b
  7006  003CBA  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7007  003CBC  B0D8               	btfsc	status,0,c
  7008  003CBE  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7009                           
  7010                           ; BSR set to: 0
  7011  003CC0  0E01               	movlw	1
  7012  003CC2  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7013  003CC4                     l6437:
  7014                           
  7015                           ; BSR set to: 0
  7016  003CC4  0E00               	movlw	0
  7017  003CC6  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7018  003CC8  0E00               	movlw	0
  7019  003CCA  6F66               	movwf	___awdiv@quotient& (0+255),b
  7020                           
  7021                           ; BSR set to: 0
  7022  003CCC  5162               	movf	___awdiv@divisor& (0+255),w,b
  7023  003CCE  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7024  003CD0  B4D8               	btfsc	status,2,c
  7025  003CD2  D01C               	goto	l6459
  7026                           
  7027                           ; BSR set to: 0
  7028  003CD4  0E01               	movlw	1
  7029  003CD6  6F64               	movwf	___awdiv@counter& (0+255),b
  7030  003CD8  D004               	goto	l6445
  7031  003CDA                     l6443:
  7032                           
  7033                           ; BSR set to: 0
  7034  003CDA  90D8               	bcf	status,0,c
  7035  003CDC  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7036  003CDE  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7037  003CE0  2B64               	incf	___awdiv@counter& (0+255),f,b
  7038  003CE2                     l6445:
  7039                           
  7040                           ; BSR set to: 0
  7041  003CE2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7042  003CE4  D7FA               	goto	l6443
  7043  003CE6                     u8090:
  7044                           
  7045                           ; BSR set to: 0
  7046  003CE6  90D8               	bcf	status,0,c
  7047  003CE8  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7048  003CEA  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7049                           
  7050                           ; BSR set to: 0
  7051  003CEC  5162               	movf	___awdiv@divisor& (0+255),w,b
  7052  003CEE  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7053  003CF0  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7054  003CF2  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7055  003CF4  A0D8               	btfss	status,0,c
  7056  003CF6  D005               	goto	l6455
  7057                           
  7058                           ; BSR set to: 0
  7059  003CF8  5162               	movf	___awdiv@divisor& (0+255),w,b
  7060  003CFA  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7061  003CFC  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7062  003CFE  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7063                           
  7064                           ; BSR set to: 0
  7065  003D00  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7066  003D02                     l6455:
  7067                           
  7068                           ; BSR set to: 0
  7069  003D02  90D8               	bcf	status,0,c
  7070  003D04  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7071  003D06  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7072                           
  7073                           ; BSR set to: 0
  7074  003D08  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7075  003D0A  D7ED               	goto	u8090
  7076  003D0C                     l6459:
  7077                           
  7078                           ; BSR set to: 0
  7079  003D0C  5165               	movf	___awdiv@sign& (0+255),w,b
  7080  003D0E  B4D8               	btfsc	status,2,c
  7081  003D10  D004               	goto	l6463
  7082                           
  7083                           ; BSR set to: 0
  7084  003D12  6D66               	negf	___awdiv@quotient& (0+255),b
  7085  003D14  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7086  003D16  B0D8               	btfsc	status,0,c
  7087  003D18  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7088  003D1A                     l6463:
  7089                           
  7090                           ; BSR set to: 0
  7091  003D1A  C066  F060         	movff	___awdiv@quotient,?___awdiv
  7092  003D1E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  7093                           
  7094                           ; BSR set to: 0
  7095  003D22  0012               	return		;funcret
  7096  003D24                     __end_of___awdiv:
  7097                           	opt callstack 0
  7098                           
  7099 ;; *************** function _ctoa *****************
  7100 ;; Defined at:
  7101 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  7104 ;;		 -> sprintf@f(6), 
  7105 ;;  c               1   29[BANK0 ] unsigned char 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  w               2   30[BANK0 ] int 
  7108 ;;  l               2    0        int 
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  2   27[BANK0 ] int 
  7111 ;; Registers used:
  7112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7118 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7119 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7121 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;Total ram usage:        5 bytes
  7123 ;; Hardware stack levels used:    1
  7124 ;; Hardware stack levels required when called:    6
  7125 ;; This function calls:
  7126 ;;		_pad
  7127 ;; This function is called by:
  7128 ;;		_vfpfcnvrt
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text22
  7133  004100                     __ptext22:
  7134                           	opt callstack 0
  7135  004100                     _ctoa:
  7136                           	opt callstack 20
  7137                           
  7138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;incstack = 0
  7142  004100  5036               	movf	_width,w,c
  7143  004102  1037               	iorwf	_width+1,w,c
  7144  004104  A4D8               	btfss	status,2,c
  7145  004106  D005               	goto	l6647
  7146  004108  C036  F07E         	movff	_width,ctoa@w
  7147  00410C  C037  F07F         	movff	_width+1,ctoa@w+1
  7148  004110  D007               	goto	l6649
  7149  004112                     l6647:
  7150  004112  0EFF               	movlw	255
  7151  004114  2436               	addwf	_width,w,c
  7152  004116  0100               	movlb	0	; () banked
  7153  004118  6F7E               	movwf	ctoa@w& (0+255),b
  7154  00411A  0EFF               	movlw	255
  7155  00411C  2037               	addwfc	_width+1,w,c
  7156  00411E  6F7F               	movwf	(ctoa@w+1)& (0+255),b
  7157  004120                     l6649:
  7158                           
  7159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  7160  004120  C07D  F123         	movff	ctoa@c,_dbuf
  7161                           
  7162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  7163  004124  0E00               	movlw	0
  7164  004126  0101               	movlb	1	; () banked
  7165  004128  6F24               	movwf	(_dbuf+1)& (0+255),b
  7166                           
  7167                           ; BSR set to: 1
  7168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  7169  00412A  C07B  F070         	movff	ctoa@fp,pad@fp
  7170  00412E  C07C  F071         	movff	ctoa@fp+1,pad@fp+1
  7171  004132  0E23               	movlw	low _dbuf
  7172  004134  0100               	movlb	0	; () banked
  7173  004136  6F72               	movwf	pad@buf& (0+255),b
  7174  004138  0E01               	movlw	high _dbuf
  7175  00413A  6F73               	movwf	(pad@buf+1)& (0+255),b
  7176  00413C  C07E  F074         	movff	ctoa@w,pad@p
  7177  004140  C07F  F075         	movff	ctoa@w+1,pad@p+1
  7178  004144  EC77  F01D         	call	_pad	;wreg free
  7179  004148  C070  F07B         	movff	?_pad,?_ctoa
  7180  00414C  C071  F07C         	movff	?_pad+1,?_ctoa+1
  7181  004150  0012               	return		;funcret
  7182  004152                     __end_of_ctoa:
  7183                           	opt callstack 0
  7184                           
  7185 ;; *************** function _pad *****************
  7186 ;; Defined at:
  7187 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7190 ;;		 -> sprintf@f(6), 
  7191 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  7192 ;;		 -> dbuf(80), 
  7193 ;;  p               2   20[BANK0 ] int 
  7194 ;; Auto vars:     Size  Location     Type
  7195 ;;  w               2   25[BANK0 ] int 
  7196 ;;  i               2   23[BANK0 ] int 
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  2   16[BANK0 ] int 
  7199 ;; Registers used:
  7200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7206 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7207 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7208 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7209 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7210 ;;Total ram usage:       11 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    5
  7213 ;; This function calls:
  7214 ;;		_fputc
  7215 ;;		_fputs
  7216 ;;		_strlen
  7217 ;; This function is called by:
  7218 ;;		_ctoa
  7219 ;;		_efgtoa
  7220 ;;		_utoa
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224                           	psect	text23
  7225  003AEE                     __ptext23:
  7226                           	opt callstack 0
  7227  003AEE                     _pad:
  7228                           	opt callstack 20
  7229                           
  7230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7231                           
  7232                           ;incstack = 0
  7233  003AEE  A03A               	btfss	_flags,0,c
  7234  003AF0  D00A               	goto	l6057
  7235                           
  7236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7237  003AF2  C072  F069         	movff	pad@buf,fputs@s
  7238  003AF6  C073  F06A         	movff	pad@buf+1,fputs@s+1
  7239  003AFA  C070  F06B         	movff	pad@fp,fputs@fp
  7240  003AFE  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  7241  003B02  EC3C  F021         	call	_fputs	;wreg free
  7242  003B06                     l6057:
  7243                           
  7244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7245  003B06  0100               	movlb	0	; () banked
  7246  003B08  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  7247  003B0A  D005               	goto	l6061
  7248                           
  7249                           ; BSR set to: 0
  7250  003B0C  C074  F079         	movff	pad@p,pad@w
  7251  003B10  C075  F07A         	movff	pad@p+1,pad@w+1
  7252  003B14  D004               	goto	l335
  7253  003B16                     l6061:
  7254                           
  7255                           ; BSR set to: 0
  7256  003B16  0E00               	movlw	0
  7257  003B18  6F7A               	movwf	(pad@w+1)& (0+255),b
  7258  003B1A  0E00               	movlw	0
  7259  003B1C  6F79               	movwf	pad@w& (0+255),b
  7260  003B1E                     l335:
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7264  003B1E  0E00               	movlw	0
  7265  003B20  6F78               	movwf	(pad@i+1)& (0+255),b
  7266  003B22  0E00               	movlw	0
  7267  003B24  6F77               	movwf	pad@i& (0+255),b
  7268                           
  7269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7270  003B26  D00D               	goto	l6067
  7271  003B28                     l6063:
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7275  003B28  0E00               	movlw	0
  7276  003B2A  6F61               	movwf	(fputc@c+1)& (0+255),b
  7277  003B2C  0E20               	movlw	32
  7278  003B2E  6F60               	movwf	fputc@c& (0+255),b
  7279  003B30  C070  F062         	movff	pad@fp,fputc@fp
  7280  003B34  C071  F063         	movff	pad@fp+1,fputc@fp+1
  7281  003B38  EC26  F01D         	call	_fputc	;wreg free
  7282                           
  7283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  7284  003B3C  0100               	movlb	0	; () banked
  7285  003B3E  4B77               	infsnz	pad@i& (0+255),f,b
  7286  003B40  2B78               	incf	(pad@i+1)& (0+255),f,b
  7287  003B42                     l6067:
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7291  003B42  5179               	movf	pad@w& (0+255),w,b
  7292  003B44  5D77               	subwf	pad@i& (0+255),w,b
  7293  003B46  5178               	movf	(pad@i+1)& (0+255),w,b
  7294  003B48  0A80               	xorlw	128
  7295  003B4A  6F76               	movwf	??_pad& (0+255),b
  7296  003B4C  517A               	movf	(pad@w+1)& (0+255),w,b
  7297  003B4E  0A80               	xorlw	128
  7298  003B50  5976               	subwfb	??_pad& (0+255),w,b
  7299  003B52  A0D8               	btfss	status,0,c
  7300  003B54  D7E9               	goto	l6063
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7304  003B56  B03A               	btfsc	_flags,0,c
  7305  003B58  D00A               	goto	l6071
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7309  003B5A  C072  F069         	movff	pad@buf,fputs@s
  7310  003B5E  C073  F06A         	movff	pad@buf+1,fputs@s+1
  7311  003B62  C070  F06B         	movff	pad@fp,fputs@fp
  7312  003B66  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  7313  003B6A  EC3C  F021         	call	_fputs	;wreg free
  7314  003B6E                     l6071:
  7315                           
  7316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7317  003B6E  C072  F060         	movff	pad@buf,strlen@s
  7318  003B72  C073  F061         	movff	pad@buf+1,strlen@s+1
  7319  003B76  ECC1  F021         	call	_strlen	;wreg free
  7320  003B7A  0100               	movlb	0	; () banked
  7321  003B7C  5179               	movf	pad@w& (0+255),w,b
  7322  003B7E  2560               	addwf	?_strlen& (0+255),w,b
  7323  003B80  6F70               	movwf	?_pad& (0+255),b
  7324  003B82  517A               	movf	(pad@w+1)& (0+255),w,b
  7325  003B84  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  7326  003B86  6F71               	movwf	(?_pad+1)& (0+255),b
  7327                           
  7328                           ; BSR set to: 0
  7329  003B88  0012               	return		;funcret
  7330  003B8A                     __end_of_pad:
  7331                           	opt callstack 0
  7332                           
  7333 ;; *************** function _strlen *****************
  7334 ;; Defined at:
  7335 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  7338 ;;		 -> dbuf(80), 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  7341 ;;		 -> dbuf(80), 
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  2    0[BANK0 ] unsigned int 
  7344 ;; Registers used:
  7345 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7351 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7352 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7354 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7355 ;;Total ram usage:        4 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:    2
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_pad
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text24
  7366  004382                     __ptext24:
  7367                           	opt callstack 0
  7368  004382                     _strlen:
  7369                           	opt callstack 22
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;incstack = 0
  7373  004382  C060  F062         	movff	strlen@s,strlen@a
  7374  004386  C061  F063         	movff	strlen@s+1,strlen@a+1
  7375  00438A  D003               	goto	l5841
  7376  00438C                     l5839:
  7377  00438C  0100               	movlb	0	; () banked
  7378  00438E  4B60               	infsnz	strlen@s& (0+255),f,b
  7379  004390  2B61               	incf	(strlen@s+1)& (0+255),f,b
  7380  004392                     l5841:
  7381  004392  C060  FFD9         	movff	strlen@s,fsr2l
  7382  004396  C061  FFDA         	movff	strlen@s+1,fsr2h
  7383  00439A  50DF               	movf	indf2,w,c
  7384  00439C  A4D8               	btfss	status,2,c
  7385  00439E  D7F6               	goto	l5839
  7386  0043A0  0100               	movlb	0	; () banked
  7387  0043A2  5162               	movf	strlen@a& (0+255),w,b
  7388  0043A4  5D60               	subwf	strlen@s& (0+255),w,b
  7389  0043A6  6F60               	movwf	?_strlen& (0+255),b
  7390  0043A8  5163               	movf	(strlen@a+1)& (0+255),w,b
  7391  0043AA  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  7392  0043AC  6F61               	movwf	(?_strlen+1)& (0+255),b
  7393                           
  7394                           ; BSR set to: 0
  7395  0043AE  0012               	return		;funcret
  7396  0043B0                     __end_of_strlen:
  7397                           	opt callstack 0
  7398                           
  7399 ;; *************** function _fputs *****************
  7400 ;; Defined at:
  7401 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  7404 ;;		 -> dbuf(80), 
  7405 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  7406 ;;		 -> sprintf@f(6), 
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;  i               2   14[BANK0 ] int 
  7409 ;;  c               1   13[BANK0 ] unsigned char 
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  2    9[BANK0 ] int 
  7412 ;; Registers used:
  7413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7419 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7420 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7422 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7423 ;;Total ram usage:        7 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    4
  7426 ;; This function calls:
  7427 ;;		_fputc
  7428 ;; This function is called by:
  7429 ;;		_pad
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text25
  7434  004278                     __ptext25:
  7435                           	opt callstack 0
  7436  004278                     _fputs:
  7437                           	opt callstack 20
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;incstack = 0
  7441  004278  0E00               	movlw	0
  7442  00427A  0100               	movlb	0	; () banked
  7443  00427C  6F6F               	movwf	(fputs@i+1)& (0+255),b
  7444  00427E  0E00               	movlw	0
  7445  004280  6F6E               	movwf	fputs@i& (0+255),b
  7446  004282  D00C               	goto	l5835
  7447  004284                     l5831:
  7448                           
  7449                           ; BSR set to: 0
  7450  004284  C06D  F060         	movff	fputs@c,fputc@c
  7451  004288  6B61               	clrf	(fputc@c+1)& (0+255),b
  7452  00428A  C06B  F062         	movff	fputs@fp,fputc@fp
  7453  00428E  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  7454  004292  EC26  F01D         	call	_fputc	;wreg free
  7455  004296  0100               	movlb	0	; () banked
  7456  004298  4B6E               	infsnz	fputs@i& (0+255),f,b
  7457  00429A  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  7458  00429C                     l5835:
  7459                           
  7460                           ; BSR set to: 0
  7461  00429C  516E               	movf	fputs@i& (0+255),w,b
  7462  00429E  2569               	addwf	fputs@s& (0+255),w,b
  7463  0042A0  6ED9               	movwf	fsr2l,c
  7464  0042A2  516F               	movf	(fputs@i+1)& (0+255),w,b
  7465  0042A4  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  7466  0042A6  6EDA               	movwf	fsr2h,c
  7467  0042A8  50DF               	movf	indf2,w,c
  7468  0042AA  6F6D               	movwf	fputs@c& (0+255),b
  7469  0042AC  516D               	movf	fputs@c& (0+255),w,b
  7470  0042AE  B4D8               	btfsc	status,2,c
  7471  0042B0  0012               	return	
  7472  0042B2  D7E8               	goto	l5831
  7473  0042B4                     __end_of_fputs:
  7474                           	opt callstack 0
  7475                           
  7476 ;; *************** function _fputc *****************
  7477 ;; Defined at:
  7478 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;  c               2    0[BANK0 ] int 
  7481 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  7482 ;;		 -> sprintf@f(6), 
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;		None
  7485 ;; Return value:  Size  Location     Type
  7486 ;;                  2    0[BANK0 ] int 
  7487 ;; Registers used:
  7488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7494 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7496 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7497 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7498 ;;Total ram usage:        9 bytes
  7499 ;; Hardware stack levels used:    1
  7500 ;; Hardware stack levels required when called:    3
  7501 ;; This function calls:
  7502 ;;		_putch
  7503 ;; This function is called by:
  7504 ;;		_pad
  7505 ;;		_vfpfcnvrt
  7506 ;;		_fputs
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text26
  7511  003A4C                     __ptext26:
  7512                           	opt callstack 0
  7513  003A4C                     _fputc:
  7514                           	opt callstack 20
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;incstack = 0
  7518  003A4C  0100               	movlb	0	; () banked
  7519  003A4E  5162               	movf	fputc@fp& (0+255),w,b
  7520  003A50  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  7521  003A52  B4D8               	btfsc	status,2,c
  7522  003A54  D004               	goto	u6900
  7523                           
  7524                           ; BSR set to: 0
  7525  003A56  5162               	movf	fputc@fp& (0+255),w,b
  7526  003A58  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  7527  003A5A  A4D8               	btfss	status,2,c
  7528  003A5C  D004               	goto	l5821
  7529  003A5E                     u6900:
  7530                           
  7531                           ; BSR set to: 0
  7532  003A5E  5160               	movf	fputc@c& (0+255),w,b
  7533  003A60  EC85  F022         	call	_putch
  7534  003A64  0012               	return	
  7535  003A66                     l5821:
  7536                           
  7537                           ; BSR set to: 0
  7538  003A66  EE20 F004          	lfsr	2,4
  7539  003A6A  5162               	movf	fputc@fp& (0+255),w,b
  7540  003A6C  26D9               	addwf	fsr2l,f,c
  7541  003A6E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7542  003A70  22DA               	addwfc	fsr2h,f,c
  7543  003A72  50DE               	movf	postinc2,w,c
  7544  003A74  10DE               	iorwf	postinc2,w,c
  7545  003A76  B4D8               	btfsc	status,2,c
  7546  003A78  D016               	goto	u6920
  7547                           
  7548                           ; BSR set to: 0
  7549  003A7A  EE20 F004          	lfsr	2,4
  7550  003A7E  5162               	movf	fputc@fp& (0+255),w,b
  7551  003A80  26D9               	addwf	fsr2l,f,c
  7552  003A82  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7553  003A84  22DA               	addwfc	fsr2h,f,c
  7554  003A86  EE10 F002          	lfsr	1,2
  7555  003A8A  5162               	movf	fputc@fp& (0+255),w,b
  7556  003A8C  26E1               	addwf	fsr1l,f,c
  7557  003A8E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7558  003A90  22E2               	addwfc	fsr1h,f,c
  7559  003A92  50DE               	movf	postinc2,w,c
  7560  003A94  5CE6               	subwf	postinc1,w,c
  7561  003A96  50E6               	movf	postinc1,w,c
  7562  003A98  0A80               	xorlw	128
  7563  003A9A  6F68               	movwf	(??_fputc+4)& (0+255),b
  7564  003A9C  50DE               	movf	postinc2,w,c
  7565  003A9E  0A80               	xorlw	128
  7566  003AA0  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  7567  003AA2  B0D8               	btfsc	status,0,c
  7568  003AA4  0012               	return	
  7569  003AA6                     u6920:
  7570                           
  7571                           ; BSR set to: 0
  7572  003AA6  EE20 F002          	lfsr	2,2
  7573  003AAA  5162               	movf	fputc@fp& (0+255),w,b
  7574  003AAC  26D9               	addwf	fsr2l,f,c
  7575  003AAE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7576  003AB0  22DA               	addwfc	fsr2h,f,c
  7577  003AB2  CFDE F064          	movff	postinc2,??_fputc
  7578  003AB6  CFDD F065          	movff	postdec2,??_fputc+1
  7579  003ABA  C062  FFD9         	movff	fputc@fp,fsr2l
  7580  003ABE  C063  FFDA         	movff	fputc@fp+1,fsr2h
  7581  003AC2  CFDE F066          	movff	postinc2,??_fputc+2
  7582  003AC6  CFDD F067          	movff	postdec2,??_fputc+3
  7583  003ACA  5164               	movf	??_fputc& (0+255),w,b
  7584  003ACC  2566               	addwf	(??_fputc+2)& (0+255),w,b
  7585  003ACE  6ED9               	movwf	fsr2l,c
  7586  003AD0  5165               	movf	(??_fputc+1)& (0+255),w,b
  7587  003AD2  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  7588  003AD4  6EDA               	movwf	fsr2h,c
  7589  003AD6  C060  FFDF         	movff	fputc@c,indf2
  7590  003ADA  EE20 F002          	lfsr	2,2
  7591  003ADE  5162               	movf	fputc@fp& (0+255),w,b
  7592  003AE0  26D9               	addwf	fsr2l,f,c
  7593  003AE2  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7594  003AE4  22DA               	addwfc	fsr2h,f,c
  7595  003AE6  2ADE               	incf	postinc2,f,c
  7596  003AE8  0E00               	movlw	0
  7597  003AEA  22DD               	addwfc	postdec2,f,c
  7598  003AEC  0012               	return		;funcret
  7599  003AEE                     __end_of_fputc:
  7600                           	opt callstack 0
  7601                           
  7602 ;; *************** function _putch *****************
  7603 ;; Defined at:
  7604 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;  c               1    wreg     unsigned char 
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  c               1    0[COMRAM] unsigned char 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		wreg
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7622 ;;Total ram usage:        0 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:    2
  7625 ;; This function calls:
  7626 ;;		Nothing
  7627 ;; This function is called by:
  7628 ;;		_fputc
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text27
  7633  00450A                     __ptext27:
  7634                           	opt callstack 0
  7635  00450A                     _putch:
  7636                           	opt callstack 20
  7637                           
  7638                           ;incstack = 0
  7639  00450A  0012               	return		;funcret
  7640  00450C                     __end_of_putch:
  7641                           	opt callstack 0
  7642                           
  7643 ;; *************** function _atoi *****************
  7644 ;; Defined at:
  7645 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  7648 ;;		 -> STR_5(28), STR_1(10), 
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;  n               2   20[BANK0 ] int 
  7651 ;;  neg             2   13[BANK0 ] int 
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  2    7[BANK0 ] int 
  7654 ;; Registers used:
  7655 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7661 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7662 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7663 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7664 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7665 ;;Total ram usage:       15 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    3
  7668 ;; This function calls:
  7669 ;;		___wmul
  7670 ;;		_isdigit
  7671 ;;		_isspace
  7672 ;; This function is called by:
  7673 ;;		_vfpfcnvrt
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           	psect	text28
  7678  003038                     __ptext28:
  7679                           	opt callstack 0
  7680  003038                     _atoi:
  7681                           	opt callstack 23
  7682                           
  7683                           ;incstack = 0
  7684  003038  0E00               	movlw	0
  7685  00303A  0100               	movlb	0	; () banked
  7686  00303C  6F75               	movwf	(atoi@n+1)& (0+255),b
  7687  00303E  0E00               	movlw	0
  7688  003040  6F74               	movwf	atoi@n& (0+255),b
  7689  003042  0E00               	movlw	0
  7690  003044  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  7691  003046  0E00               	movlw	0
  7692  003048  6F6D               	movwf	atoi@neg& (0+255),b
  7693  00304A  D002               	goto	l6995
  7694  00304C                     l6993:
  7695                           
  7696                           ; BSR set to: 0
  7697  00304C  4B67               	infsnz	atoi@s& (0+255),f,b
  7698  00304E  2B68               	incf	(atoi@s+1)& (0+255),f,b
  7699  003050                     l6995:
  7700                           
  7701                           ; BSR set to: 0
  7702  003050  0E01               	movlw	1
  7703  003052  6F73               	movwf	_atoi$1817& (0+255),b
  7704                           
  7705                           ; BSR set to: 0
  7706  003054  C067  FFF6         	movff	atoi@s,tblptrl
  7707  003058  C068  FFF7         	movff	atoi@s+1,tblptrh
  7708  00305C                     	if	0	;tblptru may be non-zero
  7709  00305C                     	endif
  7710  00305C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7711  00305C  0E00               	movlw	low (__mediumconst shr (0+16))
  7712  00305E  6EF8               	movwf	tblptru,c
  7713  003060                     	endif
  7714  003060  0008               	tblrd		*
  7715  003062  50F5               	movf	tablat,w,c
  7716  003064  0A20               	xorlw	32
  7717  003066  B4D8               	btfsc	status,2,c
  7718  003068  D01A               	goto	l7003
  7719                           
  7720                           ; BSR set to: 0
  7721  00306A  0EF7               	movlw	247
  7722  00306C  6F69               	movwf	??_atoi& (0+255),b
  7723  00306E  0EFF               	movlw	255
  7724  003070  6F6A               	movwf	(??_atoi+1)& (0+255),b
  7725  003072  C067  FFF6         	movff	atoi@s,tblptrl
  7726  003076  C068  FFF7         	movff	atoi@s+1,tblptrh
  7727  00307A                     	if	0	;tblptru may be non-zero
  7728  00307A                     	endif
  7729  00307A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7730  00307A  0E00               	movlw	low (__mediumconst shr (0+16))
  7731  00307C  6EF8               	movwf	tblptru,c
  7732  00307E                     	endif
  7733  00307E  0008               	tblrd		*
  7734  003080  50F5               	movf	tablat,w,c
  7735  003082  6F6B               	movwf	(??_atoi+2)& (0+255),b
  7736  003084  6B6C               	clrf	(??_atoi+3)& (0+255),b
  7737  003086  5169               	movf	??_atoi& (0+255),w,b
  7738  003088  276B               	addwf	(??_atoi+2)& (0+255),f,b
  7739  00308A  516A               	movf	(??_atoi+1)& (0+255),w,b
  7740  00308C  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  7741  00308E  516C               	movf	(??_atoi+3)& (0+255),w,b
  7742  003090  E104               	bnz	u9040
  7743  003092  0E05               	movlw	5
  7744  003094  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  7745  003096  A0D8               	btfss	status,0,c
  7746  003098  D002               	goto	l7003
  7747  00309A                     u9040:
  7748                           
  7749                           ; BSR set to: 0
  7750  00309A  0E00               	movlw	0
  7751  00309C  6F73               	movwf	_atoi$1817& (0+255),b
  7752  00309E                     l7003:
  7753                           
  7754                           ; BSR set to: 0
  7755  00309E  C073  F06F         	movff	_atoi$1817,_atoi$1816
  7756  0030A2  6B70               	clrf	(_atoi$1816+1)& (0+255),b
  7757                           
  7758                           ; BSR set to: 0
  7759  0030A4  516F               	movf	_atoi$1816& (0+255),w,b
  7760  0030A6  1170               	iorwf	(_atoi$1816+1)& (0+255),w,b
  7761  0030A8  B4D8               	btfsc	status,2,c
  7762  0030AA  D008               	goto	l7013
  7763  0030AC  D7CF               	goto	l6993
  7764  0030AE                     l7009:
  7765                           
  7766                           ; BSR set to: 0
  7767  0030AE  0E00               	movlw	0
  7768  0030B0  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  7769  0030B2  0E01               	movlw	1
  7770  0030B4  6F6D               	movwf	atoi@neg& (0+255),b
  7771  0030B6                     l7011:
  7772                           
  7773                           ; BSR set to: 0
  7774  0030B6  4B67               	infsnz	atoi@s& (0+255),f,b
  7775  0030B8  2B68               	incf	(atoi@s+1)& (0+255),f,b
  7776  0030BA  D033               	goto	l7019
  7777  0030BC                     l7013:
  7778                           
  7779                           ; BSR set to: 0
  7780  0030BC  C067  FFF6         	movff	atoi@s,tblptrl
  7781  0030C0  C068  FFF7         	movff	atoi@s+1,tblptrh
  7782  0030C4                     	if	0	;tblptru may be non-zero
  7783  0030C4                     	endif
  7784  0030C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7785  0030C4  0E00               	movlw	low (__mediumconst shr (0+16))
  7786  0030C6  6EF8               	movwf	tblptru,c
  7787  0030C8                     	endif
  7788  0030C8  0008               	tblrd		*
  7789  0030CA  50F5               	movf	tablat,w,c
  7790  0030CC  6F69               	movwf	??_atoi& (0+255),b
  7791  0030CE  6B6A               	clrf	(??_atoi+1)& (0+255),b
  7792                           
  7793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7794                           ; Switch size 1, requested type "simple"
  7795                           ; Number of cases is 1, Range of values is 0 to 0
  7796                           ; switch strategies available:
  7797                           ; Name         Instructions Cycles
  7798                           ; simple_byte            4     3 (average)
  7799                           ;	Chosen strategy is simple_byte
  7800  0030D0  516A               	movf	(??_atoi+1)& (0+255),w,b
  7801  0030D2  0A00               	xorlw	0	; case 0
  7802  0030D4  A4D8               	btfss	status,2,c
  7803  0030D6  D025               	goto	l7019
  7804                           
  7805                           ; BSR set to: 0
  7806                           ; Switch size 1, requested type "simple"
  7807                           ; Number of cases is 2, Range of values is 43 to 45
  7808                           ; switch strategies available:
  7809                           ; Name         Instructions Cycles
  7810                           ; simple_byte            7     4 (average)
  7811                           ;	Chosen strategy is simple_byte
  7812  0030D8  5169               	movf	??_atoi& (0+255),w,b
  7813  0030DA  0A2B               	xorlw	43	; case 43
  7814  0030DC  B4D8               	btfsc	status,2,c
  7815  0030DE  D7EB               	goto	l7011
  7816  0030E0  0A06               	xorlw	6	; case 45
  7817  0030E2  B4D8               	btfsc	status,2,c
  7818  0030E4  D7E4               	goto	l7009
  7819  0030E6  D01D               	goto	l7019
  7820  0030E8                     l7015:
  7821                           
  7822                           ; BSR set to: 0
  7823  0030E8  C074  F060         	movff	atoi@n,___wmul@multiplier
  7824  0030EC  C075  F061         	movff	atoi@n+1,___wmul@multiplier+1
  7825  0030F0  0E00               	movlw	0
  7826  0030F2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7827  0030F4  0E0A               	movlw	10
  7828  0030F6  6F62               	movwf	___wmul@multiplicand& (0+255),b
  7829  0030F8  ECEE  F021         	call	___wmul	;wreg free
  7830  0030FC  C067  FFF6         	movff	atoi@s,tblptrl
  7831  003100  C068  FFF7         	movff	atoi@s+1,tblptrh
  7832  003104                     	if	0	;tblptru may be non-zero
  7833  003104                     	endif
  7834  003104                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7835  003104  0E00               	movlw	low (__mediumconst shr (0+16))
  7836  003106  6EF8               	movwf	tblptru,c
  7837  003108                     	endif
  7838  003108  0008               	tblrd		*
  7839  00310A  50F5               	movf	tablat,w,c
  7840  00310C  0100               	movlb	0	; () banked
  7841  00310E  5F60               	subwf	?___wmul& (0+255),f,b
  7842  003110  0E00               	movlw	0
  7843  003112  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
  7844  003114  0E30               	movlw	48
  7845  003116  2560               	addwf	?___wmul& (0+255),w,b
  7846  003118  6F74               	movwf	atoi@n& (0+255),b
  7847  00311A  0E00               	movlw	0
  7848  00311C  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  7849  00311E  6F75               	movwf	(atoi@n+1)& (0+255),b
  7850  003120  D7CA               	goto	l7011
  7851  003122                     l7019:
  7852                           
  7853                           ; BSR set to: 0
  7854  003122  0ED0               	movlw	208
  7855  003124  6F69               	movwf	??_atoi& (0+255),b
  7856  003126  0EFF               	movlw	255
  7857  003128  6F6A               	movwf	(??_atoi+1)& (0+255),b
  7858  00312A  C067  FFF6         	movff	atoi@s,tblptrl
  7859  00312E  C068  FFF7         	movff	atoi@s+1,tblptrh
  7860  003132                     	if	0	;tblptru may be non-zero
  7861  003132                     	endif
  7862  003132                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7863  003132  0E00               	movlw	low (__mediumconst shr (0+16))
  7864  003134  6EF8               	movwf	tblptru,c
  7865  003136                     	endif
  7866  003136  0008               	tblrd		*
  7867  003138  50F5               	movf	tablat,w,c
  7868  00313A  6F6B               	movwf	(??_atoi+2)& (0+255),b
  7869  00313C  6B6C               	clrf	(??_atoi+3)& (0+255),b
  7870  00313E  5169               	movf	??_atoi& (0+255),w,b
  7871  003140  276B               	addwf	(??_atoi+2)& (0+255),f,b
  7872  003142  516A               	movf	(??_atoi+1)& (0+255),w,b
  7873  003144  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  7874  003146  516C               	movf	(??_atoi+3)& (0+255),w,b
  7875  003148  E106               	bnz	u9060
  7876  00314A  0E0A               	movlw	10
  7877  00314C  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  7878  00314E  B0D8               	btfsc	status,0,c
  7879  003150  D002               	goto	u9060
  7880  003152  0E01               	movlw	1
  7881  003154  D001               	goto	u9070
  7882  003156                     u9060:
  7883  003156  0E00               	movlw	0
  7884  003158                     u9070:
  7885  003158  6F71               	movwf	_atoi$1818& (0+255),b
  7886  00315A  6B72               	clrf	(_atoi$1818+1)& (0+255),b
  7887                           
  7888                           ; BSR set to: 0
  7889  00315C  5171               	movf	_atoi$1818& (0+255),w,b
  7890  00315E  1172               	iorwf	(_atoi$1818+1)& (0+255),w,b
  7891  003160  A4D8               	btfss	status,2,c
  7892  003162  D7C2               	goto	l7015
  7893                           
  7894                           ; BSR set to: 0
  7895  003164  516D               	movf	atoi@neg& (0+255),w,b
  7896  003166  116E               	iorwf	(atoi@neg+1)& (0+255),w,b
  7897  003168  A4D8               	btfss	status,2,c
  7898  00316A  D00D               	goto	l1221
  7899                           
  7900                           ; BSR set to: 0
  7901  00316C  C074  F069         	movff	atoi@n,??_atoi
  7902  003170  C075  F06A         	movff	atoi@n+1,??_atoi+1
  7903  003174  1F69               	comf	??_atoi& (0+255),f,b
  7904  003176  1F6A               	comf	(??_atoi+1)& (0+255),f,b
  7905  003178  4B69               	infsnz	??_atoi& (0+255),f,b
  7906  00317A  2B6A               	incf	(??_atoi+1)& (0+255),f,b
  7907  00317C  C069  F067         	movff	??_atoi,?_atoi
  7908  003180  C06A  F068         	movff	??_atoi+1,?_atoi+1
  7909  003184  0012               	return	
  7910  003186                     l1221:
  7911                           
  7912                           ; BSR set to: 0
  7913  003186  C074  F067         	movff	atoi@n,?_atoi
  7914  00318A  C075  F068         	movff	atoi@n+1,?_atoi+1
  7915                           
  7916                           ; BSR set to: 0
  7917  00318E  0012               	return		;funcret
  7918  003190                     __end_of_atoi:
  7919                           	opt callstack 0
  7920                           
  7921 ;; *************** function _isspace *****************
  7922 ;; Defined at:
  7923 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  c               2    0[BANK0 ] int 
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;		None
  7928 ;; Return value:  Size  Location     Type
  7929 ;;                  2    0[BANK0 ] int 
  7930 ;; Registers used:
  7931 ;;		wreg, status,2, status,0
  7932 ;; Tracked objects:
  7933 ;;		On entry : 0/0
  7934 ;;		On exit  : 0/0
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7937 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7938 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7939 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7940 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7941 ;;Total ram usage:        7 bytes
  7942 ;; Hardware stack levels used:    1
  7943 ;; Hardware stack levels required when called:    2
  7944 ;; This function calls:
  7945 ;;		Nothing
  7946 ;; This function is called by:
  7947 ;;		_atoi
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951                           	psect	text29
  7952  004238                     __ptext29:
  7953                           	opt callstack 0
  7954  004238                     _isspace:
  7955                           	opt callstack 23
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;incstack = 0
  7959  004238  0E01               	movlw	1
  7960  00423A  0100               	movlb	0	; () banked
  7961  00423C  6F66               	movwf	_isspace$1847& (0+255),b
  7962                           
  7963                           ; BSR set to: 0
  7964  00423E  0E20               	movlw	32
  7965  004240  1960               	xorwf	isspace@c& (0+255),w,b
  7966  004242  1161               	iorwf	(isspace@c+1)& (0+255),w,b
  7967  004244  B4D8               	btfsc	status,2,c
  7968  004246  D014               	goto	l6639
  7969                           
  7970                           ; BSR set to: 0
  7971  004248  0EF7               	movlw	247
  7972  00424A  6F62               	movwf	??_isspace& (0+255),b
  7973  00424C  0EFF               	movlw	255
  7974  00424E  6F63               	movwf	(??_isspace+1)& (0+255),b
  7975  004250  C060  F064         	movff	isspace@c,??_isspace+2
  7976  004254  C061  F065         	movff	isspace@c+1,??_isspace+3
  7977  004258  5162               	movf	??_isspace& (0+255),w,b
  7978  00425A  2764               	addwf	(??_isspace+2)& (0+255),f,b
  7979  00425C  5163               	movf	(??_isspace+1)& (0+255),w,b
  7980  00425E  2365               	addwfc	(??_isspace+3)& (0+255),f,b
  7981  004260  5165               	movf	(??_isspace+3)& (0+255),w,b
  7982  004262  E104               	bnz	u8420
  7983  004264  0E05               	movlw	5
  7984  004266  5D64               	subwf	(??_isspace+2)& (0+255),w,b
  7985  004268  A0D8               	btfss	status,0,c
  7986  00426A  D002               	goto	l6639
  7987  00426C                     u8420:
  7988                           
  7989                           ; BSR set to: 0
  7990  00426C  0E00               	movlw	0
  7991  00426E  6F66               	movwf	_isspace$1847& (0+255),b
  7992  004270                     l6639:
  7993                           
  7994                           ; BSR set to: 0
  7995  004270  C066  F060         	movff	_isspace$1847,?_isspace
  7996  004274  6B61               	clrf	(?_isspace+1)& (0+255),b
  7997                           
  7998                           ; BSR set to: 0
  7999  004276  0012               	return		;funcret
  8000  004278                     __end_of_isspace:
  8001                           	opt callstack 0
  8002                           
  8003 ;; *************** function _isdigit *****************
  8004 ;; Defined at:
  8005 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;  c               2    0[BANK0 ] int 
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;		None
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  2    0[BANK0 ] int 
  8012 ;; Registers used:
  8013 ;;		wreg, status,2, status,0
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8019 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8021 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8022 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8023 ;;Total ram usage:        6 bytes
  8024 ;; Hardware stack levels used:    1
  8025 ;; Hardware stack levels required when called:    2
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_vfpfcnvrt
  8030 ;;		_atoi
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034                           	psect	text30
  8035  004320                     __ptext30:
  8036                           	opt callstack 0
  8037  004320                     _isdigit:
  8038                           	opt callstack 24
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;incstack = 0
  8042  004320  0ED0               	movlw	208
  8043  004322  0100               	movlb	0	; () banked
  8044  004324  6F62               	movwf	??_isdigit& (0+255),b
  8045  004326  0EFF               	movlw	255
  8046  004328  6F63               	movwf	(??_isdigit+1)& (0+255),b
  8047  00432A  C060  F064         	movff	isdigit@c,??_isdigit+2
  8048  00432E  C061  F065         	movff	isdigit@c+1,??_isdigit+3
  8049  004332  5162               	movf	??_isdigit& (0+255),w,b
  8050  004334  2764               	addwf	(??_isdigit+2)& (0+255),f,b
  8051  004336  5163               	movf	(??_isdigit+1)& (0+255),w,b
  8052  004338  2365               	addwfc	(??_isdigit+3)& (0+255),f,b
  8053  00433A  5165               	movf	(??_isdigit+3)& (0+255),w,b
  8054  00433C  E106               	bnz	u7620
  8055  00433E  0E0A               	movlw	10
  8056  004340  5D64               	subwf	(??_isdigit+2)& (0+255),w,b
  8057  004342  B0D8               	btfsc	status,0,c
  8058  004344  D002               	goto	u7620
  8059  004346  0E01               	movlw	1
  8060  004348  D001               	goto	u7630
  8061  00434A                     u7620:
  8062  00434A  0E00               	movlw	0
  8063  00434C                     u7630:
  8064  00434C  6F60               	movwf	?_isdigit& (0+255),b
  8065  00434E  6B61               	clrf	(?_isdigit+1)& (0+255),b
  8066                           
  8067                           ; BSR set to: 0
  8068  004350  0012               	return		;funcret
  8069  004352                     __end_of_isdigit:
  8070                           	opt callstack 0
  8071                           
  8072 ;; *************** function ___wmul *****************
  8073 ;; Defined at:
  8074 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8077 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;  product         2    4[BANK0 ] unsigned int 
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  2    0[BANK0 ] unsigned int 
  8082 ;; Registers used:
  8083 ;;		wreg, status,2, status,0, prodl, prodh
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8089 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8090 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8092 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8093 ;;Total ram usage:        6 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; Hardware stack levels required when called:    2
  8096 ;; This function calls:
  8097 ;;		Nothing
  8098 ;; This function is called by:
  8099 ;;		_atoi
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text31
  8104  0043DC                     __ptext31:
  8105                           	opt callstack 0
  8106  0043DC                     ___wmul:
  8107                           	opt callstack 23
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;incstack = 0
  8111  0043DC  0100               	movlb	0	; () banked
  8112  0043DE  5160               	movf	___wmul@multiplier& (0+255),w,b
  8113  0043E0  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8114  0043E2  CFF3 F064          	movff	prodl,___wmul@product
  8115  0043E6  CFF4 F065          	movff	prodh,___wmul@product+1
  8116  0043EA  5160               	movf	___wmul@multiplier& (0+255),w,b
  8117  0043EC  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8118  0043EE  50F3               	movf	prodl,w,c
  8119  0043F0  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8120  0043F2  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8121  0043F4  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8122  0043F6  50F3               	movf	prodl,w,c
  8123  0043F8  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8124                           
  8125                           ; BSR set to: 0
  8126  0043FA  C064  F060         	movff	___wmul@product,?___wmul
  8127  0043FE  C065  F061         	movff	___wmul@product+1,?___wmul+1
  8128                           
  8129                           ; BSR set to: 0
  8130  004402  0012               	return		;funcret
  8131  004404                     __end_of___wmul:
  8132                           	opt callstack 0
  8133                           
  8134 ;; *************** function _frenarMotor *****************
  8135 ;; Defined at:
  8136 ;;		line 46 in file "./../LIBRERIAS/funciones_auto.h"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;		None
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;		None
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  1    wreg      void 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8154 ;;Total ram usage:        0 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:    2
  8157 ;; This function calls:
  8158 ;;		Nothing
  8159 ;; This function is called by:
  8160 ;;		_main
  8161 ;;		_terminal
  8162 ;;		_rutinaEscape
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text32
  8167  0044AE                     __ptext32:
  8168                           	opt callstack 0
  8169  0044AE                     _frenarMotor:
  8170                           	opt callstack 27
  8171                           
  8172                           ;./../LIBRERIAS/funciones_auto.h: 47:     CCP7CONbits.DC7B = 0b00;
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;incstack = 0
  8176  0044AE  0ECF               	movlw	-49
  8177  0044B0  010F               	movlb	15	; () banked
  8178  0044B2  1709               	andwf	9,f,b	;volatile
  8179                           
  8180                           ;./../LIBRERIAS/funciones_auto.h: 48:     CCPR7L = 0x00;
  8181  0044B4  0E00               	movlw	0
  8182  0044B6  6F0A               	movwf	10,b	;volatile
  8183                           
  8184                           ;./../LIBRERIAS/funciones_auto.h: 49:     motor = 0;
  8185  0044B8  0E00               	movlw	0
  8186  0044BA  6E44               	movwf	_motor,c
  8187                           
  8188                           ; BSR set to: 15
  8189  0044BC  0012               	return		;funcret
  8190  0044BE                     __end_of_frenarMotor:
  8191                           	opt callstack 0
  8192                           
  8193 ;; *************** function _fijarVelocidad *****************
  8194 ;; Defined at:
  8195 ;;		line 30 in file "./../LIBRERIAS/funciones_auto.h"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;  speed           1    wreg     unsigned char 
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;  speed           1   63[BANK0 ] unsigned char 
  8200 ;;  DC              4   55[BANK0 ] float 
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  1    wreg      void 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8211 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8213 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8214 ;;Total ram usage:        9 bytes
  8215 ;; Hardware stack levels used:    1
  8216 ;; Hardware stack levels required when called:    3
  8217 ;; This function calls:
  8218 ;;		___fladd
  8219 ;;		___flmul
  8220 ;;		___fltol
  8221 ;;		___xxtofl
  8222 ;; This function is called by:
  8223 ;;		_terminal
  8224 ;;		_rutinaEscape
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           	psect	text33
  8229  003414                     __ptext33:
  8230                           	opt callstack 0
  8231  003414                     _fijarVelocidad:
  8232                           	opt callstack 26
  8233                           
  8234                           ; BSR set to: 15
  8235                           ;incstack = 0
  8236                           ;fijarVelocidad@speed stored from wreg
  8237  003414  0100               	movlb	0	; () banked
  8238  003416  6F9F               	movwf	fijarVelocidad@speed& (0+255),b
  8239                           
  8240                           ;./../LIBRERIAS/funciones_auto.h: 31:     float DC = 0.006 * speed + 0.5;
  8241  003418  0EA6               	movlw	166
  8242  00341A  0100               	movlb	0	; () banked
  8243  00341C  6F72               	movwf	___flmul@a& (0+255),b
  8244  00341E  0E9B               	movlw	155
  8245  003420  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8246  003422  0EC4               	movlw	196
  8247  003424  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8248  003426  0E3B               	movlw	59
  8249  003428  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8250  00342A  519F               	movf	fijarVelocidad@speed& (0+255),w,b
  8251  00342C  6F60               	movwf	___xxtofl@val& (0+255),b
  8252  00342E  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  8253  003430  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  8254  003432  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  8255  003434  0E01               	movlw	1
  8256  003436  ECC8  F018         	call	___xxtofl
  8257  00343A  C060  F06E         	movff	?___xxtofl,___flmul@b
  8258  00343E  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  8259  003442  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  8260  003446  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  8261  00344A  ECBA  F00F         	call	___flmul	;wreg free
  8262  00344E  C06E  F087         	movff	?___flmul,___fladd@b
  8263  003452  C06F  F088         	movff	?___flmul+1,___fladd@b+1
  8264  003456  C070  F089         	movff	?___flmul+2,___fladd@b+2
  8265  00345A  C071  F08A         	movff	?___flmul+3,___fladd@b+3
  8266  00345E  0E00               	movlw	0
  8267  003460  0100               	movlb	0	; () banked
  8268  003462  6F8B               	movwf	___fladd@a& (0+255),b
  8269  003464  0E00               	movlw	0
  8270  003466  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  8271  003468  0E00               	movlw	0
  8272  00346A  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  8273  00346C  0E3F               	movlw	63
  8274  00346E  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  8275  003470  EC64  F011         	call	___fladd	;wreg free
  8276  003474  C087  F097         	movff	?___fladd,fijarVelocidad@DC
  8277  003478  C088  F098         	movff	?___fladd+1,fijarVelocidad@DC+1
  8278  00347C  C089  F099         	movff	?___fladd+2,fijarVelocidad@DC+2
  8279  003480  C08A  F09A         	movff	?___fladd+3,fijarVelocidad@DC+3
  8280                           
  8281                           ;./../LIBRERIAS/funciones_auto.h: 32:     velocidad = 4 * DC * 125;
  8282  003484  0E00               	movlw	0
  8283  003486  0100               	movlb	0	; () banked
  8284  003488  6F72               	movwf	___flmul@a& (0+255),b
  8285  00348A  0E00               	movlw	0
  8286  00348C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8287  00348E  0E80               	movlw	128
  8288  003490  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8289  003492  0E40               	movlw	64
  8290  003494  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8291  003496  C097  F06E         	movff	fijarVelocidad@DC,___flmul@b
  8292  00349A  C098  F06F         	movff	fijarVelocidad@DC+1,___flmul@b+1
  8293  00349E  C099  F070         	movff	fijarVelocidad@DC+2,___flmul@b+2
  8294  0034A2  C09A  F071         	movff	fijarVelocidad@DC+3,___flmul@b+3
  8295  0034A6  ECBA  F00F         	call	___flmul	;wreg free
  8296  0034AA  C06E  F09B         	movff	?___flmul,_fijarVelocidad$2157
  8297  0034AE  C06F  F09C         	movff	?___flmul+1,_fijarVelocidad$2157+1
  8298  0034B2  C070  F09D         	movff	?___flmul+2,_fijarVelocidad$2157+2
  8299  0034B6  C071  F09E         	movff	?___flmul+3,_fijarVelocidad$2157+3
  8300                           
  8301                           ;./../LIBRERIAS/funciones_auto.h: 32:     velocidad = 4 * DC * 125;
  8302  0034BA  0E00               	movlw	0
  8303  0034BC  0100               	movlb	0	; () banked
  8304  0034BE  6F72               	movwf	___flmul@a& (0+255),b
  8305  0034C0  0E00               	movlw	0
  8306  0034C2  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8307  0034C4  0EFA               	movlw	250
  8308  0034C6  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8309  0034C8  0E42               	movlw	66
  8310  0034CA  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8311  0034CC  C09B  F06E         	movff	_fijarVelocidad$2157,___flmul@b
  8312  0034D0  C09C  F06F         	movff	_fijarVelocidad$2157+1,___flmul@b+1
  8313  0034D4  C09D  F070         	movff	_fijarVelocidad$2157+2,___flmul@b+2
  8314  0034D8  C09E  F071         	movff	_fijarVelocidad$2157+3,___flmul@b+3
  8315  0034DC  ECBA  F00F         	call	___flmul	;wreg free
  8316  0034E0  C06E  F087         	movff	?___flmul,___fltol@f1
  8317  0034E4  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  8318  0034E8  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  8319  0034EC  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  8320  0034F0  EC18  F01C         	call	___fltol	;wreg free
  8321  0034F4  C087  F049         	movff	?___fltol,_velocidad
  8322  0034F8  C088  F04A         	movff	?___fltol+1,_velocidad+1
  8323  0034FC  0012               	return		;funcret
  8324  0034FE                     __end_of_fijarVelocidad:
  8325                           	opt callstack 0
  8326                           
  8327 ;; *************** function ___xxtofl *****************
  8328 ;; Defined at:
  8329 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;  sign            1    wreg     unsigned char 
  8332 ;;  val             4    0[BANK0 ] long 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;  sign            1    8[BANK0 ] unsigned char 
  8335 ;;  arg             4   10[BANK0 ] unsigned long 
  8336 ;;  exp             1    9[BANK0 ] unsigned char 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  4    0[BANK0 ] unsigned char 
  8339 ;; Registers used:
  8340 ;;		wreg, status,2, status,0
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8346 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8347 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8348 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8349 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8350 ;;Total ram usage:       14 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:    2
  8353 ;; This function calls:
  8354 ;;		Nothing
  8355 ;; This function is called by:
  8356 ;;		_fijarVelocidad
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           	psect	text34
  8361  003190                     __ptext34:
  8362                           	opt callstack 0
  8363  003190                     ___xxtofl:
  8364                           	opt callstack 26
  8365                           
  8366                           ;incstack = 0
  8367                           ;___xxtofl@sign stored from wreg
  8368  003190  0100               	movlb	0	; () banked
  8369  003192  6F68               	movwf	___xxtofl@sign& (0+255),b
  8370  003194  0100               	movlb	0	; () banked
  8371  003196  5168               	movf	___xxtofl@sign& (0+255),w,b
  8372  003198  A4D8               	btfss	status,2,c
  8373                           
  8374                           ; BSR set to: 0
  8375  00319A  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8376  00319C  D01A               	goto	l1166
  8377                           
  8378                           ; BSR set to: 0
  8379  00319E  C060  F064         	movff	___xxtofl@val,??___xxtofl
  8380  0031A2  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  8381  0031A6  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  8382  0031AA  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  8383  0031AE  1F64               	comf	??___xxtofl& (0+255),f,b
  8384  0031B0  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  8385  0031B2  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  8386  0031B4  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  8387  0031B6  2B64               	incf	??___xxtofl& (0+255),f,b
  8388  0031B8  0E00               	movlw	0
  8389  0031BA  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  8390  0031BC  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  8391  0031BE  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  8392  0031C0  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  8393  0031C4  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  8394  0031C8  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  8395  0031CC  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  8396  0031D0  D008               	goto	l7253
  8397  0031D2                     l1166:
  8398                           
  8399                           ; BSR set to: 0
  8400  0031D2  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  8401  0031D6  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8402  0031DA  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8403  0031DE  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8404  0031E2                     l7253:
  8405                           
  8406                           ; BSR set to: 0
  8407  0031E2  5160               	movf	___xxtofl@val& (0+255),w,b
  8408  0031E4  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  8409  0031E6  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  8410  0031E8  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  8411  0031EA  A4D8               	btfss	status,2,c
  8412  0031EC  D009               	goto	l7259
  8413                           
  8414                           ; BSR set to: 0
  8415  0031EE  0E00               	movlw	0
  8416  0031F0  6F60               	movwf	?___xxtofl& (0+255),b
  8417  0031F2  0E00               	movlw	0
  8418  0031F4  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  8419  0031F6  0E00               	movlw	0
  8420  0031F8  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  8421  0031FA  0E00               	movlw	0
  8422  0031FC  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  8423  0031FE  0012               	return	
  8424  003200                     l7259:
  8425                           
  8426                           ; BSR set to: 0
  8427  003200  0E96               	movlw	150
  8428  003202  6F69               	movwf	___xxtofl@exp& (0+255),b
  8429  003204  D006               	goto	l7263
  8430  003206                     l7261:
  8431                           
  8432                           ; BSR set to: 0
  8433  003206  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8434  003208  90D8               	bcf	status,0,c
  8435  00320A  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8436  00320C  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8437  00320E  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8438  003210  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  8439  003212                     l7263:
  8440                           
  8441                           ; BSR set to: 0
  8442  003212  0E00               	movlw	0
  8443  003214  156A               	andwf	___xxtofl@arg& (0+255),w,b
  8444  003216  6F64               	movwf	??___xxtofl& (0+255),b
  8445  003218  0E00               	movlw	0
  8446  00321A  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8447  00321C  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  8448  00321E  0E00               	movlw	0
  8449  003220  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8450  003222  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  8451  003224  0EFE               	movlw	254
  8452  003226  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8453  003228  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  8454  00322A  5164               	movf	??___xxtofl& (0+255),w,b
  8455  00322C  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8456  00322E  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8457  003230  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8458  003232  B4D8               	btfsc	status,2,c
  8459  003234  D00D               	goto	l1173
  8460  003236  D7E7               	goto	l7261
  8461  003238                     l7265:
  8462                           
  8463                           ; BSR set to: 0
  8464  003238  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8465                           
  8466                           ; BSR set to: 0
  8467  00323A  0E01               	movlw	1
  8468  00323C  276A               	addwf	___xxtofl@arg& (0+255),f,b
  8469  00323E  0E00               	movlw	0
  8470  003240  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8471  003242  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8472  003244  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8473                           
  8474                           ; BSR set to: 0
  8475  003246  90D8               	bcf	status,0,c
  8476  003248  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8477  00324A  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8478  00324C  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8479  00324E  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  8480  003250                     l1173:
  8481                           
  8482                           ; BSR set to: 0
  8483  003250  0E00               	movlw	0
  8484  003252  156A               	andwf	___xxtofl@arg& (0+255),w,b
  8485  003254  6F64               	movwf	??___xxtofl& (0+255),b
  8486  003256  0E00               	movlw	0
  8487  003258  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8488  00325A  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  8489  00325C  0E00               	movlw	0
  8490  00325E  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8491  003260  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  8492  003262  0EFF               	movlw	255
  8493  003264  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8494  003266  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  8495  003268  5164               	movf	??___xxtofl& (0+255),w,b
  8496  00326A  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8497  00326C  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8498  00326E  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8499  003270  B4D8               	btfsc	status,2,c
  8500  003272  D007               	goto	l7273
  8501  003274  D7E1               	goto	l7265
  8502  003276                     l7271:
  8503                           
  8504                           ; BSR set to: 0
  8505  003276  0769               	decf	___xxtofl@exp& (0+255),f,b
  8506  003278  90D8               	bcf	status,0,c
  8507  00327A  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  8508  00327C  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8509  00327E  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8510  003280  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8511  003282                     l7273:
  8512                           
  8513                           ; BSR set to: 0
  8514  003282  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8515  003284  D003               	goto	u9480
  8516                           
  8517                           ; BSR set to: 0
  8518  003286  0E02               	movlw	2
  8519  003288  6169               	cpfslt	___xxtofl@exp& (0+255),b
  8520  00328A  D7F5               	goto	l7271
  8521  00328C                     u9480:
  8522                           
  8523                           ; BSR set to: 0
  8524  00328C  A169               	btfss	___xxtofl@exp& (0+255),0,b
  8525                           
  8526                           ; BSR set to: 0
  8527  00328E  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  8528                           
  8529                           ; BSR set to: 0
  8530  003290  90D8               	bcf	status,0,c
  8531  003292  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  8532                           
  8533                           ; BSR set to: 0
  8534  003294  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  8535  003298  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  8536  00329A  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  8537  00329C  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  8538  00329E  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  8539  0032A2  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  8540  0032A4  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  8541  0032A6  6B64               	clrf	??___xxtofl& (0+255),b
  8542  0032A8  5164               	movf	??___xxtofl& (0+255),w,b
  8543  0032AA  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  8544  0032AC  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  8545  0032AE  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8546  0032B0  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  8547  0032B2  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8548  0032B4  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  8549  0032B6  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8550                           
  8551                           ; BSR set to: 0
  8552  0032B8  5168               	movf	___xxtofl@sign& (0+255),w,b
  8553  0032BA  A4D8               	btfss	status,2,c
  8554                           
  8555                           ; BSR set to: 0
  8556  0032BC  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8557  0032BE  D001               	goto	l7289
  8558                           
  8559                           ; BSR set to: 0
  8560  0032C0  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8561  0032C2                     l7289:
  8562                           
  8563                           ; BSR set to: 0
  8564  0032C2  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  8565  0032C6  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  8566  0032CA  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  8567  0032CE  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  8568                           
  8569                           ; BSR set to: 0
  8570  0032D2  0012               	return		;funcret
  8571  0032D4                     __end_of___xxtofl:
  8572                           	opt callstack 0
  8573                           
  8574 ;; *************** function ___fltol *****************
  8575 ;; Defined at:
  8576 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  f1              4   39[BANK0 ] unsigned char 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;  exp1            1   48[BANK0 ] unsigned char 
  8581 ;;  sign1           1   47[BANK0 ] unsigned char 
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  4   39[BANK0 ] long 
  8584 ;; Registers used:
  8585 ;;		wreg, status,2, status,0
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8591 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8592 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8593 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8594 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8595 ;;Total ram usage:       10 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; Hardware stack levels required when called:    2
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_fijarVelocidad
  8602 ;;		_efgtoa
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           	psect	text35
  8607  003830                     __ptext35:
  8608                           	opt callstack 0
  8609  003830                     ___fltol:
  8610                           	opt callstack 23
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;incstack = 0
  8614  003830  0100               	movlb	0	; () banked
  8615  003832  3589               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8616  003834  358A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8617  003836  6F90               	movwf	___fltol@exp1& (0+255),b
  8618  003838  5190               	movf	___fltol@exp1& (0+255),w,b
  8619  00383A  A4D8               	btfss	status,2,c
  8620  00383C  D009               	goto	l6555
  8621  00383E                     u8270:
  8622                           
  8623                           ; BSR set to: 0
  8624  00383E  0E00               	movlw	0
  8625  003840  6F87               	movwf	?___fltol& (0+255),b
  8626  003842  0E00               	movlw	0
  8627  003844  6F88               	movwf	(?___fltol+1)& (0+255),b
  8628  003846  0E00               	movlw	0
  8629  003848  6F89               	movwf	(?___fltol+2)& (0+255),b
  8630  00384A  0E00               	movlw	0
  8631  00384C  6F8A               	movwf	(?___fltol+3)& (0+255),b
  8632  00384E  0012               	return	
  8633  003850                     l6555:
  8634                           
  8635                           ; BSR set to: 0
  8636  003850  C087  F08B         	movff	___fltol@f1,??___fltol
  8637  003854  C088  F08C         	movff	___fltol@f1+1,??___fltol+1
  8638  003858  C089  F08D         	movff	___fltol@f1+2,??___fltol+2
  8639  00385C  C08A  F08E         	movff	___fltol@f1+3,??___fltol+3
  8640  003860  0E20               	movlw	32
  8641  003862  D005               	goto	u8280
  8642  003864                     u8285:
  8643  003864  90D8               	bcf	status,0,c
  8644  003866  338E               	rrcf	(??___fltol+3)& (0+255),f,b
  8645  003868  338D               	rrcf	(??___fltol+2)& (0+255),f,b
  8646  00386A  338C               	rrcf	(??___fltol+1)& (0+255),f,b
  8647  00386C  338B               	rrcf	??___fltol& (0+255),f,b
  8648  00386E                     u8280:
  8649  00386E  2EE8               	decfsz	wreg,f,c
  8650  003870  D7F9               	goto	u8285
  8651  003872  518B               	movf	??___fltol& (0+255),w,b
  8652  003874  6F8F               	movwf	___fltol@sign1& (0+255),b
  8653                           
  8654                           ; BSR set to: 0
  8655  003876  8F89               	bsf	(___fltol@f1+2)& (0+255),7,b
  8656                           
  8657                           ; BSR set to: 0
  8658  003878  0EFF               	movlw	255
  8659  00387A  1787               	andwf	___fltol@f1& (0+255),f,b
  8660  00387C  0EFF               	movlw	255
  8661  00387E  1788               	andwf	(___fltol@f1+1)& (0+255),f,b
  8662  003880  0EFF               	movlw	255
  8663  003882  1789               	andwf	(___fltol@f1+2)& (0+255),f,b
  8664  003884  0E00               	movlw	0
  8665  003886  178A               	andwf	(___fltol@f1+3)& (0+255),f,b
  8666                           
  8667                           ; BSR set to: 0
  8668  003888  0E96               	movlw	150
  8669  00388A  5F90               	subwf	___fltol@exp1& (0+255),f,b
  8670                           
  8671                           ; BSR set to: 0
  8672  00388C  AF90               	btfss	___fltol@exp1& (0+255),7,b
  8673  00388E  D00D               	goto	l6575
  8674                           
  8675                           ; BSR set to: 0
  8676  003890  5190               	movf	___fltol@exp1& (0+255),w,b
  8677  003892  0A80               	xorlw	128
  8678  003894  0F97               	addlw	151
  8679  003896  A0D8               	btfss	status,0,c
  8680  003898  D7D2               	goto	u8270
  8681  00389A                     l6571:
  8682                           
  8683                           ; BSR set to: 0
  8684  00389A  90D8               	bcf	status,0,c
  8685  00389C  338A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8686  00389E  3389               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8687  0038A0  3388               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8688  0038A2  3387               	rrcf	___fltol@f1& (0+255),f,b
  8689                           
  8690                           ; BSR set to: 0
  8691  0038A4  3F90               	incfsz	___fltol@exp1& (0+255),f,b
  8692  0038A6  D7F9               	goto	l6571
  8693  0038A8  D00D               	goto	u8320
  8694  0038AA                     l6575:
  8695                           
  8696                           ; BSR set to: 0
  8697  0038AA  0E1F               	movlw	31
  8698  0038AC  6590               	cpfsgt	___fltol@exp1& (0+255),b
  8699  0038AE  D007               	goto	l6583
  8700  0038B0  D7C6               	goto	u8270
  8701  0038B2                     l6581:
  8702                           
  8703                           ; BSR set to: 0
  8704  0038B2  90D8               	bcf	status,0,c
  8705  0038B4  3787               	rlcf	___fltol@f1& (0+255),f,b
  8706  0038B6  3788               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8707  0038B8  3789               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8708  0038BA  378A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8709  0038BC  0790               	decf	___fltol@exp1& (0+255),f,b
  8710  0038BE                     l6583:
  8711                           
  8712                           ; BSR set to: 0
  8713  0038BE  5190               	movf	___fltol@exp1& (0+255),w,b
  8714  0038C0  A4D8               	btfss	status,2,c
  8715  0038C2  D7F7               	goto	l6581
  8716  0038C4                     u8320:
  8717                           
  8718                           ; BSR set to: 0
  8719  0038C4  518F               	movf	___fltol@sign1& (0+255),w,b
  8720  0038C6  B4D8               	btfsc	status,2,c
  8721  0038C8  D008               	goto	l6589
  8722                           
  8723                           ; BSR set to: 0
  8724  0038CA  1F8A               	comf	(___fltol@f1+3)& (0+255),f,b
  8725  0038CC  1F89               	comf	(___fltol@f1+2)& (0+255),f,b
  8726  0038CE  1F88               	comf	(___fltol@f1+1)& (0+255),f,b
  8727  0038D0  6D87               	negf	___fltol@f1& (0+255),b
  8728  0038D2  0E00               	movlw	0
  8729  0038D4  2388               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8730  0038D6  2389               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8731  0038D8  238A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8732  0038DA                     l6589:
  8733                           
  8734                           ; BSR set to: 0
  8735  0038DA  C087  F087         	movff	___fltol@f1,?___fltol
  8736  0038DE  C088  F088         	movff	___fltol@f1+1,?___fltol+1
  8737  0038E2  C089  F089         	movff	___fltol@f1+2,?___fltol+2
  8738  0038E6  C08A  F08A         	movff	___fltol@f1+3,?___fltol+3
  8739                           
  8740                           ; BSR set to: 0
  8741  0038EA  0012               	return		;funcret
  8742  0038EC                     __end_of___fltol:
  8743                           	opt callstack 0
  8744                           
  8745 ;; *************** function ___flmul *****************
  8746 ;; Defined at:
  8747 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8748 ;; Parameters:    Size  Location     Type
  8749 ;;  b               4   14[BANK0 ] long 
  8750 ;;  a               4   18[BANK0 ] long 
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;  prod            4   33[BANK0 ] struct .
  8753 ;;  grs             4   28[BANK0 ] unsigned long 
  8754 ;;  temp            2   37[BANK0 ] struct .
  8755 ;;  bexp            1   32[BANK0 ] unsigned char 
  8756 ;;  aexp            1   27[BANK0 ] unsigned char 
  8757 ;;  sign            1   26[BANK0 ] unsigned char 
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  4   14[BANK0 ] unsigned char 
  8760 ;; Registers used:
  8761 ;;		wreg, status,2, status,0, prodl, prodh
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8767 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8768 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8769 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8770 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8771 ;;Total ram usage:       25 bytes
  8772 ;; Hardware stack levels used:    1
  8773 ;; Hardware stack levels required when called:    2
  8774 ;; This function calls:
  8775 ;;		Nothing
  8776 ;; This function is called by:
  8777 ;;		_fijarVelocidad
  8778 ;;		_efgtoa
  8779 ;; This function uses a non-reentrant model
  8780 ;;
  8781                           
  8782                           	psect	text36
  8783  001F74                     __ptext36:
  8784                           	opt callstack 0
  8785  001F74                     ___flmul:
  8786                           	opt callstack 23
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;incstack = 0
  8790  001F74  0100               	movlb	0	; () banked
  8791  001F76  5171               	movf	(___flmul@b+3)& (0+255),w,b
  8792  001F78  0B80               	andlw	128
  8793  001F7A  6F7A               	movwf	___flmul@sign& (0+255),b
  8794  001F7C  5171               	movf	(___flmul@b+3)& (0+255),w,b
  8795  001F7E  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  8796  001F80  6F80               	movwf	___flmul@bexp& (0+255),b
  8797                           
  8798                           ; BSR set to: 0
  8799  001F82  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
  8800                           
  8801                           ; BSR set to: 0
  8802  001F84  8180               	bsf	___flmul@bexp& (0+255),0,b
  8803                           
  8804                           ; BSR set to: 0
  8805  001F86  5180               	movf	___flmul@bexp& (0+255),w,b
  8806  001F88  B4D8               	btfsc	status,2,c
  8807  001F8A  D00D               	goto	l6301
  8808                           
  8809                           ; BSR set to: 0
  8810  001F8C  2980               	incf	___flmul@bexp& (0+255),w,b
  8811  001F8E  A4D8               	btfss	status,2,c
  8812  001F90  D008               	goto	l6299
  8813                           
  8814                           ; BSR set to: 0
  8815  001F92  0E00               	movlw	0
  8816  001F94  6F6E               	movwf	___flmul@b& (0+255),b
  8817  001F96  0E00               	movlw	0
  8818  001F98  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  8819  001F9A  0E00               	movlw	0
  8820  001F9C  6F70               	movwf	(___flmul@b+2)& (0+255),b
  8821  001F9E  0E00               	movlw	0
  8822  001FA0  6F71               	movwf	(___flmul@b+3)& (0+255),b
  8823  001FA2                     l6299:
  8824                           
  8825                           ; BSR set to: 0
  8826  001FA2  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  8827  001FA4  D008               	goto	l6303
  8828  001FA6                     l6301:
  8829                           
  8830                           ; BSR set to: 0
  8831  001FA6  0E00               	movlw	0
  8832  001FA8  6F6E               	movwf	___flmul@b& (0+255),b
  8833  001FAA  0E00               	movlw	0
  8834  001FAC  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  8835  001FAE  0E00               	movlw	0
  8836  001FB0  6F70               	movwf	(___flmul@b+2)& (0+255),b
  8837  001FB2  0E00               	movlw	0
  8838  001FB4  6F71               	movwf	(___flmul@b+3)& (0+255),b
  8839  001FB6                     l6303:
  8840                           
  8841                           ; BSR set to: 0
  8842  001FB6  5175               	movf	(___flmul@a+3)& (0+255),w,b
  8843  001FB8  0B80               	andlw	128
  8844  001FBA  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  8845                           
  8846                           ; BSR set to: 0
  8847  001FBC  5175               	movf	(___flmul@a+3)& (0+255),w,b
  8848  001FBE  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  8849  001FC0  6F7B               	movwf	___flmul@aexp& (0+255),b
  8850                           
  8851                           ; BSR set to: 0
  8852  001FC2  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
  8853                           
  8854                           ; BSR set to: 0
  8855  001FC4  817B               	bsf	___flmul@aexp& (0+255),0,b
  8856                           
  8857                           ; BSR set to: 0
  8858  001FC6  517B               	movf	___flmul@aexp& (0+255),w,b
  8859  001FC8  B4D8               	btfsc	status,2,c
  8860  001FCA  D00D               	goto	l6319
  8861                           
  8862                           ; BSR set to: 0
  8863  001FCC  297B               	incf	___flmul@aexp& (0+255),w,b
  8864  001FCE  A4D8               	btfss	status,2,c
  8865  001FD0  D008               	goto	l6317
  8866                           
  8867                           ; BSR set to: 0
  8868  001FD2  0E00               	movlw	0
  8869  001FD4  6F72               	movwf	___flmul@a& (0+255),b
  8870  001FD6  0E00               	movlw	0
  8871  001FD8  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8872  001FDA  0E00               	movlw	0
  8873  001FDC  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8874  001FDE  0E00               	movlw	0
  8875  001FE0  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8876  001FE2                     l6317:
  8877                           
  8878                           ; BSR set to: 0
  8879  001FE2  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  8880  001FE4  D008               	goto	l1125
  8881  001FE6                     l6319:
  8882                           
  8883                           ; BSR set to: 0
  8884  001FE6  0E00               	movlw	0
  8885  001FE8  6F72               	movwf	___flmul@a& (0+255),b
  8886  001FEA  0E00               	movlw	0
  8887  001FEC  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8888  001FEE  0E00               	movlw	0
  8889  001FF0  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8890  001FF2  0E00               	movlw	0
  8891  001FF4  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8892  001FF6                     l1125:
  8893                           
  8894                           ; BSR set to: 0
  8895  001FF6  517B               	movf	___flmul@aexp& (0+255),w,b
  8896  001FF8  B4D8               	btfsc	status,2,c
  8897  001FFA  D003               	goto	u7940
  8898                           
  8899                           ; BSR set to: 0
  8900  001FFC  5180               	movf	___flmul@bexp& (0+255),w,b
  8901  001FFE  A4D8               	btfss	status,2,c
  8902  002000  D009               	goto	l6327
  8903  002002                     u7940:
  8904                           
  8905                           ; BSR set to: 0
  8906  002002  0E00               	movlw	0
  8907  002004  6F6E               	movwf	?___flmul& (0+255),b
  8908  002006  0E00               	movlw	0
  8909  002008  6F6F               	movwf	(?___flmul+1)& (0+255),b
  8910  00200A  0E00               	movlw	0
  8911  00200C  6F70               	movwf	(?___flmul+2)& (0+255),b
  8912  00200E  0E00               	movlw	0
  8913  002010  6F71               	movwf	(?___flmul+3)& (0+255),b
  8914  002012  0012               	return	
  8915  002014                     l6327:
  8916                           
  8917                           ; BSR set to: 0
  8918  002014  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8919  002016  036E               	mulwf	___flmul@b& (0+255),b
  8920  002018  CFF3 F085          	movff	prodl,___flmul@temp
  8921  00201C  CFF4 F086          	movff	prodh,___flmul@temp+1
  8922                           
  8923                           ; BSR set to: 0
  8924  002020  5185               	movf	___flmul@temp& (0+255),w,b
  8925  002022  6F7C               	movwf	___flmul@grs& (0+255),b
  8926  002024  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
  8927  002026  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
  8928  002028  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
  8929                           
  8930                           ; BSR set to: 0
  8931  00202A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8932  00202C  6F81               	movwf	___flmul@prod& (0+255),b
  8933  00202E  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  8934  002030  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  8935  002032  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  8936  002034  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8937  002036  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8938  002038  CFF3 F085          	movff	prodl,___flmul@temp
  8939  00203C  CFF4 F086          	movff	prodh,___flmul@temp+1
  8940                           
  8941                           ; BSR set to: 0
  8942  002040  5185               	movf	___flmul@temp& (0+255),w,b
  8943  002042  277C               	addwf	___flmul@grs& (0+255),f,b
  8944  002044  0E00               	movlw	0
  8945  002046  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8946  002048  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8947  00204A  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8948                           
  8949                           ; BSR set to: 0
  8950  00204C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8951  00204E  2781               	addwf	___flmul@prod& (0+255),f,b
  8952  002050  0E00               	movlw	0
  8953  002052  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8954  002054  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8955  002056  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8956  002058  5172               	movf	___flmul@a& (0+255),w,b
  8957  00205A  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8958  00205C  CFF3 F085          	movff	prodl,___flmul@temp
  8959  002060  CFF4 F086          	movff	prodh,___flmul@temp+1
  8960                           
  8961                           ; BSR set to: 0
  8962  002064  5185               	movf	___flmul@temp& (0+255),w,b
  8963  002066  277C               	addwf	___flmul@grs& (0+255),f,b
  8964  002068  0E00               	movlw	0
  8965  00206A  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8966  00206C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8967  00206E  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8968                           
  8969                           ; BSR set to: 0
  8970  002070  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8971  002072  2781               	addwf	___flmul@prod& (0+255),f,b
  8972  002074  0E00               	movlw	0
  8973  002076  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8974  002078  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8975  00207A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8976                           
  8977                           ; BSR set to: 0
  8978  00207C  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  8979  002080  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  8980  002084  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  8981  002088  6B7C               	clrf	___flmul@grs& (0+255),b
  8982                           
  8983                           ; BSR set to: 0
  8984  00208A  5172               	movf	___flmul@a& (0+255),w,b
  8985  00208C  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8986  00208E  CFF3 F085          	movff	prodl,___flmul@temp
  8987  002092  CFF4 F086          	movff	prodh,___flmul@temp+1
  8988                           
  8989                           ; BSR set to: 0
  8990  002096  5185               	movf	___flmul@temp& (0+255),w,b
  8991  002098  277C               	addwf	___flmul@grs& (0+255),f,b
  8992  00209A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8993  00209C  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8994  00209E  0E00               	movlw	0
  8995  0020A0  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8996  0020A2  0E00               	movlw	0
  8997  0020A4  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8998                           
  8999                           ; BSR set to: 0
  9000  0020A6  5173               	movf	(___flmul@a+1)& (0+255),w,b
  9001  0020A8  036E               	mulwf	___flmul@b& (0+255),b
  9002  0020AA  CFF3 F085          	movff	prodl,___flmul@temp
  9003  0020AE  CFF4 F086          	movff	prodh,___flmul@temp+1
  9004                           
  9005                           ; BSR set to: 0
  9006  0020B2  5185               	movf	___flmul@temp& (0+255),w,b
  9007  0020B4  277C               	addwf	___flmul@grs& (0+255),f,b
  9008  0020B6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9009  0020B8  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9010  0020BA  0E00               	movlw	0
  9011  0020BC  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9012  0020BE  0E00               	movlw	0
  9013  0020C0  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9014                           
  9015                           ; BSR set to: 0
  9016  0020C2  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  9017  0020C6  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  9018  0020CA  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  9019  0020CE  6B7C               	clrf	___flmul@grs& (0+255),b
  9020  0020D0  5172               	movf	___flmul@a& (0+255),w,b
  9021  0020D2  036E               	mulwf	___flmul@b& (0+255),b
  9022  0020D4  CFF3 F085          	movff	prodl,___flmul@temp
  9023  0020D8  CFF4 F086          	movff	prodh,___flmul@temp+1
  9024                           
  9025                           ; BSR set to: 0
  9026  0020DC  5185               	movf	___flmul@temp& (0+255),w,b
  9027  0020DE  277C               	addwf	___flmul@grs& (0+255),f,b
  9028  0020E0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9029  0020E2  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9030  0020E4  0E00               	movlw	0
  9031  0020E6  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9032  0020E8  0E00               	movlw	0
  9033  0020EA  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9034                           
  9035                           ; BSR set to: 0
  9036  0020EC  5174               	movf	(___flmul@a+2)& (0+255),w,b
  9037  0020EE  036F               	mulwf	(___flmul@b+1)& (0+255),b
  9038  0020F0  CFF3 F085          	movff	prodl,___flmul@temp
  9039  0020F4  CFF4 F086          	movff	prodh,___flmul@temp+1
  9040  0020F8  5185               	movf	___flmul@temp& (0+255),w,b
  9041  0020FA  2781               	addwf	___flmul@prod& (0+255),f,b
  9042  0020FC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9043  0020FE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9044  002100  0E00               	movlw	0
  9045  002102  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9046  002104  0E00               	movlw	0
  9047  002106  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9048                           
  9049                           ; BSR set to: 0
  9050  002108  5173               	movf	(___flmul@a+1)& (0+255),w,b
  9051  00210A  0370               	mulwf	(___flmul@b+2)& (0+255),b
  9052  00210C  CFF3 F085          	movff	prodl,___flmul@temp
  9053  002110  CFF4 F086          	movff	prodh,___flmul@temp+1
  9054                           
  9055                           ; BSR set to: 0
  9056  002114  5185               	movf	___flmul@temp& (0+255),w,b
  9057  002116  2781               	addwf	___flmul@prod& (0+255),f,b
  9058  002118  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9059  00211A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9060  00211C  0E00               	movlw	0
  9061  00211E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9062  002120  0E00               	movlw	0
  9063  002122  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9064  002124  5174               	movf	(___flmul@a+2)& (0+255),w,b
  9065  002126  0370               	mulwf	(___flmul@b+2)& (0+255),b
  9066  002128  CFF3 F085          	movff	prodl,___flmul@temp
  9067  00212C  CFF4 F086          	movff	prodh,___flmul@temp+1
  9068                           
  9069                           ; BSR set to: 0
  9070  002130  5185               	movf	___flmul@temp& (0+255),w,b
  9071  002132  6F76               	movwf	??___flmul& (0+255),b
  9072  002134  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9073  002136  6F77               	movwf	(??___flmul+1)& (0+255),b
  9074  002138  6B78               	clrf	(??___flmul+2)& (0+255),b
  9075  00213A  6B79               	clrf	(??___flmul+3)& (0+255),b
  9076  00213C  C078  F079         	movff	??___flmul+2,??___flmul+3
  9077  002140  C077  F078         	movff	??___flmul+1,??___flmul+2
  9078  002144  C076  F077         	movff	??___flmul,??___flmul+1
  9079  002148  6B76               	clrf	??___flmul& (0+255),b
  9080  00214A  5176               	movf	??___flmul& (0+255),w,b
  9081  00214C  2781               	addwf	___flmul@prod& (0+255),f,b
  9082  00214E  5177               	movf	(??___flmul+1)& (0+255),w,b
  9083  002150  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9084  002152  5178               	movf	(??___flmul+2)& (0+255),w,b
  9085  002154  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9086  002156  5179               	movf	(??___flmul+3)& (0+255),w,b
  9087  002158  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9088                           
  9089                           ; BSR set to: 0
  9090  00215A  C07C  F076         	movff	___flmul@grs,??___flmul
  9091  00215E  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
  9092  002162  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
  9093  002166  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
  9094  00216A  0E19               	movlw	25
  9095  00216C  D005               	goto	u7950
  9096  00216E                     u7955:
  9097  00216E  90D8               	bcf	status,0,c
  9098  002170  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  9099  002172  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  9100  002174  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  9101  002176  3376               	rrcf	??___flmul& (0+255),f,b
  9102  002178                     u7950:
  9103  002178  2EE8               	decfsz	wreg,f,c
  9104  00217A  D7F9               	goto	u7955
  9105  00217C  5176               	movf	??___flmul& (0+255),w,b
  9106  00217E  2781               	addwf	___flmul@prod& (0+255),f,b
  9107  002180  5177               	movf	(??___flmul+1)& (0+255),w,b
  9108  002182  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9109  002184  5178               	movf	(??___flmul+2)& (0+255),w,b
  9110  002186  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9111  002188  5179               	movf	(??___flmul+3)& (0+255),w,b
  9112  00218A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9113                           
  9114                           ; BSR set to: 0
  9115  00218C  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  9116  002190  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  9117  002194  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  9118  002198  6B7C               	clrf	___flmul@grs& (0+255),b
  9119                           
  9120                           ; BSR set to: 0
  9121  00219A  517B               	movf	___flmul@aexp& (0+255),w,b
  9122  00219C  C080  F076         	movff	___flmul@bexp,??___flmul
  9123  0021A0  6B77               	clrf	(??___flmul+1)& (0+255),b
  9124  0021A2  2776               	addwf	??___flmul& (0+255),f,b
  9125  0021A4  0E00               	movlw	0
  9126  0021A6  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  9127  0021A8  0E82               	movlw	130
  9128  0021AA  2576               	addwf	??___flmul& (0+255),w,b
  9129  0021AC  6F85               	movwf	___flmul@temp& (0+255),b
  9130  0021AE  0EFF               	movlw	255
  9131  0021B0  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  9132  0021B2  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  9133  0021B4  D00F               	goto	l6375
  9134  0021B6                     l6369:
  9135                           
  9136                           ; BSR set to: 0
  9137  0021B6  90D8               	bcf	status,0,c
  9138  0021B8  3781               	rlcf	___flmul@prod& (0+255),f,b
  9139  0021BA  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9140  0021BC  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9141  0021BE  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9142                           
  9143                           ; BSR set to: 0
  9144  0021C0  BF7F               	btfsc	(___flmul@grs+3)& (0+255),7,b
  9145                           
  9146                           ; BSR set to: 0
  9147  0021C2  8181               	bsf	___flmul@prod& (0+255),0,b
  9148                           
  9149                           ; BSR set to: 0
  9150  0021C4  90D8               	bcf	status,0,c
  9151  0021C6  377C               	rlcf	___flmul@grs& (0+255),f,b
  9152  0021C8  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9153  0021CA  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9154  0021CC  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9155  0021CE  0785               	decf	___flmul@temp& (0+255),f,b
  9156  0021D0  A0D8               	btfss	status,0,c
  9157  0021D2  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  9158  0021D4                     l6375:
  9159                           
  9160                           ; BSR set to: 0
  9161  0021D4  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  9162  0021D6  D7EF               	goto	l6369
  9163                           
  9164                           ; BSR set to: 0
  9165  0021D8  0E00               	movlw	0
  9166  0021DA  6F7B               	movwf	___flmul@aexp& (0+255),b
  9167                           
  9168                           ; BSR set to: 0
  9169  0021DC  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  9170  0021DE  D017               	goto	l1134
  9171                           
  9172                           ; BSR set to: 0
  9173  0021E0  0EFF               	movlw	255
  9174  0021E2  157C               	andwf	___flmul@grs& (0+255),w,b
  9175  0021E4  6F76               	movwf	??___flmul& (0+255),b
  9176  0021E6  0EFF               	movlw	255
  9177  0021E8  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
  9178  0021EA  6F77               	movwf	(??___flmul+1)& (0+255),b
  9179  0021EC  0EFF               	movlw	255
  9180  0021EE  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
  9181  0021F0  6F78               	movwf	(??___flmul+2)& (0+255),b
  9182  0021F2  0E7F               	movlw	127
  9183  0021F4  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
  9184  0021F6  6F79               	movwf	(??___flmul+3)& (0+255),b
  9185  0021F8  5176               	movf	??___flmul& (0+255),w,b
  9186  0021FA  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  9187  0021FC  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  9188  0021FE  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  9189  002200  B4D8               	btfsc	status,2,c
  9190  002202  D003               	goto	l1135
  9191  002204                     u7990:
  9192                           
  9193                           ; BSR set to: 0
  9194  002204  0E01               	movlw	1
  9195  002206  6F7B               	movwf	___flmul@aexp& (0+255),b
  9196  002208  D002               	goto	l1134
  9197  00220A                     l1135:
  9198                           
  9199                           ; BSR set to: 0
  9200  00220A  B181               	btfsc	___flmul@prod& (0+255),0,b
  9201  00220C  D7FB               	goto	u7990
  9202  00220E                     l1134:
  9203                           
  9204                           ; BSR set to: 0
  9205  00220E  517B               	movf	___flmul@aexp& (0+255),w,b
  9206  002210  B4D8               	btfsc	status,2,c
  9207  002212  D01F               	goto	l6395
  9208                           
  9209                           ; BSR set to: 0
  9210  002214  0E01               	movlw	1
  9211  002216  2781               	addwf	___flmul@prod& (0+255),f,b
  9212  002218  0E00               	movlw	0
  9213  00221A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9214  00221C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9215  00221E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9216                           
  9217                           ; BSR set to: 0
  9218  002220  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  9219  002222  D017               	goto	l6395
  9220                           
  9221                           ; BSR set to: 0
  9222  002224  C081  F076         	movff	___flmul@prod,??___flmul
  9223  002228  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  9224  00222C  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  9225  002230  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  9226  002234  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  9227  002236  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  9228  002238  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  9229  00223A  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  9230  00223C  3376               	rrcf	??___flmul& (0+255),f,b
  9231  00223E  C076  F081         	movff	??___flmul,___flmul@prod
  9232  002242  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  9233  002246  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  9234  00224A  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  9235                           
  9236                           ; BSR set to: 0
  9237  00224E  4B85               	infsnz	___flmul@temp& (0+255),f,b
  9238  002250  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  9239  002252                     l6395:
  9240                           
  9241                           ; BSR set to: 0
  9242  002252  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9243  002254  D00D               	goto	l6399
  9244  002256  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9245  002258  E103               	bnz	u8030
  9246  00225A  2985               	incf	___flmul@temp& (0+255),w,b
  9247  00225C  A0D8               	btfss	status,0,c
  9248  00225E  D008               	goto	l6399
  9249  002260                     u8030:
  9250                           
  9251                           ; BSR set to: 0
  9252  002260  0E00               	movlw	0
  9253  002262  6F81               	movwf	___flmul@prod& (0+255),b
  9254  002264  0E00               	movlw	0
  9255  002266  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  9256  002268  0E80               	movlw	128
  9257  00226A  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  9258  00226C  0E7F               	movlw	127
  9259  00226E  D020               	goto	L9
  9260  002270                     l6399:
  9261                           
  9262                           ; BSR set to: 0
  9263  002270  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9264  002272  D005               	goto	u8040
  9265  002274  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9266  002276  E10E               	bnz	l1142
  9267  002278  0585               	decf	___flmul@temp& (0+255),w,b
  9268  00227A  B0D8               	btfsc	status,0,c
  9269  00227C  D00B               	goto	l1142
  9270  00227E                     u8040:
  9271                           
  9272                           ; BSR set to: 0
  9273  00227E  0E00               	movlw	0
  9274  002280  6F81               	movwf	___flmul@prod& (0+255),b
  9275  002282  0E00               	movlw	0
  9276  002284  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  9277  002286  0E00               	movlw	0
  9278  002288  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  9279  00228A  0E00               	movlw	0
  9280  00228C  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9281  00228E  0E00               	movlw	0
  9282  002290  6F7A               	movwf	___flmul@sign& (0+255),b
  9283  002292  D00F               	goto	l6411
  9284  002294                     l1142:
  9285                           
  9286                           ; BSR set to: 0
  9287  002294  C085  F080         	movff	___flmul@temp,___flmul@bexp
  9288                           
  9289                           ; BSR set to: 0
  9290  002298  0EFF               	movlw	255
  9291  00229A  1781               	andwf	___flmul@prod& (0+255),f,b
  9292  00229C  0EFF               	movlw	255
  9293  00229E  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  9294  0022A0  0E7F               	movlw	127
  9295  0022A2  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  9296  0022A4  0E00               	movlw	0
  9297  0022A6  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  9298                           
  9299                           ; BSR set to: 0
  9300  0022A8  B180               	btfsc	___flmul@bexp& (0+255),0,b
  9301                           
  9302                           ; BSR set to: 0
  9303  0022AA  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  9304                           
  9305                           ; BSR set to: 0
  9306  0022AC  90D8               	bcf	status,0,c
  9307  0022AE  3180               	rrcf	___flmul@bexp& (0+255),w,b
  9308  0022B0                     L9:
  9309  0022B0  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9310  0022B2                     l6411:
  9311                           
  9312                           ; BSR set to: 0
  9313  0022B2  517A               	movf	___flmul@sign& (0+255),w,b
  9314  0022B4  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9315                           
  9316                           ; BSR set to: 0
  9317  0022B6  C081  F06E         	movff	___flmul@prod,?___flmul
  9318  0022BA  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  9319  0022BE  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  9320  0022C2  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  9321                           
  9322                           ; BSR set to: 0
  9323  0022C6  0012               	return		;funcret
  9324  0022C8                     __end_of___flmul:
  9325                           	opt callstack 0
  9326                           
  9327 ;; *************** function ___fladd *****************
  9328 ;; Defined at:
  9329 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  b               4   39[BANK0 ] unsigned char 
  9332 ;;  a               4   43[BANK0 ] unsigned char 
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;  grs             1   54[BANK0 ] unsigned char 
  9335 ;;  bexp            1   53[BANK0 ] unsigned char 
  9336 ;;  aexp            1   52[BANK0 ] unsigned char 
  9337 ;;  signs           1   51[BANK0 ] unsigned char 
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  4   39[BANK0 ] unsigned char 
  9340 ;; Registers used:
  9341 ;;		wreg, status,2, status,0
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9347 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9348 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9349 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9350 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9351 ;;Total ram usage:       16 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:    2
  9354 ;; This function calls:
  9355 ;;		Nothing
  9356 ;; This function is called by:
  9357 ;;		_fijarVelocidad
  9358 ;;		_efgtoa
  9359 ;;		___flsub
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           	psect	text37
  9364  0022C8                     __ptext37:
  9365                           	opt callstack 0
  9366  0022C8                     ___fladd:
  9367                           	opt callstack 22
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;incstack = 0
  9371  0022C8  0100               	movlb	0	; () banked
  9372  0022CA  518A               	movf	(___fladd@b+3)& (0+255),w,b
  9373  0022CC  0B80               	andlw	128
  9374  0022CE  6F93               	movwf	___fladd@signs& (0+255),b
  9375  0022D0  518A               	movf	(___fladd@b+3)& (0+255),w,b
  9376  0022D2  258A               	addwf	(___fladd@b+3)& (0+255),w,b
  9377  0022D4  6F95               	movwf	___fladd@bexp& (0+255),b
  9378                           
  9379                           ; BSR set to: 0
  9380  0022D6  BF89               	btfsc	(___fladd@b+2)& (0+255),7,b
  9381                           
  9382                           ; BSR set to: 0
  9383  0022D8  8195               	bsf	___fladd@bexp& (0+255),0,b
  9384                           
  9385                           ; BSR set to: 0
  9386  0022DA  5195               	movf	___fladd@bexp& (0+255),w,b
  9387  0022DC  B4D8               	btfsc	status,2,c
  9388  0022DE  D00D               	goto	l5867
  9389                           
  9390                           ; BSR set to: 0
  9391  0022E0  2995               	incf	___fladd@bexp& (0+255),w,b
  9392  0022E2  A4D8               	btfss	status,2,c
  9393  0022E4  D008               	goto	l5863
  9394                           
  9395                           ; BSR set to: 0
  9396  0022E6  0E00               	movlw	0
  9397  0022E8  6F87               	movwf	___fladd@b& (0+255),b
  9398  0022EA  0E00               	movlw	0
  9399  0022EC  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9400  0022EE  0E00               	movlw	0
  9401  0022F0  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9402  0022F2  0E00               	movlw	0
  9403  0022F4  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9404  0022F6                     l5863:
  9405                           
  9406                           ; BSR set to: 0
  9407  0022F6  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  9408  0022F8  D006               	goto	L10
  9409  0022FA                     l5867:
  9410                           
  9411                           ; BSR set to: 0
  9412  0022FA  0E00               	movlw	0
  9413  0022FC  6F87               	movwf	___fladd@b& (0+255),b
  9414  0022FE  0E00               	movlw	0
  9415  002300  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9416  002302  0E00               	movlw	0
  9417  002304  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9418  002306                     L10:
  9419  002306  0E00               	movlw	0
  9420  002308  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9421                           
  9422                           ; BSR set to: 0
  9423  00230A  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9424  00230C  0B80               	andlw	128
  9425  00230E  6F94               	movwf	___fladd@aexp& (0+255),b
  9426                           
  9427                           ; BSR set to: 0
  9428  002310  5193               	movf	___fladd@signs& (0+255),w,b
  9429  002312  1994               	xorwf	___fladd@aexp& (0+255),w,b
  9430  002314  A4D8               	btfss	status,2,c
  9431                           
  9432                           ; BSR set to: 0
  9433  002316  8D93               	bsf	___fladd@signs& (0+255),6,b
  9434                           
  9435                           ; BSR set to: 0
  9436  002318  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9437  00231A  258E               	addwf	(___fladd@a+3)& (0+255),w,b
  9438  00231C  6F94               	movwf	___fladd@aexp& (0+255),b
  9439                           
  9440                           ; BSR set to: 0
  9441  00231E  BF8D               	btfsc	(___fladd@a+2)& (0+255),7,b
  9442                           
  9443                           ; BSR set to: 0
  9444  002320  8194               	bsf	___fladd@aexp& (0+255),0,b
  9445                           
  9446                           ; BSR set to: 0
  9447  002322  5194               	movf	___fladd@aexp& (0+255),w,b
  9448  002324  B4D8               	btfsc	status,2,c
  9449  002326  D00D               	goto	l5891
  9450                           
  9451                           ; BSR set to: 0
  9452  002328  2994               	incf	___fladd@aexp& (0+255),w,b
  9453  00232A  A4D8               	btfss	status,2,c
  9454  00232C  D008               	goto	l5887
  9455                           
  9456                           ; BSR set to: 0
  9457  00232E  0E00               	movlw	0
  9458  002330  6F8B               	movwf	___fladd@a& (0+255),b
  9459  002332  0E00               	movlw	0
  9460  002334  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  9461  002336  0E00               	movlw	0
  9462  002338  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  9463  00233A  0E00               	movlw	0
  9464  00233C  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  9465  00233E                     l5887:
  9466                           
  9467                           ; BSR set to: 0
  9468  00233E  8F8D               	bsf	(___fladd@a+2)& (0+255),7,b
  9469  002340  D006               	goto	L11
  9470  002342                     l5891:
  9471                           
  9472                           ; BSR set to: 0
  9473  002342  0E00               	movlw	0
  9474  002344  6F8B               	movwf	___fladd@a& (0+255),b
  9475  002346  0E00               	movlw	0
  9476  002348  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  9477  00234A  0E00               	movlw	0
  9478  00234C  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  9479  00234E                     L11:
  9480  00234E  0E00               	movlw	0
  9481  002350  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  9482                           
  9483                           ; BSR set to: 0
  9484  002352  5195               	movf	___fladd@bexp& (0+255),w,b
  9485  002354  5D94               	subwf	___fladd@aexp& (0+255),w,b
  9486  002356  B0D8               	btfsc	status,0,c
  9487  002358  D022               	goto	l5929
  9488                           
  9489                           ; BSR set to: 0
  9490  00235A  AD93               	btfss	___fladd@signs& (0+255),6,b
  9491  00235C  D002               	goto	l5899
  9492                           
  9493                           ; BSR set to: 0
  9494  00235E  0E80               	movlw	128
  9495  002360  1B93               	xorwf	___fladd@signs& (0+255),f,b
  9496  002362                     l5899:
  9497                           
  9498                           ; BSR set to: 0
  9499  002362  C095  F096         	movff	___fladd@bexp,___fladd@grs
  9500                           
  9501                           ; BSR set to: 0
  9502  002366  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  9503                           
  9504                           ; BSR set to: 0
  9505  00236A  C096  F094         	movff	___fladd@grs,___fladd@aexp
  9506                           
  9507                           ; BSR set to: 0
  9508  00236E  C087  F096         	movff	___fladd@b,___fladd@grs
  9509                           
  9510                           ; BSR set to: 0
  9511  002372  C08B  F087         	movff	___fladd@a,___fladd@b
  9512                           
  9513                           ; BSR set to: 0
  9514  002376  C096  F08B         	movff	___fladd@grs,___fladd@a
  9515                           
  9516                           ; BSR set to: 0
  9517  00237A  C088  F096         	movff	___fladd@b+1,___fladd@grs
  9518                           
  9519                           ; BSR set to: 0
  9520  00237E  C08C  F088         	movff	___fladd@a+1,___fladd@b+1
  9521                           
  9522                           ; BSR set to: 0
  9523  002382  C096  F08C         	movff	___fladd@grs,___fladd@a+1
  9524                           
  9525                           ; BSR set to: 0
  9526  002386  C089  F096         	movff	___fladd@b+2,___fladd@grs
  9527                           
  9528                           ; BSR set to: 0
  9529  00238A  C08D  F089         	movff	___fladd@a+2,___fladd@b+2
  9530                           
  9531                           ; BSR set to: 0
  9532  00238E  C096  F08D         	movff	___fladd@grs,___fladd@a+2
  9533                           
  9534                           ; BSR set to: 0
  9535  002392  C08A  F096         	movff	___fladd@b+3,___fladd@grs
  9536                           
  9537                           ; BSR set to: 0
  9538  002396  C08E  F08A         	movff	___fladd@a+3,___fladd@b+3
  9539                           
  9540                           ; BSR set to: 0
  9541  00239A  C096  F08E         	movff	___fladd@grs,___fladd@a+3
  9542  00239E                     l5929:
  9543                           
  9544                           ; BSR set to: 0
  9545  00239E  0E00               	movlw	0
  9546  0023A0  6F96               	movwf	___fladd@grs& (0+255),b
  9547                           
  9548                           ; BSR set to: 0
  9549  0023A2  5195               	movf	___fladd@bexp& (0+255),w,b
  9550  0023A4  C094  F08F         	movff	___fladd@aexp,??___fladd
  9551  0023A8  6B90               	clrf	(??___fladd+1)& (0+255),b
  9552  0023AA  5F8F               	subwf	??___fladd& (0+255),f,b
  9553  0023AC  0E00               	movlw	0
  9554  0023AE  5B90               	subwfb	(??___fladd+1)& (0+255),f,b
  9555  0023B0  BF90               	btfsc	(??___fladd+1)& (0+255),7,b
  9556  0023B2  D02C               	goto	l1040
  9557  0023B4  5190               	movf	(??___fladd+1)& (0+255),w,b
  9558  0023B6  E104               	bnz	u7060
  9559  0023B8  0E1A               	movlw	26
  9560  0023BA  5D8F               	subwf	??___fladd& (0+255),w,b
  9561  0023BC  A0D8               	btfss	status,0,c
  9562  0023BE  D026               	goto	l1040
  9563  0023C0                     u7060:
  9564                           
  9565                           ; BSR set to: 0
  9566  0023C0  5187               	movf	___fladd@b& (0+255),w,b
  9567  0023C2  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  9568  0023C4  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  9569  0023C6  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  9570  0023C8  B4D8               	btfsc	status,2,c
  9571  0023CA  D002               	goto	u7070
  9572  0023CC  0E01               	movlw	1
  9573  0023CE  D001               	goto	u7080
  9574  0023D0                     u7070:
  9575  0023D0  0E00               	movlw	0
  9576  0023D2                     u7080:
  9577  0023D2  6F96               	movwf	___fladd@grs& (0+255),b
  9578                           
  9579                           ; BSR set to: 0
  9580  0023D4  0E00               	movlw	0
  9581  0023D6  6F87               	movwf	___fladd@b& (0+255),b
  9582  0023D8  0E00               	movlw	0
  9583  0023DA  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9584  0023DC  0E00               	movlw	0
  9585  0023DE  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9586  0023E0  0E00               	movlw	0
  9587  0023E2  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9588                           
  9589                           ; BSR set to: 0
  9590  0023E4  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  9591  0023E8  D015               	goto	u7110
  9592  0023EA                     l1041:
  9593                           
  9594                           ; BSR set to: 0
  9595  0023EA  A196               	btfss	___fladd@grs& (0+255),0,b
  9596  0023EC  D005               	goto	l5941
  9597                           
  9598                           ; BSR set to: 0
  9599  0023EE  90D8               	bcf	status,0,c
  9600  0023F0  3196               	rrcf	___fladd@grs& (0+255),w,b
  9601  0023F2  0901               	iorlw	1
  9602  0023F4  6F96               	movwf	___fladd@grs& (0+255),b
  9603  0023F6  D002               	goto	l5943
  9604  0023F8                     l5941:
  9605                           
  9606                           ; BSR set to: 0
  9607  0023F8  90D8               	bcf	status,0,c
  9608  0023FA  3396               	rrcf	___fladd@grs& (0+255),f,b
  9609  0023FC                     l5943:
  9610                           
  9611                           ; BSR set to: 0
  9612  0023FC  B187               	btfsc	___fladd@b& (0+255),0,b
  9613                           
  9614                           ; BSR set to: 0
  9615  0023FE  8F96               	bsf	___fladd@grs& (0+255),7,b
  9616                           
  9617                           ; BSR set to: 0
  9618  002400  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  9619  002402  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  9620  002404  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  9621  002406  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  9622  002408  3387               	rrcf	___fladd@b& (0+255),f,b
  9623                           
  9624                           ; BSR set to: 0
  9625  00240A  2B95               	incf	___fladd@bexp& (0+255),f,b
  9626  00240C                     l1040:
  9627                           
  9628                           ; BSR set to: 0
  9629  00240C  5194               	movf	___fladd@aexp& (0+255),w,b
  9630  00240E  5D95               	subwf	___fladd@bexp& (0+255),w,b
  9631  002410  A0D8               	btfss	status,0,c
  9632  002412  D7EB               	goto	l1041
  9633  002414                     u7110:
  9634                           
  9635                           ; BSR set to: 0
  9636  002414  BD93               	btfsc	___fladd@signs& (0+255),6,b
  9637  002416  D028               	goto	l5975
  9638                           
  9639                           ; BSR set to: 0
  9640  002418  5195               	movf	___fladd@bexp& (0+255),w,b
  9641  00241A  A4D8               	btfss	status,2,c
  9642  00241C  D009               	goto	l5957
  9643                           
  9644                           ; BSR set to: 0
  9645  00241E  0E00               	movlw	0
  9646  002420  6F87               	movwf	?___fladd& (0+255),b
  9647  002422  0E00               	movlw	0
  9648  002424  6F88               	movwf	(?___fladd+1)& (0+255),b
  9649  002426  0E00               	movlw	0
  9650  002428  6F89               	movwf	(?___fladd+2)& (0+255),b
  9651  00242A  0E00               	movlw	0
  9652  00242C  6F8A               	movwf	(?___fladd+3)& (0+255),b
  9653  00242E  0012               	return	
  9654  002430                     l5957:
  9655                           
  9656                           ; BSR set to: 0
  9657  002430  518B               	movf	___fladd@a& (0+255),w,b
  9658  002432  2787               	addwf	___fladd@b& (0+255),f,b
  9659  002434  518C               	movf	(___fladd@a+1)& (0+255),w,b
  9660  002436  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  9661  002438  518D               	movf	(___fladd@a+2)& (0+255),w,b
  9662  00243A  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  9663  00243C  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9664  00243E  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  9665                           
  9666                           ; BSR set to: 0
  9667  002440  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  9668  002442  D071               	goto	u7240
  9669                           
  9670                           ; BSR set to: 0
  9671  002444  A196               	btfss	___fladd@grs& (0+255),0,b
  9672  002446  D005               	goto	l5965
  9673                           
  9674                           ; BSR set to: 0
  9675  002448  90D8               	bcf	status,0,c
  9676  00244A  3196               	rrcf	___fladd@grs& (0+255),w,b
  9677  00244C  0901               	iorlw	1
  9678  00244E  6F96               	movwf	___fladd@grs& (0+255),b
  9679  002450  D002               	goto	l5967
  9680  002452                     l5965:
  9681                           
  9682                           ; BSR set to: 0
  9683  002452  90D8               	bcf	status,0,c
  9684  002454  3396               	rrcf	___fladd@grs& (0+255),f,b
  9685  002456                     l5967:
  9686                           
  9687                           ; BSR set to: 0
  9688  002456  B187               	btfsc	___fladd@b& (0+255),0,b
  9689                           
  9690                           ; BSR set to: 0
  9691  002458  8F96               	bsf	___fladd@grs& (0+255),7,b
  9692                           
  9693                           ; BSR set to: 0
  9694  00245A  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  9695  00245C  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  9696  00245E  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  9697  002460  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  9698  002462  3387               	rrcf	___fladd@b& (0+255),f,b
  9699                           
  9700                           ; BSR set to: 0
  9701  002464  2B95               	incf	___fladd@bexp& (0+255),f,b
  9702  002466  D05F               	goto	u7240
  9703  002468                     l5975:
  9704                           
  9705                           ; BSR set to: 0
  9706  002468  518B               	movf	___fladd@a& (0+255),w,b
  9707  00246A  5D87               	subwf	___fladd@b& (0+255),w,b
  9708  00246C  518C               	movf	(___fladd@a+1)& (0+255),w,b
  9709  00246E  5988               	subwfb	(___fladd@b+1)& (0+255),w,b
  9710  002470  518D               	movf	(___fladd@a+2)& (0+255),w,b
  9711  002472  5989               	subwfb	(___fladd@b+2)& (0+255),w,b
  9712  002474  518A               	movf	(___fladd@b+3)& (0+255),w,b
  9713  002476  0A80               	xorlw	128
  9714  002478  6F8F               	movwf	??___fladd& (0+255),b
  9715  00247A  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9716  00247C  0A80               	xorlw	128
  9717  00247E  598F               	subwfb	??___fladd& (0+255),w,b
  9718  002480  B0D8               	btfsc	status,0,c
  9719  002482  D025               	goto	l5985
  9720                           
  9721                           ; BSR set to: 0
  9722  002484  5187               	movf	___fladd@b& (0+255),w,b
  9723  002486  5D8B               	subwf	___fladd@a& (0+255),w,b
  9724  002488  6F8F               	movwf	??___fladd& (0+255),b
  9725  00248A  5188               	movf	(___fladd@b+1)& (0+255),w,b
  9726  00248C  598C               	subwfb	(___fladd@a+1)& (0+255),w,b
  9727  00248E  6F90               	movwf	(??___fladd+1)& (0+255),b
  9728  002490  5189               	movf	(___fladd@b+2)& (0+255),w,b
  9729  002492  598D               	subwfb	(___fladd@a+2)& (0+255),w,b
  9730  002494  6F91               	movwf	(??___fladd+2)& (0+255),b
  9731  002496  518A               	movf	(___fladd@b+3)& (0+255),w,b
  9732  002498  598E               	subwfb	(___fladd@a+3)& (0+255),w,b
  9733  00249A  6F92               	movwf	(??___fladd+3)& (0+255),b
  9734  00249C  0EFF               	movlw	255
  9735  00249E  258F               	addwf	??___fladd& (0+255),w,b
  9736  0024A0  6F87               	movwf	___fladd@b& (0+255),b
  9737  0024A2  0EFF               	movlw	255
  9738  0024A4  2190               	addwfc	(??___fladd+1)& (0+255),w,b
  9739  0024A6  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9740  0024A8  0EFF               	movlw	255
  9741  0024AA  2191               	addwfc	(??___fladd+2)& (0+255),w,b
  9742  0024AC  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9743  0024AE  0EFF               	movlw	255
  9744  0024B0  2192               	addwfc	(??___fladd+3)& (0+255),w,b
  9745  0024B2  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9746  0024B4  0E80               	movlw	128
  9747  0024B6  1B93               	xorwf	___fladd@signs& (0+255),f,b
  9748                           
  9749                           ; BSR set to: 0
  9750  0024B8  6D96               	negf	___fladd@grs& (0+255),b
  9751                           
  9752                           ; BSR set to: 0
  9753  0024BA  5196               	movf	___fladd@grs& (0+255),w,b
  9754  0024BC  A4D8               	btfss	status,2,c
  9755  0024BE  D00F               	goto	l1056
  9756                           
  9757                           ; BSR set to: 0
  9758  0024C0  0E01               	movlw	1
  9759  0024C2  2787               	addwf	___fladd@b& (0+255),f,b
  9760  0024C4  0E00               	movlw	0
  9761  0024C6  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  9762  0024C8  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  9763  0024CA  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  9764  0024CC  D008               	goto	l1056
  9765  0024CE                     l5985:
  9766                           
  9767                           ; BSR set to: 0
  9768  0024CE  518B               	movf	___fladd@a& (0+255),w,b
  9769  0024D0  5F87               	subwf	___fladd@b& (0+255),f,b
  9770  0024D2  518C               	movf	(___fladd@a+1)& (0+255),w,b
  9771  0024D4  5B88               	subwfb	(___fladd@b+1)& (0+255),f,b
  9772  0024D6  518D               	movf	(___fladd@a+2)& (0+255),w,b
  9773  0024D8  5B89               	subwfb	(___fladd@b+2)& (0+255),f,b
  9774  0024DA  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9775  0024DC  5B8A               	subwfb	(___fladd@b+3)& (0+255),f,b
  9776  0024DE                     l1056:
  9777                           
  9778                           ; BSR set to: 0
  9779  0024DE  5187               	movf	___fladd@b& (0+255),w,b
  9780  0024E0  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  9781  0024E2  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  9782  0024E4  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  9783  0024E6  A4D8               	btfss	status,2,c
  9784  0024E8  D01C               	goto	l6009
  9785                           
  9786                           ; BSR set to: 0
  9787  0024EA  5196               	movf	___fladd@grs& (0+255),w,b
  9788  0024EC  A4D8               	btfss	status,2,c
  9789  0024EE  D019               	goto	l6009
  9790                           
  9791                           ; BSR set to: 0
  9792  0024F0  0E00               	movlw	0
  9793  0024F2  6F87               	movwf	?___fladd& (0+255),b
  9794  0024F4  0E00               	movlw	0
  9795  0024F6  6F88               	movwf	(?___fladd+1)& (0+255),b
  9796  0024F8  0E00               	movlw	0
  9797  0024FA  6F89               	movwf	(?___fladd+2)& (0+255),b
  9798  0024FC  0E00               	movlw	0
  9799  0024FE  6F8A               	movwf	(?___fladd+3)& (0+255),b
  9800  002500  0012               	return	
  9801  002502                     l5993:
  9802                           
  9803                           ; BSR set to: 0
  9804  002502  90D8               	bcf	status,0,c
  9805  002504  3787               	rlcf	___fladd@b& (0+255),f,b
  9806  002506  3788               	rlcf	(___fladd@b+1)& (0+255),f,b
  9807  002508  3789               	rlcf	(___fladd@b+2)& (0+255),f,b
  9808  00250A  378A               	rlcf	(___fladd@b+3)& (0+255),f,b
  9809                           
  9810                           ; BSR set to: 0
  9811  00250C  BF96               	btfsc	___fladd@grs& (0+255),7,b
  9812                           
  9813                           ; BSR set to: 0
  9814  00250E  8187               	bsf	___fladd@b& (0+255),0,b
  9815                           
  9816                           ; BSR set to: 0
  9817  002510  A196               	btfss	___fladd@grs& (0+255),0,b
  9818  002512  D002               	goto	l6003
  9819                           
  9820                           ; BSR set to: 0
  9821  002514  80D8               	bsf	status,0,c
  9822  002516  D001               	goto	L12
  9823  002518                     l6003:
  9824                           
  9825                           ; BSR set to: 0
  9826  002518  90D8               	bcf	status,0,c
  9827  00251A                     L12:
  9828  00251A  3796               	rlcf	___fladd@grs& (0+255),f,b
  9829                           
  9830                           ; BSR set to: 0
  9831  00251C  5195               	movf	___fladd@bexp& (0+255),w,b
  9832  00251E  A4D8               	btfss	status,2,c
  9833                           
  9834                           ; BSR set to: 0
  9835  002520  0795               	decf	___fladd@bexp& (0+255),f,b
  9836  002522                     l6009:
  9837                           
  9838                           ; BSR set to: 0
  9839  002522  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  9840  002524  D7EE               	goto	l5993
  9841  002526                     u7240:
  9842                           
  9843                           ; BSR set to: 0
  9844  002526  0E00               	movlw	0
  9845  002528  6F94               	movwf	___fladd@aexp& (0+255),b
  9846                           
  9847                           ; BSR set to: 0
  9848  00252A  AF96               	btfss	___fladd@grs& (0+255),7,b
  9849  00252C  D00B               	goto	l1065
  9850                           
  9851                           ; BSR set to: 0
  9852  00252E  C096  F08F         	movff	___fladd@grs,??___fladd
  9853  002532  0E7F               	movlw	127
  9854  002534  178F               	andwf	??___fladd& (0+255),f,b
  9855  002536  B4D8               	btfsc	status,2,c
  9856  002538  D003               	goto	l1066
  9857  00253A                     u7260:
  9858                           
  9859                           ; BSR set to: 0
  9860  00253A  0E01               	movlw	1
  9861  00253C  6F94               	movwf	___fladd@aexp& (0+255),b
  9862  00253E  D002               	goto	l1065
  9863  002540                     l1066:
  9864                           
  9865                           ; BSR set to: 0
  9866  002540  B187               	btfsc	___fladd@b& (0+255),0,b
  9867  002542  D7FB               	goto	u7260
  9868  002544                     l1065:
  9869                           
  9870                           ; BSR set to: 0
  9871  002544  5194               	movf	___fladd@aexp& (0+255),w,b
  9872  002546  B4D8               	btfsc	status,2,c
  9873  002548  D020               	goto	l6029
  9874                           
  9875                           ; BSR set to: 0
  9876  00254A  0E01               	movlw	1
  9877  00254C  2787               	addwf	___fladd@b& (0+255),f,b
  9878  00254E  0E00               	movlw	0
  9879  002550  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  9880  002552  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  9881  002554  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  9882                           
  9883                           ; BSR set to: 0
  9884  002556  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  9885  002558  D018               	goto	l6029
  9886                           
  9887                           ; BSR set to: 0
  9888  00255A  C087  F08F         	movff	___fladd@b,??___fladd
  9889  00255E  C088  F090         	movff	___fladd@b+1,??___fladd+1
  9890  002562  C089  F091         	movff	___fladd@b+2,??___fladd+2
  9891  002566  C08A  F092         	movff	___fladd@b+3,??___fladd+3
  9892  00256A  3592               	rlcf	(??___fladd+3)& (0+255),w,b
  9893  00256C  3392               	rrcf	(??___fladd+3)& (0+255),f,b
  9894  00256E  3391               	rrcf	(??___fladd+2)& (0+255),f,b
  9895  002570  3390               	rrcf	(??___fladd+1)& (0+255),f,b
  9896  002572  338F               	rrcf	??___fladd& (0+255),f,b
  9897  002574  C08F  F087         	movff	??___fladd,___fladd@b
  9898  002578  C090  F088         	movff	??___fladd+1,___fladd@b+1
  9899  00257C  C091  F089         	movff	??___fladd+2,___fladd@b+2
  9900  002580  C092  F08A         	movff	??___fladd+3,___fladd@b+3
  9901  002584  2995               	incf	___fladd@bexp& (0+255),w,b
  9902  002586  A4D8               	btfss	status,2,c
  9903                           
  9904                           ; BSR set to: 0
  9905  002588  2B95               	incf	___fladd@bexp& (0+255),f,b
  9906  00258A                     l6029:
  9907                           
  9908                           ; BSR set to: 0
  9909  00258A  2995               	incf	___fladd@bexp& (0+255),w,b
  9910  00258C  B4D8               	btfsc	status,2,c
  9911  00258E  D003               	goto	u7320
  9912                           
  9913                           ; BSR set to: 0
  9914  002590  5195               	movf	___fladd@bexp& (0+255),w,b
  9915  002592  A4D8               	btfss	status,2,c
  9916  002594  D00D               	goto	l6037
  9917  002596                     u7320:
  9918                           
  9919                           ; BSR set to: 0
  9920  002596  0E00               	movlw	0
  9921  002598  6F87               	movwf	___fladd@b& (0+255),b
  9922  00259A  0E00               	movlw	0
  9923  00259C  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9924  00259E  0E00               	movlw	0
  9925  0025A0  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9926  0025A2  0E00               	movlw	0
  9927  0025A4  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9928  0025A6  5195               	movf	___fladd@bexp& (0+255),w,b
  9929  0025A8  A4D8               	btfss	status,2,c
  9930  0025AA  D002               	goto	l6037
  9931                           
  9932                           ; BSR set to: 0
  9933  0025AC  0E00               	movlw	0
  9934  0025AE  6F93               	movwf	___fladd@signs& (0+255),b
  9935  0025B0                     l6037:
  9936                           
  9937                           ; BSR set to: 0
  9938  0025B0  A195               	btfss	___fladd@bexp& (0+255),0,b
  9939  0025B2  D002               	goto	l6041
  9940                           
  9941                           ; BSR set to: 0
  9942  0025B4  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  9943  0025B6  D001               	goto	l6043
  9944  0025B8                     l6041:
  9945                           
  9946                           ; BSR set to: 0
  9947  0025B8  9F89               	bcf	(___fladd@b+2)& (0+255),7,b
  9948  0025BA                     l6043:
  9949                           
  9950                           ; BSR set to: 0
  9951  0025BA  90D8               	bcf	status,0,c
  9952  0025BC  3195               	rrcf	___fladd@bexp& (0+255),w,b
  9953  0025BE  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9954                           
  9955                           ; BSR set to: 0
  9956  0025C0  BF93               	btfsc	___fladd@signs& (0+255),7,b
  9957                           
  9958                           ; BSR set to: 0
  9959  0025C2  8F8A               	bsf	(___fladd@b+3)& (0+255),7,b
  9960                           
  9961                           ; BSR set to: 0
  9962  0025C4  C087  F087         	movff	___fladd@b,?___fladd
  9963  0025C8  C088  F088         	movff	___fladd@b+1,?___fladd+1
  9964  0025CC  C089  F089         	movff	___fladd@b+2,?___fladd+2
  9965  0025D0  C08A  F08A         	movff	___fladd@b+3,?___fladd+3
  9966                           
  9967                           ; BSR set to: 0
  9968  0025D4  0012               	return		;funcret
  9969  0025D6                     __end_of___fladd:
  9970                           	opt callstack 0
  9971                           
  9972 ;; *************** function _estadoDirreccion *****************
  9973 ;; Defined at:
  9974 ;;		line 181 in file "auto.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;  valor           1    wreg     unsigned char 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;  valor           1    6[BANK0 ] unsigned char 
  9979 ;;  angulo          2    4[BANK0 ] unsigned int 
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  2    0[BANK0 ] unsigned int 
  9982 ;; Registers used:
  9983 ;;		wreg, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9990 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9991 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9992 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9993 ;;Total ram usage:        7 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; Hardware stack levels required when called:    2
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_terminal
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text38
 10004  003DA8                     __ptext38:
 10005                           	opt callstack 0
 10006  003DA8                     _estadoDirreccion:
 10007                           	opt callstack 27
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;incstack = 0
 10011                           ;estadoDirreccion@valor stored from wreg
 10012  003DA8  0100               	movlb	0	; () banked
 10013  003DAA  6F66               	movwf	estadoDirreccion@valor& (0+255),b
 10014                           
 10015                           ;auto.c: 182:     unsigned int angulo = 90;
 10016  003DAC  0E00               	movlw	0
 10017  003DAE  0100               	movlb	0	; () banked
 10018  003DB0  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
 10019  003DB2  0E5A               	movlw	90
 10020  003DB4  6F64               	movwf	estadoDirreccion@angulo& (0+255),b
 10021                           
 10022                           ;auto.c: 183:     switch(servo_dirreccion){
 10023  003DB6  D023               	goto	l7415
 10024  003DB8                     l7395:
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;auto.c: 185:             if(valor == 1){
 10028  003DB8  0566               	decf	estadoDirreccion@valor& (0+255),w,b
 10029  003DBA  A4D8               	btfss	status,2,c
 10030  003DBC  D006               	goto	l7399
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;auto.c: 186:                 servo_dirreccion = 1;
 10034  003DBE  0E01               	movlw	1
 10035  003DC0  6E42               	movwf	_servo_dirreccion,c
 10036  003DC2                     
 10037                           ;auto.c: 187:                 angulo = 0;
 10038  003DC2  0E00               	movlw	0
 10039  003DC4  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
 10040  003DC6  0E00               	movlw	0
 10041  003DC8  D018               	goto	L17
 10042  003DCA                     l7399:
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;auto.c: 190:                 servo_dirreccion = 2;
 10046  003DCA  0E02               	movlw	2
 10047  003DCC  6E42               	movwf	_servo_dirreccion,c
 10048  003DCE  D012               	goto	l7411
 10049  003DD0                     l7401:
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;auto.c: 195:             if(valor != 1){
 10053  003DD0  0566               	decf	estadoDirreccion@valor& (0+255),w,b
 10054  003DD2  B4D8               	btfsc	status,2,c
 10055  003DD4  D7F6               	goto	L18
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;auto.c: 196:                 servo_dirreccion = 0;
 10059  003DD6  0E00               	movlw	0
 10060  003DD8  6E42               	movwf	_servo_dirreccion,c
 10061                           
 10062                           ;auto.c: 197:                 angulo = 90;
 10063  003DDA  0E00               	movlw	0
 10064  003DDC  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
 10065  003DDE  0E5A               	movlw	90
 10066  003DE0  D00C               	goto	L17
 10067  003DE2                     l7407:
 10068                           
 10069                           ; BSR set to: 0
 10070                           ;auto.c: 204:             if(valor == 1){
 10071  003DE2  0566               	decf	estadoDirreccion@valor& (0+255),w,b
 10072  003DE4  A4D8               	btfss	status,2,c
 10073  003DE6  D006               	goto	l7411
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;auto.c: 205:                 servo_dirreccion = 0;
 10077  003DE8  0E00               	movlw	0
 10078  003DEA  6E42               	movwf	_servo_dirreccion,c
 10079                           
 10080                           ;auto.c: 206:                 angulo = 85;
 10081  003DEC  0E00               	movlw	0
 10082  003DEE  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
 10083  003DF0  0E55               	movlw	85
 10084  003DF2  D003               	goto	L17
 10085  003DF4                     l7411:
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;auto.c: 209:                 angulo = 180;
 10089  003DF4  0E00               	movlw	0
 10090  003DF6  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
 10091  003DF8  0EB4               	movlw	180
 10092  003DFA                     L17:
 10093  003DFA  6F64               	movwf	estadoDirreccion@angulo& (0+255),b
 10094  003DFC  D011               	goto	l257
 10095  003DFE                     l7415:
 10096                           
 10097                           ; BSR set to: 0
 10098  003DFE  5042               	movf	_servo_dirreccion,w,c
 10099  003E00  6F62               	movwf	??_estadoDirreccion& (0+255),b
 10100  003E02  6B63               	clrf	(??_estadoDirreccion+1)& (0+255),b
 10101                           
 10102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10103                           ; Switch size 1, requested type "simple"
 10104                           ; Number of cases is 1, Range of values is 0 to 0
 10105                           ; switch strategies available:
 10106                           ; Name         Instructions Cycles
 10107                           ; simple_byte            4     3 (average)
 10108                           ;	Chosen strategy is simple_byte
 10109  003E04  5163               	movf	(??_estadoDirreccion+1)& (0+255),w,b
 10110  003E06  0A00               	xorlw	0	; case 0
 10111  003E08  A4D8               	btfss	status,2,c
 10112  003E0A  D00A               	goto	l257
 10113                           
 10114                           ; BSR set to: 0
 10115                           ; Switch size 1, requested type "simple"
 10116                           ; Number of cases is 3, Range of values is 0 to 2
 10117                           ; switch strategies available:
 10118                           ; Name         Instructions Cycles
 10119                           ; simple_byte           10     6 (average)
 10120                           ;	Chosen strategy is simple_byte
 10121  003E0C  5162               	movf	??_estadoDirreccion& (0+255),w,b
 10122  003E0E  0A00               	xorlw	0	; case 0
 10123  003E10  B4D8               	btfsc	status,2,c
 10124  003E12  D7D2               	goto	l7395
 10125  003E14  0A01               	xorlw	1	; case 1
 10126  003E16  B4D8               	btfsc	status,2,c
 10127  003E18  D7DB               	goto	l7401
 10128  003E1A  0A03               	xorlw	3	; case 2
 10129  003E1C  B4D8               	btfsc	status,2,c
 10130  003E1E  D7E1               	goto	l7407
 10131  003E20                     l257:
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;auto.c: 221:     return angulo;
 10135  003E20  C064  F060         	movff	estadoDirreccion@angulo,?_estadoDirreccion
 10136  003E24  C065  F061         	movff	estadoDirreccion@angulo+1,?_estadoDirreccion+1
 10137                           
 10138                           ; BSR set to: 0
 10139  003E28  0012               	return		;funcret
 10140  003E2A                     __end_of_estadoDirreccion:
 10141                           	opt callstack 0
 10142                           
 10143 ;; *************** function _enviarRS232 *****************
 10144 ;; Defined at:
 10145 ;;		line 52 in file "./../LIBRERIAS/funciones_auto.h"
 10146 ;; Parameters:    Size  Location     Type
 10147 ;;  valores         2    8[BANK0 ] PTR unsigned char 
 10148 ;;		 -> STR_6(8), STR_4(21), STR_3(20), terminal@texto(20), 
 10149 ;;		 -> STR_2(27), main@texto(8), main@text(6), 
 10150 ;; Auto vars:     Size  Location     Type
 10151 ;;  i               1   14[BANK0 ] unsigned char 
 10152 ;;  longitud_tex    2   12[BANK0 ] unsigned int 
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  1    wreg      void 
 10155 ;; Registers used:
 10156 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10162 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10163 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10164 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10165 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10166 ;;Total ram usage:        7 bytes
 10167 ;; Hardware stack levels used:    1
 10168 ;; Hardware stack levels required when called:    3
 10169 ;; This function calls:
 10170 ;;		_length
 10171 ;; This function is called by:
 10172 ;;		_main
 10173 ;;		_terminal
 10174 ;;		_rutinaEscape
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           	psect	text39
 10179  003EA6                     __ptext39:
 10180                           	opt callstack 0
 10181  003EA6                     _enviarRS232:
 10182                           	opt callstack 26
 10183                           
 10184                           ;./../LIBRERIAS/funciones_auto.h: 53:     unsigned int longitud_texto = length(valores);
 10185                           
 10186                           ; BSR set to: 0
 10187                           ;incstack = 0
 10188  003EA6  C068  F060         	movff	enviarRS232@valores,length@text
 10189  003EAA  C069  F061         	movff	enviarRS232@valores+1,length@text+1
 10190  003EAE  EC15  F01F         	call	_length	;wreg free
 10191  003EB2  C060  F06C         	movff	?_length,enviarRS232@longitud_texto
 10192  003EB6  C061  F06D         	movff	?_length+1,enviarRS232@longitud_texto+1
 10193                           
 10194                           ;./../LIBRERIAS/funciones_auto.h: 54:     for(unsigned char i = 0; i<longitud_texto; i++
      +                          ){
 10195  003EBA  0E00               	movlw	0
 10196  003EBC  0100               	movlb	0	; () banked
 10197  003EBE  6F6E               	movwf	enviarRS232@i& (0+255),b
 10198  003EC0  D023               	goto	l7375
 10199  003EC2                     l7369:
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;./../LIBRERIAS/funciones_auto.h: 55:         TXREG1 = valores[i];
 10203  003EC2  516E               	movf	enviarRS232@i& (0+255),w,b
 10204  003EC4  2568               	addwf	enviarRS232@valores& (0+255),w,b
 10205  003EC6  6F6A               	movwf	??_enviarRS232& (0+255),b
 10206  003EC8  0E00               	movlw	0
 10207  003ECA  2169               	addwfc	(enviarRS232@valores+1)& (0+255),w,b
 10208  003ECC  6F6B               	movwf	(??_enviarRS232+1)& (0+255),b
 10209  003ECE  C06A  FFF6         	movff	??_enviarRS232,tblptrl
 10210  003ED2  C06B  FFF7         	movff	??_enviarRS232+1,tblptrh
 10211  003ED6  0E00               	movlw	low (__smallconst shr (0+16))
 10212  003ED8  6EF8               	movwf	tblptru,c
 10213  003EDA  0E0E               	movlw	(high __ramtop+-1)
 10214  003EDC  64F7               	cpfsgt	tblptrh,c
 10215  003EDE  D003               	bra	u9527
 10216  003EE0  0008               	tblrd		*
 10217  003EE2  50F5               	movf	tablat,w,c
 10218  003EE4  D005               	bra	u9520
 10219  003EE6                     u9527:
 10220  003EE6  CFF6 FFE1          	movff	tblptrl,fsr1l
 10221  003EEA  CFF7 FFE2          	movff	tblptrh,fsr1h
 10222  003EEE  50E7               	movf	indf1,w,c
 10223  003EF0                     u9520:
 10224  003EF0  6EAE               	movwf	4014,c	;volatile
 10225                           
 10226                           ;./../LIBRERIAS/funciones_auto.h: 56:         _delay((unsigned long)((3)*(48000000/4000.
      +                          0)));
 10227  003EF2  0E2F               	movlw	47
 10228  003EF4  0100               	movlb	0	; () banked
 10229  003EF6  6F6A               	movwf	??_enviarRS232& (0+255),b
 10230  003EF8  0EBF               	movlw	191
 10231  003EFA                     u9697:
 10232  003EFA  2EE8               	decfsz	wreg,f,c
 10233  003EFC  D7FE               	bra	u9697
 10234  003EFE  2F6A               	decfsz	??_enviarRS232& (0+255),f,b
 10235  003F00  D7FC               	bra	u9697
 10236  003F02  D000               	nop2	
 10237                           
 10238                           ;./../LIBRERIAS/funciones_auto.h: 57:     }
 10239  003F04  0100               	movlb	0	; () banked
 10240  003F06  2B6E               	incf	enviarRS232@i& (0+255),f,b
 10241  003F08                     l7375:
 10242                           
 10243                           ; BSR set to: 0
 10244  003F08  516E               	movf	enviarRS232@i& (0+255),w,b
 10245  003F0A  6F6A               	movwf	??_enviarRS232& (0+255),b
 10246  003F0C  6B6B               	clrf	(??_enviarRS232+1)& (0+255),b
 10247  003F0E  516C               	movf	enviarRS232@longitud_texto& (0+255),w,b
 10248  003F10  5D6A               	subwf	??_enviarRS232& (0+255),w,b
 10249  003F12  516D               	movf	(enviarRS232@longitud_texto+1)& (0+255),w,b
 10250  003F14  596B               	subwfb	(??_enviarRS232+1)& (0+255),w,b
 10251  003F16  B0D8               	btfsc	status,0,c
 10252  003F18  0012               	return	
 10253  003F1A  D7D3               	goto	l7369
 10254  003F1C                     __end_of_enviarRS232:
 10255                           	opt callstack 0
 10256                           
 10257 ;; *************** function _length *****************
 10258 ;; Defined at:
 10259 ;;		line 60 in file "./../LIBRERIAS/funciones_auto.h"
 10260 ;; Parameters:    Size  Location     Type
 10261 ;;  text            2    0[BANK0 ] PTR unsigned char 
 10262 ;;		 -> STR_6(8), STR_4(21), STR_3(20), terminal@texto(20), 
 10263 ;;		 -> STR_2(27), main@texto(8), main@text(6), 
 10264 ;; Auto vars:     Size  Location     Type
 10265 ;;  longitud        2    4[BANK0 ] int 
 10266 ;;  i               1    7[BANK0 ] unsigned char 
 10267 ;;  dato            1    6[BANK0 ] unsigned char 
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  2    0[BANK0 ] int 
 10270 ;; Registers used:
 10271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10277 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10278 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10280 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10281 ;;Total ram usage:        8 bytes
 10282 ;; Hardware stack levels used:    1
 10283 ;; Hardware stack levels required when called:    2
 10284 ;; This function calls:
 10285 ;;		Nothing
 10286 ;; This function is called by:
 10287 ;;		_enviarRS232
 10288 ;; This function uses a non-reentrant model
 10289 ;;
 10290                           
 10291                           	psect	text40
 10292  003E2A                     __ptext40:
 10293                           	opt callstack 0
 10294  003E2A                     _length:
 10295                           	opt callstack 26
 10296                           
 10297                           ;./../LIBRERIAS/funciones_auto.h: 61:     unsigned char dato = text[0], i = 1;
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;incstack = 0
 10301  003E2A  C060  FFF6         	movff	length@text,tblptrl
 10302  003E2E  C061  FFF7         	movff	length@text+1,tblptrh
 10303  003E32  0E00               	movlw	low (__smallconst shr (0+16))
 10304  003E34  6EF8               	movwf	tblptru,c
 10305  003E36  0E0E               	movlw	(high __ramtop+-1)
 10306  003E38  64F7               	cpfsgt	tblptrh,c
 10307  003E3A  D003               	bra	u9387
 10308  003E3C  0008               	tblrd		*
 10309  003E3E  50F5               	movf	tablat,w,c
 10310  003E40  D005               	bra	u9380
 10311  003E42                     u9387:
 10312  003E42  CFF6 FFE1          	movff	tblptrl,fsr1l
 10313  003E46  CFF7 FFE2          	movff	tblptrh,fsr1h
 10314  003E4A  50E7               	movf	indf1,w,c
 10315  003E4C                     u9380:
 10316  003E4C  0100               	movlb	0	; () banked
 10317  003E4E  6F66               	movwf	length@dato& (0+255),b
 10318                           
 10319                           ; BSR set to: 0
 10320  003E50  0E01               	movlw	1
 10321  003E52  6F67               	movwf	length@i& (0+255),b
 10322                           
 10323                           ; BSR set to: 0
 10324                           ;./../LIBRERIAS/funciones_auto.h: 62:     int longitud = 0;
 10325  003E54  0E00               	movlw	0
 10326  003E56  6F65               	movwf	(length@longitud+1)& (0+255),b
 10327  003E58  0E00               	movlw	0
 10328  003E5A  6F64               	movwf	length@longitud& (0+255),b
 10329                           
 10330                           ;./../LIBRERIAS/funciones_auto.h: 63:     while(dato != '\0'){
 10331  003E5C  D01C               	goto	l7237
 10332  003E5E                     l7231:
 10333                           
 10334                           ; BSR set to: 0
 10335                           ;./../LIBRERIAS/funciones_auto.h: 64:         dato = text[i];
 10336  003E5E  5167               	movf	length@i& (0+255),w,b
 10337  003E60  2560               	addwf	length@text& (0+255),w,b
 10338  003E62  6F62               	movwf	??_length& (0+255),b
 10339  003E64  0E00               	movlw	0
 10340  003E66  2161               	addwfc	(length@text+1)& (0+255),w,b
 10341  003E68  6F63               	movwf	(??_length+1)& (0+255),b
 10342  003E6A  C062  FFF6         	movff	??_length,tblptrl
 10343  003E6E  C063  FFF7         	movff	??_length+1,tblptrh
 10344  003E72  0E00               	movlw	low (__smallconst shr (0+16))
 10345  003E74  6EF8               	movwf	tblptru,c
 10346  003E76  0E0E               	movlw	(high __ramtop+-1)
 10347  003E78  64F7               	cpfsgt	tblptrh,c
 10348  003E7A  D003               	bra	u9397
 10349  003E7C  0008               	tblrd		*
 10350  003E7E  50F5               	movf	tablat,w,c
 10351  003E80  D005               	bra	u9390
 10352  003E82                     u9397:
 10353  003E82  CFF6 FFE1          	movff	tblptrl,fsr1l
 10354  003E86  CFF7 FFE2          	movff	tblptrh,fsr1h
 10355  003E8A  50E7               	movf	indf1,w,c
 10356  003E8C                     u9390:
 10357  003E8C  0100               	movlb	0	; () banked
 10358  003E8E  6F66               	movwf	length@dato& (0+255),b
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;./../LIBRERIAS/funciones_auto.h: 65:         i++;
 10362  003E90  2B67               	incf	length@i& (0+255),f,b
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;./../LIBRERIAS/funciones_auto.h: 66:         longitud++;
 10366  003E92  4B64               	infsnz	length@longitud& (0+255),f,b
 10367  003E94  2B65               	incf	(length@longitud+1)& (0+255),f,b
 10368  003E96                     l7237:
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;./../LIBRERIAS/funciones_auto.h: 63:     while(dato != '\0'){
 10372  003E96  5166               	movf	length@dato& (0+255),w,b
 10373  003E98  A4D8               	btfss	status,2,c
 10374  003E9A  D7E1               	goto	l7231
 10375                           
 10376                           ; BSR set to: 0
 10377                           ;./../LIBRERIAS/funciones_auto.h: 68:     return longitud;
 10378  003E9C  C064  F060         	movff	length@longitud,?_length
 10379  003EA0  C065  F061         	movff	length@longitud+1,?_length+1
 10380                           
 10381                           ; BSR set to: 0
 10382  003EA4  0012               	return		;funcret
 10383  003EA6                     __end_of_length:
 10384                           	opt callstack 0
 10385                           
 10386 ;; *************** function _encenderMotor *****************
 10387 ;; Defined at:
 10388 ;;		line 35 in file "./../LIBRERIAS/funciones_auto.h"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;		None
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;		None
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      void 
 10395 ;; Registers used:
 10396 ;;		wreg, status,2, status,0, cstack
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10406 ;;Total ram usage:        0 bytes
 10407 ;; Hardware stack levels used:    1
 10408 ;; Hardware stack levels required when called:    3
 10409 ;; This function calls:
 10410 ;;		_definirVelocidad
 10411 ;;		_rutinaArranque
 10412 ;; This function is called by:
 10413 ;;		_terminal
 10414 ;;		_rutinaEscape
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           	psect	text41
 10419  0044CE                     __ptext41:
 10420                           	opt callstack 0
 10421  0044CE                     _encenderMotor:
 10422                           	opt callstack 26
 10423                           
 10424                           ;./../LIBRERIAS/funciones_auto.h: 36:     rutinaArranque();
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;incstack = 0
 10428  0044CE  ECD8  F021         	call	_rutinaArranque	;wreg free
 10429                           
 10430                           ;./../LIBRERIAS/funciones_auto.h: 37:     definirVelocidad();
 10431  0044D2  EC5A  F021         	call	_definirVelocidad	;wreg free
 10432                           
 10433                           ;./../LIBRERIAS/funciones_auto.h: 38:     motor = 1;
 10434  0044D6  0E01               	movlw	1
 10435  0044D8  6E44               	movwf	_motor,c
 10436  0044DA  0012               	return		;funcret
 10437  0044DC                     __end_of_encenderMotor:
 10438                           	opt callstack 0
 10439                           
 10440 ;; *************** function _rutinaArranque *****************
 10441 ;; Defined at:
 10442 ;;		line 23 in file "./../LIBRERIAS/funciones_auto.h"
 10443 ;; Parameters:    Size  Location     Type
 10444 ;;		None
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;		None
 10447 ;; Return value:  Size  Location     Type
 10448 ;;                  1    wreg      void 
 10449 ;; Registers used:
 10450 ;;		wreg, status,2
 10451 ;; Tracked objects:
 10452 ;;		On entry : 0/0
 10453 ;;		On exit  : 0/0
 10454 ;;		Unchanged: 0/0
 10455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10458 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10459 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10460 ;;Total ram usage:        2 bytes
 10461 ;; Hardware stack levels used:    1
 10462 ;; Hardware stack levels required when called:    2
 10463 ;; This function calls:
 10464 ;;		Nothing
 10465 ;; This function is called by:
 10466 ;;		_encenderMotor
 10467 ;; This function uses a non-reentrant model
 10468 ;;
 10469                           
 10470                           	psect	text42
 10471  0043B0                     __ptext42:
 10472                           	opt callstack 0
 10473  0043B0                     _rutinaArranque:
 10474                           	opt callstack 26
 10475                           
 10476                           ;./../LIBRERIAS/funciones_auto.h: 24:     CCP7CONbits.DC7B = cicle_90 & 0x0003;
 10477                           
 10478                           ;incstack = 0
 10479  0043B0  010F               	movlb	15	; () banked
 10480  0043B2  5109               	movf	9,w,b	;volatile
 10481  0043B4  0BCF               	andlw	-49
 10482  0043B6  0920               	iorlw	32
 10483  0043B8  6F09               	movwf	9,b	;volatile
 10484                           
 10485                           ;./../LIBRERIAS/funciones_auto.h: 25:     CCPR7L = cicle_90>>2;
 10486  0043BA  0E70               	movlw	112
 10487  0043BC  6F0A               	movwf	10,b	;volatile
 10488                           
 10489                           ; BSR set to: 15
 10490                           ;./../LIBRERIAS/funciones_auto.h: 26:     T2CONbits.TMR2ON = 1;
 10491  0043BE  84CA               	bsf	4042,2,c	;volatile
 10492                           
 10493                           ; BSR set to: 15
 10494                           ;./../LIBRERIAS/funciones_auto.h: 27:     _delay((unsigned long)((50)*(48000000/4000.0))
      +                          );
 10495  0043C0  0E04               	movlw	4
 10496  0043C2  0100               	movlb	0	; () banked
 10497  0043C4  6F61               	movwf	(??_rutinaArranque+1)& (0+255),b
 10498  0043C6  0E0C               	movlw	12
 10499  0043C8  6F60               	movwf	??_rutinaArranque& (0+255),b
 10500  0043CA  0E33               	movlw	51
 10501  0043CC                     u9707:
 10502  0043CC  2EE8               	decfsz	wreg,f,c
 10503  0043CE  D7FE               	bra	u9707
 10504  0043D0  2F60               	decfsz	??_rutinaArranque& (0+255),f,b
 10505  0043D2  D7FC               	bra	u9707
 10506  0043D4  2F61               	decfsz	(??_rutinaArranque+1)& (0+255),f,b
 10507  0043D6  D7FA               	bra	u9707
 10508  0043D8  D000               	nop2	
 10509  0043DA  0012               	return		;funcret
 10510  0043DC                     __end_of_rutinaArranque:
 10511                           	opt callstack 0
 10512                           
 10513 ;; *************** function _dirreccion *****************
 10514 ;; Defined at:
 10515 ;;		line 224 in file "auto.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  degree          2    0[BANK0 ] unsigned int 
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;  tiempo_1        1    4[BANK0 ] unsigned char 
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  1    wreg      void 
 10522 ;; Registers used:
 10523 ;;		wreg, status,2, status,0
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10529 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10531 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10532 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10533 ;;Total ram usage:        5 bytes
 10534 ;; Hardware stack levels used:    1
 10535 ;; Hardware stack levels required when called:    2
 10536 ;; This function calls:
 10537 ;;		Nothing
 10538 ;; This function is called by:
 10539 ;;		_terminal
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text43
 10544  003C16                     __ptext43:
 10545                           	opt callstack 0
 10546  003C16                     _dirreccion:
 10547                           	opt callstack 27
 10548                           
 10549                           ;auto.c: 225:     unsigned char tiempo_1 = 61;
 10550                           
 10551                           ;incstack = 0
 10552  003C16  0E3D               	movlw	61
 10553  003C18  0100               	movlb	0	; () banked
 10554  003C1A  6F64               	movwf	dirreccion@tiempo_1& (0+255),b
 10555                           
 10556                           ;auto.c: 226:     contador_timer_5 = 0;
 10557  003C1C  0E00               	movlw	0
 10558  003C1E  6E3D               	movwf	_contador_timer_5+1,c
 10559  003C20  0E00               	movlw	0
 10560  003C22  6E3C               	movwf	_contador_timer_5,c
 10561                           
 10562                           ;auto.c: 227:     parar = 0;
 10563  003C24  0E00               	movlw	0
 10564  003C26  6E3F               	movwf	_parar+1,c
 10565  003C28  0E00               	movlw	0
 10566  003C2A  6E3E               	movwf	_parar,c
 10567                           
 10568                           ;auto.c: 228:     switch(degree){
 10569  003C2C  D009               	goto	l7433
 10570  003C2E                     l7423:
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;auto.c: 230:             tiempo_1 = 60;
 10574  003C2E  0E3C               	movlw	60
 10575  003C30  D005               	goto	L21
 10576  003C32                     l7425:
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;auto.c: 233:             tiempo_1 = 57;
 10580  003C32  0E39               	movlw	57
 10581  003C34  D003               	goto	L21
 10582  003C36                     l7427:
 10583                           
 10584                           ; BSR set to: 0
 10585                           ;auto.c: 236:             tiempo_1 = 67;
 10586  003C36  0E43               	movlw	67
 10587  003C38  D001               	goto	L21
 10588  003C3A                     l7429:
 10589                           
 10590                           ; BSR set to: 0
 10591                           ;auto.c: 239:             tiempo_1 = 50;
 10592  003C3A  0E32               	movlw	50
 10593  003C3C                     L21:
 10594  003C3C  6F64               	movwf	dirreccion@tiempo_1& (0+255),b
 10595                           
 10596                           ;auto.c: 240:             break;
 10597  003C3E  D015               	goto	l269
 10598  003C40                     l7433:
 10599                           
 10600                           ; BSR set to: 0
 10601  003C40  C060  F062         	movff	dirreccion@degree,??_dirreccion
 10602  003C44  C061  F063         	movff	dirreccion@degree+1,??_dirreccion+1
 10603                           
 10604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10605                           ; Switch size 1, requested type "simple"
 10606                           ; Number of cases is 1, Range of values is 0 to 0
 10607                           ; switch strategies available:
 10608                           ; Name         Instructions Cycles
 10609                           ; simple_byte            4     3 (average)
 10610                           ;	Chosen strategy is simple_byte
 10611  003C48  5163               	movf	(??_dirreccion+1)& (0+255),w,b
 10612  003C4A  0A00               	xorlw	0	; case 0
 10613  003C4C  A4D8               	btfss	status,2,c
 10614  003C4E  D00D               	goto	l269
 10615                           
 10616                           ; BSR set to: 0
 10617                           ; Switch size 1, requested type "simple"
 10618                           ; Number of cases is 4, Range of values is 0 to 180
 10619                           ; switch strategies available:
 10620                           ; Name         Instructions Cycles
 10621                           ; simple_byte           13     7 (average)
 10622                           ;	Chosen strategy is simple_byte
 10623  003C50  5162               	movf	??_dirreccion& (0+255),w,b
 10624  003C52  0A00               	xorlw	0	; case 0
 10625  003C54  B4D8               	btfsc	status,2,c
 10626  003C56  D7EF               	goto	l7427
 10627  003C58  0A55               	xorlw	85	; case 85
 10628  003C5A  B4D8               	btfsc	status,2,c
 10629  003C5C  D7E8               	goto	l7423
 10630  003C5E  0A0F               	xorlw	15	; case 90
 10631  003C60  B4D8               	btfsc	status,2,c
 10632  003C62  D7E7               	goto	l7425
 10633  003C64  0AEE               	xorlw	238	; case 180
 10634  003C66  B4D8               	btfsc	status,2,c
 10635  003C68  D7E8               	goto	l7429
 10636  003C6A                     l269:
 10637                           
 10638                           ; BSR set to: 0
 10639                           ;auto.c: 242:     if(PORTDbits.RD4 != 1){
 10640  003C6A  B883               	btfsc	3971,4,c	;volatile
 10641  003C6C  D005               	goto	l7437
 10642                           
 10643                           ; BSR set to: 0
 10644                           ;auto.c: 243:         TIME_MAX = tiempo_1;
 10645  003C6E  C064  F047         	movff	dirreccion@tiempo_1,_TIME_MAX
 10646  003C72  6A48               	clrf	_TIME_MAX+1,c
 10647                           
 10648                           ;auto.c: 244:         PORTDbits.RD4 = 1;
 10649  003C74  8883               	bsf	3971,4,c	;volatile
 10650                           
 10651                           ;auto.c: 245:     }
 10652  003C76  D009               	goto	l7441
 10653  003C78                     l7437:
 10654                           
 10655                           ; BSR set to: 0
 10656                           ;auto.c: 247:         TIME_MAX = 1000 - tiempo_1;
 10657  003C78  5164               	movf	dirreccion@tiempo_1& (0+255),w,b
 10658  003C7A  08E8               	sublw	232
 10659  003C7C  6E47               	movwf	_TIME_MAX,c
 10660  003C7E  0E00               	movlw	0
 10661  003C80  A0D8               	btfss	status,0,c
 10662  003C82  2AE8               	incf	wreg,f,c
 10663  003C84  0803               	sublw	3
 10664  003C86  6E48               	movwf	_TIME_MAX+1,c
 10665                           
 10666                           ; BSR set to: 0
 10667                           ;auto.c: 248:         PORTDbits.RD4 = 0;
 10668  003C88  9883               	bcf	3971,4,c	;volatile
 10669  003C8A                     l7441:
 10670                           
 10671                           ; BSR set to: 0
 10672                           ;auto.c: 250:     contador_timer_5 = 0;
 10673  003C8A  0E00               	movlw	0
 10674  003C8C  6E3D               	movwf	_contador_timer_5+1,c
 10675  003C8E  0E00               	movlw	0
 10676  003C90  6E3C               	movwf	_contador_timer_5,c
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;auto.c: 251:     bandera_servo = 0;
 10680  003C92  0E00               	movlw	0
 10681  003C94  0101               	movlb	1	; () banked
 10682  003C96  6F20               	movwf	_bandera_servo& (0+255),b
 10683                           
 10684                           ; BSR set to: 1
 10685                           ;auto.c: 252:     T5CONbits.TMR5ON = 1;
 10686  003C98  010F               	movlb	15	; () banked
 10687  003C9A  8122               	bsf	34,0,b	;volatile
 10688                           
 10689                           ; BSR set to: 15
 10690  003C9C  0012               	return		;funcret
 10691  003C9E                     __end_of_dirreccion:
 10692                           	opt callstack 0
 10693                           
 10694 ;; *************** function _cambiarPWM *****************
 10695 ;; Defined at:
 10696 ;;		line 175 in file "auto.c"
 10697 ;; Parameters:    Size  Location     Type
 10698 ;;		None
 10699 ;; Auto vars:     Size  Location     Type
 10700 ;;		None
 10701 ;; Return value:  Size  Location     Type
 10702 ;;                  1    wreg      void 
 10703 ;; Registers used:
 10704 ;;		wreg, status,2, status,0, cstack
 10705 ;; Tracked objects:
 10706 ;;		On entry : 0/0
 10707 ;;		On exit  : 0/0
 10708 ;;		Unchanged: 0/0
 10709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10714 ;;Total ram usage:        0 bytes
 10715 ;; Hardware stack levels used:    1
 10716 ;; Hardware stack levels required when called:    3
 10717 ;; This function calls:
 10718 ;;		_definirVelocidad
 10719 ;; This function is called by:
 10720 ;;		_terminal
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           	psect	text44
 10725  0044DC                     __ptext44:
 10726                           	opt callstack 0
 10727  0044DC                     _cambiarPWM:
 10728                           	opt callstack 26
 10729                           
 10730                           ;auto.c: 176:     if(motor == 1){
 10731                           
 10732                           ; BSR set to: 15
 10733                           ;incstack = 0
 10734  0044DC  0444               	decf	_motor,w,c
 10735  0044DE  A4D8               	btfss	status,2,c
 10736  0044E0  0012               	return	
 10737                           
 10738                           ;auto.c: 177:         definirVelocidad();
 10739  0044E2  EC5A  F021         	call	_definirVelocidad	;wreg free
 10740  0044E6  0012               	return		;funcret
 10741  0044E8                     __end_of_cambiarPWM:
 10742                           	opt callstack 0
 10743                           
 10744 ;; *************** function _definirVelocidad *****************
 10745 ;; Defined at:
 10746 ;;		line 41 in file "./../LIBRERIAS/funciones_auto.h"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;		None
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  1    wreg      void 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10762 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10763 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10764 ;;Total ram usage:        2 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; Hardware stack levels required when called:    2
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		_encenderMotor
 10771 ;;		_cambiarPWM
 10772 ;;		_rutinaEscape
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           
 10776                           	psect	text45
 10777  0042B4                     __ptext45:
 10778                           	opt callstack 0
 10779  0042B4                     _definirVelocidad:
 10780                           	opt callstack 26
 10781                           
 10782                           ;./../LIBRERIAS/funciones_auto.h: 42:     CCP7CONbits.DC7B = velocidad & 0x0003;
 10783                           
 10784                           ;incstack = 0
 10785  0042B4  C049  F060         	movff	_velocidad,??_definirVelocidad
 10786  0042B8  0E03               	movlw	3
 10787  0042BA  0100               	movlb	0	; () banked
 10788  0042BC  1760               	andwf	??_definirVelocidad& (0+255),f,b
 10789  0042BE  3B60               	swapf	??_definirVelocidad& (0+255),f,b
 10790  0042C0  010F               	movlb	15	; () banked
 10791  0042C2  5109               	movf	9,w,b	;volatile
 10792  0042C4  0100               	movlb	0	; () banked
 10793  0042C6  1960               	xorwf	??_definirVelocidad& (0+255),w,b
 10794  0042C8  0BCF               	andlw	-49
 10795  0042CA  1960               	xorwf	??_definirVelocidad& (0+255),w,b
 10796  0042CC  010F               	movlb	15	; () banked
 10797  0042CE  6F09               	movwf	9,b	;volatile
 10798                           
 10799                           ;./../LIBRERIAS/funciones_auto.h: 43:     CCPR7L = velocidad>>2;
 10800  0042D0  C049  F060         	movff	_velocidad,??_definirVelocidad
 10801  0042D4  C04A  F061         	movff	_velocidad+1,??_definirVelocidad+1
 10802  0042D8  0100               	movlb	0	; () banked
 10803  0042DA  90D8               	bcf	status,0,c
 10804  0042DC  3361               	rrcf	(??_definirVelocidad+1)& (0+255),f,b
 10805  0042DE  3360               	rrcf	??_definirVelocidad& (0+255),f,b
 10806  0042E0  90D8               	bcf	status,0,c
 10807  0042E2  3361               	rrcf	(??_definirVelocidad+1)& (0+255),f,b
 10808  0042E4  3360               	rrcf	??_definirVelocidad& (0+255),f,b
 10809  0042E6  5160               	movf	??_definirVelocidad& (0+255),w,b
 10810  0042E8  010F               	movlb	15	; () banked
 10811  0042EA  6F0A               	movwf	10,b	;volatile
 10812                           
 10813                           ; BSR set to: 15
 10814  0042EC  0012               	return		;funcret
 10815  0042EE                     __end_of_definirVelocidad:
 10816                           	opt callstack 0
 10817                           
 10818 ;; *************** function _atras *****************
 10819 ;; Defined at:
 10820 ;;		line 281 in file "auto.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;		None
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;		None
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  1    wreg      void 
 10827 ;; Registers used:
 10828 ;;		None
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10838 ;;Total ram usage:        0 bytes
 10839 ;; Hardware stack levels used:    1
 10840 ;; Hardware stack levels required when called:    2
 10841 ;; This function calls:
 10842 ;;		Nothing
 10843 ;; This function is called by:
 10844 ;;		_terminal
 10845 ;;		_rutinaEscape
 10846 ;; This function uses a non-reentrant model
 10847 ;;
 10848                           
 10849                           	psect	text46
 10850  0044E8                     __ptext46:
 10851                           	opt callstack 0
 10852  0044E8                     _atras:
 10853                           	opt callstack 27
 10854                           
 10855                           ;auto.c: 282:     PORTAbits.RA0 = 0;
 10856                           
 10857                           ; BSR set to: 15
 10858                           ;incstack = 0
 10859  0044E8  9080               	bcf	3968,0,c	;volatile
 10860                           
 10861                           ;auto.c: 283:     PORTAbits.RA1 = 0;
 10862  0044EA  9280               	bcf	3968,1,c	;volatile
 10863                           
 10864                           ;auto.c: 284:     PORTAbits.RA0 = 0;
 10865  0044EC  9080               	bcf	3968,0,c	;volatile
 10866                           
 10867                           ;auto.c: 285:     PORTAbits.RA1 = 1;
 10868  0044EE  8280               	bsf	3968,1,c	;volatile
 10869  0044F0  0012               	return		;funcret
 10870  0044F2                     __end_of_atras:
 10871                           	opt callstack 0
 10872                           
 10873 ;; *************** function _adelante *****************
 10874 ;; Defined at:
 10875 ;;		line 274 in file "auto.c"
 10876 ;; Parameters:    Size  Location     Type
 10877 ;;		None
 10878 ;; Auto vars:     Size  Location     Type
 10879 ;;		None
 10880 ;; Return value:  Size  Location     Type
 10881 ;;                  1    wreg      void 
 10882 ;; Registers used:
 10883 ;;		None
 10884 ;; Tracked objects:
 10885 ;;		On entry : 0/0
 10886 ;;		On exit  : 0/0
 10887 ;;		Unchanged: 0/0
 10888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10893 ;;Total ram usage:        0 bytes
 10894 ;; Hardware stack levels used:    1
 10895 ;; Hardware stack levels required when called:    2
 10896 ;; This function calls:
 10897 ;;		Nothing
 10898 ;; This function is called by:
 10899 ;;		_terminal
 10900 ;;		_rutinaEscape
 10901 ;; This function uses a non-reentrant model
 10902 ;;
 10903                           
 10904                           	psect	text47
 10905  0044F2                     __ptext47:
 10906                           	opt callstack 0
 10907  0044F2                     _adelante:
 10908                           	opt callstack 27
 10909                           
 10910                           ;auto.c: 275:     PORTAbits.RA0 = 0;
 10911                           
 10912                           ;incstack = 0
 10913  0044F2  9080               	bcf	3968,0,c	;volatile
 10914                           
 10915                           ;auto.c: 276:     PORTAbits.RA1 = 0;
 10916  0044F4  9280               	bcf	3968,1,c	;volatile
 10917                           
 10918                           ;auto.c: 277:     PORTAbits.RA0 = 1;
 10919  0044F6  8080               	bsf	3968,0,c	;volatile
 10920                           
 10921                           ;auto.c: 278:     PORTAbits.RA1 = 0;
 10922  0044F8  9280               	bcf	3968,1,c	;volatile
 10923  0044FA  0012               	return		;funcret
 10924  0044FC                     __end_of_adelante:
 10925                           	opt callstack 0
 10926                           
 10927 ;; *************** function _configuracionInicial *****************
 10928 ;; Defined at:
 10929 ;;		line 127 in file "auto.c"
 10930 ;; Parameters:    Size  Location     Type
 10931 ;;		None
 10932 ;; Auto vars:     Size  Location     Type
 10933 ;;		None
 10934 ;; Return value:  Size  Location     Type
 10935 ;;                  1    wreg      void 
 10936 ;; Registers used:
 10937 ;;		wreg, status,2, cstack
 10938 ;; Tracked objects:
 10939 ;;		On entry : 0/0
 10940 ;;		On exit  : 0/0
 10941 ;;		Unchanged: 0/0
 10942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10947 ;;Total ram usage:        0 bytes
 10948 ;; Hardware stack levels used:    1
 10949 ;; Hardware stack levels required when called:    3
 10950 ;; This function calls:
 10951 ;;		_configurarInterrupciones
 10952 ;;		_configurarPWM7
 10953 ;;		_configurarPuertos
 10954 ;;		_configurarRS232
 10955 ;;		_configurarRS232US100
 10956 ;;		_configurarTMR5
 10957 ;; This function is called by:
 10958 ;;		_main
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           	psect	text48
 10963  004466                     __ptext48:
 10964                           	opt callstack 0
 10965  004466                     _configuracionInicial:
 10966                           	opt callstack 27
 10967                           
 10968                           ;auto.c: 128:     configurarPuertos();
 10969                           
 10970                           ;incstack = 0
 10971  004466  EC5F  F022         	call	_configurarPuertos	;wreg free
 10972                           
 10973                           ;auto.c: 129:     configurarPWM7();
 10974  00446A  EC13  F022         	call	_configurarPWM7	;wreg free
 10975                           
 10976                           ;auto.c: 130:     configurarInterrupciones();
 10977  00446E  EC23  F022         	call	_configurarInterrupciones	;wreg free
 10978                           
 10979                           ;auto.c: 131:     configurarRS232();
 10980  004472  EC40  F022         	call	_configurarRS232	;wreg free
 10981                           
 10982                           ;auto.c: 132:     configurarTMR5();
 10983  004476  EC4C  F022         	call	_configurarTMR5	;wreg free
 10984                           
 10985                           ;auto.c: 133:     configurarRS232US100();
 10986  00447A  EC02  F022         	call	_configurarRS232US100	;wreg free
 10987  00447E  0012               	return		;funcret
 10988  004480                     __end_of_configuracionInicial:
 10989                           	opt callstack 0
 10990                           
 10991 ;; *************** function _configurarTMR5 *****************
 10992 ;; Defined at:
 10993 ;;		line 48 in file "./../LIBRERIAS/configuracion_auto.h"
 10994 ;; Parameters:    Size  Location     Type
 10995 ;;		None
 10996 ;; Auto vars:     Size  Location     Type
 10997 ;;		None
 10998 ;; Return value:  Size  Location     Type
 10999 ;;                  1    wreg      void 
 11000 ;; Registers used:
 11001 ;;		wreg, status,2
 11002 ;; Tracked objects:
 11003 ;;		On entry : 0/0
 11004 ;;		On exit  : 0/0
 11005 ;;		Unchanged: 0/0
 11006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11011 ;;Total ram usage:        0 bytes
 11012 ;; Hardware stack levels used:    1
 11013 ;; Hardware stack levels required when called:    2
 11014 ;; This function calls:
 11015 ;;		Nothing
 11016 ;; This function is called by:
 11017 ;;		_configuracionInicial
 11018 ;; This function uses a non-reentrant model
 11019 ;;
 11020                           
 11021                           	psect	text49
 11022  004498                     __ptext49:
 11023                           	opt callstack 0
 11024  004498                     _configurarTMR5:
 11025                           	opt callstack 27
 11026                           
 11027                           ;./../LIBRERIAS/configuracion_auto.h: 49:     TRISDbits.TRISD4 = 0;
 11028                           
 11029                           ;incstack = 0
 11030  004498  9895               	bcf	3989,4,c	;volatile
 11031                           
 11032                           ;./../LIBRERIAS/configuracion_auto.h: 50:     PORTDbits.RD4 = 0;
 11033  00449A  9883               	bcf	3971,4,c	;volatile
 11034                           
 11035                           ;./../LIBRERIAS/configuracion_auto.h: 51:     T5CON = 0x32;
 11036  00449C  0E32               	movlw	50
 11037  00449E  010F               	movlb	15	; () banked
 11038  0044A0  6F22               	movwf	34,b	;volatile
 11039                           
 11040                           ; BSR set to: 15
 11041                           ;./../LIBRERIAS/configuracion_auto.h: 52:     TMR5H = 0xFF;
 11042  0044A2  6924               	setf	36,b	;volatile
 11043                           
 11044                           ;./../LIBRERIAS/configuracion_auto.h: 53:     TMR5L = 0xE2;
 11045  0044A4  0EE2               	movlw	226
 11046  0044A6  6F23               	movwf	35,b	;volatile
 11047                           
 11048                           ; BSR set to: 15
 11049                           ;./../LIBRERIAS/configuracion_auto.h: 54:     PIE5bits.TMR5IE = 1;
 11050  0044A8  8491               	bsf	3985,2,c	;volatile
 11051                           
 11052                           ; BSR set to: 15
 11053                           ;./../LIBRERIAS/configuracion_auto.h: 55:     PIR5bits.TMR5IF = 0;
 11054  0044AA  9498               	bcf	3992,2,c	;volatile
 11055                           
 11056                           ; BSR set to: 15
 11057  0044AC  0012               	return		;funcret
 11058  0044AE                     __end_of_configurarTMR5:
 11059                           	opt callstack 0
 11060                           
 11061 ;; *************** function _configurarRS232US100 *****************
 11062 ;; Defined at:
 11063 ;;		line 59 in file "./../LIBRERIAS/configuracion_auto.h"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;		None
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;		None
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  1    wreg      void 
 11070 ;; Registers used:
 11071 ;;		wreg, status,2
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11081 ;;Total ram usage:        0 bytes
 11082 ;; Hardware stack levels used:    1
 11083 ;; Hardware stack levels required when called:    2
 11084 ;; This function calls:
 11085 ;;		Nothing
 11086 ;; This function is called by:
 11087 ;;		_configuracionInicial
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091                           	psect	text50
 11092  004404                     __ptext50:
 11093                           	opt callstack 0
 11094  004404                     _configurarRS232US100:
 11095                           	opt callstack 27
 11096                           
 11097                           ;./../LIBRERIAS/configuracion_auto.h: 60:     TRISDbits.TRISD6 = 0;
 11098                           
 11099                           ; BSR set to: 15
 11100                           ;incstack = 0
 11101  004404  9C95               	bcf	3989,6,c	;volatile
 11102                           
 11103                           ;./../LIBRERIAS/configuracion_auto.h: 61:     TRISDbits.TRISD7 = 1;
 11104  004406  8E95               	bsf	3989,7,c	;volatile
 11105                           
 11106                           ;./../LIBRERIAS/configuracion_auto.h: 62:     RPOR23 = 6;
 11107  004408  0E06               	movlw	6
 11108  00440A  010E               	movlb	14	; () banked
 11109  00440C  6FD7               	movwf	215,b	;volatile
 11110                           
 11111                           ;./../LIBRERIAS/configuracion_auto.h: 63:     RPINR16 = 24;
 11112  00440E  0E18               	movlw	24
 11113  004410  6FF7               	movwf	247,b	;volatile
 11114                           
 11115                           ;./../LIBRERIAS/configuracion_auto.h: 64:     TXSTA2 = 0x22;
 11116  004412  0E22               	movlw	34
 11117  004414  6EA8               	movwf	4008,c	;volatile
 11118                           
 11119                           ;./../LIBRERIAS/configuracion_auto.h: 65:     RCSTA2 = 0x90;
 11120  004416  0E90               	movlw	144
 11121  004418  6E9C               	movwf	3996,c	;volatile
 11122                           
 11123                           ; BSR set to: 14
 11124                           ;./../LIBRERIAS/configuracion_auto.h: 66:     BAUDCON2bits.BRG16 = 0;
 11125  00441A  967C               	bcf	3964,3,c	;volatile
 11126                           
 11127                           ;./../LIBRERIAS/configuracion_auto.h: 67:     SPBRG2 = 77;
 11128  00441C  0E4D               	movlw	77
 11129  00441E  6EAB               	movwf	4011,c	;volatile
 11130                           
 11131                           ; BSR set to: 14
 11132                           ;./../LIBRERIAS/configuracion_auto.h: 68:     PIR3bits.RC2IF = 0;
 11133  004420  9AA4               	bcf	4004,5,c	;volatile
 11134                           
 11135                           ; BSR set to: 14
 11136                           ;./../LIBRERIAS/configuracion_auto.h: 69:     PIE3bits.RC2IE = 1;
 11137  004422  8AA3               	bsf	4003,5,c	;volatile
 11138                           
 11139                           ; BSR set to: 14
 11140  004424  0012               	return		;funcret
 11141  004426                     __end_of_configurarRS232US100:
 11142                           	opt callstack 0
 11143                           
 11144 ;; *************** function _configurarRS232 *****************
 11145 ;; Defined at:
 11146 ;;		line 37 in file "./../LIBRERIAS/configuracion_auto.h"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;		None
 11149 ;; Auto vars:     Size  Location     Type
 11150 ;;		None
 11151 ;; Return value:  Size  Location     Type
 11152 ;;                  1    wreg      void 
 11153 ;; Registers used:
 11154 ;;		wreg, status,2
 11155 ;; Tracked objects:
 11156 ;;		On entry : 0/0
 11157 ;;		On exit  : 0/0
 11158 ;;		Unchanged: 0/0
 11159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11164 ;;Total ram usage:        0 bytes
 11165 ;; Hardware stack levels used:    1
 11166 ;; Hardware stack levels required when called:    2
 11167 ;; This function calls:
 11168 ;;		Nothing
 11169 ;; This function is called by:
 11170 ;;		_configuracionInicial
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174                           	psect	text51
 11175  004480                     __ptext51:
 11176                           	opt callstack 0
 11177  004480                     _configurarRS232:
 11178                           	opt callstack 27
 11179                           
 11180                           ;./../LIBRERIAS/configuracion_auto.h: 38:     TRISCbits.TRISC7 = 1;
 11181                           
 11182                           ; BSR set to: 14
 11183                           ;incstack = 0
 11184  004480  8E94               	bsf	3988,7,c	;volatile
 11185                           
 11186                           ;./../LIBRERIAS/configuracion_auto.h: 39:     TRISCbits.TRISC6 = 0;
 11187  004482  9C94               	bcf	3988,6,c	;volatile
 11188                           
 11189                           ;./../LIBRERIAS/configuracion_auto.h: 40:     TXSTA1 = 0x22;
 11190  004484  0E22               	movlw	34
 11191  004486  6EAD               	movwf	4013,c	;volatile
 11192                           
 11193                           ;./../LIBRERIAS/configuracion_auto.h: 41:     RCSTA1 = 0x90;
 11194  004488  0E90               	movlw	144
 11195  00448A  6EAC               	movwf	4012,c	;volatile
 11196                           
 11197                           ;./../LIBRERIAS/configuracion_auto.h: 42:     BAUDCON1bits.BRG16 = 0;
 11198  00448C  967E               	bcf	3966,3,c	;volatile
 11199                           
 11200                           ;./../LIBRERIAS/configuracion_auto.h: 43:     SPBRG1 = 77;
 11201  00448E  0E4D               	movlw	77
 11202  004490  6EB0               	movwf	4016,c	;volatile
 11203                           
 11204                           ;./../LIBRERIAS/configuracion_auto.h: 44:     PIR1bits.RC1IF = 0;
 11205  004492  9A9E               	bcf	3998,5,c	;volatile
 11206                           
 11207                           ;./../LIBRERIAS/configuracion_auto.h: 45:     PIE1bits.RC1IE = 1;
 11208  004494  8A9D               	bsf	3997,5,c	;volatile
 11209  004496  0012               	return		;funcret
 11210  004498                     __end_of_configurarRS232:
 11211                           	opt callstack 0
 11212                           
 11213 ;; *************** function _configurarPuertos *****************
 11214 ;; Defined at:
 11215 ;;		line 3 in file "./../LIBRERIAS/configuracion_auto.h"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;		None
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;		None
 11220 ;; Return value:  Size  Location     Type
 11221 ;;                  1    wreg      void 
 11222 ;; Registers used:
 11223 ;;		wreg, status,2
 11224 ;; Tracked objects:
 11225 ;;		On entry : 0/0
 11226 ;;		On exit  : 0/0
 11227 ;;		Unchanged: 0/0
 11228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11233 ;;Total ram usage:        0 bytes
 11234 ;; Hardware stack levels used:    1
 11235 ;; Hardware stack levels required when called:    2
 11236 ;; This function calls:
 11237 ;;		Nothing
 11238 ;; This function is called by:
 11239 ;;		_configuracionInicial
 11240 ;; This function uses a non-reentrant model
 11241 ;;
 11242                           
 11243                           	psect	text52
 11244  0044BE                     __ptext52:
 11245                           	opt callstack 0
 11246  0044BE                     _configurarPuertos:
 11247                           	opt callstack 27
 11248                           
 11249                           ;./../LIBRERIAS/configuracion_auto.h: 4:     ANCON0 = 0x7F;
 11250                           
 11251                           ;incstack = 0
 11252  0044BE  0E7F               	movlw	127
 11253  0044C0  010F               	movlb	15	; () banked
 11254  0044C2  6F48               	movwf	72,b	;volatile
 11255                           
 11256                           ;./../LIBRERIAS/configuracion_auto.h: 5:     ANCON1 = 0x1F;
 11257  0044C4  0E1F               	movlw	31
 11258  0044C6  6F49               	movwf	73,b	;volatile
 11259                           
 11260                           ; BSR set to: 15
 11261                           ;./../LIBRERIAS/configuracion_auto.h: 6:     TRISAbits.TRISA0 = 0;
 11262  0044C8  9092               	bcf	3986,0,c	;volatile
 11263                           
 11264                           ; BSR set to: 15
 11265                           ;./../LIBRERIAS/configuracion_auto.h: 7:     TRISAbits.TRISA1 = 0;
 11266  0044CA  9292               	bcf	3986,1,c	;volatile
 11267                           
 11268                           ; BSR set to: 15
 11269  0044CC  0012               	return		;funcret
 11270  0044CE                     __end_of_configurarPuertos:
 11271                           	opt callstack 0
 11272                           
 11273 ;; *************** function _configurarPWM7 *****************
 11274 ;; Defined at:
 11275 ;;		line 25 in file "./../LIBRERIAS/configuracion_auto.h"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;		None
 11278 ;; Auto vars:     Size  Location     Type
 11279 ;;		None
 11280 ;; Return value:  Size  Location     Type
 11281 ;;                  1    wreg      void 
 11282 ;; Registers used:
 11283 ;;		wreg, status,2
 11284 ;; Tracked objects:
 11285 ;;		On entry : 0/0
 11286 ;;		On exit  : 0/0
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;Total ram usage:        0 bytes
 11294 ;; Hardware stack levels used:    1
 11295 ;; Hardware stack levels required when called:    2
 11296 ;; This function calls:
 11297 ;;		Nothing
 11298 ;; This function is called by:
 11299 ;;		_configuracionInicial
 11300 ;; This function uses a non-reentrant model
 11301 ;;
 11302                           
 11303                           	psect	text53
 11304  004426                     __ptext53:
 11305                           	opt callstack 0
 11306  004426                     _configurarPWM7:
 11307                           	opt callstack 27
 11308                           
 11309                           ;./../LIBRERIAS/configuracion_auto.h: 26:     TRISBbits.TRISB4 = 0;
 11310                           
 11311                           ; BSR set to: 15
 11312                           ;incstack = 0
 11313  004426  9893               	bcf	3987,4,c	;volatile
 11314                           
 11315                           ;./../LIBRERIAS/configuracion_auto.h: 27:     TRISBbits.TRISB7 = 0;
 11316  004428  9E93               	bcf	3987,7,c	;volatile
 11317                           
 11318                           ;./../LIBRERIAS/configuracion_auto.h: 28:     CCP7CONbits.CCP7M = 0xC;
 11319  00442A  010F               	movlb	15	; () banked
 11320  00442C  5109               	movf	9,w,b	;volatile
 11321  00442E  0BF0               	andlw	-16
 11322  004430  090C               	iorlw	12
 11323  004432  6F09               	movwf	9,b	;volatile
 11324                           
 11325                           ;./../LIBRERIAS/configuracion_auto.h: 29:     CCPTMRS1bits.C7TSEL = 0b00;
 11326  004434  0E3F               	movlw	-193
 11327  004436  1751               	andwf	81,f,b	;volatile
 11328                           
 11329                           ;./../LIBRERIAS/configuracion_auto.h: 31:     T2CON = 0x02;
 11330  004438  0E02               	movlw	2
 11331  00443A  6ECA               	movwf	4042,c	;volatile
 11332                           
 11333                           ;./../LIBRERIAS/configuracion_auto.h: 32:     PR2 = 124;
 11334  00443C  0E7C               	movlw	124
 11335  00443E  6ECB               	movwf	4043,c	;volatile
 11336                           
 11337                           ;./../LIBRERIAS/configuracion_auto.h: 34:     TMR2 = 0x00;
 11338  004440  0E00               	movlw	0
 11339  004442  6ECC               	movwf	4044,c	;volatile
 11340                           
 11341                           ; BSR set to: 15
 11342  004444  0012               	return		;funcret
 11343  004446                     __end_of_configurarPWM7:
 11344                           	opt callstack 0
 11345                           
 11346 ;; *************** function _configurarInterrupciones *****************
 11347 ;; Defined at:
 11348 ;;		line 10 in file "./../LIBRERIAS/configuracion_auto.h"
 11349 ;; Parameters:    Size  Location     Type
 11350 ;;		None
 11351 ;; Auto vars:     Size  Location     Type
 11352 ;;		None
 11353 ;; Return value:  Size  Location     Type
 11354 ;;                  1    wreg      void 
 11355 ;; Registers used:
 11356 ;;		wreg, status,2
 11357 ;; Tracked objects:
 11358 ;;		On entry : 0/0
 11359 ;;		On exit  : 0/0
 11360 ;;		Unchanged: 0/0
 11361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11366 ;;Total ram usage:        0 bytes
 11367 ;; Hardware stack levels used:    1
 11368 ;; Hardware stack levels required when called:    2
 11369 ;; This function calls:
 11370 ;;		Nothing
 11371 ;; This function is called by:
 11372 ;;		_configuracionInicial
 11373 ;; This function uses a non-reentrant model
 11374 ;;
 11375                           
 11376                           	psect	text54
 11377  004446                     __ptext54:
 11378                           	opt callstack 0
 11379  004446                     _configurarInterrupciones:
 11380                           	opt callstack 27
 11381                           
 11382                           ;./../LIBRERIAS/configuracion_auto.h: 11:     PPSCON = 0;
 11383                           
 11384                           ; BSR set to: 15
 11385                           ;incstack = 0
 11386  004446  0E00               	movlw	0
 11387  004448  010E               	movlb	14	; () banked
 11388  00444A  6FBF               	movwf	191,b	;volatile
 11389                           
 11390                           ;./../LIBRERIAS/configuracion_auto.h: 12:     RPINR1 = 4;
 11391  00444C  0E04               	movlw	4
 11392  00444E  6FE1               	movwf	225,b	;volatile
 11393                           
 11394                           ; BSR set to: 14
 11395                           ;./../LIBRERIAS/configuracion_auto.h: 13:     TRISBbits.TRISB1 = 1;
 11396  004450  8293               	bsf	3987,1,c	;volatile
 11397                           
 11398                           ; BSR set to: 14
 11399                           ;./../LIBRERIAS/configuracion_auto.h: 14:     TRISBbits.TRISB0 = 1;
 11400  004452  8093               	bsf	3987,0,c	;volatile
 11401                           
 11402                           ; BSR set to: 14
 11403                           ;./../LIBRERIAS/configuracion_auto.h: 15:     INTCONbits.GIE = 1;
 11404  004454  8EF2               	bsf	4082,7,c	;volatile
 11405                           
 11406                           ; BSR set to: 14
 11407                           ;./../LIBRERIAS/configuracion_auto.h: 16:     INTCONbits.PEIE = 1;
 11408  004456  8CF2               	bsf	4082,6,c	;volatile
 11409                           
 11410                           ; BSR set to: 14
 11411                           ;./../LIBRERIAS/configuracion_auto.h: 17:     INTCON2bits.INTEDG0=0;
 11412  004458  9CF1               	bcf	4081,6,c	;volatile
 11413                           
 11414                           ; BSR set to: 14
 11415                           ;./../LIBRERIAS/configuracion_auto.h: 18:     INTCON2bits.INTEDG1 = 0;
 11416  00445A  9AF1               	bcf	4081,5,c	;volatile
 11417                           
 11418                           ; BSR set to: 14
 11419                           ;./../LIBRERIAS/configuracion_auto.h: 19:     INTCONbits.INT0F = 0;
 11420  00445C  92F2               	bcf	4082,1,c	;volatile
 11421                           
 11422                           ; BSR set to: 14
 11423                           ;./../LIBRERIAS/configuracion_auto.h: 20:     INTCONbits.INT0E = 1;
 11424  00445E  88F2               	bsf	4082,4,c	;volatile
 11425                           
 11426                           ; BSR set to: 14
 11427                           ;./../LIBRERIAS/configuracion_auto.h: 21:     INTCON3bits.INT1E = 1;
 11428  004460  86F0               	bsf	4080,3,c	;volatile
 11429                           
 11430                           ; BSR set to: 14
 11431                           ;./../LIBRERIAS/configuracion_auto.h: 22:     INTCON3bits.INT1F = 0;
 11432  004462  90F0               	bcf	4080,0,c	;volatile
 11433                           
 11434                           ; BSR set to: 14
 11435  004464  0012               	return		;funcret
 11436  004466                     __end_of_configurarInterrupciones:
 11437                           	opt callstack 0
 11438                           
 11439 ;; *************** function _PWMServo *****************
 11440 ;; Defined at:
 11441 ;;		line 255 in file "auto.c"
 11442 ;; Parameters:    Size  Location     Type
 11443 ;;		None
 11444 ;; Auto vars:     Size  Location     Type
 11445 ;;		None
 11446 ;; Return value:  Size  Location     Type
 11447 ;;                  1    wreg      void 
 11448 ;; Registers used:
 11449 ;;		wreg, status,2, status,0
 11450 ;; Tracked objects:
 11451 ;;		On entry : 0/0
 11452 ;;		On exit  : 0/0
 11453 ;;		Unchanged: 0/0
 11454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11459 ;;Total ram usage:        0 bytes
 11460 ;; Hardware stack levels used:    1
 11461 ;; Hardware stack levels required when called:    2
 11462 ;; This function calls:
 11463 ;;		Nothing
 11464 ;; This function is called by:
 11465 ;;		_main
 11466 ;; This function uses a non-reentrant model
 11467 ;;
 11468                           
 11469                           	psect	text55
 11470  004152                     __ptext55:
 11471                           	opt callstack 0
 11472  004152                     _PWMServo:
 11473                           	opt callstack 28
 11474                           
 11475                           ;auto.c: 256:     contador_timer_5 = 0;
 11476                           
 11477                           ; BSR set to: 14
 11478                           ;incstack = 0
 11479  004152  0E00               	movlw	0
 11480  004154  6E3D               	movwf	_contador_timer_5+1,c
 11481  004156  0E00               	movlw	0
 11482  004158  6E3C               	movwf	_contador_timer_5,c
 11483                           
 11484                           ;auto.c: 257:     if(PORTDbits.RD4 == 1){
 11485  00415A  A883               	btfss	3971,4,c	;volatile
 11486  00415C  D010               	goto	l278
 11487                           
 11488                           ;auto.c: 258:         parar++;
 11489  00415E  4A3E               	infsnz	_parar,f,c
 11490  004160  2A3F               	incf	_parar+1,f,c
 11491                           
 11492                           ;auto.c: 259:         PORTDbits.RD4 = 0;
 11493  004162  9883               	bcf	3971,4,c	;volatile
 11494                           
 11495                           ;auto.c: 260:         tiempo_anterior_1 = TIME_MAX;
 11496  004164  C047  F045         	movff	_TIME_MAX,_tiempo_anterior_1
 11497  004168  C048  F046         	movff	_TIME_MAX+1,_tiempo_anterior_1+1
 11498                           
 11499                           ;auto.c: 261:         TIME_MAX = 1000 - tiempo_anterior_1;
 11500  00416C  5045               	movf	_tiempo_anterior_1,w,c
 11501  00416E  08E8               	sublw	232
 11502  004170  6E47               	movwf	_TIME_MAX,c
 11503  004172  5046               	movf	_tiempo_anterior_1+1,w,c
 11504  004174  A0D8               	btfss	status,0,c
 11505  004176  2AE8               	incf	wreg,f,c
 11506  004178  0803               	sublw	3
 11507  00417A  6E48               	movwf	_TIME_MAX+1,c
 11508                           
 11509                           ;auto.c: 262:     }
 11510  00417C  D005               	goto	l7513
 11511  00417E                     l278:
 11512                           
 11513                           ;auto.c: 264:         PORTDbits.RD4 = 1;
 11514  00417E  8883               	bsf	3971,4,c	;volatile
 11515                           
 11516                           ;auto.c: 265:         TIME_MAX = tiempo_anterior_1;
 11517  004180  C045  F047         	movff	_tiempo_anterior_1,_TIME_MAX
 11518  004184  C046  F048         	movff	_tiempo_anterior_1+1,_TIME_MAX+1
 11519  004188                     l7513:
 11520                           
 11521                           ;auto.c: 267:     if(parar == 30){
 11522  004188  0E1E               	movlw	30
 11523  00418A  183E               	xorwf	_parar,w,c
 11524  00418C  103F               	iorwf	_parar+1,w,c
 11525  00418E  A4D8               	btfss	status,2,c
 11526  004190  0012               	return	
 11527                           
 11528                           ;auto.c: 268:         T5CONbits.TMR5ON = 0;
 11529  004192  010F               	movlb	15	; () banked
 11530  004194  9122               	bcf	34,0,b	;volatile
 11531                           
 11532                           ;auto.c: 269:         PORTDbits.RD4 = 0;
 11533  004196  9883               	bcf	3971,4,c	;volatile
 11534                           
 11535                           ; BSR set to: 15
 11536                           ;auto.c: 270:         parar = 0;
 11537  004198  0E00               	movlw	0
 11538  00419A  6E3F               	movwf	_parar+1,c
 11539  00419C  0E00               	movlw	0
 11540  00419E  6E3E               	movwf	_parar,c
 11541  0041A0  0012               	return		;funcret
 11542  0041A2                     __end_of_PWMServo:
 11543                           	opt callstack 0
 11544                           
 11545 ;; *************** function _rutina *****************
 11546 ;; Defined at:
 11547 ;;		line 52 in file "auto.c"
 11548 ;; Parameters:    Size  Location     Type
 11549 ;;		None
 11550 ;; Auto vars:     Size  Location     Type
 11551 ;;  dato            1   40[COMRAM] unsigned char 
 11552 ;; Return value:  Size  Location     Type
 11553 ;;                  1    wreg      void 
 11554 ;; Registers used:
 11555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11556 ;; Tracked objects:
 11557 ;;		On entry : 0/0
 11558 ;;		On exit  : 0/0
 11559 ;;		Unchanged: 0/0
 11560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11564 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11565 ;;Total ram usage:        3 bytes
 11566 ;; Hardware stack levels used:    1
 11567 ;; Hardware stack levels required when called:    1
 11568 ;; This function calls:
 11569 ;;		i2___awdiv
 11570 ;;		i2___fladd
 11571 ;;		i2___xxtofl
 11572 ;; This function is called by:
 11573 ;;		Interrupt level 2
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           	psect	intcode
 11578  000008                     __pintcode:
 11579                           	opt callstack 0
 11580  000008                     _rutina:
 11581                           	opt callstack 20
 11582                           
 11583                           ;incstack = 0
 11584  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11585  00000A  CFD9 F027          	movff	fsr2l,??_rutina
 11586  00000E  CFDA F028          	movff	fsr2h,??_rutina+1
 11587                           
 11588                           ;auto.c: 53:     if(PIR1bits.RC1IF == 1){
 11589  000012  AA9E               	btfss	3998,5,c	;volatile
 11590  000014  D016               	goto	i2l198
 11591                           
 11592                           ;auto.c: 54:         unsigned char dato = RCREG1;
 11593  000016  CFAF F029          	movff	4015,rutina@dato	;volatile
 11594                           
 11595                           ;auto.c: 55:         if(dato == 'P'){
 11596  00001A  0E50               	movlw	80
 11597  00001C  1829               	xorwf	rutina@dato,w,c
 11598  00001E  A4D8               	btfss	status,2,c
 11599  000020  D006               	goto	i2l5569
 11600                           
 11601                           ;auto.c: 56:             bandera = 1;
 11602  000022  0E01               	movlw	1
 11603  000024  0101               	movlb	1	; () banked
 11604  000026  6F21               	movwf	_bandera& (0+255),b
 11605                           
 11606                           ;auto.c: 57:             indicador = 0;
 11607  000028  0E00               	movlw	0
 11608  00002A  6E43               	movwf	_indicador,c
 11609                           
 11610                           ;auto.c: 58:         }
 11611  00002C  D08A               	goto	i2l212
 11612  00002E                     i2l5569:
 11613                           
 11614                           ;auto.c: 60:             datos[indicador] = dato;
 11615  00002E  0E73               	movlw	low _datos
 11616  000030  2443               	addwf	_indicador,w,c
 11617  000032  6ED9               	movwf	fsr2l,c
 11618  000034  6ADA               	clrf	fsr2h,c
 11619  000036  0E01               	movlw	high _datos
 11620  000038  22DA               	addwfc	fsr2h,f,c
 11621  00003A  C029  FFDF         	movff	rutina@dato,indf2
 11622                           
 11623                           ;auto.c: 61:             indicador++;
 11624  00003E  2A43               	incf	_indicador,f,c
 11625  000040  D080               	goto	i2l212
 11626  000042                     i2l198:
 11627  000042  A498               	btfss	3992,2,c	;volatile
 11628  000044  D016               	goto	i2l202
 11629                           
 11630                           ;auto.c: 65:         PIR5bits.TMR5IF = 0;
 11631  000046  9498               	bcf	3992,2,c	;volatile
 11632                           
 11633                           ;auto.c: 66:         contador_timer_5++;
 11634  000048  4A3C               	infsnz	_contador_timer_5,f,c
 11635  00004A  2A3D               	incf	_contador_timer_5+1,f,c
 11636                           
 11637                           ;auto.c: 67:         TMR5H = 0xFF;
 11638  00004C  010F               	movlb	15	; () banked
 11639  00004E  6924               	setf	36,b	;volatile
 11640                           
 11641                           ; BSR set to: 15
 11642                           ;auto.c: 68:         TMR5L = 0xE2;
 11643  000050  0EE2               	movlw	226
 11644  000052  6F23               	movwf	35,b	;volatile
 11645                           
 11646                           ; BSR set to: 15
 11647                           ;auto.c: 69:         if(contador_timer_5 == TIME_MAX){
 11648  000054  5047               	movf	_TIME_MAX,w,c
 11649  000056  183C               	xorwf	_contador_timer_5,w,c
 11650  000058  E174               	bnz	i2l212
 11651  00005A  5048               	movf	_TIME_MAX+1,w,c
 11652  00005C  183D               	xorwf	_contador_timer_5+1,w,c
 11653  00005E  A4D8               	btfss	status,2,c
 11654  000060  D070               	goto	i2l212
 11655                           
 11656                           ; BSR set to: 15
 11657                           ;auto.c: 70:             contador_timer_5 = 0;
 11658  000062  0E00               	movlw	0
 11659  000064  6E3D               	movwf	_contador_timer_5+1,c
 11660  000066  0E00               	movlw	0
 11661  000068  6E3C               	movwf	_contador_timer_5,c
 11662                           
 11663                           ;auto.c: 71:             bandera_servo = 1;
 11664  00006A  0E01               	movlw	1
 11665  00006C  0101               	movlb	1	; () banked
 11666  00006E  6F20               	movwf	_bandera_servo& (0+255),b
 11667  000070  D068               	goto	i2l212
 11668  000072                     i2l202:
 11669  000072  A2F2               	btfss	4082,1,c	;volatile
 11670  000074  D005               	goto	i2l205
 11671                           
 11672                           ;auto.c: 75:         INTCONbits.INT0F = 0;
 11673  000076  92F2               	bcf	4082,1,c	;volatile
 11674                           
 11675                           ;auto.c: 76:         obstaculo = 1;
 11676  000078  0E01               	movlw	1
 11677  00007A  0101               	movlb	1	; () banked
 11678  00007C  6F1F               	movwf	_obstaculo& (0+255),b
 11679                           
 11680                           ;auto.c: 77:     }
 11681  00007E  D061               	goto	i2l212
 11682  000080                     i2l205:
 11683  000080  AAA4               	btfss	4004,5,c	;volatile
 11684  000082  D057               	goto	i2l207
 11685                           
 11686                           ;auto.c: 79:         if(contador_datos == 1){
 11687  000084  0441               	decf	_contador_datos,w,c
 11688  000086  A4D8               	btfss	status,2,c
 11689  000088  D035               	goto	i2l5597
 11690                           
 11691                           ;auto.c: 80:             bandera_distancia = 1;
 11692  00008A  0E01               	movlw	1
 11693  00008C  0101               	movlb	1	; () banked
 11694  00008E  6F1E               	movwf	_bandera_distancia& (0+255),b
 11695                           
 11696                           ; BSR set to: 1
 11697                           ;auto.c: 81:             distancia += (RCREG2)/10;
 11698  000090  C032  F017         	movff	_distancia,i2___fladd@b
 11699  000094  C033  F018         	movff	_distancia+1,i2___fladd@b+1
 11700  000098  C034  F019         	movff	_distancia+2,i2___fladd@b+2
 11701  00009C  C035  F01A         	movff	_distancia+3,i2___fladd@b+3
 11702  0000A0  0E00               	movlw	0
 11703  0000A2  6E04               	movwf	i2___awdiv@divisor+1,c
 11704  0000A4  0E0A               	movlw	10
 11705  0000A6  6E03               	movwf	i2___awdiv@divisor,c
 11706  0000A8  CFAA F001          	movff	4010,i2___awdiv@dividend	;volatile
 11707  0000AC  6A02               	clrf	i2___awdiv@dividend+1,c
 11708  0000AE  EC92  F01E         	call	i2___awdiv	;wreg free
 11709  0000B2  C001  F009         	movff	?i2___awdiv,i2___xxtofl@val
 11710  0000B6  C002  F00A         	movff	?i2___awdiv+1,i2___xxtofl@val+1
 11711  0000BA  0E00               	movlw	0
 11712  0000BC  BE0A               	btfsc	i2___xxtofl@val+1,7,c
 11713  0000BE  0EFF               	movlw	-1
 11714  0000C0  6E0B               	movwf	i2___xxtofl@val+2,c
 11715  0000C2  6E0C               	movwf	i2___xxtofl@val+3,c
 11716  0000C4  0E01               	movlw	1
 11717  0000C6  EC6A  F019         	call	i2___xxtofl
 11718  0000CA  C009  F01B         	movff	?i2___xxtofl,i2___fladd@a
 11719  0000CE  C00A  F01C         	movff	?i2___xxtofl+1,i2___fladd@a+1
 11720  0000D2  C00B  F01D         	movff	?i2___xxtofl+2,i2___fladd@a+2
 11721  0000D6  C00C  F01E         	movff	?i2___xxtofl+3,i2___fladd@a+3
 11722  0000DA  ECEB  F012         	call	i2___fladd	;wreg free
 11723  0000DE  C017  F032         	movff	?i2___fladd,_distancia
 11724  0000E2  C018  F033         	movff	?i2___fladd+1,_distancia+1
 11725  0000E6  C019  F034         	movff	?i2___fladd+2,_distancia+2
 11726  0000EA  C01A  F035         	movff	?i2___fladd+3,_distancia+3
 11727                           
 11728                           ;auto.c: 82:             contador_datos = 0;
 11729  0000EE  0E00               	movlw	0
 11730  0000F0  6E41               	movwf	_contador_datos,c
 11731                           
 11732                           ;auto.c: 83:         }
 11733  0000F2  D027               	goto	i2l212
 11734  0000F4                     i2l5597:
 11735                           
 11736                           ;auto.c: 85:             distancia = 256*(RCREG2)/10;
 11737  0000F4  0E00               	movlw	0
 11738  0000F6  6E04               	movwf	i2___awdiv@divisor+1,c
 11739  0000F8  0E0A               	movlw	10
 11740  0000FA  6E03               	movwf	i2___awdiv@divisor,c
 11741  0000FC  50AA               	movf	4010,w,c	;volatile
 11742  0000FE  6E02               	movwf	i2___awdiv@dividend+1,c
 11743  000100  6A01               	clrf	i2___awdiv@dividend,c
 11744  000102  EC92  F01E         	call	i2___awdiv	;wreg free
 11745  000106  C001  F009         	movff	?i2___awdiv,i2___xxtofl@val
 11746  00010A  C002  F00A         	movff	?i2___awdiv+1,i2___xxtofl@val+1
 11747  00010E  0E00               	movlw	0
 11748  000110  BE0A               	btfsc	i2___xxtofl@val+1,7,c
 11749  000112  0EFF               	movlw	-1
 11750  000114  6E0B               	movwf	i2___xxtofl@val+2,c
 11751  000116  6E0C               	movwf	i2___xxtofl@val+3,c
 11752  000118  0E01               	movlw	1
 11753  00011A  EC6A  F019         	call	i2___xxtofl
 11754  00011E  C009  F032         	movff	?i2___xxtofl,_distancia
 11755  000122  C00A  F033         	movff	?i2___xxtofl+1,_distancia+1
 11756  000126  C00B  F034         	movff	?i2___xxtofl+2,_distancia+2
 11757  00012A  C00C  F035         	movff	?i2___xxtofl+3,_distancia+3
 11758                           
 11759                           ;auto.c: 86:             contador_datos ++;
 11760  00012E  2A41               	incf	_contador_datos,f,c
 11761  000130  D008               	goto	i2l212
 11762  000132                     i2l207:
 11763  000132  B0F0               	btfsc	4080,0,c	;volatile
 11764  000134  A6F0               	btfss	4080,3,c	;volatile
 11765  000136  D005               	goto	i2l212
 11766                           
 11767                           ;auto.c: 90:         bandera_fuego = 1;
 11768  000138  0E01               	movlw	1
 11769  00013A  0101               	movlb	1	; () banked
 11770  00013C  6F22               	movwf	_bandera_fuego& (0+255),b
 11771                           
 11772                           ; BSR set to: 1
 11773                           ;auto.c: 91:         INTCON3bits.INT1E = 0;
 11774  00013E  96F0               	bcf	4080,3,c	;volatile
 11775                           
 11776                           ; BSR set to: 1
 11777                           ;auto.c: 92:         INTCON3bits.INT1F = 0;
 11778  000140  90F0               	bcf	4080,0,c	;volatile
 11779  000142                     i2l212:
 11780  000142  C028  FFDA         	movff	??_rutina+1,fsr2h
 11781  000146  C027  FFD9         	movff	??_rutina,fsr2l
 11782  00014A  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11783  00014C  0011               	retfie		f
 11784  00014E                     __end_of_rutina:
 11785                           	opt callstack 0
 11786                           
 11787 ;; *************** function i2___xxtofl *****************
 11788 ;; Defined at:
 11789 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 11790 ;; Parameters:    Size  Location     Type
 11791 ;;  sign            1    wreg     unsigned char 
 11792 ;;  val             4    8[COMRAM] long 
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;  sign            1   16[COMRAM] unsigned char 
 11795 ;;  __xxtofl        4   18[COMRAM] unsigned long 
 11796 ;;  __xxtofl        1   17[COMRAM] unsigned char 
 11797 ;; Return value:  Size  Location     Type
 11798 ;;                  4    8[COMRAM] unsigned char 
 11799 ;; Registers used:
 11800 ;;		wreg, status,2, status,0
 11801 ;; Tracked objects:
 11802 ;;		On entry : 0/0
 11803 ;;		On exit  : 0/0
 11804 ;;		Unchanged: 0/0
 11805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11807 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11808 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11809 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11810 ;;Total ram usage:       14 bytes
 11811 ;; Hardware stack levels used:    1
 11812 ;; This function calls:
 11813 ;;		Nothing
 11814 ;; This function is called by:
 11815 ;;		_rutina
 11816 ;; This function uses a non-reentrant model
 11817 ;;
 11818                           
 11819                           	psect	text57
 11820  0032D4                     __ptext57:
 11821                           	opt callstack 0
 11822  0032D4                     i2___xxtofl:
 11823                           	opt callstack 20
 11824                           
 11825                           ;incstack = 0
 11826                           ;i2___xxtofl@sign stored from wreg
 11827  0032D4  6E11               	movwf	i2___xxtofl@sign,c
 11828  0032D6  5011               	movf	i2___xxtofl@sign,w,c
 11829  0032D8  A4D8               	btfss	status,2,c
 11830  0032DA  AE0C               	btfss	i2___xxtofl@val+3,7,c
 11831  0032DC  D01A               	goto	i2l1166
 11832  0032DE  C009  F00D         	movff	i2___xxtofl@val,??i2___xxtofl
 11833  0032E2  C00A  F00E         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 11834  0032E6  C00B  F00F         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 11835  0032EA  C00C  F010         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 11836  0032EE  1E0D               	comf	??i2___xxtofl,f,c
 11837  0032F0  1E0E               	comf	??i2___xxtofl+1,f,c
 11838  0032F2  1E0F               	comf	??i2___xxtofl+2,f,c
 11839  0032F4  1E10               	comf	??i2___xxtofl+3,f,c
 11840  0032F6  2A0D               	incf	??i2___xxtofl,f,c
 11841  0032F8  0E00               	movlw	0
 11842  0032FA  220E               	addwfc	??i2___xxtofl+1,f,c
 11843  0032FC  220F               	addwfc	??i2___xxtofl+2,f,c
 11844  0032FE  2210               	addwfc	??i2___xxtofl+3,f,c
 11845  003300  C00D  F013         	movff	??i2___xxtofl,i2___xxtofl@arg
 11846  003304  C00E  F014         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 11847  003308  C00F  F015         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 11848  00330C  C010  F016         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 11849  003310  D008               	goto	i2l5521
 11850  003312                     i2l1166:
 11851  003312  C009  F013         	movff	i2___xxtofl@val,i2___xxtofl@arg
 11852  003316  C00A  F014         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 11853  00331A  C00B  F015         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 11854  00331E  C00C  F016         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 11855  003322                     i2l5521:
 11856  003322  5009               	movf	i2___xxtofl@val,w,c
 11857  003324  100A               	iorwf	i2___xxtofl@val+1,w,c
 11858  003326  100B               	iorwf	i2___xxtofl@val+2,w,c
 11859  003328  100C               	iorwf	i2___xxtofl@val+3,w,c
 11860  00332A  A4D8               	btfss	status,2,c
 11861  00332C  D009               	goto	i2l5527
 11862  00332E  0E00               	movlw	0
 11863  003330  6E09               	movwf	?i2___xxtofl,c
 11864  003332  0E00               	movlw	0
 11865  003334  6E0A               	movwf	?i2___xxtofl+1,c
 11866  003336  0E00               	movlw	0
 11867  003338  6E0B               	movwf	?i2___xxtofl+2,c
 11868  00333A  0E00               	movlw	0
 11869  00333C  6E0C               	movwf	?i2___xxtofl+3,c
 11870  00333E  0012               	return	
 11871  003340                     i2l5527:
 11872  003340  0E96               	movlw	150
 11873  003342  6E12               	movwf	i2___xxtofl@exp,c
 11874  003344  D006               	goto	i2l5531
 11875  003346                     i2l5529:
 11876  003346  2A12               	incf	i2___xxtofl@exp,f,c
 11877  003348  90D8               	bcf	status,0,c
 11878  00334A  3216               	rrcf	i2___xxtofl@arg+3,f,c
 11879  00334C  3215               	rrcf	i2___xxtofl@arg+2,f,c
 11880  00334E  3214               	rrcf	i2___xxtofl@arg+1,f,c
 11881  003350  3213               	rrcf	i2___xxtofl@arg,f,c
 11882  003352                     i2l5531:
 11883  003352  0E00               	movlw	0
 11884  003354  1413               	andwf	i2___xxtofl@arg,w,c
 11885  003356  6E0D               	movwf	??i2___xxtofl& (0+255),c
 11886  003358  0E00               	movlw	0
 11887  00335A  1414               	andwf	i2___xxtofl@arg+1,w,c
 11888  00335C  6E0E               	movwf	(??i2___xxtofl+1)& (0+255),c
 11889  00335E  0E00               	movlw	0
 11890  003360  1415               	andwf	i2___xxtofl@arg+2,w,c
 11891  003362  6E0F               	movwf	(??i2___xxtofl+2)& (0+255),c
 11892  003364  0EFE               	movlw	254
 11893  003366  1416               	andwf	i2___xxtofl@arg+3,w,c
 11894  003368  6E10               	movwf	(??i2___xxtofl+3)& (0+255),c
 11895  00336A  500D               	movf	??i2___xxtofl,w,c
 11896  00336C  100E               	iorwf	??i2___xxtofl+1,w,c
 11897  00336E  100F               	iorwf	??i2___xxtofl+2,w,c
 11898  003370  1010               	iorwf	??i2___xxtofl+3,w,c
 11899  003372  B4D8               	btfsc	status,2,c
 11900  003374  D00D               	goto	i2l1173
 11901  003376  D7E7               	goto	i2l5529
 11902  003378                     i2l5533:
 11903  003378  2A12               	incf	i2___xxtofl@exp,f,c
 11904  00337A  0E01               	movlw	1
 11905  00337C  2613               	addwf	i2___xxtofl@arg,f,c
 11906  00337E  0E00               	movlw	0
 11907  003380  2214               	addwfc	i2___xxtofl@arg+1,f,c
 11908  003382  2215               	addwfc	i2___xxtofl@arg+2,f,c
 11909  003384  2216               	addwfc	i2___xxtofl@arg+3,f,c
 11910  003386  90D8               	bcf	status,0,c
 11911  003388  3216               	rrcf	i2___xxtofl@arg+3,f,c
 11912  00338A  3215               	rrcf	i2___xxtofl@arg+2,f,c
 11913  00338C  3214               	rrcf	i2___xxtofl@arg+1,f,c
 11914  00338E  3213               	rrcf	i2___xxtofl@arg,f,c
 11915  003390                     i2l1173:
 11916  003390  0E00               	movlw	0
 11917  003392  1413               	andwf	i2___xxtofl@arg,w,c
 11918  003394  6E0D               	movwf	??i2___xxtofl& (0+255),c
 11919  003396  0E00               	movlw	0
 11920  003398  1414               	andwf	i2___xxtofl@arg+1,w,c
 11921  00339A  6E0E               	movwf	(??i2___xxtofl+1)& (0+255),c
 11922  00339C  0E00               	movlw	0
 11923  00339E  1415               	andwf	i2___xxtofl@arg+2,w,c
 11924  0033A0  6E0F               	movwf	(??i2___xxtofl+2)& (0+255),c
 11925  0033A2  0EFF               	movlw	255
 11926  0033A4  1416               	andwf	i2___xxtofl@arg+3,w,c
 11927  0033A6  6E10               	movwf	(??i2___xxtofl+3)& (0+255),c
 11928  0033A8  500D               	movf	??i2___xxtofl,w,c
 11929  0033AA  100E               	iorwf	??i2___xxtofl+1,w,c
 11930  0033AC  100F               	iorwf	??i2___xxtofl+2,w,c
 11931  0033AE  1010               	iorwf	??i2___xxtofl+3,w,c
 11932  0033B0  B4D8               	btfsc	status,2,c
 11933  0033B2  D007               	goto	i2l5541
 11934  0033B4  D7E1               	goto	i2l5533
 11935  0033B6                     i2l5539:
 11936  0033B6  0612               	decf	i2___xxtofl@exp,f,c
 11937  0033B8  90D8               	bcf	status,0,c
 11938  0033BA  3613               	rlcf	i2___xxtofl@arg,f,c
 11939  0033BC  3614               	rlcf	i2___xxtofl@arg+1,f,c
 11940  0033BE  3615               	rlcf	i2___xxtofl@arg+2,f,c
 11941  0033C0  3616               	rlcf	i2___xxtofl@arg+3,f,c
 11942  0033C2                     i2l5541:
 11943  0033C2  BE15               	btfsc	i2___xxtofl@arg+2,7,c
 11944  0033C4  D003               	goto	i2u669_40
 11945  0033C6  0E02               	movlw	2
 11946  0033C8  6012               	cpfslt	i2___xxtofl@exp,c
 11947  0033CA  D7F5               	goto	i2l5539
 11948  0033CC                     i2u669_40:
 11949  0033CC  A012               	btfss	i2___xxtofl@exp,0,c
 11950  0033CE  9E15               	bcf	i2___xxtofl@arg+2,7,c
 11951  0033D0  90D8               	bcf	status,0,c
 11952  0033D2  3212               	rrcf	i2___xxtofl@exp,f,c
 11953  0033D4  C012  F00D         	movff	i2___xxtofl@exp,??i2___xxtofl
 11954  0033D8  6A0E               	clrf	(??i2___xxtofl+1)& (0+255),c
 11955  0033DA  6A0F               	clrf	(??i2___xxtofl+2)& (0+255),c
 11956  0033DC  6A10               	clrf	(??i2___xxtofl+3)& (0+255),c
 11957  0033DE  C00D  F010         	movff	??i2___xxtofl,??i2___xxtofl+3
 11958  0033E2  6A0F               	clrf	??i2___xxtofl+2,c
 11959  0033E4  6A0E               	clrf	??i2___xxtofl+1,c
 11960  0033E6  6A0D               	clrf	??i2___xxtofl,c
 11961  0033E8  500D               	movf	??i2___xxtofl,w,c
 11962  0033EA  1213               	iorwf	i2___xxtofl@arg,f,c
 11963  0033EC  500E               	movf	??i2___xxtofl+1,w,c
 11964  0033EE  1214               	iorwf	i2___xxtofl@arg+1,f,c
 11965  0033F0  500F               	movf	??i2___xxtofl+2,w,c
 11966  0033F2  1215               	iorwf	i2___xxtofl@arg+2,f,c
 11967  0033F4  5010               	movf	??i2___xxtofl+3,w,c
 11968  0033F6  1216               	iorwf	i2___xxtofl@arg+3,f,c
 11969  0033F8  5011               	movf	i2___xxtofl@sign,w,c
 11970  0033FA  A4D8               	btfss	status,2,c
 11971  0033FC  AE0C               	btfss	i2___xxtofl@val+3,7,c
 11972  0033FE  D001               	goto	i2l5557
 11973  003400  8E16               	bsf	i2___xxtofl@arg+3,7,c
 11974  003402                     i2l5557:
 11975  003402  C013  F009         	movff	i2___xxtofl@arg,?i2___xxtofl
 11976  003406  C014  F00A         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 11977  00340A  C015  F00B         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 11978  00340E  C016  F00C         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 11979  003412  0012               	return		;funcret
 11980  003414                     __end_ofi2___xxtofl:
 11981                           	opt callstack 0
 11982                           
 11983 ;; *************** function i2___fladd *****************
 11984 ;; Defined at:
 11985 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 11986 ;; Parameters:    Size  Location     Type
 11987 ;;  b               4   22[COMRAM] unsigned char 
 11988 ;;  a               4   26[COMRAM] unsigned char 
 11989 ;; Auto vars:     Size  Location     Type
 11990 ;;  __fladd         1   37[COMRAM] unsigned char 
 11991 ;;  __fladd         1   36[COMRAM] unsigned char 
 11992 ;;  __fladd         1   35[COMRAM] unsigned char 
 11993 ;;  __fladd         1   34[COMRAM] unsigned char 
 11994 ;; Return value:  Size  Location     Type
 11995 ;;                  4   22[COMRAM] unsigned char 
 11996 ;; Registers used:
 11997 ;;		wreg, status,2, status,0
 11998 ;; Tracked objects:
 11999 ;;		On entry : 0/0
 12000 ;;		On exit  : 0/0
 12001 ;;		Unchanged: 0/0
 12002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12003 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12004 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12005 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12006 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12007 ;;Total ram usage:       16 bytes
 12008 ;; Hardware stack levels used:    1
 12009 ;; This function calls:
 12010 ;;		Nothing
 12011 ;; This function is called by:
 12012 ;;		_rutina
 12013 ;; This function uses a non-reentrant model
 12014 ;;
 12015                           
 12016                           	psect	text58
 12017  0025D6                     __ptext58:
 12018                           	opt callstack 0
 12019  0025D6                     i2___fladd:
 12020                           	opt callstack 20
 12021                           
 12022                           ;incstack = 0
 12023  0025D6  501A               	movf	i2___fladd@b+3,w,c
 12024  0025D8  0B80               	andlw	128
 12025  0025DA  6E23               	movwf	i2___fladd@signs,c
 12026  0025DC  501A               	movf	i2___fladd@b+3,w,c
 12027  0025DE  241A               	addwf	i2___fladd@b+3,w,c
 12028  0025E0  6E25               	movwf	i2___fladd@bexp,c
 12029  0025E2  BE19               	btfsc	i2___fladd@b+2,7,c
 12030  0025E4  8025               	bsf	i2___fladd@bexp,0,c
 12031  0025E6  5025               	movf	i2___fladd@bexp,w,c
 12032  0025E8  B4D8               	btfsc	status,2,c
 12033  0025EA  D00D               	goto	i2l5329
 12034  0025EC  2825               	incf	i2___fladd@bexp,w,c
 12035  0025EE  A4D8               	btfss	status,2,c
 12036  0025F0  D008               	goto	i2l5325
 12037  0025F2  0E00               	movlw	0
 12038  0025F4  6E17               	movwf	i2___fladd@b,c
 12039  0025F6  0E00               	movlw	0
 12040  0025F8  6E18               	movwf	i2___fladd@b+1,c
 12041  0025FA  0E00               	movlw	0
 12042  0025FC  6E19               	movwf	i2___fladd@b+2,c
 12043  0025FE  0E00               	movlw	0
 12044  002600  6E1A               	movwf	i2___fladd@b+3,c
 12045  002602                     i2l5325:
 12046  002602  8E19               	bsf	i2___fladd@b+2,7,c
 12047  002604  D006               	goto	L22
 12048  002606                     i2l5329:
 12049  002606  0E00               	movlw	0
 12050  002608  6E17               	movwf	i2___fladd@b,c
 12051  00260A  0E00               	movlw	0
 12052  00260C  6E18               	movwf	i2___fladd@b+1,c
 12053  00260E  0E00               	movlw	0
 12054  002610  6E19               	movwf	i2___fladd@b+2,c
 12055  002612                     L22:
 12056  002612  0E00               	movlw	0
 12057  002614  6E1A               	movwf	i2___fladd@b+3,c
 12058  002616  501E               	movf	i2___fladd@a+3,w,c
 12059  002618  0B80               	andlw	128
 12060  00261A  6E24               	movwf	i2___fladd@aexp,c
 12061  00261C  5023               	movf	i2___fladd@signs,w,c
 12062  00261E  1824               	xorwf	i2___fladd@aexp,w,c
 12063  002620  A4D8               	btfss	status,2,c
 12064  002622  8C23               	bsf	i2___fladd@signs,6,c
 12065  002624  501E               	movf	i2___fladd@a+3,w,c
 12066  002626  241E               	addwf	i2___fladd@a+3,w,c
 12067  002628  6E24               	movwf	i2___fladd@aexp,c
 12068  00262A  BE1D               	btfsc	i2___fladd@a+2,7,c
 12069  00262C  8024               	bsf	i2___fladd@aexp,0,c
 12070  00262E  5024               	movf	i2___fladd@aexp,w,c
 12071  002630  B4D8               	btfsc	status,2,c
 12072  002632  D00D               	goto	i2l5353
 12073  002634  2824               	incf	i2___fladd@aexp,w,c
 12074  002636  A4D8               	btfss	status,2,c
 12075  002638  D008               	goto	i2l5349
 12076  00263A  0E00               	movlw	0
 12077  00263C  6E1B               	movwf	i2___fladd@a,c
 12078  00263E  0E00               	movlw	0
 12079  002640  6E1C               	movwf	i2___fladd@a+1,c
 12080  002642  0E00               	movlw	0
 12081  002644  6E1D               	movwf	i2___fladd@a+2,c
 12082  002646  0E00               	movlw	0
 12083  002648  6E1E               	movwf	i2___fladd@a+3,c
 12084  00264A                     i2l5349:
 12085  00264A  8E1D               	bsf	i2___fladd@a+2,7,c
 12086  00264C  D006               	goto	L23
 12087  00264E                     i2l5353:
 12088  00264E  0E00               	movlw	0
 12089  002650  6E1B               	movwf	i2___fladd@a,c
 12090  002652  0E00               	movlw	0
 12091  002654  6E1C               	movwf	i2___fladd@a+1,c
 12092  002656  0E00               	movlw	0
 12093  002658  6E1D               	movwf	i2___fladd@a+2,c
 12094  00265A                     L23:
 12095  00265A  0E00               	movlw	0
 12096  00265C  6E1E               	movwf	i2___fladd@a+3,c
 12097  00265E  5025               	movf	i2___fladd@bexp,w,c
 12098  002660  5C24               	subwf	i2___fladd@aexp,w,c
 12099  002662  B0D8               	btfsc	status,0,c
 12100  002664  D022               	goto	i2l5391
 12101  002666  AC23               	btfss	i2___fladd@signs,6,c
 12102  002668  D002               	goto	i2l5361
 12103  00266A  0E80               	movlw	128
 12104  00266C  1A23               	xorwf	i2___fladd@signs,f,c
 12105  00266E                     i2l5361:
 12106  00266E  C025  F026         	movff	i2___fladd@bexp,i2___fladd@grs
 12107  002672  C024  F025         	movff	i2___fladd@aexp,i2___fladd@bexp
 12108  002676  C026  F024         	movff	i2___fladd@grs,i2___fladd@aexp
 12109  00267A  C017  F026         	movff	i2___fladd@b,i2___fladd@grs
 12110  00267E  C01B  F017         	movff	i2___fladd@a,i2___fladd@b
 12111  002682  C026  F01B         	movff	i2___fladd@grs,i2___fladd@a
 12112  002686  C018  F026         	movff	i2___fladd@b+1,i2___fladd@grs
 12113  00268A  C01C  F018         	movff	i2___fladd@a+1,i2___fladd@b+1
 12114  00268E  C026  F01C         	movff	i2___fladd@grs,i2___fladd@a+1
 12115  002692  C019  F026         	movff	i2___fladd@b+2,i2___fladd@grs
 12116  002696  C01D  F019         	movff	i2___fladd@a+2,i2___fladd@b+2
 12117  00269A  C026  F01D         	movff	i2___fladd@grs,i2___fladd@a+2
 12118  00269E  C01A  F026         	movff	i2___fladd@b+3,i2___fladd@grs
 12119  0026A2  C01E  F01A         	movff	i2___fladd@a+3,i2___fladd@b+3
 12120  0026A6  C026  F01E         	movff	i2___fladd@grs,i2___fladd@a+3
 12121  0026AA                     i2l5391:
 12122  0026AA  0E00               	movlw	0
 12123  0026AC  6E26               	movwf	i2___fladd@grs,c
 12124  0026AE  5025               	movf	i2___fladd@bexp,w,c
 12125  0026B0  C024  F01F         	movff	i2___fladd@aexp,??i2___fladd
 12126  0026B4  6A20               	clrf	(??i2___fladd+1)& (0+255),c
 12127  0026B6  5E1F               	subwf	??i2___fladd,f,c
 12128  0026B8  0E00               	movlw	0
 12129  0026BA  5A20               	subwfb	??i2___fladd+1,f,c
 12130  0026BC  BE20               	btfsc	??i2___fladd+1,7,c
 12131  0026BE  D02C               	goto	i2l1040
 12132  0026C0  5020               	movf	??i2___fladd+1,w,c
 12133  0026C2  E104               	bnz	i2u633_40
 12134  0026C4  0E1A               	movlw	26
 12135  0026C6  5C1F               	subwf	??i2___fladd,w,c
 12136  0026C8  A0D8               	btfss	status,0,c
 12137  0026CA  D026               	goto	i2l1040
 12138  0026CC                     i2u633_40:
 12139  0026CC  5017               	movf	i2___fladd@b,w,c
 12140  0026CE  1018               	iorwf	i2___fladd@b+1,w,c
 12141  0026D0  1019               	iorwf	i2___fladd@b+2,w,c
 12142  0026D2  101A               	iorwf	i2___fladd@b+3,w,c
 12143  0026D4  B4D8               	btfsc	status,2,c
 12144  0026D6  D002               	goto	i2u634_40
 12145  0026D8  0E01               	movlw	1
 12146  0026DA  D001               	goto	i2u635_40
 12147  0026DC                     i2u634_40:
 12148  0026DC  0E00               	movlw	0
 12149  0026DE                     i2u635_40:
 12150  0026DE  6E26               	movwf	i2___fladd@grs,c
 12151  0026E0  0E00               	movlw	0
 12152  0026E2  6E17               	movwf	i2___fladd@b,c
 12153  0026E4  0E00               	movlw	0
 12154  0026E6  6E18               	movwf	i2___fladd@b+1,c
 12155  0026E8  0E00               	movlw	0
 12156  0026EA  6E19               	movwf	i2___fladd@b+2,c
 12157  0026EC  0E00               	movlw	0
 12158  0026EE  6E1A               	movwf	i2___fladd@b+3,c
 12159  0026F0  C024  F025         	movff	i2___fladd@aexp,i2___fladd@bexp
 12160  0026F4  D015               	goto	i2u638_40
 12161  0026F6                     i2l1041:
 12162  0026F6  A026               	btfss	i2___fladd@grs,0,c
 12163  0026F8  D005               	goto	i2l5403
 12164  0026FA  90D8               	bcf	status,0,c
 12165  0026FC  3026               	rrcf	i2___fladd@grs,w,c
 12166  0026FE  0901               	iorlw	1
 12167  002700  6E26               	movwf	i2___fladd@grs,c
 12168  002702  D002               	goto	i2l5405
 12169  002704                     i2l5403:
 12170  002704  90D8               	bcf	status,0,c
 12171  002706  3226               	rrcf	i2___fladd@grs,f,c
 12172  002708                     i2l5405:
 12173  002708  B017               	btfsc	i2___fladd@b,0,c
 12174  00270A  8E26               	bsf	i2___fladd@grs,7,c
 12175  00270C  341A               	rlcf	i2___fladd@b+3,w,c
 12176  00270E  321A               	rrcf	i2___fladd@b+3,f,c
 12177  002710  3219               	rrcf	i2___fladd@b+2,f,c
 12178  002712  3218               	rrcf	i2___fladd@b+1,f,c
 12179  002714  3217               	rrcf	i2___fladd@b,f,c
 12180  002716  2A25               	incf	i2___fladd@bexp,f,c
 12181  002718                     i2l1040:
 12182  002718  5024               	movf	i2___fladd@aexp,w,c
 12183  00271A  5C25               	subwf	i2___fladd@bexp,w,c
 12184  00271C  A0D8               	btfss	status,0,c
 12185  00271E  D7EB               	goto	i2l1041
 12186  002720                     i2u638_40:
 12187  002720  BC23               	btfsc	i2___fladd@signs,6,c
 12188  002722  D028               	goto	i2l5437
 12189  002724  5025               	movf	i2___fladd@bexp,w,c
 12190  002726  A4D8               	btfss	status,2,c
 12191  002728  D009               	goto	i2l5419
 12192  00272A  0E00               	movlw	0
 12193  00272C  6E17               	movwf	?i2___fladd,c
 12194  00272E  0E00               	movlw	0
 12195  002730  6E18               	movwf	?i2___fladd+1,c
 12196  002732  0E00               	movlw	0
 12197  002734  6E19               	movwf	?i2___fladd+2,c
 12198  002736  0E00               	movlw	0
 12199  002738  6E1A               	movwf	?i2___fladd+3,c
 12200  00273A  0012               	return	
 12201  00273C                     i2l5419:
 12202  00273C  501B               	movf	i2___fladd@a,w,c
 12203  00273E  2617               	addwf	i2___fladd@b,f,c
 12204  002740  501C               	movf	i2___fladd@a+1,w,c
 12205  002742  2218               	addwfc	i2___fladd@b+1,f,c
 12206  002744  501D               	movf	i2___fladd@a+2,w,c
 12207  002746  2219               	addwfc	i2___fladd@b+2,f,c
 12208  002748  501E               	movf	i2___fladd@a+3,w,c
 12209  00274A  221A               	addwfc	i2___fladd@b+3,f,c
 12210  00274C  A01A               	btfss	i2___fladd@b+3,0,c
 12211  00274E  D071               	goto	i2u651_40
 12212  002750  A026               	btfss	i2___fladd@grs,0,c
 12213  002752  D005               	goto	i2l5427
 12214  002754  90D8               	bcf	status,0,c
 12215  002756  3026               	rrcf	i2___fladd@grs,w,c
 12216  002758  0901               	iorlw	1
 12217  00275A  6E26               	movwf	i2___fladd@grs,c
 12218  00275C  D002               	goto	i2l5429
 12219  00275E                     i2l5427:
 12220  00275E  90D8               	bcf	status,0,c
 12221  002760  3226               	rrcf	i2___fladd@grs,f,c
 12222  002762                     i2l5429:
 12223  002762  B017               	btfsc	i2___fladd@b,0,c
 12224  002764  8E26               	bsf	i2___fladd@grs,7,c
 12225  002766  341A               	rlcf	i2___fladd@b+3,w,c
 12226  002768  321A               	rrcf	i2___fladd@b+3,f,c
 12227  00276A  3219               	rrcf	i2___fladd@b+2,f,c
 12228  00276C  3218               	rrcf	i2___fladd@b+1,f,c
 12229  00276E  3217               	rrcf	i2___fladd@b,f,c
 12230  002770  2A25               	incf	i2___fladd@bexp,f,c
 12231  002772  D05F               	goto	i2u651_40
 12232  002774                     i2l5437:
 12233  002774  501B               	movf	i2___fladd@a,w,c
 12234  002776  5C17               	subwf	i2___fladd@b,w,c
 12235  002778  501C               	movf	i2___fladd@a+1,w,c
 12236  00277A  5818               	subwfb	i2___fladd@b+1,w,c
 12237  00277C  501D               	movf	i2___fladd@a+2,w,c
 12238  00277E  5819               	subwfb	i2___fladd@b+2,w,c
 12239  002780  501A               	movf	i2___fladd@b+3,w,c
 12240  002782  0A80               	xorlw	128
 12241  002784  6E1F               	movwf	??i2___fladd& (0+255),c
 12242  002786  501E               	movf	i2___fladd@a+3,w,c
 12243  002788  0A80               	xorlw	128
 12244  00278A  581F               	subwfb	??i2___fladd& (0+255),w,c
 12245  00278C  B0D8               	btfsc	status,0,c
 12246  00278E  D025               	goto	i2l5447
 12247  002790  5017               	movf	i2___fladd@b,w,c
 12248  002792  5C1B               	subwf	i2___fladd@a,w,c
 12249  002794  6E1F               	movwf	??i2___fladd& (0+255),c
 12250  002796  5018               	movf	i2___fladd@b+1,w,c
 12251  002798  581C               	subwfb	i2___fladd@a+1,w,c
 12252  00279A  6E20               	movwf	(??i2___fladd+1)& (0+255),c
 12253  00279C  5019               	movf	i2___fladd@b+2,w,c
 12254  00279E  581D               	subwfb	i2___fladd@a+2,w,c
 12255  0027A0  6E21               	movwf	(??i2___fladd+2)& (0+255),c
 12256  0027A2  501A               	movf	i2___fladd@b+3,w,c
 12257  0027A4  581E               	subwfb	i2___fladd@a+3,w,c
 12258  0027A6  6E22               	movwf	(??i2___fladd+3)& (0+255),c
 12259  0027A8  0EFF               	movlw	255
 12260  0027AA  241F               	addwf	??i2___fladd,w,c
 12261  0027AC  6E17               	movwf	i2___fladd@b,c
 12262  0027AE  0EFF               	movlw	255
 12263  0027B0  2020               	addwfc	??i2___fladd+1,w,c
 12264  0027B2  6E18               	movwf	i2___fladd@b+1,c
 12265  0027B4  0EFF               	movlw	255
 12266  0027B6  2021               	addwfc	??i2___fladd+2,w,c
 12267  0027B8  6E19               	movwf	i2___fladd@b+2,c
 12268  0027BA  0EFF               	movlw	255
 12269  0027BC  2022               	addwfc	??i2___fladd+3,w,c
 12270  0027BE  6E1A               	movwf	i2___fladd@b+3,c
 12271  0027C0  0E80               	movlw	128
 12272  0027C2  1A23               	xorwf	i2___fladd@signs,f,c
 12273  0027C4  6C26               	negf	i2___fladd@grs,c
 12274  0027C6  5026               	movf	i2___fladd@grs,w,c
 12275  0027C8  A4D8               	btfss	status,2,c
 12276  0027CA  D00F               	goto	i2l1056
 12277  0027CC  0E01               	movlw	1
 12278  0027CE  2617               	addwf	i2___fladd@b,f,c
 12279  0027D0  0E00               	movlw	0
 12280  0027D2  2218               	addwfc	i2___fladd@b+1,f,c
 12281  0027D4  2219               	addwfc	i2___fladd@b+2,f,c
 12282  0027D6  221A               	addwfc	i2___fladd@b+3,f,c
 12283  0027D8  D008               	goto	i2l1056
 12284  0027DA                     i2l5447:
 12285  0027DA  501B               	movf	i2___fladd@a,w,c
 12286  0027DC  5E17               	subwf	i2___fladd@b,f,c
 12287  0027DE  501C               	movf	i2___fladd@a+1,w,c
 12288  0027E0  5A18               	subwfb	i2___fladd@b+1,f,c
 12289  0027E2  501D               	movf	i2___fladd@a+2,w,c
 12290  0027E4  5A19               	subwfb	i2___fladd@b+2,f,c
 12291  0027E6  501E               	movf	i2___fladd@a+3,w,c
 12292  0027E8  5A1A               	subwfb	i2___fladd@b+3,f,c
 12293  0027EA                     i2l1056:
 12294  0027EA  5017               	movf	i2___fladd@b,w,c
 12295  0027EC  1018               	iorwf	i2___fladd@b+1,w,c
 12296  0027EE  1019               	iorwf	i2___fladd@b+2,w,c
 12297  0027F0  101A               	iorwf	i2___fladd@b+3,w,c
 12298  0027F2  A4D8               	btfss	status,2,c
 12299  0027F4  D01C               	goto	i2l5471
 12300  0027F6  5026               	movf	i2___fladd@grs,w,c
 12301  0027F8  A4D8               	btfss	status,2,c
 12302  0027FA  D019               	goto	i2l5471
 12303  0027FC  0E00               	movlw	0
 12304  0027FE  6E17               	movwf	?i2___fladd,c
 12305  002800  0E00               	movlw	0
 12306  002802  6E18               	movwf	?i2___fladd+1,c
 12307  002804  0E00               	movlw	0
 12308  002806  6E19               	movwf	?i2___fladd+2,c
 12309  002808  0E00               	movlw	0
 12310  00280A  6E1A               	movwf	?i2___fladd+3,c
 12311  00280C  0012               	return	
 12312  00280E                     i2l5455:
 12313  00280E  90D8               	bcf	status,0,c
 12314  002810  3617               	rlcf	i2___fladd@b,f,c
 12315  002812  3618               	rlcf	i2___fladd@b+1,f,c
 12316  002814  3619               	rlcf	i2___fladd@b+2,f,c
 12317  002816  361A               	rlcf	i2___fladd@b+3,f,c
 12318  002818  BE26               	btfsc	i2___fladd@grs,7,c
 12319  00281A  8017               	bsf	i2___fladd@b,0,c
 12320  00281C  A026               	btfss	i2___fladd@grs,0,c
 12321  00281E  D002               	goto	i2l5465
 12322  002820  80D8               	bsf	status,0,c
 12323  002822  D001               	goto	L24
 12324  002824                     i2l5465:
 12325  002824  90D8               	bcf	status,0,c
 12326  002826                     L24:
 12327  002826  3626               	rlcf	i2___fladd@grs,f,c
 12328  002828  5025               	movf	i2___fladd@bexp,w,c
 12329  00282A  A4D8               	btfss	status,2,c
 12330  00282C  0625               	decf	i2___fladd@bexp,f,c
 12331  00282E                     i2l5471:
 12332  00282E  AE19               	btfss	i2___fladd@b+2,7,c
 12333  002830  D7EE               	goto	i2l5455
 12334  002832                     i2u651_40:
 12335  002832  0E00               	movlw	0
 12336  002834  6E24               	movwf	i2___fladd@aexp,c
 12337  002836  AE26               	btfss	i2___fladd@grs,7,c
 12338  002838  D00B               	goto	i2l1065
 12339  00283A  C026  F01F         	movff	i2___fladd@grs,??i2___fladd
 12340  00283E  0E7F               	movlw	127
 12341  002840  161F               	andwf	??i2___fladd,f,c
 12342  002842  B4D8               	btfsc	status,2,c
 12343  002844  D003               	goto	i2l1066
 12344  002846                     i2u653_40:
 12345  002846  0E01               	movlw	1
 12346  002848  6E24               	movwf	i2___fladd@aexp,c
 12347  00284A  D002               	goto	i2l1065
 12348  00284C                     i2l1066:
 12349  00284C  B017               	btfsc	i2___fladd@b,0,c
 12350  00284E  D7FB               	goto	i2u653_40
 12351  002850                     i2l1065:
 12352  002850  5024               	movf	i2___fladd@aexp,w,c
 12353  002852  B4D8               	btfsc	status,2,c
 12354  002854  D020               	goto	i2l5491
 12355  002856  0E01               	movlw	1
 12356  002858  2617               	addwf	i2___fladd@b,f,c
 12357  00285A  0E00               	movlw	0
 12358  00285C  2218               	addwfc	i2___fladd@b+1,f,c
 12359  00285E  2219               	addwfc	i2___fladd@b+2,f,c
 12360  002860  221A               	addwfc	i2___fladd@b+3,f,c
 12361  002862  A01A               	btfss	i2___fladd@b+3,0,c
 12362  002864  D018               	goto	i2l5491
 12363  002866  C017  F01F         	movff	i2___fladd@b,??i2___fladd
 12364  00286A  C018  F020         	movff	i2___fladd@b+1,??i2___fladd+1
 12365  00286E  C019  F021         	movff	i2___fladd@b+2,??i2___fladd+2
 12366  002872  C01A  F022         	movff	i2___fladd@b+3,??i2___fladd+3
 12367  002876  3422               	rlcf	??i2___fladd+3,w,c
 12368  002878  3222               	rrcf	??i2___fladd+3,f,c
 12369  00287A  3221               	rrcf	??i2___fladd+2,f,c
 12370  00287C  3220               	rrcf	??i2___fladd+1,f,c
 12371  00287E  321F               	rrcf	??i2___fladd,f,c
 12372  002880  C01F  F017         	movff	??i2___fladd,i2___fladd@b
 12373  002884  C020  F018         	movff	??i2___fladd+1,i2___fladd@b+1
 12374  002888  C021  F019         	movff	??i2___fladd+2,i2___fladd@b+2
 12375  00288C  C022  F01A         	movff	??i2___fladd+3,i2___fladd@b+3
 12376  002890  2825               	incf	i2___fladd@bexp,w,c
 12377  002892  A4D8               	btfss	status,2,c
 12378  002894  2A25               	incf	i2___fladd@bexp,f,c
 12379  002896                     i2l5491:
 12380  002896  2825               	incf	i2___fladd@bexp,w,c
 12381  002898  B4D8               	btfsc	status,2,c
 12382  00289A  D003               	goto	i2u659_40
 12383  00289C  5025               	movf	i2___fladd@bexp,w,c
 12384  00289E  A4D8               	btfss	status,2,c
 12385  0028A0  D00D               	goto	i2l5499
 12386  0028A2                     i2u659_40:
 12387  0028A2  0E00               	movlw	0
 12388  0028A4  6E17               	movwf	i2___fladd@b,c
 12389  0028A6  0E00               	movlw	0
 12390  0028A8  6E18               	movwf	i2___fladd@b+1,c
 12391  0028AA  0E00               	movlw	0
 12392  0028AC  6E19               	movwf	i2___fladd@b+2,c
 12393  0028AE  0E00               	movlw	0
 12394  0028B0  6E1A               	movwf	i2___fladd@b+3,c
 12395  0028B2  5025               	movf	i2___fladd@bexp,w,c
 12396  0028B4  A4D8               	btfss	status,2,c
 12397  0028B6  D002               	goto	i2l5499
 12398  0028B8  0E00               	movlw	0
 12399  0028BA  6E23               	movwf	i2___fladd@signs,c
 12400  0028BC                     i2l5499:
 12401  0028BC  A025               	btfss	i2___fladd@bexp,0,c
 12402  0028BE  D002               	goto	i2l5503
 12403  0028C0  8E19               	bsf	i2___fladd@b+2,7,c
 12404  0028C2  D001               	goto	i2l5505
 12405  0028C4                     i2l5503:
 12406  0028C4  9E19               	bcf	i2___fladd@b+2,7,c
 12407  0028C6                     i2l5505:
 12408  0028C6  90D8               	bcf	status,0,c
 12409  0028C8  3025               	rrcf	i2___fladd@bexp,w,c
 12410  0028CA  6E1A               	movwf	i2___fladd@b+3,c
 12411  0028CC  BE23               	btfsc	i2___fladd@signs,7,c
 12412  0028CE  8E1A               	bsf	i2___fladd@b+3,7,c
 12413  0028D0  C017  F017         	movff	i2___fladd@b,?i2___fladd
 12414  0028D4  C018  F018         	movff	i2___fladd@b+1,?i2___fladd+1
 12415  0028D8  C019  F019         	movff	i2___fladd@b+2,?i2___fladd+2
 12416  0028DC  C01A  F01A         	movff	i2___fladd@b+3,?i2___fladd+3
 12417  0028E0  0012               	return		;funcret
 12418  0028E2                     __end_ofi2___fladd:
 12419                           	opt callstack 0
 12420                           
 12421 ;; *************** function i2___awdiv *****************
 12422 ;; Defined at:
 12423 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12424 ;; Parameters:    Size  Location     Type
 12425 ;;  dividend        2    0[COMRAM] int 
 12426 ;;  divisor         2    2[COMRAM] int 
 12427 ;; Auto vars:     Size  Location     Type
 12428 ;;  __awdiv         2    6[COMRAM] int 
 12429 ;;  __awdiv         1    5[COMRAM] unsigned char 
 12430 ;;  __awdiv         1    4[COMRAM] unsigned char 
 12431 ;; Return value:  Size  Location     Type
 12432 ;;                  2    0[COMRAM] int 
 12433 ;; Registers used:
 12434 ;;		wreg, status,2, status,0
 12435 ;; Tracked objects:
 12436 ;;		On entry : 0/0
 12437 ;;		On exit  : 0/0
 12438 ;;		Unchanged: 0/0
 12439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12441 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12443 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12444 ;;Total ram usage:        8 bytes
 12445 ;; Hardware stack levels used:    1
 12446 ;; This function calls:
 12447 ;;		Nothing
 12448 ;; This function is called by:
 12449 ;;		_rutina
 12450 ;; This function uses a non-reentrant model
 12451 ;;
 12452                           
 12453                           	psect	text59
 12454  003D24                     __ptext59:
 12455                           	opt callstack 0
 12456  003D24                     i2___awdiv:
 12457                           	opt callstack 20
 12458                           
 12459                           ;incstack = 0
 12460  003D24  0E00               	movlw	0
 12461  003D26  6E06               	movwf	i2___awdiv@sign,c
 12462  003D28  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12463  003D2A  D006               	goto	i2l5277
 12464  003D2C  6C03               	negf	i2___awdiv@divisor,c
 12465  003D2E  1E04               	comf	i2___awdiv@divisor+1,f,c
 12466  003D30  B0D8               	btfsc	status,0,c
 12467  003D32  2A04               	incf	i2___awdiv@divisor+1,f,c
 12468  003D34  0E01               	movlw	1
 12469  003D36  6E06               	movwf	i2___awdiv@sign,c
 12470  003D38                     i2l5277:
 12471  003D38  AE02               	btfss	i2___awdiv@dividend+1,7,c
 12472  003D3A  D006               	goto	i2l5283
 12473  003D3C  6C01               	negf	i2___awdiv@dividend,c
 12474  003D3E  1E02               	comf	i2___awdiv@dividend+1,f,c
 12475  003D40  B0D8               	btfsc	status,0,c
 12476  003D42  2A02               	incf	i2___awdiv@dividend+1,f,c
 12477  003D44  0E01               	movlw	1
 12478  003D46  1A06               	xorwf	i2___awdiv@sign,f,c
 12479  003D48                     i2l5283:
 12480  003D48  0E00               	movlw	0
 12481  003D4A  6E08               	movwf	i2___awdiv@quotient+1,c
 12482  003D4C  0E00               	movlw	0
 12483  003D4E  6E07               	movwf	i2___awdiv@quotient,c
 12484  003D50  5003               	movf	i2___awdiv@divisor,w,c
 12485  003D52  1004               	iorwf	i2___awdiv@divisor+1,w,c
 12486  003D54  B4D8               	btfsc	status,2,c
 12487  003D56  D01C               	goto	i2l5305
 12488  003D58  0E01               	movlw	1
 12489  003D5A  6E05               	movwf	i2___awdiv@counter,c
 12490  003D5C  D004               	goto	i2l5291
 12491  003D5E                     i2l5289:
 12492  003D5E  90D8               	bcf	status,0,c
 12493  003D60  3603               	rlcf	i2___awdiv@divisor,f,c
 12494  003D62  3604               	rlcf	i2___awdiv@divisor+1,f,c
 12495  003D64  2A05               	incf	i2___awdiv@counter,f,c
 12496  003D66                     i2l5291:
 12497  003D66  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12498  003D68  D7FA               	goto	i2l5289
 12499  003D6A                     i2u621_40:
 12500  003D6A  90D8               	bcf	status,0,c
 12501  003D6C  3607               	rlcf	i2___awdiv@quotient,f,c
 12502  003D6E  3608               	rlcf	i2___awdiv@quotient+1,f,c
 12503  003D70  5003               	movf	i2___awdiv@divisor,w,c
 12504  003D72  5C01               	subwf	i2___awdiv@dividend,w,c
 12505  003D74  5004               	movf	i2___awdiv@divisor+1,w,c
 12506  003D76  5802               	subwfb	i2___awdiv@dividend+1,w,c
 12507  003D78  A0D8               	btfss	status,0,c
 12508  003D7A  D005               	goto	i2l5301
 12509  003D7C  5003               	movf	i2___awdiv@divisor,w,c
 12510  003D7E  5E01               	subwf	i2___awdiv@dividend,f,c
 12511  003D80  5004               	movf	i2___awdiv@divisor+1,w,c
 12512  003D82  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 12513  003D84  8007               	bsf	i2___awdiv@quotient,0,c
 12514  003D86                     i2l5301:
 12515  003D86  90D8               	bcf	status,0,c
 12516  003D88  3204               	rrcf	i2___awdiv@divisor+1,f,c
 12517  003D8A  3203               	rrcf	i2___awdiv@divisor,f,c
 12518  003D8C  2E05               	decfsz	i2___awdiv@counter,f,c
 12519  003D8E  D7ED               	goto	i2u621_40
 12520  003D90                     i2l5305:
 12521  003D90  5006               	movf	i2___awdiv@sign,w,c
 12522  003D92  B4D8               	btfsc	status,2,c
 12523  003D94  D004               	goto	i2l5309
 12524  003D96  6C07               	negf	i2___awdiv@quotient,c
 12525  003D98  1E08               	comf	i2___awdiv@quotient+1,f,c
 12526  003D9A  B0D8               	btfsc	status,0,c
 12527  003D9C  2A08               	incf	i2___awdiv@quotient+1,f,c
 12528  003D9E                     i2l5309:
 12529  003D9E  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 12530  003DA2  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 12531  003DA6  0012               	return		;funcret
 12532  003DA8                     __end_ofi2___awdiv:
 12533                           	opt callstack 0
 12534                           
 12535                           	psect	rparam
 12536  0000                     
 12537                           	psect	temp
 12538  00004D                     btemp:
 12539                           	opt callstack 0
 12540  00004D                     	ds	1
 12541  0000                     int$flags	set	btemp
 12542  0000                     wtemp8	set	btemp+1
 12543  0000                     ttemp5	set	btemp+1
 12544  0000                     ttemp6	set	btemp+4
 12545  0000                     ttemp7	set	btemp+8
 12546                           tosu	equ	0xFFF
 12547                           tosh	equ	0xFFE
 12548                           tosl	equ	0xFFD
 12549                           stkptr	equ	0xFFC
 12550                           pclatu	equ	0xFFB
 12551                           pclath	equ	0xFFA
 12552                           pcl	equ	0xFF9
 12553                           tblptru	equ	0xFF8
 12554                           tblptrh	equ	0xFF7
 12555                           tblptrl	equ	0xFF6
 12556                           tablat	equ	0xFF5
 12557                           prodh	equ	0xFF4
 12558                           prodl	equ	0xFF3
 12559                           indf0	equ	0xFEF
 12560                           postinc0	equ	0xFEE
 12561                           postdec0	equ	0xFED
 12562                           preinc0	equ	0xFEC
 12563                           plusw0	equ	0xFEB
 12564                           fsr0h	equ	0xFEA
 12565                           fsr0l	equ	0xFE9
 12566                           wreg	equ	0xFE8
 12567                           indf1	equ	0xFE7
 12568                           postinc1	equ	0xFE6
 12569                           postdec1	equ	0xFE5
 12570                           preinc1	equ	0xFE4
 12571                           plusw1	equ	0xFE3
 12572                           fsr1h	equ	0xFE2
 12573                           fsr1l	equ	0xFE1
 12574                           bsr	equ	0xFE0
 12575                           indf2	equ	0xFDF
 12576                           postinc2	equ	0xFDE
 12577                           postdec2	equ	0xFDD
 12578                           preinc2	equ	0xFDC
 12579                           plusw2	equ	0xFDB
 12580                           fsr2h	equ	0xFDA
 12581                           fsr2l	equ	0xFD9
 12582                           status	equ	0xFD8


Data Sizes:
    Strings     133
    Constant    0
    Data        14
    BSS         152
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      76
    BANK0           160    159     159
    BANK1           256     77     208
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[28]), STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1860_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[28]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[28]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[28]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    terminal@comand	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK1[10]), 

    length@text	PTR unsigned char  size(2) Largest target is 27
		 -> STR_6(CODE[8]), STR_4(CODE[21]), STR_3(CODE[20]), terminal@texto(BANK1[20]), 
		 -> STR_2(CODE[27]), main@texto(BANK1[8]), main@text(BANK1[6]), 

    enviarRS232@valores	PTR unsigned char  size(2) Largest target is 27
		 -> STR_6(CODE[8]), STR_4(CODE[21]), STR_3(CODE[20]), terminal@texto(BANK1[20]), 
		 -> STR_2(CODE[27]), main@texto(BANK1[8]), main@text(BANK1[6]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _rutina in COMRAM

    _rutina->i2___fladd
    i2___xxtofl->i2___awdiv
    i2___fladd->i2___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _terminal->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _fijarVelocidad->___fladd
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fladd->___flmul
    _enviarRS232->_length
    _encenderMotor->_definirVelocidad
    _encenderMotor->_rutinaArranque
    _cambiarPWM->_definirVelocidad

Critical Paths under _rutina in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal
    _terminal->_sprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rutina in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rutina in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rutina in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rutina in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rutina in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rutina in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rutina in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _rutina in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  113595
                                             63 BANK1     14    14      0
                           _PWMServo
               _configuracionInicial
                        _enviarRS232
                        _frenarMotor
                            _sprintf
                           _terminal
 ---------------------------------------------------------------------------------
 (1) _terminal                                            31    29      2   61611
                                             32 BANK1     31    29      2
                           _adelante
                              _atras
                         _cambiarPWM
                         _dirreccion
                      _encenderMotor
                        _enviarRS232
                   _estadoDirreccion
                     _fijarVelocidad
                        _frenarMotor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   50798
                                            149 BANK0     10    10      0
                                             24 BANK1      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   50096
                                            141 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           50    44      6   49494
                                            131 BANK0     10     4      6
                                              0 BANK1     24    24      0
                               _atoi
                               _ctoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    5909
                                             27 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   30837
                                             63 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4297
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             39 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     845
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4776
                                             27 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4497
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1795
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _frenarMotor                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _fijarVelocidad                                       9     9      0    8887
                                             55 BANK0      9     9      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     676
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                             39 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3773
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3732
                                             39 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _estadoDirreccion                                     7     5      2     145
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _enviarRS232                                          7     5      2    1057
                                              8 BANK0      7     5      2
                             _length
 ---------------------------------------------------------------------------------
 (3) _length                                               8     6      2     263
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _encenderMotor                                        0     0      0       0
                   _definirVelocidad
                     _rutinaArranque
 ---------------------------------------------------------------------------------
 (3) _rutinaArranque                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _dirreccion                                           5     3      2     288
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _cambiarPWM                                           0     0      0       0
                   _definirVelocidad
 ---------------------------------------------------------------------------------
 (3) _definirVelocidad                                     2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atras                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adelante                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configuracionInicial                                 0     0      0       0
           _configurarInterrupciones
                     _configurarPWM7
                  _configurarPuertos
                    _configurarRS232
               _configurarRS232US100
                     _configurarTMR5
 ---------------------------------------------------------------------------------
 (2) _configurarTMR5                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarRS232US100                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarRS232                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPuertos                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPWM7                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarInterrupciones                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWMServo                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rutina                                              3     3      0    2859
                                             38 COMRAM     3     3      0
                          i2___awdiv
                          i2___fladd
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (11) i2___xxtofl                                         14    10      4     374
                                              8 COMRAM    14    10      4
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___fladd                                          16     8      8    2036
                                             22 COMRAM    16     8      8
                          i2___awdiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMServo
   _configuracionInicial
     _configurarInterrupciones
     _configurarPWM7
     _configurarPuertos
     _configurarRS232
     _configurarRS232US100
     _configurarTMR5
   _enviarRS232
     _length
   _frenarMotor
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
   _terminal
     _adelante
     _atras
     _cambiarPWM
       _definirVelocidad
     _dirreccion
     _encenderMotor
       _definirVelocidad
       _rutinaArranque
     _enviarRS232
       _length
     _estadoDirreccion
     _fijarVelocidad
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _frenarMotor
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen

 _rutina (ROOT)
   i2___awdiv
   i2___fladd
     i2___awdiv (ARG)
     i2___xxtofl (ARG)
       i2___awdiv (ARG)
   i2___xxtofl
     i2___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     4D      D0       8       81.3%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      4C       1       80.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BB       6        0.0%
DATA                 0      0     1BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jun 28 17:35:33 2019

                     ___fldiv@aexp 0078                       ___fldiv@bexp 0077  
                     ___fldiv@sign 0070                       ___awdiv@sign 0065  
              ___wmul@multiplicand 0062                       __CFG_CP0$OFF 000000  
                    terminal@texto 01A4                                l335 3B1E  
                              l257 3E20                                l409 15A8  
                              l443 2D44                                l269 3C6A  
                              l445 2D4C                                l278 417E  
                              l383 12CA                                l776 3594  
                              l949 367E                                l959 397A  
                              _PR2 000FCB                        i2___fladd@a 001B  
                      i2___fladd@b 0017                    ?_configurarTMR5 0001  
                  ?_configurarPWM7 0001                                _pad 3AEE  
                   terminal@degree 01BA                       ___awmod@sign 0065  
                       i2___xxtofl 32D4                     terminal@comand 019D  
                 ??_fijarVelocidad 0097                                wreg 000FE8  
                     __CFG_IESO$ON 000000                       ___flmul@aexp 007B  
                     ___flmul@bexp 0080                       ___flmul@sign 007A  
                     ___flmul@temp 0085                       ___flmul@prod 0081  
         __end_of_estadoDirreccion 3E2A                       ___fltol@exp1 0090  
                  ??_encenderMotor 0062                               l1040 240C  
                             l1041 23EA                               l1106 2AC4  
                             l1107 2AC0                               l1125 1FF6  
                             l1221 3186                               l1142 2294  
                             l1134 220E                               l1135 220A  
                             l1056 24DE                               l1065 2544  
                             l1233 2C86                               l1313 41E6  
                             l1066 2540                               l1173 3250  
                             l1166 31D2                               l1095 2A56  
                             l6003 2518                               l6041 25B8  
                             l6009 2522                               l6043 25BA  
                             l7011 30B6                               l7003 309E  
                             l6131 2CE6                               l6037 25B0  
                             l6029 258A                               l6301 1FA6  
                             l7013 30BC                               l6061 3B16  
                             l6117 2BE6                               l7101 1A3E  
                             ?_pad 0070                               l6303 1FB6  
                             l7015 30E8                               l6071 3B6E  
                             l6063 3B28                               l6231 2A54  
                             l6207 29B6                               l6135 2D14  
                             l6127 2CA8                               l7103 1A5C  
                             l7009 30AE                               l6057 3B06  
                             l6225 2A2E                               l6217 2A06  
                             l6161 2910                               l7041 39D6  
                             l7121 1B42                               l7105 1A6A  
                             l7201 1F3A                               l6411 22B2  
                             l7019 3122                               l6067 3B42  
                             l6243 2A8A                               l6083 371A  
                             l7123 1B60                               l6317 1FE2  
                             l6237 2A6C                               l6181 2950  
                             l6165 2914                               l6093 3764  
                             l7141 1C66                               l7125 1B6E  
                             l7231 3E5E                               l6327 2014  
                             l6319 1FE6                               l6431 3CB4  
                             l6271 2B56                               l6263 2B08  
                             l6511 3BF4                               l6087 3724  
                             l7039 39C8                               l7071 196C  
                             l7063 1956                               l7401 3DD0  
                             l6193 2988                               l6185 2954  
                             l6601 360C                               l7161 1D5A  
                             l7065 1958                               l7411 3DF4  
                             l6443 3CDA                               l6267 2B2C  
                             l6515 3C12                               l6507 3BC0  
                             l6531 357E                               l6523 3534  
                             l6099 40BA                               l6611 3668  
                             l7083 1978                               l7075 1970  
                             l7067 1968                               l7243 4004  
                             l7237 3E96                               l7261 3206  
                             l7253 31E2                               l5821 3A66  
                             l6445 3CE2                               l6437 3CC4  
                             l6277 2B62                               l6701 10A4  
                             l6621 391C                               l7157 1D30  
                             l7149 1CD0                               l7245 4032  
                             l7423 3C2E                               l7407 3DE2  
                             l7415 3DFE                               l6375 21D4  
                             l7271 3276                               l7263 3212  
                             l5831 4284                               l6463 3D1A  
                             l6455 3D02                               l6279 2B64  
                             l6199 299E                               l6527 3568  
                             l7191 1F16                               l7087 1984  
                             l7079 1974                 __CFG_WPFP$PAGE_127 000000  
                             l7513 4188                               l7441 3C8A  
                             l7425 3C32                               l7433 3C40  
                             l6369 21B6                               l7273 3282  
                             l7265 3238                               l5841 4392  
                             l6537 35CC                               l6545 4370  
                             l6705 10CC                               l7185 1ED6  
                             l7177 1E36                               l7089 19CC  
                             l7427 3C36                               l6395 2252  
                             l6299 1FA2                               l6571 389A  
                             l6555 3850                               l7259 3200  
                             l5835 429C                               l6459 3D0C  
                             l6491 3F6C                               l6483 3F4C  
                             l6475 3F32                               l6715 1138  
                             l6723 1152                               l6627 3964  
                             l6619 3908                               l7195 1F22  
                             l7437 3C78                               l7429 3C3A  
                             l5941 23F8                               l6581 38B2  
                             l6485 3F54                               l6805 149A  
                             l6733 11D0                               l7533 37B6  
                             l7375 3F08                               l5943 23FC  
                             l5863 22F6                               l6399 2270  
                             l6583 38BE                               l6575 38AA  
                             l6639 4270                               l5839 438C  
                             l6647 4112                               l6495 3F76  
                             l6479 3F3E                               l6751 12B2  
                             l6735 1220                               l7463 2EEE  
                             l7527 379E                               l7369 3EC2  
                             l5929 239E                               l7289 32C2  
                             l6649 4120                               l6905 17E0  
                             l6841 1644                               l6761 12DA  
                             l6729 1196                               l7481 2F5C  
                             l7553 3814                               l7545 37D6  
                             l7395 3DB8                               l5891 2342  
                             l5867 22FA                               l6499 3F84  
                             l6907 17EA                               l6827 15A0  
                             l6819 1548                               l6771 1326  
                             l6755 12D4                               l6739 125C  
                             l6667 0FD2                               l7475 2F1E  
                             l7539 37C6                               l5965 2452  
                             l5957 2430                               l6589 38DA  
                             l6917 1842                               l6853 1674  
                             l6861 1694                               l6829 15C2  
                             l6781 1344                               l7477 2F3A  
                             l7469 2F06                               l7493 2FF8  
                             l7399 3DCA                               l5967 2456  
                             l5975 2468                               l5887 233E  
                             l6943 18CE                               l6927 186E  
                             l6791 1378                               l6679 1000  
                             l6687 1016                               l6599 35F8  
                             l7479 2F56                               l5993 2502  
                             l5985 24CE                               l6769 1322  
                             l6697 1082                               l5899 2362  
                             l6787 1368                               l6699 109A  
                             l6869 16B8                               l6877 1752  
                             l6797 13A2                               l6967 2D86  
                             l6993 304C                               l6889 1794  
                             l6977 2E74                               l6995 3050  
                             STR_1 0F61                               STR_2 0F1D  
                             STR_3 0F4D                               STR_4 0F38  
                             STR_5 0F01                     _contador_datos 0041  
                             STR_6 0F6B                               STR_7 0F73  
                             STR_8 0F7B                               u7110 2414  
                             u7060 23C0                               u7070 23D0  
                             u8030 2260                               u7320 2596  
                             u7240 2526                               u7080 23D2  
                             u8040 227E                               u8200 3C0E  
                             u7400 36E0                               u9000 2EA0  
                             u9001 2E9E                               u9010 2EAE  
                             u7260 253A                               u7500 41CE  
                             u9020 2EB2                               u7405 36D4  
                             u8150 3F58                               u8320 38C4  
                             u9040 309A                               u7520 2BB4  
                             u9200 1AA8                               u8090 3CE6  
                             u7450 375C                               u7530 2BD4  
                             u9210 1AAA                               u7620 434A  
                             u8420 426C                               u9060 3156  
                             u6900 3A5E                               u7460 375E  
                             u8500 105C                               u9140 3A24  
                             u9220 1AB8                               u7445 373E  
                             u7525 2BAA                               u8341 35D6  
                             u8270 383E                               u7630 434C  
                             u9070 3158                               u7470 40F6  
                             u8280 386E                               u6920 3AA6  
                             u7800 2ABA                               u8360 3610  
                             u7570 2C66                               u7490 41CC  
                             u8610 12C0                               u8530 1110  
                             u9330 1DE8                               u9250 1BAC  
                             u7555 2BFE                               u7556 2C04  
                             u8540 1112                               u8460 0FF0  
                             u9340 1DEA                               u9260 1BAE  
                             u8285 3864                               u7557 2C12  
                             u7477 40EC                               u7590 2CC6  
                             u6950 4318                               u8390 3920  
                             u9270 1BBC                               u7575 2C5C  
                             u9520 3EF0                               u7840 2B16  
                             u6960 431A                               u8640 12F2  
                             u7850 2B3A                               u8490 105A  
                             u7595 2CBC                               u9380 3E4C  
                             u7940 2002                               u8580 1286  
                             u9621 3778                               u9390 3E8C  
                             u7950 2178                               u8910 1858  
                             u8750 1538                               u9527 3EE6  
                             u9631 3786                               u9480 328C  
                             u8680 1340                               u8930 18B8  
                             u8850 1776                               u9707 43CC  
                             u9387 3E42                               u7955 216E  
                             u8940 18BA                               u9397 3E82  
                             u7990 2204                               u9591 2EE2  
                             u8970 2D38                               u9697 3EFA  
                     ?_frenarMotor 0001                               _TMR2 000FCC  
                 ?_configurarRS232 0001                       ?_enviarRS232 0068  
                    __CFG_FCMEN$ON 000000                               _dbuf 0123  
                             _atoi 3038                               _ctoa 4100  
                             _main 376E                               _prec 0038  
                             _nout 011C                               pad@i 0077  
                             pad@p 0074                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf1 000FE7  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 0079                               fsr2l 000FD9  
                             btemp 004D                               _utoa 2D26  
                    ___fpclassifyf 36A0                               prodh 000FF4  
                             prodl 000FF3                               start 014E  
                  ___fldiv@new_exp 0071                       _tolower$1932 006C  
                     ___param_bank 000000                              ??_pad 0076  
                    __CFG_PLLDIV$3 000000                       _BAUDCON1bits 000F7E  
                     _BAUDCON2bits 000F7C                      ___fltol@sign1 008F  
                            ?_atoi 0067                              ?_ctoa 007B  
                  __end_of___fladd 25D6                              ?_main 0001  
                  __end_of___fldiv 2B6C                    __end_of___awdiv 3D24  
                  __end_of___flneg 4382                              STR_11 0F77  
                            STR_12 0F7F                              STR_15 0F83  
                            STR_17 0F83                    __end_of___awmod 3F8E  
                  __end_of___flmul 22C8                    __end_of___flsub 4238  
                  __end_of___fltol 38EC                              ?_utoa 007B  
                  __end_of___lodiv 36A0                    ___awdiv@divisor 0062  
                            _T2CON 000FCA                    __end_of___lomod 399C  
                            _T5CON 000F22                              i2l202 0072  
                            i2l212 0142                              i2l205 0080  
                            i2l207 0132                              i2l198 0042  
                  ___awdiv@counter 0064                       vfpfcnvrt@fmt 00E5  
                     vfpfcnvrt@llu 017D                              _TMR5H 000F24  
                            _TMR5L 000F23                      i2___fladd@grs 0026  
                            _datos 0173                              _flags 003A  
                            _atras 44E8                              _fputc 3A4C  
                            _parar 003E                              _fputs 4278  
                  __end_of_isdigit 4352                     __CFG_CLKOEC$ON 000000  
                            _motor 0044                              atoi@n 0074  
                            pad@fp 0070                              atoi@s 0067  
                            _width 0036                              ctoa@c 007D  
                            _putch 450A                              ctoa@w 007E  
                  __end_of_isspace 4278                    __end_of_isupper 4320  
                            tablat 000FF5                   __end_of_PWMServo 41A2  
                            plusw1 000FE3                              plusw2 000FDB  
                            ttemp5 004E                              ttemp6 0051  
                            ttemp7 0055                              utoa@d 007D  
                            utoa@i 0099                              utoa@n 0091  
                            utoa@p 008D                              utoa@w 008F  
                            status 000FD8                              wtemp8 004E  
                  __end_of_sprintf 40AA                     ?___fpclassifyf 0060  
                  __end_of_tolower 41F0                   _servo_dirreccion 0042  
                  __end_of_strncmp 3A4C                   ___lodiv@dividend 0060  
                 terminal@medicion 01B8          enviarRS232@longitud_texto 006C  
               __size_ofi2___fladd 030C                 __size_ofi2___awdiv 0084  
          __CFG_DSWDTOSC$INTOSCREF 000000                    __initialization 3F8E  
                     __end_of_atoi 3190                       __end_of_ctoa 4152  
                     __end_of_main 3830                  ?_definirVelocidad 0001  
                     __end_of_utoa 2EDC                 ??_definirVelocidad 0060  
                   __CFG_OSC$HSPLL 000000                             ??_atoi 0069  
                           ??_ctoa 007E                             ??_main 00FF  
                           ??_utoa 0085                      __activetblptr 000003  
                 dirreccion@degree 0060                        ?i2___xxtofl 0009  
                 ___lodiv@quotient 0070                             ?_atras 0001  
                           ?_fputc 0060                             ?_fputs 0069  
                           _CCPR7L 000F0A                             _ANCON0 000F48  
                           _ANCON1 000F49                   ___awdiv@dividend 0060  
                           ?_putch 0001                             i2l1040 2718  
                           i2l1041 26F6                             i2l1056 27EA  
                           i2l1065 2850                             i2l1066 284C  
                           i2l1173 3390                             i2l1166 3312  
                   __CFG_WDTEN$OFF 000000                             i2l5301 3D86  
                           i2l5305 3D90                             i2l5403 2704  
                           i2l5309 3D9E                             i2l5405 2708  
                           i2l5325 2602                             i2l5503 28C4  
                           i2l5505 28C6                             i2l5361 266E  
                           i2l5353 264E                             i2l5329 2606  
                           i2l5521 3322                             i2l5291 3D66  
                           i2l5283 3D48                             i2l5427 275E  
                           i2l5419 273C                             i2l5531 3352  
                           i2l5277 3D38                             i2l5429 2762  
                           i2l5437 2774                             i2l5349 264A  
                           i2l5541 33C2                             i2l5533 3378  
                           i2l5455 280E                             i2l5471 282E  
                           i2l5447 27DA                             i2l5391 26AA  
                           i2l5527 3340                             i2l5289 3D5E  
                           i2l5465 2824                             i2l5529 3346  
                           i2l5491 2896                             i2l5539 33B6  
                           i2l5557 3402                             i2l5569 002E  
                           i2l5499 28BC                             i2l5597 00F4  
                           _RCREG1 000FAF                             _RCREG2 000FAA  
                 __end_of_adelante 44FC                             _RCSTA1 000FAC  
                           _RCSTA2 000F9C                      vfpfcnvrt@done 0185  
                           _SPBRG1 000FB0                             _SPBRG2 000FAB  
                           _PPSCON 000EBF                             _RPINR1 000EE1  
                           _RPOR23 000ED7                     __CFG_WPCFG$OFF 000000  
                           _TXREG1 000FAE                             _TXREG2 000FA9  
                 __end_of___xxtofl 32D4                             _TXSTA1 000FAD  
                           _TXSTA2 000FA8                     __CFG_WPDIS$OFF 000000  
                 _contador_timer_5 003C                     i2___fladd@aexp 0024  
                   i2___fladd@bexp 0025                     __CFG_XINST$OFF 000000  
                     _CCPTMRS1bits 000F51                       vfprintf@cfmt 00F3  
                           ___flge 34FE                             ___fleq 3B8A  
                        ??___fladd 008F                             ___wmul 43DC  
                _tiempo_anterior_1 0045                          ??___fldiv 0068  
                        ??___awdiv 0064                          ??___flneg 0064  
                   __CFG_STVREN$ON 000000                          ??___awmod 0064  
                        ??___flmul 0076                          ??___flsub 009F  
                        ??___fltol 008B      __size_of_configuracionInicial 001A  
                        ??___lodiv 0070                          ??___lomod 0070  
                           _efgtoa 0F88                             _floorf 2B6C  
                           _length 3E2A                             clear_0 3FD4  
                           clear_1 3FE0                   ___awdiv@quotient 0066  
                  ___awmod@divisor 0062                    ___awmod@counter 0064  
                           pad@buf 0072                             ctoa@fp 007B  
                           _rutina 0008                             _strcpy 40AA  
                           _strlen 4382                  _configurarPuertos 44BE  
                   i2___awdiv@sign 0006                             fputc@c 0060  
                           fputs@c 006D                             fputs@i 006E  
                     __pdataCOMRAM 0045                             fputs@s 0069  
                __end_ofi2___fladd 28E2                          ??_isdigit 0062  
                __end_ofi2___awdiv 3DA8                    ___fpclassifyf@e 0068  
                  ___fpclassifyf@u 006A                    ___fpclassifyf@x 0060  
               ?_configurarPuertos 0001                       __mediumconst 0000  
                        ??_isspace 0062                   __end_of_terminal 3038  
                           tblptrh 000FF7                          ??_isupper 0062  
                           tblptrl 000FF6                             tblptru 000FF8  
                           putch@c 0001                   __end_of_vfprintf 4052  
                           utoa@fp 007B                          ??_sprintf 00F5  
                        ??_tolower 0068                          ??_strncmp 0066  
              ??_configurarPuertos 0060                         ___flge@ff1 0087  
                       ___flge@ff2 008B                    ??___fpclassifyf 0064  
             __CFG_LS48MHZ$SYS48X8 000000                       ___xxtofl@arg 006A  
                     ___xxtofl@exp 0069                       ___xxtofl@val 0060  
                       ___fleq@ff1 0060                         ___fleq@ff2 0064  
     __end_of_configurarRS232US100 4426                         __accesstop 0060  
          __end_of__initialization 3FE6                         ___flneg@f1 0060  
             __size_of_frenarMotor 0010           _configurarInterrupciones 4446  
             __size_of_enviarRS232 0076                      ___rparam_used 000001  
                       ___fltol@f1 0087                       enviarRS232@i 006E  
                  __CFG_IOL1WAY$ON 000000               __CFG_WPEND$PAGE_WPFP 000000  
              __size_ofi2___xxtofl 0140                     __pcstackCOMRAM 0001  
                     __pidataBANK1 4504                      __end_of_atras 44F2  
                 ??_configurarTMR5 0060                   ??_configurarPWM7 0060  
                    __end_of_fputc 3AEE                      __end_of_fputs 42B4  
                    __end_of_putch 450C          __end_of_configurarPuertos 44CE  
                  __CFG_DSWDTPS$G2 000000                          ?_PWMServo 0001  
                       _cambiarPWM 44DC                            ??_atras 0060  
                          ??_fputc 0064                            ??_fputs 006D  
                          ??_putch 0060                  ?_estadoDirreccion 0060  
          __size_of_rutinaArranque 002C                         __pbssBANK1 0100  
               ??_estadoDirreccion 0062                            ?___flge 0087  
                          ?___fleq 0060                            ?___wmul 0060  
                          ?_efgtoa 009F                            ?_floorf 0079  
                          ?_length 0060                         ??_PWMServo 0060  
                          ?_rutina 0001                            ?_strcpy 0060  
                          ?_strlen 0060                          ?_adelante 0001  
                        ?___xxtofl 0060                 __size_of_vfpfcnvrt 0668  
                       _dirreccion 3C16                            _RPINR16 000EF7  
                    _bandera_fuego 0122                   fijarVelocidad@DC 0097  
                    _bandera_servo 0120                   ___lomod@dividend 0060  
            __end_of_encenderMotor 44DC                   __CFG_CFGPLLEN$ON 000000  
                  i2___fladd@signs 0023                            __Hparam 0000  
                          __Lparam 0000           __size_of_configurarRS232 0018  
                        ?_terminal 019D                    __size_of___flge 00D2  
                  __size_of___fleq 008C                            ___fladd 22C8  
                          ___fldiv 28E2                            ___awdiv 3C9E  
                          ___flneg 4352                            ___awmod 3F1C  
                          ___flmul 1F74                            ___flsub 41F0  
                          ___fltol 3830                    __size_of___wmul 0028  
                          ___lodiv 35D0                            ___lomod 38EC  
                        ?_vfprintf 00ED                       __psmallconst 0F00  
                  __size_of_efgtoa 0984                            _bandera 0121  
       __size_of_configurarPuertos 0010                    __size_of_floorf 01BA  
                          __pcinit 3F8E                    __size_of_length 007C  
                          __ramtop 0F00             estadoDirreccion@angulo 0064  
                          __ptext0 376E                            __ptext1 2EDC  
                          __ptext2 4052                            __ptext3 3FF0  
                          __ptext4 190C                            __ptext5 2D26  
                          __ptext6 38EC                            __ptext7 35D0  
                          __ptext8 399C                            __ptext9 0F88  
             _configurarRS232US100 4404                         ??_adelante 0060  
                  __size_of_rutina 0146                    __size_of_strcpy 0056  
                  __size_of_strlen 002E                          _T2CONbits 000FCA  
                     __size_of_pad 009C                            _isdigit 4320  
                     ??i2___xxtofl 000D                         ??___xxtofl 0064  
                 ___awmod@dividend 0060                        ?_cambiarPWM 0001  
                          _isspace 4238                          _T5CONbits 000F22  
                          _isupper 42EE                            efgtoa@c 00A5  
                          efgtoa@d 00C3                            efgtoa@e 00DB  
                          efgtoa@f 00A1                            efgtoa@g 00D7  
                          efgtoa@h 00CD                            efgtoa@i 00D5  
                          efgtoa@l 00D1                            efgtoa@m 00BF  
                          efgtoa@n 00DD                            efgtoa@p 00C7  
                          efgtoa@t 00BB                            efgtoa@u 00DF  
                          efgtoa@w 00CA          __size_of_definirVelocidad 003A  
                          atoi@neg 006D                     length@longitud 0064  
                          _sprintf 4052                            _tolower 41A2  
                          _strncmp 399C               end_of_initialization 3FE6  
                          floorf@e 0087                            floorf@m 0083  
                          floorf@u 0089                            floorf@x 0079  
                          length@i 0067                            fputc@fp 0062  
                          fputs@fp 006B            __size_of_fijarVelocidad 00EA  
                   i2___xxtofl@arg 0013                     i2___xxtofl@exp 0012  
                   i2___xxtofl@val 0009                  __end_of_vfpfcnvrt 1F74  
                       efgtoa@mode 00CC                         efgtoa@sign 00C5  
               __end_ofi2___xxtofl 3414                         ??_terminal 019F  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                         ??_vfprintf 00F3  
                          strcpy@d 0068                            strlen@a 0062  
                          strcpy@s 0066                            strlen@s 0060  
            ?_configurarRS232US100 0001                          _PORTAbits 000F80  
                        _PORTDbits 000F83                   __CFG_DSBOREN$OFF 000000  
                      ___fladd@grs 0096                   __CFG_CPUDIV$OSC1 000000  
                    ___xxtofl@sign 0068                          _TRISAbits 000F92  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                        _TRISDbits 000F95                        ?_dirreccion 0060  
       ??_configurarInterrupciones 0060                        ___fldiv@grs 0073  
     __end_of_configuracionInicial 4480                        ___fldiv@rem 006C  
                        i2___fladd 25D6                          i2___awdiv 3D24  
                __CFG_SOSCSEL$HIGH 000000                     _rutinaArranque 43B0  
                      ___flmul@grs 007C                 i2___awdiv@dividend 0001  
                      _CCP7CONbits 000F09                __CFG_MSSP7B_EN$MSK7 000000  
              __size_of_cambiarPWM 000C                     __end_of___flge 35D0  
                   __end_of___fleq 3C16                        vfpfcnvrt@ap 00E7  
                      vfpfcnvrt@ct 0191                        vfpfcnvrt@fp 00E3  
                   __end_of___wmul 4404                      __pidataCOMRAM 44FC  
                   __end_of_efgtoa 190C                  ??_configurarRS232 0060  
                   __end_of_floorf 2D26                     __end_of_length 3EA6  
                       floorf@F524 002A                   __CFG_DSWDTEN$OFF 000000  
                   __end_of_rutina 014E                     __end_of_strcpy 4100  
                   __end_of_strlen 43B0                start_initialization 3F8E  
                  ___lodiv@divisor 0068                  __size_of_PWMServo 0050  
                  ___lodiv@counter 0078                 i2___awdiv@quotient 0007  
           __end_of_rutinaArranque 43DC                        __end_of_pad 3B8A  
                       ?i2___fladd 0017                         ?i2___awdiv 0001  
                    ??_frenarMotor 0060                      ??_enviarRS232 006A  
            __end_of___fpclassifyf 376E                         length@dato 0066  
                       length@text 0060                        vfprintf@fmt 00EF  
                         ??___flge 008F                           ??___fleq 0068  
              __size_of_dirreccion 0088                           ??___wmul 0064  
        __size_of_estadoDirreccion 0082                           ??_efgtoa 00A6  
                __CFG_ADCSEL$BIT12 000000                        __pdataBANK1 01CA  
           ??_configurarRS232US100 0060                           ??_floorf 007D  
                         ??_length 0062                           ??_rutina 0027  
                         ??_strcpy 0064                           ??_strlen 0062  
                        ___fladd@a 008B                          ___fladd@b 0087  
                        ___fldiv@a 0064                          ___fldiv@b 0060  
                        ___flmul@a 0072                          ___flmul@b 006E  
                      __pbssCOMRAM 002A                          ___flsub@a 009B  
                        ___flsub@b 0097                  __size_of_adelante 000A  
                    __pcstackBANK0 0060                      __pcstackBANK1 017D  
                  ?_rutinaArranque 0001                   _definirVelocidad 42B4  
                __size_of___xxtofl 0144                     _fijarVelocidad 3414  
                        _atoi$1816 006F                          _atoi$1817 0073  
                        _atoi$1818 0071                        _efgtoa$1311 00B3  
                      _efgtoa$1306 00AF                        _efgtoa$1315 00B5  
                      _efgtoa$1307 00B1                        _efgtoa$1316 00B7  
                      _efgtoa$1317 00B9                __end_of_frenarMotor 44BE  
              __end_of_enviarRS232 3F1C                 enviarRS232@valores 0068  
                        __pintcode 0008                           ?___fladd 0087  
                         ?___fldiv 0060                           ?___awdiv 0060  
                         ?___flneg 0060                           ?___awmod 0060  
                         ?___flmul 006E                           ?___flsub 0097  
                         ?___fltol 0087               _configuracionInicial 4466  
               dirreccion@tiempo_1 0064                           ?___lodiv 0060  
                         ?___lomod 0060                  __size_of_terminal 015C  
                        _distancia 0032                  __size_of_vfprintf 0062  
                  ___lomod@divisor 0068                        __smallconst 0F00  
                  ___lomod@counter 0070                           ?_isdigit 0060  
                        _indicador 0043               __CFG_RTCOSC$T1OSCREF 000000  
                     ??_cambiarPWM 0062                           ?_isspace 0060  
 __end_of_configurarInterrupciones 4466                           ?_isupper 0060  
          __size_of_configurarPWM7 0020            __size_of_configurarTMR5 0016  
                      ??i2___fladd 001F                        ??i2___awdiv 0005  
                   __size_of_atras 000A                           ?_sprintf 0195  
                         ?_tolower 0066                     __size_of_fputc 00A2  
                   __size_of_fputs 003C                           ?_strncmp 0060  
           __end_of_fijarVelocidad 34FE                     __size_of_putch 0002  
            estadoDirreccion@valor 0066                          _obstaculo 011F  
                   ___wmul@product 0064                           _PIE1bits 000F9D  
                         _PIE3bits 000FA3                           _PIE5bits 000F91  
                         _PIR1bits 000F9E                           i2u621_40 3D6A  
                         _PIR3bits 000FA4                           i2u633_40 26CC  
                         _PIR5bits 000F98                           i2u634_40 26DC  
                         i2u651_40 2832                           i2u635_40 26DE  
                         i2u653_40 2846                           i2u638_40 2720  
                         i2u659_40 28A2                           i2u669_40 33CC  
                 __CFG_WDTPS$32768 000000                          main@F7117 01CA  
                        main@F7119 0114              ?_configuracionInicial 0001  
                         _TIME_MAX 0047                 __end_of_cambiarPWM 44E8  
                        _velocidad 0049                          _vfpfcnvrt 190C  
                ___wmul@multiplier 0060             __size_of_encenderMotor 000E  
                         _PWMServo 4152                  i2___awdiv@divisor 0003  
                        main@texto 01C2                  i2___awdiv@counter 0005  
                     ??_dirreccion 0062                       _isspace$1847 0066  
                       vfpfcnvrt@c 0194                         vfpfcnvrt@f 018D  
                      _INTCON2bits 000FF1                        _INTCON3bits 000FF0  
                        copy_data0 3FA2                          copy_data1 3FC2  
                  ?_fijarVelocidad 0001                        _frenarMotor 44AE  
                      _enviarRS232 3EA6                    _configurarRS232 4480  
                         __Hrparam 0000                         vfprintf@ap 00F1  
                         __Lrparam 0000                         vfprintf@fp 00ED  
                 _estadoDirreccion 3DA8                        _estadoFuego 0040  
               __end_of_dirreccion 3C9E                   __size_of___fladd 030E  
                 __size_of___fldiv 028A                   __size_of___awdiv 0086  
                 __size_of___flneg 0030                   __size_of___awmod 0072  
                 __size_of___flmul 0354                   __size_of___flsub 0048  
                 __size_of___fltol 00BC                   __size_of___lodiv 00D0  
                 __size_of___lomod 00B0                         ?_vfpfcnvrt 00E3  
                         _adelante 44F2                 ___fpclassifyf@F463 002E  
              _fijarVelocidad$2157 009B                         sprintf@fmt 0197  
                         _cicle_90 004B                           ___xxtofl 3190  
                 __size_of_isdigit 0032                   __size_of_isspace 0040  
                         __ptext10 41A2                           __ptext11 42EE  
                         __ptext20 3F1C                           __ptext12 40AA  
                         __ptext21 3C9E                           __ptext13 2B6C  
                         __ptext30 4320                           __ptext22 4100  
                         __ptext14 36A0                           __ptext31 43DC  
                         __ptext23 3AEE                           __ptext15 41F0  
                         __ptext40 3E2A                           __ptext32 44AE  
                         __ptext24 4382                           __ptext16 4352  
                         __ptext41 44CE                           __ptext33 3414  
                         __ptext25 4278                           __ptext17 34FE  
                         __ptext50 4404                           __ptext42 43B0  
                         __ptext34 3190                           __ptext26 3A4C  
                         __ptext18 3B8A                           __ptext51 4480  
                         __ptext43 3C16                           __ptext35 3830  
                         __ptext27 450A                           __ptext19 28E2  
                         __ptext52 44BE                           __ptext44 44DC  
                         __ptext36 1F74                           __ptext28 3038  
                         __ptext53 4426                           __ptext45 42B4  
                         __ptext37 22C8                           __ptext29 4238  
                         __ptext54 4446                           __ptext46 44E8  
                         __ptext38 3DA8                           __ptext55 4152  
                         __ptext47 44F2                           __ptext39 3EA6  
                         __ptext48 4466                           __ptext57 32D4  
                         __ptext49 4498                           __ptext58 25D6  
                         __ptext59 3D24                   __size_of_isupper 0032  
                       rutina@dato 0029                   __size_of_sprintf 0058  
                 __size_of_tolower 004E                         strcpy@dest 0060  
                 __size_of_strncmp 00B0                      _encenderMotor 44CE  
                    __size_of_atoi 0158                      __size_of_ctoa 0052  
                    __size_of_main 00C2                      __size_of_utoa 01B6  
           ??_configuracionInicial 0060                           efgtoa@fp 009F  
                         efgtoa@ne 00C1                           efgtoa@pp 00BD  
__size_of_configurarInterrupciones 0020                           efgtoa@ou 00AB  
        ?_configurarInterrupciones 0001           __end_of_definirVelocidad 42EE  
                         _terminal 2EDC                           int$flags 004D  
                         _vfprintf 3FF0                           main@text 01BC  
                 ??_rutinaArranque 0060                     _vfpfcnvrt$1344 018B  
                   _vfpfcnvrt$1338 0187                     _vfpfcnvrt$1339 0189  
                       _INTCONbits 000FF2                     _configurarTMR5 4498  
                   _configurarPWM7 4426                           isdigit@c 0060  
          __end_of_configurarRS232 4498                           intlevel2 0000  
                        sprintf@ap 00F7                  _bandera_distancia 011E  
                   ?_encenderMotor 0001                    i2___xxtofl@sign 0011  
                         isspace@c 0060                          strcpy@src 0062  
                         isupper@c 0060                          strncmp@_l 0060  
                        strncmp@_r 0062                        efgtoa@nmode 00C9  
                      ??_vfpfcnvrt 00E9      __size_of_configurarRS232US100 0022  
                         sprintf@f 00F9                           tolower@c 0066  
                         sprintf@s 0195             __end_of_configurarPWM7 4446  
           __end_of_configurarTMR5 44AE             __size_of___fpclassifyf 00CE  
                         strncmp@l 0067                           strncmp@n 0064  
                         strncmp@r 0069                      ___fladd@signs 0093  
              fijarVelocidad@speed 009F                       ___fladd@aexp 0094  
                     ___fladd@bexp 0095                      terminal@F7126 0100  
