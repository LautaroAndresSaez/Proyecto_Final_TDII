

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jun 28 18:34:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 2.05
    82                           ; Generated 20/12/2018 GMT
    83                           ; 
    84                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F47J53 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataCOMRAM
   117  00450E                     __pidataCOMRAM:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for _tiempo_anterior_1
   121  00450E  0041               	dw	65
   122                           
   123                           ;initializer for _TIME_MAX
   124  004510  03A7               	dw	935
   125                           
   126                           ;initializer for _velocidad
   127  004512  01C2               	dw	450
   128                           
   129                           ;initializer for _cicle_90
   130  004514  01C2               	dw	450
   131                           
   132                           	psect	idataBANK1
   133  004516                     __pidataBANK1:
   134                           	opt callstack 0
   135                           
   136                           ;initializer for main@F7119
   137  004516  48                 	db	72
   138  004517  4F                 	db	79
   139  004518  4C                 	db	76
   140  004519  41                 	db	65
   141  00451A  21                 	db	33
   142  00451B  00                 	db	0
   143  0000                     _RPINR16	set	3831
   144  0000                     _RPOR23	set	3799
   145  0000                     _RPINR1	set	3809
   146  0000                     _PPSCON	set	3775
   147  0000                     _T5CONbits	set	3874
   148  0000                     _CCPR7L	set	3850
   149  0000                     _TMR5L	set	3875
   150  0000                     _TMR5H	set	3876
   151  0000                     _T5CON	set	3874
   152  0000                     _CCPTMRS1bits	set	3921
   153  0000                     _CCP7CONbits	set	3849
   154  0000                     _ANCON1	set	3913
   155  0000                     _ANCON0	set	3912
   156  0000                     _PORTAbits	set	3968
   157  0000                     _TXREG2	set	4009
   158  0000                     _RCREG1	set	4015
   159  0000                     _TXREG1	set	4014
   160  0000                     _T2CONbits	set	4042
   161  0000                     _SPBRG2	set	4011
   162  0000                     _BAUDCON2bits	set	3964
   163  0000                     _RCSTA2	set	3996
   164  0000                     _TXSTA2	set	4008
   165  0000                     _PIE3bits	set	4003
   166  0000                     _PIR3bits	set	4004
   167  0000                     _TMR4	set	3960
   168  0000                     _T4CONbits	set	3958
   169  0000                     _PIR5bits	set	3992
   170  0000                     _PIE5bits	set	3985
   171  0000                     _PORTDbits	set	3971
   172  0000                     _TRISDbits	set	3989
   173  0000                     _PIE1bits	set	3997
   174  0000                     _PIR1bits	set	3998
   175  0000                     _SPBRG1	set	4016
   176  0000                     _BAUDCON1bits	set	3966
   177  0000                     _RCSTA1	set	4012
   178  0000                     _TXSTA1	set	4013
   179  0000                     _TRISCbits	set	3988
   180  0000                     _TMR2	set	4044
   181  0000                     _PR2	set	4043
   182  0000                     _T2CON	set	4042
   183  0000                     _INTCON3bits	set	4080
   184  0000                     _INTCON2bits	set	4081
   185  0000                     _INTCONbits	set	4082
   186  0000                     _TRISBbits	set	3987
   187  0000                     _TRISAbits	set	3986
   188  0000                     _RCREG2	set	4010
   189                           
   190                           	psect	smallconst
   191  000F00                     __psmallconst:
   192                           	opt callstack 0
   193  000F00  00                 	db	0
   194  000F01                     STR_5:
   195  000F01  56                 	db	86	;'V'
   196  000F02  65                 	db	101	;'e'
   197  000F03  6C                 	db	108	;'l'
   198  000F04  6F                 	db	111	;'o'
   199  000F05  63                 	db	99	;'c'
   200  000F06  69                 	db	105	;'i'
   201  000F07  64                 	db	100	;'d'
   202  000F08  61                 	db	97	;'a'
   203  000F09  64                 	db	100	;'d'
   204  000F0A  20                 	db	32
   205  000F0B  66                 	db	102	;'f'
   206  000F0C  69                 	db	105	;'i'
   207  000F0D  6A                 	db	106	;'j'
   208  000F0E  61                 	db	97	;'a'
   209  000F0F  64                 	db	100	;'d'
   210  000F10  61                 	db	97	;'a'
   211  000F11  20                 	db	32
   212  000F12  61                 	db	97	;'a'
   213  000F13  6C                 	db	108	;'l'
   214  000F14  3A                 	db	58	;':'
   215  000F15  20                 	db	32
   216  000F16  25                 	db	37
   217  000F17  30                 	db	48	;'0'
   218  000F18  33                 	db	51	;'3'
   219  000F19  75                 	db	117	;'u'
   220  000F1A  25                 	db	37
   221  000F1B  63                 	db	99	;'c'
   222  000F1C  00                 	db	0
   223  000F1D                     STR_2:
   224  000F1D  4C                 	db	76	;'L'
   225  000F1E  4C                 	db	76	;'L'
   226  000F1F  41                 	db	65	;'A'
   227  000F20  4D                 	db	77	;'M'
   228  000F21  45                 	db	69	;'E'
   229  000F22  4E                 	db	78	;'N'
   230  000F23  20                 	db	32
   231  000F24  41                 	db	65	;'A'
   232  000F25  20                 	db	32
   233  000F26  4C                 	db	76	;'L'
   234  000F27  4F                 	db	79	;'O'
   235  000F28  53                 	db	83	;'S'
   236  000F29  20                 	db	32
   237  000F2A  42                 	db	66	;'B'
   238  000F2B  4F                 	db	79	;'O'
   239  000F2C  4D                 	db	77	;'M'
   240  000F2D  42                 	db	66	;'B'
   241  000F2E  45                 	db	69	;'E'
   242  000F2F  52                 	db	82	;'R'
   243  000F30  4F                 	db	79	;'O'
   244  000F31  53                 	db	83	;'S'
   245  000F32  20                 	db	32
   246  000F33  50                 	db	80	;'P'
   247  000F34  4C                 	db	76	;'L'
   248  000F35  53                 	db	83	;'S'
   249  000F36  21                 	db	33
   250  000F37  00                 	db	0
   251  000F38                     STR_4:
   252  000F38  56                 	db	86	;'V'
   253  000F39  65                 	db	101	;'e'
   254  000F3A  68                 	db	104	;'h'
   255  000F3B  69                 	db	105	;'i'
   256  000F3C  63                 	db	99	;'c'
   257  000F3D  75                 	db	117	;'u'
   258  000F3E  6C                 	db	108	;'l'
   259  000F3F  6F                 	db	111	;'o'
   260  000F40  20                 	db	32
   261  000F41  65                 	db	101	;'e'
   262  000F42  6E                 	db	110	;'n'
   263  000F43  20                 	db	32
   264  000F44  72                 	db	114	;'r'
   265  000F45  65                 	db	101	;'e'
   266  000F46  76                 	db	118	;'v'
   267  000F47  65                 	db	101	;'e'
   268  000F48  72                 	db	114	;'r'
   269  000F49  73                 	db	115	;'s'
   270  000F4A  61                 	db	97	;'a'
   271  000F4B  21                 	db	33
   272  000F4C  00                 	db	0
   273  000F4D                     STR_3:
   274  000F4D  4D                 	db	77	;'M'
   275  000F4E  6F                 	db	111	;'o'
   276  000F4F  74                 	db	116	;'t'
   277  000F50  6F                 	db	111	;'o'
   278  000F51  72                 	db	114	;'r'
   279  000F52  65                 	db	101	;'e'
   280  000F53  73                 	db	115	;'s'
   281  000F54  20                 	db	32
   282  000F55  65                 	db	101	;'e'
   283  000F56  6E                 	db	110	;'n'
   284  000F57  63                 	db	99	;'c'
   285  000F58  65                 	db	101	;'e'
   286  000F59  6E                 	db	110	;'n'
   287  000F5A  64                 	db	100	;'d'
   288  000F5B  69                 	db	105	;'i'
   289  000F5C  64                 	db	100	;'d'
   290  000F5D  6F                 	db	111	;'o'
   291  000F5E  73                 	db	115	;'s'
   292  000F5F  21                 	db	33
   293  000F60  00                 	db	0
   294  000F61                     STR_1:
   295  000F61  25                 	db	37
   296  000F62  30                 	db	48	;'0'
   297  000F63  33                 	db	51	;'3'
   298  000F64  2E                 	db	46
   299  000F65  31                 	db	49	;'1'
   300  000F66  66                 	db	102	;'f'
   301  000F67  20                 	db	32
   302  000F68  63                 	db	99	;'c'
   303  000F69  6D                 	db	109	;'m'
   304  000F6A  00                 	db	0
   305  000F6B  47                 	db	71	;'G'
   306  000F6C  69                 	db	105	;'i'
   307  000F6D  72                 	db	114	;'r'
   308  000F6E  61                 	db	97	;'a'
   309  000F6F  6E                 	db	110	;'n'
   310  000F70  64                 	db	100	;'d'
   311  000F71  6F                 	db	111	;'o'
   312  000F72  00                 	db	0
   313  000F73                     STR_7:
   314  000F73  49                 	db	73	;'I'
   315  000F74  4E                 	db	78	;'N'
   316  000F75  46                 	db	70	;'F'
   317  000F76  00                 	db	0
   318  000F77                     STR_11:
   319  000F77  4E                 	db	78	;'N'
   320  000F78  41                 	db	65	;'A'
   321  000F79  4E                 	db	78	;'N'
   322  000F7A  00                 	db	0
   323  000F7B                     STR_8:
   324  000F7B  69                 	db	105	;'i'
   325  000F7C  6E                 	db	110	;'n'
   326  000F7D  66                 	db	102	;'f'
   327  000F7E  00                 	db	0
   328  000F7F                     STR_12:
   329  000F7F  6E                 	db	110	;'n'
   330  000F80  61                 	db	97	;'a'
   331  000F81  6E                 	db	110	;'n'
   332  000F82  00                 	db	0
   333  000F83                     STR_15:
   334  000F83  6C                 	db	108	;'l'
   335  000F84  66                 	db	102	;'f'
   336  000F85  00                 	db	0
   337  0000                     
   338                           ; #config settings
   339  000F86  00                 	db	0	; dummy byte at the end
   340  0000                     
   341                           	psect	cinit
   342  003F8E                     __pcinit:
   343                           	opt callstack 0
   344  003F8E                     start_initialization:
   345                           	opt callstack 0
   346  003F8E                     __initialization:
   347                           	opt callstack 0
   348                           
   349                           ; Initialize objects allocated to BANK1 (6 bytes)
   350                           ; load TBLPTR registers with __pidataBANK1
   351  003F8E  0E16               	movlw	low __pidataBANK1
   352  003F90  6EF6               	movwf	tblptrl,c
   353  003F92  0E45               	movlw	high __pidataBANK1
   354  003F94  6EF7               	movwf	tblptrh,c
   355  003F96  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   356  003F98  6EF8               	movwf	tblptru,c
   357  003F9A  EE01  F0CA         	lfsr	0,__pdataBANK1
   358  003F9E  EE10 F006          	lfsr	1,6
   359  003FA2                     copy_data0:
   360  003FA2  0009               	tblrd		*+
   361  003FA4  CFF5 FFEE          	movff	tablat,postinc0
   362  003FA8  50E5               	movf	postdec1,w,c
   363  003FAA  50E1               	movf	fsr1l,w,c
   364  003FAC  E1FA               	bnz	copy_data0
   365                           
   366                           ; Initialize objects allocated to COMRAM (8 bytes)
   367                           ; load TBLPTR registers with __pidataCOMRAM
   368  003FAE  0E0E               	movlw	low __pidataCOMRAM
   369  003FB0  6EF6               	movwf	tblptrl,c
   370  003FB2  0E45               	movlw	high __pidataCOMRAM
   371  003FB4  6EF7               	movwf	tblptrh,c
   372  003FB6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   373  003FB8  6EF8               	movwf	tblptru,c
   374  003FBA  EE00  F046         	lfsr	0,__pdataCOMRAM
   375  003FBE  EE10 F008          	lfsr	1,8
   376  003FC2                     copy_data1:
   377  003FC2  0009               	tblrd		*+
   378  003FC4  CFF5 FFEE          	movff	tablat,postinc0
   379  003FC8  50E5               	movf	postdec1,w,c
   380  003FCA  50E1               	movf	fsr1l,w,c
   381  003FCC  E1FA               	bnz	copy_data1
   382                           
   383                           ; Clear objects allocated to BANK1 (125 bytes)
   384  003FCE  EE01  F000         	lfsr	0,__pbssBANK1
   385  003FD2  0E7D               	movlw	125
   386  003FD4                     clear_0:
   387  003FD4  6AEE               	clrf	postinc0,c
   388  003FD6  06E8               	decf	wreg,f,c
   389  003FD8  E1FD               	bnz	clear_0
   390                           
   391                           ; Clear objects allocated to COMRAM (28 bytes)
   392  003FDA  EE00  F02A         	lfsr	0,__pbssCOMRAM
   393  003FDE  0E1C               	movlw	28
   394  003FE0                     clear_1:
   395  003FE0  6AEE               	clrf	postinc0,c
   396  003FE2  06E8               	decf	wreg,f,c
   397  003FE4  E1FD               	bnz	clear_1
   398  003FE6                     end_of_initialization:
   399                           	opt callstack 0
   400  003FE6                     __end_of__initialization:
   401                           	opt callstack 0
   402  003FE6  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   403  003FE8  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   404  003FEA  0100               	movlb	0
   405  003FEC  EFB7  F01B         	goto	_main	;jump to C main() function
   406                           
   407                           	psect	bssCOMRAM
   408  00002A                     __pbssCOMRAM:
   409                           	opt callstack 0
   410  00002A                     floorf@F524:
   411                           	opt callstack 0
   412  00002A                     	ds	4
   413  00002E                     ___fpclassifyf@F463:
   414                           	opt callstack 0
   415  00002E                     	ds	4
   416  000032                     _distancia:
   417                           	opt callstack 0
   418  000032                     	ds	4
   419  000036                     _width:
   420                           	opt callstack 0
   421  000036                     	ds	2
   422  000038                     _prec:
   423                           	opt callstack 0
   424  000038                     	ds	2
   425  00003A                     _flags:
   426                           	opt callstack 0
   427  00003A                     	ds	2
   428  00003C                     _contador_timer_5:
   429                           	opt callstack 0
   430  00003C                     	ds	2
   431  00003E                     _parar:
   432                           	opt callstack 0
   433  00003E                     	ds	2
   434  000040                     _contador_distancia:
   435                           	opt callstack 0
   436  000040                     	ds	1
   437  000041                     _estadoFuego:
   438                           	opt callstack 0
   439  000041                     	ds	1
   440  000042                     _contador_datos:
   441                           	opt callstack 0
   442  000042                     	ds	1
   443  000043                     _servo_dirreccion:
   444                           	opt callstack 0
   445  000043                     	ds	1
   446  000044                     _indicador:
   447                           	opt callstack 0
   448  000044                     	ds	1
   449  000045                     _motor:
   450                           	opt callstack 0
   451  000045                     	ds	1
   452                           
   453                           	psect	dataCOMRAM
   454  000046                     __pdataCOMRAM:
   455                           	opt callstack 0
   456  000046                     _tiempo_anterior_1:
   457                           	opt callstack 0
   458  000046                     	ds	2
   459  000048                     _TIME_MAX:
   460                           	opt callstack 0
   461  000048                     	ds	2
   462  00004A                     _velocidad:
   463                           	opt callstack 0
   464  00004A                     	ds	2
   465  00004C                     _cicle_90:
   466                           	opt callstack 0
   467  00004C                     	ds	2
   468                           
   469                           	psect	bssBANK1
   470  000100                     __pbssBANK1:
   471                           	opt callstack 0
   472  000100                     	ds	20
   473  000114                     	ds	8
   474  00011C                     _nout:
   475                           	opt callstack 0
   476  00011C                     	ds	2
   477  00011E                     _bandera_distancia:
   478                           	opt callstack 0
   479  00011E                     	ds	1
   480  00011F                     _obstaculo:
   481                           	opt callstack 0
   482  00011F                     	ds	1
   483  000120                     _bandera_servo:
   484                           	opt callstack 0
   485  000120                     	ds	1
   486  000121                     _bandera:
   487                           	opt callstack 0
   488  000121                     	ds	1
   489  000122                     _bandera_fuego:
   490                           	opt callstack 0
   491  000122                     	ds	1
   492  000123                     _dbuf:
   493                           	opt callstack 0
   494  000123                     	ds	80
   495  000173                     _datos:
   496                           	opt callstack 0
   497  000173                     	ds	10
   498                           
   499                           	psect	dataBANK1
   500  0001CA                     __pdataBANK1:
   501                           	opt callstack 0
   502  0001CA                     main@F7119:
   503                           	opt callstack 0
   504  0001CA                     	ds	6
   505                           
   506                           	psect	cstackBANK1
   507  00017D                     __pcstackBANK1:
   508                           	opt callstack 0
   509  00017D                     vfpfcnvrt@llu:
   510                           	opt callstack 0
   511                           
   512                           ; 8 bytes @ 0x0
   513  00017D                     	ds	8
   514  000185                     vfpfcnvrt@done:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x8
   518  000185                     	ds	2
   519  000187                     _vfpfcnvrt$1373:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0xA
   523  000187                     	ds	2
   524  000189                     _vfpfcnvrt$1374:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0xC
   528  000189                     	ds	2
   529  00018B                     _vfpfcnvrt$1379:
   530                           	opt callstack 0
   531                           
   532                           ; 2 bytes @ 0xE
   533  00018B                     	ds	2
   534  00018D                     vfpfcnvrt@f:
   535                           	opt callstack 0
   536                           
   537                           ; 4 bytes @ 0x10
   538  00018D                     	ds	4
   539  000191                     vfpfcnvrt@ct:
   540                           	opt callstack 0
   541                           
   542                           ; 3 bytes @ 0x14
   543  000191                     	ds	3
   544  000194                     vfpfcnvrt@c:
   545                           	opt callstack 0
   546                           
   547                           ; 1 bytes @ 0x17
   548  000194                     	ds	1
   549  000195                     ?_sprintf:
   550                           	opt callstack 0
   551  000195                     sprintf@s:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x18
   555  000195                     	ds	2
   556  000197                     sprintf@fmt:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x1A
   560  000197                     	ds	6
   561  00019D                     terminal@comand:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x20
   565  00019D                     	ds	2
   566  00019F                     ??_terminal:
   567                           
   568                           ; 1 bytes @ 0x22
   569  00019F                     	ds	5
   570  0001A4                     terminal@texto:
   571                           	opt callstack 0
   572                           
   573                           ; 20 bytes @ 0x27
   574  0001A4                     	ds	20
   575  0001B8                     terminal@medicion:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x3B
   579  0001B8                     	ds	2
   580  0001BA                     terminal@degree:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x3D
   584  0001BA                     	ds	2
   585  0001BC                     main@text:
   586                           	opt callstack 0
   587                           
   588                           ; 6 bytes @ 0x3F
   589  0001BC                     	ds	6
   590  0001C2                     main@texto:
   591                           	opt callstack 0
   592                           
   593                           ; 8 bytes @ 0x45
   594  0001C2                     	ds	8
   595                           
   596                           	psect	cstackBANK0
   597  000060                     __pcstackBANK0:
   598                           	opt callstack 0
   599  000060                     ??_definirVelocidad:
   600  000060                     ??_rutinaArranque:
   601  000060                     ?_length:
   602                           	opt callstack 0
   603  000060                     ?_estadoDirreccion:
   604                           	opt callstack 0
   605  000060                     ?_strlen:
   606                           	opt callstack 0
   607  000060                     ?___fpclassifyf:
   608                           	opt callstack 0
   609  000060                     ?_isupper:
   610                           	opt callstack 0
   611  000060                     ?_isdigit:
   612                           	opt callstack 0
   613  000060                     ?_strncmp:
   614                           	opt callstack 0
   615  000060                     ?_isspace:
   616                           	opt callstack 0
   617  000060                     ?___wmul:
   618                           	opt callstack 0
   619  000060                     ?___awdiv:
   620                           	opt callstack 0
   621  000060                     ?___awmod:
   622                           	opt callstack 0
   623  000060                     ?___fldiv:
   624                           	opt callstack 0
   625  000060                     ?___flneg:
   626                           	opt callstack 0
   627  000060                     ?___xxtofl:
   628                           	opt callstack 0
   629  000060                     ?___lodiv:
   630                           	opt callstack 0
   631  000060                     ?___lomod:
   632                           	opt callstack 0
   633  000060                     length@text:
   634                           	opt callstack 0
   635  000060                     dirreccion@degree:
   636                           	opt callstack 0
   637  000060                     ___wmul@multiplier:
   638                           	opt callstack 0
   639  000060                     ___awdiv@dividend:
   640                           	opt callstack 0
   641  000060                     ___awmod@dividend:
   642                           	opt callstack 0
   643  000060                     isdigit@c:
   644                           	opt callstack 0
   645  000060                     isspace@c:
   646                           	opt callstack 0
   647  000060                     isupper@c:
   648                           	opt callstack 0
   649  000060                     fputc@c:
   650                           	opt callstack 0
   651  000060                     strcpy@dest:
   652                           	opt callstack 0
   653  000060                     strlen@s:
   654                           	opt callstack 0
   655  000060                     strncmp@_l:
   656                           	opt callstack 0
   657  000060                     ___fleq@ff1:
   658                           	opt callstack 0
   659  000060                     ___flneg@f1:
   660                           	opt callstack 0
   661  000060                     ___fldiv@b:
   662                           	opt callstack 0
   663  000060                     ___xxtofl@val:
   664                           	opt callstack 0
   665  000060                     ___fpclassifyf@x:
   666                           	opt callstack 0
   667  000060                     ___lodiv@dividend:
   668                           	opt callstack 0
   669  000060                     ___lomod@dividend:
   670                           	opt callstack 0
   671                           
   672                           ; 8 bytes @ 0x0
   673  000060                     	ds	2
   674  000062                     ??_length:
   675  000062                     ??_estadoDirreccion:
   676  000062                     ??_dirreccion:
   677  000062                     ??_isupper:
   678  000062                     ??_isdigit:
   679  000062                     ??_isspace:
   680  000062                     ___wmul@multiplicand:
   681                           	opt callstack 0
   682  000062                     ___awdiv@divisor:
   683                           	opt callstack 0
   684  000062                     ___awmod@divisor:
   685                           	opt callstack 0
   686  000062                     fputc@fp:
   687                           	opt callstack 0
   688  000062                     strcpy@src:
   689                           	opt callstack 0
   690  000062                     strlen@a:
   691                           	opt callstack 0
   692  000062                     strncmp@_r:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x2
   696  000062                     	ds	2
   697  000064                     ??_fputc:
   698  000064                     ??___fpclassifyf:
   699  000064                     ??_strcpy:
   700  000064                     ??___xxtofl:
   701  000064                     dirreccion@tiempo_1:
   702                           	opt callstack 0
   703  000064                     ___awdiv@counter:
   704                           	opt callstack 0
   705  000064                     ___awmod@counter:
   706                           	opt callstack 0
   707  000064                     length@longitud:
   708                           	opt callstack 0
   709  000064                     estadoDirreccion@angulo:
   710                           	opt callstack 0
   711  000064                     ___wmul@product:
   712                           	opt callstack 0
   713  000064                     strncmp@n:
   714                           	opt callstack 0
   715  000064                     ___fleq@ff2:
   716                           	opt callstack 0
   717  000064                     ___fldiv@a:
   718                           	opt callstack 0
   719                           
   720                           ; 4 bytes @ 0x4
   721  000064                     	ds	1
   722  000065                     ___awdiv@sign:
   723                           	opt callstack 0
   724  000065                     ___awmod@sign:
   725                           	opt callstack 0
   726                           
   727                           ; 1 bytes @ 0x5
   728  000065                     	ds	1
   729  000066                     ??_strncmp:
   730  000066                     ?_tolower:
   731                           	opt callstack 0
   732  000066                     length@dato:
   733                           	opt callstack 0
   734  000066                     estadoDirreccion@valor:
   735                           	opt callstack 0
   736  000066                     _isspace$1882:
   737                           	opt callstack 0
   738  000066                     ___awdiv@quotient:
   739                           	opt callstack 0
   740  000066                     strcpy@s:
   741                           	opt callstack 0
   742  000066                     tolower@c:
   743                           	opt callstack 0
   744                           
   745                           ; 2 bytes @ 0x6
   746  000066                     	ds	1
   747  000067                     ?_atoi:
   748                           	opt callstack 0
   749  000067                     length@i:
   750                           	opt callstack 0
   751  000067                     atoi@s:
   752                           	opt callstack 0
   753  000067                     strncmp@l:
   754                           	opt callstack 0
   755                           
   756                           ; 2 bytes @ 0x7
   757  000067                     	ds	1
   758  000068                     ??_tolower:
   759  000068                     ??___fldiv:
   760  000068                     ??___fleq:
   761  000068                     ___xxtofl@sign:
   762                           	opt callstack 0
   763  000068                     enviarRS232@valores:
   764                           	opt callstack 0
   765  000068                     ___fpclassifyf@e:
   766                           	opt callstack 0
   767  000068                     strcpy@d:
   768                           	opt callstack 0
   769  000068                     ___lodiv@divisor:
   770                           	opt callstack 0
   771  000068                     ___lomod@divisor:
   772                           	opt callstack 0
   773                           
   774                           ; 8 bytes @ 0x8
   775  000068                     	ds	1
   776  000069                     ??_atoi:
   777  000069                     ___xxtofl@exp:
   778                           	opt callstack 0
   779  000069                     fputs@s:
   780                           	opt callstack 0
   781  000069                     strncmp@r:
   782                           	opt callstack 0
   783                           
   784                           ; 2 bytes @ 0x9
   785  000069                     	ds	1
   786  00006A                     ??_enviarRS232:
   787  00006A                     ___xxtofl@arg:
   788                           	opt callstack 0
   789  00006A                     ___fpclassifyf@u:
   790                           	opt callstack 0
   791                           
   792                           ; 4 bytes @ 0xA
   793  00006A                     	ds	1
   794  00006B                     fputs@fp:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0xB
   798  00006B                     	ds	1
   799  00006C                     enviarRS232@longitud_texto:
   800                           	opt callstack 0
   801  00006C                     _tolower$1967:
   802                           	opt callstack 0
   803  00006C                     ___fldiv@rem:
   804                           	opt callstack 0
   805                           
   806                           ; 4 bytes @ 0xC
   807  00006C                     	ds	1
   808  00006D                     fputs@c:
   809                           	opt callstack 0
   810  00006D                     atoi@neg:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0xD
   814  00006D                     	ds	1
   815  00006E                     ?___flmul:
   816                           	opt callstack 0
   817  00006E                     enviarRS232@i:
   818                           	opt callstack 0
   819  00006E                     fputs@i:
   820                           	opt callstack 0
   821  00006E                     ___flmul@b:
   822                           	opt callstack 0
   823                           
   824                           ; 4 bytes @ 0xE
   825  00006E                     	ds	1
   826  00006F                     _atoi$1851:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0xF
   830  00006F                     	ds	1
   831  000070                     ?_pad:
   832                           	opt callstack 0
   833  000070                     ___lomod@counter:
   834                           	opt callstack 0
   835  000070                     ___fldiv@sign:
   836                           	opt callstack 0
   837  000070                     pad@fp:
   838                           	opt callstack 0
   839  000070                     ___lodiv@quotient:
   840                           	opt callstack 0
   841                           
   842                           ; 8 bytes @ 0x10
   843  000070                     	ds	1
   844  000071                     ___fldiv@new_exp:
   845                           	opt callstack 0
   846  000071                     _atoi$1853:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0x11
   850  000071                     	ds	1
   851  000072                     pad@buf:
   852                           	opt callstack 0
   853  000072                     ___flmul@a:
   854                           	opt callstack 0
   855                           
   856                           ; 4 bytes @ 0x12
   857  000072                     	ds	1
   858  000073                     _atoi$1852:
   859                           	opt callstack 0
   860  000073                     ___fldiv@grs:
   861                           	opt callstack 0
   862                           
   863                           ; 4 bytes @ 0x13
   864  000073                     	ds	1
   865  000074                     pad@p:
   866                           	opt callstack 0
   867  000074                     atoi@n:
   868                           	opt callstack 0
   869                           
   870                           ; 2 bytes @ 0x14
   871  000074                     	ds	2
   872  000076                     ??___flmul:
   873  000076                     ??_pad:
   874                           
   875                           ; 1 bytes @ 0x16
   876  000076                     	ds	1
   877  000077                     ___fldiv@bexp:
   878                           	opt callstack 0
   879  000077                     pad@i:
   880                           	opt callstack 0
   881                           
   882                           ; 2 bytes @ 0x17
   883  000077                     	ds	1
   884  000078                     ___lodiv@counter:
   885                           	opt callstack 0
   886  000078                     ___fldiv@aexp:
   887                           	opt callstack 0
   888                           
   889                           ; 1 bytes @ 0x18
   890  000078                     	ds	1
   891  000079                     ?_floorf:
   892                           	opt callstack 0
   893  000079                     pad@w:
   894                           	opt callstack 0
   895  000079                     floorf@x:
   896                           	opt callstack 0
   897                           
   898                           ; 4 bytes @ 0x19
   899  000079                     	ds	1
   900  00007A                     ___flmul@sign:
   901                           	opt callstack 0
   902                           
   903                           ; 1 bytes @ 0x1A
   904  00007A                     	ds	1
   905  00007B                     ?_ctoa:
   906                           	opt callstack 0
   907  00007B                     ?_utoa:
   908                           	opt callstack 0
   909  00007B                     ___flmul@aexp:
   910                           	opt callstack 0
   911  00007B                     ctoa@fp:
   912                           	opt callstack 0
   913  00007B                     utoa@fp:
   914                           	opt callstack 0
   915                           
   916                           ; 2 bytes @ 0x1B
   917  00007B                     	ds	1
   918  00007C                     ___flmul@grs:
   919                           	opt callstack 0
   920                           
   921                           ; 4 bytes @ 0x1C
   922  00007C                     	ds	1
   923  00007D                     ??_floorf:
   924  00007D                     ctoa@c:
   925                           	opt callstack 0
   926  00007D                     utoa@d:
   927                           	opt callstack 0
   928                           
   929                           ; 8 bytes @ 0x1D
   930  00007D                     	ds	1
   931  00007E                     ctoa@w:
   932                           	opt callstack 0
   933                           
   934                           ; 2 bytes @ 0x1E
   935  00007E                     	ds	2
   936  000080                     ___flmul@bexp:
   937                           	opt callstack 0
   938                           
   939                           ; 1 bytes @ 0x20
   940  000080                     	ds	1
   941  000081                     ___flmul@prod:
   942                           	opt callstack 0
   943                           
   944                           ; 4 bytes @ 0x21
   945  000081                     	ds	2
   946  000083                     floorf@m:
   947                           	opt callstack 0
   948                           
   949                           ; 4 bytes @ 0x23
   950  000083                     	ds	2
   951  000085                     ??_utoa:
   952  000085                     ___flmul@temp:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x25
   956  000085                     	ds	2
   957  000087                     ?___fladd:
   958                           	opt callstack 0
   959  000087                     ?___fltol:
   960                           	opt callstack 0
   961  000087                     floorf@e:
   962                           	opt callstack 0
   963  000087                     ___flge@ff1:
   964                           	opt callstack 0
   965  000087                     ___fltol@f1:
   966                           	opt callstack 0
   967  000087                     ___fladd@b:
   968                           	opt callstack 0
   969                           
   970                           ; 4 bytes @ 0x27
   971  000087                     	ds	2
   972  000089                     floorf@u:
   973                           	opt callstack 0
   974                           
   975                           ; 4 bytes @ 0x29
   976  000089                     	ds	2
   977  00008B                     ??___fltol:
   978  00008B                     ___flge@ff2:
   979                           	opt callstack 0
   980  00008B                     ___fladd@a:
   981                           	opt callstack 0
   982                           
   983                           ; 4 bytes @ 0x2B
   984  00008B                     	ds	2
   985  00008D                     utoa@p:
   986                           	opt callstack 0
   987                           
   988                           ; 2 bytes @ 0x2D
   989  00008D                     	ds	2
   990  00008F                     ??___fladd:
   991  00008F                     ??___flge:
   992  00008F                     ___fltol@sign1:
   993                           	opt callstack 0
   994  00008F                     utoa@w:
   995                           	opt callstack 0
   996                           
   997                           ; 2 bytes @ 0x2F
   998  00008F                     	ds	1
   999  000090                     ___fltol@exp1:
  1000                           	opt callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x30
  1003  000090                     	ds	1
  1004  000091                     utoa@n:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 8 bytes @ 0x31
  1008  000091                     	ds	2
  1009  000093                     ___fladd@signs:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x33
  1013  000093                     	ds	1
  1014  000094                     ___fladd@aexp:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 1 bytes @ 0x34
  1018  000094                     	ds	1
  1019  000095                     ___fladd@bexp:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 1 bytes @ 0x35
  1023  000095                     	ds	1
  1024  000096                     ___fladd@grs:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x36
  1028  000096                     	ds	1
  1029  000097                     ?___flsub:
  1030                           	opt callstack 0
  1031  000097                     fijarVelocidad@DC:
  1032                           	opt callstack 0
  1033  000097                     ___flsub@b:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x37
  1037  000097                     	ds	2
  1038  000099                     utoa@i:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x39
  1042  000099                     	ds	2
  1043  00009B                     ___flsub@a:
  1044                           	opt callstack 0
  1045  00009B                     _fijarVelocidad$2194:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 4 bytes @ 0x3B
  1049  00009B                     	ds	4
  1050  00009F                     ?_efgtoa:
  1051                           	opt callstack 0
  1052  00009F                     fijarVelocidad@speed:
  1053                           	opt callstack 0
  1054  00009F                     efgtoa@fp:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x3F
  1058  00009F                     	ds	2
  1059  0000A1                     efgtoa@f:
  1060                           	opt callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x41
  1063  0000A1                     	ds	4
  1064  0000A5                     efgtoa@c:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x45
  1068  0000A5                     	ds	1
  1069  0000A6                     ??_efgtoa:
  1070                           
  1071                           ; 1 bytes @ 0x46
  1072  0000A6                     	ds	5
  1073  0000AB                     efgtoa@ou:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 4 bytes @ 0x4B
  1077  0000AB                     	ds	4
  1078  0000AF                     _efgtoa$1341:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x4F
  1082  0000AF                     	ds	2
  1083  0000B1                     _efgtoa$1342:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x51
  1087  0000B1                     	ds	2
  1088  0000B3                     _efgtoa$1346:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x53
  1092  0000B3                     	ds	2
  1093  0000B5                     _efgtoa$1350:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x55
  1097  0000B5                     	ds	2
  1098  0000B7                     _efgtoa$1351:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x57
  1102  0000B7                     	ds	2
  1103  0000B9                     _efgtoa$1352:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x59
  1107  0000B9                     	ds	2
  1108  0000BB                     efgtoa@t:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x5B
  1112  0000BB                     	ds	2
  1113  0000BD                     efgtoa@pp:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x5D
  1117  0000BD                     	ds	2
  1118  0000BF                     efgtoa@m:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x5F
  1122  0000BF                     	ds	2
  1123  0000C1                     efgtoa@ne:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x61
  1127  0000C1                     	ds	2
  1128  0000C3                     efgtoa@d:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x63
  1132  0000C3                     	ds	2
  1133  0000C5                     efgtoa@sign:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x65
  1137  0000C5                     	ds	2
  1138  0000C7                     efgtoa@p:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x67
  1142  0000C7                     	ds	2
  1143  0000C9                     efgtoa@nmode:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x69
  1147  0000C9                     	ds	1
  1148  0000CA                     efgtoa@w:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x6A
  1152  0000CA                     	ds	2
  1153  0000CC                     efgtoa@mode:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x6C
  1157  0000CC                     	ds	1
  1158  0000CD                     efgtoa@h:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x6D
  1162  0000CD                     	ds	4
  1163  0000D1                     efgtoa@l:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 4 bytes @ 0x71
  1167  0000D1                     	ds	4
  1168  0000D5                     efgtoa@i:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x75
  1172  0000D5                     	ds	2
  1173  0000D7                     efgtoa@g:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x77
  1177  0000D7                     	ds	4
  1178  0000DB                     efgtoa@e:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x7B
  1182  0000DB                     	ds	2
  1183  0000DD                     efgtoa@n:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x7D
  1187  0000DD                     	ds	2
  1188  0000DF                     efgtoa@u:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x7F
  1192  0000DF                     	ds	4
  1193  0000E3                     ?_vfpfcnvrt:
  1194                           	opt callstack 0
  1195  0000E3                     vfpfcnvrt@fp:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x83
  1199  0000E3                     	ds	2
  1200  0000E5                     vfpfcnvrt@fmt:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x85
  1204  0000E5                     	ds	2
  1205  0000E7                     vfpfcnvrt@ap:
  1206                           	opt callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x87
  1209  0000E7                     	ds	2
  1210  0000E9                     ??_vfpfcnvrt:
  1211                           
  1212                           ; 1 bytes @ 0x89
  1213  0000E9                     	ds	4
  1214  0000ED                     ?_vfprintf:
  1215                           	opt callstack 0
  1216  0000ED                     vfprintf@fp:
  1217                           	opt callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x8D
  1220  0000ED                     	ds	2
  1221  0000EF                     vfprintf@fmt:
  1222                           	opt callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x8F
  1225  0000EF                     	ds	2
  1226  0000F1                     vfprintf@ap:
  1227                           	opt callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x91
  1230  0000F1                     	ds	2
  1231  0000F3                     vfprintf@cfmt:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x93
  1235  0000F3                     	ds	2
  1236  0000F5                     
  1237                           ; 1 bytes @ 0x95
  1238  0000F5                     	ds	2
  1239  0000F7                     sprintf@ap:
  1240                           	opt callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x97
  1243  0000F7                     	ds	2
  1244  0000F9                     sprintf@f:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 6 bytes @ 0x99
  1248  0000F9                     	ds	6
  1249  0000FF                     
  1250                           ; 1 bytes @ 0x9F
  1251                           
  1252                           	psect	cstackCOMRAM
  1253  000001                     __pcstackCOMRAM:
  1254                           	opt callstack 0
  1255  000001                     ?i2___awdiv:
  1256                           	opt callstack 0
  1257  000001                     i2___awdiv@dividend:
  1258                           	opt callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x0
  1261  000001                     	ds	2
  1262  000003                     i2___awdiv@divisor:
  1263                           	opt callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x2
  1266  000003                     	ds	2
  1267  000005                     i2___awdiv@counter:
  1268                           	opt callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x4
  1271  000005                     	ds	1
  1272  000006                     i2___awdiv@sign:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x5
  1276  000006                     	ds	1
  1277  000007                     i2___awdiv@quotient:
  1278                           	opt callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x6
  1281  000007                     	ds	2
  1282  000009                     ?i2___xxtofl:
  1283                           	opt callstack 0
  1284  000009                     i2___xxtofl@val:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x8
  1288  000009                     	ds	4
  1289  00000D                     ??i2___xxtofl:
  1290                           
  1291                           ; 1 bytes @ 0xC
  1292  00000D                     	ds	4
  1293  000011                     i2___xxtofl@sign:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 1 bytes @ 0x10
  1297  000011                     	ds	1
  1298  000012                     i2___xxtofl@exp:
  1299                           	opt callstack 0
  1300                           
  1301                           ; 1 bytes @ 0x11
  1302  000012                     	ds	1
  1303  000013                     i2___xxtofl@arg:
  1304                           	opt callstack 0
  1305                           
  1306                           ; 4 bytes @ 0x12
  1307  000013                     	ds	4
  1308  000017                     ?i2___fladd:
  1309                           	opt callstack 0
  1310  000017                     i2___fladd@b:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 4 bytes @ 0x16
  1314  000017                     	ds	4
  1315  00001B                     i2___fladd@a:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 4 bytes @ 0x1A
  1319  00001B                     	ds	4
  1320  00001F                     ??i2___fladd:
  1321                           
  1322                           ; 1 bytes @ 0x1E
  1323  00001F                     	ds	4
  1324  000023                     i2___fladd@signs:
  1325                           	opt callstack 0
  1326                           
  1327                           ; 1 bytes @ 0x22
  1328  000023                     	ds	1
  1329  000024                     i2___fladd@aexp:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 1 bytes @ 0x23
  1333  000024                     	ds	1
  1334  000025                     i2___fladd@bexp:
  1335                           	opt callstack 0
  1336                           
  1337                           ; 1 bytes @ 0x24
  1338  000025                     	ds	1
  1339  000026                     i2___fladd@grs:
  1340                           	opt callstack 0
  1341                           
  1342                           ; 1 bytes @ 0x25
  1343  000026                     	ds	1
  1344  000027                     ??_rutina:
  1345                           
  1346                           ; 1 bytes @ 0x26
  1347  000027                     	ds	2
  1348  000029                     rutina@dato:
  1349                           	opt callstack 0
  1350                           
  1351                           ; 1 bytes @ 0x28
  1352  000029                     	ds	1
  1353                           
  1354 ;;
  1355 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1356 ;;
  1357 ;; *************** function _main *****************
  1358 ;; Defined at:
  1359 ;;		line 105 in file "auto.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  texto           8   69[BANK1 ] unsigned char [8]
  1364 ;;  text            6   63[BANK1 ] unsigned char [6]
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1377 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1378 ;;Total ram usage:       14 bytes
  1379 ;; Hardware stack levels required when called:   11
  1380 ;; This function calls:
  1381 ;;		_PWMServo
  1382 ;;		_configuracionInicial
  1383 ;;		_enviarRS232
  1384 ;;		_frenarMotor
  1385 ;;		_sprintf
  1386 ;;		_terminal
  1387 ;; This function is called by:
  1388 ;;		Startup code after reset
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text0
  1393  00376E                     __ptext0:
  1394                           	opt callstack 0
  1395  00376E                     _main:
  1396                           	opt callstack 20
  1397                           
  1398                           ;auto.c: 106:     unsigned char text[] = "HOLA!";
  1399                           
  1400                           ;incstack = 0
  1401  00376E  EE21  F0CA         	lfsr	2,main@F7119
  1402  003772  EE11  F0BC         	lfsr	1,main@text
  1403  003776  0E05               	movlw	5
  1404  003778                     u9661:
  1405  003778  CFDB FFE3          	movff	plusw2,plusw1
  1406  00377C  06E8               	decf	wreg,f,c
  1407  00377E  E2FC               	bc	u9661
  1408                           
  1409                           ;auto.c: 107:     unsigned char texto[8] = {'\0'};
  1410  003780  EE21  F0C2         	lfsr	2,main@texto
  1411  003784  0E07               	movlw	7
  1412  003786                     u9671:
  1413  003786  6ADE               	clrf	postinc2,c
  1414  003788  06E8               	decf	wreg,f,c
  1415  00378A  E2FD               	bc	u9671
  1416                           
  1417                           ;auto.c: 108:     configuracionInicial();
  1418  00378C  EC33  F022         	call	_configuracionInicial	;wreg free
  1419                           
  1420                           ;auto.c: 109:     enviarRS232(text);
  1421  003790  0EBC               	movlw	low main@text
  1422  003792  0100               	movlb	0	; () banked
  1423  003794  6F68               	movwf	enviarRS232@valores& (0+255),b
  1424  003796  0E01               	movlw	high main@text
  1425  003798  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1426  00379A  EC53  F01F         	call	_enviarRS232	;wreg free
  1427  00379E                     l7577:
  1428                           
  1429                           ;auto.c: 111:         if(bandera == 1){
  1430  00379E  0101               	movlb	1	; () banked
  1431  0037A0  0521               	decf	_bandera& (0+255),w,b
  1432  0037A2  A4D8               	btfss	status,2,c
  1433  0037A4  D008               	goto	l7583
  1434                           
  1435                           ; BSR set to: 1
  1436                           ;auto.c: 112:             bandera = 0;
  1437  0037A6  0E00               	movlw	0
  1438  0037A8  6F21               	movwf	_bandera& (0+255),b
  1439                           
  1440                           ; BSR set to: 1
  1441                           ;auto.c: 113:             terminal(datos);
  1442  0037AA  0E73               	movlw	low _datos
  1443  0037AC  6F9D               	movwf	terminal@comand& (0+255),b
  1444  0037AE  0E01               	movlw	high _datos
  1445  0037B0  6F9E               	movwf	(terminal@comand+1)& (0+255),b
  1446  0037B2  EC6E  F017         	call	_terminal	;wreg free
  1447  0037B6                     l7583:
  1448                           
  1449                           ;auto.c: 115:         if(bandera_servo == 1){
  1450  0037B6  0101               	movlb	1	; () banked
  1451  0037B8  0520               	decf	_bandera_servo& (0+255),w,b
  1452  0037BA  A4D8               	btfss	status,2,c
  1453  0037BC  D004               	goto	l7589
  1454                           
  1455                           ; BSR set to: 1
  1456                           ;auto.c: 116:             bandera_servo = 0;
  1457  0037BE  0E00               	movlw	0
  1458  0037C0  6F20               	movwf	_bandera_servo& (0+255),b
  1459                           
  1460                           ; BSR set to: 1
  1461                           ;auto.c: 117:             PWMServo();
  1462  0037C2  ECA9  F020         	call	_PWMServo	;wreg free
  1463  0037C6                     l7589:
  1464                           
  1465                           ;auto.c: 119:         if(obstaculo == 1){
  1466  0037C6  0101               	movlb	1	; () banked
  1467  0037C8  051F               	decf	_obstaculo& (0+255),w,b
  1468  0037CA  A4D8               	btfss	status,2,c
  1469  0037CC  D004               	goto	l7595
  1470                           
  1471                           ; BSR set to: 1
  1472                           ;auto.c: 120:             obstaculo = 0;
  1473  0037CE  0E00               	movlw	0
  1474  0037D0  6F1F               	movwf	_obstaculo& (0+255),b
  1475                           
  1476                           ; BSR set to: 1
  1477                           ;auto.c: 121:             frenarMotor();
  1478  0037D2  EC59  F022         	call	_frenarMotor	;wreg free
  1479  0037D6                     l7595:
  1480                           
  1481                           ;auto.c: 123:         if(bandera_distancia == 1){
  1482  0037D6  0101               	movlb	1	; () banked
  1483  0037D8  051E               	decf	_bandera_distancia& (0+255),w,b
  1484  0037DA  A4D8               	btfss	status,2,c
  1485  0037DC  D01B               	goto	l7603
  1486                           
  1487                           ; BSR set to: 1
  1488                           ;auto.c: 124:             bandera_distancia = 0;
  1489  0037DE  0E00               	movlw	0
  1490  0037E0  6F1E               	movwf	_bandera_distancia& (0+255),b
  1491                           
  1492                           ; BSR set to: 1
  1493                           ;auto.c: 125:             sprintf(texto,"%03.1f cm",distancia);
  1494  0037E2  0EC2               	movlw	low main@texto
  1495  0037E4  6F95               	movwf	sprintf@s& (0+255),b
  1496  0037E6  0E01               	movlw	high main@texto
  1497  0037E8  6F96               	movwf	(sprintf@s+1)& (0+255),b
  1498  0037EA  0E61               	movlw	low STR_1
  1499  0037EC  6F97               	movwf	sprintf@fmt& (0+255),b
  1500  0037EE  0E0F               	movlw	high STR_1
  1501  0037F0  6F98               	movwf	(sprintf@fmt+1)& (0+255),b
  1502  0037F2  C032  F199         	movff	_distancia,?_sprintf+4
  1503  0037F6  C033  F19A         	movff	_distancia+1,?_sprintf+5
  1504  0037FA  C034  F19B         	movff	_distancia+2,?_sprintf+6
  1505  0037FE  C035  F19C         	movff	_distancia+3,?_sprintf+7
  1506  003802  EC29  F020         	call	_sprintf	;wreg free
  1507                           
  1508                           ;auto.c: 126:             enviarRS232(texto);
  1509  003806  0EC2               	movlw	low main@texto
  1510  003808  0100               	movlb	0	; () banked
  1511  00380A  6F68               	movwf	enviarRS232@valores& (0+255),b
  1512  00380C  0E01               	movlw	high main@texto
  1513  00380E  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1514  003810  EC53  F01F         	call	_enviarRS232	;wreg free
  1515  003814                     l7603:
  1516                           
  1517                           ;auto.c: 128:         if(bandera_fuego == 1){
  1518  003814  0101               	movlb	1	; () banked
  1519  003816  0522               	decf	_bandera_fuego& (0+255),w,b
  1520  003818  A4D8               	btfss	status,2,c
  1521  00381A  D7C1               	goto	l7577
  1522                           
  1523                           ; BSR set to: 1
  1524                           ;auto.c: 129:             bandera_fuego = 0;
  1525  00381C  0E00               	movlw	0
  1526  00381E  6F22               	movwf	_bandera_fuego& (0+255),b
  1527                           
  1528                           ; BSR set to: 1
  1529                           ;auto.c: 130:             enviarRS232("LLAMEN A LOS BOMBEROS PLS!");
  1530  003820  0E1D               	movlw	low STR_2
  1531  003822  0100               	movlb	0	; () banked
  1532  003824  6F68               	movwf	enviarRS232@valores& (0+255),b
  1533  003826  0E0F               	movlw	high STR_2
  1534  003828  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1535  00382A  EC53  F01F         	call	_enviarRS232	;wreg free
  1536  00382E  D7B7               	goto	l7577
  1537  003830                     __end_of_main:
  1538                           	opt callstack 0
  1539                           
  1540 ;; *************** function _terminal *****************
  1541 ;; Defined at:
  1542 ;;		line 146 in file "auto.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  comand          2   32[BANK1 ] PTR unsigned char 
  1545 ;;		 -> datos(10), 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  texto          20   39[BANK1 ] unsigned char [20]
  1548 ;;  degree          2   61[BANK1 ] unsigned int 
  1549 ;;  medicion        2   59[BANK1 ] unsigned int 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1559 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1560 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1561 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;      Totals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;Total ram usage:       31 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:   10
  1566 ;; This function calls:
  1567 ;;		_adelante
  1568 ;;		_atras
  1569 ;;		_cambiarPWM
  1570 ;;		_dirreccion
  1571 ;;		_encenderMotor
  1572 ;;		_enviarRS232
  1573 ;;		_estadoDirreccion
  1574 ;;		_fijarVelocidad
  1575 ;;		_frenarMotor
  1576 ;;		_sprintf
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text1
  1583  002EDC                     __ptext1:
  1584                           	opt callstack 0
  1585  002EDC                     _terminal:
  1586                           	opt callstack 20
  1587                           
  1588                           ;auto.c: 148:     unsigned int degree;;auto.c: 149:     unsigned char texto[20] = {'\0'}
      +                          ;
  1589                           
  1590                           ;incstack = 0
  1591  002EDC  EE21  F0A4         	lfsr	2,terminal@texto
  1592  002EE0  0E13               	movlw	19
  1593  002EE2                     u9631:
  1594  002EE2  6ADE               	clrf	postinc2,c
  1595  002EE4  06E8               	decf	wreg,f,c
  1596  002EE6  E2FD               	bc	u9631
  1597                           
  1598                           ;auto.c: 150:     TXREG2 = 0x55;
  1599  002EE8  0E55               	movlw	85
  1600  002EEA  6EA9               	movwf	4009,c	;volatile
  1601                           
  1602                           ;auto.c: 151:     switch (comand[0]){
  1603  002EEC  D085               	goto	l7543
  1604  002EEE                     l7513:
  1605                           
  1606                           ; BSR set to: 1
  1607                           ;auto.c: 153:             adelante();
  1608  002EEE  EC82  F022         	call	_adelante	;wreg free
  1609                           
  1610                           ;auto.c: 154:             encenderMotor();
  1611  002EF2  EC69  F022         	call	_encenderMotor	;wreg free
  1612                           
  1613                           ;auto.c: 155:             enviarRS232("Motores encendidos!");
  1614  002EF6  0E4D               	movlw	low STR_3
  1615  002EF8  0100               	movlb	0	; () banked
  1616  002EFA  6F68               	movwf	enviarRS232@valores& (0+255),b
  1617  002EFC  0E0F               	movlw	high STR_3
  1618  002EFE  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1619  002F00  EC53  F01F         	call	_enviarRS232	;wreg free
  1620                           
  1621                           ;auto.c: 156:             break;
  1622  002F04  0012               	return	
  1623  002F06                     l7519:
  1624                           
  1625                           ; BSR set to: 1
  1626                           ;auto.c: 158:             atras();
  1627  002F06  EC7D  F022         	call	_atras	;wreg free
  1628                           
  1629                           ;auto.c: 159:             encenderMotor();
  1630  002F0A  EC69  F022         	call	_encenderMotor	;wreg free
  1631                           
  1632                           ;auto.c: 160:             enviarRS232("Vehiculo en reversa!");
  1633  002F0E  0E38               	movlw	low STR_4
  1634  002F10  0100               	movlb	0	; () banked
  1635  002F12  6F68               	movwf	enviarRS232@valores& (0+255),b
  1636  002F14  0E0F               	movlw	high STR_4
  1637  002F16  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1638  002F18  EC53  F01F         	call	_enviarRS232	;wreg free
  1639                           
  1640                           ;auto.c: 161:             break;
  1641  002F1C  0012               	return	
  1642  002F1E                     l7525:
  1643                           
  1644                           ; BSR set to: 1
  1645                           ;auto.c: 163:             degree = estadoDirreccion(2);
  1646  002F1E  0E02               	movlw	2
  1647  002F20  ECD4  F01E         	call	_estadoDirreccion
  1648  002F24  C060  F1BA         	movff	?_estadoDirreccion,terminal@degree
  1649  002F28  C061  F1BB         	movff	?_estadoDirreccion+1,terminal@degree+1
  1650                           
  1651                           ;auto.c: 164:             dirreccion(degree);
  1652  002F2C  C1BA  F060         	movff	terminal@degree,dirreccion@degree
  1653  002F30  C1BB  F061         	movff	terminal@degree+1,dirreccion@degree+1
  1654  002F34  EC0B  F01E         	call	_dirreccion	;wreg free
  1655                           
  1656                           ;auto.c: 165:             break;
  1657  002F38  0012               	return	
  1658  002F3A                     l7527:
  1659                           
  1660                           ; BSR set to: 1
  1661                           ;auto.c: 167:             degree = estadoDirreccion(1);
  1662  002F3A  0E01               	movlw	1
  1663  002F3C  ECD4  F01E         	call	_estadoDirreccion
  1664  002F40  C060  F1BA         	movff	?_estadoDirreccion,terminal@degree
  1665  002F44  C061  F1BB         	movff	?_estadoDirreccion+1,terminal@degree+1
  1666                           
  1667                           ;auto.c: 168:             dirreccion(degree);
  1668  002F48  C1BA  F060         	movff	terminal@degree,dirreccion@degree
  1669  002F4C  C1BB  F061         	movff	terminal@degree+1,dirreccion@degree+1
  1670  002F50  EC0B  F01E         	call	_dirreccion	;wreg free
  1671                           
  1672                           ;auto.c: 169:             break;
  1673  002F54  0012               	return	
  1674  002F56                     l7529:
  1675                           
  1676                           ; BSR set to: 1
  1677                           ;auto.c: 171:             frenarMotor();
  1678  002F56  EC59  F022         	call	_frenarMotor	;wreg free
  1679                           
  1680                           ;auto.c: 172:             break;
  1681  002F5A  0012               	return	
  1682  002F5C                     l7531:
  1683                           
  1684                           ; BSR set to: 1
  1685                           ;auto.c: 174:             medicion = (comand[1] - 0x30)*100 + (comand[2] - 0x30)*10 + co
      +                          mand[3] - 0x30;
  1686  002F5C  EE20 F001          	lfsr	2,1
  1687  002F60  519D               	movf	terminal@comand& (0+255),w,b
  1688  002F62  26D9               	addwf	fsr2l,f,c
  1689  002F64  519E               	movf	(terminal@comand+1)& (0+255),w,b
  1690  002F66  22DA               	addwfc	fsr2h,f,c
  1691  002F68  50DF               	movf	indf2,w,c
  1692  002F6A  6F9F               	movwf	??_terminal& (0+255),b
  1693  002F6C  519F               	movf	??_terminal& (0+255),w,b
  1694  002F6E  0D64               	mullw	100
  1695  002F70  CFF3 F1A0          	movff	prodl,??_terminal+1
  1696  002F74  CFF4 F1A1          	movff	prodh,??_terminal+2
  1697  002F78  EE20 F002          	lfsr	2,2
  1698  002F7C  519D               	movf	terminal@comand& (0+255),w,b
  1699  002F7E  26D9               	addwf	fsr2l,f,c
  1700  002F80  519E               	movf	(terminal@comand+1)& (0+255),w,b
  1701  002F82  22DA               	addwfc	fsr2h,f,c
  1702  002F84  50DF               	movf	indf2,w,c
  1703  002F86  6FA2               	movwf	(??_terminal+3)& (0+255),b
  1704  002F88  51A2               	movf	(??_terminal+3)& (0+255),w,b
  1705  002F8A  0D0A               	mullw	10
  1706  002F8C  50F3               	movf	prodl,w,c
  1707  002F8E  27A0               	addwf	(??_terminal+1)& (0+255),f,b
  1708  002F90  50F4               	movf	prodh,w,c
  1709  002F92  23A1               	addwfc	(??_terminal+2)& (0+255),f,b
  1710  002F94  EE20 F003          	lfsr	2,3
  1711  002F98  519D               	movf	terminal@comand& (0+255),w,b
  1712  002F9A  26D9               	addwf	fsr2l,f,c
  1713  002F9C  519E               	movf	(terminal@comand+1)& (0+255),w,b
  1714  002F9E  22DA               	addwfc	fsr2h,f,c
  1715  002FA0  50DF               	movf	indf2,w,c
  1716  002FA2  6FA3               	movwf	(??_terminal+4)& (0+255),b
  1717  002FA4  51A3               	movf	(??_terminal+4)& (0+255),w,b
  1718  002FA6  27A0               	addwf	(??_terminal+1)& (0+255),f,b
  1719  002FA8  0E00               	movlw	0
  1720  002FAA  23A1               	addwfc	(??_terminal+2)& (0+255),f,b
  1721  002FAC  0E30               	movlw	48
  1722  002FAE  25A0               	addwf	(??_terminal+1)& (0+255),w,b
  1723  002FB0  6FB8               	movwf	terminal@medicion& (0+255),b
  1724  002FB2  0EEB               	movlw	235
  1725  002FB4  21A1               	addwfc	(??_terminal+2)& (0+255),w,b
  1726  002FB6  6FB9               	movwf	(terminal@medicion+1)& (0+255),b
  1727                           
  1728                           ; BSR set to: 1
  1729                           ;auto.c: 175:             fijarVelocidad(medicion);
  1730  002FB8  51B8               	movf	terminal@medicion& (0+255),w,b
  1731  002FBA  EC0A  F01A         	call	_fijarVelocidad
  1732                           
  1733                           ;auto.c: 176:             cambiarPWM();
  1734  002FBE  EC77  F022         	call	_cambiarPWM	;wreg free
  1735                           
  1736                           ;auto.c: 177:             sprintf(texto, "Velocidad fijada al: %03u%c", medicion, '%');
  1737  002FC2  0EA4               	movlw	low terminal@texto
  1738  002FC4  0101               	movlb	1	; () banked
  1739  002FC6  6F95               	movwf	sprintf@s& (0+255),b
  1740  002FC8  0E01               	movlw	high terminal@texto
  1741  002FCA  6F96               	movwf	(sprintf@s+1)& (0+255),b
  1742  002FCC  0E01               	movlw	low STR_5
  1743  002FCE  6F97               	movwf	sprintf@fmt& (0+255),b
  1744  002FD0  0E0F               	movlw	high STR_5
  1745  002FD2  6F98               	movwf	(sprintf@fmt+1)& (0+255),b
  1746  002FD4  C1B8  F199         	movff	terminal@medicion,?_sprintf+4
  1747  002FD8  C1B9  F19A         	movff	terminal@medicion+1,?_sprintf+5
  1748  002FDC  0E00               	movlw	0
  1749  002FDE  6F9C               	movwf	(?_sprintf+7)& (0+255),b
  1750  002FE0  0E25               	movlw	37
  1751  002FE2  6F9B               	movwf	(?_sprintf+6)& (0+255),b
  1752  002FE4  EC29  F020         	call	_sprintf	;wreg free
  1753                           
  1754                           ;auto.c: 178:             enviarRS232(texto);
  1755  002FE8  0EA4               	movlw	low terminal@texto
  1756  002FEA  0100               	movlb	0	; () banked
  1757  002FEC  6F68               	movwf	enviarRS232@valores& (0+255),b
  1758  002FEE  0E01               	movlw	high terminal@texto
  1759  002FF0  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1760  002FF2  EC53  F01F         	call	_enviarRS232	;wreg free
  1761                           
  1762                           ;auto.c: 179:             break;
  1763  002FF6  0012               	return	
  1764  002FF8                     l7543:
  1765  002FF8  C19D  FFD9         	movff	terminal@comand,fsr2l
  1766  002FFC  C19E  FFDA         	movff	terminal@comand+1,fsr2h
  1767  003000  50DF               	movf	indf2,w,c
  1768  003002  0101               	movlb	1	; () banked
  1769  003004  6F9F               	movwf	??_terminal& (0+255),b
  1770  003006  6BA0               	clrf	(??_terminal+1)& (0+255),b
  1771                           
  1772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1773                           ; Switch size 1, requested type "simple"
  1774                           ; Number of cases is 1, Range of values is 0 to 0
  1775                           ; switch strategies available:
  1776                           ; Name         Instructions Cycles
  1777                           ; simple_byte            4     3 (average)
  1778                           ;	Chosen strategy is simple_byte
  1779  003008  51A0               	movf	(??_terminal+1)& (0+255),w,b
  1780  00300A  0A00               	xorlw	0	; case 0
  1781  00300C  A4D8               	btfss	status,2,c
  1782  00300E  0012               	return	
  1783                           
  1784                           ; BSR set to: 1
  1785                           ; Switch size 1, requested type "simple"
  1786                           ; Number of cases is 6, Range of values is 70 to 119
  1787                           ; switch strategies available:
  1788                           ; Name         Instructions Cycles
  1789                           ; simple_byte           19    10 (average)
  1790                           ;	Chosen strategy is simple_byte
  1791  003010  519F               	movf	??_terminal& (0+255),w,b
  1792  003012  0A46               	xorlw	70	; case 70
  1793  003014  B4D8               	btfsc	status,2,c
  1794  003016  D7A2               	goto	l7531
  1795  003018  0A27               	xorlw	39	; case 97
  1796  00301A  B4D8               	btfsc	status,2,c
  1797  00301C  D780               	goto	l7525
  1798  00301E  0A02               	xorlw	2	; case 99
  1799  003020  B4D8               	btfsc	status,2,c
  1800  003022  D799               	goto	l7529
  1801  003024  0A07               	xorlw	7	; case 100
  1802  003026  B4D8               	btfsc	status,2,c
  1803  003028  D788               	goto	l7527
  1804  00302A  0A17               	xorlw	23	; case 115
  1805  00302C  B4D8               	btfsc	status,2,c
  1806  00302E  D76B               	goto	l7519
  1807  003030  0A04               	xorlw	4	; case 119
  1808  003032  A4D8               	btfss	status,2,c
  1809  003034  0012               	return	
  1810  003036  D75B               	goto	l7513
  1811  003038                     __end_of_terminal:
  1812                           	opt callstack 0
  1813                           
  1814 ;; *************** function _sprintf *****************
  1815 ;; Defined at:
  1816 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  s               2   24[BANK1 ] PTR unsigned char 
  1819 ;;		 -> terminal@texto(20), main@texto(8), 
  1820 ;;  fmt             2   26[BANK1 ] PTR const unsigned char 
  1821 ;;		 -> STR_5(28), STR_1(10), 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  f               6  153[BANK0 ] struct _IO_FILE
  1824 ;;  ap              2  151[BANK0 ] PTR void [1]
  1825 ;;		 -> ?_sprintf(2), 
  1826 ;;  ret             2    0        int 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  2   24[BANK1 ] int 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1836 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1837 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Totals:         0      10       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;Total ram usage:       18 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    9
  1843 ;; This function calls:
  1844 ;;		_vfprintf
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;;		_terminal
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text2
  1852  004052                     __ptext2:
  1853                           	opt callstack 0
  1854  004052                     _sprintf:
  1855                           	opt callstack 20
  1856                           
  1857                           ;incstack = 0
  1858  004052  0E99               	movlw	low (?_sprintf+4)
  1859  004054  0100               	movlb	0	; () banked
  1860  004056  6FF7               	movwf	sprintf@ap& (0+255),b
  1861  004058  0E01               	movlw	high (?_sprintf+4)
  1862  00405A  6FF8               	movwf	(sprintf@ap+1)& (0+255),b
  1863  00405C  C195  F0F9         	movff	sprintf@s,sprintf@f
  1864  004060  C196  F0FA         	movff	sprintf@s+1,sprintf@f+1
  1865                           
  1866                           ; BSR set to: 0
  1867  004064  0E00               	movlw	0
  1868  004066  6FFC               	movwf	(sprintf@f+3)& (0+255),b
  1869  004068  0E00               	movlw	0
  1870  00406A  6FFB               	movwf	(sprintf@f+2)& (0+255),b
  1871                           
  1872                           ; BSR set to: 0
  1873  00406C  0E00               	movlw	0
  1874  00406E  6FFE               	movwf	(sprintf@f+5)& (0+255),b
  1875  004070  0E00               	movlw	0
  1876  004072  6FFD               	movwf	(sprintf@f+4)& (0+255),b
  1877                           
  1878                           ; BSR set to: 0
  1879  004074  0EF9               	movlw	low sprintf@f
  1880  004076  6FED               	movwf	vfprintf@fp& (0+255),b
  1881  004078  0E00               	movlw	high sprintf@f
  1882  00407A  6FEE               	movwf	(vfprintf@fp+1)& (0+255),b
  1883  00407C  C197  F0EF         	movff	sprintf@fmt,vfprintf@fmt
  1884  004080  C198  F0F0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1885  004084  0EF7               	movlw	low sprintf@ap
  1886  004086  6FF1               	movwf	vfprintf@ap& (0+255),b
  1887  004088  0E00               	movlw	high sprintf@ap
  1888  00408A  6FF2               	movwf	(vfprintf@ap+1)& (0+255),b
  1889  00408C  ECF8  F01F         	call	_vfprintf	;wreg free
  1890  004090  0100               	movlb	0	; () banked
  1891  004092  51FB               	movf	(sprintf@f+2)& (0+255),w,b
  1892  004094  0101               	movlb	1	; () banked
  1893  004096  2595               	addwf	sprintf@s& (0+255),w,b
  1894  004098  6ED9               	movwf	fsr2l,c
  1895  00409A  0100               	movlb	0	; () banked
  1896  00409C  51FC               	movf	(sprintf@f+3)& (0+255),w,b
  1897  00409E  0101               	movlb	1	; () banked
  1898  0040A0  2196               	addwfc	(sprintf@s+1)& (0+255),w,b
  1899  0040A2  6EDA               	movwf	fsr2h,c
  1900  0040A4  0E00               	movlw	0
  1901  0040A6  6EDF               	movwf	indf2,c
  1902                           
  1903                           ; BSR set to: 1
  1904  0040A8  0012               	return		;funcret
  1905  0040AA                     __end_of_sprintf:
  1906                           	opt callstack 0
  1907                           
  1908 ;; *************** function _vfprintf *****************
  1909 ;; Defined at:
  1910 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  fp              2  141[BANK0 ] PTR struct _IO_FILE
  1913 ;;		 -> sprintf@f(6), 
  1914 ;;  fmt             2  143[BANK0 ] PTR const unsigned char 
  1915 ;;		 -> STR_5(28), STR_1(10), 
  1916 ;;  ap              2  145[BANK0 ] PTR PTR void 
  1917 ;;		 -> sprintf@ap(2), 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  cfmt            2  147[BANK0 ] PTR unsigned char 
  1920 ;;		 -> STR_5(28), STR_1(10), 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  2  141[BANK0 ] int 
  1923 ;; Registers used:
  1924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1930 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1933 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1934 ;;Total ram usage:        8 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    8
  1937 ;; This function calls:
  1938 ;;		_vfpfcnvrt
  1939 ;; This function is called by:
  1940 ;;		_sprintf
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text3
  1945  003FF0                     __ptext3:
  1946                           	opt callstack 0
  1947  003FF0                     _vfprintf:
  1948                           	opt callstack 20
  1949                           
  1950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1951                           
  1952                           ; BSR set to: 1
  1953                           ;incstack = 0
  1954  003FF0  C0EF  F0F3         	movff	vfprintf@fmt,vfprintf@cfmt
  1955  003FF4  C0F0  F0F4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1956                           
  1957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1958  003FF8  0E00               	movlw	0
  1959  003FFA  0101               	movlb	1	; () banked
  1960  003FFC  6F1D               	movwf	(_nout+1)& (0+255),b
  1961  003FFE  0E00               	movlw	0
  1962  004000  6F1C               	movwf	_nout& (0+255),b
  1963                           
  1964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1965  004002  D017               	goto	l7289
  1966  004004                     l7287:
  1967                           
  1968                           ; BSR set to: 1
  1969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1970  004004  C0ED  F0E3         	movff	vfprintf@fp,vfpfcnvrt@fp
  1971  004008  C0EE  F0E4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1972  00400C  0EF3               	movlw	low vfprintf@cfmt
  1973  00400E  0100               	movlb	0	; () banked
  1974  004010  6FE5               	movwf	vfpfcnvrt@fmt& (0+255),b
  1975  004012  0E00               	movlw	high vfprintf@cfmt
  1976  004014  6FE6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1977  004016  C0F1  F0E7         	movff	vfprintf@ap,vfpfcnvrt@ap
  1978  00401A  C0F2  F0E8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1979  00401E  EC86  F00C         	call	_vfpfcnvrt	;wreg free
  1980  004022  0100               	movlb	0	; () banked
  1981  004024  51E3               	movf	?_vfpfcnvrt& (0+255),w,b
  1982  004026  0101               	movlb	1	; () banked
  1983  004028  271C               	addwf	_nout& (0+255),f,b
  1984  00402A  0100               	movlb	0	; () banked
  1985  00402C  51E4               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1986  00402E  0101               	movlb	1	; () banked
  1987  004030  231D               	addwfc	(_nout+1)& (0+255),f,b
  1988  004032                     l7289:
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1992  004032  C0F3  FFF6         	movff	vfprintf@cfmt,tblptrl
  1993  004036  C0F4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1994  00403A                     	if	0	;tblptru may be non-zero
  1995  00403A                     	endif
  1996  00403A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1997  00403A  0E00               	movlw	low (__mediumconst shr (0+16))
  1998  00403C  6EF8               	movwf	tblptru,c
  1999  00403E                     	endif
  2000  00403E  0008               	tblrd		*
  2001  004040  50F5               	movf	tablat,w,c
  2002  004042  0900               	iorlw	0
  2003  004044  A4D8               	btfss	status,2,c
  2004  004046  D7DE               	goto	l7287
  2005                           
  2006                           ; BSR set to: 1
  2007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2008  004048  C11C  F0ED         	movff	_nout,?_vfprintf
  2009  00404C  C11D  F0EE         	movff	_nout+1,?_vfprintf+1
  2010                           
  2011                           ; BSR set to: 1
  2012  004050  0012               	return		;funcret
  2013  004052                     __end_of_vfprintf:
  2014                           	opt callstack 0
  2015                           
  2016 ;; *************** function _vfpfcnvrt *****************
  2017 ;; Defined at:
  2018 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  fp              2  131[BANK0 ] PTR struct _IO_FILE
  2021 ;;		 -> sprintf@f(6), 
  2022 ;;  fmt             2  133[BANK0 ] PTR PTR unsigned char 
  2023 ;;		 -> vfprintf@cfmt(2), 
  2024 ;;  ap              2  135[BANK0 ] PTR PTR void 
  2025 ;;		 -> sprintf@ap(2), 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  llu             8    0[BANK1 ] unsigned long long 
  2028 ;;  ll              8    0        long long 
  2029 ;;  f               4   16[BANK1 ] long long 
  2030 ;;  ct              3   20[BANK1 ] unsigned char [3]
  2031 ;;  vp              3    0        PTR void 
  2032 ;;  cp              3    0        PTR unsigned char 
  2033 ;;  done            2    8[BANK1 ] int 
  2034 ;;  i               2    0        int 
  2035 ;;  c               1   23[BANK1 ] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2  131[BANK0 ] int 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2045 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2046 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2047 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2048 ;;      Totals:         0      10      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2049 ;;Total ram usage:       34 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    7
  2052 ;; This function calls:
  2053 ;;		_atoi
  2054 ;;		_ctoa
  2055 ;;		_efgtoa
  2056 ;;		_fputc
  2057 ;;		_isdigit
  2058 ;;		_isupper
  2059 ;;		_strncmp
  2060 ;;		_tolower
  2061 ;;		_utoa
  2062 ;; This function is called by:
  2063 ;;		_vfprintf
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text4
  2068  00190C                     __ptext4:
  2069                           	opt callstack 0
  2070  00190C                     _vfpfcnvrt:
  2071                           	opt callstack 20
  2072                           
  2073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;incstack = 0
  2077  00190C  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2078  001910  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2079  001914  CFDE FFF6          	movff	postinc2,tblptrl
  2080  001918  CFDD FFF7          	movff	postdec2,tblptrh
  2081  00191C                     	if	0	;tblptru may be non-zero
  2082  00191C                     	endif
  2083  00191C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2084  00191C  0E00               	movlw	low (__mediumconst shr (0+16))
  2085  00191E  6EF8               	movwf	tblptru,c
  2086  001920                     	endif
  2087  001920  0008               	tblrd		*
  2088  001922  50F5               	movf	tablat,w,c
  2089  001924  0A25               	xorlw	37
  2090  001926  A4D8               	btfss	status,2,c
  2091  001928  D308               	goto	l7245
  2092                           
  2093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2094  00192A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2095  00192E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2096  001932  2ADE               	incf	postinc2,f,c
  2097  001934  0E00               	movlw	0
  2098  001936  22DD               	addwfc	postdec2,f,c
  2099                           
  2100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2101  001938  0E00               	movlw	0
  2102  00193A  6E37               	movwf	_width+1,c
  2103  00193C  0E00               	movlw	0
  2104  00193E  6E36               	movwf	_width,c
  2105  001940  C036  F03A         	movff	_width,_flags
  2106  001944  C037  F03B         	movff	_width+1,_flags+1
  2107                           
  2108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2109  001948  6838               	setf	_prec,c
  2110  00194A  6839               	setf	_prec+1,c
  2111                           
  2112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2113  00194C  0E00               	movlw	0
  2114  00194E  0101               	movlb	1	; () banked
  2115  001950  6F86               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2116  001952  0E00               	movlw	0
  2117  001954  D015               	goto	L1
  2118  001956                     l7107:
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2122  001956  803A               	bsf	_flags,0,c
  2123  001958                     l7109:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2127  001958  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2128  00195C  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2129  001960  2ADE               	incf	postinc2,f,c
  2130  001962  0E00               	movlw	0
  2131  001964  22DD               	addwfc	postdec2,f,c
  2132                           
  2133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2134  001966  D032               	goto	l7133
  2135  001968                     l7111:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2139  001968  823A               	bsf	_flags,1,c
  2140  00196A  D7F6               	goto	l7109
  2141  00196C                     l7115:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2145  00196C  843A               	bsf	_flags,2,c
  2146  00196E  D7F4               	goto	l7109
  2147  001970                     l7119:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2151  001970  863A               	bsf	_flags,3,c
  2152  001972  D7F2               	goto	l7109
  2153  001974                     l7123:
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2157  001974  883A               	bsf	_flags,4,c
  2158  001976  D7F0               	goto	l7109
  2159  001978                     l7127:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2163  001978  0E00               	movlw	0
  2164  00197A  0101               	movlb	1	; () banked
  2165  00197C  6F86               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2166  00197E  0E01               	movlw	1
  2167  001980                     L1:
  2168  001980  6F85               	movwf	vfpfcnvrt@done& (0+255),b
  2169                           
  2170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2171  001982  D024               	goto	l7133
  2172  001984                     l7131:
  2173                           
  2174                           ; BSR set to: 1
  2175  001984  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2176  001988  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2177  00198C  CFDE FFF6          	movff	postinc2,tblptrl
  2178  001990  CFDD FFF7          	movff	postdec2,tblptrh
  2179  001994                     	if	0	;tblptru may be non-zero
  2180  001994                     	endif
  2181  001994                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2182  001994  0E00               	movlw	low (__mediumconst shr (0+16))
  2183  001996  6EF8               	movwf	tblptru,c
  2184  001998                     	endif
  2185  001998  0008               	tblrd		*
  2186  00199A  50F5               	movf	tablat,w,c
  2187  00199C  0100               	movlb	0	; () banked
  2188  00199E  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2189  0019A0  6BEA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2190                           
  2191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2192                           ; Switch size 1, requested type "simple"
  2193                           ; Number of cases is 1, Range of values is 0 to 0
  2194                           ; switch strategies available:
  2195                           ; Name         Instructions Cycles
  2196                           ; simple_byte            4     3 (average)
  2197                           ;	Chosen strategy is simple_byte
  2198  0019A2  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2199  0019A4  0A00               	xorlw	0	; case 0
  2200  0019A6  A4D8               	btfss	status,2,c
  2201  0019A8  D7E7               	goto	l7127
  2202                           
  2203                           ; BSR set to: 0
  2204                           ; Switch size 1, requested type "simple"
  2205                           ; Number of cases is 5, Range of values is 32 to 48
  2206                           ; switch strategies available:
  2207                           ; Name         Instructions Cycles
  2208                           ; simple_byte           16     9 (average)
  2209                           ;	Chosen strategy is simple_byte
  2210  0019AA  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2211  0019AC  0A20               	xorlw	32	; case 32
  2212  0019AE  B4D8               	btfsc	status,2,c
  2213  0019B0  D7DF               	goto	l7119
  2214  0019B2  0A03               	xorlw	3	; case 35
  2215  0019B4  B4D8               	btfsc	status,2,c
  2216  0019B6  D7DE               	goto	l7123
  2217  0019B8  0A08               	xorlw	8	; case 43
  2218  0019BA  B4D8               	btfsc	status,2,c
  2219  0019BC  D7D7               	goto	l7115
  2220  0019BE  0A06               	xorlw	6	; case 45
  2221  0019C0  B4D8               	btfsc	status,2,c
  2222  0019C2  D7C9               	goto	l7107
  2223  0019C4  0A1D               	xorlw	29	; case 48
  2224  0019C6  B4D8               	btfsc	status,2,c
  2225  0019C8  D7CF               	goto	l7111
  2226  0019CA  D7D6               	goto	l7127
  2227  0019CC                     l7133:
  2228                           
  2229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2230  0019CC  0101               	movlb	1	; () banked
  2231  0019CE  5185               	movf	vfpfcnvrt@done& (0+255),w,b
  2232  0019D0  1186               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2233  0019D2  B4D8               	btfsc	status,2,c
  2234  0019D4  D7D7               	goto	l7131
  2235                           
  2236                           ; BSR set to: 1
  2237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2238  0019D6  B03A               	btfsc	_flags,0,c
  2239                           
  2240                           ; BSR set to: 1
  2241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2242  0019D8  923A               	bcf	_flags,1,c
  2243                           
  2244                           ; BSR set to: 1
  2245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2246  0019DA  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2247  0019DE  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2248  0019E2  CFDE FFF6          	movff	postinc2,tblptrl
  2249  0019E6  CFDD FFF7          	movff	postdec2,tblptrh
  2250  0019EA                     	if	0	;tblptru may be non-zero
  2251  0019EA                     	endif
  2252  0019EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2253  0019EA  0E00               	movlw	low (__mediumconst shr (0+16))
  2254  0019EC  6EF8               	movwf	tblptru,c
  2255  0019EE                     	endif
  2256  0019EE  0008               	tblrd		*
  2257  0019F0  50F5               	movf	tablat,w,c
  2258  0019F2  0A2A               	xorlw	42
  2259  0019F4  A4D8               	btfss	status,2,c
  2260  0019F6  D023               	goto	l7145
  2261                           
  2262                           ; BSR set to: 1
  2263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2264  0019F8  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2265  0019FC  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2266  001A00  2ADE               	incf	postinc2,f,c
  2267  001A02  0E00               	movlw	0
  2268  001A04  22DD               	addwfc	postdec2,f,c
  2269                           
  2270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2271  001A06  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2272  001A0A  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2273  001A0E  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2274  001A12  0E02               	movlw	2
  2275  001A14  26DE               	addwf	postinc2,f,c
  2276  001A16  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2277  001A1A  0E00               	movlw	0
  2278  001A1C  22DD               	addwfc	postdec2,f,c
  2279  001A1E  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2280  001A22  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2281  001A26  CFDE F036          	movff	postinc2,_width
  2282  001A2A  CFDD F037          	movff	postdec2,_width+1
  2283                           
  2284                           ; BSR set to: 1
  2285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2286  001A2E  AE37               	btfss	_width+1,7,c
  2287  001A30  D043               	goto	u9260
  2288                           
  2289                           ; BSR set to: 1
  2290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2291  001A32  803A               	bsf	_flags,0,c
  2292                           
  2293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2294  001A34  6C36               	negf	_width,c
  2295  001A36  1E37               	comf	_width+1,f,c
  2296  001A38  B0D8               	btfsc	status,0,c
  2297  001A3A  2A37               	incf	_width+1,f,c
  2298  001A3C  D03D               	goto	u9260
  2299  001A3E                     l7145:
  2300                           
  2301                           ; BSR set to: 1
  2302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2303  001A3E  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2304  001A42  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2305  001A46  CFDE F067          	movff	postinc2,atoi@s
  2306  001A4A  CFDD F068          	movff	postdec2,atoi@s+1
  2307  001A4E  EC1C  F018         	call	_atoi	;wreg free
  2308  001A52  C067  F036         	movff	?_atoi,_width
  2309  001A56  C068  F037         	movff	?_atoi+1,_width+1
  2310                           
  2311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2312  001A5A  D007               	goto	l7149
  2313  001A5C                     l7147:
  2314                           
  2315                           ; BSR set to: 1
  2316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2317  001A5C  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2318  001A60  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2319  001A64  2ADE               	incf	postinc2,f,c
  2320  001A66  0E00               	movlw	0
  2321  001A68  22DD               	addwfc	postdec2,f,c
  2322  001A6A                     l7149:
  2323  001A6A  0ED0               	movlw	208
  2324  001A6C  0100               	movlb	0	; () banked
  2325  001A6E  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2326  001A70  0EFF               	movlw	255
  2327  001A72  6FEA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2328  001A74  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2329  001A78  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2330  001A7C  CFDE FFF6          	movff	postinc2,tblptrl
  2331  001A80  CFDD FFF7          	movff	postdec2,tblptrh
  2332  001A84                     	if	0	;tblptru may be non-zero
  2333  001A84                     	endif
  2334  001A84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2335  001A84  0E00               	movlw	low (__mediumconst shr (0+16))
  2336  001A86  6EF8               	movwf	tblptru,c
  2337  001A88                     	endif
  2338  001A88  0008               	tblrd		*
  2339  001A8A  50F5               	movf	tablat,w,c
  2340  001A8C  6FEB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2341  001A8E  6BEC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2342  001A90  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2343  001A92  27EB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2344  001A94  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2345  001A96  23EC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2346  001A98  51EC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2347  001A9A  E106               	bnz	u9240
  2348  001A9C  0E0A               	movlw	10
  2349  001A9E  5DEB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2350  001AA0  B0D8               	btfsc	status,0,c
  2351  001AA2  D002               	goto	u9240
  2352  001AA4  0E01               	movlw	1
  2353  001AA6  D001               	goto	u9250
  2354  001AA8                     u9240:
  2355  001AA8  0E00               	movlw	0
  2356  001AAA                     u9250:
  2357  001AAA  0101               	movlb	1	; () banked
  2358  001AAC  6F87               	movwf	_vfpfcnvrt$1373& (0+255),b
  2359  001AAE  6B88               	clrf	(_vfpfcnvrt$1373+1)& (0+255),b
  2360                           
  2361                           ; BSR set to: 1
  2362  001AB0  5187               	movf	_vfpfcnvrt$1373& (0+255),w,b
  2363  001AB2  1188               	iorwf	(_vfpfcnvrt$1373+1)& (0+255),w,b
  2364  001AB4  A4D8               	btfss	status,2,c
  2365  001AB6  D7D2               	goto	l7147
  2366  001AB8                     u9260:
  2367                           
  2368                           ; BSR set to: 1
  2369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2370  001AB8  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2371  001ABC  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2372  001AC0  CFDE FFF6          	movff	postinc2,tblptrl
  2373  001AC4  CFDD FFF7          	movff	postdec2,tblptrh
  2374  001AC8                     	if	0	;tblptru may be non-zero
  2375  001AC8                     	endif
  2376  001AC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2377  001AC8  0E00               	movlw	low (__mediumconst shr (0+16))
  2378  001ACA  6EF8               	movwf	tblptru,c
  2379  001ACC                     	endif
  2380  001ACC  0008               	tblrd		*
  2381  001ACE  50F5               	movf	tablat,w,c
  2382  001AD0  0A2E               	xorlw	46
  2383  001AD2  A4D8               	btfss	status,2,c
  2384  001AD4  D073               	goto	u9310
  2385                           
  2386                           ; BSR set to: 1
  2387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2388  001AD6  0E00               	movlw	0
  2389  001AD8  6E39               	movwf	_prec+1,c
  2390  001ADA  0E00               	movlw	0
  2391  001ADC  6E38               	movwf	_prec,c
  2392                           
  2393                           ; BSR set to: 1
  2394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2395  001ADE  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2396  001AE2  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2397  001AE6  2ADE               	incf	postinc2,f,c
  2398  001AE8  0E00               	movlw	0
  2399  001AEA  22DD               	addwfc	postdec2,f,c
  2400                           
  2401                           ; BSR set to: 1
  2402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2403  001AEC  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2404  001AF0  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2405  001AF4  CFDE FFF6          	movff	postinc2,tblptrl
  2406  001AF8  CFDD FFF7          	movff	postdec2,tblptrh
  2407  001AFC                     	if	0	;tblptru may be non-zero
  2408  001AFC                     	endif
  2409  001AFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2410  001AFC  0E00               	movlw	low (__mediumconst shr (0+16))
  2411  001AFE  6EF8               	movwf	tblptru,c
  2412  001B00                     	endif
  2413  001B00  0008               	tblrd		*
  2414  001B02  50F5               	movf	tablat,w,c
  2415  001B04  0A2A               	xorlw	42
  2416  001B06  A4D8               	btfss	status,2,c
  2417  001B08  D01C               	goto	l7165
  2418                           
  2419                           ; BSR set to: 1
  2420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2421  001B0A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2422  001B0E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2423  001B12  2ADE               	incf	postinc2,f,c
  2424  001B14  0E00               	movlw	0
  2425  001B16  22DD               	addwfc	postdec2,f,c
  2426                           
  2427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2428  001B18  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2429  001B1C  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2430  001B20  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2431  001B24  0E02               	movlw	2
  2432  001B26  26DE               	addwf	postinc2,f,c
  2433  001B28  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2434  001B2C  0E00               	movlw	0
  2435  001B2E  22DD               	addwfc	postdec2,f,c
  2436  001B30  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2437  001B34  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2438  001B38  CFDE F038          	movff	postinc2,_prec
  2439  001B3C  CFDD F039          	movff	postdec2,_prec+1
  2440                           
  2441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2442  001B40  D03D               	goto	u9310
  2443  001B42                     l7165:
  2444                           
  2445                           ; BSR set to: 1
  2446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2447  001B42  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2448  001B46  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2449  001B4A  CFDE F067          	movff	postinc2,atoi@s
  2450  001B4E  CFDD F068          	movff	postdec2,atoi@s+1
  2451  001B52  EC1C  F018         	call	_atoi	;wreg free
  2452  001B56  C067  F038         	movff	?_atoi,_prec
  2453  001B5A  C068  F039         	movff	?_atoi+1,_prec+1
  2454                           
  2455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2456  001B5E  D007               	goto	l7169
  2457  001B60                     l7167:
  2458                           
  2459                           ; BSR set to: 1
  2460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2461  001B60  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2462  001B64  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2463  001B68  2ADE               	incf	postinc2,f,c
  2464  001B6A  0E00               	movlw	0
  2465  001B6C  22DD               	addwfc	postdec2,f,c
  2466  001B6E                     l7169:
  2467  001B6E  0ED0               	movlw	208
  2468  001B70  0100               	movlb	0	; () banked
  2469  001B72  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2470  001B74  0EFF               	movlw	255
  2471  001B76  6FEA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2472  001B78  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2473  001B7C  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2474  001B80  CFDE FFF6          	movff	postinc2,tblptrl
  2475  001B84  CFDD FFF7          	movff	postdec2,tblptrh
  2476  001B88                     	if	0	;tblptru may be non-zero
  2477  001B88                     	endif
  2478  001B88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2479  001B88  0E00               	movlw	low (__mediumconst shr (0+16))
  2480  001B8A  6EF8               	movwf	tblptru,c
  2481  001B8C                     	endif
  2482  001B8C  0008               	tblrd		*
  2483  001B8E  50F5               	movf	tablat,w,c
  2484  001B90  6FEB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2485  001B92  6BEC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2486  001B94  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2487  001B96  27EB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2488  001B98  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2489  001B9A  23EC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2490  001B9C  51EC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2491  001B9E  E106               	bnz	u9290
  2492  001BA0  0E0A               	movlw	10
  2493  001BA2  5DEB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2494  001BA4  B0D8               	btfsc	status,0,c
  2495  001BA6  D002               	goto	u9290
  2496  001BA8  0E01               	movlw	1
  2497  001BAA  D001               	goto	u9300
  2498  001BAC                     u9290:
  2499  001BAC  0E00               	movlw	0
  2500  001BAE                     u9300:
  2501  001BAE  0101               	movlb	1	; () banked
  2502  001BB0  6F89               	movwf	_vfpfcnvrt$1374& (0+255),b
  2503  001BB2  6B8A               	clrf	(_vfpfcnvrt$1374+1)& (0+255),b
  2504                           
  2505                           ; BSR set to: 1
  2506  001BB4  5189               	movf	_vfpfcnvrt$1374& (0+255),w,b
  2507  001BB6  118A               	iorwf	(_vfpfcnvrt$1374+1)& (0+255),w,b
  2508  001BB8  A4D8               	btfss	status,2,c
  2509  001BBA  D7D2               	goto	l7167
  2510  001BBC                     u9310:
  2511                           
  2512                           ; BSR set to: 1
  2513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2514  001BBC  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2515  001BC0  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2516  001BC4  CFDE FFF6          	movff	postinc2,tblptrl
  2517  001BC8  CFDD FFF7          	movff	postdec2,tblptrh
  2518  001BCC                     	if	0	;tblptru may be non-zero
  2519  001BCC                     	endif
  2520  001BCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2521  001BCC  0E00               	movlw	low (__mediumconst shr (0+16))
  2522  001BCE  6EF8               	movwf	tblptru,c
  2523  001BD0                     	endif
  2524  001BD0  0008               	tblrd		*
  2525  001BD2  50F5               	movf	tablat,w,c
  2526  001BD4  0100               	movlb	0	; () banked
  2527  001BD6  6F66               	movwf	tolower@c& (0+255),b
  2528  001BD8  6B67               	clrf	(tolower@c+1)& (0+255),b
  2529  001BDA  ECD1  F020         	call	_tolower	;wreg free
  2530  001BDE  0100               	movlb	0	; () banked
  2531  001BE0  5166               	movf	?_tolower& (0+255),w,b
  2532  001BE2  0101               	movlb	1	; () banked
  2533  001BE4  6F91               	movwf	vfpfcnvrt@ct& (0+255),b
  2534                           
  2535                           ; BSR set to: 1
  2536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2537  001BE6  5191               	movf	vfpfcnvrt@ct& (0+255),w,b
  2538  001BE8  B4D8               	btfsc	status,2,c
  2539  001BEA  D03D               	goto	l7185
  2540                           
  2541                           ; BSR set to: 1
  2542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2543  001BEC  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2544  001BF0  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2545  001BF4  CFDE F0E9          	movff	postinc2,??_vfpfcnvrt
  2546  001BF8  CFDD F0EA          	movff	postdec2,??_vfpfcnvrt+1
  2547  001BFC  0E01               	movlw	1
  2548  001BFE  0100               	movlb	0	; () banked
  2549  001C00  27E9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2550  001C02  0E00               	movlw	0
  2551  001C04  23EA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2552  001C06  C0E9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2553  001C0A  C0EA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2554  001C0E                     	if	0	;tblptru may be non-zero
  2555  001C0E                     	endif
  2556  001C0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2557  001C0E  0E00               	movlw	low (__mediumconst shr (0+16))
  2558  001C10  6EF8               	movwf	tblptru,c
  2559  001C12                     	endif
  2560  001C12  0008               	tblrd		*
  2561  001C14  50F5               	movf	tablat,w,c
  2562  001C16  6F66               	movwf	tolower@c& (0+255),b
  2563  001C18  6B67               	clrf	(tolower@c+1)& (0+255),b
  2564  001C1A  ECD1  F020         	call	_tolower	;wreg free
  2565  001C1E  0100               	movlb	0	; () banked
  2566  001C20  5166               	movf	?_tolower& (0+255),w,b
  2567  001C22  0101               	movlb	1	; () banked
  2568  001C24  6F92               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2569                           
  2570                           ; BSR set to: 1
  2571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2572  001C26  5192               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2573  001C28  B4D8               	btfsc	status,2,c
  2574  001C2A  D01D               	goto	l7185
  2575                           
  2576                           ; BSR set to: 1
  2577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2578  001C2C  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2579  001C30  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2580  001C34  CFDE F0E9          	movff	postinc2,??_vfpfcnvrt
  2581  001C38  CFDD F0EA          	movff	postdec2,??_vfpfcnvrt+1
  2582  001C3C  0E02               	movlw	2
  2583  001C3E  0100               	movlb	0	; () banked
  2584  001C40  27E9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2585  001C42  0E00               	movlw	0
  2586  001C44  23EA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2587  001C46  C0E9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2588  001C4A  C0EA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2589  001C4E                     	if	0	;tblptru may be non-zero
  2590  001C4E                     	endif
  2591  001C4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2592  001C4E  0E00               	movlw	low (__mediumconst shr (0+16))
  2593  001C50  6EF8               	movwf	tblptru,c
  2594  001C52                     	endif
  2595  001C52  0008               	tblrd		*
  2596  001C54  50F5               	movf	tablat,w,c
  2597  001C56  6F66               	movwf	tolower@c& (0+255),b
  2598  001C58  6B67               	clrf	(tolower@c+1)& (0+255),b
  2599  001C5A  ECD1  F020         	call	_tolower	;wreg free
  2600  001C5E  0100               	movlb	0	; () banked
  2601  001C60  5166               	movf	?_tolower& (0+255),w,b
  2602  001C62  0101               	movlb	1	; () banked
  2603  001C64  6F93               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2604  001C66                     l7185:
  2605                           
  2606                           ; BSR set to: 1
  2607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  2608  001C66  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2609  001C6A  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2610  001C6E  CFDE FFF6          	movff	postinc2,tblptrl
  2611  001C72  CFDD FFF7          	movff	postdec2,tblptrh
  2612  001C76                     	if	0	;tblptru may be non-zero
  2613  001C76                     	endif
  2614  001C76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2615  001C76  0E00               	movlw	low (__mediumconst shr (0+16))
  2616  001C78  6EF8               	movwf	tblptru,c
  2617  001C7A                     	endif
  2618  001C7A  0008               	tblrd		*
  2619  001C7C  50F5               	movf	tablat,w,c
  2620  001C7E  0A63               	xorlw	99
  2621  001C80  A4D8               	btfss	status,2,c
  2622  001C82  D026               	goto	l7193
  2623                           
  2624                           ; BSR set to: 1
  2625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  2626  001C84  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2627  001C88  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2628  001C8C  2ADE               	incf	postinc2,f,c
  2629  001C8E  0E00               	movlw	0
  2630  001C90  22DD               	addwfc	postdec2,f,c
  2631                           
  2632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2633  001C92  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2634  001C96  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2635  001C9A  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2636  001C9E  0E02               	movlw	2
  2637  001CA0  26DE               	addwf	postinc2,f,c
  2638  001CA2  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2639  001CA6  0E00               	movlw	0
  2640  001CA8  22DD               	addwfc	postdec2,f,c
  2641  001CAA  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2642  001CAE  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2643  001CB2  50DF               	movf	indf2,w,c
  2644  001CB4  6F94               	movwf	vfpfcnvrt@c& (0+255),b
  2645                           
  2646                           ; BSR set to: 1
  2647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  2648  001CB6  C0E3  F07B         	movff	vfpfcnvrt@fp,ctoa@fp
  2649  001CBA  C0E4  F07C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2650  001CBE  C194  F07D         	movff	vfpfcnvrt@c,ctoa@c
  2651  001CC2  EC80  F020         	call	_ctoa	;wreg free
  2652  001CC6  C07B  F0E3         	movff	?_ctoa,?_vfpfcnvrt
  2653  001CCA  C07C  F0E4         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2654  001CCE  0012               	return	
  2655  001CD0                     l7193:
  2656                           
  2657                           ; BSR set to: 1
  2658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2659  001CD0  0E66               	movlw	102
  2660  001CD2  1991               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2661  001CD4  A4D8               	btfss	status,2,c
  2662  001CD6  D041               	goto	l7205
  2663                           
  2664                           ; BSR set to: 1
  2665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2666  001CD8  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2667  001CDC  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2668  001CE0  CFDE FFF6          	movff	postinc2,tblptrl
  2669  001CE4  CFDD FFF7          	movff	postdec2,tblptrh
  2670  001CE8                     	if	0	;tblptru may be non-zero
  2671  001CE8                     	endif
  2672  001CE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2673  001CE8  0E00               	movlw	low (__mediumconst shr (0+16))
  2674  001CEA  6EF8               	movwf	tblptru,c
  2675  001CEC                     	endif
  2676  001CEC  0008               	tblrd		*
  2677  001CEE  CFF5 F194          	movff	tablat,vfpfcnvrt@c
  2678                           
  2679                           ; BSR set to: 1
  2680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2681  001CF2  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2682  001CF6  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2683  001CFA  2ADE               	incf	postinc2,f,c
  2684  001CFC  0E00               	movlw	0
  2685  001CFE  22DD               	addwfc	postdec2,f,c
  2686                           
  2687                           ; BSR set to: 1
  2688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2689  001D00  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2690  001D04  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2691  001D08  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2692  001D0C  0E04               	movlw	4
  2693  001D0E  26DE               	addwf	postinc2,f,c
  2694  001D10  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2695  001D14  0E00               	movlw	0
  2696  001D16  22DD               	addwfc	postdec2,f,c
  2697  001D18  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2698  001D1C  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2699  001D20  CFDE F18D          	movff	postinc2,vfpfcnvrt@f
  2700  001D24  CFDE F18E          	movff	postinc2,vfpfcnvrt@f+1
  2701  001D28  CFDE F18F          	movff	postinc2,vfpfcnvrt@f+2
  2702  001D2C  CFDE F190          	movff	postinc2,vfpfcnvrt@f+3
  2703  001D30                     l7201:
  2704                           
  2705                           ; BSR set to: 1
  2706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2707  001D30  C0E3  F09F         	movff	vfpfcnvrt@fp,efgtoa@fp
  2708  001D34  C0E4  F0A0         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2709  001D38  C18D  F0A1         	movff	vfpfcnvrt@f,efgtoa@f
  2710  001D3C  C18E  F0A2         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2711  001D40  C18F  F0A3         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2712  001D44  C190  F0A4         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2713  001D48  C194  F0A5         	movff	vfpfcnvrt@c,efgtoa@c
  2714  001D4C  ECC4  F007         	call	_efgtoa	;wreg free
  2715  001D50  C09F  F0E3         	movff	?_efgtoa,?_vfpfcnvrt
  2716  001D54  C0A0  F0E4         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2717  001D58  0012               	return	
  2718  001D5A                     l7205:
  2719                           
  2720                           ; BSR set to: 1
  2721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2722  001D5A  0E91               	movlw	low vfpfcnvrt@ct
  2723  001D5C  0100               	movlb	0	; () banked
  2724  001D5E  6F60               	movwf	strncmp@_l& (0+255),b
  2725  001D60  0E01               	movlw	high vfpfcnvrt@ct
  2726  001D62  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2727  001D64  0E83               	movlw	low STR_15
  2728  001D66  6F62               	movwf	strncmp@_r& (0+255),b
  2729  001D68  0E0F               	movlw	high STR_15
  2730  001D6A  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2731  001D6C  0E00               	movlw	0
  2732  001D6E  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2733  001D70  0E02               	movlw	2
  2734  001D72  6F64               	movwf	strncmp@n& (0+255),b
  2735  001D74  ECCE  F01C         	call	_strncmp	;wreg free
  2736  001D78  0100               	movlb	0	; () banked
  2737  001D7A  5160               	movf	?_strncmp& (0+255),w,b
  2738  001D7C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2739  001D7E  A4D8               	btfss	status,2,c
  2740  001D80  D05A               	goto	l7221
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2744  001D82  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2745  001D86  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2746  001D8A  CFDE F0E9          	movff	postinc2,??_vfpfcnvrt
  2747  001D8E  CFDD F0EA          	movff	postdec2,??_vfpfcnvrt+1
  2748  001D92  0E01               	movlw	1
  2749  001D94  27E9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2750  001D96  0E00               	movlw	0
  2751  001D98  23EA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2752  001D9A  C0E9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2753  001D9E  C0EA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2754  001DA2                     	if	0	;tblptru may be non-zero
  2755  001DA2                     	endif
  2756  001DA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2757  001DA2  0E00               	movlw	low (__mediumconst shr (0+16))
  2758  001DA4  6EF8               	movwf	tblptru,c
  2759  001DA6                     	endif
  2760  001DA6  0008               	tblrd		*
  2761  001DA8  CFF5 F194          	movff	tablat,vfpfcnvrt@c
  2762  001DAC  0EBF               	movlw	191
  2763  001DAE  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2764  001DB0  0EFF               	movlw	255
  2765  001DB2  6FEA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2766  001DB4  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2767  001DB8  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2768  001DBC  CFDE FFF6          	movff	postinc2,tblptrl
  2769  001DC0  CFDD FFF7          	movff	postdec2,tblptrh
  2770  001DC4                     	if	0	;tblptru may be non-zero
  2771  001DC4                     	endif
  2772  001DC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2773  001DC4  0E00               	movlw	low (__mediumconst shr (0+16))
  2774  001DC6  6EF8               	movwf	tblptru,c
  2775  001DC8                     	endif
  2776  001DC8  0008               	tblrd		*
  2777  001DCA  50F5               	movf	tablat,w,c
  2778  001DCC  6FEB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2779  001DCE  6BEC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2780  001DD0  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2781  001DD2  27EB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2782  001DD4  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2783  001DD6  23EC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2784  001DD8  51EC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2785  001DDA  E106               	bnz	u9370
  2786  001DDC  0E1A               	movlw	26
  2787  001DDE  5DEB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2788  001DE0  B0D8               	btfsc	status,0,c
  2789  001DE2  D002               	goto	u9370
  2790  001DE4  0E01               	movlw	1
  2791  001DE6  D001               	goto	u9380
  2792  001DE8                     u9370:
  2793  001DE8  0E00               	movlw	0
  2794  001DEA                     u9380:
  2795  001DEA  0101               	movlb	1	; () banked
  2796  001DEC  6F8B               	movwf	_vfpfcnvrt$1379& (0+255),b
  2797  001DEE  6B8C               	clrf	(_vfpfcnvrt$1379+1)& (0+255),b
  2798                           
  2799                           ; BSR set to: 1
  2800  001DF0  518B               	movf	_vfpfcnvrt$1379& (0+255),w,b
  2801  001DF2  118C               	iorwf	(_vfpfcnvrt$1379+1)& (0+255),w,b
  2802                           
  2803                           ; BSR set to: 1
  2804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2805                           
  2806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2807                           
  2808                           ; BSR set to: 1
  2809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2810  001DF4  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2811  001DF8  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2812  001DFC  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2813  001E00  0E04               	movlw	4
  2814  001E02  26DE               	addwf	postinc2,f,c
  2815  001E04  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2816  001E08  0E00               	movlw	0
  2817  001E0A  22DD               	addwfc	postdec2,f,c
  2818  001E0C  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2819  001E10  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2820  001E14  CFDE F18D          	movff	postinc2,vfpfcnvrt@f
  2821  001E18  CFDE F18E          	movff	postinc2,vfpfcnvrt@f+1
  2822  001E1C  CFDE F18F          	movff	postinc2,vfpfcnvrt@f+2
  2823  001E20  CFDE F190          	movff	postinc2,vfpfcnvrt@f+3
  2824                           
  2825                           ; BSR set to: 1
  2826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2827                           
  2828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  2829  001E24  0E02               	movlw	2
  2830  001E26  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2831  001E2A  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2832  001E2E  26DE               	addwf	postinc2,f,c
  2833  001E30  0E00               	movlw	0
  2834  001E32  22DD               	addwfc	postdec2,f,c
  2835  001E34  D77D               	goto	l7201
  2836  001E36                     l7221:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  2840  001E36  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2841  001E3A  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2842  001E3E  CFDE FFF6          	movff	postinc2,tblptrl
  2843  001E42  CFDD FFF7          	movff	postdec2,tblptrh
  2844  001E46                     	if	0	;tblptru may be non-zero
  2845  001E46                     	endif
  2846  001E46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2847  001E46  0E00               	movlw	low (__mediumconst shr (0+16))
  2848  001E48  6EF8               	movwf	tblptru,c
  2849  001E4A                     	endif
  2850  001E4A  0008               	tblrd		*
  2851  001E4C  50F5               	movf	tablat,w,c
  2852  001E4E  0A75               	xorlw	117
  2853  001E50  A4D8               	btfss	status,2,c
  2854  001E52  D041               	goto	l7229
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  2858  001E54  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2859  001E58  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2860  001E5C  2ADE               	incf	postinc2,f,c
  2861  001E5E  0E00               	movlw	0
  2862  001E60  22DD               	addwfc	postdec2,f,c
  2863                           
  2864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2865  001E62  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2866  001E66  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2867  001E6A  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2868  001E6E  0E02               	movlw	2
  2869  001E70  26DE               	addwf	postinc2,f,c
  2870  001E72  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2871  001E76  0E00               	movlw	0
  2872  001E78  22DD               	addwfc	postdec2,f,c
  2873  001E7A  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2874  001E7E  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2875  001E82  CFDE F0EB          	movff	postinc2,??_vfpfcnvrt+2
  2876  001E86  CFDD F0EC          	movff	postdec2,??_vfpfcnvrt+3
  2877  001E8A  C0EB  F17D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2878  001E8E  C0EC  F17E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2879  001E92  0101               	movlb	1	; () banked
  2880  001E94  6B7F               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2881  001E96  6B80               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2882  001E98  6B81               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2883  001E9A  6B82               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2884  001E9C  6B83               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2885  001E9E  6B84               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2886                           
  2887                           ; BSR set to: 1
  2888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  2889  001EA0  C0E3  F07B         	movff	vfpfcnvrt@fp,utoa@fp
  2890  001EA4  C0E4  F07C         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2891  001EA8  C17D  F07D         	movff	vfpfcnvrt@llu,utoa@d
  2892  001EAC  C17E  F07E         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2893  001EB0  C17F  F07F         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2894  001EB4  C180  F080         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2895  001EB8  C181  F081         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2896  001EBC  C182  F082         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2897  001EC0  C183  F083         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2898  001EC4  C184  F084         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2899  001EC8  EC93  F016         	call	_utoa	;wreg free
  2900  001ECC  C07B  F0E3         	movff	?_utoa,?_vfpfcnvrt
  2901  001ED0  C07C  F0E4         	movff	?_utoa+1,?_vfpfcnvrt+1
  2902  001ED4  0012               	return	
  2903  001ED6                     l7229:
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2907  001ED6  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2908  001EDA  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2909  001EDE  CFDE FFF6          	movff	postinc2,tblptrl
  2910  001EE2  CFDD FFF7          	movff	postdec2,tblptrh
  2911  001EE6                     	if	0	;tblptru may be non-zero
  2912  001EE6                     	endif
  2913  001EE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2914  001EE6  0E00               	movlw	low (__mediumconst shr (0+16))
  2915  001EE8  6EF8               	movwf	tblptru,c
  2916  001EEA                     	endif
  2917  001EEA  0008               	tblrd		*
  2918  001EEC  50F5               	movf	tablat,w,c
  2919  001EEE  0A25               	xorlw	37
  2920  001EF0  A4D8               	btfss	status,2,c
  2921  001EF2  D017               	goto	l7239
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2925  001EF4  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2926  001EF8  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2927  001EFC  2ADE               	incf	postinc2,f,c
  2928  001EFE  0E00               	movlw	0
  2929  001F00  22DD               	addwfc	postdec2,f,c
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2933  001F02  0E00               	movlw	0
  2934  001F04  6F61               	movwf	(fputc@c+1)& (0+255),b
  2935  001F06  0E25               	movlw	37
  2936  001F08  6F60               	movwf	fputc@c& (0+255),b
  2937  001F0A  C0E3  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2938  001F0E  C0E4  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2939  001F12  EC26  F01D         	call	_fputc	;wreg free
  2940  001F16                     l7235:
  2941                           
  2942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2943  001F16  0E00               	movlw	0
  2944  001F18  0100               	movlb	0	; () banked
  2945  001F1A  6FE4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2946  001F1C  0E01               	movlw	1
  2947  001F1E  6FE3               	movwf	?_vfpfcnvrt& (0+255),b
  2948  001F20  0012               	return	
  2949  001F22                     l7239:
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2953  001F22  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2954  001F26  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2955  001F2A  2ADE               	incf	postinc2,f,c
  2956  001F2C  0E00               	movlw	0
  2957  001F2E  22DD               	addwfc	postdec2,f,c
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2961  001F30  0E00               	movlw	0
  2962  001F32  6FE4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2963  001F34  0E00               	movlw	0
  2964  001F36  6FE3               	movwf	?_vfpfcnvrt& (0+255),b
  2965  001F38  0012               	return	
  2966  001F3A                     l7245:
  2967                           
  2968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2969  001F3A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2970  001F3E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2971  001F42  CFDE FFF6          	movff	postinc2,tblptrl
  2972  001F46  CFDD FFF7          	movff	postdec2,tblptrh
  2973  001F4A                     	if	0	;tblptru may be non-zero
  2974  001F4A                     	endif
  2975  001F4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2976  001F4A  0E00               	movlw	low (__mediumconst shr (0+16))
  2977  001F4C  6EF8               	movwf	tblptru,c
  2978  001F4E                     	endif
  2979  001F4E  0008               	tblrd		*
  2980  001F50  50F5               	movf	tablat,w,c
  2981  001F52  0100               	movlb	0	; () banked
  2982  001F54  6F60               	movwf	fputc@c& (0+255),b
  2983  001F56  6B61               	clrf	(fputc@c+1)& (0+255),b
  2984  001F58  C0E3  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2985  001F5C  C0E4  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2986  001F60  EC26  F01D         	call	_fputc	;wreg free
  2987                           
  2988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2989  001F64  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2990  001F68  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2991  001F6C  2ADE               	incf	postinc2,f,c
  2992  001F6E  0E00               	movlw	0
  2993  001F70  22DD               	addwfc	postdec2,f,c
  2994  001F72  D7D1               	goto	l7235
  2995  001F74                     __end_of_vfpfcnvrt:
  2996                           	opt callstack 0
  2997                           
  2998 ;; *************** function _utoa *****************
  2999 ;; Defined at:
  3000 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  3003 ;;		 -> sprintf@f(6), 
  3004 ;;  d               8   29[BANK0 ] unsigned long long 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  n               8   49[BANK0 ] unsigned long long 
  3007 ;;  i               2   57[BANK0 ] int 
  3008 ;;  w               2   47[BANK0 ] int 
  3009 ;;  p               2   45[BANK0 ] int 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  2   27[BANK0 ] int 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3019 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3020 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3021 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3022 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3023 ;;Total ram usage:       32 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    6
  3026 ;; This function calls:
  3027 ;;		___lodiv
  3028 ;;		___lomod
  3029 ;;		_pad
  3030 ;; This function is called by:
  3031 ;;		_vfpfcnvrt
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text5
  3036  002D26                     __ptext5:
  3037                           	opt callstack 0
  3038  002D26                     _utoa:
  3039                           	opt callstack 20
  3040                           
  3041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  3042                           
  3043                           ;incstack = 0
  3044  002D26  AE39               	btfss	_prec+1,7,c
  3045                           
  3046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  3047  002D28  923A               	bcf	_flags,1,c
  3048                           
  3049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  3050  002D2A  BE39               	btfsc	_prec+1,7,c
  3051  002D2C  D005               	goto	u9010
  3052  002D2E  5039               	movf	_prec+1,w,c
  3053  002D30  E109               	bnz	l455
  3054  002D32  0438               	decf	_prec,w,c
  3055  002D34  B0D8               	btfsc	status,0,c
  3056  002D36  D006               	goto	l455
  3057  002D38                     u9010:
  3058  002D38  0E00               	movlw	0
  3059  002D3A  0100               	movlb	0	; () banked
  3060  002D3C  6F8E               	movwf	(utoa@p+1)& (0+255),b
  3061  002D3E  0E01               	movlw	1
  3062  002D40  6F8D               	movwf	utoa@p& (0+255),b
  3063  002D42  D004               	goto	l457
  3064  002D44                     l455:
  3065  002D44  C038  F08D         	movff	_prec,utoa@p
  3066  002D48  C039  F08E         	movff	_prec+1,utoa@p+1
  3067  002D4C                     l457:
  3068                           
  3069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  3070  002D4C  C036  F08F         	movff	_width,utoa@w
  3071  002D50  C037  F090         	movff	_width+1,utoa@w+1
  3072                           
  3073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  3074  002D54  C07D  F091         	movff	utoa@d,utoa@n
  3075  002D58  C07E  F092         	movff	utoa@d+1,utoa@n+1
  3076  002D5C  C07F  F093         	movff	utoa@d+2,utoa@n+2
  3077  002D60  C080  F094         	movff	utoa@d+3,utoa@n+3
  3078  002D64  C081  F095         	movff	utoa@d+4,utoa@n+4
  3079  002D68  C082  F096         	movff	utoa@d+5,utoa@n+5
  3080  002D6C  C083  F097         	movff	utoa@d+6,utoa@n+6
  3081  002D70  C084  F098         	movff	utoa@d+7,utoa@n+7
  3082                           
  3083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  3084  002D74  0E00               	movlw	0
  3085  002D76  0100               	movlb	0	; () banked
  3086  002D78  6F9A               	movwf	(utoa@i+1)& (0+255),b
  3087  002D7A  0E4F               	movlw	79
  3088  002D7C  6F99               	movwf	utoa@i& (0+255),b
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  3092  002D7E  0E00               	movlw	0
  3093  002D80  0101               	movlb	1	; () banked
  3094  002D82  6F72               	movwf	(_dbuf+79)& (0+255),b
  3095                           
  3096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3097  002D84  D077               	goto	l7021
  3098  002D86                     l7011:
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  3102  002D86  0799               	decf	utoa@i& (0+255),f,b
  3103  002D88  A0D8               	btfss	status,0,c
  3104  002D8A  079A               	decf	(utoa@i+1)& (0+255),f,b
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  3108  002D8C  0E23               	movlw	low _dbuf
  3109  002D8E  2599               	addwf	utoa@i& (0+255),w,b
  3110  002D90  6ED9               	movwf	fsr2l,c
  3111  002D92  0E01               	movlw	high _dbuf
  3112  002D94  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  3113  002D96  6EDA               	movwf	fsr2h,c
  3114  002D98  C091  F060         	movff	utoa@n,___lomod@dividend
  3115  002D9C  C092  F061         	movff	utoa@n+1,___lomod@dividend+1
  3116  002DA0  C093  F062         	movff	utoa@n+2,___lomod@dividend+2
  3117  002DA4  C094  F063         	movff	utoa@n+3,___lomod@dividend+3
  3118  002DA8  C095  F064         	movff	utoa@n+4,___lomod@dividend+4
  3119  002DAC  C096  F065         	movff	utoa@n+5,___lomod@dividend+5
  3120  002DB0  C097  F066         	movff	utoa@n+6,___lomod@dividend+6
  3121  002DB4  C098  F067         	movff	utoa@n+7,___lomod@dividend+7
  3122  002DB8  0E0A               	movlw	10
  3123  002DBA  6F68               	movwf	___lomod@divisor& (0+255),b
  3124  002DBC  0E00               	movlw	0
  3125  002DBE  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  3126  002DC0  0E00               	movlw	0
  3127  002DC2  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  3128  002DC4  0E00               	movlw	0
  3129  002DC6  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  3130  002DC8  0E00               	movlw	0
  3131  002DCA  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  3132  002DCC  0E00               	movlw	0
  3133  002DCE  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  3134  002DD0  0E00               	movlw	0
  3135  002DD2  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  3136  002DD4  0E00               	movlw	0
  3137  002DD6  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  3138  002DD8  EC76  F01C         	call	___lomod	;wreg free
  3139  002DDC  C060  F085         	movff	?___lomod,??_utoa
  3140  002DE0  C061  F086         	movff	?___lomod+1,??_utoa+1
  3141  002DE4  C062  F087         	movff	?___lomod+2,??_utoa+2
  3142  002DE8  C063  F088         	movff	?___lomod+3,??_utoa+3
  3143  002DEC  C064  F089         	movff	?___lomod+4,??_utoa+4
  3144  002DF0  C065  F08A         	movff	?___lomod+5,??_utoa+5
  3145  002DF4  C066  F08B         	movff	?___lomod+6,??_utoa+6
  3146  002DF8  C067  F08C         	movff	?___lomod+7,??_utoa+7
  3147  002DFC  0100               	movlb	0	; () banked
  3148  002DFE  5185               	movf	??_utoa& (0+255),w,b
  3149  002E00  0F30               	addlw	48
  3150  002E02  6EDF               	movwf	indf2,c
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  3154  002E04  078D               	decf	utoa@p& (0+255),f,b
  3155  002E06  A0D8               	btfss	status,0,c
  3156  002E08  078E               	decf	(utoa@p+1)& (0+255),f,b
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  3160  002E0A  078F               	decf	utoa@w& (0+255),f,b
  3161  002E0C  A0D8               	btfss	status,0,c
  3162  002E0E  0790               	decf	(utoa@w+1)& (0+255),f,b
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  3166  002E10  C091  F060         	movff	utoa@n,___lodiv@dividend
  3167  002E14  C092  F061         	movff	utoa@n+1,___lodiv@dividend+1
  3168  002E18  C093  F062         	movff	utoa@n+2,___lodiv@dividend+2
  3169  002E1C  C094  F063         	movff	utoa@n+3,___lodiv@dividend+3
  3170  002E20  C095  F064         	movff	utoa@n+4,___lodiv@dividend+4
  3171  002E24  C096  F065         	movff	utoa@n+5,___lodiv@dividend+5
  3172  002E28  C097  F066         	movff	utoa@n+6,___lodiv@dividend+6
  3173  002E2C  C098  F067         	movff	utoa@n+7,___lodiv@dividend+7
  3174  002E30  0E0A               	movlw	10
  3175  002E32  6F68               	movwf	___lodiv@divisor& (0+255),b
  3176  002E34  0E00               	movlw	0
  3177  002E36  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  3178  002E38  0E00               	movlw	0
  3179  002E3A  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  3180  002E3C  0E00               	movlw	0
  3181  002E3E  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  3182  002E40  0E00               	movlw	0
  3183  002E42  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  3184  002E44  0E00               	movlw	0
  3185  002E46  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  3186  002E48  0E00               	movlw	0
  3187  002E4A  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  3188  002E4C  0E00               	movlw	0
  3189  002E4E  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  3190  002E50  ECE8  F01A         	call	___lodiv	;wreg free
  3191  002E54  C060  F091         	movff	?___lodiv,utoa@n
  3192  002E58  C061  F092         	movff	?___lodiv+1,utoa@n+1
  3193  002E5C  C062  F093         	movff	?___lodiv+2,utoa@n+2
  3194  002E60  C063  F094         	movff	?___lodiv+3,utoa@n+3
  3195  002E64  C064  F095         	movff	?___lodiv+4,utoa@n+4
  3196  002E68  C065  F096         	movff	?___lodiv+5,utoa@n+5
  3197  002E6C  C066  F097         	movff	?___lodiv+6,utoa@n+6
  3198  002E70  C067  F098         	movff	?___lodiv+7,utoa@n+7
  3199  002E74                     l7021:
  3200                           
  3201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3202  002E74  0100               	movlb	0	; () banked
  3203  002E76  5199               	movf	utoa@i& (0+255),w,b
  3204  002E78  119A               	iorwf	(utoa@i+1)& (0+255),w,b
  3205  002E7A  B4D8               	btfsc	status,2,c
  3206  002E7C  D01A               	goto	u9060
  3207                           
  3208                           ; BSR set to: 0
  3209  002E7E  5191               	movf	utoa@n& (0+255),w,b
  3210  002E80  1192               	iorwf	(utoa@n+1)& (0+255),w,b
  3211  002E82  1193               	iorwf	(utoa@n+2)& (0+255),w,b
  3212  002E84  1194               	iorwf	(utoa@n+3)& (0+255),w,b
  3213  002E86  1195               	iorwf	(utoa@n+4)& (0+255),w,b
  3214  002E88  1196               	iorwf	(utoa@n+5)& (0+255),w,b
  3215  002E8A  1197               	iorwf	(utoa@n+6)& (0+255),w,b
  3216  002E8C  1198               	iorwf	(utoa@n+7)& (0+255),w,b
  3217  002E8E  A4D8               	btfss	status,2,c
  3218  002E90  D77A               	goto	l7011
  3219                           
  3220                           ; BSR set to: 0
  3221  002E92  BF8E               	btfsc	(utoa@p+1)& (0+255),7,b
  3222  002E94  D005               	goto	u9040
  3223  002E96  518E               	movf	(utoa@p+1)& (0+255),w,b
  3224  002E98  E102               	bnz	u9041
  3225  002E9A  058D               	decf	utoa@p& (0+255),w,b
  3226  002E9C  B0D8               	btfsc	status,0,c
  3227  002E9E                     u9041:
  3228  002E9E  D773               	goto	l7011
  3229  002EA0                     u9040:
  3230                           
  3231                           ; BSR set to: 0
  3232  002EA0  BF90               	btfsc	(utoa@w+1)& (0+255),7,b
  3233  002EA2  D007               	goto	u9060
  3234  002EA4  5190               	movf	(utoa@w+1)& (0+255),w,b
  3235  002EA6  E103               	bnz	u9050
  3236  002EA8  058F               	decf	utoa@w& (0+255),w,b
  3237  002EAA  A0D8               	btfss	status,0,c
  3238  002EAC  D002               	goto	u9060
  3239  002EAE                     u9050:
  3240                           
  3241                           ; BSR set to: 0
  3242  002EAE  B23A               	btfsc	_flags,1,c
  3243  002EB0  D76A               	goto	l7011
  3244  002EB2                     u9060:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  3248  002EB2  C07B  F070         	movff	utoa@fp,pad@fp
  3249  002EB6  C07C  F071         	movff	utoa@fp+1,pad@fp+1
  3250  002EBA  0E23               	movlw	low _dbuf
  3251  002EBC  2599               	addwf	utoa@i& (0+255),w,b
  3252  002EBE  6F72               	movwf	pad@buf& (0+255),b
  3253  002EC0  0E01               	movlw	high _dbuf
  3254  002EC2  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  3255  002EC4  6F73               	movwf	(pad@buf+1)& (0+255),b
  3256  002EC6  C08F  F074         	movff	utoa@w,pad@p
  3257  002ECA  C090  F075         	movff	utoa@w+1,pad@p+1
  3258  002ECE  EC77  F01D         	call	_pad	;wreg free
  3259  002ED2  C070  F07B         	movff	?_pad,?_utoa
  3260  002ED6  C071  F07C         	movff	?_pad+1,?_utoa+1
  3261  002EDA  0012               	return		;funcret
  3262  002EDC                     __end_of_utoa:
  3263                           	opt callstack 0
  3264                           
  3265 ;; *************** function ___lomod *****************
  3266 ;; Defined at:
  3267 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3270 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  counter         1   16[BANK0 ] unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  8    0[BANK0 ] unsigned long long 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3282 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3283 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3285 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3286 ;;Total ram usage:       17 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    2
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_utoa
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text6
  3297  0038EC                     __ptext6:
  3298                           	opt callstack 0
  3299  0038EC                     ___lomod:
  3300                           	opt callstack 23
  3301                           
  3302                           ;incstack = 0
  3303  0038EC  0100               	movlb	0	; () banked
  3304  0038EE  5168               	movf	___lomod@divisor& (0+255),w,b
  3305  0038F0  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  3306  0038F2  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  3307  0038F4  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  3308  0038F6  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  3309  0038F8  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  3310  0038FA  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  3311  0038FC  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  3312  0038FE  B4D8               	btfsc	status,2,c
  3313  003900  D03C               	goto	l971
  3314                           
  3315                           ; BSR set to: 0
  3316  003902  0E01               	movlw	1
  3317  003904  6F70               	movwf	___lomod@counter& (0+255),b
  3318  003906  D00A               	goto	l6665
  3319  003908                     l6663:
  3320                           
  3321                           ; BSR set to: 0
  3322  003908  90D8               	bcf	status,0,c
  3323  00390A  3768               	rlcf	___lomod@divisor& (0+255),f,b
  3324  00390C  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  3325  00390E  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  3326  003910  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  3327  003912  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  3328  003914  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  3329  003916  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  3330  003918  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  3331  00391A  2B70               	incf	___lomod@counter& (0+255),f,b
  3332  00391C                     l6665:
  3333                           
  3334                           ; BSR set to: 0
  3335  00391C  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  3336  00391E  D7F4               	goto	l6663
  3337  003920                     u8430:
  3338                           
  3339                           ; BSR set to: 0
  3340  003920  5168               	movf	___lomod@divisor& (0+255),w,b
  3341  003922  5D60               	subwf	___lomod@dividend& (0+255),w,b
  3342  003924  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3343  003926  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  3344  003928  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3345  00392A  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  3346  00392C  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3347  00392E  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  3348  003930  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3349  003932  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  3350  003934  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3351  003936  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  3352  003938  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3353  00393A  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  3354  00393C  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3355  00393E  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  3356  003940  A0D8               	btfss	status,0,c
  3357  003942  D010               	goto	l6671
  3358                           
  3359                           ; BSR set to: 0
  3360  003944  5168               	movf	___lomod@divisor& (0+255),w,b
  3361  003946  5F60               	subwf	___lomod@dividend& (0+255),f,b
  3362  003948  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3363  00394A  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  3364  00394C  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3365  00394E  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  3366  003950  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3367  003952  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  3368  003954  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3369  003956  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  3370  003958  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3371  00395A  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  3372  00395C  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3373  00395E  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  3374  003960  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3375  003962  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  3376  003964                     l6671:
  3377                           
  3378                           ; BSR set to: 0
  3379  003964  90D8               	bcf	status,0,c
  3380  003966  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  3381  003968  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  3382  00396A  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  3383  00396C  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  3384  00396E  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  3385  003970  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  3386  003972  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  3387  003974  3368               	rrcf	___lomod@divisor& (0+255),f,b
  3388                           
  3389                           ; BSR set to: 0
  3390  003976  2F70               	decfsz	___lomod@counter& (0+255),f,b
  3391  003978  D7D3               	goto	u8430
  3392  00397A                     l971:
  3393                           
  3394                           ; BSR set to: 0
  3395  00397A  C060  F060         	movff	___lomod@dividend,?___lomod
  3396  00397E  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  3397  003982  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  3398  003986  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  3399  00398A  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  3400  00398E  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  3401  003992  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  3402  003996  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  3403                           
  3404                           ; BSR set to: 0
  3405  00399A  0012               	return		;funcret
  3406  00399C                     __end_of___lomod:
  3407                           	opt callstack 0
  3408                           
  3409 ;; *************** function ___lodiv *****************
  3410 ;; Defined at:
  3411 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3414 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  quotient        8   16[BANK0 ] unsigned long long 
  3417 ;;  counter         1   24[BANK0 ] unsigned char 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  8    0[BANK0 ] unsigned long long 
  3420 ;; Registers used:
  3421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3427 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3428 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3430 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3431 ;;Total ram usage:       25 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    2
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_utoa
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text7
  3442  0035D0                     __ptext7:
  3443                           	opt callstack 0
  3444  0035D0                     ___lodiv:
  3445                           	opt callstack 23
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;incstack = 0
  3449  0035D0  EE20  F070         	lfsr	2,___lodiv@quotient
  3450  0035D4  0E07               	movlw	7
  3451  0035D6                     u8381:
  3452  0035D6  6ADE               	clrf	postinc2,c
  3453  0035D8  06E8               	decf	wreg,f,c
  3454  0035DA  E2FD               	bc	u8381
  3455  0035DC  0100               	movlb	0	; () banked
  3456  0035DE  5168               	movf	___lodiv@divisor& (0+255),w,b
  3457  0035E0  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  3458  0035E2  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  3459  0035E4  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  3460  0035E6  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  3461  0035E8  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  3462  0035EA  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  3463  0035EC  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  3464  0035EE  B4D8               	btfsc	status,2,c
  3465  0035F0  D046               	goto	l961
  3466                           
  3467                           ; BSR set to: 0
  3468  0035F2  0E01               	movlw	1
  3469  0035F4  6F78               	movwf	___lodiv@counter& (0+255),b
  3470  0035F6  D00A               	goto	l6645
  3471  0035F8                     l6643:
  3472                           
  3473                           ; BSR set to: 0
  3474  0035F8  90D8               	bcf	status,0,c
  3475  0035FA  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  3476  0035FC  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  3477  0035FE  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  3478  003600  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  3479  003602  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  3480  003604  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  3481  003606  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  3482  003608  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  3483  00360A  2B78               	incf	___lodiv@counter& (0+255),f,b
  3484  00360C                     l6645:
  3485                           
  3486                           ; BSR set to: 0
  3487  00360C  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  3488  00360E  D7F4               	goto	l6643
  3489  003610                     u8400:
  3490                           
  3491                           ; BSR set to: 0
  3492  003610  90D8               	bcf	status,0,c
  3493  003612  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  3494  003614  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  3495  003616  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  3496  003618  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  3497  00361A  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  3498  00361C  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  3499  00361E  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  3500  003620  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  3501                           
  3502                           ; BSR set to: 0
  3503  003622  5168               	movf	___lodiv@divisor& (0+255),w,b
  3504  003624  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  3505  003626  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3506  003628  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  3507  00362A  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3508  00362C  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  3509  00362E  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3510  003630  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  3511  003632  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3512  003634  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  3513  003636  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3514  003638  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  3515  00363A  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3516  00363C  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  3517  00363E  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3518  003640  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  3519  003642  A0D8               	btfss	status,0,c
  3520  003644  D011               	goto	l6655
  3521                           
  3522                           ; BSR set to: 0
  3523  003646  5168               	movf	___lodiv@divisor& (0+255),w,b
  3524  003648  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  3525  00364A  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3526  00364C  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  3527  00364E  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3528  003650  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  3529  003652  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3530  003654  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  3531  003656  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3532  003658  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  3533  00365A  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3534  00365C  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  3535  00365E  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3536  003660  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  3537  003662  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3538  003664  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  3539                           
  3540                           ; BSR set to: 0
  3541  003666  8170               	bsf	___lodiv@quotient& (0+255),0,b
  3542  003668                     l6655:
  3543                           
  3544                           ; BSR set to: 0
  3545  003668  90D8               	bcf	status,0,c
  3546  00366A  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  3547  00366C  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  3548  00366E  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  3549  003670  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  3550  003672  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  3551  003674  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  3552  003676  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  3553  003678  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  3554                           
  3555                           ; BSR set to: 0
  3556  00367A  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  3557  00367C  D7C9               	goto	u8400
  3558  00367E                     l961:
  3559                           
  3560                           ; BSR set to: 0
  3561  00367E  C070  F060         	movff	___lodiv@quotient,?___lodiv
  3562  003682  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  3563  003686  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  3564  00368A  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  3565  00368E  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  3566  003692  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  3567  003696  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  3568  00369A  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  3569                           
  3570                           ; BSR set to: 0
  3571  00369E  0012               	return		;funcret
  3572  0036A0                     __end_of___lodiv:
  3573                           	opt callstack 0
  3574                           
  3575 ;; *************** function _strncmp *****************
  3576 ;; Defined at:
  3577 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  3580 ;;		 -> vfpfcnvrt@ct(3), 
  3581 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  3582 ;;		 -> STR_17(3), 
  3583 ;;  n               2    4[BANK0 ] unsigned int 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  3586 ;;		 -> STR_17(3), 
  3587 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  3588 ;;		 -> vfpfcnvrt@ct(3), 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  2    0[BANK0 ] int 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3598 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3599 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3600 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3601 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3602 ;;Total ram usage:       11 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    2
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_vfpfcnvrt
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text8
  3613  00399C                     __ptext8:
  3614                           	opt callstack 0
  3615  00399C                     _strncmp:
  3616                           	opt callstack 24
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;incstack = 0
  3620  00399C  C060  F067         	movff	strncmp@_l,strncmp@l
  3621  0039A0  C061  F068         	movff	strncmp@_l+1,strncmp@l+1
  3622  0039A4  C062  F069         	movff	strncmp@_r,strncmp@r
  3623  0039A8  C063  F06A         	movff	strncmp@_r+1,strncmp@r+1
  3624  0039AC  0100               	movlb	0	; () banked
  3625  0039AE  0764               	decf	strncmp@n& (0+255),f,b
  3626  0039B0  A0D8               	btfss	status,0,c
  3627  0039B2  0765               	decf	(strncmp@n+1)& (0+255),f,b
  3628  0039B4  2964               	incf	strncmp@n& (0+255),w,b
  3629  0039B6  E10F               	bnz	l7085
  3630  0039B8  2965               	incf	(strncmp@n+1)& (0+255),w,b
  3631  0039BA  A4D8               	btfss	status,2,c
  3632  0039BC  D00C               	goto	l7085
  3633                           
  3634                           ; BSR set to: 0
  3635  0039BE  0E00               	movlw	0
  3636  0039C0  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3637  0039C2  0E00               	movlw	0
  3638  0039C4  6F60               	movwf	?_strncmp& (0+255),b
  3639  0039C6  0012               	return	
  3640  0039C8                     l7083:
  3641                           
  3642                           ; BSR set to: 0
  3643  0039C8  4B67               	infsnz	strncmp@l& (0+255),f,b
  3644  0039CA  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  3645  0039CC  4B69               	infsnz	strncmp@r& (0+255),f,b
  3646  0039CE  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  3647  0039D0  0764               	decf	strncmp@n& (0+255),f,b
  3648  0039D2  A0D8               	btfss	status,0,c
  3649  0039D4  0765               	decf	(strncmp@n+1)& (0+255),f,b
  3650  0039D6                     l7085:
  3651                           
  3652                           ; BSR set to: 0
  3653  0039D6  C067  FFD9         	movff	strncmp@l,fsr2l
  3654  0039DA  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3655  0039DE  50DF               	movf	indf2,w,c
  3656  0039E0  B4D8               	btfsc	status,2,c
  3657  0039E2  D020               	goto	u9180
  3658                           
  3659                           ; BSR set to: 0
  3660  0039E4  C069  FFF6         	movff	strncmp@r,tblptrl
  3661  0039E8  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3662  0039EC                     	if	0	;tblptru may be non-zero
  3663  0039EC                     	endif
  3664  0039EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3665  0039EC  0E00               	movlw	low (__mediumconst shr (0+16))
  3666  0039EE  6EF8               	movwf	tblptru,c
  3667  0039F0                     	endif
  3668  0039F0  0008               	tblrd		*
  3669  0039F2  50F5               	movf	tablat,w,c
  3670  0039F4  0900               	iorlw	0
  3671  0039F6  B4D8               	btfsc	status,2,c
  3672  0039F8  D015               	goto	u9180
  3673                           
  3674                           ; BSR set to: 0
  3675  0039FA  5164               	movf	strncmp@n& (0+255),w,b
  3676  0039FC  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  3677  0039FE  B4D8               	btfsc	status,2,c
  3678  003A00  D011               	goto	u9180
  3679                           
  3680                           ; BSR set to: 0
  3681  003A02  C067  FFD9         	movff	strncmp@l,fsr2l
  3682  003A06  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3683  003A0A  50DF               	movf	indf2,w,c
  3684  003A0C  6F66               	movwf	??_strncmp& (0+255),b
  3685  003A0E  C069  FFF6         	movff	strncmp@r,tblptrl
  3686  003A12  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3687  003A16                     	if	0	;tblptru may be non-zero
  3688  003A16                     	endif
  3689  003A16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3690  003A16  0E00               	movlw	low (__mediumconst shr (0+16))
  3691  003A18  6EF8               	movwf	tblptru,c
  3692  003A1A                     	endif
  3693  003A1A  0008               	tblrd		*
  3694  003A1C  50F5               	movf	tablat,w,c
  3695  003A1E  1966               	xorwf	??_strncmp& (0+255),w,b
  3696  003A20  B4D8               	btfsc	status,2,c
  3697  003A22  D7D2               	goto	l7083
  3698  003A24                     u9180:
  3699                           
  3700                           ; BSR set to: 0
  3701  003A24  C067  FFD9         	movff	strncmp@l,fsr2l
  3702  003A28  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3703  003A2C  50DF               	movf	indf2,w,c
  3704  003A2E  6F66               	movwf	??_strncmp& (0+255),b
  3705  003A30  C069  FFF6         	movff	strncmp@r,tblptrl
  3706  003A34  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3707  003A38                     	if	0	;tblptru may be non-zero
  3708  003A38                     	endif
  3709  003A38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3710  003A38  0E00               	movlw	low (__mediumconst shr (0+16))
  3711  003A3A  6EF8               	movwf	tblptru,c
  3712  003A3C                     	endif
  3713  003A3C  0008               	tblrd		*
  3714  003A3E  50F5               	movf	tablat,w,c
  3715  003A40  5D66               	subwf	??_strncmp& (0+255),w,b
  3716  003A42  6F60               	movwf	?_strncmp& (0+255),b
  3717  003A44  6B61               	clrf	(?_strncmp+1)& (0+255),b
  3718  003A46  A0D8               	btfss	status,0,c
  3719  003A48  0761               	decf	(?_strncmp+1)& (0+255),f,b
  3720                           
  3721                           ; BSR set to: 0
  3722  003A4A  0012               	return		;funcret
  3723  003A4C                     __end_of_strncmp:
  3724                           	opt callstack 0
  3725                           
  3726 ;; *************** function _efgtoa *****************
  3727 ;; Defined at:
  3728 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  3731 ;;		 -> sprintf@f(6), 
  3732 ;;  f               4   65[BANK0 ] PTR struct _IO_FILE
  3733 ;;  c               1   69[BANK0 ] unsigned char 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  u               4  127[BANK0 ] unsigned char 
  3736 ;;  g               4  119[BANK0 ] unsigned char 
  3737 ;;  l               4  113[BANK0 ] unsigned char 
  3738 ;;  h               4  109[BANK0 ] unsigned char 
  3739 ;;  ou              4   75[BANK0 ] unsigned char 
  3740 ;;  n               2  125[BANK0 ] int 
  3741 ;;  e               2  123[BANK0 ] int 
  3742 ;;  i               2  117[BANK0 ] int 
  3743 ;;  w               2  106[BANK0 ] int 
  3744 ;;  p               2  103[BANK0 ] int 
  3745 ;;  sign            2  101[BANK0 ] int 
  3746 ;;  d               2   99[BANK0 ] int 
  3747 ;;  ne              2   97[BANK0 ] int 
  3748 ;;  m               2   95[BANK0 ] int 
  3749 ;;  pp              2   93[BANK0 ] int 
  3750 ;;  t               2   91[BANK0 ] int 
  3751 ;;  mode            1  108[BANK0 ] unsigned char 
  3752 ;;  nmode           1  105[BANK0 ] unsigned char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2   63[BANK0 ] int 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3762 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3763 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3764 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3765 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;Total ram usage:       68 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    6
  3769 ;; This function calls:
  3770 ;;		___awdiv
  3771 ;;		___awmod
  3772 ;;		___fladd
  3773 ;;		___fldiv
  3774 ;;		___fleq
  3775 ;;		___flge
  3776 ;;		___flmul
  3777 ;;		___flneg
  3778 ;;		___flsub
  3779 ;;		___fltol
  3780 ;;		___fpclassifyf
  3781 ;;		_floorf
  3782 ;;		_isupper
  3783 ;;		_pad
  3784 ;;		_strcpy
  3785 ;;		_tolower
  3786 ;; This function is called by:
  3787 ;;		_vfpfcnvrt
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text9
  3792  000F88                     __ptext9:
  3793                           	opt callstack 0
  3794  000F88                     _efgtoa:
  3795                           	opt callstack 20
  3796                           
  3797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;incstack = 0
  3801  000F88  0E00               	movlw	0
  3802  000F8A  0100               	movlb	0	; () banked
  3803  000F8C  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  3804  000F8E  0E00               	movlw	0
  3805  000F90  6FC5               	movwf	efgtoa@sign& (0+255),b
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3809  000F92  C0A1  F0D7         	movff	efgtoa@f,efgtoa@g
  3810  000F96  C0A2  F0D8         	movff	efgtoa@f+1,efgtoa@g+1
  3811  000F9A  C0A3  F0D9         	movff	efgtoa@f+2,efgtoa@g+2
  3812  000F9E  C0A4  F0DA         	movff	efgtoa@f+3,efgtoa@g+3
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3816  000FA2  AFDA               	btfss	(efgtoa@g+3)& (0+255),7,b
  3817  000FA4  D016               	goto	l6711
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3821  000FA6  0E00               	movlw	0
  3822  000FA8  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  3823  000FAA  0E01               	movlw	1
  3824  000FAC  6FC5               	movwf	efgtoa@sign& (0+255),b
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3828  000FAE  C0D7  F060         	movff	efgtoa@g,___flneg@f1
  3829  000FB2  C0D8  F061         	movff	efgtoa@g+1,___flneg@f1+1
  3830  000FB6  C0D9  F062         	movff	efgtoa@g+2,___flneg@f1+2
  3831  000FBA  C0DA  F063         	movff	efgtoa@g+3,___flneg@f1+3
  3832  000FBE  ECA9  F021         	call	___flneg	;wreg free
  3833  000FC2  C060  F0D7         	movff	?___flneg,efgtoa@g
  3834  000FC6  C061  F0D8         	movff	?___flneg+1,efgtoa@g+1
  3835  000FCA  C062  F0D9         	movff	?___flneg+2,efgtoa@g+2
  3836  000FCE  C063  F0DA         	movff	?___flneg+3,efgtoa@g+3
  3837  000FD2                     l6711:
  3838                           
  3839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3840  000FD2  0E00               	movlw	0
  3841  000FD4  0100               	movlb	0	; () banked
  3842  000FD6  6FDE               	movwf	(efgtoa@n+1)& (0+255),b
  3843  000FD8  0E00               	movlw	0
  3844  000FDA  6FDD               	movwf	efgtoa@n& (0+255),b
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3848  000FDC  C036  F0CA         	movff	_width,efgtoa@w
  3849  000FE0  C037  F0CB         	movff	_width+1,efgtoa@w+1
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3853  000FE4  51C5               	movf	efgtoa@sign& (0+255),w,b
  3854  000FE6  11C6               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3855  000FE8  A4D8               	btfss	status,2,c
  3856  000FEA  D002               	goto	u8500
  3857                           
  3858                           ; BSR set to: 0
  3859  000FEC  A43A               	btfss	_flags,2,c
  3860  000FEE  D013               	goto	l6731
  3861  000FF0                     u8500:
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3865  000FF0  51C5               	movf	efgtoa@sign& (0+255),w,b
  3866  000FF2  11C6               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3867  000FF4  A4D8               	btfss	status,2,c
  3868  000FF6  D004               	goto	l6723
  3869                           
  3870                           ; BSR set to: 0
  3871  000FF8  0E00               	movlw	0
  3872  000FFA  6FB0               	movwf	(_efgtoa$1341+1)& (0+255),b
  3873  000FFC  0E2B               	movlw	43
  3874  000FFE  D003               	goto	L2
  3875  001000                     l6723:
  3876                           
  3877                           ; BSR set to: 0
  3878  001000  0E00               	movlw	0
  3879  001002  6FB0               	movwf	(_efgtoa$1341+1)& (0+255),b
  3880  001004  0E2D               	movlw	45
  3881  001006                     L2:
  3882  001006  6FAF               	movwf	_efgtoa$1341& (0+255),b
  3883                           
  3884                           ; BSR set to: 0
  3885  001008  C0AF  F123         	movff	_efgtoa$1341,_dbuf
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3889  00100C  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  3890  00100E  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3894  001010  07CA               	decf	efgtoa@w& (0+255),f,b
  3895  001012  A0D8               	btfss	status,0,c
  3896  001014  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  3897  001016                     l6731:
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3901  001016  C0D7  F060         	movff	efgtoa@g,___fpclassifyf@x
  3902  00101A  C0D8  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3903  00101E  C0D9  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3904  001022  C0DA  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3905  001026  EC50  F01B         	call	___fpclassifyf	;wreg free
  3906  00102A  0100               	movlb	0	; () banked
  3907  00102C  0560               	decf	?___fpclassifyf& (0+255),w,b
  3908  00102E  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3909  001030  A4D8               	btfss	status,2,c
  3910  001032  D04C               	goto	l6749
  3911                           
  3912                           ; BSR set to: 0
  3913  001034  0EBF               	movlw	191
  3914  001036  6FA6               	movwf	??_efgtoa& (0+255),b
  3915  001038  0EFF               	movlw	255
  3916  00103A  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  3917  00103C  51A5               	movf	efgtoa@c& (0+255),w,b
  3918  00103E  6FA8               	movwf	(??_efgtoa+2)& (0+255),b
  3919  001040  6BA9               	clrf	(??_efgtoa+3)& (0+255),b
  3920  001042  51A6               	movf	??_efgtoa& (0+255),w,b
  3921  001044  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  3922  001046  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  3923  001048  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3924  00104A  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  3925  00104C  E106               	bnz	u8530
  3926  00104E  0E1A               	movlw	26
  3927  001050  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  3928  001052  B0D8               	btfsc	status,0,c
  3929  001054  D002               	goto	u8530
  3930  001056  0E01               	movlw	1
  3931  001058  D001               	goto	u8540
  3932  00105A                     u8530:
  3933  00105A  0E00               	movlw	0
  3934  00105C                     u8540:
  3935  00105C  6FB1               	movwf	_efgtoa$1342& (0+255),b
  3936  00105E  6BB2               	clrf	(_efgtoa$1342+1)& (0+255),b
  3937                           
  3938                           ; BSR set to: 0
  3939  001060  51B1               	movf	_efgtoa$1342& (0+255),w,b
  3940  001062  11B2               	iorwf	(_efgtoa$1342+1)& (0+255),w,b
  3941  001064  B4D8               	btfsc	status,2,c
  3942  001066  D00D               	goto	l6741
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3946  001068  0E23               	movlw	low _dbuf
  3947  00106A  25DD               	addwf	efgtoa@n& (0+255),w,b
  3948  00106C  6F60               	movwf	strcpy@dest& (0+255),b
  3949  00106E  0E01               	movlw	high _dbuf
  3950  001070  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3951  001072  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3952  001074  0E73               	movlw	low STR_7
  3953  001076  6F62               	movwf	strcpy@src& (0+255),b
  3954  001078  0E0F               	movlw	high STR_7
  3955  00107A  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3956  00107C  EC55  F020         	call	_strcpy	;wreg free
  3957                           
  3958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3959  001080  D00C               	goto	l6743
  3960  001082                     l6741:
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3964  001082  0E23               	movlw	low _dbuf
  3965  001084  25DD               	addwf	efgtoa@n& (0+255),w,b
  3966  001086  6F60               	movwf	strcpy@dest& (0+255),b
  3967  001088  0E01               	movlw	high _dbuf
  3968  00108A  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3969  00108C  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3970  00108E  0E7B               	movlw	low STR_8
  3971  001090  6F62               	movwf	strcpy@src& (0+255),b
  3972  001092  0E0F               	movlw	high STR_8
  3973  001094  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3974  001096  EC55  F020         	call	_strcpy	;wreg free
  3975  00109A                     l6743:
  3976                           
  3977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3978  00109A  0100               	movlb	0	; () banked
  3979  00109C  0EFD               	movlw	253
  3980  00109E  27CA               	addwf	efgtoa@w& (0+255),f,b
  3981  0010A0  0EFF               	movlw	255
  3982  0010A2  23CB               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3983  0010A4                     l6745:
  3984                           
  3985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3986  0010A4  C09F  F070         	movff	efgtoa@fp,pad@fp
  3987  0010A8  C0A0  F071         	movff	efgtoa@fp+1,pad@fp+1
  3988  0010AC  0E23               	movlw	low _dbuf
  3989  0010AE  0100               	movlb	0	; () banked
  3990  0010B0  6F72               	movwf	pad@buf& (0+255),b
  3991  0010B2  0E01               	movlw	high _dbuf
  3992  0010B4  6F73               	movwf	(pad@buf+1)& (0+255),b
  3993  0010B6  C0CA  F074         	movff	efgtoa@w,pad@p
  3994  0010BA  C0CB  F075         	movff	efgtoa@w+1,pad@p+1
  3995  0010BE  EC77  F01D         	call	_pad	;wreg free
  3996  0010C2  C070  F09F         	movff	?_pad,?_efgtoa
  3997  0010C6  C071  F0A0         	movff	?_pad+1,?_efgtoa+1
  3998  0010CA  0012               	return	
  3999  0010CC                     l6749:
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4003  0010CC  C0D7  F060         	movff	efgtoa@g,___fpclassifyf@x
  4004  0010D0  C0D8  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4005  0010D4  C0D9  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4006  0010D8  C0DA  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4007  0010DC  EC50  F01B         	call	___fpclassifyf	;wreg free
  4008  0010E0  0100               	movlb	0	; () banked
  4009  0010E2  5160               	movf	?___fpclassifyf& (0+255),w,b
  4010  0010E4  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  4011  0010E6  A4D8               	btfss	status,2,c
  4012  0010E8  D034               	goto	l6767
  4013                           
  4014                           ; BSR set to: 0
  4015  0010EA  0EBF               	movlw	191
  4016  0010EC  6FA6               	movwf	??_efgtoa& (0+255),b
  4017  0010EE  0EFF               	movlw	255
  4018  0010F0  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  4019  0010F2  51A5               	movf	efgtoa@c& (0+255),w,b
  4020  0010F4  6FA8               	movwf	(??_efgtoa+2)& (0+255),b
  4021  0010F6  6BA9               	clrf	(??_efgtoa+3)& (0+255),b
  4022  0010F8  51A6               	movf	??_efgtoa& (0+255),w,b
  4023  0010FA  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  4024  0010FC  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  4025  0010FE  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4026  001100  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  4027  001102  E106               	bnz	u8570
  4028  001104  0E1A               	movlw	26
  4029  001106  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  4030  001108  B0D8               	btfsc	status,0,c
  4031  00110A  D002               	goto	u8570
  4032  00110C  0E01               	movlw	1
  4033  00110E  D001               	goto	u8580
  4034  001110                     u8570:
  4035  001110  0E00               	movlw	0
  4036  001112                     u8580:
  4037  001112  6FB3               	movwf	_efgtoa$1346& (0+255),b
  4038  001114  6BB4               	clrf	(_efgtoa$1346+1)& (0+255),b
  4039                           
  4040                           ; BSR set to: 0
  4041  001116  51B3               	movf	_efgtoa$1346& (0+255),w,b
  4042  001118  11B4               	iorwf	(_efgtoa$1346+1)& (0+255),w,b
  4043  00111A  B4D8               	btfsc	status,2,c
  4044  00111C  D00D               	goto	l6759
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4048  00111E  0E23               	movlw	low _dbuf
  4049  001120  25DD               	addwf	efgtoa@n& (0+255),w,b
  4050  001122  6F60               	movwf	strcpy@dest& (0+255),b
  4051  001124  0E01               	movlw	high _dbuf
  4052  001126  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4053  001128  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4054  00112A  0E77               	movlw	low STR_11
  4055  00112C  6F62               	movwf	strcpy@src& (0+255),b
  4056  00112E  0E0F               	movlw	high STR_11
  4057  001130  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4058  001132  EC55  F020         	call	_strcpy	;wreg free
  4059                           
  4060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4061  001136  D7B1               	goto	l6743
  4062  001138                     l6759:
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4066  001138  0E23               	movlw	low _dbuf
  4067  00113A  25DD               	addwf	efgtoa@n& (0+255),w,b
  4068  00113C  6F60               	movwf	strcpy@dest& (0+255),b
  4069  00113E  0E01               	movlw	high _dbuf
  4070  001140  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4071  001142  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4072  001144  0E7F               	movlw	low STR_12
  4073  001146  6F62               	movwf	strcpy@src& (0+255),b
  4074  001148  0E0F               	movlw	high STR_12
  4075  00114A  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4076  00114C  EC55  F020         	call	_strcpy	;wreg free
  4077  001150  D7A4               	goto	l6743
  4078  001152                     l6767:
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4082  001152  0E00               	movlw	0
  4083  001154  6FDF               	movwf	efgtoa@u& (0+255),b
  4084  001156  0E00               	movlw	0
  4085  001158  6FE0               	movwf	(efgtoa@u+1)& (0+255),b
  4086  00115A  0E80               	movlw	128
  4087  00115C  6FE1               	movwf	(efgtoa@u+2)& (0+255),b
  4088  00115E  0E3F               	movlw	63
  4089  001160  6FE2               	movwf	(efgtoa@u+3)& (0+255),b
  4090                           
  4091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4092  001162  0E00               	movlw	0
  4093  001164  6FDC               	movwf	(efgtoa@e+1)& (0+255),b
  4094  001166  0E00               	movlw	0
  4095  001168  6FDB               	movwf	efgtoa@e& (0+255),b
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4099  00116A  C0D7  F060         	movff	efgtoa@g,___fleq@ff1
  4100  00116E  C0D8  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  4101  001172  C0D9  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  4102  001176  C0DA  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  4103  00117A  0E00               	movlw	0
  4104  00117C  6F64               	movwf	___fleq@ff2& (0+255),b
  4105  00117E  0E00               	movlw	0
  4106  001180  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4107  001182  0E00               	movlw	0
  4108  001184  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4109  001186  0E00               	movlw	0
  4110  001188  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4111  00118A  ECC5  F01D         	call	___fleq	;wreg free
  4112  00118E  0100               	movlb	0	; () banked
  4113  001190  A0D8               	btfss	status,0,c
  4114  001192  D01E               	goto	l6777
  4115  001194  D078               	goto	u8620
  4116  001196                     l6773:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4120  001196  C0DF  F06E         	movff	efgtoa@u,___flmul@b
  4121  00119A  C0E0  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4122  00119E  C0E1  F070         	movff	efgtoa@u+2,___flmul@b+2
  4123  0011A2  C0E2  F071         	movff	efgtoa@u+3,___flmul@b+3
  4124  0011A6  0E00               	movlw	0
  4125  0011A8  6F72               	movwf	___flmul@a& (0+255),b
  4126  0011AA  0E00               	movlw	0
  4127  0011AC  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4128  0011AE  0E20               	movlw	32
  4129  0011B0  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4130  0011B2  0E41               	movlw	65
  4131  0011B4  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4132  0011B6  ECBA  F00F         	call	___flmul	;wreg free
  4133  0011BA  C06E  F0DF         	movff	?___flmul,efgtoa@u
  4134  0011BE  C06F  F0E0         	movff	?___flmul+1,efgtoa@u+1
  4135  0011C2  C070  F0E1         	movff	?___flmul+2,efgtoa@u+2
  4136  0011C6  C071  F0E2         	movff	?___flmul+3,efgtoa@u+3
  4137                           
  4138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4139  0011CA  0100               	movlb	0	; () banked
  4140  0011CC  4BDB               	infsnz	efgtoa@e& (0+255),f,b
  4141  0011CE  2BDC               	incf	(efgtoa@e+1)& (0+255),f,b
  4142  0011D0                     l6777:
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4146  0011D0  C0D7  F087         	movff	efgtoa@g,___flge@ff1
  4147  0011D4  C0D8  F088         	movff	efgtoa@g+1,___flge@ff1+1
  4148  0011D8  C0D9  F089         	movff	efgtoa@g+2,___flge@ff1+2
  4149  0011DC  C0DA  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  4150  0011E0  0E00               	movlw	0
  4151  0011E2  6F72               	movwf	___flmul@a& (0+255),b
  4152  0011E4  0E00               	movlw	0
  4153  0011E6  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4154  0011E8  0E20               	movlw	32
  4155  0011EA  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4156  0011EC  0E41               	movlw	65
  4157  0011EE  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4158  0011F0  C0DF  F06E         	movff	efgtoa@u,___flmul@b
  4159  0011F4  C0E0  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4160  0011F8  C0E1  F070         	movff	efgtoa@u+2,___flmul@b+2
  4161  0011FC  C0E2  F071         	movff	efgtoa@u+3,___flmul@b+3
  4162  001200  ECBA  F00F         	call	___flmul	;wreg free
  4163  001204  C06E  F08B         	movff	?___flmul,___flge@ff2
  4164  001208  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  4165  00120C  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  4166  001210  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  4167  001214  EC7F  F01A         	call	___flge	;wreg free
  4168  001218  0100               	movlb	0	; () banked
  4169  00121A  A0D8               	btfss	status,0,c
  4170  00121C  D01F               	goto	l6783
  4171  00121E  D7BB               	goto	l6773
  4172  001220                     l6779:
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4176  001220  C0DF  F060         	movff	efgtoa@u,___fldiv@b
  4177  001224  C0E0  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4178  001228  C0E1  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4179  00122C  C0E2  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4180  001230  0E00               	movlw	0
  4181  001232  6F64               	movwf	___fldiv@a& (0+255),b
  4182  001234  0E00               	movlw	0
  4183  001236  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4184  001238  0E20               	movlw	32
  4185  00123A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4186  00123C  0E41               	movlw	65
  4187  00123E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4188  001240  EC71  F014         	call	___fldiv	;wreg free
  4189  001244  C060  F0DF         	movff	?___fldiv,efgtoa@u
  4190  001248  C061  F0E0         	movff	?___fldiv+1,efgtoa@u+1
  4191  00124C  C062  F0E1         	movff	?___fldiv+2,efgtoa@u+2
  4192  001250  C063  F0E2         	movff	?___fldiv+3,efgtoa@u+3
  4193                           
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4195  001254  0100               	movlb	0	; () banked
  4196  001256  07DB               	decf	efgtoa@e& (0+255),f,b
  4197  001258  A0D8               	btfss	status,0,c
  4198  00125A  07DC               	decf	(efgtoa@e+1)& (0+255),f,b
  4199  00125C                     l6783:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4203  00125C  C0D7  F087         	movff	efgtoa@g,___flge@ff1
  4204  001260  C0D8  F088         	movff	efgtoa@g+1,___flge@ff1+1
  4205  001264  C0D9  F089         	movff	efgtoa@g+2,___flge@ff1+2
  4206  001268  C0DA  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  4207  00126C  C0DF  F08B         	movff	efgtoa@u,___flge@ff2
  4208  001270  C0E0  F08C         	movff	efgtoa@u+1,___flge@ff2+1
  4209  001274  C0E1  F08D         	movff	efgtoa@u+2,___flge@ff2+2
  4210  001278  C0E2  F08E         	movff	efgtoa@u+3,___flge@ff2+3
  4211  00127C  EC7F  F01A         	call	___flge	;wreg free
  4212  001280  0100               	movlb	0	; () banked
  4213  001282  A0D8               	btfss	status,0,c
  4214  001284  D7CD               	goto	l6779
  4215  001286                     u8620:
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4219  001286  C0A5  F066         	movff	efgtoa@c,tolower@c
  4220  00128A  6B67               	clrf	(tolower@c+1)& (0+255),b
  4221  00128C  ECD1  F020         	call	_tolower	;wreg free
  4222  001290  0100               	movlb	0	; () banked
  4223  001292  5166               	movf	?_tolower& (0+255),w,b
  4224  001294  6FCC               	movwf	efgtoa@mode& (0+255),b
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4228  001296  C0CC  F0C9         	movff	efgtoa@mode,efgtoa@nmode
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4232  00129A  0E67               	movlw	103
  4233  00129C  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4234  00129E  A4D8               	btfss	status,2,c
  4235  0012A0  D019               	goto	l6799
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4239  0012A2  5038               	movf	_prec,w,c
  4240  0012A4  1039               	iorwf	_prec+1,w,c
  4241  0012A6  A4D8               	btfss	status,2,c
  4242  0012A8  D004               	goto	l6795
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4246  0012AA  0E00               	movlw	0
  4247  0012AC  6E39               	movwf	_prec+1,c
  4248  0012AE  0E01               	movlw	1
  4249  0012B0  6E38               	movwf	_prec,c
  4250  0012B2                     l6795:
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4254  0012B2  BE39               	btfsc	_prec+1,7,c
  4255  0012B4  D005               	goto	u8650
  4256  0012B6  5039               	movf	_prec+1,w,c
  4257  0012B8  E108               	bnz	l395
  4258  0012BA  0438               	decf	_prec,w,c
  4259  0012BC  B0D8               	btfsc	status,0,c
  4260  0012BE  D005               	goto	l395
  4261  0012C0                     u8650:
  4262                           
  4263                           ; BSR set to: 0
  4264  0012C0  0E00               	movlw	0
  4265  0012C2  6FC8               	movwf	(efgtoa@p+1)& (0+255),b
  4266  0012C4  0E06               	movlw	6
  4267  0012C6  6FC7               	movwf	efgtoa@p& (0+255),b
  4268  0012C8  D008               	goto	l6805
  4269  0012CA                     l395:
  4270                           
  4271                           ; BSR set to: 0
  4272  0012CA  C038  F0C7         	movff	_prec,efgtoa@p
  4273  0012CE  C039  F0C8         	movff	_prec+1,efgtoa@p+1
  4274  0012D2  D003               	goto	l6805
  4275  0012D4                     l6799:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4279  0012D4  AE39               	btfss	_prec+1,7,c
  4280  0012D6  D7F9               	goto	l395
  4281  0012D8  D7F3               	goto	u8650
  4282  0012DA                     l6805:
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4286  0012DA  0E67               	movlw	103
  4287  0012DC  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4288  0012DE  A4D8               	btfss	status,2,c
  4289  0012E0  D022               	goto	l6815
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4293  0012E2  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4294  0012E4  D006               	goto	u8680
  4295  0012E6  0EFC               	movlw	252
  4296  0012E8  5DDB               	subwf	efgtoa@e& (0+255),w,b
  4297  0012EA  0EFF               	movlw	255
  4298  0012EC  59DC               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4299  0012EE  A0D8               	btfss	status,0,c
  4300  0012F0  D018               	goto	l6813
  4301  0012F2                     u8680:
  4302                           
  4303                           ; BSR set to: 0
  4304  0012F2  0EFF               	movlw	255
  4305  0012F4  6FA6               	movwf	??_efgtoa& (0+255),b
  4306  0012F6  0EFF               	movlw	255
  4307  0012F8  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  4308  0012FA  C0C7  F0A8         	movff	efgtoa@p,??_efgtoa+2
  4309  0012FE  C0C8  F0A9         	movff	efgtoa@p+1,??_efgtoa+3
  4310  001302  51A6               	movf	??_efgtoa& (0+255),w,b
  4311  001304  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  4312  001306  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  4313  001308  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4314  00130A  51DB               	movf	efgtoa@e& (0+255),w,b
  4315  00130C  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  4316  00130E  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  4317  001310  0A80               	xorlw	128
  4318  001312  6FAA               	movwf	(??_efgtoa+4)& (0+255),b
  4319  001314  51DC               	movf	(efgtoa@e+1)& (0+255),w,b
  4320  001316  0A80               	xorlw	128
  4321  001318  59AA               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4322  00131A  A0D8               	btfss	status,0,c
  4323  00131C  D002               	goto	l6813
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4327  00131E  0E66               	movlw	102
  4328  001320  D001               	goto	L3
  4329  001322                     l6813:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4333  001322  0E65               	movlw	101
  4334  001324                     L3:
  4335  001324  6FC9               	movwf	efgtoa@nmode& (0+255),b
  4336  001326                     l6815:
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4340  001326  C0C7  F0BF         	movff	efgtoa@p,efgtoa@m
  4341  00132A  C0C8  F0C0         	movff	efgtoa@p+1,efgtoa@m+1
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4345  00132E  0E67               	movlw	103
  4346  001330  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4347  001332  A4D8               	btfss	status,2,c
  4348  001334  D005               	goto	u8720
  4349                           
  4350                           ; BSR set to: 0
  4351  001336  0E66               	movlw	102
  4352  001338  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4353  00133A  B4D8               	btfsc	status,2,c
  4354                           
  4355                           ; BSR set to: 0
  4356  00133C  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4357  00133E  D002               	goto	l6825
  4358  001340                     u8720:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4362  001340  4BBF               	infsnz	efgtoa@m& (0+255),f,b
  4363  001342  2BC0               	incf	(efgtoa@m+1)& (0+255),f,b
  4364  001344                     l6825:
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4368  001344  0E66               	movlw	102
  4369  001346  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4370  001348  A4D8               	btfss	status,2,c
  4371  00134A  D016               	goto	l6835
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4375  00134C  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4376  00134E  D00C               	goto	l6831
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4380  001350  0E00               	movlw	0
  4381  001352  6FDF               	movwf	efgtoa@u& (0+255),b
  4382  001354  0E00               	movlw	0
  4383  001356  6FE0               	movwf	(efgtoa@u+1)& (0+255),b
  4384  001358  0E80               	movlw	128
  4385  00135A  6FE1               	movwf	(efgtoa@u+2)& (0+255),b
  4386  00135C  0E3F               	movlw	63
  4387  00135E  6FE2               	movwf	(efgtoa@u+3)& (0+255),b
  4388                           
  4389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4390  001360  0E00               	movlw	0
  4391  001362  6FDC               	movwf	(efgtoa@e+1)& (0+255),b
  4392  001364  0E00               	movlw	0
  4393  001366  6FDB               	movwf	efgtoa@e& (0+255),b
  4394  001368                     l6831:
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4398  001368  0E67               	movlw	103
  4399  00136A  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4400  00136C  B4D8               	btfsc	status,2,c
  4401  00136E  D004               	goto	l6835
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4405  001370  51DB               	movf	efgtoa@e& (0+255),w,b
  4406  001372  27BF               	addwf	efgtoa@m& (0+255),f,b
  4407  001374  51DC               	movf	(efgtoa@e+1)& (0+255),w,b
  4408  001376  23C0               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4409  001378                     l6835:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4413  001378  0E00               	movlw	0
  4414  00137A  6FD6               	movwf	(efgtoa@i+1)& (0+255),b
  4415  00137C  0E00               	movlw	0
  4416  00137E  6FD5               	movwf	efgtoa@i& (0+255),b
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4420  001380  C0D7  F0CD         	movff	efgtoa@g,efgtoa@h
  4421  001384  C0D8  F0CE         	movff	efgtoa@g+1,efgtoa@h+1
  4422  001388  C0D9  F0CF         	movff	efgtoa@g+2,efgtoa@h+2
  4423  00138C  C0DA  F0D0         	movff	efgtoa@g+3,efgtoa@h+3
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4427  001390  C0DF  F0AB         	movff	efgtoa@u,efgtoa@ou
  4428  001394  C0E0  F0AC         	movff	efgtoa@u+1,efgtoa@ou+1
  4429  001398  C0E1  F0AD         	movff	efgtoa@u+2,efgtoa@ou+2
  4430  00139C  C0E2  F0AE         	movff	efgtoa@u+3,efgtoa@ou+3
  4431                           
  4432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4433  0013A0  D07C               	goto	l6849
  4434  0013A2                     l6841:
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4438  0013A2  C0CD  F060         	movff	efgtoa@h,___fldiv@b
  4439  0013A6  C0CE  F061         	movff	efgtoa@h+1,___fldiv@b+1
  4440  0013AA  C0CF  F062         	movff	efgtoa@h+2,___fldiv@b+2
  4441  0013AE  C0D0  F063         	movff	efgtoa@h+3,___fldiv@b+3
  4442  0013B2  C0DF  F064         	movff	efgtoa@u,___fldiv@a
  4443  0013B6  C0E0  F065         	movff	efgtoa@u+1,___fldiv@a+1
  4444  0013BA  C0E1  F066         	movff	efgtoa@u+2,___fldiv@a+2
  4445  0013BE  C0E2  F067         	movff	efgtoa@u+3,___fldiv@a+3
  4446  0013C2  EC71  F014         	call	___fldiv	;wreg free
  4447  0013C6  C060  F079         	movff	?___fldiv,floorf@x
  4448  0013CA  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  4449  0013CE  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  4450  0013D2  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  4451  0013D6  ECB6  F015         	call	_floorf	;wreg free
  4452  0013DA  C079  F0D1         	movff	?_floorf,efgtoa@l
  4453  0013DE  C07A  F0D2         	movff	?_floorf+1,efgtoa@l+1
  4454  0013E2  C07B  F0D3         	movff	?_floorf+2,efgtoa@l+2
  4455  0013E6  C07C  F0D4         	movff	?_floorf+3,efgtoa@l+3
  4456                           
  4457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4458  0013EA  C0D1  F087         	movff	efgtoa@l,___fltol@f1
  4459  0013EE  C0D2  F088         	movff	efgtoa@l+1,___fltol@f1+1
  4460  0013F2  C0D3  F089         	movff	efgtoa@l+2,___fltol@f1+2
  4461  0013F6  C0D4  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  4462  0013FA  EC18  F01C         	call	___fltol	;wreg free
  4463  0013FE  C087  F0C3         	movff	?___fltol,efgtoa@d
  4464  001402  C088  F0C4         	movff	?___fltol+1,efgtoa@d+1
  4465                           
  4466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4467  001406  C0CD  F097         	movff	efgtoa@h,___flsub@b
  4468  00140A  C0CE  F098         	movff	efgtoa@h+1,___flsub@b+1
  4469  00140E  C0CF  F099         	movff	efgtoa@h+2,___flsub@b+2
  4470  001412  C0D0  F09A         	movff	efgtoa@h+3,___flsub@b+3
  4471  001416  C0DF  F072         	movff	efgtoa@u,___flmul@a
  4472  00141A  C0E0  F073         	movff	efgtoa@u+1,___flmul@a+1
  4473  00141E  C0E1  F074         	movff	efgtoa@u+2,___flmul@a+2
  4474  001422  C0E2  F075         	movff	efgtoa@u+3,___flmul@a+3
  4475  001426  C0D1  F06E         	movff	efgtoa@l,___flmul@b
  4476  00142A  C0D2  F06F         	movff	efgtoa@l+1,___flmul@b+1
  4477  00142E  C0D3  F070         	movff	efgtoa@l+2,___flmul@b+2
  4478  001432  C0D4  F071         	movff	efgtoa@l+3,___flmul@b+3
  4479  001436  ECBA  F00F         	call	___flmul	;wreg free
  4480  00143A  C06E  F09B         	movff	?___flmul,___flsub@a
  4481  00143E  C06F  F09C         	movff	?___flmul+1,___flsub@a+1
  4482  001442  C070  F09D         	movff	?___flmul+2,___flsub@a+2
  4483  001446  C071  F09E         	movff	?___flmul+3,___flsub@a+3
  4484  00144A  ECF8  F020         	call	___flsub	;wreg free
  4485  00144E  C097  F0CD         	movff	?___flsub,efgtoa@h
  4486  001452  C098  F0CE         	movff	?___flsub+1,efgtoa@h+1
  4487  001456  C099  F0CF         	movff	?___flsub+2,efgtoa@h+2
  4488  00145A  C09A  F0D0         	movff	?___flsub+3,efgtoa@h+3
  4489                           
  4490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4491  00145E  C0DF  F060         	movff	efgtoa@u,___fldiv@b
  4492  001462  C0E0  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4493  001466  C0E1  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4494  00146A  C0E2  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4495  00146E  0E00               	movlw	0
  4496  001470  0100               	movlb	0	; () banked
  4497  001472  6F64               	movwf	___fldiv@a& (0+255),b
  4498  001474  0E00               	movlw	0
  4499  001476  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4500  001478  0E20               	movlw	32
  4501  00147A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4502  00147C  0E41               	movlw	65
  4503  00147E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4504  001480  EC71  F014         	call	___fldiv	;wreg free
  4505  001484  C060  F0DF         	movff	?___fldiv,efgtoa@u
  4506  001488  C061  F0E0         	movff	?___fldiv+1,efgtoa@u+1
  4507  00148C  C062  F0E1         	movff	?___fldiv+2,efgtoa@u+2
  4508  001490  C063  F0E2         	movff	?___fldiv+3,efgtoa@u+3
  4509                           
  4510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4511  001494  0100               	movlb	0	; () banked
  4512  001496  4BD5               	infsnz	efgtoa@i& (0+255),f,b
  4513  001498  2BD6               	incf	(efgtoa@i+1)& (0+255),f,b
  4514  00149A                     l6849:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4518  00149A  51BF               	movf	efgtoa@m& (0+255),w,b
  4519  00149C  5DD5               	subwf	efgtoa@i& (0+255),w,b
  4520  00149E  51D6               	movf	(efgtoa@i+1)& (0+255),w,b
  4521  0014A0  0A80               	xorlw	128
  4522  0014A2  6FA6               	movwf	??_efgtoa& (0+255),b
  4523  0014A4  51C0               	movf	(efgtoa@m+1)& (0+255),w,b
  4524  0014A6  0A80               	xorlw	128
  4525  0014A8  59A6               	subwfb	??_efgtoa& (0+255),w,b
  4526  0014AA  A0D8               	btfss	status,0,c
  4527  0014AC  D77A               	goto	l6841
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4531  0014AE  C0DF  F06E         	movff	efgtoa@u,___flmul@b
  4532  0014B2  C0E0  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4533  0014B6  C0E1  F070         	movff	efgtoa@u+2,___flmul@b+2
  4534  0014BA  C0E2  F071         	movff	efgtoa@u+3,___flmul@b+3
  4535  0014BE  0E00               	movlw	0
  4536  0014C0  6F72               	movwf	___flmul@a& (0+255),b
  4537  0014C2  0E00               	movlw	0
  4538  0014C4  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4539  0014C6  0EA0               	movlw	160
  4540  0014C8  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4541  0014CA  0E40               	movlw	64
  4542  0014CC  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4543  0014CE  ECBA  F00F         	call	___flmul	;wreg free
  4544  0014D2  C06E  F0D1         	movff	?___flmul,efgtoa@l
  4545  0014D6  C06F  F0D2         	movff	?___flmul+1,efgtoa@l+1
  4546  0014DA  C070  F0D3         	movff	?___flmul+2,efgtoa@l+2
  4547  0014DE  C071  F0D4         	movff	?___flmul+3,efgtoa@l+3
  4548                           
  4549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4550  0014E2  C0CD  F087         	movff	efgtoa@h,___flge@ff1
  4551  0014E6  C0CE  F088         	movff	efgtoa@h+1,___flge@ff1+1
  4552  0014EA  C0CF  F089         	movff	efgtoa@h+2,___flge@ff1+2
  4553  0014EE  C0D0  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  4554  0014F2  C0D1  F08B         	movff	efgtoa@l,___flge@ff2
  4555  0014F6  C0D2  F08C         	movff	efgtoa@l+1,___flge@ff2+1
  4556  0014FA  C0D3  F08D         	movff	efgtoa@l+2,___flge@ff2+2
  4557  0014FE  C0D4  F08E         	movff	efgtoa@l+3,___flge@ff2+3
  4558  001502  EC7F  F01A         	call	___flge	;wreg free
  4559  001506  0100               	movlb	0	; () banked
  4560  001508  A0D8               	btfss	status,0,c
  4561  00150A  D016               	goto	u8790
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4565                           
  4566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4570  00150C  C0CD  F060         	movff	efgtoa@h,___fleq@ff1
  4571  001510  C0CE  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  4572  001514  C0CF  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  4573  001518  C0D0  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  4574  00151C  C0D1  F064         	movff	efgtoa@l,___fleq@ff2
  4575  001520  C0D2  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  4576  001524  C0D3  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  4577  001528  C0D4  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  4578  00152C  ECC5  F01D         	call	___fleq	;wreg free
  4579  001530  0100               	movlb	0	; () banked
  4580  001532  B0D8               	btfsc	status,0,c
  4581                           
  4582                           ; BSR set to: 0
  4583  001534  B1C3               	btfsc	efgtoa@d& (0+255),0,b
  4584  001536  D008               	goto	l6863
  4585  001538                     u8790:
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4589  001538  0E00               	movlw	0
  4590  00153A  6FD1               	movwf	efgtoa@l& (0+255),b
  4591  00153C  0E00               	movlw	0
  4592  00153E  6FD2               	movwf	(efgtoa@l+1)& (0+255),b
  4593  001540  0E00               	movlw	0
  4594  001542  6FD3               	movwf	(efgtoa@l+2)& (0+255),b
  4595  001544  0E00               	movlw	0
  4596  001546  6FD4               	movwf	(efgtoa@l+3)& (0+255),b
  4597  001548                     l6863:
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4601  001548  C0D7  F087         	movff	efgtoa@g,___fladd@b
  4602  00154C  C0D8  F088         	movff	efgtoa@g+1,___fladd@b+1
  4603  001550  C0D9  F089         	movff	efgtoa@g+2,___fladd@b+2
  4604  001554  C0DA  F08A         	movff	efgtoa@g+3,___fladd@b+3
  4605  001558  C0D1  F08B         	movff	efgtoa@l,___fladd@a
  4606  00155C  C0D2  F08C         	movff	efgtoa@l+1,___fladd@a+1
  4607  001560  C0D3  F08D         	movff	efgtoa@l+2,___fladd@a+2
  4608  001564  C0D4  F08E         	movff	efgtoa@l+3,___fladd@a+3
  4609  001568  EC64  F011         	call	___fladd	;wreg free
  4610  00156C  C087  F0CD         	movff	?___fladd,efgtoa@h
  4611  001570  C088  F0CE         	movff	?___fladd+1,efgtoa@h+1
  4612  001574  C089  F0CF         	movff	?___fladd+2,efgtoa@h+2
  4613  001578  C08A  F0D0         	movff	?___fladd+3,efgtoa@h+3
  4614                           
  4615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4616  00157C  C0AB  F0DF         	movff	efgtoa@ou,efgtoa@u
  4617  001580  C0AC  F0E0         	movff	efgtoa@ou+1,efgtoa@u+1
  4618  001584  C0AD  F0E1         	movff	efgtoa@ou+2,efgtoa@u+2
  4619  001588  C0AE  F0E2         	movff	efgtoa@ou+3,efgtoa@u+3
  4620                           
  4621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4622  00158C  0E65               	movlw	101
  4623  00158E  0100               	movlb	0	; () banked
  4624  001590  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4625  001592  B4D8               	btfsc	status,2,c
  4626  001594  D005               	goto	l6871
  4627                           
  4628                           ; BSR set to: 0
  4629  001596  C0DB  F0C1         	movff	efgtoa@e,efgtoa@ne
  4630  00159A  C0DC  F0C2         	movff	efgtoa@e+1,efgtoa@ne+1
  4631  00159E  D004               	goto	l421
  4632  0015A0                     l6871:
  4633                           
  4634                           ; BSR set to: 0
  4635  0015A0  0E00               	movlw	0
  4636  0015A2  6FC2               	movwf	(efgtoa@ne+1)& (0+255),b
  4637  0015A4  0E00               	movlw	0
  4638  0015A6  6FC1               	movwf	efgtoa@ne& (0+255),b
  4639  0015A8                     l421:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4643  0015A8  0E00               	movlw	0
  4644  0015AA  6FBE               	movwf	(efgtoa@pp+1)& (0+255),b
  4645  0015AC  0E00               	movlw	0
  4646  0015AE  6FBD               	movwf	efgtoa@pp& (0+255),b
  4647                           
  4648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4649  0015B0  0E00               	movlw	0
  4650  0015B2  6FBC               	movwf	(efgtoa@t+1)& (0+255),b
  4651  0015B4  0E00               	movlw	0
  4652  0015B6  6FBB               	movwf	efgtoa@t& (0+255),b
  4653                           
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4655  0015B8  0E00               	movlw	0
  4656  0015BA  6FD6               	movwf	(efgtoa@i+1)& (0+255),b
  4657  0015BC  0E00               	movlw	0
  4658  0015BE  6FD5               	movwf	efgtoa@i& (0+255),b
  4659                           
  4660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4661  0015C0  D0C8               	goto	l6921
  4662  0015C2                     l6873:
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4666  0015C2  C0CD  F060         	movff	efgtoa@h,___fldiv@b
  4667  0015C6  C0CE  F061         	movff	efgtoa@h+1,___fldiv@b+1
  4668  0015CA  C0CF  F062         	movff	efgtoa@h+2,___fldiv@b+2
  4669  0015CE  C0D0  F063         	movff	efgtoa@h+3,___fldiv@b+3
  4670  0015D2  C0DF  F064         	movff	efgtoa@u,___fldiv@a
  4671  0015D6  C0E0  F065         	movff	efgtoa@u+1,___fldiv@a+1
  4672  0015DA  C0E1  F066         	movff	efgtoa@u+2,___fldiv@a+2
  4673  0015DE  C0E2  F067         	movff	efgtoa@u+3,___fldiv@a+3
  4674  0015E2  EC71  F014         	call	___fldiv	;wreg free
  4675  0015E6  C060  F079         	movff	?___fldiv,floorf@x
  4676  0015EA  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  4677  0015EE  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  4678  0015F2  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  4679  0015F6  ECB6  F015         	call	_floorf	;wreg free
  4680  0015FA  C079  F0D1         	movff	?_floorf,efgtoa@l
  4681  0015FE  C07A  F0D2         	movff	?_floorf+1,efgtoa@l+1
  4682  001602  C07B  F0D3         	movff	?_floorf+2,efgtoa@l+2
  4683  001606  C07C  F0D4         	movff	?_floorf+3,efgtoa@l+3
  4684                           
  4685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4686  00160A  C0D1  F087         	movff	efgtoa@l,___fltol@f1
  4687  00160E  C0D2  F088         	movff	efgtoa@l+1,___fltol@f1+1
  4688  001612  C0D3  F089         	movff	efgtoa@l+2,___fltol@f1+2
  4689  001616  C0D4  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  4690  00161A  EC18  F01C         	call	___fltol	;wreg free
  4691  00161E  C087  F0C3         	movff	?___fltol,efgtoa@d
  4692  001622  C088  F0C4         	movff	?___fltol+1,efgtoa@d+1
  4693                           
  4694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4695  001626  B83A               	btfsc	_flags,4,c
  4696  001628  D00D               	goto	l6885
  4697  00162A  0100               	movlb	0	; () banked
  4698  00162C  51C3               	movf	efgtoa@d& (0+255),w,b
  4699  00162E  11C4               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4700  001630  A4D8               	btfss	status,2,c
  4701  001632  D008               	goto	l6885
  4702                           
  4703                           ; BSR set to: 0
  4704  001634  0E67               	movlw	103
  4705  001636  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4706  001638  B4D8               	btfsc	status,2,c
  4707                           
  4708                           ; BSR set to: 0
  4709  00163A  AFC2               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4710  00163C  D003               	goto	l6885
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4714  00163E  4BBB               	infsnz	efgtoa@t& (0+255),f,b
  4715  001640  2BBC               	incf	(efgtoa@t+1)& (0+255),f,b
  4716                           
  4717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4718  001642  D03A               	goto	l6913
  4719  001644                     l6885:
  4720                           
  4721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4722  001644  0100               	movlb	0	; () banked
  4723  001646  51BD               	movf	efgtoa@pp& (0+255),w,b
  4724  001648  11BE               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4725  00164A  B4D8               	btfsc	status,2,c
  4726                           
  4727                           ; BSR set to: 0
  4728  00164C  AFC2               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4729  00164E  D022               	goto	l6905
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4733  001650  0E23               	movlw	low _dbuf
  4734  001652  25DD               	addwf	efgtoa@n& (0+255),w,b
  4735  001654  6ED9               	movwf	fsr2l,c
  4736  001656  0E01               	movlw	high _dbuf
  4737  001658  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4738  00165A  6EDA               	movwf	fsr2h,c
  4739  00165C  0E2E               	movlw	46
  4740  00165E  6EDF               	movwf	indf2,c
  4741                           
  4742                           ; BSR set to: 0
  4743  001660  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4744  001662  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4748  001664  07CA               	decf	efgtoa@w& (0+255),f,b
  4749  001666  A0D8               	btfss	status,0,c
  4750  001668  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4754  00166A  0E00               	movlw	0
  4755  00166C  6FBE               	movwf	(efgtoa@pp+1)& (0+255),b
  4756  00166E  0E01               	movlw	1
  4757  001670  6FBD               	movwf	efgtoa@pp& (0+255),b
  4758  001672  D010               	goto	l6905
  4759  001674                     l6897:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4763  001674  0E23               	movlw	low _dbuf
  4764  001676  25DD               	addwf	efgtoa@n& (0+255),w,b
  4765  001678  6ED9               	movwf	fsr2l,c
  4766  00167A  0E01               	movlw	high _dbuf
  4767  00167C  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4768  00167E  6EDA               	movwf	fsr2h,c
  4769  001680  0E30               	movlw	48
  4770  001682  6EDF               	movwf	indf2,c
  4771                           
  4772                           ; BSR set to: 0
  4773  001684  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4774  001686  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4778  001688  07CA               	decf	efgtoa@w& (0+255),f,b
  4779  00168A  A0D8               	btfss	status,0,c
  4780  00168C  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4784  00168E  07BB               	decf	efgtoa@t& (0+255),f,b
  4785  001690  A0D8               	btfss	status,0,c
  4786  001692  07BC               	decf	(efgtoa@t+1)& (0+255),f,b
  4787  001694                     l6905:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4791  001694  51BB               	movf	efgtoa@t& (0+255),w,b
  4792  001696  11BC               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4793  001698  A4D8               	btfss	status,2,c
  4794  00169A  D7EC               	goto	l6897
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4798  00169C  0E23               	movlw	low _dbuf
  4799  00169E  25DD               	addwf	efgtoa@n& (0+255),w,b
  4800  0016A0  6ED9               	movwf	fsr2l,c
  4801  0016A2  0E01               	movlw	high _dbuf
  4802  0016A4  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4803  0016A6  6EDA               	movwf	fsr2h,c
  4804  0016A8  51C3               	movf	efgtoa@d& (0+255),w,b
  4805  0016AA  0F30               	addlw	48
  4806  0016AC  6EDF               	movwf	indf2,c
  4807                           
  4808                           ; BSR set to: 0
  4809  0016AE  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4810  0016B0  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4814  0016B2  07CA               	decf	efgtoa@w& (0+255),f,b
  4815  0016B4  A0D8               	btfss	status,0,c
  4816  0016B6  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  4817  0016B8                     l6913:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4821  0016B8  C0CD  F097         	movff	efgtoa@h,___flsub@b
  4822  0016BC  C0CE  F098         	movff	efgtoa@h+1,___flsub@b+1
  4823  0016C0  C0CF  F099         	movff	efgtoa@h+2,___flsub@b+2
  4824  0016C4  C0D0  F09A         	movff	efgtoa@h+3,___flsub@b+3
  4825  0016C8  C0DF  F072         	movff	efgtoa@u,___flmul@a
  4826  0016CC  C0E0  F073         	movff	efgtoa@u+1,___flmul@a+1
  4827  0016D0  C0E1  F074         	movff	efgtoa@u+2,___flmul@a+2
  4828  0016D4  C0E2  F075         	movff	efgtoa@u+3,___flmul@a+3
  4829  0016D8  C0D1  F06E         	movff	efgtoa@l,___flmul@b
  4830  0016DC  C0D2  F06F         	movff	efgtoa@l+1,___flmul@b+1
  4831  0016E0  C0D3  F070         	movff	efgtoa@l+2,___flmul@b+2
  4832  0016E4  C0D4  F071         	movff	efgtoa@l+3,___flmul@b+3
  4833  0016E8  ECBA  F00F         	call	___flmul	;wreg free
  4834  0016EC  C06E  F09B         	movff	?___flmul,___flsub@a
  4835  0016F0  C06F  F09C         	movff	?___flmul+1,___flsub@a+1
  4836  0016F4  C070  F09D         	movff	?___flmul+2,___flsub@a+2
  4837  0016F8  C071  F09E         	movff	?___flmul+3,___flsub@a+3
  4838  0016FC  ECF8  F020         	call	___flsub	;wreg free
  4839  001700  C097  F0CD         	movff	?___flsub,efgtoa@h
  4840  001704  C098  F0CE         	movff	?___flsub+1,efgtoa@h+1
  4841  001708  C099  F0CF         	movff	?___flsub+2,efgtoa@h+2
  4842  00170C  C09A  F0D0         	movff	?___flsub+3,efgtoa@h+3
  4843                           
  4844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4845  001710  C0DF  F060         	movff	efgtoa@u,___fldiv@b
  4846  001714  C0E0  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4847  001718  C0E1  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4848  00171C  C0E2  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4849  001720  0E00               	movlw	0
  4850  001722  0100               	movlb	0	; () banked
  4851  001724  6F64               	movwf	___fldiv@a& (0+255),b
  4852  001726  0E00               	movlw	0
  4853  001728  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4854  00172A  0E20               	movlw	32
  4855  00172C  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4856  00172E  0E41               	movlw	65
  4857  001730  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4858  001732  EC71  F014         	call	___fldiv	;wreg free
  4859  001736  C060  F0DF         	movff	?___fldiv,efgtoa@u
  4860  00173A  C061  F0E0         	movff	?___fldiv+1,efgtoa@u+1
  4861  00173E  C062  F0E1         	movff	?___fldiv+2,efgtoa@u+2
  4862  001742  C063  F0E2         	movff	?___fldiv+3,efgtoa@u+3
  4863                           
  4864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4865  001746  0100               	movlb	0	; () banked
  4866  001748  07C1               	decf	efgtoa@ne& (0+255),f,b
  4867  00174A  A0D8               	btfss	status,0,c
  4868  00174C  07C2               	decf	(efgtoa@ne+1)& (0+255),f,b
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4872  00174E  4BD5               	infsnz	efgtoa@i& (0+255),f,b
  4873  001750  2BD6               	incf	(efgtoa@i+1)& (0+255),f,b
  4874  001752                     l6921:
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4878  001752  51BF               	movf	efgtoa@m& (0+255),w,b
  4879  001754  5DD5               	subwf	efgtoa@i& (0+255),w,b
  4880  001756  51D6               	movf	(efgtoa@i+1)& (0+255),w,b
  4881  001758  0A80               	xorlw	128
  4882  00175A  6FA6               	movwf	??_efgtoa& (0+255),b
  4883  00175C  51C0               	movf	(efgtoa@m+1)& (0+255),w,b
  4884  00175E  0A80               	xorlw	128
  4885  001760  59A6               	subwfb	??_efgtoa& (0+255),w,b
  4886  001762  B0D8               	btfsc	status,0,c
  4887  001764  D008               	goto	u8890
  4888                           
  4889                           ; BSR set to: 0
  4890  001766  BFDE               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4891  001768  D72C               	goto	l6873
  4892  00176A  51DE               	movf	(efgtoa@n+1)& (0+255),w,b
  4893  00176C  E104               	bnz	u8890
  4894  00176E  0E4B               	movlw	75
  4895  001770  5DDD               	subwf	efgtoa@n& (0+255),w,b
  4896  001772  A0D8               	btfss	status,0,c
  4897  001774  D726               	goto	l6873
  4898  001776                     u8890:
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4902  001776  51BD               	movf	efgtoa@pp& (0+255),w,b
  4903  001778  11BE               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4904  00177A  B4D8               	btfsc	status,2,c
  4905                           
  4906                           ; BSR set to: 0
  4907  00177C  A83A               	btfss	_flags,4,c
  4908  00177E  D00A               	goto	l6933
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4912  001780  0E23               	movlw	low _dbuf
  4913  001782  25DD               	addwf	efgtoa@n& (0+255),w,b
  4914  001784  6ED9               	movwf	fsr2l,c
  4915  001786  0E01               	movlw	high _dbuf
  4916  001788  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4917  00178A  6EDA               	movwf	fsr2h,c
  4918  00178C  0E2E               	movlw	46
  4919  00178E  6EDF               	movwf	indf2,c
  4920                           
  4921                           ; BSR set to: 0
  4922  001790  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4923  001792  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4924  001794                     l6933:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4928  001794  0E23               	movlw	low _dbuf
  4929  001796  25DD               	addwf	efgtoa@n& (0+255),w,b
  4930  001798  6ED9               	movwf	fsr2l,c
  4931  00179A  0E01               	movlw	high _dbuf
  4932  00179C  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4933  00179E  6EDA               	movwf	fsr2h,c
  4934  0017A0  0E00               	movlw	0
  4935  0017A2  6EDF               	movwf	indf2,c
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4939  0017A4  0E65               	movlw	101
  4940  0017A6  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4941  0017A8  A4D8               	btfss	status,2,c
  4942  0017AA  D47C               	goto	l6745
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4946  0017AC  0E00               	movlw	0
  4947  0017AE  6FD6               	movwf	(efgtoa@i+1)& (0+255),b
  4948  0017B0  0E4F               	movlw	79
  4949  0017B2  6FD5               	movwf	efgtoa@i& (0+255),b
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4953  0017B4  0E23               	movlw	low _dbuf
  4954  0017B6  25D5               	addwf	efgtoa@i& (0+255),w,b
  4955  0017B8  6ED9               	movwf	fsr2l,c
  4956  0017BA  0E01               	movlw	high _dbuf
  4957  0017BC  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4958  0017BE  6EDA               	movwf	fsr2h,c
  4959  0017C0  0E00               	movlw	0
  4960  0017C2  6EDF               	movwf	indf2,c
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4964  0017C4  0E00               	movlw	0
  4965  0017C6  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  4966  0017C8  0E00               	movlw	0
  4967  0017CA  6FC5               	movwf	efgtoa@sign& (0+255),b
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4971  0017CC  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4972  0017CE  D008               	goto	l6949
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4976  0017D0  0E00               	movlw	0
  4977  0017D2  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  4978  0017D4  0E01               	movlw	1
  4979  0017D6  6FC5               	movwf	efgtoa@sign& (0+255),b
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4983  0017D8  6DDB               	negf	efgtoa@e& (0+255),b
  4984  0017DA  1FDC               	comf	(efgtoa@e+1)& (0+255),f,b
  4985  0017DC  B0D8               	btfsc	status,0,c
  4986  0017DE  2BDC               	incf	(efgtoa@e+1)& (0+255),f,b
  4987  0017E0                     l6949:
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4991  0017E0  0E00               	movlw	0
  4992  0017E2  6FC8               	movwf	(efgtoa@p+1)& (0+255),b
  4993  0017E4  0E02               	movlw	2
  4994  0017E6  6FC7               	movwf	efgtoa@p& (0+255),b
  4995                           
  4996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4997  0017E8  D02C               	goto	l6961
  4998  0017EA                     l6951:
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  5002  0017EA  07D5               	decf	efgtoa@i& (0+255),f,b
  5003  0017EC  A0D8               	btfss	status,0,c
  5004  0017EE  07D6               	decf	(efgtoa@i+1)& (0+255),f,b
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  5008  0017F0  0E23               	movlw	low _dbuf
  5009  0017F2  25D5               	addwf	efgtoa@i& (0+255),w,b
  5010  0017F4  6ED9               	movwf	fsr2l,c
  5011  0017F6  0E01               	movlw	high _dbuf
  5012  0017F8  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5013  0017FA  6EDA               	movwf	fsr2h,c
  5014  0017FC  C0DB  F060         	movff	efgtoa@e,___awmod@dividend
  5015  001800  C0DC  F061         	movff	efgtoa@e+1,___awmod@dividend+1
  5016  001804  0E00               	movlw	0
  5017  001806  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5018  001808  0E0A               	movlw	10
  5019  00180A  6F62               	movwf	___awmod@divisor& (0+255),b
  5020  00180C  EC8E  F01F         	call	___awmod	;wreg free
  5021  001810  0100               	movlb	0	; () banked
  5022  001812  5160               	movf	?___awmod& (0+255),w,b
  5023  001814  0F30               	addlw	48
  5024  001816  6EDF               	movwf	indf2,c
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  5028  001818  C0DB  F060         	movff	efgtoa@e,___awdiv@dividend
  5029  00181C  C0DC  F061         	movff	efgtoa@e+1,___awdiv@dividend+1
  5030  001820  0E00               	movlw	0
  5031  001822  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5032  001824  0E0A               	movlw	10
  5033  001826  6F62               	movwf	___awdiv@divisor& (0+255),b
  5034  001828  EC4F  F01E         	call	___awdiv	;wreg free
  5035  00182C  C060  F0DB         	movff	?___awdiv,efgtoa@e
  5036  001830  C061  F0DC         	movff	?___awdiv+1,efgtoa@e+1
  5037                           
  5038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  5039  001834  0100               	movlb	0	; () banked
  5040  001836  07C7               	decf	efgtoa@p& (0+255),f,b
  5041  001838  A0D8               	btfss	status,0,c
  5042  00183A  07C8               	decf	(efgtoa@p+1)& (0+255),f,b
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  5046  00183C  07CA               	decf	efgtoa@w& (0+255),f,b
  5047  00183E  A0D8               	btfss	status,0,c
  5048  001840  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  5049  001842                     l6961:
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5053  001842  51DB               	movf	efgtoa@e& (0+255),w,b
  5054  001844  11DC               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5055  001846  A4D8               	btfss	status,2,c
  5056  001848  D7D0               	goto	l6951
  5057                           
  5058                           ; BSR set to: 0
  5059  00184A  BFC8               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5060  00184C  D005               	goto	u8950
  5061  00184E  51C8               	movf	(efgtoa@p+1)& (0+255),w,b
  5062  001850  E1CC               	bnz	l6951
  5063  001852  05C7               	decf	efgtoa@p& (0+255),w,b
  5064  001854  B0D8               	btfsc	status,0,c
  5065  001856  D7C9               	goto	l6951
  5066  001858                     u8950:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  5070  001858  07D5               	decf	efgtoa@i& (0+255),f,b
  5071  00185A  A0D8               	btfss	status,0,c
  5072  00185C  07D6               	decf	(efgtoa@i+1)& (0+255),f,b
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  5076  00185E  51C5               	movf	efgtoa@sign& (0+255),w,b
  5077  001860  11C6               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5078  001862  A4D8               	btfss	status,2,c
  5079  001864  D004               	goto	l6971
  5080                           
  5081                           ; BSR set to: 0
  5082  001866  0E00               	movlw	0
  5083  001868  6FB6               	movwf	(_efgtoa$1350+1)& (0+255),b
  5084  00186A  0E2B               	movlw	43
  5085  00186C  D003               	goto	L4
  5086  00186E                     l6971:
  5087                           
  5088                           ; BSR set to: 0
  5089  00186E  0E00               	movlw	0
  5090  001870  6FB6               	movwf	(_efgtoa$1350+1)& (0+255),b
  5091  001872  0E2D               	movlw	45
  5092  001874                     L4:
  5093  001874  6FB5               	movwf	_efgtoa$1350& (0+255),b
  5094                           
  5095                           ; BSR set to: 0
  5096  001876  0E23               	movlw	low _dbuf
  5097  001878  25D5               	addwf	efgtoa@i& (0+255),w,b
  5098  00187A  6ED9               	movwf	fsr2l,c
  5099  00187C  0E01               	movlw	high _dbuf
  5100  00187E  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5101  001880  6EDA               	movwf	fsr2h,c
  5102  001882  C0B5  FFDF         	movff	_efgtoa$1350,indf2
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  5106  001886  07CA               	decf	efgtoa@w& (0+255),f,b
  5107  001888  A0D8               	btfss	status,0,c
  5108  00188A  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5112  00188C  07D5               	decf	efgtoa@i& (0+255),f,b
  5113  00188E  A0D8               	btfss	status,0,c
  5114  001890  07D6               	decf	(efgtoa@i+1)& (0+255),f,b
  5115                           
  5116                           ; BSR set to: 0
  5117  001892  0EBF               	movlw	191
  5118  001894  6FA6               	movwf	??_efgtoa& (0+255),b
  5119  001896  0EFF               	movlw	255
  5120  001898  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  5121  00189A  51A5               	movf	efgtoa@c& (0+255),w,b
  5122  00189C  6FA8               	movwf	(??_efgtoa+2)& (0+255),b
  5123  00189E  6BA9               	clrf	(??_efgtoa+3)& (0+255),b
  5124  0018A0  51A6               	movf	??_efgtoa& (0+255),w,b
  5125  0018A2  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  5126  0018A4  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  5127  0018A6  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5128  0018A8  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  5129  0018AA  E106               	bnz	u8970
  5130  0018AC  0E1A               	movlw	26
  5131  0018AE  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  5132  0018B0  B0D8               	btfsc	status,0,c
  5133  0018B2  D002               	goto	u8970
  5134  0018B4  0E01               	movlw	1
  5135  0018B6  D001               	goto	u8980
  5136  0018B8                     u8970:
  5137  0018B8  0E00               	movlw	0
  5138  0018BA                     u8980:
  5139  0018BA  6FB9               	movwf	_efgtoa$1352& (0+255),b
  5140  0018BC  6BBA               	clrf	(_efgtoa$1352+1)& (0+255),b
  5141                           
  5142                           ; BSR set to: 0
  5143  0018BE  51B9               	movf	_efgtoa$1352& (0+255),w,b
  5144  0018C0  11BA               	iorwf	(_efgtoa$1352+1)& (0+255),w,b
  5145  0018C2  A4D8               	btfss	status,2,c
  5146  0018C4  D004               	goto	l6987
  5147                           
  5148                           ; BSR set to: 0
  5149  0018C6  0E00               	movlw	0
  5150  0018C8  6FB8               	movwf	(_efgtoa$1351+1)& (0+255),b
  5151  0018CA  0E65               	movlw	101
  5152  0018CC  D003               	goto	L5
  5153  0018CE                     l6987:
  5154                           
  5155                           ; BSR set to: 0
  5156  0018CE  0E00               	movlw	0
  5157  0018D0  6FB8               	movwf	(_efgtoa$1351+1)& (0+255),b
  5158  0018D2  0E45               	movlw	69
  5159  0018D4                     L5:
  5160  0018D4  6FB7               	movwf	_efgtoa$1351& (0+255),b
  5161                           
  5162                           ; BSR set to: 0
  5163  0018D6  0E23               	movlw	low _dbuf
  5164  0018D8  25D5               	addwf	efgtoa@i& (0+255),w,b
  5165  0018DA  6ED9               	movwf	fsr2l,c
  5166  0018DC  0E01               	movlw	high _dbuf
  5167  0018DE  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5168  0018E0  6EDA               	movwf	fsr2h,c
  5169  0018E2  C0B7  FFDF         	movff	_efgtoa$1351,indf2
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  5173  0018E6  07CA               	decf	efgtoa@w& (0+255),f,b
  5174  0018E8  A0D8               	btfss	status,0,c
  5175  0018EA  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  5179  0018EC  0E23               	movlw	low _dbuf
  5180  0018EE  25DD               	addwf	efgtoa@n& (0+255),w,b
  5181  0018F0  6F60               	movwf	strcpy@dest& (0+255),b
  5182  0018F2  0E01               	movlw	high _dbuf
  5183  0018F4  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5184  0018F6  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  5185  0018F8  0E23               	movlw	low _dbuf
  5186  0018FA  25D5               	addwf	efgtoa@i& (0+255),w,b
  5187  0018FC  6F62               	movwf	strcpy@src& (0+255),b
  5188  0018FE  0E01               	movlw	high _dbuf
  5189  001900  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5190  001902  6F63               	movwf	(strcpy@src+1)& (0+255),b
  5191  001904  EC55  F020         	call	_strcpy	;wreg free
  5192  001908  EF52  F008         	goto	l6745
  5193  00190C                     __end_of_efgtoa:
  5194                           	opt callstack 0
  5195                           
  5196 ;; *************** function _tolower *****************
  5197 ;; Defined at:
  5198 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  c               2    6[BANK0 ] int 
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;		None
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  2    6[BANK0 ] int 
  5205 ;; Registers used:
  5206 ;;		wreg, status,2, status,0
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5213 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5214 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5215 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5216 ;;Total ram usage:        8 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; Hardware stack levels required when called:    3
  5219 ;; This function calls:
  5220 ;;		_isupper
  5221 ;; This function is called by:
  5222 ;;		_efgtoa
  5223 ;;		_vfpfcnvrt
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           	psect	text10
  5228  0041A2                     __ptext10:
  5229                           	opt callstack 0
  5230  0041A2                     _tolower:
  5231                           	opt callstack 23
  5232                           
  5233                           ;incstack = 0
  5234  0041A2  0EBF               	movlw	191
  5235  0041A4  0100               	movlb	0	; () banked
  5236  0041A6  6F68               	movwf	??_tolower& (0+255),b
  5237  0041A8  0EFF               	movlw	255
  5238  0041AA  6F69               	movwf	(??_tolower+1)& (0+255),b
  5239  0041AC  C066  F06A         	movff	tolower@c,??_tolower+2
  5240  0041B0  C067  F06B         	movff	tolower@c+1,??_tolower+3
  5241  0041B4  5168               	movf	??_tolower& (0+255),w,b
  5242  0041B6  276A               	addwf	(??_tolower+2)& (0+255),f,b
  5243  0041B8  5169               	movf	(??_tolower+1)& (0+255),w,b
  5244  0041BA  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  5245  0041BC  516B               	movf	(??_tolower+3)& (0+255),w,b
  5246  0041BE  E106               	bnz	u7530
  5247  0041C0  0E1A               	movlw	26
  5248  0041C2  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  5249  0041C4  B0D8               	btfsc	status,0,c
  5250  0041C6  D002               	goto	u7530
  5251  0041C8  0E01               	movlw	1
  5252  0041CA  D001               	goto	u7540
  5253  0041CC                     u7530:
  5254  0041CC  0E00               	movlw	0
  5255  0041CE                     u7540:
  5256  0041CE  6F6C               	movwf	_tolower$1967& (0+255),b
  5257  0041D0  6B6D               	clrf	(_tolower$1967+1)& (0+255),b
  5258                           
  5259                           ; BSR set to: 0
  5260  0041D2  516C               	movf	_tolower$1967& (0+255),w,b
  5261  0041D4  116D               	iorwf	(_tolower$1967+1)& (0+255),w,b
  5262  0041D6  B4D8               	btfsc	status,2,c
  5263  0041D8  D006               	goto	l1325
  5264                           
  5265                           ; BSR set to: 0
  5266  0041DA  0E20               	movlw	32
  5267  0041DC  1166               	iorwf	tolower@c& (0+255),w,b
  5268  0041DE  6F66               	movwf	?_tolower& (0+255),b
  5269  0041E0  5167               	movf	(tolower@c+1)& (0+255),w,b
  5270  0041E2  6F67               	movwf	(?_tolower+1)& (0+255),b
  5271  0041E4  0012               	return	
  5272  0041E6                     l1325:
  5273                           
  5274                           ; BSR set to: 0
  5275  0041E6  C066  F066         	movff	tolower@c,?_tolower
  5276  0041EA  C067  F067         	movff	tolower@c+1,?_tolower+1
  5277                           
  5278                           ; BSR set to: 0
  5279  0041EE  0012               	return		;funcret
  5280  0041F0                     __end_of_tolower:
  5281                           	opt callstack 0
  5282                           
  5283 ;; *************** function _isupper *****************
  5284 ;; Defined at:
  5285 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  c               2    0[BANK0 ] int 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  2    0[BANK0 ] int 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5299 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5301 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5302 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5303 ;;Total ram usage:        6 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    2
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_efgtoa
  5310 ;;		_vfpfcnvrt
  5311 ;;		_tolower
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text11
  5316  0042EE                     __ptext11:
  5317                           	opt callstack 0
  5318  0042EE                     _isupper:
  5319                           	opt callstack 23
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;incstack = 0
  5323  0042EE  0EBF               	movlw	191
  5324  0042F0  0100               	movlb	0	; () banked
  5325  0042F2  6F62               	movwf	??_isupper& (0+255),b
  5326  0042F4  0EFF               	movlw	255
  5327  0042F6  6F63               	movwf	(??_isupper+1)& (0+255),b
  5328  0042F8  C060  F064         	movff	isupper@c,??_isupper+2
  5329  0042FC  C061  F065         	movff	isupper@c+1,??_isupper+3
  5330  004300  5162               	movf	??_isupper& (0+255),w,b
  5331  004302  2764               	addwf	(??_isupper+2)& (0+255),f,b
  5332  004304  5163               	movf	(??_isupper+1)& (0+255),w,b
  5333  004306  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  5334  004308  5165               	movf	(??_isupper+3)& (0+255),w,b
  5335  00430A  E106               	bnz	u6990
  5336  00430C  0E1A               	movlw	26
  5337  00430E  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  5338  004310  B0D8               	btfsc	status,0,c
  5339  004312  D002               	goto	u6990
  5340  004314  0E01               	movlw	1
  5341  004316  D001               	goto	u7000
  5342  004318                     u6990:
  5343  004318  0E00               	movlw	0
  5344  00431A                     u7000:
  5345  00431A  6F60               	movwf	?_isupper& (0+255),b
  5346  00431C  6B61               	clrf	(?_isupper+1)& (0+255),b
  5347                           
  5348                           ; BSR set to: 0
  5349  00431E  0012               	return		;funcret
  5350  004320                     __end_of_isupper:
  5351                           	opt callstack 0
  5352                           
  5353 ;; *************** function _strcpy *****************
  5354 ;; Defined at:
  5355 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  5358 ;;		 -> dbuf(80), 
  5359 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  5360 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  5361 ;;		 -> dbuf(80), 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  d               2    8[BANK0 ] PTR unsigned char 
  5364 ;;		 -> dbuf(80), 
  5365 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5366 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  5367 ;;		 -> dbuf(80), 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  2    0[BANK0 ] PTR unsigned char 
  5370 ;; Registers used:
  5371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5377 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5378 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5379 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5380 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5381 ;;Total ram usage:       10 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    2
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_efgtoa
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           	psect	text12
  5392  0040AA                     __ptext12:
  5393                           	opt callstack 0
  5394  0040AA                     _strcpy:
  5395                           	opt callstack 23
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;incstack = 0
  5399  0040AA  C062  F066         	movff	strcpy@src,strcpy@s
  5400  0040AE  C063  F067         	movff	strcpy@src+1,strcpy@s+1
  5401  0040B2  C060  F068         	movff	strcpy@dest,strcpy@d
  5402  0040B6  C061  F069         	movff	strcpy@dest+1,strcpy@d+1
  5403  0040BA                     l6143:
  5404  0040BA  0100               	movlb	0	; () banked
  5405  0040BC  5166               	movf	strcpy@s& (0+255),w,b
  5406  0040BE  6F64               	movwf	??_strcpy& (0+255),b
  5407  0040C0  5167               	movf	(strcpy@s+1)& (0+255),w,b
  5408  0040C2  6F65               	movwf	(??_strcpy+1)& (0+255),b
  5409  0040C4  4B66               	infsnz	strcpy@s& (0+255),f,b
  5410  0040C6  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  5411  0040C8  C064  FFF6         	movff	??_strcpy,tblptrl
  5412  0040CC  C065  FFF7         	movff	??_strcpy+1,tblptrh
  5413  0040D0  0E00               	movlw	low (__smallconst shr (0+16))
  5414  0040D2  6EF8               	movwf	tblptru,c
  5415  0040D4  C068  FFD9         	movff	strcpy@d,fsr2l
  5416  0040D8  C069  FFDA         	movff	strcpy@d+1,fsr2h
  5417  0040DC  4B68               	infsnz	strcpy@d& (0+255),f,b
  5418  0040DE  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  5419  0040E0  0E0E               	movlw	(high __ramtop+-1)
  5420  0040E2  64F7               	cpfsgt	tblptrh,c
  5421  0040E4  D003               	bra	u7517
  5422  0040E6  0008               	tblrd		*
  5423  0040E8  50F5               	movf	tablat,w,c
  5424  0040EA  D005               	bra	u7510
  5425  0040EC                     u7517:
  5426  0040EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5427  0040F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5428  0040F4  50E7               	movf	indf1,w,c
  5429  0040F6                     u7510:
  5430  0040F6  6EDF               	movwf	indf2,c
  5431  0040F8  50DF               	movf	indf2,w,c
  5432  0040FA  B4D8               	btfsc	status,2,c
  5433  0040FC  0012               	return	
  5434  0040FE  D7DD               	goto	l6143
  5435  004100                     __end_of_strcpy:
  5436                           	opt callstack 0
  5437                           
  5438 ;; *************** function _floorf *****************
  5439 ;; Defined at:
  5440 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  x               4   25[BANK0 ] float 
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;  u               4   41[BANK0 ] struct .
  5445 ;;  m               4   35[BANK0 ] unsigned long 
  5446 ;;  e               2   39[BANK0 ] int 
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  4   25[BANK0 ] float 
  5449 ;; Registers used:
  5450 ;;		wreg, status,2, status,0
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5456 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5457 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;Total ram usage:       20 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    2
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_efgtoa
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text13
  5471  002B6C                     __ptext13:
  5472                           	opt callstack 0
  5473  002B6C                     _floorf:
  5474                           	opt callstack 23
  5475                           
  5476                           ;incstack = 0
  5477  002B6C  C02A  F089         	movff	floorf@F524,floorf@u
  5478  002B70  C02B  F08A         	movff	floorf@F524+1,floorf@u+1
  5479  002B74  C02C  F08B         	movff	floorf@F524+2,floorf@u+2
  5480  002B78  C02D  F08C         	movff	floorf@F524+3,floorf@u+3
  5481  002B7C  C079  F089         	movff	floorf@x,floorf@u
  5482  002B80  C07A  F08A         	movff	floorf@x+1,floorf@u+1
  5483  002B84  C07B  F08B         	movff	floorf@x+2,floorf@u+2
  5484  002B88  C07C  F08C         	movff	floorf@x+3,floorf@u+3
  5485  002B8C  0E81               	movlw	129
  5486  002B8E  0100               	movlb	0	; () banked
  5487  002B90  6F7D               	movwf	??_floorf& (0+255),b
  5488  002B92  0EFF               	movlw	255
  5489  002B94  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5490  002B96  C089  F07F         	movff	floorf@u,??_floorf+2
  5491  002B9A  C08A  F080         	movff	floorf@u+1,??_floorf+3
  5492  002B9E  C08B  F081         	movff	floorf@u+2,??_floorf+4
  5493  002BA2  C08C  F082         	movff	floorf@u+3,??_floorf+5
  5494  002BA6  0E18               	movlw	24
  5495  002BA8  D005               	goto	u7560
  5496  002BAA                     u7565:
  5497  002BAA  90D8               	bcf	status,0,c
  5498  002BAC  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  5499  002BAE  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  5500  002BB0  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5501  002BB2  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5502  002BB4                     u7560:
  5503  002BB4  2EE8               	decfsz	wreg,f,c
  5504  002BB6  D7F9               	goto	u7565
  5505  002BB8  517F               	movf	(??_floorf+2)& (0+255),w,b
  5506  002BBA  257D               	addwf	??_floorf& (0+255),w,b
  5507  002BBC  6F87               	movwf	floorf@e& (0+255),b
  5508  002BBE  0E00               	movlw	0
  5509  002BC0  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  5510  002BC2  6F88               	movwf	(floorf@e+1)& (0+255),b
  5511  002BC4  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  5512  002BC6  D00F               	goto	l6161
  5513  002BC8  5188               	movf	(floorf@e+1)& (0+255),w,b
  5514  002BCA  E104               	bnz	u7570
  5515  002BCC  0E17               	movlw	23
  5516  002BCE  5D87               	subwf	floorf@e& (0+255),w,b
  5517  002BD0  A0D8               	btfss	status,0,c
  5518  002BD2  D009               	goto	l6161
  5519  002BD4                     u7570:
  5520                           
  5521                           ; BSR set to: 0
  5522  002BD4  C079  F079         	movff	floorf@x,?_floorf
  5523  002BD8  C07A  F07A         	movff	floorf@x+1,?_floorf+1
  5524  002BDC  C07B  F07B         	movff	floorf@x+2,?_floorf+2
  5525  002BE0  C07C  F07C         	movff	floorf@x+3,?_floorf+3
  5526  002BE4  0012               	return	
  5527  002BE6                     l6161:
  5528                           
  5529                           ; BSR set to: 0
  5530  002BE6  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  5531  002BE8  D05F               	goto	l6171
  5532                           
  5533                           ; BSR set to: 0
  5534  002BEA  C087  F07D         	movff	floorf@e,??_floorf
  5535  002BEE  0EFF               	movlw	255
  5536  002BF0  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5537  002BF2  0EFF               	movlw	255
  5538  002BF4  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5539  002BF6  0E7F               	movlw	127
  5540  002BF8  6F80               	movwf	(??_floorf+3)& (0+255),b
  5541  002BFA  0E00               	movlw	0
  5542  002BFC  6F81               	movwf	(??_floorf+4)& (0+255),b
  5543  002BFE                     u7595:
  5544  002BFE  677D               	tstfsz	??_floorf& (0+255),b
  5545  002C00  D001               	goto	u7596
  5546  002C02  D007               	goto	u7597
  5547  002C04                     u7596:
  5548  002C04  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  5549  002C06  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  5550  002C08  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5551  002C0A  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5552  002C0C  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5553  002C0E  2F7D               	decfsz	??_floorf& (0+255),f,b
  5554  002C10  D7F6               	goto	u7595
  5555  002C12                     u7597:
  5556  002C12  C07E  F083         	movff	??_floorf+1,floorf@m
  5557  002C16  C07F  F084         	movff	??_floorf+2,floorf@m+1
  5558  002C1A  C080  F085         	movff	??_floorf+3,floorf@m+2
  5559  002C1E  C081  F086         	movff	??_floorf+4,floorf@m+3
  5560  002C22  0100               	movlb	0	; () banked
  5561  002C24  5183               	movf	floorf@m& (0+255),w,b
  5562  002C26  1589               	andwf	floorf@u& (0+255),w,b
  5563  002C28  6F7D               	movwf	??_floorf& (0+255),b
  5564  002C2A  5184               	movf	(floorf@m+1)& (0+255),w,b
  5565  002C2C  158A               	andwf	(floorf@u+1)& (0+255),w,b
  5566  002C2E  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5567  002C30  5185               	movf	(floorf@m+2)& (0+255),w,b
  5568  002C32  158B               	andwf	(floorf@u+2)& (0+255),w,b
  5569  002C34  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5570  002C36  5186               	movf	(floorf@m+3)& (0+255),w,b
  5571  002C38  158C               	andwf	(floorf@u+3)& (0+255),w,b
  5572  002C3A  6F80               	movwf	(??_floorf+3)& (0+255),b
  5573  002C3C  517D               	movf	??_floorf& (0+255),w,b
  5574  002C3E  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5575  002C40  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5576  002C42  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5577  002C44  B4D8               	btfsc	status,2,c
  5578  002C46  D7C6               	goto	u7570
  5579                           
  5580                           ; BSR set to: 0
  5581  002C48  C089  F07D         	movff	floorf@u,??_floorf
  5582  002C4C  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  5583  002C50  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  5584  002C54  C08C  F080         	movff	floorf@u+3,??_floorf+3
  5585  002C58  0E20               	movlw	32
  5586  002C5A  D005               	goto	u7610
  5587  002C5C                     u7615:
  5588  002C5C  90D8               	bcf	status,0,c
  5589  002C5E  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5590  002C60  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5591  002C62  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5592  002C64  337D               	rrcf	??_floorf& (0+255),f,b
  5593  002C66                     u7610:
  5594  002C66  2EE8               	decfsz	wreg,f,c
  5595  002C68  D7F9               	goto	u7615
  5596  002C6A  517D               	movf	??_floorf& (0+255),w,b
  5597  002C6C  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5598  002C6E  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5599  002C70  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5600  002C72  B4D8               	btfsc	status,2,c
  5601  002C74  D008               	goto	l1245
  5602                           
  5603                           ; BSR set to: 0
  5604  002C76  5183               	movf	floorf@m& (0+255),w,b
  5605  002C78  2789               	addwf	floorf@u& (0+255),f,b
  5606  002C7A  5184               	movf	(floorf@m+1)& (0+255),w,b
  5607  002C7C  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  5608  002C7E  5185               	movf	(floorf@m+2)& (0+255),w,b
  5609  002C80  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  5610  002C82  5186               	movf	(floorf@m+3)& (0+255),w,b
  5611  002C84  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  5612  002C86                     l1245:
  5613                           
  5614                           ; BSR set to: 0
  5615  002C86  1D83               	comf	floorf@m& (0+255),w,b
  5616  002C88  6F7D               	movwf	??_floorf& (0+255),b
  5617  002C8A  1D84               	comf	(floorf@m+1)& (0+255),w,b
  5618  002C8C  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5619  002C8E  1D85               	comf	(floorf@m+2)& (0+255),w,b
  5620  002C90  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5621  002C92  1D86               	comf	(floorf@m+3)& (0+255),w,b
  5622  002C94  6F80               	movwf	(??_floorf+3)& (0+255),b
  5623  002C96  517D               	movf	??_floorf& (0+255),w,b
  5624  002C98  1789               	andwf	floorf@u& (0+255),f,b
  5625  002C9A  517E               	movf	(??_floorf+1)& (0+255),w,b
  5626  002C9C  178A               	andwf	(floorf@u+1)& (0+255),f,b
  5627  002C9E  517F               	movf	(??_floorf+2)& (0+255),w,b
  5628  002CA0  178B               	andwf	(floorf@u+2)& (0+255),f,b
  5629  002CA2  5180               	movf	(??_floorf+3)& (0+255),w,b
  5630  002CA4  178C               	andwf	(floorf@u+3)& (0+255),f,b
  5631  002CA6  D036               	goto	l6179
  5632  002CA8                     l6171:
  5633                           
  5634                           ; BSR set to: 0
  5635  002CA8  C089  F07D         	movff	floorf@u,??_floorf
  5636  002CAC  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  5637  002CB0  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  5638  002CB4  C08C  F080         	movff	floorf@u+3,??_floorf+3
  5639  002CB8  0E20               	movlw	32
  5640  002CBA  D005               	goto	u7630
  5641  002CBC                     u7635:
  5642  002CBC  90D8               	bcf	status,0,c
  5643  002CBE  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5644  002CC0  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5645  002CC2  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5646  002CC4  337D               	rrcf	??_floorf& (0+255),f,b
  5647  002CC6                     u7630:
  5648  002CC6  2EE8               	decfsz	wreg,f,c
  5649  002CC8  D7F9               	goto	u7635
  5650  002CCA  517D               	movf	??_floorf& (0+255),w,b
  5651  002CCC  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5652  002CCE  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5653  002CD0  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5654  002CD2  A4D8               	btfss	status,2,c
  5655  002CD4  D008               	goto	l6175
  5656                           
  5657                           ; BSR set to: 0
  5658  002CD6  0E00               	movlw	0
  5659  002CD8  6F89               	movwf	floorf@u& (0+255),b
  5660  002CDA  0E00               	movlw	0
  5661  002CDC  6F8A               	movwf	(floorf@u+1)& (0+255),b
  5662  002CDE  0E00               	movlw	0
  5663  002CE0  6F8B               	movwf	(floorf@u+2)& (0+255),b
  5664  002CE2  0E00               	movlw	0
  5665  002CE4  D016               	goto	L6
  5666  002CE6                     l6175:
  5667                           
  5668                           ; BSR set to: 0
  5669  002CE6  90D8               	bcf	status,0,c
  5670  002CE8  3589               	rlcf	floorf@u& (0+255),w,b
  5671  002CEA  6F7D               	movwf	??_floorf& (0+255),b
  5672  002CEC  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  5673  002CEE  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5674  002CF0  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  5675  002CF2  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5676  002CF4  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  5677  002CF6  6F80               	movwf	(??_floorf+3)& (0+255),b
  5678  002CF8  517D               	movf	??_floorf& (0+255),w,b
  5679  002CFA  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5680  002CFC  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5681  002CFE  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5682  002D00  B4D8               	btfsc	status,2,c
  5683  002D02  D008               	goto	l6179
  5684                           
  5685                           ; BSR set to: 0
  5686  002D04  0E00               	movlw	0
  5687  002D06  6F89               	movwf	floorf@u& (0+255),b
  5688  002D08  0E00               	movlw	0
  5689  002D0A  6F8A               	movwf	(floorf@u+1)& (0+255),b
  5690  002D0C  0E80               	movlw	128
  5691  002D0E  6F8B               	movwf	(floorf@u+2)& (0+255),b
  5692  002D10  0EBF               	movlw	191
  5693  002D12                     L6:
  5694  002D12  6F8C               	movwf	(floorf@u+3)& (0+255),b
  5695  002D14                     l6179:
  5696                           
  5697                           ; BSR set to: 0
  5698  002D14  C089  F079         	movff	floorf@u,?_floorf
  5699  002D18  C08A  F07A         	movff	floorf@u+1,?_floorf+1
  5700  002D1C  C08B  F07B         	movff	floorf@u+2,?_floorf+2
  5701  002D20  C08C  F07C         	movff	floorf@u+3,?_floorf+3
  5702                           
  5703                           ; BSR set to: 0
  5704  002D24  0012               	return		;funcret
  5705  002D26                     __end_of_floorf:
  5706                           	opt callstack 0
  5707                           
  5708 ;; *************** function ___fpclassifyf *****************
  5709 ;; Defined at:
  5710 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;  x               4    0[BANK0 ] float 
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;  u               4   10[BANK0 ] struct .
  5715 ;;  e               2    8[BANK0 ] int 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  2    0[BANK0 ] int 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5725 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5726 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5727 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5728 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5729 ;;Total ram usage:       14 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    2
  5732 ;; This function calls:
  5733 ;;		Nothing
  5734 ;; This function is called by:
  5735 ;;		_efgtoa
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text14
  5740  0036A0                     __ptext14:
  5741                           	opt callstack 0
  5742  0036A0                     ___fpclassifyf:
  5743                           	opt callstack 23
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;incstack = 0
  5747  0036A0  C02E  F06A         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5748  0036A4  C02F  F06B         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5749  0036A8  C030  F06C         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5750  0036AC  C031  F06D         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5751  0036B0  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  5752  0036B4  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5753  0036B8  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5754  0036BC  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5755  0036C0  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5756  0036C4  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5757  0036C8  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5758  0036CC  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5759  0036D0  0E18               	movlw	24
  5760  0036D2  D006               	goto	u7440
  5761  0036D4                     u7445:
  5762  0036D4  0100               	movlb	0	; () banked
  5763  0036D6  90D8               	bcf	status,0,c
  5764  0036D8  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5765  0036DA  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5766  0036DC  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5767  0036DE  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5768  0036E0                     u7440:
  5769  0036E0  2EE8               	decfsz	wreg,f,c
  5770  0036E2  D7F8               	goto	u7445
  5771  0036E4  5164               	movf	??___fpclassifyf& (0+255),w,b
  5772  0036E6  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5773  0036E8  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5774  0036EA  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5775  0036EC  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5776  0036EE  A4D8               	btfss	status,2,c
  5777  0036F0  D019               	goto	l6131
  5778                           
  5779                           ; BSR set to: 0
  5780  0036F2  90D8               	bcf	status,0,c
  5781  0036F4  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5782  0036F6  6F64               	movwf	??___fpclassifyf& (0+255),b
  5783  0036F8  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5784  0036FA  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5785  0036FC  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5786  0036FE  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5787  003700  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5788  003702  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5789  003704  5164               	movf	??___fpclassifyf& (0+255),w,b
  5790  003706  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5791  003708  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5792  00370A  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5793  00370C  A4D8               	btfss	status,2,c
  5794  00370E  D005               	goto	l6127
  5795                           
  5796                           ; BSR set to: 0
  5797  003710  0E00               	movlw	0
  5798  003712  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5799  003714  0E02               	movlw	2
  5800  003716  6F60               	movwf	?___fpclassifyf& (0+255),b
  5801  003718  0012               	return	
  5802  00371A                     l6127:
  5803                           
  5804                           ; BSR set to: 0
  5805  00371A  0E00               	movlw	0
  5806  00371C  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5807  00371E  0E03               	movlw	3
  5808  003720  6F60               	movwf	?___fpclassifyf& (0+255),b
  5809  003722  0012               	return	
  5810  003724                     l6131:
  5811                           
  5812                           ; BSR set to: 0
  5813  003724  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5814  003726  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5815  003728  A4D8               	btfss	status,2,c
  5816  00372A  D01C               	goto	l6137
  5817                           
  5818                           ; BSR set to: 0
  5819  00372C  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5820  003730  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5821  003734  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5822  003738  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5823  00373C  0E09               	movlw	9
  5824  00373E                     u7485:
  5825  00373E  90D8               	bcf	status,0,c
  5826  003740  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5827  003742  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5828  003744  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5829  003746  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5830  003748  2EE8               	decfsz	wreg,f,c
  5831  00374A  D7F9               	goto	u7485
  5832  00374C  5164               	movf	??___fpclassifyf& (0+255),w,b
  5833  00374E  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5834  003750  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5835  003752  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5836  003754  A4D8               	btfss	status,2,c
  5837  003756  D002               	goto	u7490
  5838  003758  0E01               	movlw	1
  5839  00375A  D001               	goto	u7500
  5840  00375C                     u7490:
  5841  00375C  0E00               	movlw	0
  5842  00375E                     u7500:
  5843  00375E  6F60               	movwf	?___fpclassifyf& (0+255),b
  5844  003760  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5845  003762  0012               	return	
  5846  003764                     l6137:
  5847                           
  5848                           ; BSR set to: 0
  5849  003764  0E00               	movlw	0
  5850  003766  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5851  003768  0E04               	movlw	4
  5852  00376A  6F60               	movwf	?___fpclassifyf& (0+255),b
  5853                           
  5854                           ; BSR set to: 0
  5855  00376C  0012               	return		;funcret
  5856  00376E                     __end_of___fpclassifyf:
  5857                           	opt callstack 0
  5858                           
  5859 ;; *************** function ___flsub *****************
  5860 ;; Defined at:
  5861 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  b               4   55[BANK0 ] int 
  5864 ;;  a               4   59[BANK0 ] int 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  4   55[BANK0 ] int 
  5869 ;; Registers used:
  5870 ;;		wreg, status,2, status,0, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5876 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5879 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5880 ;;Total ram usage:        8 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    3
  5883 ;; This function calls:
  5884 ;;		___fladd
  5885 ;; This function is called by:
  5886 ;;		_efgtoa
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text15
  5891  0041F0                     __ptext15:
  5892                           	opt callstack 0
  5893  0041F0                     ___flsub:
  5894                           	opt callstack 22
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;incstack = 0
  5898  0041F0  0E00               	movlw	0
  5899  0041F2  0100               	movlb	0	; () banked
  5900  0041F4  1B9B               	xorwf	___flsub@a& (0+255),f,b
  5901  0041F6  0E00               	movlw	0
  5902  0041F8  1B9C               	xorwf	(___flsub@a+1)& (0+255),f,b
  5903  0041FA  0E00               	movlw	0
  5904  0041FC  1B9D               	xorwf	(___flsub@a+2)& (0+255),f,b
  5905  0041FE  0E80               	movlw	128
  5906  004200  1B9E               	xorwf	(___flsub@a+3)& (0+255),f,b
  5907                           
  5908                           ; BSR set to: 0
  5909  004202  C097  F087         	movff	___flsub@b,___fladd@b
  5910  004206  C098  F088         	movff	___flsub@b+1,___fladd@b+1
  5911  00420A  C099  F089         	movff	___flsub@b+2,___fladd@b+2
  5912  00420E  C09A  F08A         	movff	___flsub@b+3,___fladd@b+3
  5913  004212  C09B  F08B         	movff	___flsub@a,___fladd@a
  5914  004216  C09C  F08C         	movff	___flsub@a+1,___fladd@a+1
  5915  00421A  C09D  F08D         	movff	___flsub@a+2,___fladd@a+2
  5916  00421E  C09E  F08E         	movff	___flsub@a+3,___fladd@a+3
  5917  004222  EC64  F011         	call	___fladd	;wreg free
  5918  004226  C087  F097         	movff	?___fladd,?___flsub
  5919  00422A  C088  F098         	movff	?___fladd+1,?___flsub+1
  5920  00422E  C089  F099         	movff	?___fladd+2,?___flsub+2
  5921  004232  C08A  F09A         	movff	?___fladd+3,?___flsub+3
  5922  004236  0012               	return		;funcret
  5923  004238                     __end_of___flsub:
  5924                           	opt callstack 0
  5925                           
  5926 ;; *************** function ___flneg *****************
  5927 ;; Defined at:
  5928 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  f1              4    0[BANK0 ] int 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  4    0[BANK0 ] int 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5942 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5945 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5946 ;;Total ram usage:        4 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    2
  5949 ;; This function calls:
  5950 ;;		Nothing
  5951 ;; This function is called by:
  5952 ;;		_efgtoa
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text16
  5957  004352                     __ptext16:
  5958                           	opt callstack 0
  5959  004352                     ___flneg:
  5960                           	opt callstack 23
  5961                           
  5962                           ;incstack = 0
  5963  004352  0100               	movlb	0	; () banked
  5964  004354  5160               	movf	___flneg@f1& (0+255),w,b
  5965  004356  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5966  004358  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5967  00435A  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5968  00435C  B4D8               	btfsc	status,2,c
  5969  00435E  D008               	goto	l6589
  5970                           
  5971                           ; BSR set to: 0
  5972  004360  0E00               	movlw	0
  5973  004362  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5974  004364  0E00               	movlw	0
  5975  004366  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5976  004368  0E00               	movlw	0
  5977  00436A  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5978  00436C  0E80               	movlw	128
  5979  00436E  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5980  004370                     l6589:
  5981                           
  5982                           ; BSR set to: 0
  5983  004370  C060  F060         	movff	___flneg@f1,?___flneg
  5984  004374  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  5985  004378  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  5986  00437C  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  5987                           
  5988                           ; BSR set to: 0
  5989  004380  0012               	return		;funcret
  5990  004382                     __end_of___flneg:
  5991                           	opt callstack 0
  5992                           
  5993 ;; *************** function ___flge *****************
  5994 ;; Defined at:
  5995 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  ff1             4   39[BANK0 ] int 
  5998 ;;  ff2             4   43[BANK0 ] int 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;		None               void
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6010 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6012 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6013 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6014 ;;Total ram usage:       12 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; Hardware stack levels required when called:    2
  6017 ;; This function calls:
  6018 ;;		Nothing
  6019 ;; This function is called by:
  6020 ;;		_efgtoa
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           	psect	text17
  6025  0034FE                     __ptext17:
  6026                           	opt callstack 0
  6027  0034FE                     ___flge:
  6028                           	opt callstack 23
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;incstack = 0
  6032  0034FE  0E00               	movlw	0
  6033  003500  0100               	movlb	0	; () banked
  6034  003502  1587               	andwf	___flge@ff1& (0+255),w,b
  6035  003504  6F8F               	movwf	??___flge& (0+255),b
  6036  003506  0E00               	movlw	0
  6037  003508  1588               	andwf	(___flge@ff1+1)& (0+255),w,b
  6038  00350A  6F90               	movwf	(??___flge+1)& (0+255),b
  6039  00350C  0E80               	movlw	128
  6040  00350E  1589               	andwf	(___flge@ff1+2)& (0+255),w,b
  6041  003510  6F91               	movwf	(??___flge+2)& (0+255),b
  6042  003512  0E7F               	movlw	127
  6043  003514  158A               	andwf	(___flge@ff1+3)& (0+255),w,b
  6044  003516  6F92               	movwf	(??___flge+3)& (0+255),b
  6045  003518  518F               	movf	??___flge& (0+255),w,b
  6046  00351A  1190               	iorwf	(??___flge+1)& (0+255),w,b
  6047  00351C  1191               	iorwf	(??___flge+2)& (0+255),w,b
  6048  00351E  1192               	iorwf	(??___flge+3)& (0+255),w,b
  6049  003520  A4D8               	btfss	status,2,c
  6050  003522  D008               	goto	l6567
  6051                           
  6052                           ; BSR set to: 0
  6053  003524  0E00               	movlw	0
  6054  003526  6F87               	movwf	___flge@ff1& (0+255),b
  6055  003528  0E00               	movlw	0
  6056  00352A  6F88               	movwf	(___flge@ff1+1)& (0+255),b
  6057  00352C  0E00               	movlw	0
  6058  00352E  6F89               	movwf	(___flge@ff1+2)& (0+255),b
  6059  003530  0E00               	movlw	0
  6060  003532  6F8A               	movwf	(___flge@ff1+3)& (0+255),b
  6061  003534                     l6567:
  6062                           
  6063                           ; BSR set to: 0
  6064  003534  0E00               	movlw	0
  6065  003536  158B               	andwf	___flge@ff2& (0+255),w,b
  6066  003538  6F8F               	movwf	??___flge& (0+255),b
  6067  00353A  0E00               	movlw	0
  6068  00353C  158C               	andwf	(___flge@ff2+1)& (0+255),w,b
  6069  00353E  6F90               	movwf	(??___flge+1)& (0+255),b
  6070  003540  0E80               	movlw	128
  6071  003542  158D               	andwf	(___flge@ff2+2)& (0+255),w,b
  6072  003544  6F91               	movwf	(??___flge+2)& (0+255),b
  6073  003546  0E7F               	movlw	127
  6074  003548  158E               	andwf	(___flge@ff2+3)& (0+255),w,b
  6075  00354A  6F92               	movwf	(??___flge+3)& (0+255),b
  6076  00354C  518F               	movf	??___flge& (0+255),w,b
  6077  00354E  1190               	iorwf	(??___flge+1)& (0+255),w,b
  6078  003550  1191               	iorwf	(??___flge+2)& (0+255),w,b
  6079  003552  1192               	iorwf	(??___flge+3)& (0+255),w,b
  6080  003554  A4D8               	btfss	status,2,c
  6081  003556  D008               	goto	l6571
  6082                           
  6083                           ; BSR set to: 0
  6084  003558  0E00               	movlw	0
  6085  00355A  6F8B               	movwf	___flge@ff2& (0+255),b
  6086  00355C  0E00               	movlw	0
  6087  00355E  6F8C               	movwf	(___flge@ff2+1)& (0+255),b
  6088  003560  0E00               	movlw	0
  6089  003562  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
  6090  003564  0E00               	movlw	0
  6091  003566  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
  6092  003568                     l6571:
  6093                           
  6094                           ; BSR set to: 0
  6095  003568  AF8A               	btfss	(___flge@ff1+3)& (0+255),7,b
  6096  00356A  D009               	goto	l6575
  6097                           
  6098                           ; BSR set to: 0
  6099  00356C  6D87               	negf	___flge@ff1& (0+255),b
  6100  00356E  1F88               	comf	(___flge@ff1+1)& (0+255),f,b
  6101  003570  B0D8               	btfsc	status,0,c
  6102  003572  2B88               	incf	(___flge@ff1+1)& (0+255),f,b
  6103  003574  1F89               	comf	(___flge@ff1+2)& (0+255),f,b
  6104  003576  B0D8               	btfsc	status,0,c
  6105  003578  2B89               	incf	(___flge@ff1+2)& (0+255),f,b
  6106  00357A  0E80               	movlw	128
  6107  00357C  578A               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6108  00357E                     l6575:
  6109                           
  6110                           ; BSR set to: 0
  6111  00357E  AF8E               	btfss	(___flge@ff2+3)& (0+255),7,b
  6112  003580  D009               	goto	l788
  6113                           
  6114                           ; BSR set to: 0
  6115  003582  6D8B               	negf	___flge@ff2& (0+255),b
  6116  003584  1F8C               	comf	(___flge@ff2+1)& (0+255),f,b
  6117  003586  B0D8               	btfsc	status,0,c
  6118  003588  2B8C               	incf	(___flge@ff2+1)& (0+255),f,b
  6119  00358A  1F8D               	comf	(___flge@ff2+2)& (0+255),f,b
  6120  00358C  B0D8               	btfsc	status,0,c
  6121  00358E  2B8D               	incf	(___flge@ff2+2)& (0+255),f,b
  6122  003590  0E80               	movlw	128
  6123  003592  578E               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6124  003594                     l788:
  6125                           
  6126                           ; BSR set to: 0
  6127  003594  0E00               	movlw	0
  6128  003596  1B87               	xorwf	___flge@ff1& (0+255),f,b
  6129  003598  0E00               	movlw	0
  6130  00359A  1B88               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6131  00359C  0E00               	movlw	0
  6132  00359E  1B89               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6133  0035A0  0E80               	movlw	128
  6134  0035A2  1B8A               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6135  0035A4  0E00               	movlw	0
  6136  0035A6  1B8B               	xorwf	___flge@ff2& (0+255),f,b
  6137  0035A8  0E00               	movlw	0
  6138  0035AA  1B8C               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6139  0035AC  0E00               	movlw	0
  6140  0035AE  1B8D               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6141  0035B0  0E80               	movlw	128
  6142  0035B2  1B8E               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6143  0035B4  518B               	movf	___flge@ff2& (0+255),w,b
  6144  0035B6  5D87               	subwf	___flge@ff1& (0+255),w,b
  6145  0035B8  518C               	movf	(___flge@ff2+1)& (0+255),w,b
  6146  0035BA  5988               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6147  0035BC  518D               	movf	(___flge@ff2+2)& (0+255),w,b
  6148  0035BE  5989               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6149  0035C0  518E               	movf	(___flge@ff2+3)& (0+255),w,b
  6150  0035C2  598A               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6151  0035C4  B0D8               	btfsc	status,0,c
  6152  0035C6  D002               	goto	l6581
  6153                           
  6154                           ; BSR set to: 0
  6155  0035C8  90D8               	bcf	status,0,c
  6156  0035CA  0012               	return	
  6157  0035CC                     l6581:
  6158                           
  6159                           ; BSR set to: 0
  6160  0035CC  80D8               	bsf	status,0,c
  6161                           
  6162                           ; BSR set to: 0
  6163  0035CE  0012               	return		;funcret
  6164  0035D0                     __end_of___flge:
  6165                           	opt callstack 0
  6166                           
  6167 ;; *************** function ___fleq *****************
  6168 ;; Defined at:
  6169 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  ff1             4    0[BANK0 ] int 
  6172 ;;  ff2             4    4[BANK0 ] int 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;		None               void
  6177 ;; Registers used:
  6178 ;;		wreg, status,2, status,0
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6184 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6186 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6187 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6188 ;;Total ram usage:       12 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    2
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		_efgtoa
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text18
  6199  003B8A                     __ptext18:
  6200                           	opt callstack 0
  6201  003B8A                     ___fleq:
  6202                           	opt callstack 23
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;incstack = 0
  6206  003B8A  0E00               	movlw	0
  6207  003B8C  0100               	movlb	0	; () banked
  6208  003B8E  1560               	andwf	___fleq@ff1& (0+255),w,b
  6209  003B90  6F68               	movwf	??___fleq& (0+255),b
  6210  003B92  0E00               	movlw	0
  6211  003B94  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6212  003B96  6F69               	movwf	(??___fleq+1)& (0+255),b
  6213  003B98  0E80               	movlw	128
  6214  003B9A  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6215  003B9C  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6216  003B9E  0E7F               	movlw	127
  6217  003BA0  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6218  003BA2  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6219  003BA4  5168               	movf	??___fleq& (0+255),w,b
  6220  003BA6  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6221  003BA8  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6222  003BAA  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6223  003BAC  A4D8               	btfss	status,2,c
  6224  003BAE  D008               	goto	l6551
  6225                           
  6226                           ; BSR set to: 0
  6227  003BB0  0E00               	movlw	0
  6228  003BB2  6F60               	movwf	___fleq@ff1& (0+255),b
  6229  003BB4  0E00               	movlw	0
  6230  003BB6  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6231  003BB8  0E00               	movlw	0
  6232  003BBA  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6233  003BBC  0E00               	movlw	0
  6234  003BBE  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6235  003BC0                     l6551:
  6236                           
  6237                           ; BSR set to: 0
  6238  003BC0  0E00               	movlw	0
  6239  003BC2  1564               	andwf	___fleq@ff2& (0+255),w,b
  6240  003BC4  6F68               	movwf	??___fleq& (0+255),b
  6241  003BC6  0E00               	movlw	0
  6242  003BC8  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6243  003BCA  6F69               	movwf	(??___fleq+1)& (0+255),b
  6244  003BCC  0E80               	movlw	128
  6245  003BCE  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6246  003BD0  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6247  003BD2  0E7F               	movlw	127
  6248  003BD4  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6249  003BD6  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6250  003BD8  5168               	movf	??___fleq& (0+255),w,b
  6251  003BDA  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6252  003BDC  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6253  003BDE  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6254  003BE0  A4D8               	btfss	status,2,c
  6255  003BE2  D008               	goto	l6555
  6256                           
  6257                           ; BSR set to: 0
  6258  003BE4  0E00               	movlw	0
  6259  003BE6  6F64               	movwf	___fleq@ff2& (0+255),b
  6260  003BE8  0E00               	movlw	0
  6261  003BEA  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6262  003BEC  0E00               	movlw	0
  6263  003BEE  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6264  003BF0  0E00               	movlw	0
  6265  003BF2  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6266  003BF4                     l6555:
  6267                           
  6268                           ; BSR set to: 0
  6269  003BF4  5164               	movf	___fleq@ff2& (0+255),w,b
  6270  003BF6  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6271  003BF8  E10A               	bnz	u8240
  6272  003BFA  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6273  003BFC  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6274  003BFE  E107               	bnz	u8240
  6275  003C00  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6276  003C02  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6277  003C04  E104               	bnz	u8240
  6278  003C06  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6279  003C08  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6280  003C0A  B4D8               	btfsc	status,2,c
  6281  003C0C  D002               	goto	l6559
  6282  003C0E                     u8240:
  6283                           
  6284                           ; BSR set to: 0
  6285  003C0E  90D8               	bcf	status,0,c
  6286  003C10  0012               	return	
  6287  003C12                     l6559:
  6288                           
  6289                           ; BSR set to: 0
  6290  003C12  80D8               	bsf	status,0,c
  6291                           
  6292                           ; BSR set to: 0
  6293  003C14  0012               	return		;funcret
  6294  003C16                     __end_of___fleq:
  6295                           	opt callstack 0
  6296                           
  6297 ;; *************** function ___fldiv *****************
  6298 ;; Defined at:
  6299 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  b               4    0[BANK0 ] int 
  6302 ;;  a               4    4[BANK0 ] int 
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;  grs             4   19[BANK0 ] unsigned long 
  6305 ;;  rem             4   12[BANK0 ] unsigned long 
  6306 ;;  new_exp         2   17[BANK0 ] short 
  6307 ;;  aexp            1   24[BANK0 ] unsigned char 
  6308 ;;  bexp            1   23[BANK0 ] unsigned char 
  6309 ;;  sign            1   16[BANK0 ] unsigned char 
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  4    0[BANK0 ] unsigned char 
  6312 ;; Registers used:
  6313 ;;		wreg, status,2, status,0
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6319 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6320 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6321 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;Total ram usage:       25 bytes
  6324 ;; Hardware stack levels used:    1
  6325 ;; Hardware stack levels required when called:    2
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		_efgtoa
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           	psect	text19
  6334  0028E2                     __ptext19:
  6335                           	opt callstack 0
  6336  0028E2                     ___fldiv:
  6337                           	opt callstack 23
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;incstack = 0
  6341  0028E2  0100               	movlb	0	; () banked
  6342  0028E4  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6343  0028E6  0B80               	andlw	128
  6344  0028E8  6F70               	movwf	___fldiv@sign& (0+255),b
  6345  0028EA  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6346  0028EC  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  6347  0028EE  6F77               	movwf	___fldiv@bexp& (0+255),b
  6348                           
  6349                           ; BSR set to: 0
  6350  0028F0  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
  6351                           
  6352                           ; BSR set to: 0
  6353  0028F2  8177               	bsf	___fldiv@bexp& (0+255),0,b
  6354                           
  6355                           ; BSR set to: 0
  6356  0028F4  5177               	movf	___fldiv@bexp& (0+255),w,b
  6357  0028F6  B4D8               	btfsc	status,2,c
  6358  0028F8  D00D               	goto	l6209
  6359                           
  6360                           ; BSR set to: 0
  6361  0028FA  2977               	incf	___fldiv@bexp& (0+255),w,b
  6362  0028FC  A4D8               	btfss	status,2,c
  6363  0028FE  D008               	goto	l6205
  6364                           
  6365                           ; BSR set to: 0
  6366  002900  0E00               	movlw	0
  6367  002902  6F60               	movwf	___fldiv@b& (0+255),b
  6368  002904  0E00               	movlw	0
  6369  002906  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6370  002908  0E00               	movlw	0
  6371  00290A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6372  00290C  0E00               	movlw	0
  6373  00290E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6374  002910                     l6205:
  6375                           
  6376                           ; BSR set to: 0
  6377  002910  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6378  002912  D006               	goto	L7
  6379  002914                     l6209:
  6380                           
  6381                           ; BSR set to: 0
  6382  002914  0E00               	movlw	0
  6383  002916  6F60               	movwf	___fldiv@b& (0+255),b
  6384  002918  0E00               	movlw	0
  6385  00291A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6386  00291C  0E00               	movlw	0
  6387  00291E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6388  002920                     L7:
  6389  002920  0E00               	movlw	0
  6390  002922  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6391                           
  6392                           ; BSR set to: 0
  6393  002924  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6394  002926  0B80               	andlw	128
  6395  002928  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  6396                           
  6397                           ; BSR set to: 0
  6398  00292A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6399  00292C  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  6400  00292E  6F78               	movwf	___fldiv@aexp& (0+255),b
  6401                           
  6402                           ; BSR set to: 0
  6403  002930  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
  6404                           
  6405                           ; BSR set to: 0
  6406  002932  8178               	bsf	___fldiv@aexp& (0+255),0,b
  6407                           
  6408                           ; BSR set to: 0
  6409  002934  5178               	movf	___fldiv@aexp& (0+255),w,b
  6410  002936  B4D8               	btfsc	status,2,c
  6411  002938  D00D               	goto	l6229
  6412                           
  6413                           ; BSR set to: 0
  6414  00293A  2978               	incf	___fldiv@aexp& (0+255),w,b
  6415  00293C  A4D8               	btfss	status,2,c
  6416  00293E  D008               	goto	l6225
  6417                           
  6418                           ; BSR set to: 0
  6419  002940  0E00               	movlw	0
  6420  002942  6F64               	movwf	___fldiv@a& (0+255),b
  6421  002944  0E00               	movlw	0
  6422  002946  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6423  002948  0E00               	movlw	0
  6424  00294A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6425  00294C  0E00               	movlw	0
  6426  00294E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6427  002950                     l6225:
  6428                           
  6429                           ; BSR set to: 0
  6430  002950  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  6431  002952  D006               	goto	L8
  6432  002954                     l6229:
  6433                           
  6434                           ; BSR set to: 0
  6435  002954  0E00               	movlw	0
  6436  002956  6F64               	movwf	___fldiv@a& (0+255),b
  6437  002958  0E00               	movlw	0
  6438  00295A  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6439  00295C  0E00               	movlw	0
  6440  00295E  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6441  002960                     L8:
  6442  002960  0E00               	movlw	0
  6443  002962  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6444                           
  6445                           ; BSR set to: 0
  6446  002964  5164               	movf	___fldiv@a& (0+255),w,b
  6447  002966  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6448  002968  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6449  00296A  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6450  00296C  A4D8               	btfss	status,2,c
  6451  00296E  D017               	goto	l6243
  6452                           
  6453                           ; BSR set to: 0
  6454  002970  0E00               	movlw	0
  6455  002972  6F60               	movwf	___fldiv@b& (0+255),b
  6456  002974  0E00               	movlw	0
  6457  002976  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6458  002978  0E00               	movlw	0
  6459  00297A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6460  00297C  0E00               	movlw	0
  6461  00297E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6462                           
  6463                           ; BSR set to: 0
  6464  002980  0E80               	movlw	128
  6465  002982  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6466  002984  0E7F               	movlw	127
  6467  002986  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6468  002988                     l6237:
  6469                           
  6470                           ; BSR set to: 0
  6471  002988  5170               	movf	___fldiv@sign& (0+255),w,b
  6472  00298A  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6473                           
  6474                           ; BSR set to: 0
  6475  00298C  C060  F060         	movff	___fldiv@b,?___fldiv
  6476  002990  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  6477  002994  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  6478  002998  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  6479  00299C  0012               	return	
  6480  00299E                     l6243:
  6481                           
  6482                           ; BSR set to: 0
  6483  00299E  5177               	movf	___fldiv@bexp& (0+255),w,b
  6484  0029A0  A4D8               	btfss	status,2,c
  6485  0029A2  D009               	goto	l6251
  6486                           
  6487                           ; BSR set to: 0
  6488                           
  6489                           ; BSR set to: 0
  6490  0029A4  0E00               	movlw	0
  6491  0029A6  6F60               	movwf	?___fldiv& (0+255),b
  6492  0029A8  0E00               	movlw	0
  6493  0029AA  6F61               	movwf	(?___fldiv+1)& (0+255),b
  6494  0029AC  0E00               	movlw	0
  6495  0029AE  6F62               	movwf	(?___fldiv+2)& (0+255),b
  6496  0029B0  0E00               	movlw	0
  6497  0029B2  6F63               	movwf	(?___fldiv+3)& (0+255),b
  6498  0029B4  0012               	return	
  6499  0029B6                     l6251:
  6500                           
  6501                           ; BSR set to: 0
  6502  0029B6  5178               	movf	___fldiv@aexp& (0+255),w,b
  6503  0029B8  C077  F068         	movff	___fldiv@bexp,??___fldiv
  6504  0029BC  6B69               	clrf	(??___fldiv+1)& (0+255),b
  6505  0029BE  5F68               	subwf	??___fldiv& (0+255),f,b
  6506  0029C0  0E00               	movlw	0
  6507  0029C2  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  6508  0029C4  0E7F               	movlw	127
  6509  0029C6  2568               	addwf	??___fldiv& (0+255),w,b
  6510  0029C8  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6511  0029CA  0E00               	movlw	0
  6512  0029CC  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  6513  0029CE  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6514                           
  6515                           ; BSR set to: 0
  6516  0029D0  C060  F06C         	movff	___fldiv@b,___fldiv@rem
  6517  0029D4  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
  6518  0029D8  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
  6519  0029DC  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
  6520                           
  6521                           ; BSR set to: 0
  6522  0029E0  0E00               	movlw	0
  6523  0029E2  6F60               	movwf	___fldiv@b& (0+255),b
  6524  0029E4  0E00               	movlw	0
  6525  0029E6  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6526  0029E8  0E00               	movlw	0
  6527  0029EA  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6528  0029EC  0E00               	movlw	0
  6529  0029EE  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6530                           
  6531                           ; BSR set to: 0
  6532  0029F0  0E00               	movlw	0
  6533  0029F2  6F73               	movwf	___fldiv@grs& (0+255),b
  6534  0029F4  0E00               	movlw	0
  6535  0029F6  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  6536  0029F8  0E00               	movlw	0
  6537  0029FA  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  6538  0029FC  0E00               	movlw	0
  6539  0029FE  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  6540                           
  6541                           ; BSR set to: 0
  6542  002A00  0E00               	movlw	0
  6543  002A02  6F78               	movwf	___fldiv@aexp& (0+255),b
  6544  002A04  D028               	goto	l1107
  6545  002A06                     l6261:
  6546                           
  6547                           ; BSR set to: 0
  6548  002A06  5178               	movf	___fldiv@aexp& (0+255),w,b
  6549  002A08  B4D8               	btfsc	status,2,c
  6550  002A0A  D011               	goto	l6269
  6551                           
  6552                           ; BSR set to: 0
  6553  002A0C  90D8               	bcf	status,0,c
  6554  002A0E  376C               	rlcf	___fldiv@rem& (0+255),f,b
  6555  002A10  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6556  002A12  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6557  002A14  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6558  002A16  90D8               	bcf	status,0,c
  6559  002A18  3760               	rlcf	___fldiv@b& (0+255),f,b
  6560  002A1A  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6561  002A1C  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6562  002A1E  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6563                           
  6564                           ; BSR set to: 0
  6565  002A20  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6566                           
  6567                           ; BSR set to: 0
  6568  002A22  8160               	bsf	___fldiv@b& (0+255),0,b
  6569                           
  6570                           ; BSR set to: 0
  6571  002A24  90D8               	bcf	status,0,c
  6572  002A26  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6573  002A28  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6574  002A2A  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6575  002A2C  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6576  002A2E                     l6269:
  6577                           
  6578                           ; BSR set to: 0
  6579  002A2E  5164               	movf	___fldiv@a& (0+255),w,b
  6580  002A30  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  6581  002A32  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6582  002A34  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6583  002A36  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6584  002A38  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6585  002A3A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6586  002A3C  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6587  002A3E  A0D8               	btfss	status,0,c
  6588  002A40  D009               	goto	l6275
  6589                           
  6590                           ; BSR set to: 0
  6591  002A42  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6592                           
  6593                           ; BSR set to: 0
  6594  002A44  5164               	movf	___fldiv@a& (0+255),w,b
  6595  002A46  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  6596  002A48  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6597  002A4A  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6598  002A4C  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6599  002A4E  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6600  002A50  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6601  002A52  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6602  002A54                     l6275:
  6603                           
  6604                           ; BSR set to: 0
  6605  002A54  2B78               	incf	___fldiv@aexp& (0+255),f,b
  6606  002A56                     l1107:
  6607                           
  6608                           ; BSR set to: 0
  6609  002A56  0E19               	movlw	25
  6610  002A58  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  6611  002A5A  D7D5               	goto	l6261
  6612                           
  6613                           ; BSR set to: 0
  6614  002A5C  516C               	movf	___fldiv@rem& (0+255),w,b
  6615  002A5E  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6616  002A60  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6617  002A62  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6618  002A64  B4D8               	btfsc	status,2,c
  6619  002A66  D011               	goto	l6287
  6620                           
  6621                           ; BSR set to: 0
  6622  002A68  8173               	bsf	___fldiv@grs& (0+255),0,b
  6623  002A6A  D00F               	goto	l6287
  6624  002A6C                     l6281:
  6625                           
  6626                           ; BSR set to: 0
  6627  002A6C  90D8               	bcf	status,0,c
  6628  002A6E  3760               	rlcf	___fldiv@b& (0+255),f,b
  6629  002A70  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6630  002A72  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6631  002A74  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6632                           
  6633                           ; BSR set to: 0
  6634  002A76  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6635                           
  6636                           ; BSR set to: 0
  6637  002A78  8160               	bsf	___fldiv@b& (0+255),0,b
  6638                           
  6639                           ; BSR set to: 0
  6640  002A7A  90D8               	bcf	status,0,c
  6641  002A7C  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6642  002A7E  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6643  002A80  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6644  002A82  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6645  002A84  0771               	decf	___fldiv@new_exp& (0+255),f,b
  6646  002A86  A0D8               	btfss	status,0,c
  6647  002A88  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6648  002A8A                     l6287:
  6649                           
  6650                           ; BSR set to: 0
  6651  002A8A  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6652  002A8C  D7EF               	goto	l6281
  6653                           
  6654                           ; BSR set to: 0
  6655  002A8E  0E00               	movlw	0
  6656  002A90  6F78               	movwf	___fldiv@aexp& (0+255),b
  6657                           
  6658                           ; BSR set to: 0
  6659  002A92  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6660  002A94  D017               	goto	l1118
  6661                           
  6662                           ; BSR set to: 0
  6663  002A96  0EFF               	movlw	255
  6664  002A98  1573               	andwf	___fldiv@grs& (0+255),w,b
  6665  002A9A  6F68               	movwf	??___fldiv& (0+255),b
  6666  002A9C  0EFF               	movlw	255
  6667  002A9E  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6668  002AA0  6F69               	movwf	(??___fldiv+1)& (0+255),b
  6669  002AA2  0EFF               	movlw	255
  6670  002AA4  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6671  002AA6  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  6672  002AA8  0E7F               	movlw	127
  6673  002AAA  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6674  002AAC  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  6675  002AAE  5168               	movf	??___fldiv& (0+255),w,b
  6676  002AB0  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  6677  002AB2  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  6678  002AB4  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  6679  002AB6  B4D8               	btfsc	status,2,c
  6680  002AB8  D003               	goto	l1119
  6681  002ABA                     u7840:
  6682                           
  6683                           ; BSR set to: 0
  6684  002ABA  0E01               	movlw	1
  6685  002ABC  6F78               	movwf	___fldiv@aexp& (0+255),b
  6686  002ABE  D002               	goto	l1118
  6687  002AC0                     l1119:
  6688                           
  6689                           ; BSR set to: 0
  6690  002AC0  B160               	btfsc	___fldiv@b& (0+255),0,b
  6691  002AC2  D7FB               	goto	u7840
  6692  002AC4                     l1118:
  6693                           
  6694                           ; BSR set to: 0
  6695  002AC4  5178               	movf	___fldiv@aexp& (0+255),w,b
  6696  002AC6  B4D8               	btfsc	status,2,c
  6697  002AC8  D01F               	goto	l6307
  6698                           
  6699                           ; BSR set to: 0
  6700  002ACA  0E01               	movlw	1
  6701  002ACC  2760               	addwf	___fldiv@b& (0+255),f,b
  6702  002ACE  0E00               	movlw	0
  6703  002AD0  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6704  002AD2  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6705  002AD4  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6706                           
  6707                           ; BSR set to: 0
  6708  002AD6  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  6709  002AD8  D017               	goto	l6307
  6710                           
  6711                           ; BSR set to: 0
  6712  002ADA  C060  F068         	movff	___fldiv@b,??___fldiv
  6713  002ADE  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
  6714  002AE2  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
  6715  002AE6  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
  6716  002AEA  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  6717  002AEC  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  6718  002AEE  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  6719  002AF0  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  6720  002AF2  3368               	rrcf	??___fldiv& (0+255),f,b
  6721  002AF4  C068  F060         	movff	??___fldiv,___fldiv@b
  6722  002AF8  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
  6723  002AFC  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
  6724  002B00  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
  6725                           
  6726                           ; BSR set to: 0
  6727  002B04  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  6728  002B06  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6729  002B08                     l6307:
  6730                           
  6731                           ; BSR set to: 0
  6732  002B08  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6733  002B0A  D010               	goto	l6311
  6734  002B0C  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6735  002B0E  E103               	bnz	u7880
  6736  002B10  2971               	incf	___fldiv@new_exp& (0+255),w,b
  6737  002B12  A0D8               	btfss	status,0,c
  6738  002B14  D00B               	goto	l6311
  6739  002B16                     u7880:
  6740                           
  6741                           ; BSR set to: 0
  6742  002B16  0E00               	movlw	0
  6743  002B18  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6744  002B1A  6971               	setf	___fldiv@new_exp& (0+255),b
  6745  002B1C  0E00               	movlw	0
  6746  002B1E  6F60               	movwf	___fldiv@b& (0+255),b
  6747  002B20  0E00               	movlw	0
  6748  002B22  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6749  002B24  0E00               	movlw	0
  6750  002B26  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6751  002B28  0E00               	movlw	0
  6752  002B2A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6753  002B2C                     l6311:
  6754                           
  6755                           ; BSR set to: 0
  6756  002B2C  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6757  002B2E  D005               	goto	u7890
  6758  002B30  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6759  002B32  E111               	bnz	l6315
  6760  002B34  0571               	decf	___fldiv@new_exp& (0+255),w,b
  6761  002B36  B0D8               	btfsc	status,0,c
  6762  002B38  D00E               	goto	l6315
  6763  002B3A                     u7890:
  6764                           
  6765                           ; BSR set to: 0
  6766  002B3A  0E00               	movlw	0
  6767  002B3C  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6768  002B3E  0E00               	movlw	0
  6769  002B40  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6770  002B42  0E00               	movlw	0
  6771  002B44  6F60               	movwf	___fldiv@b& (0+255),b
  6772  002B46  0E00               	movlw	0
  6773  002B48  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6774  002B4A  0E00               	movlw	0
  6775  002B4C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6776  002B4E  0E00               	movlw	0
  6777  002B50  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6778  002B52  0E00               	movlw	0
  6779  002B54  6F70               	movwf	___fldiv@sign& (0+255),b
  6780  002B56                     l6315:
  6781                           
  6782                           ; BSR set to: 0
  6783  002B56  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
  6784                           
  6785                           ; BSR set to: 0
  6786  002B5A  A177               	btfss	___fldiv@bexp& (0+255),0,b
  6787  002B5C  D002               	goto	l6321
  6788                           
  6789                           ; BSR set to: 0
  6790  002B5E  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6791  002B60  D001               	goto	l6323
  6792  002B62                     l6321:
  6793                           
  6794                           ; BSR set to: 0
  6795  002B62  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  6796  002B64                     l6323:
  6797                           
  6798                           ; BSR set to: 0
  6799  002B64  90D8               	bcf	status,0,c
  6800  002B66  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  6801  002B68  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6802  002B6A  D70E               	goto	l6237
  6803  002B6C                     __end_of___fldiv:
  6804                           	opt callstack 0
  6805                           
  6806 ;; *************** function ___awmod *****************
  6807 ;; Defined at:
  6808 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;  dividend        2    0[BANK0 ] int 
  6811 ;;  divisor         2    2[BANK0 ] int 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  sign            1    5[BANK0 ] unsigned char 
  6814 ;;  counter         1    4[BANK0 ] unsigned char 
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  2    0[BANK0 ] int 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6824 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6825 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6827 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6828 ;;Total ram usage:        6 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; Hardware stack levels required when called:    2
  6831 ;; This function calls:
  6832 ;;		Nothing
  6833 ;; This function is called by:
  6834 ;;		_efgtoa
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text20
  6839  003F1C                     __ptext20:
  6840                           	opt callstack 0
  6841  003F1C                     ___awmod:
  6842                           	opt callstack 23
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;incstack = 0
  6846  003F1C  0E00               	movlw	0
  6847  003F1E  0100               	movlb	0	; () banked
  6848  003F20  6F65               	movwf	___awmod@sign& (0+255),b
  6849                           
  6850                           ; BSR set to: 0
  6851  003F22  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6852  003F24  D006               	goto	l6519
  6853                           
  6854                           ; BSR set to: 0
  6855  003F26  6D60               	negf	___awmod@dividend& (0+255),b
  6856  003F28  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6857  003F2A  B0D8               	btfsc	status,0,c
  6858  003F2C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6859                           
  6860                           ; BSR set to: 0
  6861  003F2E  0E01               	movlw	1
  6862  003F30  6F65               	movwf	___awmod@sign& (0+255),b
  6863  003F32                     l6519:
  6864                           
  6865                           ; BSR set to: 0
  6866  003F32  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6867  003F34  D004               	goto	l6523
  6868                           
  6869                           ; BSR set to: 0
  6870  003F36  6D62               	negf	___awmod@divisor& (0+255),b
  6871  003F38  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  6872  003F3A  B0D8               	btfsc	status,0,c
  6873  003F3C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  6874  003F3E                     l6523:
  6875                           
  6876                           ; BSR set to: 0
  6877  003F3E  5162               	movf	___awmod@divisor& (0+255),w,b
  6878  003F40  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6879  003F42  B4D8               	btfsc	status,2,c
  6880  003F44  D018               	goto	l6539
  6881                           
  6882                           ; BSR set to: 0
  6883  003F46  0E01               	movlw	1
  6884  003F48  6F64               	movwf	___awmod@counter& (0+255),b
  6885  003F4A  D004               	goto	l6529
  6886  003F4C                     l6527:
  6887                           
  6888                           ; BSR set to: 0
  6889  003F4C  90D8               	bcf	status,0,c
  6890  003F4E  3762               	rlcf	___awmod@divisor& (0+255),f,b
  6891  003F50  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6892  003F52  2B64               	incf	___awmod@counter& (0+255),f,b
  6893  003F54                     l6529:
  6894                           
  6895                           ; BSR set to: 0
  6896  003F54  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6897  003F56  D7FA               	goto	l6527
  6898  003F58                     u8190:
  6899                           
  6900                           ; BSR set to: 0
  6901  003F58  5162               	movf	___awmod@divisor& (0+255),w,b
  6902  003F5A  5D60               	subwf	___awmod@dividend& (0+255),w,b
  6903  003F5C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6904  003F5E  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6905  003F60  A0D8               	btfss	status,0,c
  6906  003F62  D004               	goto	l6535
  6907                           
  6908                           ; BSR set to: 0
  6909  003F64  5162               	movf	___awmod@divisor& (0+255),w,b
  6910  003F66  5F60               	subwf	___awmod@dividend& (0+255),f,b
  6911  003F68  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6912  003F6A  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6913  003F6C                     l6535:
  6914                           
  6915                           ; BSR set to: 0
  6916  003F6C  90D8               	bcf	status,0,c
  6917  003F6E  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6918  003F70  3362               	rrcf	___awmod@divisor& (0+255),f,b
  6919                           
  6920                           ; BSR set to: 0
  6921  003F72  2F64               	decfsz	___awmod@counter& (0+255),f,b
  6922  003F74  D7F1               	goto	u8190
  6923  003F76                     l6539:
  6924                           
  6925                           ; BSR set to: 0
  6926  003F76  5165               	movf	___awmod@sign& (0+255),w,b
  6927  003F78  B4D8               	btfsc	status,2,c
  6928  003F7A  D004               	goto	l6543
  6929                           
  6930                           ; BSR set to: 0
  6931  003F7C  6D60               	negf	___awmod@dividend& (0+255),b
  6932  003F7E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6933  003F80  B0D8               	btfsc	status,0,c
  6934  003F82  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6935  003F84                     l6543:
  6936                           
  6937                           ; BSR set to: 0
  6938  003F84  C060  F060         	movff	___awmod@dividend,?___awmod
  6939  003F88  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  6940                           
  6941                           ; BSR set to: 0
  6942  003F8C  0012               	return		;funcret
  6943  003F8E                     __end_of___awmod:
  6944                           	opt callstack 0
  6945                           
  6946 ;; *************** function ___awdiv *****************
  6947 ;; Defined at:
  6948 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  dividend        2    0[BANK0 ] int 
  6951 ;;  divisor         2    2[BANK0 ] int 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  quotient        2    6[BANK0 ] int 
  6954 ;;  sign            1    5[BANK0 ] unsigned char 
  6955 ;;  counter         1    4[BANK0 ] unsigned char 
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  2    0[BANK0 ] int 
  6958 ;; Registers used:
  6959 ;;		wreg, status,2, status,0
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6965 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6966 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6968 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6969 ;;Total ram usage:        8 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; Hardware stack levels required when called:    2
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_efgtoa
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text21
  6980  003C9E                     __ptext21:
  6981                           	opt callstack 0
  6982  003C9E                     ___awdiv:
  6983                           	opt callstack 23
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;incstack = 0
  6987  003C9E  0E00               	movlw	0
  6988  003CA0  0100               	movlb	0	; () banked
  6989  003CA2  6F65               	movwf	___awdiv@sign& (0+255),b
  6990                           
  6991                           ; BSR set to: 0
  6992  003CA4  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6993  003CA6  D006               	goto	l6475
  6994                           
  6995                           ; BSR set to: 0
  6996  003CA8  6D62               	negf	___awdiv@divisor& (0+255),b
  6997  003CAA  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6998  003CAC  B0D8               	btfsc	status,0,c
  6999  003CAE  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7000                           
  7001                           ; BSR set to: 0
  7002  003CB0  0E01               	movlw	1
  7003  003CB2  6F65               	movwf	___awdiv@sign& (0+255),b
  7004  003CB4                     l6475:
  7005                           
  7006                           ; BSR set to: 0
  7007  003CB4  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7008  003CB6  D006               	goto	l6481
  7009                           
  7010                           ; BSR set to: 0
  7011  003CB8  6D60               	negf	___awdiv@dividend& (0+255),b
  7012  003CBA  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7013  003CBC  B0D8               	btfsc	status,0,c
  7014  003CBE  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7015                           
  7016                           ; BSR set to: 0
  7017  003CC0  0E01               	movlw	1
  7018  003CC2  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7019  003CC4                     l6481:
  7020                           
  7021                           ; BSR set to: 0
  7022  003CC4  0E00               	movlw	0
  7023  003CC6  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7024  003CC8  0E00               	movlw	0
  7025  003CCA  6F66               	movwf	___awdiv@quotient& (0+255),b
  7026                           
  7027                           ; BSR set to: 0
  7028  003CCC  5162               	movf	___awdiv@divisor& (0+255),w,b
  7029  003CCE  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7030  003CD0  B4D8               	btfsc	status,2,c
  7031  003CD2  D01C               	goto	l6503
  7032                           
  7033                           ; BSR set to: 0
  7034  003CD4  0E01               	movlw	1
  7035  003CD6  6F64               	movwf	___awdiv@counter& (0+255),b
  7036  003CD8  D004               	goto	l6489
  7037  003CDA                     l6487:
  7038                           
  7039                           ; BSR set to: 0
  7040  003CDA  90D8               	bcf	status,0,c
  7041  003CDC  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7042  003CDE  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7043  003CE0  2B64               	incf	___awdiv@counter& (0+255),f,b
  7044  003CE2                     l6489:
  7045                           
  7046                           ; BSR set to: 0
  7047  003CE2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7048  003CE4  D7FA               	goto	l6487
  7049  003CE6                     u8130:
  7050                           
  7051                           ; BSR set to: 0
  7052  003CE6  90D8               	bcf	status,0,c
  7053  003CE8  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7054  003CEA  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7055                           
  7056                           ; BSR set to: 0
  7057  003CEC  5162               	movf	___awdiv@divisor& (0+255),w,b
  7058  003CEE  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7059  003CF0  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7060  003CF2  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7061  003CF4  A0D8               	btfss	status,0,c
  7062  003CF6  D005               	goto	l6499
  7063                           
  7064                           ; BSR set to: 0
  7065  003CF8  5162               	movf	___awdiv@divisor& (0+255),w,b
  7066  003CFA  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7067  003CFC  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7068  003CFE  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7069                           
  7070                           ; BSR set to: 0
  7071  003D00  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7072  003D02                     l6499:
  7073                           
  7074                           ; BSR set to: 0
  7075  003D02  90D8               	bcf	status,0,c
  7076  003D04  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7077  003D06  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7078                           
  7079                           ; BSR set to: 0
  7080  003D08  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7081  003D0A  D7ED               	goto	u8130
  7082  003D0C                     l6503:
  7083                           
  7084                           ; BSR set to: 0
  7085  003D0C  5165               	movf	___awdiv@sign& (0+255),w,b
  7086  003D0E  B4D8               	btfsc	status,2,c
  7087  003D10  D004               	goto	l6507
  7088                           
  7089                           ; BSR set to: 0
  7090  003D12  6D66               	negf	___awdiv@quotient& (0+255),b
  7091  003D14  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7092  003D16  B0D8               	btfsc	status,0,c
  7093  003D18  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7094  003D1A                     l6507:
  7095                           
  7096                           ; BSR set to: 0
  7097  003D1A  C066  F060         	movff	___awdiv@quotient,?___awdiv
  7098  003D1E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  7099                           
  7100                           ; BSR set to: 0
  7101  003D22  0012               	return		;funcret
  7102  003D24                     __end_of___awdiv:
  7103                           	opt callstack 0
  7104                           
  7105 ;; *************** function _ctoa *****************
  7106 ;; Defined at:
  7107 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  7110 ;;		 -> sprintf@f(6), 
  7111 ;;  c               1   29[BANK0 ] unsigned char 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  w               2   30[BANK0 ] int 
  7114 ;;  l               2    0        int 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  2   27[BANK0 ] int 
  7117 ;; Registers used:
  7118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7124 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7127 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7128 ;;Total ram usage:        5 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    6
  7131 ;; This function calls:
  7132 ;;		_pad
  7133 ;; This function is called by:
  7134 ;;		_vfpfcnvrt
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text22
  7139  004100                     __ptext22:
  7140                           	opt callstack 0
  7141  004100                     _ctoa:
  7142                           	opt callstack 20
  7143                           
  7144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;incstack = 0
  7148  004100  5036               	movf	_width,w,c
  7149  004102  1037               	iorwf	_width+1,w,c
  7150  004104  A4D8               	btfss	status,2,c
  7151  004106  D005               	goto	l6691
  7152  004108  C036  F07E         	movff	_width,ctoa@w
  7153  00410C  C037  F07F         	movff	_width+1,ctoa@w+1
  7154  004110  D007               	goto	l6693
  7155  004112                     l6691:
  7156  004112  0EFF               	movlw	255
  7157  004114  2436               	addwf	_width,w,c
  7158  004116  0100               	movlb	0	; () banked
  7159  004118  6F7E               	movwf	ctoa@w& (0+255),b
  7160  00411A  0EFF               	movlw	255
  7161  00411C  2037               	addwfc	_width+1,w,c
  7162  00411E  6F7F               	movwf	(ctoa@w+1)& (0+255),b
  7163  004120                     l6693:
  7164                           
  7165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  7166  004120  C07D  F123         	movff	ctoa@c,_dbuf
  7167                           
  7168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  7169  004124  0E00               	movlw	0
  7170  004126  0101               	movlb	1	; () banked
  7171  004128  6F24               	movwf	(_dbuf+1)& (0+255),b
  7172                           
  7173                           ; BSR set to: 1
  7174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  7175  00412A  C07B  F070         	movff	ctoa@fp,pad@fp
  7176  00412E  C07C  F071         	movff	ctoa@fp+1,pad@fp+1
  7177  004132  0E23               	movlw	low _dbuf
  7178  004134  0100               	movlb	0	; () banked
  7179  004136  6F72               	movwf	pad@buf& (0+255),b
  7180  004138  0E01               	movlw	high _dbuf
  7181  00413A  6F73               	movwf	(pad@buf+1)& (0+255),b
  7182  00413C  C07E  F074         	movff	ctoa@w,pad@p
  7183  004140  C07F  F075         	movff	ctoa@w+1,pad@p+1
  7184  004144  EC77  F01D         	call	_pad	;wreg free
  7185  004148  C070  F07B         	movff	?_pad,?_ctoa
  7186  00414C  C071  F07C         	movff	?_pad+1,?_ctoa+1
  7187  004150  0012               	return		;funcret
  7188  004152                     __end_of_ctoa:
  7189                           	opt callstack 0
  7190                           
  7191 ;; *************** function _pad *****************
  7192 ;; Defined at:
  7193 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7196 ;;		 -> sprintf@f(6), 
  7197 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  7198 ;;		 -> dbuf(80), 
  7199 ;;  p               2   20[BANK0 ] int 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  w               2   25[BANK0 ] int 
  7202 ;;  i               2   23[BANK0 ] int 
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  2   16[BANK0 ] int 
  7205 ;; Registers used:
  7206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7212 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7213 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7214 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7215 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7216 ;;Total ram usage:       11 bytes
  7217 ;; Hardware stack levels used:    1
  7218 ;; Hardware stack levels required when called:    5
  7219 ;; This function calls:
  7220 ;;		_fputc
  7221 ;;		_fputs
  7222 ;;		_strlen
  7223 ;; This function is called by:
  7224 ;;		_ctoa
  7225 ;;		_efgtoa
  7226 ;;		_utoa
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           	psect	text23
  7231  003AEE                     __ptext23:
  7232                           	opt callstack 0
  7233  003AEE                     _pad:
  7234                           	opt callstack 20
  7235                           
  7236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7237                           
  7238                           ;incstack = 0
  7239  003AEE  A03A               	btfss	_flags,0,c
  7240  003AF0  D00A               	goto	l6101
  7241                           
  7242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7243  003AF2  C072  F069         	movff	pad@buf,fputs@s
  7244  003AF6  C073  F06A         	movff	pad@buf+1,fputs@s+1
  7245  003AFA  C070  F06B         	movff	pad@fp,fputs@fp
  7246  003AFE  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  7247  003B02  EC3C  F021         	call	_fputs	;wreg free
  7248  003B06                     l6101:
  7249                           
  7250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7251  003B06  0100               	movlb	0	; () banked
  7252  003B08  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  7253  003B0A  D005               	goto	l6105
  7254                           
  7255                           ; BSR set to: 0
  7256  003B0C  C074  F079         	movff	pad@p,pad@w
  7257  003B10  C075  F07A         	movff	pad@p+1,pad@w+1
  7258  003B14  D004               	goto	l347
  7259  003B16                     l6105:
  7260                           
  7261                           ; BSR set to: 0
  7262  003B16  0E00               	movlw	0
  7263  003B18  6F7A               	movwf	(pad@w+1)& (0+255),b
  7264  003B1A  0E00               	movlw	0
  7265  003B1C  6F79               	movwf	pad@w& (0+255),b
  7266  003B1E                     l347:
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7270  003B1E  0E00               	movlw	0
  7271  003B20  6F78               	movwf	(pad@i+1)& (0+255),b
  7272  003B22  0E00               	movlw	0
  7273  003B24  6F77               	movwf	pad@i& (0+255),b
  7274                           
  7275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7276  003B26  D00D               	goto	l6111
  7277  003B28                     l6107:
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7281  003B28  0E00               	movlw	0
  7282  003B2A  6F61               	movwf	(fputc@c+1)& (0+255),b
  7283  003B2C  0E20               	movlw	32
  7284  003B2E  6F60               	movwf	fputc@c& (0+255),b
  7285  003B30  C070  F062         	movff	pad@fp,fputc@fp
  7286  003B34  C071  F063         	movff	pad@fp+1,fputc@fp+1
  7287  003B38  EC26  F01D         	call	_fputc	;wreg free
  7288                           
  7289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  7290  003B3C  0100               	movlb	0	; () banked
  7291  003B3E  4B77               	infsnz	pad@i& (0+255),f,b
  7292  003B40  2B78               	incf	(pad@i+1)& (0+255),f,b
  7293  003B42                     l6111:
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7297  003B42  5179               	movf	pad@w& (0+255),w,b
  7298  003B44  5D77               	subwf	pad@i& (0+255),w,b
  7299  003B46  5178               	movf	(pad@i+1)& (0+255),w,b
  7300  003B48  0A80               	xorlw	128
  7301  003B4A  6F76               	movwf	??_pad& (0+255),b
  7302  003B4C  517A               	movf	(pad@w+1)& (0+255),w,b
  7303  003B4E  0A80               	xorlw	128
  7304  003B50  5976               	subwfb	??_pad& (0+255),w,b
  7305  003B52  A0D8               	btfss	status,0,c
  7306  003B54  D7E9               	goto	l6107
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7310  003B56  B03A               	btfsc	_flags,0,c
  7311  003B58  D00A               	goto	l6115
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7315  003B5A  C072  F069         	movff	pad@buf,fputs@s
  7316  003B5E  C073  F06A         	movff	pad@buf+1,fputs@s+1
  7317  003B62  C070  F06B         	movff	pad@fp,fputs@fp
  7318  003B66  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  7319  003B6A  EC3C  F021         	call	_fputs	;wreg free
  7320  003B6E                     l6115:
  7321                           
  7322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7323  003B6E  C072  F060         	movff	pad@buf,strlen@s
  7324  003B72  C073  F061         	movff	pad@buf+1,strlen@s+1
  7325  003B76  ECC1  F021         	call	_strlen	;wreg free
  7326  003B7A  0100               	movlb	0	; () banked
  7327  003B7C  5179               	movf	pad@w& (0+255),w,b
  7328  003B7E  2560               	addwf	?_strlen& (0+255),w,b
  7329  003B80  6F70               	movwf	?_pad& (0+255),b
  7330  003B82  517A               	movf	(pad@w+1)& (0+255),w,b
  7331  003B84  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  7332  003B86  6F71               	movwf	(?_pad+1)& (0+255),b
  7333                           
  7334                           ; BSR set to: 0
  7335  003B88  0012               	return		;funcret
  7336  003B8A                     __end_of_pad:
  7337                           	opt callstack 0
  7338                           
  7339 ;; *************** function _strlen *****************
  7340 ;; Defined at:
  7341 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  7344 ;;		 -> dbuf(80), 
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  7347 ;;		 -> dbuf(80), 
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  2    0[BANK0 ] unsigned int 
  7350 ;; Registers used:
  7351 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7357 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7358 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7360 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7361 ;;Total ram usage:        4 bytes
  7362 ;; Hardware stack levels used:    1
  7363 ;; Hardware stack levels required when called:    2
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_pad
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text24
  7372  004382                     __ptext24:
  7373                           	opt callstack 0
  7374  004382                     _strlen:
  7375                           	opt callstack 22
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;incstack = 0
  7379  004382  C060  F062         	movff	strlen@s,strlen@a
  7380  004386  C061  F063         	movff	strlen@s+1,strlen@a+1
  7381  00438A  D003               	goto	l5885
  7382  00438C                     l5883:
  7383  00438C  0100               	movlb	0	; () banked
  7384  00438E  4B60               	infsnz	strlen@s& (0+255),f,b
  7385  004390  2B61               	incf	(strlen@s+1)& (0+255),f,b
  7386  004392                     l5885:
  7387  004392  C060  FFD9         	movff	strlen@s,fsr2l
  7388  004396  C061  FFDA         	movff	strlen@s+1,fsr2h
  7389  00439A  50DF               	movf	indf2,w,c
  7390  00439C  A4D8               	btfss	status,2,c
  7391  00439E  D7F6               	goto	l5883
  7392  0043A0  0100               	movlb	0	; () banked
  7393  0043A2  5162               	movf	strlen@a& (0+255),w,b
  7394  0043A4  5D60               	subwf	strlen@s& (0+255),w,b
  7395  0043A6  6F60               	movwf	?_strlen& (0+255),b
  7396  0043A8  5163               	movf	(strlen@a+1)& (0+255),w,b
  7397  0043AA  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  7398  0043AC  6F61               	movwf	(?_strlen+1)& (0+255),b
  7399                           
  7400                           ; BSR set to: 0
  7401  0043AE  0012               	return		;funcret
  7402  0043B0                     __end_of_strlen:
  7403                           	opt callstack 0
  7404                           
  7405 ;; *************** function _fputs *****************
  7406 ;; Defined at:
  7407 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  7410 ;;		 -> dbuf(80), 
  7411 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  7412 ;;		 -> sprintf@f(6), 
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;  i               2   14[BANK0 ] int 
  7415 ;;  c               1   13[BANK0 ] unsigned char 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  2    9[BANK0 ] int 
  7418 ;; Registers used:
  7419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7425 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7426 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7428 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7429 ;;Total ram usage:        7 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:    4
  7432 ;; This function calls:
  7433 ;;		_fputc
  7434 ;; This function is called by:
  7435 ;;		_pad
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text25
  7440  004278                     __ptext25:
  7441                           	opt callstack 0
  7442  004278                     _fputs:
  7443                           	opt callstack 20
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;incstack = 0
  7447  004278  0E00               	movlw	0
  7448  00427A  0100               	movlb	0	; () banked
  7449  00427C  6F6F               	movwf	(fputs@i+1)& (0+255),b
  7450  00427E  0E00               	movlw	0
  7451  004280  6F6E               	movwf	fputs@i& (0+255),b
  7452  004282  D00C               	goto	l5879
  7453  004284                     l5875:
  7454                           
  7455                           ; BSR set to: 0
  7456  004284  C06D  F060         	movff	fputs@c,fputc@c
  7457  004288  6B61               	clrf	(fputc@c+1)& (0+255),b
  7458  00428A  C06B  F062         	movff	fputs@fp,fputc@fp
  7459  00428E  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  7460  004292  EC26  F01D         	call	_fputc	;wreg free
  7461  004296  0100               	movlb	0	; () banked
  7462  004298  4B6E               	infsnz	fputs@i& (0+255),f,b
  7463  00429A  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  7464  00429C                     l5879:
  7465                           
  7466                           ; BSR set to: 0
  7467  00429C  516E               	movf	fputs@i& (0+255),w,b
  7468  00429E  2569               	addwf	fputs@s& (0+255),w,b
  7469  0042A0  6ED9               	movwf	fsr2l,c
  7470  0042A2  516F               	movf	(fputs@i+1)& (0+255),w,b
  7471  0042A4  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  7472  0042A6  6EDA               	movwf	fsr2h,c
  7473  0042A8  50DF               	movf	indf2,w,c
  7474  0042AA  6F6D               	movwf	fputs@c& (0+255),b
  7475  0042AC  516D               	movf	fputs@c& (0+255),w,b
  7476  0042AE  B4D8               	btfsc	status,2,c
  7477  0042B0  0012               	return	
  7478  0042B2  D7E8               	goto	l5875
  7479  0042B4                     __end_of_fputs:
  7480                           	opt callstack 0
  7481                           
  7482 ;; *************** function _fputc *****************
  7483 ;; Defined at:
  7484 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  c               2    0[BANK0 ] int 
  7487 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  7488 ;;		 -> sprintf@f(6), 
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;		None
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  2    0[BANK0 ] int 
  7493 ;; Registers used:
  7494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7500 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7502 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7503 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7504 ;;Total ram usage:        9 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; Hardware stack levels required when called:    3
  7507 ;; This function calls:
  7508 ;;		_putch
  7509 ;; This function is called by:
  7510 ;;		_pad
  7511 ;;		_vfpfcnvrt
  7512 ;;		_fputs
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text26
  7517  003A4C                     __ptext26:
  7518                           	opt callstack 0
  7519  003A4C                     _fputc:
  7520                           	opt callstack 20
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;incstack = 0
  7524  003A4C  0100               	movlb	0	; () banked
  7525  003A4E  5162               	movf	fputc@fp& (0+255),w,b
  7526  003A50  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  7527  003A52  B4D8               	btfsc	status,2,c
  7528  003A54  D004               	goto	u6940
  7529                           
  7530                           ; BSR set to: 0
  7531  003A56  5162               	movf	fputc@fp& (0+255),w,b
  7532  003A58  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  7533  003A5A  A4D8               	btfss	status,2,c
  7534  003A5C  D004               	goto	l5865
  7535  003A5E                     u6940:
  7536                           
  7537                           ; BSR set to: 0
  7538  003A5E  5160               	movf	fputc@c& (0+255),w,b
  7539  003A60  EC8E  F022         	call	_putch
  7540  003A64  0012               	return	
  7541  003A66                     l5865:
  7542                           
  7543                           ; BSR set to: 0
  7544  003A66  EE20 F004          	lfsr	2,4
  7545  003A6A  5162               	movf	fputc@fp& (0+255),w,b
  7546  003A6C  26D9               	addwf	fsr2l,f,c
  7547  003A6E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7548  003A70  22DA               	addwfc	fsr2h,f,c
  7549  003A72  50DE               	movf	postinc2,w,c
  7550  003A74  10DE               	iorwf	postinc2,w,c
  7551  003A76  B4D8               	btfsc	status,2,c
  7552  003A78  D016               	goto	u6960
  7553                           
  7554                           ; BSR set to: 0
  7555  003A7A  EE20 F004          	lfsr	2,4
  7556  003A7E  5162               	movf	fputc@fp& (0+255),w,b
  7557  003A80  26D9               	addwf	fsr2l,f,c
  7558  003A82  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7559  003A84  22DA               	addwfc	fsr2h,f,c
  7560  003A86  EE10 F002          	lfsr	1,2
  7561  003A8A  5162               	movf	fputc@fp& (0+255),w,b
  7562  003A8C  26E1               	addwf	fsr1l,f,c
  7563  003A8E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7564  003A90  22E2               	addwfc	fsr1h,f,c
  7565  003A92  50DE               	movf	postinc2,w,c
  7566  003A94  5CE6               	subwf	postinc1,w,c
  7567  003A96  50E6               	movf	postinc1,w,c
  7568  003A98  0A80               	xorlw	128
  7569  003A9A  6F68               	movwf	(??_fputc+4)& (0+255),b
  7570  003A9C  50DE               	movf	postinc2,w,c
  7571  003A9E  0A80               	xorlw	128
  7572  003AA0  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  7573  003AA2  B0D8               	btfsc	status,0,c
  7574  003AA4  0012               	return	
  7575  003AA6                     u6960:
  7576                           
  7577                           ; BSR set to: 0
  7578  003AA6  EE20 F002          	lfsr	2,2
  7579  003AAA  5162               	movf	fputc@fp& (0+255),w,b
  7580  003AAC  26D9               	addwf	fsr2l,f,c
  7581  003AAE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7582  003AB0  22DA               	addwfc	fsr2h,f,c
  7583  003AB2  CFDE F064          	movff	postinc2,??_fputc
  7584  003AB6  CFDD F065          	movff	postdec2,??_fputc+1
  7585  003ABA  C062  FFD9         	movff	fputc@fp,fsr2l
  7586  003ABE  C063  FFDA         	movff	fputc@fp+1,fsr2h
  7587  003AC2  CFDE F066          	movff	postinc2,??_fputc+2
  7588  003AC6  CFDD F067          	movff	postdec2,??_fputc+3
  7589  003ACA  5164               	movf	??_fputc& (0+255),w,b
  7590  003ACC  2566               	addwf	(??_fputc+2)& (0+255),w,b
  7591  003ACE  6ED9               	movwf	fsr2l,c
  7592  003AD0  5165               	movf	(??_fputc+1)& (0+255),w,b
  7593  003AD2  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  7594  003AD4  6EDA               	movwf	fsr2h,c
  7595  003AD6  C060  FFDF         	movff	fputc@c,indf2
  7596  003ADA  EE20 F002          	lfsr	2,2
  7597  003ADE  5162               	movf	fputc@fp& (0+255),w,b
  7598  003AE0  26D9               	addwf	fsr2l,f,c
  7599  003AE2  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7600  003AE4  22DA               	addwfc	fsr2h,f,c
  7601  003AE6  2ADE               	incf	postinc2,f,c
  7602  003AE8  0E00               	movlw	0
  7603  003AEA  22DD               	addwfc	postdec2,f,c
  7604  003AEC  0012               	return		;funcret
  7605  003AEE                     __end_of_fputc:
  7606                           	opt callstack 0
  7607                           
  7608 ;; *************** function _putch *****************
  7609 ;; Defined at:
  7610 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  c               1    wreg     unsigned char 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;  c               1    0[COMRAM] unsigned char 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      void 
  7617 ;; Registers used:
  7618 ;;		wreg
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7628 ;;Total ram usage:        0 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:    2
  7631 ;; This function calls:
  7632 ;;		Nothing
  7633 ;; This function is called by:
  7634 ;;		_fputc
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638                           	psect	text27
  7639  00451C                     __ptext27:
  7640                           	opt callstack 0
  7641  00451C                     _putch:
  7642                           	opt callstack 20
  7643                           
  7644                           ;incstack = 0
  7645  00451C  0012               	return		;funcret
  7646  00451E                     __end_of_putch:
  7647                           	opt callstack 0
  7648                           
  7649 ;; *************** function _atoi *****************
  7650 ;; Defined at:
  7651 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  7654 ;;		 -> STR_5(28), STR_1(10), 
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;  n               2   20[BANK0 ] int 
  7657 ;;  neg             2   13[BANK0 ] int 
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  2    7[BANK0 ] int 
  7660 ;; Registers used:
  7661 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7667 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7668 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7669 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7670 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7671 ;;Total ram usage:       15 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:    3
  7674 ;; This function calls:
  7675 ;;		___wmul
  7676 ;;		_isdigit
  7677 ;;		_isspace
  7678 ;; This function is called by:
  7679 ;;		_vfpfcnvrt
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text28
  7684  003038                     __ptext28:
  7685                           	opt callstack 0
  7686  003038                     _atoi:
  7687                           	opt callstack 23
  7688                           
  7689                           ;incstack = 0
  7690  003038  0E00               	movlw	0
  7691  00303A  0100               	movlb	0	; () banked
  7692  00303C  6F75               	movwf	(atoi@n+1)& (0+255),b
  7693  00303E  0E00               	movlw	0
  7694  003040  6F74               	movwf	atoi@n& (0+255),b
  7695  003042  0E00               	movlw	0
  7696  003044  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  7697  003046  0E00               	movlw	0
  7698  003048  6F6D               	movwf	atoi@neg& (0+255),b
  7699  00304A  D002               	goto	l7039
  7700  00304C                     l7037:
  7701                           
  7702                           ; BSR set to: 0
  7703  00304C  4B67               	infsnz	atoi@s& (0+255),f,b
  7704  00304E  2B68               	incf	(atoi@s+1)& (0+255),f,b
  7705  003050                     l7039:
  7706                           
  7707                           ; BSR set to: 0
  7708  003050  0E01               	movlw	1
  7709  003052  6F73               	movwf	_atoi$1852& (0+255),b
  7710                           
  7711                           ; BSR set to: 0
  7712  003054  C067  FFF6         	movff	atoi@s,tblptrl
  7713  003058  C068  FFF7         	movff	atoi@s+1,tblptrh
  7714  00305C                     	if	0	;tblptru may be non-zero
  7715  00305C                     	endif
  7716  00305C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7717  00305C  0E00               	movlw	low (__mediumconst shr (0+16))
  7718  00305E  6EF8               	movwf	tblptru,c
  7719  003060                     	endif
  7720  003060  0008               	tblrd		*
  7721  003062  50F5               	movf	tablat,w,c
  7722  003064  0A20               	xorlw	32
  7723  003066  B4D8               	btfsc	status,2,c
  7724  003068  D01A               	goto	l7047
  7725                           
  7726                           ; BSR set to: 0
  7727  00306A  0EF7               	movlw	247
  7728  00306C  6F69               	movwf	??_atoi& (0+255),b
  7729  00306E  0EFF               	movlw	255
  7730  003070  6F6A               	movwf	(??_atoi+1)& (0+255),b
  7731  003072  C067  FFF6         	movff	atoi@s,tblptrl
  7732  003076  C068  FFF7         	movff	atoi@s+1,tblptrh
  7733  00307A                     	if	0	;tblptru may be non-zero
  7734  00307A                     	endif
  7735  00307A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7736  00307A  0E00               	movlw	low (__mediumconst shr (0+16))
  7737  00307C  6EF8               	movwf	tblptru,c
  7738  00307E                     	endif
  7739  00307E  0008               	tblrd		*
  7740  003080  50F5               	movf	tablat,w,c
  7741  003082  6F6B               	movwf	(??_atoi+2)& (0+255),b
  7742  003084  6B6C               	clrf	(??_atoi+3)& (0+255),b
  7743  003086  5169               	movf	??_atoi& (0+255),w,b
  7744  003088  276B               	addwf	(??_atoi+2)& (0+255),f,b
  7745  00308A  516A               	movf	(??_atoi+1)& (0+255),w,b
  7746  00308C  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  7747  00308E  516C               	movf	(??_atoi+3)& (0+255),w,b
  7748  003090  E104               	bnz	u9080
  7749  003092  0E05               	movlw	5
  7750  003094  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  7751  003096  A0D8               	btfss	status,0,c
  7752  003098  D002               	goto	l7047
  7753  00309A                     u9080:
  7754                           
  7755                           ; BSR set to: 0
  7756  00309A  0E00               	movlw	0
  7757  00309C  6F73               	movwf	_atoi$1852& (0+255),b
  7758  00309E                     l7047:
  7759                           
  7760                           ; BSR set to: 0
  7761  00309E  C073  F06F         	movff	_atoi$1852,_atoi$1851
  7762  0030A2  6B70               	clrf	(_atoi$1851+1)& (0+255),b
  7763                           
  7764                           ; BSR set to: 0
  7765  0030A4  516F               	movf	_atoi$1851& (0+255),w,b
  7766  0030A6  1170               	iorwf	(_atoi$1851+1)& (0+255),w,b
  7767  0030A8  B4D8               	btfsc	status,2,c
  7768  0030AA  D008               	goto	l7057
  7769  0030AC  D7CF               	goto	l7037
  7770  0030AE                     l7053:
  7771                           
  7772                           ; BSR set to: 0
  7773  0030AE  0E00               	movlw	0
  7774  0030B0  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  7775  0030B2  0E01               	movlw	1
  7776  0030B4  6F6D               	movwf	atoi@neg& (0+255),b
  7777  0030B6                     l7055:
  7778                           
  7779                           ; BSR set to: 0
  7780  0030B6  4B67               	infsnz	atoi@s& (0+255),f,b
  7781  0030B8  2B68               	incf	(atoi@s+1)& (0+255),f,b
  7782  0030BA  D033               	goto	l7063
  7783  0030BC                     l7057:
  7784                           
  7785                           ; BSR set to: 0
  7786  0030BC  C067  FFF6         	movff	atoi@s,tblptrl
  7787  0030C0  C068  FFF7         	movff	atoi@s+1,tblptrh
  7788  0030C4                     	if	0	;tblptru may be non-zero
  7789  0030C4                     	endif
  7790  0030C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7791  0030C4  0E00               	movlw	low (__mediumconst shr (0+16))
  7792  0030C6  6EF8               	movwf	tblptru,c
  7793  0030C8                     	endif
  7794  0030C8  0008               	tblrd		*
  7795  0030CA  50F5               	movf	tablat,w,c
  7796  0030CC  6F69               	movwf	??_atoi& (0+255),b
  7797  0030CE  6B6A               	clrf	(??_atoi+1)& (0+255),b
  7798                           
  7799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7800                           ; Switch size 1, requested type "simple"
  7801                           ; Number of cases is 1, Range of values is 0 to 0
  7802                           ; switch strategies available:
  7803                           ; Name         Instructions Cycles
  7804                           ; simple_byte            4     3 (average)
  7805                           ;	Chosen strategy is simple_byte
  7806  0030D0  516A               	movf	(??_atoi+1)& (0+255),w,b
  7807  0030D2  0A00               	xorlw	0	; case 0
  7808  0030D4  A4D8               	btfss	status,2,c
  7809  0030D6  D025               	goto	l7063
  7810                           
  7811                           ; BSR set to: 0
  7812                           ; Switch size 1, requested type "simple"
  7813                           ; Number of cases is 2, Range of values is 43 to 45
  7814                           ; switch strategies available:
  7815                           ; Name         Instructions Cycles
  7816                           ; simple_byte            7     4 (average)
  7817                           ;	Chosen strategy is simple_byte
  7818  0030D8  5169               	movf	??_atoi& (0+255),w,b
  7819  0030DA  0A2B               	xorlw	43	; case 43
  7820  0030DC  B4D8               	btfsc	status,2,c
  7821  0030DE  D7EB               	goto	l7055
  7822  0030E0  0A06               	xorlw	6	; case 45
  7823  0030E2  B4D8               	btfsc	status,2,c
  7824  0030E4  D7E4               	goto	l7053
  7825  0030E6  D01D               	goto	l7063
  7826  0030E8                     l7059:
  7827                           
  7828                           ; BSR set to: 0
  7829  0030E8  C074  F060         	movff	atoi@n,___wmul@multiplier
  7830  0030EC  C075  F061         	movff	atoi@n+1,___wmul@multiplier+1
  7831  0030F0  0E00               	movlw	0
  7832  0030F2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7833  0030F4  0E0A               	movlw	10
  7834  0030F6  6F62               	movwf	___wmul@multiplicand& (0+255),b
  7835  0030F8  ECEE  F021         	call	___wmul	;wreg free
  7836  0030FC  C067  FFF6         	movff	atoi@s,tblptrl
  7837  003100  C068  FFF7         	movff	atoi@s+1,tblptrh
  7838  003104                     	if	0	;tblptru may be non-zero
  7839  003104                     	endif
  7840  003104                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7841  003104  0E00               	movlw	low (__mediumconst shr (0+16))
  7842  003106  6EF8               	movwf	tblptru,c
  7843  003108                     	endif
  7844  003108  0008               	tblrd		*
  7845  00310A  50F5               	movf	tablat,w,c
  7846  00310C  0100               	movlb	0	; () banked
  7847  00310E  5F60               	subwf	?___wmul& (0+255),f,b
  7848  003110  0E00               	movlw	0
  7849  003112  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
  7850  003114  0E30               	movlw	48
  7851  003116  2560               	addwf	?___wmul& (0+255),w,b
  7852  003118  6F74               	movwf	atoi@n& (0+255),b
  7853  00311A  0E00               	movlw	0
  7854  00311C  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  7855  00311E  6F75               	movwf	(atoi@n+1)& (0+255),b
  7856  003120  D7CA               	goto	l7055
  7857  003122                     l7063:
  7858                           
  7859                           ; BSR set to: 0
  7860  003122  0ED0               	movlw	208
  7861  003124  6F69               	movwf	??_atoi& (0+255),b
  7862  003126  0EFF               	movlw	255
  7863  003128  6F6A               	movwf	(??_atoi+1)& (0+255),b
  7864  00312A  C067  FFF6         	movff	atoi@s,tblptrl
  7865  00312E  C068  FFF7         	movff	atoi@s+1,tblptrh
  7866  003132                     	if	0	;tblptru may be non-zero
  7867  003132                     	endif
  7868  003132                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7869  003132  0E00               	movlw	low (__mediumconst shr (0+16))
  7870  003134  6EF8               	movwf	tblptru,c
  7871  003136                     	endif
  7872  003136  0008               	tblrd		*
  7873  003138  50F5               	movf	tablat,w,c
  7874  00313A  6F6B               	movwf	(??_atoi+2)& (0+255),b
  7875  00313C  6B6C               	clrf	(??_atoi+3)& (0+255),b
  7876  00313E  5169               	movf	??_atoi& (0+255),w,b
  7877  003140  276B               	addwf	(??_atoi+2)& (0+255),f,b
  7878  003142  516A               	movf	(??_atoi+1)& (0+255),w,b
  7879  003144  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  7880  003146  516C               	movf	(??_atoi+3)& (0+255),w,b
  7881  003148  E106               	bnz	u9100
  7882  00314A  0E0A               	movlw	10
  7883  00314C  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  7884  00314E  B0D8               	btfsc	status,0,c
  7885  003150  D002               	goto	u9100
  7886  003152  0E01               	movlw	1
  7887  003154  D001               	goto	u9110
  7888  003156                     u9100:
  7889  003156  0E00               	movlw	0
  7890  003158                     u9110:
  7891  003158  6F71               	movwf	_atoi$1853& (0+255),b
  7892  00315A  6B72               	clrf	(_atoi$1853+1)& (0+255),b
  7893                           
  7894                           ; BSR set to: 0
  7895  00315C  5171               	movf	_atoi$1853& (0+255),w,b
  7896  00315E  1172               	iorwf	(_atoi$1853+1)& (0+255),w,b
  7897  003160  A4D8               	btfss	status,2,c
  7898  003162  D7C2               	goto	l7059
  7899                           
  7900                           ; BSR set to: 0
  7901  003164  516D               	movf	atoi@neg& (0+255),w,b
  7902  003166  116E               	iorwf	(atoi@neg+1)& (0+255),w,b
  7903  003168  A4D8               	btfss	status,2,c
  7904  00316A  D00D               	goto	l1233
  7905                           
  7906                           ; BSR set to: 0
  7907  00316C  C074  F069         	movff	atoi@n,??_atoi
  7908  003170  C075  F06A         	movff	atoi@n+1,??_atoi+1
  7909  003174  1F69               	comf	??_atoi& (0+255),f,b
  7910  003176  1F6A               	comf	(??_atoi+1)& (0+255),f,b
  7911  003178  4B69               	infsnz	??_atoi& (0+255),f,b
  7912  00317A  2B6A               	incf	(??_atoi+1)& (0+255),f,b
  7913  00317C  C069  F067         	movff	??_atoi,?_atoi
  7914  003180  C06A  F068         	movff	??_atoi+1,?_atoi+1
  7915  003184  0012               	return	
  7916  003186                     l1233:
  7917                           
  7918                           ; BSR set to: 0
  7919  003186  C074  F067         	movff	atoi@n,?_atoi
  7920  00318A  C075  F068         	movff	atoi@n+1,?_atoi+1
  7921                           
  7922                           ; BSR set to: 0
  7923  00318E  0012               	return		;funcret
  7924  003190                     __end_of_atoi:
  7925                           	opt callstack 0
  7926                           
  7927 ;; *************** function _isspace *****************
  7928 ;; Defined at:
  7929 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;  c               2    0[BANK0 ] int 
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;		None
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  2    0[BANK0 ] int 
  7936 ;; Registers used:
  7937 ;;		wreg, status,2, status,0
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7944 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7946 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7947 ;;Total ram usage:        7 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; Hardware stack levels required when called:    2
  7950 ;; This function calls:
  7951 ;;		Nothing
  7952 ;; This function is called by:
  7953 ;;		_atoi
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	text29
  7958  004238                     __ptext29:
  7959                           	opt callstack 0
  7960  004238                     _isspace:
  7961                           	opt callstack 23
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;incstack = 0
  7965  004238  0E01               	movlw	1
  7966  00423A  0100               	movlb	0	; () banked
  7967  00423C  6F66               	movwf	_isspace$1882& (0+255),b
  7968                           
  7969                           ; BSR set to: 0
  7970  00423E  0E20               	movlw	32
  7971  004240  1960               	xorwf	isspace@c& (0+255),w,b
  7972  004242  1161               	iorwf	(isspace@c+1)& (0+255),w,b
  7973  004244  B4D8               	btfsc	status,2,c
  7974  004246  D014               	goto	l6683
  7975                           
  7976                           ; BSR set to: 0
  7977  004248  0EF7               	movlw	247
  7978  00424A  6F62               	movwf	??_isspace& (0+255),b
  7979  00424C  0EFF               	movlw	255
  7980  00424E  6F63               	movwf	(??_isspace+1)& (0+255),b
  7981  004250  C060  F064         	movff	isspace@c,??_isspace+2
  7982  004254  C061  F065         	movff	isspace@c+1,??_isspace+3
  7983  004258  5162               	movf	??_isspace& (0+255),w,b
  7984  00425A  2764               	addwf	(??_isspace+2)& (0+255),f,b
  7985  00425C  5163               	movf	(??_isspace+1)& (0+255),w,b
  7986  00425E  2365               	addwfc	(??_isspace+3)& (0+255),f,b
  7987  004260  5165               	movf	(??_isspace+3)& (0+255),w,b
  7988  004262  E104               	bnz	u8460
  7989  004264  0E05               	movlw	5
  7990  004266  5D64               	subwf	(??_isspace+2)& (0+255),w,b
  7991  004268  A0D8               	btfss	status,0,c
  7992  00426A  D002               	goto	l6683
  7993  00426C                     u8460:
  7994                           
  7995                           ; BSR set to: 0
  7996  00426C  0E00               	movlw	0
  7997  00426E  6F66               	movwf	_isspace$1882& (0+255),b
  7998  004270                     l6683:
  7999                           
  8000                           ; BSR set to: 0
  8001  004270  C066  F060         	movff	_isspace$1882,?_isspace
  8002  004274  6B61               	clrf	(?_isspace+1)& (0+255),b
  8003                           
  8004                           ; BSR set to: 0
  8005  004276  0012               	return		;funcret
  8006  004278                     __end_of_isspace:
  8007                           	opt callstack 0
  8008                           
  8009 ;; *************** function _isdigit *****************
  8010 ;; Defined at:
  8011 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  c               2    0[BANK0 ] int 
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;		None
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  2    0[BANK0 ] int 
  8018 ;; Registers used:
  8019 ;;		wreg, status,2, status,0
  8020 ;; Tracked objects:
  8021 ;;		On entry : 0/0
  8022 ;;		On exit  : 0/0
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8025 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8027 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8028 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8029 ;;Total ram usage:        6 bytes
  8030 ;; Hardware stack levels used:    1
  8031 ;; Hardware stack levels required when called:    2
  8032 ;; This function calls:
  8033 ;;		Nothing
  8034 ;; This function is called by:
  8035 ;;		_vfpfcnvrt
  8036 ;;		_atoi
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text30
  8041  004320                     __ptext30:
  8042                           	opt callstack 0
  8043  004320                     _isdigit:
  8044                           	opt callstack 24
  8045                           
  8046                           ; BSR set to: 0
  8047                           ;incstack = 0
  8048  004320  0ED0               	movlw	208
  8049  004322  0100               	movlb	0	; () banked
  8050  004324  6F62               	movwf	??_isdigit& (0+255),b
  8051  004326  0EFF               	movlw	255
  8052  004328  6F63               	movwf	(??_isdigit+1)& (0+255),b
  8053  00432A  C060  F064         	movff	isdigit@c,??_isdigit+2
  8054  00432E  C061  F065         	movff	isdigit@c+1,??_isdigit+3
  8055  004332  5162               	movf	??_isdigit& (0+255),w,b
  8056  004334  2764               	addwf	(??_isdigit+2)& (0+255),f,b
  8057  004336  5163               	movf	(??_isdigit+1)& (0+255),w,b
  8058  004338  2365               	addwfc	(??_isdigit+3)& (0+255),f,b
  8059  00433A  5165               	movf	(??_isdigit+3)& (0+255),w,b
  8060  00433C  E106               	bnz	u7660
  8061  00433E  0E0A               	movlw	10
  8062  004340  5D64               	subwf	(??_isdigit+2)& (0+255),w,b
  8063  004342  B0D8               	btfsc	status,0,c
  8064  004344  D002               	goto	u7660
  8065  004346  0E01               	movlw	1
  8066  004348  D001               	goto	u7670
  8067  00434A                     u7660:
  8068  00434A  0E00               	movlw	0
  8069  00434C                     u7670:
  8070  00434C  6F60               	movwf	?_isdigit& (0+255),b
  8071  00434E  6B61               	clrf	(?_isdigit+1)& (0+255),b
  8072                           
  8073                           ; BSR set to: 0
  8074  004350  0012               	return		;funcret
  8075  004352                     __end_of_isdigit:
  8076                           	opt callstack 0
  8077                           
  8078 ;; *************** function ___wmul *****************
  8079 ;; Defined at:
  8080 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8083 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  product         2    4[BANK0 ] unsigned int 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  2    0[BANK0 ] unsigned int 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2, status,0, prodl, prodh
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8096 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8098 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8099 ;;Total ram usage:        6 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; Hardware stack levels required when called:    2
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_atoi
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text31
  8110  0043DC                     __ptext31:
  8111                           	opt callstack 0
  8112  0043DC                     ___wmul:
  8113                           	opt callstack 23
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;incstack = 0
  8117  0043DC  0100               	movlb	0	; () banked
  8118  0043DE  5160               	movf	___wmul@multiplier& (0+255),w,b
  8119  0043E0  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8120  0043E2  CFF3 F064          	movff	prodl,___wmul@product
  8121  0043E6  CFF4 F065          	movff	prodh,___wmul@product+1
  8122  0043EA  5160               	movf	___wmul@multiplier& (0+255),w,b
  8123  0043EC  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8124  0043EE  50F3               	movf	prodl,w,c
  8125  0043F0  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8126  0043F2  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8127  0043F4  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8128  0043F6  50F3               	movf	prodl,w,c
  8129  0043F8  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8130                           
  8131                           ; BSR set to: 0
  8132  0043FA  C064  F060         	movff	___wmul@product,?___wmul
  8133  0043FE  C065  F061         	movff	___wmul@product+1,?___wmul+1
  8134                           
  8135                           ; BSR set to: 0
  8136  004402  0012               	return		;funcret
  8137  004404                     __end_of___wmul:
  8138                           	opt callstack 0
  8139                           
  8140 ;; *************** function _frenarMotor *****************
  8141 ;; Defined at:
  8142 ;;		line 46 in file "./../LIBRERIAS/funciones_auto.h"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;		None
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;		None
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  1    wreg      void 
  8149 ;; Registers used:
  8150 ;;		wreg, status,2
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/0
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8160 ;;Total ram usage:        0 bytes
  8161 ;; Hardware stack levels used:    1
  8162 ;; Hardware stack levels required when called:    2
  8163 ;; This function calls:
  8164 ;;		Nothing
  8165 ;; This function is called by:
  8166 ;;		_main
  8167 ;;		_terminal
  8168 ;;		_rutinaEscape
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           	psect	text32
  8173  0044B2                     __ptext32:
  8174                           	opt callstack 0
  8175  0044B2                     _frenarMotor:
  8176                           	opt callstack 27
  8177                           
  8178                           ;./../LIBRERIAS/funciones_auto.h: 47:     CCP7CONbits.DC7B = 0b00;
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;incstack = 0
  8182  0044B2  0ECF               	movlw	-49
  8183  0044B4  010F               	movlb	15	; () banked
  8184  0044B6  1709               	andwf	9,f,b	;volatile
  8185                           
  8186                           ;./../LIBRERIAS/funciones_auto.h: 48:     CCPR7L = 0x00;
  8187  0044B8  0E00               	movlw	0
  8188  0044BA  6F0A               	movwf	10,b	;volatile
  8189                           
  8190                           ;./../LIBRERIAS/funciones_auto.h: 49:     motor = 0;
  8191  0044BC  0E00               	movlw	0
  8192  0044BE  6E45               	movwf	_motor,c
  8193                           
  8194                           ; BSR set to: 15
  8195  0044C0  0012               	return		;funcret
  8196  0044C2                     __end_of_frenarMotor:
  8197                           	opt callstack 0
  8198                           
  8199 ;; *************** function _fijarVelocidad *****************
  8200 ;; Defined at:
  8201 ;;		line 30 in file "./../LIBRERIAS/funciones_auto.h"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  speed           1    wreg     unsigned char 
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;  speed           1   63[BANK0 ] unsigned char 
  8206 ;;  DC              4   55[BANK0 ] float 
  8207 ;; Return value:  Size  Location     Type
  8208 ;;                  1    wreg      void 
  8209 ;; Registers used:
  8210 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8217 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8219 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8220 ;;Total ram usage:        9 bytes
  8221 ;; Hardware stack levels used:    1
  8222 ;; Hardware stack levels required when called:    3
  8223 ;; This function calls:
  8224 ;;		___fladd
  8225 ;;		___flmul
  8226 ;;		___fltol
  8227 ;;		___xxtofl
  8228 ;; This function is called by:
  8229 ;;		_terminal
  8230 ;;		_rutinaEscape
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           	psect	text33
  8235  003414                     __ptext33:
  8236                           	opt callstack 0
  8237  003414                     _fijarVelocidad:
  8238                           	opt callstack 26
  8239                           
  8240                           ; BSR set to: 15
  8241                           ;incstack = 0
  8242                           ;fijarVelocidad@speed stored from wreg
  8243  003414  0100               	movlb	0	; () banked
  8244  003416  6F9F               	movwf	fijarVelocidad@speed& (0+255),b
  8245                           
  8246                           ;./../LIBRERIAS/funciones_auto.h: 31:     float DC = 0.006 * speed + 0.5;
  8247  003418  0EA6               	movlw	166
  8248  00341A  0100               	movlb	0	; () banked
  8249  00341C  6F72               	movwf	___flmul@a& (0+255),b
  8250  00341E  0E9B               	movlw	155
  8251  003420  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8252  003422  0EC4               	movlw	196
  8253  003424  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8254  003426  0E3B               	movlw	59
  8255  003428  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8256  00342A  519F               	movf	fijarVelocidad@speed& (0+255),w,b
  8257  00342C  6F60               	movwf	___xxtofl@val& (0+255),b
  8258  00342E  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  8259  003430  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  8260  003432  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  8261  003434  0E01               	movlw	1
  8262  003436  ECC8  F018         	call	___xxtofl
  8263  00343A  C060  F06E         	movff	?___xxtofl,___flmul@b
  8264  00343E  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  8265  003442  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  8266  003446  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  8267  00344A  ECBA  F00F         	call	___flmul	;wreg free
  8268  00344E  C06E  F087         	movff	?___flmul,___fladd@b
  8269  003452  C06F  F088         	movff	?___flmul+1,___fladd@b+1
  8270  003456  C070  F089         	movff	?___flmul+2,___fladd@b+2
  8271  00345A  C071  F08A         	movff	?___flmul+3,___fladd@b+3
  8272  00345E  0E00               	movlw	0
  8273  003460  0100               	movlb	0	; () banked
  8274  003462  6F8B               	movwf	___fladd@a& (0+255),b
  8275  003464  0E00               	movlw	0
  8276  003466  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  8277  003468  0E00               	movlw	0
  8278  00346A  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  8279  00346C  0E3F               	movlw	63
  8280  00346E  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  8281  003470  EC64  F011         	call	___fladd	;wreg free
  8282  003474  C087  F097         	movff	?___fladd,fijarVelocidad@DC
  8283  003478  C088  F098         	movff	?___fladd+1,fijarVelocidad@DC+1
  8284  00347C  C089  F099         	movff	?___fladd+2,fijarVelocidad@DC+2
  8285  003480  C08A  F09A         	movff	?___fladd+3,fijarVelocidad@DC+3
  8286                           
  8287                           ;./../LIBRERIAS/funciones_auto.h: 32:     velocidad = 4 * DC * 125;
  8288  003484  0E00               	movlw	0
  8289  003486  0100               	movlb	0	; () banked
  8290  003488  6F72               	movwf	___flmul@a& (0+255),b
  8291  00348A  0E00               	movlw	0
  8292  00348C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8293  00348E  0E80               	movlw	128
  8294  003490  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8295  003492  0E40               	movlw	64
  8296  003494  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8297  003496  C097  F06E         	movff	fijarVelocidad@DC,___flmul@b
  8298  00349A  C098  F06F         	movff	fijarVelocidad@DC+1,___flmul@b+1
  8299  00349E  C099  F070         	movff	fijarVelocidad@DC+2,___flmul@b+2
  8300  0034A2  C09A  F071         	movff	fijarVelocidad@DC+3,___flmul@b+3
  8301  0034A6  ECBA  F00F         	call	___flmul	;wreg free
  8302  0034AA  C06E  F09B         	movff	?___flmul,_fijarVelocidad$2194
  8303  0034AE  C06F  F09C         	movff	?___flmul+1,_fijarVelocidad$2194+1
  8304  0034B2  C070  F09D         	movff	?___flmul+2,_fijarVelocidad$2194+2
  8305  0034B6  C071  F09E         	movff	?___flmul+3,_fijarVelocidad$2194+3
  8306                           
  8307                           ;./../LIBRERIAS/funciones_auto.h: 32:     velocidad = 4 * DC * 125;
  8308  0034BA  0E00               	movlw	0
  8309  0034BC  0100               	movlb	0	; () banked
  8310  0034BE  6F72               	movwf	___flmul@a& (0+255),b
  8311  0034C0  0E00               	movlw	0
  8312  0034C2  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8313  0034C4  0EFA               	movlw	250
  8314  0034C6  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8315  0034C8  0E42               	movlw	66
  8316  0034CA  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8317  0034CC  C09B  F06E         	movff	_fijarVelocidad$2194,___flmul@b
  8318  0034D0  C09C  F06F         	movff	_fijarVelocidad$2194+1,___flmul@b+1
  8319  0034D4  C09D  F070         	movff	_fijarVelocidad$2194+2,___flmul@b+2
  8320  0034D8  C09E  F071         	movff	_fijarVelocidad$2194+3,___flmul@b+3
  8321  0034DC  ECBA  F00F         	call	___flmul	;wreg free
  8322  0034E0  C06E  F087         	movff	?___flmul,___fltol@f1
  8323  0034E4  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  8324  0034E8  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  8325  0034EC  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  8326  0034F0  EC18  F01C         	call	___fltol	;wreg free
  8327  0034F4  C087  F04A         	movff	?___fltol,_velocidad
  8328  0034F8  C088  F04B         	movff	?___fltol+1,_velocidad+1
  8329  0034FC  0012               	return		;funcret
  8330  0034FE                     __end_of_fijarVelocidad:
  8331                           	opt callstack 0
  8332                           
  8333 ;; *************** function ___xxtofl *****************
  8334 ;; Defined at:
  8335 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;  sign            1    wreg     unsigned char 
  8338 ;;  val             4    0[BANK0 ] long 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;  sign            1    8[BANK0 ] unsigned char 
  8341 ;;  arg             4   10[BANK0 ] unsigned long 
  8342 ;;  exp             1    9[BANK0 ] unsigned char 
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  4    0[BANK0 ] unsigned char 
  8345 ;; Registers used:
  8346 ;;		wreg, status,2, status,0
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8353 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8354 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8355 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8356 ;;Total ram usage:       14 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; Hardware stack levels required when called:    2
  8359 ;; This function calls:
  8360 ;;		Nothing
  8361 ;; This function is called by:
  8362 ;;		_fijarVelocidad
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           	psect	text34
  8367  003190                     __ptext34:
  8368                           	opt callstack 0
  8369  003190                     ___xxtofl:
  8370                           	opt callstack 26
  8371                           
  8372                           ;incstack = 0
  8373                           ;___xxtofl@sign stored from wreg
  8374  003190  0100               	movlb	0	; () banked
  8375  003192  6F68               	movwf	___xxtofl@sign& (0+255),b
  8376  003194  0100               	movlb	0	; () banked
  8377  003196  5168               	movf	___xxtofl@sign& (0+255),w,b
  8378  003198  A4D8               	btfss	status,2,c
  8379                           
  8380                           ; BSR set to: 0
  8381  00319A  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8382  00319C  D01A               	goto	l1178
  8383                           
  8384                           ; BSR set to: 0
  8385  00319E  C060  F064         	movff	___xxtofl@val,??___xxtofl
  8386  0031A2  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  8387  0031A6  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  8388  0031AA  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  8389  0031AE  1F64               	comf	??___xxtofl& (0+255),f,b
  8390  0031B0  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  8391  0031B2  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  8392  0031B4  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  8393  0031B6  2B64               	incf	??___xxtofl& (0+255),f,b
  8394  0031B8  0E00               	movlw	0
  8395  0031BA  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  8396  0031BC  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  8397  0031BE  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  8398  0031C0  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  8399  0031C4  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  8400  0031C8  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  8401  0031CC  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  8402  0031D0  D008               	goto	l7297
  8403  0031D2                     l1178:
  8404                           
  8405                           ; BSR set to: 0
  8406  0031D2  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  8407  0031D6  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8408  0031DA  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8409  0031DE  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8410  0031E2                     l7297:
  8411                           
  8412                           ; BSR set to: 0
  8413  0031E2  5160               	movf	___xxtofl@val& (0+255),w,b
  8414  0031E4  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  8415  0031E6  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  8416  0031E8  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  8417  0031EA  A4D8               	btfss	status,2,c
  8418  0031EC  D009               	goto	l7303
  8419                           
  8420                           ; BSR set to: 0
  8421  0031EE  0E00               	movlw	0
  8422  0031F0  6F60               	movwf	?___xxtofl& (0+255),b
  8423  0031F2  0E00               	movlw	0
  8424  0031F4  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  8425  0031F6  0E00               	movlw	0
  8426  0031F8  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  8427  0031FA  0E00               	movlw	0
  8428  0031FC  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  8429  0031FE  0012               	return	
  8430  003200                     l7303:
  8431                           
  8432                           ; BSR set to: 0
  8433  003200  0E96               	movlw	150
  8434  003202  6F69               	movwf	___xxtofl@exp& (0+255),b
  8435  003204  D006               	goto	l7307
  8436  003206                     l7305:
  8437                           
  8438                           ; BSR set to: 0
  8439  003206  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8440  003208  90D8               	bcf	status,0,c
  8441  00320A  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8442  00320C  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8443  00320E  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8444  003210  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  8445  003212                     l7307:
  8446                           
  8447                           ; BSR set to: 0
  8448  003212  0E00               	movlw	0
  8449  003214  156A               	andwf	___xxtofl@arg& (0+255),w,b
  8450  003216  6F64               	movwf	??___xxtofl& (0+255),b
  8451  003218  0E00               	movlw	0
  8452  00321A  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8453  00321C  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  8454  00321E  0E00               	movlw	0
  8455  003220  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8456  003222  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  8457  003224  0EFE               	movlw	254
  8458  003226  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8459  003228  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  8460  00322A  5164               	movf	??___xxtofl& (0+255),w,b
  8461  00322C  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8462  00322E  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8463  003230  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8464  003232  B4D8               	btfsc	status,2,c
  8465  003234  D00D               	goto	l1185
  8466  003236  D7E7               	goto	l7305
  8467  003238                     l7309:
  8468                           
  8469                           ; BSR set to: 0
  8470  003238  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8471                           
  8472                           ; BSR set to: 0
  8473  00323A  0E01               	movlw	1
  8474  00323C  276A               	addwf	___xxtofl@arg& (0+255),f,b
  8475  00323E  0E00               	movlw	0
  8476  003240  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8477  003242  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8478  003244  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8479                           
  8480                           ; BSR set to: 0
  8481  003246  90D8               	bcf	status,0,c
  8482  003248  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8483  00324A  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8484  00324C  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8485  00324E  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  8486  003250                     l1185:
  8487                           
  8488                           ; BSR set to: 0
  8489  003250  0E00               	movlw	0
  8490  003252  156A               	andwf	___xxtofl@arg& (0+255),w,b
  8491  003254  6F64               	movwf	??___xxtofl& (0+255),b
  8492  003256  0E00               	movlw	0
  8493  003258  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8494  00325A  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  8495  00325C  0E00               	movlw	0
  8496  00325E  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8497  003260  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  8498  003262  0EFF               	movlw	255
  8499  003264  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8500  003266  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  8501  003268  5164               	movf	??___xxtofl& (0+255),w,b
  8502  00326A  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8503  00326C  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8504  00326E  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8505  003270  B4D8               	btfsc	status,2,c
  8506  003272  D007               	goto	l7317
  8507  003274  D7E1               	goto	l7309
  8508  003276                     l7315:
  8509                           
  8510                           ; BSR set to: 0
  8511  003276  0769               	decf	___xxtofl@exp& (0+255),f,b
  8512  003278  90D8               	bcf	status,0,c
  8513  00327A  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  8514  00327C  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8515  00327E  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8516  003280  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8517  003282                     l7317:
  8518                           
  8519                           ; BSR set to: 0
  8520  003282  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8521  003284  D003               	goto	u9520
  8522                           
  8523                           ; BSR set to: 0
  8524  003286  0E02               	movlw	2
  8525  003288  6169               	cpfslt	___xxtofl@exp& (0+255),b
  8526  00328A  D7F5               	goto	l7315
  8527  00328C                     u9520:
  8528                           
  8529                           ; BSR set to: 0
  8530  00328C  A169               	btfss	___xxtofl@exp& (0+255),0,b
  8531                           
  8532                           ; BSR set to: 0
  8533  00328E  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  8534                           
  8535                           ; BSR set to: 0
  8536  003290  90D8               	bcf	status,0,c
  8537  003292  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  8538                           
  8539                           ; BSR set to: 0
  8540  003294  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  8541  003298  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  8542  00329A  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  8543  00329C  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  8544  00329E  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  8545  0032A2  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  8546  0032A4  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  8547  0032A6  6B64               	clrf	??___xxtofl& (0+255),b
  8548  0032A8  5164               	movf	??___xxtofl& (0+255),w,b
  8549  0032AA  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  8550  0032AC  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  8551  0032AE  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8552  0032B0  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  8553  0032B2  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8554  0032B4  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  8555  0032B6  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8556                           
  8557                           ; BSR set to: 0
  8558  0032B8  5168               	movf	___xxtofl@sign& (0+255),w,b
  8559  0032BA  A4D8               	btfss	status,2,c
  8560                           
  8561                           ; BSR set to: 0
  8562  0032BC  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8563  0032BE  D001               	goto	l7333
  8564                           
  8565                           ; BSR set to: 0
  8566  0032C0  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8567  0032C2                     l7333:
  8568                           
  8569                           ; BSR set to: 0
  8570  0032C2  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  8571  0032C6  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  8572  0032CA  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  8573  0032CE  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  8574                           
  8575                           ; BSR set to: 0
  8576  0032D2  0012               	return		;funcret
  8577  0032D4                     __end_of___xxtofl:
  8578                           	opt callstack 0
  8579                           
  8580 ;; *************** function ___fltol *****************
  8581 ;; Defined at:
  8582 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  f1              4   39[BANK0 ] unsigned char 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  exp1            1   48[BANK0 ] unsigned char 
  8587 ;;  sign1           1   47[BANK0 ] unsigned char 
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  4   39[BANK0 ] long 
  8590 ;; Registers used:
  8591 ;;		wreg, status,2, status,0
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8597 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8598 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8599 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8600 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8601 ;;Total ram usage:       10 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; Hardware stack levels required when called:    2
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_fijarVelocidad
  8608 ;;		_efgtoa
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           	psect	text35
  8613  003830                     __ptext35:
  8614                           	opt callstack 0
  8615  003830                     ___fltol:
  8616                           	opt callstack 23
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;incstack = 0
  8620  003830  0100               	movlb	0	; () banked
  8621  003832  3589               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8622  003834  358A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8623  003836  6F90               	movwf	___fltol@exp1& (0+255),b
  8624  003838  5190               	movf	___fltol@exp1& (0+255),w,b
  8625  00383A  A4D8               	btfss	status,2,c
  8626  00383C  D009               	goto	l6599
  8627  00383E                     u8310:
  8628                           
  8629                           ; BSR set to: 0
  8630  00383E  0E00               	movlw	0
  8631  003840  6F87               	movwf	?___fltol& (0+255),b
  8632  003842  0E00               	movlw	0
  8633  003844  6F88               	movwf	(?___fltol+1)& (0+255),b
  8634  003846  0E00               	movlw	0
  8635  003848  6F89               	movwf	(?___fltol+2)& (0+255),b
  8636  00384A  0E00               	movlw	0
  8637  00384C  6F8A               	movwf	(?___fltol+3)& (0+255),b
  8638  00384E  0012               	return	
  8639  003850                     l6599:
  8640                           
  8641                           ; BSR set to: 0
  8642  003850  C087  F08B         	movff	___fltol@f1,??___fltol
  8643  003854  C088  F08C         	movff	___fltol@f1+1,??___fltol+1
  8644  003858  C089  F08D         	movff	___fltol@f1+2,??___fltol+2
  8645  00385C  C08A  F08E         	movff	___fltol@f1+3,??___fltol+3
  8646  003860  0E20               	movlw	32
  8647  003862  D005               	goto	u8320
  8648  003864                     u8325:
  8649  003864  90D8               	bcf	status,0,c
  8650  003866  338E               	rrcf	(??___fltol+3)& (0+255),f,b
  8651  003868  338D               	rrcf	(??___fltol+2)& (0+255),f,b
  8652  00386A  338C               	rrcf	(??___fltol+1)& (0+255),f,b
  8653  00386C  338B               	rrcf	??___fltol& (0+255),f,b
  8654  00386E                     u8320:
  8655  00386E  2EE8               	decfsz	wreg,f,c
  8656  003870  D7F9               	goto	u8325
  8657  003872  518B               	movf	??___fltol& (0+255),w,b
  8658  003874  6F8F               	movwf	___fltol@sign1& (0+255),b
  8659                           
  8660                           ; BSR set to: 0
  8661  003876  8F89               	bsf	(___fltol@f1+2)& (0+255),7,b
  8662                           
  8663                           ; BSR set to: 0
  8664  003878  0EFF               	movlw	255
  8665  00387A  1787               	andwf	___fltol@f1& (0+255),f,b
  8666  00387C  0EFF               	movlw	255
  8667  00387E  1788               	andwf	(___fltol@f1+1)& (0+255),f,b
  8668  003880  0EFF               	movlw	255
  8669  003882  1789               	andwf	(___fltol@f1+2)& (0+255),f,b
  8670  003884  0E00               	movlw	0
  8671  003886  178A               	andwf	(___fltol@f1+3)& (0+255),f,b
  8672                           
  8673                           ; BSR set to: 0
  8674  003888  0E96               	movlw	150
  8675  00388A  5F90               	subwf	___fltol@exp1& (0+255),f,b
  8676                           
  8677                           ; BSR set to: 0
  8678  00388C  AF90               	btfss	___fltol@exp1& (0+255),7,b
  8679  00388E  D00D               	goto	l6619
  8680                           
  8681                           ; BSR set to: 0
  8682  003890  5190               	movf	___fltol@exp1& (0+255),w,b
  8683  003892  0A80               	xorlw	128
  8684  003894  0F97               	addlw	151
  8685  003896  A0D8               	btfss	status,0,c
  8686  003898  D7D2               	goto	u8310
  8687  00389A                     l6615:
  8688                           
  8689                           ; BSR set to: 0
  8690  00389A  90D8               	bcf	status,0,c
  8691  00389C  338A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8692  00389E  3389               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8693  0038A0  3388               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8694  0038A2  3387               	rrcf	___fltol@f1& (0+255),f,b
  8695                           
  8696                           ; BSR set to: 0
  8697  0038A4  3F90               	incfsz	___fltol@exp1& (0+255),f,b
  8698  0038A6  D7F9               	goto	l6615
  8699  0038A8  D00D               	goto	u8360
  8700  0038AA                     l6619:
  8701                           
  8702                           ; BSR set to: 0
  8703  0038AA  0E1F               	movlw	31
  8704  0038AC  6590               	cpfsgt	___fltol@exp1& (0+255),b
  8705  0038AE  D007               	goto	l6627
  8706  0038B0  D7C6               	goto	u8310
  8707  0038B2                     l6625:
  8708                           
  8709                           ; BSR set to: 0
  8710  0038B2  90D8               	bcf	status,0,c
  8711  0038B4  3787               	rlcf	___fltol@f1& (0+255),f,b
  8712  0038B6  3788               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8713  0038B8  3789               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8714  0038BA  378A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8715  0038BC  0790               	decf	___fltol@exp1& (0+255),f,b
  8716  0038BE                     l6627:
  8717                           
  8718                           ; BSR set to: 0
  8719  0038BE  5190               	movf	___fltol@exp1& (0+255),w,b
  8720  0038C0  A4D8               	btfss	status,2,c
  8721  0038C2  D7F7               	goto	l6625
  8722  0038C4                     u8360:
  8723                           
  8724                           ; BSR set to: 0
  8725  0038C4  518F               	movf	___fltol@sign1& (0+255),w,b
  8726  0038C6  B4D8               	btfsc	status,2,c
  8727  0038C8  D008               	goto	l6633
  8728                           
  8729                           ; BSR set to: 0
  8730  0038CA  1F8A               	comf	(___fltol@f1+3)& (0+255),f,b
  8731  0038CC  1F89               	comf	(___fltol@f1+2)& (0+255),f,b
  8732  0038CE  1F88               	comf	(___fltol@f1+1)& (0+255),f,b
  8733  0038D0  6D87               	negf	___fltol@f1& (0+255),b
  8734  0038D2  0E00               	movlw	0
  8735  0038D4  2388               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8736  0038D6  2389               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8737  0038D8  238A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8738  0038DA                     l6633:
  8739                           
  8740                           ; BSR set to: 0
  8741  0038DA  C087  F087         	movff	___fltol@f1,?___fltol
  8742  0038DE  C088  F088         	movff	___fltol@f1+1,?___fltol+1
  8743  0038E2  C089  F089         	movff	___fltol@f1+2,?___fltol+2
  8744  0038E6  C08A  F08A         	movff	___fltol@f1+3,?___fltol+3
  8745                           
  8746                           ; BSR set to: 0
  8747  0038EA  0012               	return		;funcret
  8748  0038EC                     __end_of___fltol:
  8749                           	opt callstack 0
  8750                           
  8751 ;; *************** function ___flmul *****************
  8752 ;; Defined at:
  8753 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  b               4   14[BANK0 ] long 
  8756 ;;  a               4   18[BANK0 ] long 
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  prod            4   33[BANK0 ] struct .
  8759 ;;  grs             4   28[BANK0 ] unsigned long 
  8760 ;;  temp            2   37[BANK0 ] struct .
  8761 ;;  bexp            1   32[BANK0 ] unsigned char 
  8762 ;;  aexp            1   27[BANK0 ] unsigned char 
  8763 ;;  sign            1   26[BANK0 ] unsigned char 
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  4   14[BANK0 ] unsigned char 
  8766 ;; Registers used:
  8767 ;;		wreg, status,2, status,0, prodl, prodh
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8773 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8774 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8775 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8776 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8777 ;;Total ram usage:       25 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; Hardware stack levels required when called:    2
  8780 ;; This function calls:
  8781 ;;		Nothing
  8782 ;; This function is called by:
  8783 ;;		_fijarVelocidad
  8784 ;;		_efgtoa
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           	psect	text36
  8789  001F74                     __ptext36:
  8790                           	opt callstack 0
  8791  001F74                     ___flmul:
  8792                           	opt callstack 23
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;incstack = 0
  8796  001F74  0100               	movlb	0	; () banked
  8797  001F76  5171               	movf	(___flmul@b+3)& (0+255),w,b
  8798  001F78  0B80               	andlw	128
  8799  001F7A  6F7A               	movwf	___flmul@sign& (0+255),b
  8800  001F7C  5171               	movf	(___flmul@b+3)& (0+255),w,b
  8801  001F7E  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  8802  001F80  6F80               	movwf	___flmul@bexp& (0+255),b
  8803                           
  8804                           ; BSR set to: 0
  8805  001F82  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
  8806                           
  8807                           ; BSR set to: 0
  8808  001F84  8180               	bsf	___flmul@bexp& (0+255),0,b
  8809                           
  8810                           ; BSR set to: 0
  8811  001F86  5180               	movf	___flmul@bexp& (0+255),w,b
  8812  001F88  B4D8               	btfsc	status,2,c
  8813  001F8A  D00D               	goto	l6345
  8814                           
  8815                           ; BSR set to: 0
  8816  001F8C  2980               	incf	___flmul@bexp& (0+255),w,b
  8817  001F8E  A4D8               	btfss	status,2,c
  8818  001F90  D008               	goto	l6343
  8819                           
  8820                           ; BSR set to: 0
  8821  001F92  0E00               	movlw	0
  8822  001F94  6F6E               	movwf	___flmul@b& (0+255),b
  8823  001F96  0E00               	movlw	0
  8824  001F98  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  8825  001F9A  0E00               	movlw	0
  8826  001F9C  6F70               	movwf	(___flmul@b+2)& (0+255),b
  8827  001F9E  0E00               	movlw	0
  8828  001FA0  6F71               	movwf	(___flmul@b+3)& (0+255),b
  8829  001FA2                     l6343:
  8830                           
  8831                           ; BSR set to: 0
  8832  001FA2  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  8833  001FA4  D008               	goto	l6347
  8834  001FA6                     l6345:
  8835                           
  8836                           ; BSR set to: 0
  8837  001FA6  0E00               	movlw	0
  8838  001FA8  6F6E               	movwf	___flmul@b& (0+255),b
  8839  001FAA  0E00               	movlw	0
  8840  001FAC  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  8841  001FAE  0E00               	movlw	0
  8842  001FB0  6F70               	movwf	(___flmul@b+2)& (0+255),b
  8843  001FB2  0E00               	movlw	0
  8844  001FB4  6F71               	movwf	(___flmul@b+3)& (0+255),b
  8845  001FB6                     l6347:
  8846                           
  8847                           ; BSR set to: 0
  8848  001FB6  5175               	movf	(___flmul@a+3)& (0+255),w,b
  8849  001FB8  0B80               	andlw	128
  8850  001FBA  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  8851                           
  8852                           ; BSR set to: 0
  8853  001FBC  5175               	movf	(___flmul@a+3)& (0+255),w,b
  8854  001FBE  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  8855  001FC0  6F7B               	movwf	___flmul@aexp& (0+255),b
  8856                           
  8857                           ; BSR set to: 0
  8858  001FC2  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
  8859                           
  8860                           ; BSR set to: 0
  8861  001FC4  817B               	bsf	___flmul@aexp& (0+255),0,b
  8862                           
  8863                           ; BSR set to: 0
  8864  001FC6  517B               	movf	___flmul@aexp& (0+255),w,b
  8865  001FC8  B4D8               	btfsc	status,2,c
  8866  001FCA  D00D               	goto	l6363
  8867                           
  8868                           ; BSR set to: 0
  8869  001FCC  297B               	incf	___flmul@aexp& (0+255),w,b
  8870  001FCE  A4D8               	btfss	status,2,c
  8871  001FD0  D008               	goto	l6361
  8872                           
  8873                           ; BSR set to: 0
  8874  001FD2  0E00               	movlw	0
  8875  001FD4  6F72               	movwf	___flmul@a& (0+255),b
  8876  001FD6  0E00               	movlw	0
  8877  001FD8  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8878  001FDA  0E00               	movlw	0
  8879  001FDC  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8880  001FDE  0E00               	movlw	0
  8881  001FE0  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8882  001FE2                     l6361:
  8883                           
  8884                           ; BSR set to: 0
  8885  001FE2  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  8886  001FE4  D008               	goto	l1137
  8887  001FE6                     l6363:
  8888                           
  8889                           ; BSR set to: 0
  8890  001FE6  0E00               	movlw	0
  8891  001FE8  6F72               	movwf	___flmul@a& (0+255),b
  8892  001FEA  0E00               	movlw	0
  8893  001FEC  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8894  001FEE  0E00               	movlw	0
  8895  001FF0  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8896  001FF2  0E00               	movlw	0
  8897  001FF4  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8898  001FF6                     l1137:
  8899                           
  8900                           ; BSR set to: 0
  8901  001FF6  517B               	movf	___flmul@aexp& (0+255),w,b
  8902  001FF8  B4D8               	btfsc	status,2,c
  8903  001FFA  D003               	goto	u7980
  8904                           
  8905                           ; BSR set to: 0
  8906  001FFC  5180               	movf	___flmul@bexp& (0+255),w,b
  8907  001FFE  A4D8               	btfss	status,2,c
  8908  002000  D009               	goto	l6371
  8909  002002                     u7980:
  8910                           
  8911                           ; BSR set to: 0
  8912  002002  0E00               	movlw	0
  8913  002004  6F6E               	movwf	?___flmul& (0+255),b
  8914  002006  0E00               	movlw	0
  8915  002008  6F6F               	movwf	(?___flmul+1)& (0+255),b
  8916  00200A  0E00               	movlw	0
  8917  00200C  6F70               	movwf	(?___flmul+2)& (0+255),b
  8918  00200E  0E00               	movlw	0
  8919  002010  6F71               	movwf	(?___flmul+3)& (0+255),b
  8920  002012  0012               	return	
  8921  002014                     l6371:
  8922                           
  8923                           ; BSR set to: 0
  8924  002014  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8925  002016  036E               	mulwf	___flmul@b& (0+255),b
  8926  002018  CFF3 F085          	movff	prodl,___flmul@temp
  8927  00201C  CFF4 F086          	movff	prodh,___flmul@temp+1
  8928                           
  8929                           ; BSR set to: 0
  8930  002020  5185               	movf	___flmul@temp& (0+255),w,b
  8931  002022  6F7C               	movwf	___flmul@grs& (0+255),b
  8932  002024  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
  8933  002026  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
  8934  002028  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
  8935                           
  8936                           ; BSR set to: 0
  8937  00202A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8938  00202C  6F81               	movwf	___flmul@prod& (0+255),b
  8939  00202E  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  8940  002030  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  8941  002032  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  8942  002034  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8943  002036  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8944  002038  CFF3 F085          	movff	prodl,___flmul@temp
  8945  00203C  CFF4 F086          	movff	prodh,___flmul@temp+1
  8946                           
  8947                           ; BSR set to: 0
  8948  002040  5185               	movf	___flmul@temp& (0+255),w,b
  8949  002042  277C               	addwf	___flmul@grs& (0+255),f,b
  8950  002044  0E00               	movlw	0
  8951  002046  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8952  002048  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8953  00204A  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8954                           
  8955                           ; BSR set to: 0
  8956  00204C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8957  00204E  2781               	addwf	___flmul@prod& (0+255),f,b
  8958  002050  0E00               	movlw	0
  8959  002052  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8960  002054  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8961  002056  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8962  002058  5172               	movf	___flmul@a& (0+255),w,b
  8963  00205A  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8964  00205C  CFF3 F085          	movff	prodl,___flmul@temp
  8965  002060  CFF4 F086          	movff	prodh,___flmul@temp+1
  8966                           
  8967                           ; BSR set to: 0
  8968  002064  5185               	movf	___flmul@temp& (0+255),w,b
  8969  002066  277C               	addwf	___flmul@grs& (0+255),f,b
  8970  002068  0E00               	movlw	0
  8971  00206A  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8972  00206C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8973  00206E  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8974                           
  8975                           ; BSR set to: 0
  8976  002070  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8977  002072  2781               	addwf	___flmul@prod& (0+255),f,b
  8978  002074  0E00               	movlw	0
  8979  002076  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8980  002078  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8981  00207A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8982                           
  8983                           ; BSR set to: 0
  8984  00207C  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  8985  002080  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  8986  002084  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  8987  002088  6B7C               	clrf	___flmul@grs& (0+255),b
  8988                           
  8989                           ; BSR set to: 0
  8990  00208A  5172               	movf	___flmul@a& (0+255),w,b
  8991  00208C  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8992  00208E  CFF3 F085          	movff	prodl,___flmul@temp
  8993  002092  CFF4 F086          	movff	prodh,___flmul@temp+1
  8994                           
  8995                           ; BSR set to: 0
  8996  002096  5185               	movf	___flmul@temp& (0+255),w,b
  8997  002098  277C               	addwf	___flmul@grs& (0+255),f,b
  8998  00209A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8999  00209C  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9000  00209E  0E00               	movlw	0
  9001  0020A0  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9002  0020A2  0E00               	movlw	0
  9003  0020A4  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9004                           
  9005                           ; BSR set to: 0
  9006  0020A6  5173               	movf	(___flmul@a+1)& (0+255),w,b
  9007  0020A8  036E               	mulwf	___flmul@b& (0+255),b
  9008  0020AA  CFF3 F085          	movff	prodl,___flmul@temp
  9009  0020AE  CFF4 F086          	movff	prodh,___flmul@temp+1
  9010                           
  9011                           ; BSR set to: 0
  9012  0020B2  5185               	movf	___flmul@temp& (0+255),w,b
  9013  0020B4  277C               	addwf	___flmul@grs& (0+255),f,b
  9014  0020B6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9015  0020B8  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9016  0020BA  0E00               	movlw	0
  9017  0020BC  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9018  0020BE  0E00               	movlw	0
  9019  0020C0  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9020                           
  9021                           ; BSR set to: 0
  9022  0020C2  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  9023  0020C6  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  9024  0020CA  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  9025  0020CE  6B7C               	clrf	___flmul@grs& (0+255),b
  9026  0020D0  5172               	movf	___flmul@a& (0+255),w,b
  9027  0020D2  036E               	mulwf	___flmul@b& (0+255),b
  9028  0020D4  CFF3 F085          	movff	prodl,___flmul@temp
  9029  0020D8  CFF4 F086          	movff	prodh,___flmul@temp+1
  9030                           
  9031                           ; BSR set to: 0
  9032  0020DC  5185               	movf	___flmul@temp& (0+255),w,b
  9033  0020DE  277C               	addwf	___flmul@grs& (0+255),f,b
  9034  0020E0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9035  0020E2  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9036  0020E4  0E00               	movlw	0
  9037  0020E6  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9038  0020E8  0E00               	movlw	0
  9039  0020EA  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9040                           
  9041                           ; BSR set to: 0
  9042  0020EC  5174               	movf	(___flmul@a+2)& (0+255),w,b
  9043  0020EE  036F               	mulwf	(___flmul@b+1)& (0+255),b
  9044  0020F0  CFF3 F085          	movff	prodl,___flmul@temp
  9045  0020F4  CFF4 F086          	movff	prodh,___flmul@temp+1
  9046  0020F8  5185               	movf	___flmul@temp& (0+255),w,b
  9047  0020FA  2781               	addwf	___flmul@prod& (0+255),f,b
  9048  0020FC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9049  0020FE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9050  002100  0E00               	movlw	0
  9051  002102  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9052  002104  0E00               	movlw	0
  9053  002106  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9054                           
  9055                           ; BSR set to: 0
  9056  002108  5173               	movf	(___flmul@a+1)& (0+255),w,b
  9057  00210A  0370               	mulwf	(___flmul@b+2)& (0+255),b
  9058  00210C  CFF3 F085          	movff	prodl,___flmul@temp
  9059  002110  CFF4 F086          	movff	prodh,___flmul@temp+1
  9060                           
  9061                           ; BSR set to: 0
  9062  002114  5185               	movf	___flmul@temp& (0+255),w,b
  9063  002116  2781               	addwf	___flmul@prod& (0+255),f,b
  9064  002118  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9065  00211A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9066  00211C  0E00               	movlw	0
  9067  00211E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9068  002120  0E00               	movlw	0
  9069  002122  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9070  002124  5174               	movf	(___flmul@a+2)& (0+255),w,b
  9071  002126  0370               	mulwf	(___flmul@b+2)& (0+255),b
  9072  002128  CFF3 F085          	movff	prodl,___flmul@temp
  9073  00212C  CFF4 F086          	movff	prodh,___flmul@temp+1
  9074                           
  9075                           ; BSR set to: 0
  9076  002130  5185               	movf	___flmul@temp& (0+255),w,b
  9077  002132  6F76               	movwf	??___flmul& (0+255),b
  9078  002134  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9079  002136  6F77               	movwf	(??___flmul+1)& (0+255),b
  9080  002138  6B78               	clrf	(??___flmul+2)& (0+255),b
  9081  00213A  6B79               	clrf	(??___flmul+3)& (0+255),b
  9082  00213C  C078  F079         	movff	??___flmul+2,??___flmul+3
  9083  002140  C077  F078         	movff	??___flmul+1,??___flmul+2
  9084  002144  C076  F077         	movff	??___flmul,??___flmul+1
  9085  002148  6B76               	clrf	??___flmul& (0+255),b
  9086  00214A  5176               	movf	??___flmul& (0+255),w,b
  9087  00214C  2781               	addwf	___flmul@prod& (0+255),f,b
  9088  00214E  5177               	movf	(??___flmul+1)& (0+255),w,b
  9089  002150  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9090  002152  5178               	movf	(??___flmul+2)& (0+255),w,b
  9091  002154  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9092  002156  5179               	movf	(??___flmul+3)& (0+255),w,b
  9093  002158  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9094                           
  9095                           ; BSR set to: 0
  9096  00215A  C07C  F076         	movff	___flmul@grs,??___flmul
  9097  00215E  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
  9098  002162  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
  9099  002166  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
  9100  00216A  0E19               	movlw	25
  9101  00216C  D005               	goto	u7990
  9102  00216E                     u7995:
  9103  00216E  90D8               	bcf	status,0,c
  9104  002170  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  9105  002172  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  9106  002174  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  9107  002176  3376               	rrcf	??___flmul& (0+255),f,b
  9108  002178                     u7990:
  9109  002178  2EE8               	decfsz	wreg,f,c
  9110  00217A  D7F9               	goto	u7995
  9111  00217C  5176               	movf	??___flmul& (0+255),w,b
  9112  00217E  2781               	addwf	___flmul@prod& (0+255),f,b
  9113  002180  5177               	movf	(??___flmul+1)& (0+255),w,b
  9114  002182  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9115  002184  5178               	movf	(??___flmul+2)& (0+255),w,b
  9116  002186  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9117  002188  5179               	movf	(??___flmul+3)& (0+255),w,b
  9118  00218A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9119                           
  9120                           ; BSR set to: 0
  9121  00218C  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  9122  002190  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  9123  002194  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  9124  002198  6B7C               	clrf	___flmul@grs& (0+255),b
  9125                           
  9126                           ; BSR set to: 0
  9127  00219A  517B               	movf	___flmul@aexp& (0+255),w,b
  9128  00219C  C080  F076         	movff	___flmul@bexp,??___flmul
  9129  0021A0  6B77               	clrf	(??___flmul+1)& (0+255),b
  9130  0021A2  2776               	addwf	??___flmul& (0+255),f,b
  9131  0021A4  0E00               	movlw	0
  9132  0021A6  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  9133  0021A8  0E82               	movlw	130
  9134  0021AA  2576               	addwf	??___flmul& (0+255),w,b
  9135  0021AC  6F85               	movwf	___flmul@temp& (0+255),b
  9136  0021AE  0EFF               	movlw	255
  9137  0021B0  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  9138  0021B2  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  9139  0021B4  D00F               	goto	l6419
  9140  0021B6                     l6413:
  9141                           
  9142                           ; BSR set to: 0
  9143  0021B6  90D8               	bcf	status,0,c
  9144  0021B8  3781               	rlcf	___flmul@prod& (0+255),f,b
  9145  0021BA  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9146  0021BC  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9147  0021BE  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9148                           
  9149                           ; BSR set to: 0
  9150  0021C0  BF7F               	btfsc	(___flmul@grs+3)& (0+255),7,b
  9151                           
  9152                           ; BSR set to: 0
  9153  0021C2  8181               	bsf	___flmul@prod& (0+255),0,b
  9154                           
  9155                           ; BSR set to: 0
  9156  0021C4  90D8               	bcf	status,0,c
  9157  0021C6  377C               	rlcf	___flmul@grs& (0+255),f,b
  9158  0021C8  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9159  0021CA  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9160  0021CC  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9161  0021CE  0785               	decf	___flmul@temp& (0+255),f,b
  9162  0021D0  A0D8               	btfss	status,0,c
  9163  0021D2  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  9164  0021D4                     l6419:
  9165                           
  9166                           ; BSR set to: 0
  9167  0021D4  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  9168  0021D6  D7EF               	goto	l6413
  9169                           
  9170                           ; BSR set to: 0
  9171  0021D8  0E00               	movlw	0
  9172  0021DA  6F7B               	movwf	___flmul@aexp& (0+255),b
  9173                           
  9174                           ; BSR set to: 0
  9175  0021DC  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  9176  0021DE  D017               	goto	l1146
  9177                           
  9178                           ; BSR set to: 0
  9179  0021E0  0EFF               	movlw	255
  9180  0021E2  157C               	andwf	___flmul@grs& (0+255),w,b
  9181  0021E4  6F76               	movwf	??___flmul& (0+255),b
  9182  0021E6  0EFF               	movlw	255
  9183  0021E8  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
  9184  0021EA  6F77               	movwf	(??___flmul+1)& (0+255),b
  9185  0021EC  0EFF               	movlw	255
  9186  0021EE  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
  9187  0021F0  6F78               	movwf	(??___flmul+2)& (0+255),b
  9188  0021F2  0E7F               	movlw	127
  9189  0021F4  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
  9190  0021F6  6F79               	movwf	(??___flmul+3)& (0+255),b
  9191  0021F8  5176               	movf	??___flmul& (0+255),w,b
  9192  0021FA  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  9193  0021FC  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  9194  0021FE  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  9195  002200  B4D8               	btfsc	status,2,c
  9196  002202  D003               	goto	l1147
  9197  002204                     u8030:
  9198                           
  9199                           ; BSR set to: 0
  9200  002204  0E01               	movlw	1
  9201  002206  6F7B               	movwf	___flmul@aexp& (0+255),b
  9202  002208  D002               	goto	l1146
  9203  00220A                     l1147:
  9204                           
  9205                           ; BSR set to: 0
  9206  00220A  B181               	btfsc	___flmul@prod& (0+255),0,b
  9207  00220C  D7FB               	goto	u8030
  9208  00220E                     l1146:
  9209                           
  9210                           ; BSR set to: 0
  9211  00220E  517B               	movf	___flmul@aexp& (0+255),w,b
  9212  002210  B4D8               	btfsc	status,2,c
  9213  002212  D01F               	goto	l6439
  9214                           
  9215                           ; BSR set to: 0
  9216  002214  0E01               	movlw	1
  9217  002216  2781               	addwf	___flmul@prod& (0+255),f,b
  9218  002218  0E00               	movlw	0
  9219  00221A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9220  00221C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9221  00221E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9222                           
  9223                           ; BSR set to: 0
  9224  002220  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  9225  002222  D017               	goto	l6439
  9226                           
  9227                           ; BSR set to: 0
  9228  002224  C081  F076         	movff	___flmul@prod,??___flmul
  9229  002228  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  9230  00222C  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  9231  002230  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  9232  002234  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  9233  002236  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  9234  002238  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  9235  00223A  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  9236  00223C  3376               	rrcf	??___flmul& (0+255),f,b
  9237  00223E  C076  F081         	movff	??___flmul,___flmul@prod
  9238  002242  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  9239  002246  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  9240  00224A  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  9241                           
  9242                           ; BSR set to: 0
  9243  00224E  4B85               	infsnz	___flmul@temp& (0+255),f,b
  9244  002250  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  9245  002252                     l6439:
  9246                           
  9247                           ; BSR set to: 0
  9248  002252  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9249  002254  D00D               	goto	l6443
  9250  002256  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9251  002258  E103               	bnz	u8070
  9252  00225A  2985               	incf	___flmul@temp& (0+255),w,b
  9253  00225C  A0D8               	btfss	status,0,c
  9254  00225E  D008               	goto	l6443
  9255  002260                     u8070:
  9256                           
  9257                           ; BSR set to: 0
  9258  002260  0E00               	movlw	0
  9259  002262  6F81               	movwf	___flmul@prod& (0+255),b
  9260  002264  0E00               	movlw	0
  9261  002266  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  9262  002268  0E80               	movlw	128
  9263  00226A  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  9264  00226C  0E7F               	movlw	127
  9265  00226E  D020               	goto	L9
  9266  002270                     l6443:
  9267                           
  9268                           ; BSR set to: 0
  9269  002270  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9270  002272  D005               	goto	u8080
  9271  002274  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9272  002276  E10E               	bnz	l1154
  9273  002278  0585               	decf	___flmul@temp& (0+255),w,b
  9274  00227A  B0D8               	btfsc	status,0,c
  9275  00227C  D00B               	goto	l1154
  9276  00227E                     u8080:
  9277                           
  9278                           ; BSR set to: 0
  9279  00227E  0E00               	movlw	0
  9280  002280  6F81               	movwf	___flmul@prod& (0+255),b
  9281  002282  0E00               	movlw	0
  9282  002284  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  9283  002286  0E00               	movlw	0
  9284  002288  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  9285  00228A  0E00               	movlw	0
  9286  00228C  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9287  00228E  0E00               	movlw	0
  9288  002290  6F7A               	movwf	___flmul@sign& (0+255),b
  9289  002292  D00F               	goto	l6455
  9290  002294                     l1154:
  9291                           
  9292                           ; BSR set to: 0
  9293  002294  C085  F080         	movff	___flmul@temp,___flmul@bexp
  9294                           
  9295                           ; BSR set to: 0
  9296  002298  0EFF               	movlw	255
  9297  00229A  1781               	andwf	___flmul@prod& (0+255),f,b
  9298  00229C  0EFF               	movlw	255
  9299  00229E  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  9300  0022A0  0E7F               	movlw	127
  9301  0022A2  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  9302  0022A4  0E00               	movlw	0
  9303  0022A6  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  9304                           
  9305                           ; BSR set to: 0
  9306  0022A8  B180               	btfsc	___flmul@bexp& (0+255),0,b
  9307                           
  9308                           ; BSR set to: 0
  9309  0022AA  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  9310                           
  9311                           ; BSR set to: 0
  9312  0022AC  90D8               	bcf	status,0,c
  9313  0022AE  3180               	rrcf	___flmul@bexp& (0+255),w,b
  9314  0022B0                     L9:
  9315  0022B0  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9316  0022B2                     l6455:
  9317                           
  9318                           ; BSR set to: 0
  9319  0022B2  517A               	movf	___flmul@sign& (0+255),w,b
  9320  0022B4  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9321                           
  9322                           ; BSR set to: 0
  9323  0022B6  C081  F06E         	movff	___flmul@prod,?___flmul
  9324  0022BA  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  9325  0022BE  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  9326  0022C2  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  9327                           
  9328                           ; BSR set to: 0
  9329  0022C6  0012               	return		;funcret
  9330  0022C8                     __end_of___flmul:
  9331                           	opt callstack 0
  9332                           
  9333 ;; *************** function ___fladd *****************
  9334 ;; Defined at:
  9335 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;  b               4   39[BANK0 ] unsigned char 
  9338 ;;  a               4   43[BANK0 ] unsigned char 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  grs             1   54[BANK0 ] unsigned char 
  9341 ;;  bexp            1   53[BANK0 ] unsigned char 
  9342 ;;  aexp            1   52[BANK0 ] unsigned char 
  9343 ;;  signs           1   51[BANK0 ] unsigned char 
  9344 ;; Return value:  Size  Location     Type
  9345 ;;                  4   39[BANK0 ] unsigned char 
  9346 ;; Registers used:
  9347 ;;		wreg, status,2, status,0
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9353 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9354 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9355 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9356 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9357 ;;Total ram usage:       16 bytes
  9358 ;; Hardware stack levels used:    1
  9359 ;; Hardware stack levels required when called:    2
  9360 ;; This function calls:
  9361 ;;		Nothing
  9362 ;; This function is called by:
  9363 ;;		_fijarVelocidad
  9364 ;;		_efgtoa
  9365 ;;		___flsub
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           	psect	text37
  9370  0022C8                     __ptext37:
  9371                           	opt callstack 0
  9372  0022C8                     ___fladd:
  9373                           	opt callstack 22
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;incstack = 0
  9377  0022C8  0100               	movlb	0	; () banked
  9378  0022CA  518A               	movf	(___fladd@b+3)& (0+255),w,b
  9379  0022CC  0B80               	andlw	128
  9380  0022CE  6F93               	movwf	___fladd@signs& (0+255),b
  9381  0022D0  518A               	movf	(___fladd@b+3)& (0+255),w,b
  9382  0022D2  258A               	addwf	(___fladd@b+3)& (0+255),w,b
  9383  0022D4  6F95               	movwf	___fladd@bexp& (0+255),b
  9384                           
  9385                           ; BSR set to: 0
  9386  0022D6  BF89               	btfsc	(___fladd@b+2)& (0+255),7,b
  9387                           
  9388                           ; BSR set to: 0
  9389  0022D8  8195               	bsf	___fladd@bexp& (0+255),0,b
  9390                           
  9391                           ; BSR set to: 0
  9392  0022DA  5195               	movf	___fladd@bexp& (0+255),w,b
  9393  0022DC  B4D8               	btfsc	status,2,c
  9394  0022DE  D00D               	goto	l5911
  9395                           
  9396                           ; BSR set to: 0
  9397  0022E0  2995               	incf	___fladd@bexp& (0+255),w,b
  9398  0022E2  A4D8               	btfss	status,2,c
  9399  0022E4  D008               	goto	l5907
  9400                           
  9401                           ; BSR set to: 0
  9402  0022E6  0E00               	movlw	0
  9403  0022E8  6F87               	movwf	___fladd@b& (0+255),b
  9404  0022EA  0E00               	movlw	0
  9405  0022EC  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9406  0022EE  0E00               	movlw	0
  9407  0022F0  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9408  0022F2  0E00               	movlw	0
  9409  0022F4  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9410  0022F6                     l5907:
  9411                           
  9412                           ; BSR set to: 0
  9413  0022F6  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  9414  0022F8  D006               	goto	L10
  9415  0022FA                     l5911:
  9416                           
  9417                           ; BSR set to: 0
  9418  0022FA  0E00               	movlw	0
  9419  0022FC  6F87               	movwf	___fladd@b& (0+255),b
  9420  0022FE  0E00               	movlw	0
  9421  002300  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9422  002302  0E00               	movlw	0
  9423  002304  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9424  002306                     L10:
  9425  002306  0E00               	movlw	0
  9426  002308  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9427                           
  9428                           ; BSR set to: 0
  9429  00230A  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9430  00230C  0B80               	andlw	128
  9431  00230E  6F94               	movwf	___fladd@aexp& (0+255),b
  9432                           
  9433                           ; BSR set to: 0
  9434  002310  5193               	movf	___fladd@signs& (0+255),w,b
  9435  002312  1994               	xorwf	___fladd@aexp& (0+255),w,b
  9436  002314  A4D8               	btfss	status,2,c
  9437                           
  9438                           ; BSR set to: 0
  9439  002316  8D93               	bsf	___fladd@signs& (0+255),6,b
  9440                           
  9441                           ; BSR set to: 0
  9442  002318  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9443  00231A  258E               	addwf	(___fladd@a+3)& (0+255),w,b
  9444  00231C  6F94               	movwf	___fladd@aexp& (0+255),b
  9445                           
  9446                           ; BSR set to: 0
  9447  00231E  BF8D               	btfsc	(___fladd@a+2)& (0+255),7,b
  9448                           
  9449                           ; BSR set to: 0
  9450  002320  8194               	bsf	___fladd@aexp& (0+255),0,b
  9451                           
  9452                           ; BSR set to: 0
  9453  002322  5194               	movf	___fladd@aexp& (0+255),w,b
  9454  002324  B4D8               	btfsc	status,2,c
  9455  002326  D00D               	goto	l5935
  9456                           
  9457                           ; BSR set to: 0
  9458  002328  2994               	incf	___fladd@aexp& (0+255),w,b
  9459  00232A  A4D8               	btfss	status,2,c
  9460  00232C  D008               	goto	l5931
  9461                           
  9462                           ; BSR set to: 0
  9463  00232E  0E00               	movlw	0
  9464  002330  6F8B               	movwf	___fladd@a& (0+255),b
  9465  002332  0E00               	movlw	0
  9466  002334  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  9467  002336  0E00               	movlw	0
  9468  002338  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  9469  00233A  0E00               	movlw	0
  9470  00233C  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  9471  00233E                     l5931:
  9472                           
  9473                           ; BSR set to: 0
  9474  00233E  8F8D               	bsf	(___fladd@a+2)& (0+255),7,b
  9475  002340  D006               	goto	L11
  9476  002342                     l5935:
  9477                           
  9478                           ; BSR set to: 0
  9479  002342  0E00               	movlw	0
  9480  002344  6F8B               	movwf	___fladd@a& (0+255),b
  9481  002346  0E00               	movlw	0
  9482  002348  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  9483  00234A  0E00               	movlw	0
  9484  00234C  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  9485  00234E                     L11:
  9486  00234E  0E00               	movlw	0
  9487  002350  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  9488                           
  9489                           ; BSR set to: 0
  9490  002352  5195               	movf	___fladd@bexp& (0+255),w,b
  9491  002354  5D94               	subwf	___fladd@aexp& (0+255),w,b
  9492  002356  B0D8               	btfsc	status,0,c
  9493  002358  D022               	goto	l5973
  9494                           
  9495                           ; BSR set to: 0
  9496  00235A  AD93               	btfss	___fladd@signs& (0+255),6,b
  9497  00235C  D002               	goto	l5943
  9498                           
  9499                           ; BSR set to: 0
  9500  00235E  0E80               	movlw	128
  9501  002360  1B93               	xorwf	___fladd@signs& (0+255),f,b
  9502  002362                     l5943:
  9503                           
  9504                           ; BSR set to: 0
  9505  002362  C095  F096         	movff	___fladd@bexp,___fladd@grs
  9506                           
  9507                           ; BSR set to: 0
  9508  002366  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  9509                           
  9510                           ; BSR set to: 0
  9511  00236A  C096  F094         	movff	___fladd@grs,___fladd@aexp
  9512                           
  9513                           ; BSR set to: 0
  9514  00236E  C087  F096         	movff	___fladd@b,___fladd@grs
  9515                           
  9516                           ; BSR set to: 0
  9517  002372  C08B  F087         	movff	___fladd@a,___fladd@b
  9518                           
  9519                           ; BSR set to: 0
  9520  002376  C096  F08B         	movff	___fladd@grs,___fladd@a
  9521                           
  9522                           ; BSR set to: 0
  9523  00237A  C088  F096         	movff	___fladd@b+1,___fladd@grs
  9524                           
  9525                           ; BSR set to: 0
  9526  00237E  C08C  F088         	movff	___fladd@a+1,___fladd@b+1
  9527                           
  9528                           ; BSR set to: 0
  9529  002382  C096  F08C         	movff	___fladd@grs,___fladd@a+1
  9530                           
  9531                           ; BSR set to: 0
  9532  002386  C089  F096         	movff	___fladd@b+2,___fladd@grs
  9533                           
  9534                           ; BSR set to: 0
  9535  00238A  C08D  F089         	movff	___fladd@a+2,___fladd@b+2
  9536                           
  9537                           ; BSR set to: 0
  9538  00238E  C096  F08D         	movff	___fladd@grs,___fladd@a+2
  9539                           
  9540                           ; BSR set to: 0
  9541  002392  C08A  F096         	movff	___fladd@b+3,___fladd@grs
  9542                           
  9543                           ; BSR set to: 0
  9544  002396  C08E  F08A         	movff	___fladd@a+3,___fladd@b+3
  9545                           
  9546                           ; BSR set to: 0
  9547  00239A  C096  F08E         	movff	___fladd@grs,___fladd@a+3
  9548  00239E                     l5973:
  9549                           
  9550                           ; BSR set to: 0
  9551  00239E  0E00               	movlw	0
  9552  0023A0  6F96               	movwf	___fladd@grs& (0+255),b
  9553                           
  9554                           ; BSR set to: 0
  9555  0023A2  5195               	movf	___fladd@bexp& (0+255),w,b
  9556  0023A4  C094  F08F         	movff	___fladd@aexp,??___fladd
  9557  0023A8  6B90               	clrf	(??___fladd+1)& (0+255),b
  9558  0023AA  5F8F               	subwf	??___fladd& (0+255),f,b
  9559  0023AC  0E00               	movlw	0
  9560  0023AE  5B90               	subwfb	(??___fladd+1)& (0+255),f,b
  9561  0023B0  BF90               	btfsc	(??___fladd+1)& (0+255),7,b
  9562  0023B2  D02C               	goto	l1052
  9563  0023B4  5190               	movf	(??___fladd+1)& (0+255),w,b
  9564  0023B6  E104               	bnz	u7100
  9565  0023B8  0E1A               	movlw	26
  9566  0023BA  5D8F               	subwf	??___fladd& (0+255),w,b
  9567  0023BC  A0D8               	btfss	status,0,c
  9568  0023BE  D026               	goto	l1052
  9569  0023C0                     u7100:
  9570                           
  9571                           ; BSR set to: 0
  9572  0023C0  5187               	movf	___fladd@b& (0+255),w,b
  9573  0023C2  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  9574  0023C4  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  9575  0023C6  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  9576  0023C8  B4D8               	btfsc	status,2,c
  9577  0023CA  D002               	goto	u7110
  9578  0023CC  0E01               	movlw	1
  9579  0023CE  D001               	goto	u7120
  9580  0023D0                     u7110:
  9581  0023D0  0E00               	movlw	0
  9582  0023D2                     u7120:
  9583  0023D2  6F96               	movwf	___fladd@grs& (0+255),b
  9584                           
  9585                           ; BSR set to: 0
  9586  0023D4  0E00               	movlw	0
  9587  0023D6  6F87               	movwf	___fladd@b& (0+255),b
  9588  0023D8  0E00               	movlw	0
  9589  0023DA  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9590  0023DC  0E00               	movlw	0
  9591  0023DE  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9592  0023E0  0E00               	movlw	0
  9593  0023E2  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9594                           
  9595                           ; BSR set to: 0
  9596  0023E4  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  9597  0023E8  D015               	goto	u7150
  9598  0023EA                     l1053:
  9599                           
  9600                           ; BSR set to: 0
  9601  0023EA  A196               	btfss	___fladd@grs& (0+255),0,b
  9602  0023EC  D005               	goto	l5985
  9603                           
  9604                           ; BSR set to: 0
  9605  0023EE  90D8               	bcf	status,0,c
  9606  0023F0  3196               	rrcf	___fladd@grs& (0+255),w,b
  9607  0023F2  0901               	iorlw	1
  9608  0023F4  6F96               	movwf	___fladd@grs& (0+255),b
  9609  0023F6  D002               	goto	l5987
  9610  0023F8                     l5985:
  9611                           
  9612                           ; BSR set to: 0
  9613  0023F8  90D8               	bcf	status,0,c
  9614  0023FA  3396               	rrcf	___fladd@grs& (0+255),f,b
  9615  0023FC                     l5987:
  9616                           
  9617                           ; BSR set to: 0
  9618  0023FC  B187               	btfsc	___fladd@b& (0+255),0,b
  9619                           
  9620                           ; BSR set to: 0
  9621  0023FE  8F96               	bsf	___fladd@grs& (0+255),7,b
  9622                           
  9623                           ; BSR set to: 0
  9624  002400  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  9625  002402  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  9626  002404  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  9627  002406  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  9628  002408  3387               	rrcf	___fladd@b& (0+255),f,b
  9629                           
  9630                           ; BSR set to: 0
  9631  00240A  2B95               	incf	___fladd@bexp& (0+255),f,b
  9632  00240C                     l1052:
  9633                           
  9634                           ; BSR set to: 0
  9635  00240C  5194               	movf	___fladd@aexp& (0+255),w,b
  9636  00240E  5D95               	subwf	___fladd@bexp& (0+255),w,b
  9637  002410  A0D8               	btfss	status,0,c
  9638  002412  D7EB               	goto	l1053
  9639  002414                     u7150:
  9640                           
  9641                           ; BSR set to: 0
  9642  002414  BD93               	btfsc	___fladd@signs& (0+255),6,b
  9643  002416  D028               	goto	l6019
  9644                           
  9645                           ; BSR set to: 0
  9646  002418  5195               	movf	___fladd@bexp& (0+255),w,b
  9647  00241A  A4D8               	btfss	status,2,c
  9648  00241C  D009               	goto	l6001
  9649                           
  9650                           ; BSR set to: 0
  9651  00241E  0E00               	movlw	0
  9652  002420  6F87               	movwf	?___fladd& (0+255),b
  9653  002422  0E00               	movlw	0
  9654  002424  6F88               	movwf	(?___fladd+1)& (0+255),b
  9655  002426  0E00               	movlw	0
  9656  002428  6F89               	movwf	(?___fladd+2)& (0+255),b
  9657  00242A  0E00               	movlw	0
  9658  00242C  6F8A               	movwf	(?___fladd+3)& (0+255),b
  9659  00242E  0012               	return	
  9660  002430                     l6001:
  9661                           
  9662                           ; BSR set to: 0
  9663  002430  518B               	movf	___fladd@a& (0+255),w,b
  9664  002432  2787               	addwf	___fladd@b& (0+255),f,b
  9665  002434  518C               	movf	(___fladd@a+1)& (0+255),w,b
  9666  002436  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  9667  002438  518D               	movf	(___fladd@a+2)& (0+255),w,b
  9668  00243A  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  9669  00243C  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9670  00243E  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  9671                           
  9672                           ; BSR set to: 0
  9673  002440  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  9674  002442  D071               	goto	u7280
  9675                           
  9676                           ; BSR set to: 0
  9677  002444  A196               	btfss	___fladd@grs& (0+255),0,b
  9678  002446  D005               	goto	l6009
  9679                           
  9680                           ; BSR set to: 0
  9681  002448  90D8               	bcf	status,0,c
  9682  00244A  3196               	rrcf	___fladd@grs& (0+255),w,b
  9683  00244C  0901               	iorlw	1
  9684  00244E  6F96               	movwf	___fladd@grs& (0+255),b
  9685  002450  D002               	goto	l6011
  9686  002452                     l6009:
  9687                           
  9688                           ; BSR set to: 0
  9689  002452  90D8               	bcf	status,0,c
  9690  002454  3396               	rrcf	___fladd@grs& (0+255),f,b
  9691  002456                     l6011:
  9692                           
  9693                           ; BSR set to: 0
  9694  002456  B187               	btfsc	___fladd@b& (0+255),0,b
  9695                           
  9696                           ; BSR set to: 0
  9697  002458  8F96               	bsf	___fladd@grs& (0+255),7,b
  9698                           
  9699                           ; BSR set to: 0
  9700  00245A  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  9701  00245C  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  9702  00245E  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  9703  002460  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  9704  002462  3387               	rrcf	___fladd@b& (0+255),f,b
  9705                           
  9706                           ; BSR set to: 0
  9707  002464  2B95               	incf	___fladd@bexp& (0+255),f,b
  9708  002466  D05F               	goto	u7280
  9709  002468                     l6019:
  9710                           
  9711                           ; BSR set to: 0
  9712  002468  518B               	movf	___fladd@a& (0+255),w,b
  9713  00246A  5D87               	subwf	___fladd@b& (0+255),w,b
  9714  00246C  518C               	movf	(___fladd@a+1)& (0+255),w,b
  9715  00246E  5988               	subwfb	(___fladd@b+1)& (0+255),w,b
  9716  002470  518D               	movf	(___fladd@a+2)& (0+255),w,b
  9717  002472  5989               	subwfb	(___fladd@b+2)& (0+255),w,b
  9718  002474  518A               	movf	(___fladd@b+3)& (0+255),w,b
  9719  002476  0A80               	xorlw	128
  9720  002478  6F8F               	movwf	??___fladd& (0+255),b
  9721  00247A  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9722  00247C  0A80               	xorlw	128
  9723  00247E  598F               	subwfb	??___fladd& (0+255),w,b
  9724  002480  B0D8               	btfsc	status,0,c
  9725  002482  D025               	goto	l6029
  9726                           
  9727                           ; BSR set to: 0
  9728  002484  5187               	movf	___fladd@b& (0+255),w,b
  9729  002486  5D8B               	subwf	___fladd@a& (0+255),w,b
  9730  002488  6F8F               	movwf	??___fladd& (0+255),b
  9731  00248A  5188               	movf	(___fladd@b+1)& (0+255),w,b
  9732  00248C  598C               	subwfb	(___fladd@a+1)& (0+255),w,b
  9733  00248E  6F90               	movwf	(??___fladd+1)& (0+255),b
  9734  002490  5189               	movf	(___fladd@b+2)& (0+255),w,b
  9735  002492  598D               	subwfb	(___fladd@a+2)& (0+255),w,b
  9736  002494  6F91               	movwf	(??___fladd+2)& (0+255),b
  9737  002496  518A               	movf	(___fladd@b+3)& (0+255),w,b
  9738  002498  598E               	subwfb	(___fladd@a+3)& (0+255),w,b
  9739  00249A  6F92               	movwf	(??___fladd+3)& (0+255),b
  9740  00249C  0EFF               	movlw	255
  9741  00249E  258F               	addwf	??___fladd& (0+255),w,b
  9742  0024A0  6F87               	movwf	___fladd@b& (0+255),b
  9743  0024A2  0EFF               	movlw	255
  9744  0024A4  2190               	addwfc	(??___fladd+1)& (0+255),w,b
  9745  0024A6  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9746  0024A8  0EFF               	movlw	255
  9747  0024AA  2191               	addwfc	(??___fladd+2)& (0+255),w,b
  9748  0024AC  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9749  0024AE  0EFF               	movlw	255
  9750  0024B0  2192               	addwfc	(??___fladd+3)& (0+255),w,b
  9751  0024B2  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9752  0024B4  0E80               	movlw	128
  9753  0024B6  1B93               	xorwf	___fladd@signs& (0+255),f,b
  9754                           
  9755                           ; BSR set to: 0
  9756  0024B8  6D96               	negf	___fladd@grs& (0+255),b
  9757                           
  9758                           ; BSR set to: 0
  9759  0024BA  5196               	movf	___fladd@grs& (0+255),w,b
  9760  0024BC  A4D8               	btfss	status,2,c
  9761  0024BE  D00F               	goto	l1068
  9762                           
  9763                           ; BSR set to: 0
  9764  0024C0  0E01               	movlw	1
  9765  0024C2  2787               	addwf	___fladd@b& (0+255),f,b
  9766  0024C4  0E00               	movlw	0
  9767  0024C6  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  9768  0024C8  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  9769  0024CA  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  9770  0024CC  D008               	goto	l1068
  9771  0024CE                     l6029:
  9772                           
  9773                           ; BSR set to: 0
  9774  0024CE  518B               	movf	___fladd@a& (0+255),w,b
  9775  0024D0  5F87               	subwf	___fladd@b& (0+255),f,b
  9776  0024D2  518C               	movf	(___fladd@a+1)& (0+255),w,b
  9777  0024D4  5B88               	subwfb	(___fladd@b+1)& (0+255),f,b
  9778  0024D6  518D               	movf	(___fladd@a+2)& (0+255),w,b
  9779  0024D8  5B89               	subwfb	(___fladd@b+2)& (0+255),f,b
  9780  0024DA  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9781  0024DC  5B8A               	subwfb	(___fladd@b+3)& (0+255),f,b
  9782  0024DE                     l1068:
  9783                           
  9784                           ; BSR set to: 0
  9785  0024DE  5187               	movf	___fladd@b& (0+255),w,b
  9786  0024E0  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  9787  0024E2  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  9788  0024E4  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  9789  0024E6  A4D8               	btfss	status,2,c
  9790  0024E8  D01C               	goto	l6053
  9791                           
  9792                           ; BSR set to: 0
  9793  0024EA  5196               	movf	___fladd@grs& (0+255),w,b
  9794  0024EC  A4D8               	btfss	status,2,c
  9795  0024EE  D019               	goto	l6053
  9796                           
  9797                           ; BSR set to: 0
  9798  0024F0  0E00               	movlw	0
  9799  0024F2  6F87               	movwf	?___fladd& (0+255),b
  9800  0024F4  0E00               	movlw	0
  9801  0024F6  6F88               	movwf	(?___fladd+1)& (0+255),b
  9802  0024F8  0E00               	movlw	0
  9803  0024FA  6F89               	movwf	(?___fladd+2)& (0+255),b
  9804  0024FC  0E00               	movlw	0
  9805  0024FE  6F8A               	movwf	(?___fladd+3)& (0+255),b
  9806  002500  0012               	return	
  9807  002502                     l6037:
  9808                           
  9809                           ; BSR set to: 0
  9810  002502  90D8               	bcf	status,0,c
  9811  002504  3787               	rlcf	___fladd@b& (0+255),f,b
  9812  002506  3788               	rlcf	(___fladd@b+1)& (0+255),f,b
  9813  002508  3789               	rlcf	(___fladd@b+2)& (0+255),f,b
  9814  00250A  378A               	rlcf	(___fladd@b+3)& (0+255),f,b
  9815                           
  9816                           ; BSR set to: 0
  9817  00250C  BF96               	btfsc	___fladd@grs& (0+255),7,b
  9818                           
  9819                           ; BSR set to: 0
  9820  00250E  8187               	bsf	___fladd@b& (0+255),0,b
  9821                           
  9822                           ; BSR set to: 0
  9823  002510  A196               	btfss	___fladd@grs& (0+255),0,b
  9824  002512  D002               	goto	l6047
  9825                           
  9826                           ; BSR set to: 0
  9827  002514  80D8               	bsf	status,0,c
  9828  002516  D001               	goto	L12
  9829  002518                     l6047:
  9830                           
  9831                           ; BSR set to: 0
  9832  002518  90D8               	bcf	status,0,c
  9833  00251A                     L12:
  9834  00251A  3796               	rlcf	___fladd@grs& (0+255),f,b
  9835                           
  9836                           ; BSR set to: 0
  9837  00251C  5195               	movf	___fladd@bexp& (0+255),w,b
  9838  00251E  A4D8               	btfss	status,2,c
  9839                           
  9840                           ; BSR set to: 0
  9841  002520  0795               	decf	___fladd@bexp& (0+255),f,b
  9842  002522                     l6053:
  9843                           
  9844                           ; BSR set to: 0
  9845  002522  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  9846  002524  D7EE               	goto	l6037
  9847  002526                     u7280:
  9848                           
  9849                           ; BSR set to: 0
  9850  002526  0E00               	movlw	0
  9851  002528  6F94               	movwf	___fladd@aexp& (0+255),b
  9852                           
  9853                           ; BSR set to: 0
  9854  00252A  AF96               	btfss	___fladd@grs& (0+255),7,b
  9855  00252C  D00B               	goto	l1077
  9856                           
  9857                           ; BSR set to: 0
  9858  00252E  C096  F08F         	movff	___fladd@grs,??___fladd
  9859  002532  0E7F               	movlw	127
  9860  002534  178F               	andwf	??___fladd& (0+255),f,b
  9861  002536  B4D8               	btfsc	status,2,c
  9862  002538  D003               	goto	l1078
  9863  00253A                     u7300:
  9864                           
  9865                           ; BSR set to: 0
  9866  00253A  0E01               	movlw	1
  9867  00253C  6F94               	movwf	___fladd@aexp& (0+255),b
  9868  00253E  D002               	goto	l1077
  9869  002540                     l1078:
  9870                           
  9871                           ; BSR set to: 0
  9872  002540  B187               	btfsc	___fladd@b& (0+255),0,b
  9873  002542  D7FB               	goto	u7300
  9874  002544                     l1077:
  9875                           
  9876                           ; BSR set to: 0
  9877  002544  5194               	movf	___fladd@aexp& (0+255),w,b
  9878  002546  B4D8               	btfsc	status,2,c
  9879  002548  D020               	goto	l6073
  9880                           
  9881                           ; BSR set to: 0
  9882  00254A  0E01               	movlw	1
  9883  00254C  2787               	addwf	___fladd@b& (0+255),f,b
  9884  00254E  0E00               	movlw	0
  9885  002550  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  9886  002552  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  9887  002554  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  9888                           
  9889                           ; BSR set to: 0
  9890  002556  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  9891  002558  D018               	goto	l6073
  9892                           
  9893                           ; BSR set to: 0
  9894  00255A  C087  F08F         	movff	___fladd@b,??___fladd
  9895  00255E  C088  F090         	movff	___fladd@b+1,??___fladd+1
  9896  002562  C089  F091         	movff	___fladd@b+2,??___fladd+2
  9897  002566  C08A  F092         	movff	___fladd@b+3,??___fladd+3
  9898  00256A  3592               	rlcf	(??___fladd+3)& (0+255),w,b
  9899  00256C  3392               	rrcf	(??___fladd+3)& (0+255),f,b
  9900  00256E  3391               	rrcf	(??___fladd+2)& (0+255),f,b
  9901  002570  3390               	rrcf	(??___fladd+1)& (0+255),f,b
  9902  002572  338F               	rrcf	??___fladd& (0+255),f,b
  9903  002574  C08F  F087         	movff	??___fladd,___fladd@b
  9904  002578  C090  F088         	movff	??___fladd+1,___fladd@b+1
  9905  00257C  C091  F089         	movff	??___fladd+2,___fladd@b+2
  9906  002580  C092  F08A         	movff	??___fladd+3,___fladd@b+3
  9907  002584  2995               	incf	___fladd@bexp& (0+255),w,b
  9908  002586  A4D8               	btfss	status,2,c
  9909                           
  9910                           ; BSR set to: 0
  9911  002588  2B95               	incf	___fladd@bexp& (0+255),f,b
  9912  00258A                     l6073:
  9913                           
  9914                           ; BSR set to: 0
  9915  00258A  2995               	incf	___fladd@bexp& (0+255),w,b
  9916  00258C  B4D8               	btfsc	status,2,c
  9917  00258E  D003               	goto	u7360
  9918                           
  9919                           ; BSR set to: 0
  9920  002590  5195               	movf	___fladd@bexp& (0+255),w,b
  9921  002592  A4D8               	btfss	status,2,c
  9922  002594  D00D               	goto	l6081
  9923  002596                     u7360:
  9924                           
  9925                           ; BSR set to: 0
  9926  002596  0E00               	movlw	0
  9927  002598  6F87               	movwf	___fladd@b& (0+255),b
  9928  00259A  0E00               	movlw	0
  9929  00259C  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9930  00259E  0E00               	movlw	0
  9931  0025A0  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9932  0025A2  0E00               	movlw	0
  9933  0025A4  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9934  0025A6  5195               	movf	___fladd@bexp& (0+255),w,b
  9935  0025A8  A4D8               	btfss	status,2,c
  9936  0025AA  D002               	goto	l6081
  9937                           
  9938                           ; BSR set to: 0
  9939  0025AC  0E00               	movlw	0
  9940  0025AE  6F93               	movwf	___fladd@signs& (0+255),b
  9941  0025B0                     l6081:
  9942                           
  9943                           ; BSR set to: 0
  9944  0025B0  A195               	btfss	___fladd@bexp& (0+255),0,b
  9945  0025B2  D002               	goto	l6085
  9946                           
  9947                           ; BSR set to: 0
  9948  0025B4  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  9949  0025B6  D001               	goto	l6087
  9950  0025B8                     l6085:
  9951                           
  9952                           ; BSR set to: 0
  9953  0025B8  9F89               	bcf	(___fladd@b+2)& (0+255),7,b
  9954  0025BA                     l6087:
  9955                           
  9956                           ; BSR set to: 0
  9957  0025BA  90D8               	bcf	status,0,c
  9958  0025BC  3195               	rrcf	___fladd@bexp& (0+255),w,b
  9959  0025BE  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9960                           
  9961                           ; BSR set to: 0
  9962  0025C0  BF93               	btfsc	___fladd@signs& (0+255),7,b
  9963                           
  9964                           ; BSR set to: 0
  9965  0025C2  8F8A               	bsf	(___fladd@b+3)& (0+255),7,b
  9966                           
  9967                           ; BSR set to: 0
  9968  0025C4  C087  F087         	movff	___fladd@b,?___fladd
  9969  0025C8  C088  F088         	movff	___fladd@b+1,?___fladd+1
  9970  0025CC  C089  F089         	movff	___fladd@b+2,?___fladd+2
  9971  0025D0  C08A  F08A         	movff	___fladd@b+3,?___fladd+3
  9972                           
  9973                           ; BSR set to: 0
  9974  0025D4  0012               	return		;funcret
  9975  0025D6                     __end_of___fladd:
  9976                           	opt callstack 0
  9977                           
  9978 ;; *************** function _estadoDirreccion *****************
  9979 ;; Defined at:
  9980 ;;		line 191 in file "auto.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;  valor           1    wreg     unsigned char 
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;  valor           1    6[BANK0 ] unsigned char 
  9985 ;;  angulo          2    4[BANK0 ] unsigned int 
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  2    0[BANK0 ] unsigned int 
  9988 ;; Registers used:
  9989 ;;		wreg, status,2, status,0
  9990 ;; Tracked objects:
  9991 ;;		On entry : 0/0
  9992 ;;		On exit  : 0/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9995 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9996 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9997 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9998 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9999 ;;Total ram usage:        7 bytes
 10000 ;; Hardware stack levels used:    1
 10001 ;; Hardware stack levels required when called:    2
 10002 ;; This function calls:
 10003 ;;		Nothing
 10004 ;; This function is called by:
 10005 ;;		_terminal
 10006 ;; This function uses a non-reentrant model
 10007 ;;
 10008                           
 10009                           	psect	text38
 10010  003DA8                     __ptext38:
 10011                           	opt callstack 0
 10012  003DA8                     _estadoDirreccion:
 10013                           	opt callstack 27
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;incstack = 0
 10017                           ;estadoDirreccion@valor stored from wreg
 10018  003DA8  0100               	movlb	0	; () banked
 10019  003DAA  6F66               	movwf	estadoDirreccion@valor& (0+255),b
 10020                           
 10021                           ;auto.c: 192:     unsigned int angulo = 90;
 10022  003DAC  0E00               	movlw	0
 10023  003DAE  0100               	movlb	0	; () banked
 10024  003DB0  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
 10025  003DB2  0E5A               	movlw	90
 10026  003DB4  6F64               	movwf	estadoDirreccion@angulo& (0+255),b
 10027                           
 10028                           ;auto.c: 193:     switch(servo_dirreccion){
 10029  003DB6  D023               	goto	l7465
 10030  003DB8                     l7445:
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;auto.c: 195:             if(valor == 1){
 10034  003DB8  0566               	decf	estadoDirreccion@valor& (0+255),w,b
 10035  003DBA  A4D8               	btfss	status,2,c
 10036  003DBC  D006               	goto	l7449
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;auto.c: 196:                 servo_dirreccion = 1;
 10040  003DBE  0E01               	movlw	1
 10041  003DC0  6E43               	movwf	_servo_dirreccion,c
 10042  003DC2                     
 10043                           ;auto.c: 197:                 angulo = 0;
 10044  003DC2  0E00               	movlw	0
 10045  003DC4  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
 10046  003DC6  0E00               	movlw	0
 10047  003DC8  D018               	goto	L17
 10048  003DCA                     l7449:
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;auto.c: 200:                 servo_dirreccion = 2;
 10052  003DCA  0E02               	movlw	2
 10053  003DCC  6E43               	movwf	_servo_dirreccion,c
 10054  003DCE  D012               	goto	l7461
 10055  003DD0                     l7451:
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;auto.c: 205:             if(valor != 1){
 10059  003DD0  0566               	decf	estadoDirreccion@valor& (0+255),w,b
 10060  003DD2  B4D8               	btfsc	status,2,c
 10061  003DD4  D7F6               	goto	L18
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;auto.c: 206:                 servo_dirreccion = 0;
 10065  003DD6  0E00               	movlw	0
 10066  003DD8  6E43               	movwf	_servo_dirreccion,c
 10067                           
 10068                           ;auto.c: 207:                 angulo = 90;
 10069  003DDA  0E00               	movlw	0
 10070  003DDC  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
 10071  003DDE  0E5A               	movlw	90
 10072  003DE0  D00C               	goto	L17
 10073  003DE2                     l7457:
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;auto.c: 214:             if(valor == 1){
 10077  003DE2  0566               	decf	estadoDirreccion@valor& (0+255),w,b
 10078  003DE4  A4D8               	btfss	status,2,c
 10079  003DE6  D006               	goto	l7461
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;auto.c: 215:                 servo_dirreccion = 0;
 10083  003DE8  0E00               	movlw	0
 10084  003DEA  6E43               	movwf	_servo_dirreccion,c
 10085                           
 10086                           ;auto.c: 216:                 angulo = 85;
 10087  003DEC  0E00               	movlw	0
 10088  003DEE  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
 10089  003DF0  0E55               	movlw	85
 10090  003DF2  D003               	goto	L17
 10091  003DF4                     l7461:
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;auto.c: 219:                 angulo = 180;
 10095  003DF4  0E00               	movlw	0
 10096  003DF6  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
 10097  003DF8  0EB4               	movlw	180
 10098  003DFA                     L17:
 10099  003DFA  6F64               	movwf	estadoDirreccion@angulo& (0+255),b
 10100  003DFC  D011               	goto	l269
 10101  003DFE                     l7465:
 10102                           
 10103                           ; BSR set to: 0
 10104  003DFE  5043               	movf	_servo_dirreccion,w,c
 10105  003E00  6F62               	movwf	??_estadoDirreccion& (0+255),b
 10106  003E02  6B63               	clrf	(??_estadoDirreccion+1)& (0+255),b
 10107                           
 10108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10109                           ; Switch size 1, requested type "simple"
 10110                           ; Number of cases is 1, Range of values is 0 to 0
 10111                           ; switch strategies available:
 10112                           ; Name         Instructions Cycles
 10113                           ; simple_byte            4     3 (average)
 10114                           ;	Chosen strategy is simple_byte
 10115  003E04  5163               	movf	(??_estadoDirreccion+1)& (0+255),w,b
 10116  003E06  0A00               	xorlw	0	; case 0
 10117  003E08  A4D8               	btfss	status,2,c
 10118  003E0A  D00A               	goto	l269
 10119                           
 10120                           ; BSR set to: 0
 10121                           ; Switch size 1, requested type "simple"
 10122                           ; Number of cases is 3, Range of values is 0 to 2
 10123                           ; switch strategies available:
 10124                           ; Name         Instructions Cycles
 10125                           ; simple_byte           10     6 (average)
 10126                           ;	Chosen strategy is simple_byte
 10127  003E0C  5162               	movf	??_estadoDirreccion& (0+255),w,b
 10128  003E0E  0A00               	xorlw	0	; case 0
 10129  003E10  B4D8               	btfsc	status,2,c
 10130  003E12  D7D2               	goto	l7445
 10131  003E14  0A01               	xorlw	1	; case 1
 10132  003E16  B4D8               	btfsc	status,2,c
 10133  003E18  D7DB               	goto	l7451
 10134  003E1A  0A03               	xorlw	3	; case 2
 10135  003E1C  B4D8               	btfsc	status,2,c
 10136  003E1E  D7E1               	goto	l7457
 10137  003E20                     l269:
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;auto.c: 231:     return angulo;
 10141  003E20  C064  F060         	movff	estadoDirreccion@angulo,?_estadoDirreccion
 10142  003E24  C065  F061         	movff	estadoDirreccion@angulo+1,?_estadoDirreccion+1
 10143                           
 10144                           ; BSR set to: 0
 10145  003E28  0012               	return		;funcret
 10146  003E2A                     __end_of_estadoDirreccion:
 10147                           	opt callstack 0
 10148                           
 10149 ;; *************** function _enviarRS232 *****************
 10150 ;; Defined at:
 10151 ;;		line 52 in file "./../LIBRERIAS/funciones_auto.h"
 10152 ;; Parameters:    Size  Location     Type
 10153 ;;  valores         2    8[BANK0 ] PTR unsigned char 
 10154 ;;		 -> STR_6(8), STR_4(21), STR_3(20), terminal@texto(20), 
 10155 ;;		 -> STR_2(27), main@texto(8), main@text(6), 
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;  i               1   14[BANK0 ] unsigned char 
 10158 ;;  longitud_tex    2   12[BANK0 ] unsigned int 
 10159 ;; Return value:  Size  Location     Type
 10160 ;;                  1    wreg      void 
 10161 ;; Registers used:
 10162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10163 ;; Tracked objects:
 10164 ;;		On entry : 0/0
 10165 ;;		On exit  : 0/0
 10166 ;;		Unchanged: 0/0
 10167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10168 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10169 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10170 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10171 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10172 ;;Total ram usage:        7 bytes
 10173 ;; Hardware stack levels used:    1
 10174 ;; Hardware stack levels required when called:    3
 10175 ;; This function calls:
 10176 ;;		_length
 10177 ;; This function is called by:
 10178 ;;		_main
 10179 ;;		_terminal
 10180 ;;		_rutinaEscape
 10181 ;; This function uses a non-reentrant model
 10182 ;;
 10183                           
 10184                           	psect	text39
 10185  003EA6                     __ptext39:
 10186                           	opt callstack 0
 10187  003EA6                     _enviarRS232:
 10188                           	opt callstack 26
 10189                           
 10190                           ;./../LIBRERIAS/funciones_auto.h: 53:     unsigned int longitud_texto = length(valores);
 10191                           
 10192                           ; BSR set to: 0
 10193                           ;incstack = 0
 10194  003EA6  C068  F060         	movff	enviarRS232@valores,length@text
 10195  003EAA  C069  F061         	movff	enviarRS232@valores+1,length@text+1
 10196  003EAE  EC15  F01F         	call	_length	;wreg free
 10197  003EB2  C060  F06C         	movff	?_length,enviarRS232@longitud_texto
 10198  003EB6  C061  F06D         	movff	?_length+1,enviarRS232@longitud_texto+1
 10199                           
 10200                           ;./../LIBRERIAS/funciones_auto.h: 54:     for(unsigned char i = 0; i<longitud_texto; i++
      +                          ){
 10201  003EBA  0E00               	movlw	0
 10202  003EBC  0100               	movlb	0	; () banked
 10203  003EBE  6F6E               	movwf	enviarRS232@i& (0+255),b
 10204  003EC0  D023               	goto	l7425
 10205  003EC2                     l7419:
 10206                           
 10207                           ; BSR set to: 0
 10208                           ;./../LIBRERIAS/funciones_auto.h: 55:         TXREG1 = valores[i];
 10209  003EC2  516E               	movf	enviarRS232@i& (0+255),w,b
 10210  003EC4  2568               	addwf	enviarRS232@valores& (0+255),w,b
 10211  003EC6  6F6A               	movwf	??_enviarRS232& (0+255),b
 10212  003EC8  0E00               	movlw	0
 10213  003ECA  2169               	addwfc	(enviarRS232@valores+1)& (0+255),w,b
 10214  003ECC  6F6B               	movwf	(??_enviarRS232+1)& (0+255),b
 10215  003ECE  C06A  FFF6         	movff	??_enviarRS232,tblptrl
 10216  003ED2  C06B  FFF7         	movff	??_enviarRS232+1,tblptrh
 10217  003ED6  0E00               	movlw	low (__smallconst shr (0+16))
 10218  003ED8  6EF8               	movwf	tblptru,c
 10219  003EDA  0E0E               	movlw	(high __ramtop+-1)
 10220  003EDC  64F7               	cpfsgt	tblptrh,c
 10221  003EDE  D003               	bra	u9567
 10222  003EE0  0008               	tblrd		*
 10223  003EE2  50F5               	movf	tablat,w,c
 10224  003EE4  D005               	bra	u9560
 10225  003EE6                     u9567:
 10226  003EE6  CFF6 FFE1          	movff	tblptrl,fsr1l
 10227  003EEA  CFF7 FFE2          	movff	tblptrh,fsr1h
 10228  003EEE  50E7               	movf	indf1,w,c
 10229  003EF0                     u9560:
 10230  003EF0  6EAE               	movwf	4014,c	;volatile
 10231                           
 10232                           ;./../LIBRERIAS/funciones_auto.h: 56:         _delay((unsigned long)((3)*(48000000/4000.
      +                          0)));
 10233  003EF2  0E2F               	movlw	47
 10234  003EF4  0100               	movlb	0	; () banked
 10235  003EF6  6F6A               	movwf	??_enviarRS232& (0+255),b
 10236  003EF8  0EBF               	movlw	191
 10237  003EFA                     u9737:
 10238  003EFA  2EE8               	decfsz	wreg,f,c
 10239  003EFC  D7FE               	bra	u9737
 10240  003EFE  2F6A               	decfsz	??_enviarRS232& (0+255),f,b
 10241  003F00  D7FC               	bra	u9737
 10242  003F02  D000               	nop2	
 10243                           
 10244                           ;./../LIBRERIAS/funciones_auto.h: 57:     }
 10245  003F04  0100               	movlb	0	; () banked
 10246  003F06  2B6E               	incf	enviarRS232@i& (0+255),f,b
 10247  003F08                     l7425:
 10248                           
 10249                           ; BSR set to: 0
 10250  003F08  516E               	movf	enviarRS232@i& (0+255),w,b
 10251  003F0A  6F6A               	movwf	??_enviarRS232& (0+255),b
 10252  003F0C  6B6B               	clrf	(??_enviarRS232+1)& (0+255),b
 10253  003F0E  516C               	movf	enviarRS232@longitud_texto& (0+255),w,b
 10254  003F10  5D6A               	subwf	??_enviarRS232& (0+255),w,b
 10255  003F12  516D               	movf	(enviarRS232@longitud_texto+1)& (0+255),w,b
 10256  003F14  596B               	subwfb	(??_enviarRS232+1)& (0+255),w,b
 10257  003F16  B0D8               	btfsc	status,0,c
 10258  003F18  0012               	return	
 10259  003F1A  D7D3               	goto	l7419
 10260  003F1C                     __end_of_enviarRS232:
 10261                           	opt callstack 0
 10262                           
 10263 ;; *************** function _length *****************
 10264 ;; Defined at:
 10265 ;;		line 60 in file "./../LIBRERIAS/funciones_auto.h"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;  text            2    0[BANK0 ] PTR unsigned char 
 10268 ;;		 -> STR_6(8), STR_4(21), STR_3(20), terminal@texto(20), 
 10269 ;;		 -> STR_2(27), main@texto(8), main@text(6), 
 10270 ;; Auto vars:     Size  Location     Type
 10271 ;;  longitud        2    4[BANK0 ] int 
 10272 ;;  i               1    7[BANK0 ] unsigned char 
 10273 ;;  dato            1    6[BANK0 ] unsigned char 
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  2    0[BANK0 ] int 
 10276 ;; Registers used:
 10277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10283 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10284 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10285 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10286 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10287 ;;Total ram usage:        8 bytes
 10288 ;; Hardware stack levels used:    1
 10289 ;; Hardware stack levels required when called:    2
 10290 ;; This function calls:
 10291 ;;		Nothing
 10292 ;; This function is called by:
 10293 ;;		_enviarRS232
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           	psect	text40
 10298  003E2A                     __ptext40:
 10299                           	opt callstack 0
 10300  003E2A                     _length:
 10301                           	opt callstack 26
 10302                           
 10303                           ;./../LIBRERIAS/funciones_auto.h: 61:     unsigned char dato = text[0], i = 1;
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;incstack = 0
 10307  003E2A  C060  FFF6         	movff	length@text,tblptrl
 10308  003E2E  C061  FFF7         	movff	length@text+1,tblptrh
 10309  003E32  0E00               	movlw	low (__smallconst shr (0+16))
 10310  003E34  6EF8               	movwf	tblptru,c
 10311  003E36  0E0E               	movlw	(high __ramtop+-1)
 10312  003E38  64F7               	cpfsgt	tblptrh,c
 10313  003E3A  D003               	bra	u9427
 10314  003E3C  0008               	tblrd		*
 10315  003E3E  50F5               	movf	tablat,w,c
 10316  003E40  D005               	bra	u9420
 10317  003E42                     u9427:
 10318  003E42  CFF6 FFE1          	movff	tblptrl,fsr1l
 10319  003E46  CFF7 FFE2          	movff	tblptrh,fsr1h
 10320  003E4A  50E7               	movf	indf1,w,c
 10321  003E4C                     u9420:
 10322  003E4C  0100               	movlb	0	; () banked
 10323  003E4E  6F66               	movwf	length@dato& (0+255),b
 10324                           
 10325                           ; BSR set to: 0
 10326  003E50  0E01               	movlw	1
 10327  003E52  6F67               	movwf	length@i& (0+255),b
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;./../LIBRERIAS/funciones_auto.h: 62:     int longitud = 0;
 10331  003E54  0E00               	movlw	0
 10332  003E56  6F65               	movwf	(length@longitud+1)& (0+255),b
 10333  003E58  0E00               	movlw	0
 10334  003E5A  6F64               	movwf	length@longitud& (0+255),b
 10335                           
 10336                           ;./../LIBRERIAS/funciones_auto.h: 63:     while(dato != '\0'){
 10337  003E5C  D01C               	goto	l7281
 10338  003E5E                     l7275:
 10339                           
 10340                           ; BSR set to: 0
 10341                           ;./../LIBRERIAS/funciones_auto.h: 64:         dato = text[i];
 10342  003E5E  5167               	movf	length@i& (0+255),w,b
 10343  003E60  2560               	addwf	length@text& (0+255),w,b
 10344  003E62  6F62               	movwf	??_length& (0+255),b
 10345  003E64  0E00               	movlw	0
 10346  003E66  2161               	addwfc	(length@text+1)& (0+255),w,b
 10347  003E68  6F63               	movwf	(??_length+1)& (0+255),b
 10348  003E6A  C062  FFF6         	movff	??_length,tblptrl
 10349  003E6E  C063  FFF7         	movff	??_length+1,tblptrh
 10350  003E72  0E00               	movlw	low (__smallconst shr (0+16))
 10351  003E74  6EF8               	movwf	tblptru,c
 10352  003E76  0E0E               	movlw	(high __ramtop+-1)
 10353  003E78  64F7               	cpfsgt	tblptrh,c
 10354  003E7A  D003               	bra	u9437
 10355  003E7C  0008               	tblrd		*
 10356  003E7E  50F5               	movf	tablat,w,c
 10357  003E80  D005               	bra	u9430
 10358  003E82                     u9437:
 10359  003E82  CFF6 FFE1          	movff	tblptrl,fsr1l
 10360  003E86  CFF7 FFE2          	movff	tblptrh,fsr1h
 10361  003E8A  50E7               	movf	indf1,w,c
 10362  003E8C                     u9430:
 10363  003E8C  0100               	movlb	0	; () banked
 10364  003E8E  6F66               	movwf	length@dato& (0+255),b
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;./../LIBRERIAS/funciones_auto.h: 65:         i++;
 10368  003E90  2B67               	incf	length@i& (0+255),f,b
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;./../LIBRERIAS/funciones_auto.h: 66:         longitud++;
 10372  003E92  4B64               	infsnz	length@longitud& (0+255),f,b
 10373  003E94  2B65               	incf	(length@longitud+1)& (0+255),f,b
 10374  003E96                     l7281:
 10375                           
 10376                           ; BSR set to: 0
 10377                           ;./../LIBRERIAS/funciones_auto.h: 63:     while(dato != '\0'){
 10378  003E96  5166               	movf	length@dato& (0+255),w,b
 10379  003E98  A4D8               	btfss	status,2,c
 10380  003E9A  D7E1               	goto	l7275
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;./../LIBRERIAS/funciones_auto.h: 68:     return longitud;
 10384  003E9C  C064  F060         	movff	length@longitud,?_length
 10385  003EA0  C065  F061         	movff	length@longitud+1,?_length+1
 10386                           
 10387                           ; BSR set to: 0
 10388  003EA4  0012               	return		;funcret
 10389  003EA6                     __end_of_length:
 10390                           	opt callstack 0
 10391                           
 10392 ;; *************** function _encenderMotor *****************
 10393 ;; Defined at:
 10394 ;;		line 35 in file "./../LIBRERIAS/funciones_auto.h"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;		None
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;		None
 10399 ;; Return value:  Size  Location     Type
 10400 ;;                  1    wreg      void 
 10401 ;; Registers used:
 10402 ;;		wreg, status,2, status,0, cstack
 10403 ;; Tracked objects:
 10404 ;;		On entry : 0/0
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10412 ;;Total ram usage:        0 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:    3
 10415 ;; This function calls:
 10416 ;;		_definirVelocidad
 10417 ;;		_rutinaArranque
 10418 ;; This function is called by:
 10419 ;;		_terminal
 10420 ;;		_rutinaEscape
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           	psect	text41
 10425  0044D2                     __ptext41:
 10426                           	opt callstack 0
 10427  0044D2                     _encenderMotor:
 10428                           	opt callstack 26
 10429                           
 10430                           ;./../LIBRERIAS/funciones_auto.h: 36:     rutinaArranque();
 10431                           
 10432                           ; BSR set to: 0
 10433                           ;incstack = 0
 10434  0044D2  ECD8  F021         	call	_rutinaArranque	;wreg free
 10435                           
 10436                           ;./../LIBRERIAS/funciones_auto.h: 37:     definirVelocidad();
 10437  0044D6  EC5A  F021         	call	_definirVelocidad	;wreg free
 10438                           
 10439                           ;./../LIBRERIAS/funciones_auto.h: 38:     motor = 1;
 10440  0044DA  0E01               	movlw	1
 10441  0044DC  6E45               	movwf	_motor,c
 10442  0044DE  0012               	return		;funcret
 10443  0044E0                     __end_of_encenderMotor:
 10444                           	opt callstack 0
 10445                           
 10446 ;; *************** function _rutinaArranque *****************
 10447 ;; Defined at:
 10448 ;;		line 23 in file "./../LIBRERIAS/funciones_auto.h"
 10449 ;; Parameters:    Size  Location     Type
 10450 ;;		None
 10451 ;; Auto vars:     Size  Location     Type
 10452 ;;		None
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  1    wreg      void 
 10455 ;; Registers used:
 10456 ;;		wreg, status,2
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10464 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10465 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10466 ;;Total ram usage:        2 bytes
 10467 ;; Hardware stack levels used:    1
 10468 ;; Hardware stack levels required when called:    2
 10469 ;; This function calls:
 10470 ;;		Nothing
 10471 ;; This function is called by:
 10472 ;;		_encenderMotor
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476                           	psect	text42
 10477  0043B0                     __ptext42:
 10478                           	opt callstack 0
 10479  0043B0                     _rutinaArranque:
 10480                           	opt callstack 26
 10481                           
 10482                           ;./../LIBRERIAS/funciones_auto.h: 24:     CCP7CONbits.DC7B = cicle_90 & 0x0003;
 10483                           
 10484                           ;incstack = 0
 10485  0043B0  010F               	movlb	15	; () banked
 10486  0043B2  5109               	movf	9,w,b	;volatile
 10487  0043B4  0BCF               	andlw	-49
 10488  0043B6  0920               	iorlw	32
 10489  0043B8  6F09               	movwf	9,b	;volatile
 10490                           
 10491                           ;./../LIBRERIAS/funciones_auto.h: 25:     CCPR7L = cicle_90>>2;
 10492  0043BA  0E70               	movlw	112
 10493  0043BC  6F0A               	movwf	10,b	;volatile
 10494                           
 10495                           ; BSR set to: 15
 10496                           ;./../LIBRERIAS/funciones_auto.h: 26:     T2CONbits.TMR2ON = 1;
 10497  0043BE  84CA               	bsf	4042,2,c	;volatile
 10498                           
 10499                           ; BSR set to: 15
 10500                           ;./../LIBRERIAS/funciones_auto.h: 27:     _delay((unsigned long)((50)*(48000000/4000.0))
      +                          );
 10501  0043C0  0E04               	movlw	4
 10502  0043C2  0100               	movlb	0	; () banked
 10503  0043C4  6F61               	movwf	(??_rutinaArranque+1)& (0+255),b
 10504  0043C6  0E0C               	movlw	12
 10505  0043C8  6F60               	movwf	??_rutinaArranque& (0+255),b
 10506  0043CA  0E33               	movlw	51
 10507  0043CC                     u9747:
 10508  0043CC  2EE8               	decfsz	wreg,f,c
 10509  0043CE  D7FE               	bra	u9747
 10510  0043D0  2F60               	decfsz	??_rutinaArranque& (0+255),f,b
 10511  0043D2  D7FC               	bra	u9747
 10512  0043D4  2F61               	decfsz	(??_rutinaArranque+1)& (0+255),f,b
 10513  0043D6  D7FA               	bra	u9747
 10514  0043D8  D000               	nop2	
 10515  0043DA  0012               	return		;funcret
 10516  0043DC                     __end_of_rutinaArranque:
 10517                           	opt callstack 0
 10518                           
 10519 ;; *************** function _dirreccion *****************
 10520 ;; Defined at:
 10521 ;;		line 234 in file "auto.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;  degree          2    0[BANK0 ] unsigned int 
 10524 ;; Auto vars:     Size  Location     Type
 10525 ;;  tiempo_1        1    4[BANK0 ] unsigned char 
 10526 ;; Return value:  Size  Location     Type
 10527 ;;                  1    wreg      void 
 10528 ;; Registers used:
 10529 ;;		wreg, status,2, status,0
 10530 ;; Tracked objects:
 10531 ;;		On entry : 0/0
 10532 ;;		On exit  : 0/0
 10533 ;;		Unchanged: 0/0
 10534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10535 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10536 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10537 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10538 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10539 ;;Total ram usage:        5 bytes
 10540 ;; Hardware stack levels used:    1
 10541 ;; Hardware stack levels required when called:    2
 10542 ;; This function calls:
 10543 ;;		Nothing
 10544 ;; This function is called by:
 10545 ;;		_terminal
 10546 ;; This function uses a non-reentrant model
 10547 ;;
 10548                           
 10549                           	psect	text43
 10550  003C16                     __ptext43:
 10551                           	opt callstack 0
 10552  003C16                     _dirreccion:
 10553                           	opt callstack 27
 10554                           
 10555                           ;auto.c: 235:     unsigned char tiempo_1 = 61;
 10556                           
 10557                           ;incstack = 0
 10558  003C16  0E3D               	movlw	61
 10559  003C18  0100               	movlb	0	; () banked
 10560  003C1A  6F64               	movwf	dirreccion@tiempo_1& (0+255),b
 10561                           
 10562                           ;auto.c: 236:     contador_timer_5 = 0;
 10563  003C1C  0E00               	movlw	0
 10564  003C1E  6E3D               	movwf	_contador_timer_5+1,c
 10565  003C20  0E00               	movlw	0
 10566  003C22  6E3C               	movwf	_contador_timer_5,c
 10567                           
 10568                           ;auto.c: 237:     parar = 0;
 10569  003C24  0E00               	movlw	0
 10570  003C26  6E3F               	movwf	_parar+1,c
 10571  003C28  0E00               	movlw	0
 10572  003C2A  6E3E               	movwf	_parar,c
 10573                           
 10574                           ;auto.c: 238:     switch(degree){
 10575  003C2C  D009               	goto	l7483
 10576  003C2E                     l7473:
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;auto.c: 240:             tiempo_1 = 60;
 10580  003C2E  0E3C               	movlw	60
 10581  003C30  D005               	goto	L21
 10582  003C32                     l7475:
 10583                           
 10584                           ; BSR set to: 0
 10585                           ;auto.c: 243:             tiempo_1 = 57;
 10586  003C32  0E39               	movlw	57
 10587  003C34  D003               	goto	L21
 10588  003C36                     l7477:
 10589                           
 10590                           ; BSR set to: 0
 10591                           ;auto.c: 246:             tiempo_1 = 67;
 10592  003C36  0E43               	movlw	67
 10593  003C38  D001               	goto	L21
 10594  003C3A                     l7479:
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;auto.c: 249:             tiempo_1 = 50;
 10598  003C3A  0E32               	movlw	50
 10599  003C3C                     L21:
 10600  003C3C  6F64               	movwf	dirreccion@tiempo_1& (0+255),b
 10601                           
 10602                           ;auto.c: 250:             break;
 10603  003C3E  D015               	goto	l281
 10604  003C40                     l7483:
 10605                           
 10606                           ; BSR set to: 0
 10607  003C40  C060  F062         	movff	dirreccion@degree,??_dirreccion
 10608  003C44  C061  F063         	movff	dirreccion@degree+1,??_dirreccion+1
 10609                           
 10610                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10611                           ; Switch size 1, requested type "simple"
 10612                           ; Number of cases is 1, Range of values is 0 to 0
 10613                           ; switch strategies available:
 10614                           ; Name         Instructions Cycles
 10615                           ; simple_byte            4     3 (average)
 10616                           ;	Chosen strategy is simple_byte
 10617  003C48  5163               	movf	(??_dirreccion+1)& (0+255),w,b
 10618  003C4A  0A00               	xorlw	0	; case 0
 10619  003C4C  A4D8               	btfss	status,2,c
 10620  003C4E  D00D               	goto	l281
 10621                           
 10622                           ; BSR set to: 0
 10623                           ; Switch size 1, requested type "simple"
 10624                           ; Number of cases is 4, Range of values is 0 to 180
 10625                           ; switch strategies available:
 10626                           ; Name         Instructions Cycles
 10627                           ; simple_byte           13     7 (average)
 10628                           ;	Chosen strategy is simple_byte
 10629  003C50  5162               	movf	??_dirreccion& (0+255),w,b
 10630  003C52  0A00               	xorlw	0	; case 0
 10631  003C54  B4D8               	btfsc	status,2,c
 10632  003C56  D7EF               	goto	l7477
 10633  003C58  0A55               	xorlw	85	; case 85
 10634  003C5A  B4D8               	btfsc	status,2,c
 10635  003C5C  D7E8               	goto	l7473
 10636  003C5E  0A0F               	xorlw	15	; case 90
 10637  003C60  B4D8               	btfsc	status,2,c
 10638  003C62  D7E7               	goto	l7475
 10639  003C64  0AEE               	xorlw	238	; case 180
 10640  003C66  B4D8               	btfsc	status,2,c
 10641  003C68  D7E8               	goto	l7479
 10642  003C6A                     l281:
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;auto.c: 252:     if(PORTDbits.RD4 != 1){
 10646  003C6A  B883               	btfsc	3971,4,c	;volatile
 10647  003C6C  D005               	goto	l7487
 10648                           
 10649                           ; BSR set to: 0
 10650                           ;auto.c: 253:         TIME_MAX = tiempo_1;
 10651  003C6E  C064  F048         	movff	dirreccion@tiempo_1,_TIME_MAX
 10652  003C72  6A49               	clrf	_TIME_MAX+1,c
 10653                           
 10654                           ;auto.c: 254:         PORTDbits.RD4 = 1;
 10655  003C74  8883               	bsf	3971,4,c	;volatile
 10656                           
 10657                           ;auto.c: 255:     }
 10658  003C76  D009               	goto	l7491
 10659  003C78                     l7487:
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;auto.c: 257:         TIME_MAX = 1000 - tiempo_1;
 10663  003C78  5164               	movf	dirreccion@tiempo_1& (0+255),w,b
 10664  003C7A  08E8               	sublw	232
 10665  003C7C  6E48               	movwf	_TIME_MAX,c
 10666  003C7E  0E00               	movlw	0
 10667  003C80  A0D8               	btfss	status,0,c
 10668  003C82  2AE8               	incf	wreg,f,c
 10669  003C84  0803               	sublw	3
 10670  003C86  6E49               	movwf	_TIME_MAX+1,c
 10671                           
 10672                           ; BSR set to: 0
 10673                           ;auto.c: 258:         PORTDbits.RD4 = 0;
 10674  003C88  9883               	bcf	3971,4,c	;volatile
 10675  003C8A                     l7491:
 10676                           
 10677                           ; BSR set to: 0
 10678                           ;auto.c: 260:     contador_timer_5 = 0;
 10679  003C8A  0E00               	movlw	0
 10680  003C8C  6E3D               	movwf	_contador_timer_5+1,c
 10681  003C8E  0E00               	movlw	0
 10682  003C90  6E3C               	movwf	_contador_timer_5,c
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;auto.c: 261:     bandera_servo = 0;
 10686  003C92  0E00               	movlw	0
 10687  003C94  0101               	movlb	1	; () banked
 10688  003C96  6F20               	movwf	_bandera_servo& (0+255),b
 10689                           
 10690                           ; BSR set to: 1
 10691                           ;auto.c: 262:     T5CONbits.TMR5ON = 1;
 10692  003C98  010F               	movlb	15	; () banked
 10693  003C9A  8122               	bsf	34,0,b	;volatile
 10694                           
 10695                           ; BSR set to: 15
 10696  003C9C  0012               	return		;funcret
 10697  003C9E                     __end_of_dirreccion:
 10698                           	opt callstack 0
 10699                           
 10700 ;; *************** function _cambiarPWM *****************
 10701 ;; Defined at:
 10702 ;;		line 185 in file "auto.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;		None
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;		None
 10707 ;; Return value:  Size  Location     Type
 10708 ;;                  1    wreg      void 
 10709 ;; Registers used:
 10710 ;;		wreg, status,2, status,0, cstack
 10711 ;; Tracked objects:
 10712 ;;		On entry : 0/0
 10713 ;;		On exit  : 0/0
 10714 ;;		Unchanged: 0/0
 10715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10720 ;;Total ram usage:        0 bytes
 10721 ;; Hardware stack levels used:    1
 10722 ;; Hardware stack levels required when called:    3
 10723 ;; This function calls:
 10724 ;;		_definirVelocidad
 10725 ;; This function is called by:
 10726 ;;		_terminal
 10727 ;; This function uses a non-reentrant model
 10728 ;;
 10729                           
 10730                           	psect	text44
 10731  0044EE                     __ptext44:
 10732                           	opt callstack 0
 10733  0044EE                     _cambiarPWM:
 10734                           	opt callstack 26
 10735                           
 10736                           ;auto.c: 186:     if(motor == 1){
 10737                           
 10738                           ; BSR set to: 15
 10739                           ;incstack = 0
 10740  0044EE  0445               	decf	_motor,w,c
 10741  0044F0  A4D8               	btfss	status,2,c
 10742  0044F2  0012               	return	
 10743                           
 10744                           ;auto.c: 187:         definirVelocidad();
 10745  0044F4  EC5A  F021         	call	_definirVelocidad	;wreg free
 10746  0044F8  0012               	return		;funcret
 10747  0044FA                     __end_of_cambiarPWM:
 10748                           	opt callstack 0
 10749                           
 10750 ;; *************** function _definirVelocidad *****************
 10751 ;; Defined at:
 10752 ;;		line 41 in file "./../LIBRERIAS/funciones_auto.h"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;		None
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;		None
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  1    wreg      void 
 10759 ;; Registers used:
 10760 ;;		wreg, status,2, status,0
 10761 ;; Tracked objects:
 10762 ;;		On entry : 0/0
 10763 ;;		On exit  : 0/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10768 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10769 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10770 ;;Total ram usage:        2 bytes
 10771 ;; Hardware stack levels used:    1
 10772 ;; Hardware stack levels required when called:    2
 10773 ;; This function calls:
 10774 ;;		Nothing
 10775 ;; This function is called by:
 10776 ;;		_encenderMotor
 10777 ;;		_cambiarPWM
 10778 ;;		_rutinaEscape
 10779 ;; This function uses a non-reentrant model
 10780 ;;
 10781                           
 10782                           	psect	text45
 10783  0042B4                     __ptext45:
 10784                           	opt callstack 0
 10785  0042B4                     _definirVelocidad:
 10786                           	opt callstack 26
 10787                           
 10788                           ;./../LIBRERIAS/funciones_auto.h: 42:     CCP7CONbits.DC7B = velocidad & 0x0003;
 10789                           
 10790                           ;incstack = 0
 10791  0042B4  C04A  F060         	movff	_velocidad,??_definirVelocidad
 10792  0042B8  0E03               	movlw	3
 10793  0042BA  0100               	movlb	0	; () banked
 10794  0042BC  1760               	andwf	??_definirVelocidad& (0+255),f,b
 10795  0042BE  3B60               	swapf	??_definirVelocidad& (0+255),f,b
 10796  0042C0  010F               	movlb	15	; () banked
 10797  0042C2  5109               	movf	9,w,b	;volatile
 10798  0042C4  0100               	movlb	0	; () banked
 10799  0042C6  1960               	xorwf	??_definirVelocidad& (0+255),w,b
 10800  0042C8  0BCF               	andlw	-49
 10801  0042CA  1960               	xorwf	??_definirVelocidad& (0+255),w,b
 10802  0042CC  010F               	movlb	15	; () banked
 10803  0042CE  6F09               	movwf	9,b	;volatile
 10804                           
 10805                           ;./../LIBRERIAS/funciones_auto.h: 43:     CCPR7L = velocidad>>2;
 10806  0042D0  C04A  F060         	movff	_velocidad,??_definirVelocidad
 10807  0042D4  C04B  F061         	movff	_velocidad+1,??_definirVelocidad+1
 10808  0042D8  0100               	movlb	0	; () banked
 10809  0042DA  90D8               	bcf	status,0,c
 10810  0042DC  3361               	rrcf	(??_definirVelocidad+1)& (0+255),f,b
 10811  0042DE  3360               	rrcf	??_definirVelocidad& (0+255),f,b
 10812  0042E0  90D8               	bcf	status,0,c
 10813  0042E2  3361               	rrcf	(??_definirVelocidad+1)& (0+255),f,b
 10814  0042E4  3360               	rrcf	??_definirVelocidad& (0+255),f,b
 10815  0042E6  5160               	movf	??_definirVelocidad& (0+255),w,b
 10816  0042E8  010F               	movlb	15	; () banked
 10817  0042EA  6F0A               	movwf	10,b	;volatile
 10818                           
 10819                           ; BSR set to: 15
 10820  0042EC  0012               	return		;funcret
 10821  0042EE                     __end_of_definirVelocidad:
 10822                           	opt callstack 0
 10823                           
 10824 ;; *************** function _atras *****************
 10825 ;; Defined at:
 10826 ;;		line 291 in file "auto.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;		None
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;		None
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  1    wreg      void 
 10833 ;; Registers used:
 10834 ;;		None
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10844 ;;Total ram usage:        0 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:    2
 10847 ;; This function calls:
 10848 ;;		Nothing
 10849 ;; This function is called by:
 10850 ;;		_terminal
 10851 ;;		_rutinaEscape
 10852 ;; This function uses a non-reentrant model
 10853 ;;
 10854                           
 10855                           	psect	text46
 10856  0044FA                     __ptext46:
 10857                           	opt callstack 0
 10858  0044FA                     _atras:
 10859                           	opt callstack 27
 10860                           
 10861                           ;auto.c: 292:     PORTAbits.RA0 = 0;
 10862                           
 10863                           ; BSR set to: 15
 10864                           ;incstack = 0
 10865  0044FA  9080               	bcf	3968,0,c	;volatile
 10866                           
 10867                           ;auto.c: 293:     PORTAbits.RA1 = 0;
 10868  0044FC  9280               	bcf	3968,1,c	;volatile
 10869                           
 10870                           ;auto.c: 294:     PORTAbits.RA0 = 0;
 10871  0044FE  9080               	bcf	3968,0,c	;volatile
 10872                           
 10873                           ;auto.c: 295:     PORTAbits.RA1 = 1;
 10874  004500  8280               	bsf	3968,1,c	;volatile
 10875  004502  0012               	return		;funcret
 10876  004504                     __end_of_atras:
 10877                           	opt callstack 0
 10878                           
 10879 ;; *************** function _adelante *****************
 10880 ;; Defined at:
 10881 ;;		line 284 in file "auto.c"
 10882 ;; Parameters:    Size  Location     Type
 10883 ;;		None
 10884 ;; Auto vars:     Size  Location     Type
 10885 ;;		None
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  1    wreg      void 
 10888 ;; Registers used:
 10889 ;;		None
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10899 ;;Total ram usage:        0 bytes
 10900 ;; Hardware stack levels used:    1
 10901 ;; Hardware stack levels required when called:    2
 10902 ;; This function calls:
 10903 ;;		Nothing
 10904 ;; This function is called by:
 10905 ;;		_terminal
 10906 ;;		_rutinaEscape
 10907 ;; This function uses a non-reentrant model
 10908 ;;
 10909                           
 10910                           	psect	text47
 10911  004504                     __ptext47:
 10912                           	opt callstack 0
 10913  004504                     _adelante:
 10914                           	opt callstack 27
 10915                           
 10916                           ;auto.c: 285:     PORTAbits.RA0 = 0;
 10917                           
 10918                           ;incstack = 0
 10919  004504  9080               	bcf	3968,0,c	;volatile
 10920                           
 10921                           ;auto.c: 286:     PORTAbits.RA1 = 0;
 10922  004506  9280               	bcf	3968,1,c	;volatile
 10923                           
 10924                           ;auto.c: 287:     PORTAbits.RA0 = 1;
 10925  004508  8080               	bsf	3968,0,c	;volatile
 10926                           
 10927                           ;auto.c: 288:     PORTAbits.RA1 = 0;
 10928  00450A  9280               	bcf	3968,1,c	;volatile
 10929  00450C  0012               	return		;funcret
 10930  00450E                     __end_of_adelante:
 10931                           	opt callstack 0
 10932                           
 10933 ;; *************** function _configuracionInicial *****************
 10934 ;; Defined at:
 10935 ;;		line 136 in file "auto.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;		None
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;		None
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1    wreg      void 
 10942 ;; Registers used:
 10943 ;;		wreg, status,2, cstack
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10953 ;;Total ram usage:        0 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:    3
 10956 ;; This function calls:
 10957 ;;		_configurarInterrupciones
 10958 ;;		_configurarPWM7
 10959 ;;		_configurarPuertos
 10960 ;;		_configurarRS232
 10961 ;;		_configurarRS232US100
 10962 ;;		_configurarTMR4
 10963 ;;		_configurarTMR5
 10964 ;; This function is called by:
 10965 ;;		_main
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           	psect	text48
 10970  004466                     __ptext48:
 10971                           	opt callstack 0
 10972  004466                     _configuracionInicial:
 10973                           	opt callstack 27
 10974                           
 10975                           ;auto.c: 137:     configurarPuertos();
 10976                           
 10977                           ;incstack = 0
 10978  004466  EC61  F022         	call	_configurarPuertos	;wreg free
 10979                           
 10980                           ;auto.c: 138:     configurarPWM7();
 10981  00446A  EC13  F022         	call	_configurarPWM7	;wreg free
 10982                           
 10983                           ;auto.c: 139:     configurarInterrupciones();
 10984  00446E  EC23  F022         	call	_configurarInterrupciones	;wreg free
 10985                           
 10986                           ;auto.c: 140:     configurarRS232();
 10987  004472  EC42  F022         	call	_configurarRS232	;wreg free
 10988                           
 10989                           ;auto.c: 141:     configurarTMR4();
 10990  004476  EC70  F022         	call	_configurarTMR4	;wreg free
 10991                           
 10992                           ;auto.c: 142:     configurarTMR5();
 10993  00447A  EC4E  F022         	call	_configurarTMR5	;wreg free
 10994                           
 10995                           ;auto.c: 143:     configurarRS232US100();
 10996  00447E  EC02  F022         	call	_configurarRS232US100	;wreg free
 10997  004482  0012               	return		;funcret
 10998  004484                     __end_of_configuracionInicial:
 10999                           	opt callstack 0
 11000                           
 11001 ;; *************** function _configurarTMR5 *****************
 11002 ;; Defined at:
 11003 ;;		line 48 in file "./../LIBRERIAS/configuracion_auto.h"
 11004 ;; Parameters:    Size  Location     Type
 11005 ;;		None
 11006 ;; Auto vars:     Size  Location     Type
 11007 ;;		None
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  1    wreg      void 
 11010 ;; Registers used:
 11011 ;;		wreg, status,2
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11021 ;;Total ram usage:        0 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; Hardware stack levels required when called:    2
 11024 ;; This function calls:
 11025 ;;		Nothing
 11026 ;; This function is called by:
 11027 ;;		_configuracionInicial
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           	psect	text49
 11032  00449C                     __ptext49:
 11033                           	opt callstack 0
 11034  00449C                     _configurarTMR5:
 11035                           	opt callstack 27
 11036                           
 11037                           ;./../LIBRERIAS/configuracion_auto.h: 49:     TRISDbits.TRISD4 = 0;
 11038                           
 11039                           ;incstack = 0
 11040  00449C  9895               	bcf	3989,4,c	;volatile
 11041                           
 11042                           ;./../LIBRERIAS/configuracion_auto.h: 50:     PORTDbits.RD4 = 0;
 11043  00449E  9883               	bcf	3971,4,c	;volatile
 11044                           
 11045                           ;./../LIBRERIAS/configuracion_auto.h: 51:     T5CON = 0x32;
 11046  0044A0  0E32               	movlw	50
 11047  0044A2  010F               	movlb	15	; () banked
 11048  0044A4  6F22               	movwf	34,b	;volatile
 11049                           
 11050                           ; BSR set to: 15
 11051                           ;./../LIBRERIAS/configuracion_auto.h: 52:     TMR5H = 0xFF;
 11052  0044A6  6924               	setf	36,b	;volatile
 11053                           
 11054                           ;./../LIBRERIAS/configuracion_auto.h: 53:     TMR5L = 0xE2;
 11055  0044A8  0EE2               	movlw	226
 11056  0044AA  6F23               	movwf	35,b	;volatile
 11057                           
 11058                           ; BSR set to: 15
 11059                           ;./../LIBRERIAS/configuracion_auto.h: 54:     PIE5bits.TMR5IE = 1;
 11060  0044AC  8491               	bsf	3985,2,c	;volatile
 11061                           
 11062                           ; BSR set to: 15
 11063                           ;./../LIBRERIAS/configuracion_auto.h: 55:     PIR5bits.TMR5IF = 0;
 11064  0044AE  9498               	bcf	3992,2,c	;volatile
 11065                           
 11066                           ; BSR set to: 15
 11067  0044B0  0012               	return		;funcret
 11068  0044B2                     __end_of_configurarTMR5:
 11069                           	opt callstack 0
 11070                           
 11071 ;; *************** function _configurarTMR4 *****************
 11072 ;; Defined at:
 11073 ;;		line 58 in file "./../LIBRERIAS/configuracion_auto.h"
 11074 ;; Parameters:    Size  Location     Type
 11075 ;;		None
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;		None
 11078 ;; Return value:  Size  Location     Type
 11079 ;;                  1    wreg      void 
 11080 ;; Registers used:
 11081 ;;		wreg, status,2
 11082 ;; Tracked objects:
 11083 ;;		On entry : 0/0
 11084 ;;		On exit  : 0/0
 11085 ;;		Unchanged: 0/0
 11086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11091 ;;Total ram usage:        0 bytes
 11092 ;; Hardware stack levels used:    1
 11093 ;; Hardware stack levels required when called:    2
 11094 ;; This function calls:
 11095 ;;		Nothing
 11096 ;; This function is called by:
 11097 ;;		_configuracionInicial
 11098 ;; This function uses a non-reentrant model
 11099 ;;
 11100                           
 11101                           	psect	text50
 11102  0044E0                     __ptext50:
 11103                           	opt callstack 0
 11104  0044E0                     _configurarTMR4:
 11105                           	opt callstack 27
 11106                           
 11107                           ;./../LIBRERIAS/configuracion_auto.h: 59:     T4CONbits.T4CKPS = 0b11;
 11108                           
 11109                           ; BSR set to: 15
 11110                           ;incstack = 0
 11111  0044E0  0E03               	movlw	3
 11112  0044E2  1276               	iorwf	3958,f,c	;volatile
 11113                           
 11114                           ;./../LIBRERIAS/configuracion_auto.h: 60:     TMR4 = 181;
 11115  0044E4  0EB5               	movlw	181
 11116  0044E6  6E78               	movwf	3960,c	;volatile
 11117                           
 11118                           ;./../LIBRERIAS/configuracion_auto.h: 61:     PIR3bits.TMR4IF = 0;
 11119  0044E8  96A4               	bcf	4004,3,c	;volatile
 11120                           
 11121                           ;./../LIBRERIAS/configuracion_auto.h: 62:     PIE3bits.TMR4IE= 1;
 11122  0044EA  86A3               	bsf	4003,3,c	;volatile
 11123  0044EC  0012               	return		;funcret
 11124  0044EE                     __end_of_configurarTMR4:
 11125                           	opt callstack 0
 11126                           
 11127 ;; *************** function _configurarRS232US100 *****************
 11128 ;; Defined at:
 11129 ;;		line 65 in file "./../LIBRERIAS/configuracion_auto.h"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;		None
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;		None
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  1    wreg      void 
 11136 ;; Registers used:
 11137 ;;		wreg, status,2
 11138 ;; Tracked objects:
 11139 ;;		On entry : 0/0
 11140 ;;		On exit  : 0/0
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11147 ;;Total ram usage:        0 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; Hardware stack levels required when called:    2
 11150 ;; This function calls:
 11151 ;;		Nothing
 11152 ;; This function is called by:
 11153 ;;		_configuracionInicial
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	text51
 11158  004404                     __ptext51:
 11159                           	opt callstack 0
 11160  004404                     _configurarRS232US100:
 11161                           	opt callstack 27
 11162                           
 11163                           ;./../LIBRERIAS/configuracion_auto.h: 66:     TRISDbits.TRISD6 = 0;
 11164                           
 11165                           ;incstack = 0
 11166  004404  9C95               	bcf	3989,6,c	;volatile
 11167                           
 11168                           ;./../LIBRERIAS/configuracion_auto.h: 67:     TRISDbits.TRISD7 = 1;
 11169  004406  8E95               	bsf	3989,7,c	;volatile
 11170                           
 11171                           ;./../LIBRERIAS/configuracion_auto.h: 68:     RPOR23 = 6;
 11172  004408  0E06               	movlw	6
 11173  00440A  010E               	movlb	14	; () banked
 11174  00440C  6FD7               	movwf	215,b	;volatile
 11175                           
 11176                           ;./../LIBRERIAS/configuracion_auto.h: 69:     RPINR16 = 24;
 11177  00440E  0E18               	movlw	24
 11178  004410  6FF7               	movwf	247,b	;volatile
 11179                           
 11180                           ;./../LIBRERIAS/configuracion_auto.h: 70:     TXSTA2 = 0x22;
 11181  004412  0E22               	movlw	34
 11182  004414  6EA8               	movwf	4008,c	;volatile
 11183                           
 11184                           ;./../LIBRERIAS/configuracion_auto.h: 71:     RCSTA2 = 0x90;
 11185  004416  0E90               	movlw	144
 11186  004418  6E9C               	movwf	3996,c	;volatile
 11187                           
 11188                           ; BSR set to: 14
 11189                           ;./../LIBRERIAS/configuracion_auto.h: 72:     BAUDCON2bits.BRG16 = 0;
 11190  00441A  967C               	bcf	3964,3,c	;volatile
 11191                           
 11192                           ;./../LIBRERIAS/configuracion_auto.h: 73:     SPBRG2 = 77;
 11193  00441C  0E4D               	movlw	77
 11194  00441E  6EAB               	movwf	4011,c	;volatile
 11195                           
 11196                           ; BSR set to: 14
 11197                           ;./../LIBRERIAS/configuracion_auto.h: 74:     PIR3bits.RC2IF = 0;
 11198  004420  9AA4               	bcf	4004,5,c	;volatile
 11199                           
 11200                           ; BSR set to: 14
 11201                           ;./../LIBRERIAS/configuracion_auto.h: 75:     PIE3bits.RC2IE = 1;
 11202  004422  8AA3               	bsf	4003,5,c	;volatile
 11203                           
 11204                           ; BSR set to: 14
 11205  004424  0012               	return		;funcret
 11206  004426                     __end_of_configurarRS232US100:
 11207                           	opt callstack 0
 11208                           
 11209 ;; *************** function _configurarRS232 *****************
 11210 ;; Defined at:
 11211 ;;		line 37 in file "./../LIBRERIAS/configuracion_auto.h"
 11212 ;; Parameters:    Size  Location     Type
 11213 ;;		None
 11214 ;; Auto vars:     Size  Location     Type
 11215 ;;		None
 11216 ;; Return value:  Size  Location     Type
 11217 ;;                  1    wreg      void 
 11218 ;; Registers used:
 11219 ;;		wreg, status,2
 11220 ;; Tracked objects:
 11221 ;;		On entry : 0/0
 11222 ;;		On exit  : 0/0
 11223 ;;		Unchanged: 0/0
 11224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11229 ;;Total ram usage:        0 bytes
 11230 ;; Hardware stack levels used:    1
 11231 ;; Hardware stack levels required when called:    2
 11232 ;; This function calls:
 11233 ;;		Nothing
 11234 ;; This function is called by:
 11235 ;;		_configuracionInicial
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text52
 11240  004484                     __ptext52:
 11241                           	opt callstack 0
 11242  004484                     _configurarRS232:
 11243                           	opt callstack 27
 11244                           
 11245                           ;./../LIBRERIAS/configuracion_auto.h: 38:     TRISCbits.TRISC7 = 1;
 11246                           
 11247                           ; BSR set to: 14
 11248                           ;incstack = 0
 11249  004484  8E94               	bsf	3988,7,c	;volatile
 11250                           
 11251                           ;./../LIBRERIAS/configuracion_auto.h: 39:     TRISCbits.TRISC6 = 0;
 11252  004486  9C94               	bcf	3988,6,c	;volatile
 11253                           
 11254                           ;./../LIBRERIAS/configuracion_auto.h: 40:     TXSTA1 = 0x22;
 11255  004488  0E22               	movlw	34
 11256  00448A  6EAD               	movwf	4013,c	;volatile
 11257                           
 11258                           ;./../LIBRERIAS/configuracion_auto.h: 41:     RCSTA1 = 0x90;
 11259  00448C  0E90               	movlw	144
 11260  00448E  6EAC               	movwf	4012,c	;volatile
 11261                           
 11262                           ;./../LIBRERIAS/configuracion_auto.h: 42:     BAUDCON1bits.BRG16 = 0;
 11263  004490  967E               	bcf	3966,3,c	;volatile
 11264                           
 11265                           ;./../LIBRERIAS/configuracion_auto.h: 43:     SPBRG1 = 77;
 11266  004492  0E4D               	movlw	77
 11267  004494  6EB0               	movwf	4016,c	;volatile
 11268                           
 11269                           ;./../LIBRERIAS/configuracion_auto.h: 44:     PIR1bits.RC1IF = 0;
 11270  004496  9A9E               	bcf	3998,5,c	;volatile
 11271                           
 11272                           ;./../LIBRERIAS/configuracion_auto.h: 45:     PIE1bits.RC1IE = 1;
 11273  004498  8A9D               	bsf	3997,5,c	;volatile
 11274  00449A  0012               	return		;funcret
 11275  00449C                     __end_of_configurarRS232:
 11276                           	opt callstack 0
 11277                           
 11278 ;; *************** function _configurarPuertos *****************
 11279 ;; Defined at:
 11280 ;;		line 3 in file "./../LIBRERIAS/configuracion_auto.h"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;		None
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;		None
 11285 ;; Return value:  Size  Location     Type
 11286 ;;                  1    wreg      void 
 11287 ;; Registers used:
 11288 ;;		wreg, status,2
 11289 ;; Tracked objects:
 11290 ;;		On entry : 0/0
 11291 ;;		On exit  : 0/0
 11292 ;;		Unchanged: 0/0
 11293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11298 ;;Total ram usage:        0 bytes
 11299 ;; Hardware stack levels used:    1
 11300 ;; Hardware stack levels required when called:    2
 11301 ;; This function calls:
 11302 ;;		Nothing
 11303 ;; This function is called by:
 11304 ;;		_configuracionInicial
 11305 ;; This function uses a non-reentrant model
 11306 ;;
 11307                           
 11308                           	psect	text53
 11309  0044C2                     __ptext53:
 11310                           	opt callstack 0
 11311  0044C2                     _configurarPuertos:
 11312                           	opt callstack 27
 11313                           
 11314                           ;./../LIBRERIAS/configuracion_auto.h: 4:     ANCON0 = 0x7F;
 11315                           
 11316                           ;incstack = 0
 11317  0044C2  0E7F               	movlw	127
 11318  0044C4  010F               	movlb	15	; () banked
 11319  0044C6  6F48               	movwf	72,b	;volatile
 11320                           
 11321                           ;./../LIBRERIAS/configuracion_auto.h: 5:     ANCON1 = 0x1F;
 11322  0044C8  0E1F               	movlw	31
 11323  0044CA  6F49               	movwf	73,b	;volatile
 11324                           
 11325                           ; BSR set to: 15
 11326                           ;./../LIBRERIAS/configuracion_auto.h: 6:     TRISAbits.TRISA0 = 0;
 11327  0044CC  9092               	bcf	3986,0,c	;volatile
 11328                           
 11329                           ; BSR set to: 15
 11330                           ;./../LIBRERIAS/configuracion_auto.h: 7:     TRISAbits.TRISA1 = 0;
 11331  0044CE  9292               	bcf	3986,1,c	;volatile
 11332                           
 11333                           ; BSR set to: 15
 11334  0044D0  0012               	return		;funcret
 11335  0044D2                     __end_of_configurarPuertos:
 11336                           	opt callstack 0
 11337                           
 11338 ;; *************** function _configurarPWM7 *****************
 11339 ;; Defined at:
 11340 ;;		line 25 in file "./../LIBRERIAS/configuracion_auto.h"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;		None
 11343 ;; Auto vars:     Size  Location     Type
 11344 ;;		None
 11345 ;; Return value:  Size  Location     Type
 11346 ;;                  1    wreg      void 
 11347 ;; Registers used:
 11348 ;;		wreg, status,2
 11349 ;; Tracked objects:
 11350 ;;		On entry : 0/0
 11351 ;;		On exit  : 0/0
 11352 ;;		Unchanged: 0/0
 11353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11358 ;;Total ram usage:        0 bytes
 11359 ;; Hardware stack levels used:    1
 11360 ;; Hardware stack levels required when called:    2
 11361 ;; This function calls:
 11362 ;;		Nothing
 11363 ;; This function is called by:
 11364 ;;		_configuracionInicial
 11365 ;; This function uses a non-reentrant model
 11366 ;;
 11367                           
 11368                           	psect	text54
 11369  004426                     __ptext54:
 11370                           	opt callstack 0
 11371  004426                     _configurarPWM7:
 11372                           	opt callstack 27
 11373                           
 11374                           ;./../LIBRERIAS/configuracion_auto.h: 26:     TRISBbits.TRISB4 = 0;
 11375                           
 11376                           ; BSR set to: 15
 11377                           ;incstack = 0
 11378  004426  9893               	bcf	3987,4,c	;volatile
 11379                           
 11380                           ;./../LIBRERIAS/configuracion_auto.h: 27:     TRISBbits.TRISB7 = 0;
 11381  004428  9E93               	bcf	3987,7,c	;volatile
 11382                           
 11383                           ;./../LIBRERIAS/configuracion_auto.h: 28:     CCP7CONbits.CCP7M = 0xC;
 11384  00442A  010F               	movlb	15	; () banked
 11385  00442C  5109               	movf	9,w,b	;volatile
 11386  00442E  0BF0               	andlw	-16
 11387  004430  090C               	iorlw	12
 11388  004432  6F09               	movwf	9,b	;volatile
 11389                           
 11390                           ;./../LIBRERIAS/configuracion_auto.h: 29:     CCPTMRS1bits.C7TSEL = 0b00;
 11391  004434  0E3F               	movlw	-193
 11392  004436  1751               	andwf	81,f,b	;volatile
 11393                           
 11394                           ;./../LIBRERIAS/configuracion_auto.h: 31:     T2CON = 0x02;
 11395  004438  0E02               	movlw	2
 11396  00443A  6ECA               	movwf	4042,c	;volatile
 11397                           
 11398                           ;./../LIBRERIAS/configuracion_auto.h: 32:     PR2 = 124;
 11399  00443C  0E7C               	movlw	124
 11400  00443E  6ECB               	movwf	4043,c	;volatile
 11401                           
 11402                           ;./../LIBRERIAS/configuracion_auto.h: 34:     TMR2 = 0x00;
 11403  004440  0E00               	movlw	0
 11404  004442  6ECC               	movwf	4044,c	;volatile
 11405                           
 11406                           ; BSR set to: 15
 11407  004444  0012               	return		;funcret
 11408  004446                     __end_of_configurarPWM7:
 11409                           	opt callstack 0
 11410                           
 11411 ;; *************** function _configurarInterrupciones *****************
 11412 ;; Defined at:
 11413 ;;		line 10 in file "./../LIBRERIAS/configuracion_auto.h"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;		None
 11416 ;; Auto vars:     Size  Location     Type
 11417 ;;		None
 11418 ;; Return value:  Size  Location     Type
 11419 ;;                  1    wreg      void 
 11420 ;; Registers used:
 11421 ;;		wreg, status,2
 11422 ;; Tracked objects:
 11423 ;;		On entry : 0/0
 11424 ;;		On exit  : 0/0
 11425 ;;		Unchanged: 0/0
 11426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11431 ;;Total ram usage:        0 bytes
 11432 ;; Hardware stack levels used:    1
 11433 ;; Hardware stack levels required when called:    2
 11434 ;; This function calls:
 11435 ;;		Nothing
 11436 ;; This function is called by:
 11437 ;;		_configuracionInicial
 11438 ;; This function uses a non-reentrant model
 11439 ;;
 11440                           
 11441                           	psect	text55
 11442  004446                     __ptext55:
 11443                           	opt callstack 0
 11444  004446                     _configurarInterrupciones:
 11445                           	opt callstack 27
 11446                           
 11447                           ;./../LIBRERIAS/configuracion_auto.h: 11:     PPSCON = 0;
 11448                           
 11449                           ; BSR set to: 15
 11450                           ;incstack = 0
 11451  004446  0E00               	movlw	0
 11452  004448  010E               	movlb	14	; () banked
 11453  00444A  6FBF               	movwf	191,b	;volatile
 11454                           
 11455                           ;./../LIBRERIAS/configuracion_auto.h: 12:     RPINR1 = 4;
 11456  00444C  0E04               	movlw	4
 11457  00444E  6FE1               	movwf	225,b	;volatile
 11458                           
 11459                           ; BSR set to: 14
 11460                           ;./../LIBRERIAS/configuracion_auto.h: 13:     TRISBbits.TRISB1 = 1;
 11461  004450  8293               	bsf	3987,1,c	;volatile
 11462                           
 11463                           ; BSR set to: 14
 11464                           ;./../LIBRERIAS/configuracion_auto.h: 14:     TRISBbits.TRISB0 = 1;
 11465  004452  8093               	bsf	3987,0,c	;volatile
 11466                           
 11467                           ; BSR set to: 14
 11468                           ;./../LIBRERIAS/configuracion_auto.h: 15:     INTCONbits.GIE = 1;
 11469  004454  8EF2               	bsf	4082,7,c	;volatile
 11470                           
 11471                           ; BSR set to: 14
 11472                           ;./../LIBRERIAS/configuracion_auto.h: 16:     INTCONbits.PEIE = 1;
 11473  004456  8CF2               	bsf	4082,6,c	;volatile
 11474                           
 11475                           ; BSR set to: 14
 11476                           ;./../LIBRERIAS/configuracion_auto.h: 17:     INTCON2bits.INTEDG0=0;
 11477  004458  9CF1               	bcf	4081,6,c	;volatile
 11478                           
 11479                           ; BSR set to: 14
 11480                           ;./../LIBRERIAS/configuracion_auto.h: 18:     INTCON2bits.INTEDG1 = 0;
 11481  00445A  9AF1               	bcf	4081,5,c	;volatile
 11482                           
 11483                           ; BSR set to: 14
 11484                           ;./../LIBRERIAS/configuracion_auto.h: 19:     INTCONbits.INT0F = 0;
 11485  00445C  92F2               	bcf	4082,1,c	;volatile
 11486                           
 11487                           ; BSR set to: 14
 11488                           ;./../LIBRERIAS/configuracion_auto.h: 20:     INTCONbits.INT0E = 1;
 11489  00445E  88F2               	bsf	4082,4,c	;volatile
 11490                           
 11491                           ; BSR set to: 14
 11492                           ;./../LIBRERIAS/configuracion_auto.h: 21:     INTCON3bits.INT1E = 1;
 11493  004460  86F0               	bsf	4080,3,c	;volatile
 11494                           
 11495                           ; BSR set to: 14
 11496                           ;./../LIBRERIAS/configuracion_auto.h: 22:     INTCON3bits.INT1F = 0;
 11497  004462  90F0               	bcf	4080,0,c	;volatile
 11498                           
 11499                           ; BSR set to: 14
 11500  004464  0012               	return		;funcret
 11501  004466                     __end_of_configurarInterrupciones:
 11502                           	opt callstack 0
 11503                           
 11504 ;; *************** function _PWMServo *****************
 11505 ;; Defined at:
 11506 ;;		line 265 in file "auto.c"
 11507 ;; Parameters:    Size  Location     Type
 11508 ;;		None
 11509 ;; Auto vars:     Size  Location     Type
 11510 ;;		None
 11511 ;; Return value:  Size  Location     Type
 11512 ;;                  1    wreg      void 
 11513 ;; Registers used:
 11514 ;;		wreg, status,2, status,0
 11515 ;; Tracked objects:
 11516 ;;		On entry : 0/0
 11517 ;;		On exit  : 0/0
 11518 ;;		Unchanged: 0/0
 11519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11524 ;;Total ram usage:        0 bytes
 11525 ;; Hardware stack levels used:    1
 11526 ;; Hardware stack levels required when called:    2
 11527 ;; This function calls:
 11528 ;;		Nothing
 11529 ;; This function is called by:
 11530 ;;		_main
 11531 ;; This function uses a non-reentrant model
 11532 ;;
 11533                           
 11534                           	psect	text56
 11535  004152                     __ptext56:
 11536                           	opt callstack 0
 11537  004152                     _PWMServo:
 11538                           	opt callstack 28
 11539                           
 11540                           ;auto.c: 266:     contador_timer_5 = 0;
 11541                           
 11542                           ; BSR set to: 14
 11543                           ;incstack = 0
 11544  004152  0E00               	movlw	0
 11545  004154  6E3D               	movwf	_contador_timer_5+1,c
 11546  004156  0E00               	movlw	0
 11547  004158  6E3C               	movwf	_contador_timer_5,c
 11548                           
 11549                           ;auto.c: 267:     if(PORTDbits.RD4 == 1){
 11550  00415A  A883               	btfss	3971,4,c	;volatile
 11551  00415C  D010               	goto	l290
 11552                           
 11553                           ;auto.c: 268:         parar++;
 11554  00415E  4A3E               	infsnz	_parar,f,c
 11555  004160  2A3F               	incf	_parar+1,f,c
 11556                           
 11557                           ;auto.c: 269:         PORTDbits.RD4 = 0;
 11558  004162  9883               	bcf	3971,4,c	;volatile
 11559                           
 11560                           ;auto.c: 270:         tiempo_anterior_1 = TIME_MAX;
 11561  004164  C048  F046         	movff	_TIME_MAX,_tiempo_anterior_1
 11562  004168  C049  F047         	movff	_TIME_MAX+1,_tiempo_anterior_1+1
 11563                           
 11564                           ;auto.c: 271:         TIME_MAX = 1000 - tiempo_anterior_1;
 11565  00416C  5046               	movf	_tiempo_anterior_1,w,c
 11566  00416E  08E8               	sublw	232
 11567  004170  6E48               	movwf	_TIME_MAX,c
 11568  004172  5047               	movf	_tiempo_anterior_1+1,w,c
 11569  004174  A0D8               	btfss	status,0,c
 11570  004176  2AE8               	incf	wreg,f,c
 11571  004178  0803               	sublw	3
 11572  00417A  6E49               	movwf	_TIME_MAX+1,c
 11573                           
 11574                           ;auto.c: 272:     }
 11575  00417C  D005               	goto	l7563
 11576  00417E                     l290:
 11577                           
 11578                           ;auto.c: 274:         PORTDbits.RD4 = 1;
 11579  00417E  8883               	bsf	3971,4,c	;volatile
 11580                           
 11581                           ;auto.c: 275:         TIME_MAX = tiempo_anterior_1;
 11582  004180  C046  F048         	movff	_tiempo_anterior_1,_TIME_MAX
 11583  004184  C047  F049         	movff	_tiempo_anterior_1+1,_TIME_MAX+1
 11584  004188                     l7563:
 11585                           
 11586                           ;auto.c: 277:     if(parar == 30){
 11587  004188  0E1E               	movlw	30
 11588  00418A  183E               	xorwf	_parar,w,c
 11589  00418C  103F               	iorwf	_parar+1,w,c
 11590  00418E  A4D8               	btfss	status,2,c
 11591  004190  0012               	return	
 11592                           
 11593                           ;auto.c: 278:         T5CONbits.TMR5ON = 0;
 11594  004192  010F               	movlb	15	; () banked
 11595  004194  9122               	bcf	34,0,b	;volatile
 11596                           
 11597                           ;auto.c: 279:         PORTDbits.RD4 = 0;
 11598  004196  9883               	bcf	3971,4,c	;volatile
 11599                           
 11600                           ; BSR set to: 15
 11601                           ;auto.c: 280:         parar = 0;
 11602  004198  0E00               	movlw	0
 11603  00419A  6E3F               	movwf	_parar+1,c
 11604  00419C  0E00               	movlw	0
 11605  00419E  6E3E               	movwf	_parar,c
 11606  0041A0  0012               	return		;funcret
 11607  0041A2                     __end_of_PWMServo:
 11608                           	opt callstack 0
 11609                           
 11610 ;; *************** function _rutina *****************
 11611 ;; Defined at:
 11612 ;;		line 52 in file "auto.c"
 11613 ;; Parameters:    Size  Location     Type
 11614 ;;		None
 11615 ;; Auto vars:     Size  Location     Type
 11616 ;;  dato            1   40[COMRAM] unsigned char 
 11617 ;; Return value:  Size  Location     Type
 11618 ;;                  1    wreg      void 
 11619 ;; Registers used:
 11620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11621 ;; Tracked objects:
 11622 ;;		On entry : 0/0
 11623 ;;		On exit  : 0/0
 11624 ;;		Unchanged: 0/0
 11625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11629 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11630 ;;Total ram usage:        3 bytes
 11631 ;; Hardware stack levels used:    1
 11632 ;; Hardware stack levels required when called:    1
 11633 ;; This function calls:
 11634 ;;		i2___awdiv
 11635 ;;		i2___fladd
 11636 ;;		i2___xxtofl
 11637 ;; This function is called by:
 11638 ;;		Interrupt level 2
 11639 ;; This function uses a non-reentrant model
 11640 ;;
 11641                           
 11642                           	psect	intcode
 11643  000008                     __pintcode:
 11644                           	opt callstack 0
 11645  000008                     _rutina:
 11646                           	opt callstack 20
 11647                           
 11648                           ;incstack = 0
 11649  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11650  00000A  CFD9 F027          	movff	fsr2l,??_rutina
 11651  00000E  CFDA F028          	movff	fsr2h,??_rutina+1
 11652                           
 11653                           ;auto.c: 53:     if(PIR1bits.RC1IF == 1){
 11654  000012  AA9E               	btfss	3998,5,c	;volatile
 11655  000014  D016               	goto	i2l207
 11656                           
 11657                           ;auto.c: 54:         unsigned char dato = RCREG1;
 11658  000016  CFAF F029          	movff	4015,rutina@dato	;volatile
 11659                           
 11660                           ;auto.c: 55:         if(dato == 'P'){
 11661  00001A  0E50               	movlw	80
 11662  00001C  1829               	xorwf	rutina@dato,w,c
 11663  00001E  A4D8               	btfss	status,2,c
 11664  000020  D006               	goto	i2l5603
 11665                           
 11666                           ;auto.c: 56:             bandera = 1;
 11667  000022  0E01               	movlw	1
 11668  000024  0101               	movlb	1	; () banked
 11669  000026  6F21               	movwf	_bandera& (0+255),b
 11670                           
 11671                           ;auto.c: 57:             indicador = 0;
 11672  000028  0E00               	movlw	0
 11673  00002A  6E44               	movwf	_indicador,c
 11674                           
 11675                           ;auto.c: 58:         }
 11676  00002C  D099               	goto	i2l224
 11677  00002E                     i2l5603:
 11678                           
 11679                           ;auto.c: 60:             datos[indicador] = dato;
 11680  00002E  0E73               	movlw	low _datos
 11681  000030  2444               	addwf	_indicador,w,c
 11682  000032  6ED9               	movwf	fsr2l,c
 11683  000034  6ADA               	clrf	fsr2h,c
 11684  000036  0E01               	movlw	high _datos
 11685  000038  22DA               	addwfc	fsr2h,f,c
 11686  00003A  C029  FFDF         	movff	rutina@dato,indf2
 11687                           
 11688                           ;auto.c: 61:             indicador++;
 11689  00003E  2A44               	incf	_indicador,f,c
 11690  000040  D08F               	goto	i2l224
 11691  000042                     i2l207:
 11692  000042  A498               	btfss	3992,2,c	;volatile
 11693  000044  D016               	goto	i2l211
 11694                           
 11695                           ;auto.c: 65:         PIR5bits.TMR5IF = 0;
 11696  000046  9498               	bcf	3992,2,c	;volatile
 11697                           
 11698                           ;auto.c: 66:         contador_timer_5++;
 11699  000048  4A3C               	infsnz	_contador_timer_5,f,c
 11700  00004A  2A3D               	incf	_contador_timer_5+1,f,c
 11701                           
 11702                           ;auto.c: 67:         TMR5H = 0xFF;
 11703  00004C  010F               	movlb	15	; () banked
 11704  00004E  6924               	setf	36,b	;volatile
 11705                           
 11706                           ; BSR set to: 15
 11707                           ;auto.c: 68:         TMR5L = 0xE2;
 11708  000050  0EE2               	movlw	226
 11709  000052  6F23               	movwf	35,b	;volatile
 11710                           
 11711                           ; BSR set to: 15
 11712                           ;auto.c: 69:         if(contador_timer_5 == TIME_MAX){
 11713  000054  5048               	movf	_TIME_MAX,w,c
 11714  000056  183C               	xorwf	_contador_timer_5,w,c
 11715  000058  E103               	bnz	i2u678_41
 11716  00005A  5049               	movf	_TIME_MAX+1,w,c
 11717  00005C  183D               	xorwf	_contador_timer_5+1,w,c
 11718  00005E  A4D8               	btfss	status,2,c
 11719  000060                     i2u678_41:
 11720  000060  D07F               	goto	i2l224
 11721                           
 11722                           ; BSR set to: 15
 11723                           ;auto.c: 70:             contador_timer_5 = 0;
 11724  000062  0E00               	movlw	0
 11725  000064  6E3D               	movwf	_contador_timer_5+1,c
 11726  000066  0E00               	movlw	0
 11727  000068  6E3C               	movwf	_contador_timer_5,c
 11728                           
 11729                           ;auto.c: 71:             bandera_servo = 1;
 11730  00006A  0E01               	movlw	1
 11731  00006C  0101               	movlb	1	; () banked
 11732  00006E  6F20               	movwf	_bandera_servo& (0+255),b
 11733  000070  D077               	goto	i2l224
 11734  000072                     i2l211:
 11735  000072  A2F2               	btfss	4082,1,c	;volatile
 11736  000074  D005               	goto	i2l214
 11737                           
 11738                           ;auto.c: 75:         INTCONbits.INT0F = 0;
 11739  000076  92F2               	bcf	4082,1,c	;volatile
 11740                           
 11741                           ;auto.c: 76:         obstaculo = 1;
 11742  000078  0E01               	movlw	1
 11743  00007A  0101               	movlb	1	; () banked
 11744  00007C  6F1F               	movwf	_obstaculo& (0+255),b
 11745                           
 11746                           ;auto.c: 77:     }
 11747  00007E  D070               	goto	i2l224
 11748  000080                     i2l214:
 11749  000080  AAA4               	btfss	4004,5,c	;volatile
 11750  000082  D057               	goto	i2l216
 11751                           
 11752                           ;auto.c: 79:         if(contador_datos == 1){
 11753  000084  0442               	decf	_contador_datos,w,c
 11754  000086  A4D8               	btfss	status,2,c
 11755  000088  D035               	goto	i2l5631
 11756                           
 11757                           ;auto.c: 80:             bandera_distancia = 1;
 11758  00008A  0E01               	movlw	1
 11759  00008C  0101               	movlb	1	; () banked
 11760  00008E  6F1E               	movwf	_bandera_distancia& (0+255),b
 11761                           
 11762                           ; BSR set to: 1
 11763                           ;auto.c: 81:             distancia += (RCREG2)/10;
 11764  000090  C032  F017         	movff	_distancia,i2___fladd@b
 11765  000094  C033  F018         	movff	_distancia+1,i2___fladd@b+1
 11766  000098  C034  F019         	movff	_distancia+2,i2___fladd@b+2
 11767  00009C  C035  F01A         	movff	_distancia+3,i2___fladd@b+3
 11768  0000A0  0E00               	movlw	0
 11769  0000A2  6E04               	movwf	i2___awdiv@divisor+1,c
 11770  0000A4  0E0A               	movlw	10
 11771  0000A6  6E03               	movwf	i2___awdiv@divisor,c
 11772  0000A8  CFAA F001          	movff	4010,i2___awdiv@dividend	;volatile
 11773  0000AC  6A02               	clrf	i2___awdiv@dividend+1,c
 11774  0000AE  EC92  F01E         	call	i2___awdiv	;wreg free
 11775  0000B2  C001  F009         	movff	?i2___awdiv,i2___xxtofl@val
 11776  0000B6  C002  F00A         	movff	?i2___awdiv+1,i2___xxtofl@val+1
 11777  0000BA  0E00               	movlw	0
 11778  0000BC  BE0A               	btfsc	i2___xxtofl@val+1,7,c
 11779  0000BE  0EFF               	movlw	-1
 11780  0000C0  6E0B               	movwf	i2___xxtofl@val+2,c
 11781  0000C2  6E0C               	movwf	i2___xxtofl@val+3,c
 11782  0000C4  0E01               	movlw	1
 11783  0000C6  EC6A  F019         	call	i2___xxtofl
 11784  0000CA  C009  F01B         	movff	?i2___xxtofl,i2___fladd@a
 11785  0000CE  C00A  F01C         	movff	?i2___xxtofl+1,i2___fladd@a+1
 11786  0000D2  C00B  F01D         	movff	?i2___xxtofl+2,i2___fladd@a+2
 11787  0000D6  C00C  F01E         	movff	?i2___xxtofl+3,i2___fladd@a+3
 11788  0000DA  ECEB  F012         	call	i2___fladd	;wreg free
 11789  0000DE  C017  F032         	movff	?i2___fladd,_distancia
 11790  0000E2  C018  F033         	movff	?i2___fladd+1,_distancia+1
 11791  0000E6  C019  F034         	movff	?i2___fladd+2,_distancia+2
 11792  0000EA  C01A  F035         	movff	?i2___fladd+3,_distancia+3
 11793                           
 11794                           ;auto.c: 82:             contador_datos = 0;
 11795  0000EE  0E00               	movlw	0
 11796  0000F0  6E42               	movwf	_contador_datos,c
 11797                           
 11798                           ;auto.c: 83:         }
 11799  0000F2  D036               	goto	i2l224
 11800  0000F4                     i2l5631:
 11801                           
 11802                           ;auto.c: 85:             distancia = 256*(RCREG2)/10;
 11803  0000F4  0E00               	movlw	0
 11804  0000F6  6E04               	movwf	i2___awdiv@divisor+1,c
 11805  0000F8  0E0A               	movlw	10
 11806  0000FA  6E03               	movwf	i2___awdiv@divisor,c
 11807  0000FC  50AA               	movf	4010,w,c	;volatile
 11808  0000FE  6E02               	movwf	i2___awdiv@dividend+1,c
 11809  000100  6A01               	clrf	i2___awdiv@dividend,c
 11810  000102  EC92  F01E         	call	i2___awdiv	;wreg free
 11811  000106  C001  F009         	movff	?i2___awdiv,i2___xxtofl@val
 11812  00010A  C002  F00A         	movff	?i2___awdiv+1,i2___xxtofl@val+1
 11813  00010E  0E00               	movlw	0
 11814  000110  BE0A               	btfsc	i2___xxtofl@val+1,7,c
 11815  000112  0EFF               	movlw	-1
 11816  000114  6E0B               	movwf	i2___xxtofl@val+2,c
 11817  000116  6E0C               	movwf	i2___xxtofl@val+3,c
 11818  000118  0E01               	movlw	1
 11819  00011A  EC6A  F019         	call	i2___xxtofl
 11820  00011E  C009  F032         	movff	?i2___xxtofl,_distancia
 11821  000122  C00A  F033         	movff	?i2___xxtofl+1,_distancia+1
 11822  000126  C00B  F034         	movff	?i2___xxtofl+2,_distancia+2
 11823  00012A  C00C  F035         	movff	?i2___xxtofl+3,_distancia+3
 11824                           
 11825                           ;auto.c: 86:             contador_datos ++;
 11826  00012E  2A42               	incf	_contador_datos,f,c
 11827  000130  D017               	goto	i2l224
 11828  000132                     i2l216:
 11829  000132  B0F0               	btfsc	4080,0,c	;volatile
 11830  000134  A6F0               	btfss	4080,3,c	;volatile
 11831  000136  D006               	goto	i2l220
 11832                           
 11833                           ;auto.c: 90:         bandera_fuego = 1;
 11834  000138  0E01               	movlw	1
 11835  00013A  0101               	movlb	1	; () banked
 11836  00013C  6F22               	movwf	_bandera_fuego& (0+255),b
 11837                           
 11838                           ; BSR set to: 1
 11839                           ;auto.c: 91:         INTCON3bits.INT1E = 0;
 11840  00013E  96F0               	bcf	4080,3,c	;volatile
 11841                           
 11842                           ; BSR set to: 1
 11843                           ;auto.c: 92:         INTCON3bits.INT1F = 0;
 11844  000140  90F0               	bcf	4080,0,c	;volatile
 11845                           
 11846                           ;auto.c: 93:     }
 11847  000142  D00E               	goto	i2l224
 11848  000144                     i2l220:
 11849  000144  A6A4               	btfss	4004,3,c	;volatile
 11850  000146  D00C               	goto	i2l224
 11851                           
 11852                           ;auto.c: 95:         PIR3bits.TMR4IF = 0;
 11853  000148  96A4               	bcf	4004,3,c	;volatile
 11854                           
 11855                           ;auto.c: 96:         TMR4 = 181;
 11856  00014A  0EB5               	movlw	181
 11857  00014C  6E78               	movwf	3960,c	;volatile
 11858                           
 11859                           ;auto.c: 97:         contador_distancia ++;
 11860  00014E  2A40               	incf	_contador_distancia,f,c
 11861                           
 11862                           ;auto.c: 98:         if(contador_distancia == 100){
 11863  000150  0E64               	movlw	100
 11864  000152  1840               	xorwf	_contador_distancia,w,c
 11865  000154  A4D8               	btfss	status,2,c
 11866  000156  D004               	goto	i2l224
 11867                           
 11868                           ;auto.c: 99:            TXREG2 = 0x55;
 11869  000158  0E55               	movlw	85
 11870  00015A  6EA9               	movwf	4009,c	;volatile
 11871                           
 11872                           ;auto.c: 100:            contador_distancia = 0;
 11873  00015C  0E00               	movlw	0
 11874  00015E  6E40               	movwf	_contador_distancia,c
 11875  000160                     i2l224:
 11876  000160  C028  FFDA         	movff	??_rutina+1,fsr2h
 11877  000164  C027  FFD9         	movff	??_rutina,fsr2l
 11878  000168  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11879  00016A  0011               	retfie		f
 11880  00016C                     __end_of_rutina:
 11881                           	opt callstack 0
 11882                           
 11883 ;; *************** function i2___xxtofl *****************
 11884 ;; Defined at:
 11885 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;  sign            1    wreg     unsigned char 
 11888 ;;  val             4    8[COMRAM] long 
 11889 ;; Auto vars:     Size  Location     Type
 11890 ;;  sign            1   16[COMRAM] unsigned char 
 11891 ;;  __xxtofl        4   18[COMRAM] unsigned long 
 11892 ;;  __xxtofl        1   17[COMRAM] unsigned char 
 11893 ;; Return value:  Size  Location     Type
 11894 ;;                  4    8[COMRAM] unsigned char 
 11895 ;; Registers used:
 11896 ;;		wreg, status,2, status,0
 11897 ;; Tracked objects:
 11898 ;;		On entry : 0/0
 11899 ;;		On exit  : 0/0
 11900 ;;		Unchanged: 0/0
 11901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11903 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11904 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11905 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11906 ;;Total ram usage:       14 bytes
 11907 ;; Hardware stack levels used:    1
 11908 ;; This function calls:
 11909 ;;		Nothing
 11910 ;; This function is called by:
 11911 ;;		_rutina
 11912 ;; This function uses a non-reentrant model
 11913 ;;
 11914                           
 11915                           	psect	text58
 11916  0032D4                     __ptext58:
 11917                           	opt callstack 0
 11918  0032D4                     i2___xxtofl:
 11919                           	opt callstack 20
 11920                           
 11921                           ;incstack = 0
 11922                           ;i2___xxtofl@sign stored from wreg
 11923  0032D4  6E11               	movwf	i2___xxtofl@sign,c
 11924  0032D6  5011               	movf	i2___xxtofl@sign,w,c
 11925  0032D8  A4D8               	btfss	status,2,c
 11926  0032DA  AE0C               	btfss	i2___xxtofl@val+3,7,c
 11927  0032DC  D01A               	goto	i2l1178
 11928  0032DE  C009  F00D         	movff	i2___xxtofl@val,??i2___xxtofl
 11929  0032E2  C00A  F00E         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 11930  0032E6  C00B  F00F         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 11931  0032EA  C00C  F010         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 11932  0032EE  1E0D               	comf	??i2___xxtofl,f,c
 11933  0032F0  1E0E               	comf	??i2___xxtofl+1,f,c
 11934  0032F2  1E0F               	comf	??i2___xxtofl+2,f,c
 11935  0032F4  1E10               	comf	??i2___xxtofl+3,f,c
 11936  0032F6  2A0D               	incf	??i2___xxtofl,f,c
 11937  0032F8  0E00               	movlw	0
 11938  0032FA  220E               	addwfc	??i2___xxtofl+1,f,c
 11939  0032FC  220F               	addwfc	??i2___xxtofl+2,f,c
 11940  0032FE  2210               	addwfc	??i2___xxtofl+3,f,c
 11941  003300  C00D  F013         	movff	??i2___xxtofl,i2___xxtofl@arg
 11942  003304  C00E  F014         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 11943  003308  C00F  F015         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 11944  00330C  C010  F016         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 11945  003310  D008               	goto	i2l5555
 11946  003312                     i2l1178:
 11947  003312  C009  F013         	movff	i2___xxtofl@val,i2___xxtofl@arg
 11948  003316  C00A  F014         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 11949  00331A  C00B  F015         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 11950  00331E  C00C  F016         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 11951  003322                     i2l5555:
 11952  003322  5009               	movf	i2___xxtofl@val,w,c
 11953  003324  100A               	iorwf	i2___xxtofl@val+1,w,c
 11954  003326  100B               	iorwf	i2___xxtofl@val+2,w,c
 11955  003328  100C               	iorwf	i2___xxtofl@val+3,w,c
 11956  00332A  A4D8               	btfss	status,2,c
 11957  00332C  D009               	goto	i2l5561
 11958  00332E  0E00               	movlw	0
 11959  003330  6E09               	movwf	?i2___xxtofl,c
 11960  003332  0E00               	movlw	0
 11961  003334  6E0A               	movwf	?i2___xxtofl+1,c
 11962  003336  0E00               	movlw	0
 11963  003338  6E0B               	movwf	?i2___xxtofl+2,c
 11964  00333A  0E00               	movlw	0
 11965  00333C  6E0C               	movwf	?i2___xxtofl+3,c
 11966  00333E  0012               	return	
 11967  003340                     i2l5561:
 11968  003340  0E96               	movlw	150
 11969  003342  6E12               	movwf	i2___xxtofl@exp,c
 11970  003344  D006               	goto	i2l5565
 11971  003346                     i2l5563:
 11972  003346  2A12               	incf	i2___xxtofl@exp,f,c
 11973  003348  90D8               	bcf	status,0,c
 11974  00334A  3216               	rrcf	i2___xxtofl@arg+3,f,c
 11975  00334C  3215               	rrcf	i2___xxtofl@arg+2,f,c
 11976  00334E  3214               	rrcf	i2___xxtofl@arg+1,f,c
 11977  003350  3213               	rrcf	i2___xxtofl@arg,f,c
 11978  003352                     i2l5565:
 11979  003352  0E00               	movlw	0
 11980  003354  1413               	andwf	i2___xxtofl@arg,w,c
 11981  003356  6E0D               	movwf	??i2___xxtofl& (0+255),c
 11982  003358  0E00               	movlw	0
 11983  00335A  1414               	andwf	i2___xxtofl@arg+1,w,c
 11984  00335C  6E0E               	movwf	(??i2___xxtofl+1)& (0+255),c
 11985  00335E  0E00               	movlw	0
 11986  003360  1415               	andwf	i2___xxtofl@arg+2,w,c
 11987  003362  6E0F               	movwf	(??i2___xxtofl+2)& (0+255),c
 11988  003364  0EFE               	movlw	254
 11989  003366  1416               	andwf	i2___xxtofl@arg+3,w,c
 11990  003368  6E10               	movwf	(??i2___xxtofl+3)& (0+255),c
 11991  00336A  500D               	movf	??i2___xxtofl,w,c
 11992  00336C  100E               	iorwf	??i2___xxtofl+1,w,c
 11993  00336E  100F               	iorwf	??i2___xxtofl+2,w,c
 11994  003370  1010               	iorwf	??i2___xxtofl+3,w,c
 11995  003372  B4D8               	btfsc	status,2,c
 11996  003374  D00D               	goto	i2l1185
 11997  003376  D7E7               	goto	i2l5563
 11998  003378                     i2l5567:
 11999  003378  2A12               	incf	i2___xxtofl@exp,f,c
 12000  00337A  0E01               	movlw	1
 12001  00337C  2613               	addwf	i2___xxtofl@arg,f,c
 12002  00337E  0E00               	movlw	0
 12003  003380  2214               	addwfc	i2___xxtofl@arg+1,f,c
 12004  003382  2215               	addwfc	i2___xxtofl@arg+2,f,c
 12005  003384  2216               	addwfc	i2___xxtofl@arg+3,f,c
 12006  003386  90D8               	bcf	status,0,c
 12007  003388  3216               	rrcf	i2___xxtofl@arg+3,f,c
 12008  00338A  3215               	rrcf	i2___xxtofl@arg+2,f,c
 12009  00338C  3214               	rrcf	i2___xxtofl@arg+1,f,c
 12010  00338E  3213               	rrcf	i2___xxtofl@arg,f,c
 12011  003390                     i2l1185:
 12012  003390  0E00               	movlw	0
 12013  003392  1413               	andwf	i2___xxtofl@arg,w,c
 12014  003394  6E0D               	movwf	??i2___xxtofl& (0+255),c
 12015  003396  0E00               	movlw	0
 12016  003398  1414               	andwf	i2___xxtofl@arg+1,w,c
 12017  00339A  6E0E               	movwf	(??i2___xxtofl+1)& (0+255),c
 12018  00339C  0E00               	movlw	0
 12019  00339E  1415               	andwf	i2___xxtofl@arg+2,w,c
 12020  0033A0  6E0F               	movwf	(??i2___xxtofl+2)& (0+255),c
 12021  0033A2  0EFF               	movlw	255
 12022  0033A4  1416               	andwf	i2___xxtofl@arg+3,w,c
 12023  0033A6  6E10               	movwf	(??i2___xxtofl+3)& (0+255),c
 12024  0033A8  500D               	movf	??i2___xxtofl,w,c
 12025  0033AA  100E               	iorwf	??i2___xxtofl+1,w,c
 12026  0033AC  100F               	iorwf	??i2___xxtofl+2,w,c
 12027  0033AE  1010               	iorwf	??i2___xxtofl+3,w,c
 12028  0033B0  B4D8               	btfsc	status,2,c
 12029  0033B2  D007               	goto	i2l5575
 12030  0033B4  D7E1               	goto	i2l5567
 12031  0033B6                     i2l5573:
 12032  0033B6  0612               	decf	i2___xxtofl@exp,f,c
 12033  0033B8  90D8               	bcf	status,0,c
 12034  0033BA  3613               	rlcf	i2___xxtofl@arg,f,c
 12035  0033BC  3614               	rlcf	i2___xxtofl@arg+1,f,c
 12036  0033BE  3615               	rlcf	i2___xxtofl@arg+2,f,c
 12037  0033C0  3616               	rlcf	i2___xxtofl@arg+3,f,c
 12038  0033C2                     i2l5575:
 12039  0033C2  BE15               	btfsc	i2___xxtofl@arg+2,7,c
 12040  0033C4  D003               	goto	i2u671_40
 12041  0033C6  0E02               	movlw	2
 12042  0033C8  6012               	cpfslt	i2___xxtofl@exp,c
 12043  0033CA  D7F5               	goto	i2l5573
 12044  0033CC                     i2u671_40:
 12045  0033CC  A012               	btfss	i2___xxtofl@exp,0,c
 12046  0033CE  9E15               	bcf	i2___xxtofl@arg+2,7,c
 12047  0033D0  90D8               	bcf	status,0,c
 12048  0033D2  3212               	rrcf	i2___xxtofl@exp,f,c
 12049  0033D4  C012  F00D         	movff	i2___xxtofl@exp,??i2___xxtofl
 12050  0033D8  6A0E               	clrf	(??i2___xxtofl+1)& (0+255),c
 12051  0033DA  6A0F               	clrf	(??i2___xxtofl+2)& (0+255),c
 12052  0033DC  6A10               	clrf	(??i2___xxtofl+3)& (0+255),c
 12053  0033DE  C00D  F010         	movff	??i2___xxtofl,??i2___xxtofl+3
 12054  0033E2  6A0F               	clrf	??i2___xxtofl+2,c
 12055  0033E4  6A0E               	clrf	??i2___xxtofl+1,c
 12056  0033E6  6A0D               	clrf	??i2___xxtofl,c
 12057  0033E8  500D               	movf	??i2___xxtofl,w,c
 12058  0033EA  1213               	iorwf	i2___xxtofl@arg,f,c
 12059  0033EC  500E               	movf	??i2___xxtofl+1,w,c
 12060  0033EE  1214               	iorwf	i2___xxtofl@arg+1,f,c
 12061  0033F0  500F               	movf	??i2___xxtofl+2,w,c
 12062  0033F2  1215               	iorwf	i2___xxtofl@arg+2,f,c
 12063  0033F4  5010               	movf	??i2___xxtofl+3,w,c
 12064  0033F6  1216               	iorwf	i2___xxtofl@arg+3,f,c
 12065  0033F8  5011               	movf	i2___xxtofl@sign,w,c
 12066  0033FA  A4D8               	btfss	status,2,c
 12067  0033FC  AE0C               	btfss	i2___xxtofl@val+3,7,c
 12068  0033FE  D001               	goto	i2l5591
 12069  003400  8E16               	bsf	i2___xxtofl@arg+3,7,c
 12070  003402                     i2l5591:
 12071  003402  C013  F009         	movff	i2___xxtofl@arg,?i2___xxtofl
 12072  003406  C014  F00A         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 12073  00340A  C015  F00B         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 12074  00340E  C016  F00C         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 12075  003412  0012               	return		;funcret
 12076  003414                     __end_ofi2___xxtofl:
 12077                           	opt callstack 0
 12078                           
 12079 ;; *************** function i2___fladd *****************
 12080 ;; Defined at:
 12081 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12082 ;; Parameters:    Size  Location     Type
 12083 ;;  b               4   22[COMRAM] unsigned char 
 12084 ;;  a               4   26[COMRAM] unsigned char 
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;  __fladd         1   37[COMRAM] unsigned char 
 12087 ;;  __fladd         1   36[COMRAM] unsigned char 
 12088 ;;  __fladd         1   35[COMRAM] unsigned char 
 12089 ;;  __fladd         1   34[COMRAM] unsigned char 
 12090 ;; Return value:  Size  Location     Type
 12091 ;;                  4   22[COMRAM] unsigned char 
 12092 ;; Registers used:
 12093 ;;		wreg, status,2, status,0
 12094 ;; Tracked objects:
 12095 ;;		On entry : 0/0
 12096 ;;		On exit  : 0/0
 12097 ;;		Unchanged: 0/0
 12098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12099 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12100 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12101 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12102 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12103 ;;Total ram usage:       16 bytes
 12104 ;; Hardware stack levels used:    1
 12105 ;; This function calls:
 12106 ;;		Nothing
 12107 ;; This function is called by:
 12108 ;;		_rutina
 12109 ;; This function uses a non-reentrant model
 12110 ;;
 12111                           
 12112                           	psect	text59
 12113  0025D6                     __ptext59:
 12114                           	opt callstack 0
 12115  0025D6                     i2___fladd:
 12116                           	opt callstack 20
 12117                           
 12118                           ;incstack = 0
 12119  0025D6  501A               	movf	i2___fladd@b+3,w,c
 12120  0025D8  0B80               	andlw	128
 12121  0025DA  6E23               	movwf	i2___fladd@signs,c
 12122  0025DC  501A               	movf	i2___fladd@b+3,w,c
 12123  0025DE  241A               	addwf	i2___fladd@b+3,w,c
 12124  0025E0  6E25               	movwf	i2___fladd@bexp,c
 12125  0025E2  BE19               	btfsc	i2___fladd@b+2,7,c
 12126  0025E4  8025               	bsf	i2___fladd@bexp,0,c
 12127  0025E6  5025               	movf	i2___fladd@bexp,w,c
 12128  0025E8  B4D8               	btfsc	status,2,c
 12129  0025EA  D00D               	goto	i2l5363
 12130  0025EC  2825               	incf	i2___fladd@bexp,w,c
 12131  0025EE  A4D8               	btfss	status,2,c
 12132  0025F0  D008               	goto	i2l5359
 12133  0025F2  0E00               	movlw	0
 12134  0025F4  6E17               	movwf	i2___fladd@b,c
 12135  0025F6  0E00               	movlw	0
 12136  0025F8  6E18               	movwf	i2___fladd@b+1,c
 12137  0025FA  0E00               	movlw	0
 12138  0025FC  6E19               	movwf	i2___fladd@b+2,c
 12139  0025FE  0E00               	movlw	0
 12140  002600  6E1A               	movwf	i2___fladd@b+3,c
 12141  002602                     i2l5359:
 12142  002602  8E19               	bsf	i2___fladd@b+2,7,c
 12143  002604  D006               	goto	L22
 12144  002606                     i2l5363:
 12145  002606  0E00               	movlw	0
 12146  002608  6E17               	movwf	i2___fladd@b,c
 12147  00260A  0E00               	movlw	0
 12148  00260C  6E18               	movwf	i2___fladd@b+1,c
 12149  00260E  0E00               	movlw	0
 12150  002610  6E19               	movwf	i2___fladd@b+2,c
 12151  002612                     L22:
 12152  002612  0E00               	movlw	0
 12153  002614  6E1A               	movwf	i2___fladd@b+3,c
 12154  002616  501E               	movf	i2___fladd@a+3,w,c
 12155  002618  0B80               	andlw	128
 12156  00261A  6E24               	movwf	i2___fladd@aexp,c
 12157  00261C  5023               	movf	i2___fladd@signs,w,c
 12158  00261E  1824               	xorwf	i2___fladd@aexp,w,c
 12159  002620  A4D8               	btfss	status,2,c
 12160  002622  8C23               	bsf	i2___fladd@signs,6,c
 12161  002624  501E               	movf	i2___fladd@a+3,w,c
 12162  002626  241E               	addwf	i2___fladd@a+3,w,c
 12163  002628  6E24               	movwf	i2___fladd@aexp,c
 12164  00262A  BE1D               	btfsc	i2___fladd@a+2,7,c
 12165  00262C  8024               	bsf	i2___fladd@aexp,0,c
 12166  00262E  5024               	movf	i2___fladd@aexp,w,c
 12167  002630  B4D8               	btfsc	status,2,c
 12168  002632  D00D               	goto	i2l5387
 12169  002634  2824               	incf	i2___fladd@aexp,w,c
 12170  002636  A4D8               	btfss	status,2,c
 12171  002638  D008               	goto	i2l5383
 12172  00263A  0E00               	movlw	0
 12173  00263C  6E1B               	movwf	i2___fladd@a,c
 12174  00263E  0E00               	movlw	0
 12175  002640  6E1C               	movwf	i2___fladd@a+1,c
 12176  002642  0E00               	movlw	0
 12177  002644  6E1D               	movwf	i2___fladd@a+2,c
 12178  002646  0E00               	movlw	0
 12179  002648  6E1E               	movwf	i2___fladd@a+3,c
 12180  00264A                     i2l5383:
 12181  00264A  8E1D               	bsf	i2___fladd@a+2,7,c
 12182  00264C  D006               	goto	L23
 12183  00264E                     i2l5387:
 12184  00264E  0E00               	movlw	0
 12185  002650  6E1B               	movwf	i2___fladd@a,c
 12186  002652  0E00               	movlw	0
 12187  002654  6E1C               	movwf	i2___fladd@a+1,c
 12188  002656  0E00               	movlw	0
 12189  002658  6E1D               	movwf	i2___fladd@a+2,c
 12190  00265A                     L23:
 12191  00265A  0E00               	movlw	0
 12192  00265C  6E1E               	movwf	i2___fladd@a+3,c
 12193  00265E  5025               	movf	i2___fladd@bexp,w,c
 12194  002660  5C24               	subwf	i2___fladd@aexp,w,c
 12195  002662  B0D8               	btfsc	status,0,c
 12196  002664  D022               	goto	i2l5425
 12197  002666  AC23               	btfss	i2___fladd@signs,6,c
 12198  002668  D002               	goto	i2l5395
 12199  00266A  0E80               	movlw	128
 12200  00266C  1A23               	xorwf	i2___fladd@signs,f,c
 12201  00266E                     i2l5395:
 12202  00266E  C025  F026         	movff	i2___fladd@bexp,i2___fladd@grs
 12203  002672  C024  F025         	movff	i2___fladd@aexp,i2___fladd@bexp
 12204  002676  C026  F024         	movff	i2___fladd@grs,i2___fladd@aexp
 12205  00267A  C017  F026         	movff	i2___fladd@b,i2___fladd@grs
 12206  00267E  C01B  F017         	movff	i2___fladd@a,i2___fladd@b
 12207  002682  C026  F01B         	movff	i2___fladd@grs,i2___fladd@a
 12208  002686  C018  F026         	movff	i2___fladd@b+1,i2___fladd@grs
 12209  00268A  C01C  F018         	movff	i2___fladd@a+1,i2___fladd@b+1
 12210  00268E  C026  F01C         	movff	i2___fladd@grs,i2___fladd@a+1
 12211  002692  C019  F026         	movff	i2___fladd@b+2,i2___fladd@grs
 12212  002696  C01D  F019         	movff	i2___fladd@a+2,i2___fladd@b+2
 12213  00269A  C026  F01D         	movff	i2___fladd@grs,i2___fladd@a+2
 12214  00269E  C01A  F026         	movff	i2___fladd@b+3,i2___fladd@grs
 12215  0026A2  C01E  F01A         	movff	i2___fladd@a+3,i2___fladd@b+3
 12216  0026A6  C026  F01E         	movff	i2___fladd@grs,i2___fladd@a+3
 12217  0026AA                     i2l5425:
 12218  0026AA  0E00               	movlw	0
 12219  0026AC  6E26               	movwf	i2___fladd@grs,c
 12220  0026AE  5025               	movf	i2___fladd@bexp,w,c
 12221  0026B0  C024  F01F         	movff	i2___fladd@aexp,??i2___fladd
 12222  0026B4  6A20               	clrf	(??i2___fladd+1)& (0+255),c
 12223  0026B6  5E1F               	subwf	??i2___fladd,f,c
 12224  0026B8  0E00               	movlw	0
 12225  0026BA  5A20               	subwfb	??i2___fladd+1,f,c
 12226  0026BC  BE20               	btfsc	??i2___fladd+1,7,c
 12227  0026BE  D02C               	goto	i2l1052
 12228  0026C0  5020               	movf	??i2___fladd+1,w,c
 12229  0026C2  E104               	bnz	i2u635_40
 12230  0026C4  0E1A               	movlw	26
 12231  0026C6  5C1F               	subwf	??i2___fladd,w,c
 12232  0026C8  A0D8               	btfss	status,0,c
 12233  0026CA  D026               	goto	i2l1052
 12234  0026CC                     i2u635_40:
 12235  0026CC  5017               	movf	i2___fladd@b,w,c
 12236  0026CE  1018               	iorwf	i2___fladd@b+1,w,c
 12237  0026D0  1019               	iorwf	i2___fladd@b+2,w,c
 12238  0026D2  101A               	iorwf	i2___fladd@b+3,w,c
 12239  0026D4  B4D8               	btfsc	status,2,c
 12240  0026D6  D002               	goto	i2u636_40
 12241  0026D8  0E01               	movlw	1
 12242  0026DA  D001               	goto	i2u637_40
 12243  0026DC                     i2u636_40:
 12244  0026DC  0E00               	movlw	0
 12245  0026DE                     i2u637_40:
 12246  0026DE  6E26               	movwf	i2___fladd@grs,c
 12247  0026E0  0E00               	movlw	0
 12248  0026E2  6E17               	movwf	i2___fladd@b,c
 12249  0026E4  0E00               	movlw	0
 12250  0026E6  6E18               	movwf	i2___fladd@b+1,c
 12251  0026E8  0E00               	movlw	0
 12252  0026EA  6E19               	movwf	i2___fladd@b+2,c
 12253  0026EC  0E00               	movlw	0
 12254  0026EE  6E1A               	movwf	i2___fladd@b+3,c
 12255  0026F0  C024  F025         	movff	i2___fladd@aexp,i2___fladd@bexp
 12256  0026F4  D015               	goto	i2u640_40
 12257  0026F6                     i2l1053:
 12258  0026F6  A026               	btfss	i2___fladd@grs,0,c
 12259  0026F8  D005               	goto	i2l5437
 12260  0026FA  90D8               	bcf	status,0,c
 12261  0026FC  3026               	rrcf	i2___fladd@grs,w,c
 12262  0026FE  0901               	iorlw	1
 12263  002700  6E26               	movwf	i2___fladd@grs,c
 12264  002702  D002               	goto	i2l5439
 12265  002704                     i2l5437:
 12266  002704  90D8               	bcf	status,0,c
 12267  002706  3226               	rrcf	i2___fladd@grs,f,c
 12268  002708                     i2l5439:
 12269  002708  B017               	btfsc	i2___fladd@b,0,c
 12270  00270A  8E26               	bsf	i2___fladd@grs,7,c
 12271  00270C  341A               	rlcf	i2___fladd@b+3,w,c
 12272  00270E  321A               	rrcf	i2___fladd@b+3,f,c
 12273  002710  3219               	rrcf	i2___fladd@b+2,f,c
 12274  002712  3218               	rrcf	i2___fladd@b+1,f,c
 12275  002714  3217               	rrcf	i2___fladd@b,f,c
 12276  002716  2A25               	incf	i2___fladd@bexp,f,c
 12277  002718                     i2l1052:
 12278  002718  5024               	movf	i2___fladd@aexp,w,c
 12279  00271A  5C25               	subwf	i2___fladd@bexp,w,c
 12280  00271C  A0D8               	btfss	status,0,c
 12281  00271E  D7EB               	goto	i2l1053
 12282  002720                     i2u640_40:
 12283  002720  BC23               	btfsc	i2___fladd@signs,6,c
 12284  002722  D028               	goto	i2l5471
 12285  002724  5025               	movf	i2___fladd@bexp,w,c
 12286  002726  A4D8               	btfss	status,2,c
 12287  002728  D009               	goto	i2l5453
 12288  00272A  0E00               	movlw	0
 12289  00272C  6E17               	movwf	?i2___fladd,c
 12290  00272E  0E00               	movlw	0
 12291  002730  6E18               	movwf	?i2___fladd+1,c
 12292  002732  0E00               	movlw	0
 12293  002734  6E19               	movwf	?i2___fladd+2,c
 12294  002736  0E00               	movlw	0
 12295  002738  6E1A               	movwf	?i2___fladd+3,c
 12296  00273A  0012               	return	
 12297  00273C                     i2l5453:
 12298  00273C  501B               	movf	i2___fladd@a,w,c
 12299  00273E  2617               	addwf	i2___fladd@b,f,c
 12300  002740  501C               	movf	i2___fladd@a+1,w,c
 12301  002742  2218               	addwfc	i2___fladd@b+1,f,c
 12302  002744  501D               	movf	i2___fladd@a+2,w,c
 12303  002746  2219               	addwfc	i2___fladd@b+2,f,c
 12304  002748  501E               	movf	i2___fladd@a+3,w,c
 12305  00274A  221A               	addwfc	i2___fladd@b+3,f,c
 12306  00274C  A01A               	btfss	i2___fladd@b+3,0,c
 12307  00274E  D071               	goto	i2u653_40
 12308  002750  A026               	btfss	i2___fladd@grs,0,c
 12309  002752  D005               	goto	i2l5461
 12310  002754  90D8               	bcf	status,0,c
 12311  002756  3026               	rrcf	i2___fladd@grs,w,c
 12312  002758  0901               	iorlw	1
 12313  00275A  6E26               	movwf	i2___fladd@grs,c
 12314  00275C  D002               	goto	i2l5463
 12315  00275E                     i2l5461:
 12316  00275E  90D8               	bcf	status,0,c
 12317  002760  3226               	rrcf	i2___fladd@grs,f,c
 12318  002762                     i2l5463:
 12319  002762  B017               	btfsc	i2___fladd@b,0,c
 12320  002764  8E26               	bsf	i2___fladd@grs,7,c
 12321  002766  341A               	rlcf	i2___fladd@b+3,w,c
 12322  002768  321A               	rrcf	i2___fladd@b+3,f,c
 12323  00276A  3219               	rrcf	i2___fladd@b+2,f,c
 12324  00276C  3218               	rrcf	i2___fladd@b+1,f,c
 12325  00276E  3217               	rrcf	i2___fladd@b,f,c
 12326  002770  2A25               	incf	i2___fladd@bexp,f,c
 12327  002772  D05F               	goto	i2u653_40
 12328  002774                     i2l5471:
 12329  002774  501B               	movf	i2___fladd@a,w,c
 12330  002776  5C17               	subwf	i2___fladd@b,w,c
 12331  002778  501C               	movf	i2___fladd@a+1,w,c
 12332  00277A  5818               	subwfb	i2___fladd@b+1,w,c
 12333  00277C  501D               	movf	i2___fladd@a+2,w,c
 12334  00277E  5819               	subwfb	i2___fladd@b+2,w,c
 12335  002780  501A               	movf	i2___fladd@b+3,w,c
 12336  002782  0A80               	xorlw	128
 12337  002784  6E1F               	movwf	??i2___fladd& (0+255),c
 12338  002786  501E               	movf	i2___fladd@a+3,w,c
 12339  002788  0A80               	xorlw	128
 12340  00278A  581F               	subwfb	??i2___fladd& (0+255),w,c
 12341  00278C  B0D8               	btfsc	status,0,c
 12342  00278E  D025               	goto	i2l5481
 12343  002790  5017               	movf	i2___fladd@b,w,c
 12344  002792  5C1B               	subwf	i2___fladd@a,w,c
 12345  002794  6E1F               	movwf	??i2___fladd& (0+255),c
 12346  002796  5018               	movf	i2___fladd@b+1,w,c
 12347  002798  581C               	subwfb	i2___fladd@a+1,w,c
 12348  00279A  6E20               	movwf	(??i2___fladd+1)& (0+255),c
 12349  00279C  5019               	movf	i2___fladd@b+2,w,c
 12350  00279E  581D               	subwfb	i2___fladd@a+2,w,c
 12351  0027A0  6E21               	movwf	(??i2___fladd+2)& (0+255),c
 12352  0027A2  501A               	movf	i2___fladd@b+3,w,c
 12353  0027A4  581E               	subwfb	i2___fladd@a+3,w,c
 12354  0027A6  6E22               	movwf	(??i2___fladd+3)& (0+255),c
 12355  0027A8  0EFF               	movlw	255
 12356  0027AA  241F               	addwf	??i2___fladd,w,c
 12357  0027AC  6E17               	movwf	i2___fladd@b,c
 12358  0027AE  0EFF               	movlw	255
 12359  0027B0  2020               	addwfc	??i2___fladd+1,w,c
 12360  0027B2  6E18               	movwf	i2___fladd@b+1,c
 12361  0027B4  0EFF               	movlw	255
 12362  0027B6  2021               	addwfc	??i2___fladd+2,w,c
 12363  0027B8  6E19               	movwf	i2___fladd@b+2,c
 12364  0027BA  0EFF               	movlw	255
 12365  0027BC  2022               	addwfc	??i2___fladd+3,w,c
 12366  0027BE  6E1A               	movwf	i2___fladd@b+3,c
 12367  0027C0  0E80               	movlw	128
 12368  0027C2  1A23               	xorwf	i2___fladd@signs,f,c
 12369  0027C4  6C26               	negf	i2___fladd@grs,c
 12370  0027C6  5026               	movf	i2___fladd@grs,w,c
 12371  0027C8  A4D8               	btfss	status,2,c
 12372  0027CA  D00F               	goto	i2l1068
 12373  0027CC  0E01               	movlw	1
 12374  0027CE  2617               	addwf	i2___fladd@b,f,c
 12375  0027D0  0E00               	movlw	0
 12376  0027D2  2218               	addwfc	i2___fladd@b+1,f,c
 12377  0027D4  2219               	addwfc	i2___fladd@b+2,f,c
 12378  0027D6  221A               	addwfc	i2___fladd@b+3,f,c
 12379  0027D8  D008               	goto	i2l1068
 12380  0027DA                     i2l5481:
 12381  0027DA  501B               	movf	i2___fladd@a,w,c
 12382  0027DC  5E17               	subwf	i2___fladd@b,f,c
 12383  0027DE  501C               	movf	i2___fladd@a+1,w,c
 12384  0027E0  5A18               	subwfb	i2___fladd@b+1,f,c
 12385  0027E2  501D               	movf	i2___fladd@a+2,w,c
 12386  0027E4  5A19               	subwfb	i2___fladd@b+2,f,c
 12387  0027E6  501E               	movf	i2___fladd@a+3,w,c
 12388  0027E8  5A1A               	subwfb	i2___fladd@b+3,f,c
 12389  0027EA                     i2l1068:
 12390  0027EA  5017               	movf	i2___fladd@b,w,c
 12391  0027EC  1018               	iorwf	i2___fladd@b+1,w,c
 12392  0027EE  1019               	iorwf	i2___fladd@b+2,w,c
 12393  0027F0  101A               	iorwf	i2___fladd@b+3,w,c
 12394  0027F2  A4D8               	btfss	status,2,c
 12395  0027F4  D01C               	goto	i2l5505
 12396  0027F6  5026               	movf	i2___fladd@grs,w,c
 12397  0027F8  A4D8               	btfss	status,2,c
 12398  0027FA  D019               	goto	i2l5505
 12399  0027FC  0E00               	movlw	0
 12400  0027FE  6E17               	movwf	?i2___fladd,c
 12401  002800  0E00               	movlw	0
 12402  002802  6E18               	movwf	?i2___fladd+1,c
 12403  002804  0E00               	movlw	0
 12404  002806  6E19               	movwf	?i2___fladd+2,c
 12405  002808  0E00               	movlw	0
 12406  00280A  6E1A               	movwf	?i2___fladd+3,c
 12407  00280C  0012               	return	
 12408  00280E                     i2l5489:
 12409  00280E  90D8               	bcf	status,0,c
 12410  002810  3617               	rlcf	i2___fladd@b,f,c
 12411  002812  3618               	rlcf	i2___fladd@b+1,f,c
 12412  002814  3619               	rlcf	i2___fladd@b+2,f,c
 12413  002816  361A               	rlcf	i2___fladd@b+3,f,c
 12414  002818  BE26               	btfsc	i2___fladd@grs,7,c
 12415  00281A  8017               	bsf	i2___fladd@b,0,c
 12416  00281C  A026               	btfss	i2___fladd@grs,0,c
 12417  00281E  D002               	goto	i2l5499
 12418  002820  80D8               	bsf	status,0,c
 12419  002822  D001               	goto	L24
 12420  002824                     i2l5499:
 12421  002824  90D8               	bcf	status,0,c
 12422  002826                     L24:
 12423  002826  3626               	rlcf	i2___fladd@grs,f,c
 12424  002828  5025               	movf	i2___fladd@bexp,w,c
 12425  00282A  A4D8               	btfss	status,2,c
 12426  00282C  0625               	decf	i2___fladd@bexp,f,c
 12427  00282E                     i2l5505:
 12428  00282E  AE19               	btfss	i2___fladd@b+2,7,c
 12429  002830  D7EE               	goto	i2l5489
 12430  002832                     i2u653_40:
 12431  002832  0E00               	movlw	0
 12432  002834  6E24               	movwf	i2___fladd@aexp,c
 12433  002836  AE26               	btfss	i2___fladd@grs,7,c
 12434  002838  D00B               	goto	i2l1077
 12435  00283A  C026  F01F         	movff	i2___fladd@grs,??i2___fladd
 12436  00283E  0E7F               	movlw	127
 12437  002840  161F               	andwf	??i2___fladd,f,c
 12438  002842  B4D8               	btfsc	status,2,c
 12439  002844  D003               	goto	i2l1078
 12440  002846                     i2u655_40:
 12441  002846  0E01               	movlw	1
 12442  002848  6E24               	movwf	i2___fladd@aexp,c
 12443  00284A  D002               	goto	i2l1077
 12444  00284C                     i2l1078:
 12445  00284C  B017               	btfsc	i2___fladd@b,0,c
 12446  00284E  D7FB               	goto	i2u655_40
 12447  002850                     i2l1077:
 12448  002850  5024               	movf	i2___fladd@aexp,w,c
 12449  002852  B4D8               	btfsc	status,2,c
 12450  002854  D020               	goto	i2l5525
 12451  002856  0E01               	movlw	1
 12452  002858  2617               	addwf	i2___fladd@b,f,c
 12453  00285A  0E00               	movlw	0
 12454  00285C  2218               	addwfc	i2___fladd@b+1,f,c
 12455  00285E  2219               	addwfc	i2___fladd@b+2,f,c
 12456  002860  221A               	addwfc	i2___fladd@b+3,f,c
 12457  002862  A01A               	btfss	i2___fladd@b+3,0,c
 12458  002864  D018               	goto	i2l5525
 12459  002866  C017  F01F         	movff	i2___fladd@b,??i2___fladd
 12460  00286A  C018  F020         	movff	i2___fladd@b+1,??i2___fladd+1
 12461  00286E  C019  F021         	movff	i2___fladd@b+2,??i2___fladd+2
 12462  002872  C01A  F022         	movff	i2___fladd@b+3,??i2___fladd+3
 12463  002876  3422               	rlcf	??i2___fladd+3,w,c
 12464  002878  3222               	rrcf	??i2___fladd+3,f,c
 12465  00287A  3221               	rrcf	??i2___fladd+2,f,c
 12466  00287C  3220               	rrcf	??i2___fladd+1,f,c
 12467  00287E  321F               	rrcf	??i2___fladd,f,c
 12468  002880  C01F  F017         	movff	??i2___fladd,i2___fladd@b
 12469  002884  C020  F018         	movff	??i2___fladd+1,i2___fladd@b+1
 12470  002888  C021  F019         	movff	??i2___fladd+2,i2___fladd@b+2
 12471  00288C  C022  F01A         	movff	??i2___fladd+3,i2___fladd@b+3
 12472  002890  2825               	incf	i2___fladd@bexp,w,c
 12473  002892  A4D8               	btfss	status,2,c
 12474  002894  2A25               	incf	i2___fladd@bexp,f,c
 12475  002896                     i2l5525:
 12476  002896  2825               	incf	i2___fladd@bexp,w,c
 12477  002898  B4D8               	btfsc	status,2,c
 12478  00289A  D003               	goto	i2u661_40
 12479  00289C  5025               	movf	i2___fladd@bexp,w,c
 12480  00289E  A4D8               	btfss	status,2,c
 12481  0028A0  D00D               	goto	i2l5533
 12482  0028A2                     i2u661_40:
 12483  0028A2  0E00               	movlw	0
 12484  0028A4  6E17               	movwf	i2___fladd@b,c
 12485  0028A6  0E00               	movlw	0
 12486  0028A8  6E18               	movwf	i2___fladd@b+1,c
 12487  0028AA  0E00               	movlw	0
 12488  0028AC  6E19               	movwf	i2___fladd@b+2,c
 12489  0028AE  0E00               	movlw	0
 12490  0028B0  6E1A               	movwf	i2___fladd@b+3,c
 12491  0028B2  5025               	movf	i2___fladd@bexp,w,c
 12492  0028B4  A4D8               	btfss	status,2,c
 12493  0028B6  D002               	goto	i2l5533
 12494  0028B8  0E00               	movlw	0
 12495  0028BA  6E23               	movwf	i2___fladd@signs,c
 12496  0028BC                     i2l5533:
 12497  0028BC  A025               	btfss	i2___fladd@bexp,0,c
 12498  0028BE  D002               	goto	i2l5537
 12499  0028C0  8E19               	bsf	i2___fladd@b+2,7,c
 12500  0028C2  D001               	goto	i2l5539
 12501  0028C4                     i2l5537:
 12502  0028C4  9E19               	bcf	i2___fladd@b+2,7,c
 12503  0028C6                     i2l5539:
 12504  0028C6  90D8               	bcf	status,0,c
 12505  0028C8  3025               	rrcf	i2___fladd@bexp,w,c
 12506  0028CA  6E1A               	movwf	i2___fladd@b+3,c
 12507  0028CC  BE23               	btfsc	i2___fladd@signs,7,c
 12508  0028CE  8E1A               	bsf	i2___fladd@b+3,7,c
 12509  0028D0  C017  F017         	movff	i2___fladd@b,?i2___fladd
 12510  0028D4  C018  F018         	movff	i2___fladd@b+1,?i2___fladd+1
 12511  0028D8  C019  F019         	movff	i2___fladd@b+2,?i2___fladd+2
 12512  0028DC  C01A  F01A         	movff	i2___fladd@b+3,?i2___fladd+3
 12513  0028E0  0012               	return		;funcret
 12514  0028E2                     __end_ofi2___fladd:
 12515                           	opt callstack 0
 12516                           
 12517 ;; *************** function i2___awdiv *****************
 12518 ;; Defined at:
 12519 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12520 ;; Parameters:    Size  Location     Type
 12521 ;;  dividend        2    0[COMRAM] int 
 12522 ;;  divisor         2    2[COMRAM] int 
 12523 ;; Auto vars:     Size  Location     Type
 12524 ;;  __awdiv         2    6[COMRAM] int 
 12525 ;;  __awdiv         1    5[COMRAM] unsigned char 
 12526 ;;  __awdiv         1    4[COMRAM] unsigned char 
 12527 ;; Return value:  Size  Location     Type
 12528 ;;                  2    0[COMRAM] int 
 12529 ;; Registers used:
 12530 ;;		wreg, status,2, status,0
 12531 ;; Tracked objects:
 12532 ;;		On entry : 0/0
 12533 ;;		On exit  : 0/0
 12534 ;;		Unchanged: 0/0
 12535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12537 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12539 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12540 ;;Total ram usage:        8 bytes
 12541 ;; Hardware stack levels used:    1
 12542 ;; This function calls:
 12543 ;;		Nothing
 12544 ;; This function is called by:
 12545 ;;		_rutina
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           	psect	text60
 12550  003D24                     __ptext60:
 12551                           	opt callstack 0
 12552  003D24                     i2___awdiv:
 12553                           	opt callstack 20
 12554                           
 12555                           ;incstack = 0
 12556  003D24  0E00               	movlw	0
 12557  003D26  6E06               	movwf	i2___awdiv@sign,c
 12558  003D28  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12559  003D2A  D006               	goto	i2l5311
 12560  003D2C  6C03               	negf	i2___awdiv@divisor,c
 12561  003D2E  1E04               	comf	i2___awdiv@divisor+1,f,c
 12562  003D30  B0D8               	btfsc	status,0,c
 12563  003D32  2A04               	incf	i2___awdiv@divisor+1,f,c
 12564  003D34  0E01               	movlw	1
 12565  003D36  6E06               	movwf	i2___awdiv@sign,c
 12566  003D38                     i2l5311:
 12567  003D38  AE02               	btfss	i2___awdiv@dividend+1,7,c
 12568  003D3A  D006               	goto	i2l5317
 12569  003D3C  6C01               	negf	i2___awdiv@dividend,c
 12570  003D3E  1E02               	comf	i2___awdiv@dividend+1,f,c
 12571  003D40  B0D8               	btfsc	status,0,c
 12572  003D42  2A02               	incf	i2___awdiv@dividend+1,f,c
 12573  003D44  0E01               	movlw	1
 12574  003D46  1A06               	xorwf	i2___awdiv@sign,f,c
 12575  003D48                     i2l5317:
 12576  003D48  0E00               	movlw	0
 12577  003D4A  6E08               	movwf	i2___awdiv@quotient+1,c
 12578  003D4C  0E00               	movlw	0
 12579  003D4E  6E07               	movwf	i2___awdiv@quotient,c
 12580  003D50  5003               	movf	i2___awdiv@divisor,w,c
 12581  003D52  1004               	iorwf	i2___awdiv@divisor+1,w,c
 12582  003D54  B4D8               	btfsc	status,2,c
 12583  003D56  D01C               	goto	i2l5339
 12584  003D58  0E01               	movlw	1
 12585  003D5A  6E05               	movwf	i2___awdiv@counter,c
 12586  003D5C  D004               	goto	i2l5325
 12587  003D5E                     i2l5323:
 12588  003D5E  90D8               	bcf	status,0,c
 12589  003D60  3603               	rlcf	i2___awdiv@divisor,f,c
 12590  003D62  3604               	rlcf	i2___awdiv@divisor+1,f,c
 12591  003D64  2A05               	incf	i2___awdiv@counter,f,c
 12592  003D66                     i2l5325:
 12593  003D66  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12594  003D68  D7FA               	goto	i2l5323
 12595  003D6A                     i2u623_40:
 12596  003D6A  90D8               	bcf	status,0,c
 12597  003D6C  3607               	rlcf	i2___awdiv@quotient,f,c
 12598  003D6E  3608               	rlcf	i2___awdiv@quotient+1,f,c
 12599  003D70  5003               	movf	i2___awdiv@divisor,w,c
 12600  003D72  5C01               	subwf	i2___awdiv@dividend,w,c
 12601  003D74  5004               	movf	i2___awdiv@divisor+1,w,c
 12602  003D76  5802               	subwfb	i2___awdiv@dividend+1,w,c
 12603  003D78  A0D8               	btfss	status,0,c
 12604  003D7A  D005               	goto	i2l5335
 12605  003D7C  5003               	movf	i2___awdiv@divisor,w,c
 12606  003D7E  5E01               	subwf	i2___awdiv@dividend,f,c
 12607  003D80  5004               	movf	i2___awdiv@divisor+1,w,c
 12608  003D82  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 12609  003D84  8007               	bsf	i2___awdiv@quotient,0,c
 12610  003D86                     i2l5335:
 12611  003D86  90D8               	bcf	status,0,c
 12612  003D88  3204               	rrcf	i2___awdiv@divisor+1,f,c
 12613  003D8A  3203               	rrcf	i2___awdiv@divisor,f,c
 12614  003D8C  2E05               	decfsz	i2___awdiv@counter,f,c
 12615  003D8E  D7ED               	goto	i2u623_40
 12616  003D90                     i2l5339:
 12617  003D90  5006               	movf	i2___awdiv@sign,w,c
 12618  003D92  B4D8               	btfsc	status,2,c
 12619  003D94  D004               	goto	i2l5343
 12620  003D96  6C07               	negf	i2___awdiv@quotient,c
 12621  003D98  1E08               	comf	i2___awdiv@quotient+1,f,c
 12622  003D9A  B0D8               	btfsc	status,0,c
 12623  003D9C  2A08               	incf	i2___awdiv@quotient+1,f,c
 12624  003D9E                     i2l5343:
 12625  003D9E  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 12626  003DA2  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 12627  003DA6  0012               	return		;funcret
 12628  003DA8                     __end_ofi2___awdiv:
 12629                           	opt callstack 0
 12630                           
 12631                           	psect	rparam
 12632  0000                     
 12633                           	psect	temp
 12634  00004E                     btemp:
 12635                           	opt callstack 0
 12636  00004E                     	ds	1
 12637  0000                     int$flags	set	btemp
 12638  0000                     wtemp8	set	btemp+1
 12639  0000                     ttemp5	set	btemp+1
 12640  0000                     ttemp6	set	btemp+4
 12641  0000                     ttemp7	set	btemp+8
 12642                           tosu	equ	0xFFF
 12643                           tosh	equ	0xFFE
 12644                           tosl	equ	0xFFD
 12645                           stkptr	equ	0xFFC
 12646                           pclatu	equ	0xFFB
 12647                           pclath	equ	0xFFA
 12648                           pcl	equ	0xFF9
 12649                           tblptru	equ	0xFF8
 12650                           tblptrh	equ	0xFF7
 12651                           tblptrl	equ	0xFF6
 12652                           tablat	equ	0xFF5
 12653                           prodh	equ	0xFF4
 12654                           prodl	equ	0xFF3
 12655                           indf0	equ	0xFEF
 12656                           postinc0	equ	0xFEE
 12657                           postdec0	equ	0xFED
 12658                           preinc0	equ	0xFEC
 12659                           plusw0	equ	0xFEB
 12660                           fsr0h	equ	0xFEA
 12661                           fsr0l	equ	0xFE9
 12662                           wreg	equ	0xFE8
 12663                           indf1	equ	0xFE7
 12664                           postinc1	equ	0xFE6
 12665                           postdec1	equ	0xFE5
 12666                           preinc1	equ	0xFE4
 12667                           plusw1	equ	0xFE3
 12668                           fsr1h	equ	0xFE2
 12669                           fsr1l	equ	0xFE1
 12670                           bsr	equ	0xFE0
 12671                           indf2	equ	0xFDF
 12672                           postinc2	equ	0xFDE
 12673                           postdec2	equ	0xFDD
 12674                           preinc2	equ	0xFDC
 12675                           plusw2	equ	0xFDB
 12676                           fsr2h	equ	0xFDA
 12677                           fsr2l	equ	0xFD9
 12678                           status	equ	0xFD8


Data Sizes:
    Strings     133
    Constant    0
    Data        14
    BSS         153
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      77
    BANK0           160    159     159
    BANK1           256     77     208
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[28]), STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1895_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[28]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[28]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[28]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    terminal@comand	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK1[10]), 

    length@text	PTR unsigned char  size(2) Largest target is 27
		 -> STR_6(CODE[8]), STR_4(CODE[21]), STR_3(CODE[20]), terminal@texto(BANK1[20]), 
		 -> STR_2(CODE[27]), main@texto(BANK1[8]), main@text(BANK1[6]), 

    enviarRS232@valores	PTR unsigned char  size(2) Largest target is 27
		 -> STR_6(CODE[8]), STR_4(CODE[21]), STR_3(CODE[20]), terminal@texto(BANK1[20]), 
		 -> STR_2(CODE[27]), main@texto(BANK1[8]), main@text(BANK1[6]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _rutina in COMRAM

    _rutina->i2___fladd
    i2___xxtofl->i2___awdiv
    i2___fladd->i2___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _terminal->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _fijarVelocidad->___fladd
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fladd->___flmul
    _enviarRS232->_length
    _encenderMotor->_definirVelocidad
    _encenderMotor->_rutinaArranque
    _cambiarPWM->_definirVelocidad

Critical Paths under _rutina in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal
    _terminal->_sprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rutina in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rutina in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rutina in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rutina in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rutina in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rutina in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rutina in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _rutina in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  113595
                                             63 BANK1     14    14      0
                           _PWMServo
               _configuracionInicial
                        _enviarRS232
                        _frenarMotor
                            _sprintf
                           _terminal
 ---------------------------------------------------------------------------------
 (1) _terminal                                            31    29      2   61611
                                             32 BANK1     31    29      2
                           _adelante
                              _atras
                         _cambiarPWM
                         _dirreccion
                      _encenderMotor
                        _enviarRS232
                   _estadoDirreccion
                     _fijarVelocidad
                        _frenarMotor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   50798
                                            149 BANK0     10    10      0
                                             24 BANK1      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   50096
                                            141 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           50    44      6   49494
                                            131 BANK0     10     4      6
                                              0 BANK1     24    24      0
                               _atoi
                               _ctoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    5909
                                             27 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   30837
                                             63 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4297
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             39 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     845
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4776
                                             27 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4497
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1795
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _frenarMotor                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _fijarVelocidad                                       9     9      0    8887
                                             55 BANK0      9     9      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     676
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                             39 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3773
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3732
                                             39 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _estadoDirreccion                                     7     5      2     145
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _enviarRS232                                          7     5      2    1057
                                              8 BANK0      7     5      2
                             _length
 ---------------------------------------------------------------------------------
 (3) _length                                               8     6      2     263
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _encenderMotor                                        0     0      0       0
                   _definirVelocidad
                     _rutinaArranque
 ---------------------------------------------------------------------------------
 (3) _rutinaArranque                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _dirreccion                                           5     3      2     288
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _cambiarPWM                                           0     0      0       0
                   _definirVelocidad
 ---------------------------------------------------------------------------------
 (3) _definirVelocidad                                     2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atras                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adelante                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configuracionInicial                                 0     0      0       0
           _configurarInterrupciones
                     _configurarPWM7
                  _configurarPuertos
                    _configurarRS232
               _configurarRS232US100
                     _configurarTMR4
                     _configurarTMR5
 ---------------------------------------------------------------------------------
 (2) _configurarTMR5                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarTMR4                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarRS232US100                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarRS232                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPuertos                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPWM7                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarInterrupciones                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWMServo                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rutina                                              3     3      0    2859
                                             38 COMRAM     3     3      0
                          i2___awdiv
                          i2___fladd
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (11) i2___xxtofl                                         14    10      4     374
                                              8 COMRAM    14    10      4
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___fladd                                          16     8      8    2036
                                             22 COMRAM    16     8      8
                          i2___awdiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMServo
   _configuracionInicial
     _configurarInterrupciones
     _configurarPWM7
     _configurarPuertos
     _configurarRS232
     _configurarRS232US100
     _configurarTMR4
     _configurarTMR5
   _enviarRS232
     _length
   _frenarMotor
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
   _terminal
     _adelante
     _atras
     _cambiarPWM
       _definirVelocidad
     _dirreccion
     _encenderMotor
       _definirVelocidad
       _rutinaArranque
     _enviarRS232
       _length
     _estadoDirreccion
     _fijarVelocidad
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _frenarMotor
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen

 _rutina (ROOT)
   i2___awdiv
   i2___fladd
     i2___awdiv (ARG)
     i2___xxtofl (ARG)
       i2___awdiv (ARG)
   i2___xxtofl
     i2___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     4D      D0       8       81.3%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      4D       1       81.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BC       6        0.0%
DATA                 0      0     1BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jun 28 18:34:08 2019

                     ___fldiv@aexp 0078                       ___fldiv@bexp 0077  
                     ___fldiv@sign 0070                       ___awdiv@sign 0065  
              ___wmul@multiplicand 0062                       __CFG_CP0$OFF 000000  
                    terminal@texto 01A4                                l421 15A8  
                              l281 3C6A                                l290 417E  
                              l347 3B1E                                l269 3E20  
                              l455 2D44                                l457 2D4C  
                              l395 12CA                                l961 367E  
                              l971 397A                                l788 3594  
                              _PR2 000FCB                        i2___fladd@a 001B  
                      i2___fladd@b 0017                    ?_configurarTMR4 0001  
                  ?_configurarTMR5 0001                    ?_configurarPWM7 0001  
                              _pad 3AEE                     terminal@degree 01BA  
                     ___awmod@sign 0065                         i2___xxtofl 32D4  
                   terminal@comand 019D                   ??_fijarVelocidad 0097  
                              wreg 000FE8                       __CFG_IESO$ON 000000  
                     ___flmul@aexp 007B                       ___flmul@bexp 0080  
                     ___flmul@sign 007A                       ___flmul@temp 0085  
                     ___flmul@prod 0081           __end_of_estadoDirreccion 3E2A  
                     ___fltol@exp1 0090                    ??_encenderMotor 0062  
                             l1107 2A56                               l1052 240C  
                             l1053 23EA                               l1118 2AC4  
                             l1119 2AC0                               l1137 1FF6  
                             l1233 3186                               l1154 2294  
                             l1146 220E                               l1147 220A  
                             l1068 24DE                               l1077 2544  
                             l1245 2C86                               l1325 41E6  
                             l1078 2540                               l1185 3250  
                             l1178 31D2                               l6001 2430  
                             l6011 2456                               l6101 3B06  
                             l6111 3B42                               l6009 2452  
                             l6105 3B16                               l6019 2468  
                             l6115 3B6E                               l6107 3B28  
                             l6131 3724                               l7011 2D86  
                             l6037 2502                               l6053 2522  
                             l6029 24CE                               l6205 2910  
                             l7021 2E74                               ?_pad 0070  
                             l6047 2518                               l6311 2B2C  
                             l6127 371A                               l6143 40BA  
                             l7111 1968                               l6081 25B0  
                             l6073 258A                               l6321 2B62  
                             l6225 2950                               l6209 2914  
                             l6137 3764                               l6161 2BE6  
                             l7201 1D30                               l6323 2B64  
                             l6315 2B56                               l6307 2B08  
                             l6251 29B6                               l6243 299E  
                             l6171 2CA8                               l7131 1984  
                             l7123 1974                               l7115 196C  
                             l7107 1956                               l6085 25B8  
                             l6413 21B6                               l7053 30AE  
                             l7037 304C                               l6261 2A06  
                             l6237 2988                               l6229 2954  
                             l7221 1E36                               l7205 1D5A  
                             l7109 1958                               l7133 19CC  
                             l6087 25BA                               l6343 1FA2  
                             l7303 3200                               l7063 3122  
                             l7055 30B6                               l7047 309E  
                             l7039 3050                               l6503 3D0C  
                             l6175 2CE6                               l7127 1978  
                             l7119 1970                               l6361 1FE2  
                             l6345 1FA6                               l7305 3206  
                             l7057 30BC                               l6281 2A6C  
                             l7145 1A3E                               l6443 2270  
                             l6419 21D4                               l6371 2014  
                             l6363 1FE6                               l6347 1FB6  
                             l7315 3276                               l7307 3212  
                             l7059 30E8                               l6507 3D1A  
                             l6523 3F3E                               l6275 2A54  
                             l6179 2D14                               l7083 39C8  
                             l7235 1F16                               l7147 1A5C  
                             l7333 32C2                               l7317 3282  
                             l7309 3238                               l6269 2A2E  
                             l7085 39D6                               l7229 1ED6  
                             l7165 1B42                               l7149 1A6A  
                             l7245 1F3A                               l5911 22FA  
                             l6455 22B2                               l6439 2252  
                             l6615 389A                               l6543 3F84  
                             l6535 3F6C                               l6527 3F4C  
                             l6519 3F32                               l6287 2A8A  
                             l6551 3BC0                               l6711 0FD2  
                             l7239 1F22                               l7167 1B60  
               __CFG_WPFP$PAGE_127 000000                               l7281 3E96  
                             l7425 3F08                               l6633 38DA  
                             l6625 38B2                               l6481 3CC4  
                             l6529 3F54                               l7193 1CD0  
                             l7185 1C66                               l7169 1B6E  
                             l7513 2EEE                               l7275 3E5E  
                             l7419 3EC2                               l7451 3DD0  
                             l5931 233E                               l5907 22F6  
                             l6627 38BE                               l6619 38AA  
                             l6475 3CB4                               l6539 3F76  
                             l6555 3BF4                               l6571 3568  
                             l6723 1000                               l6731 1016  
                             l6643 35F8                               l7531 2F5C  
                             l7603 3814                               l7461 3DF4  
                             l7445 3DB8                               l6581 35CC  
                             l6813 1322                               l6805 12DA  
                             l6741 1082                               l6645 360C  
                             l7525 2F1E                               l5943 2362  
                             l5935 2342                               l6487 3CDA  
                             l6559 3C12                               l6575 357E  
                             l6567 3534                               l6831 1368  
                             l6815 1326                               l6743 109A  
                             l6655 3668                               l6671 3964  
                             l6663 3908                               l7287 4004  
                             l7527 2F3A                               l7519 2F06  
                             l7543 2FF8                               l7473 3C2E  
                             l7457 3DE2                               l7449 3DCA  
                             l7465 3DFE                               l7297 31E2  
                             l5865 3A66                               l6489 3CE2  
                             l6905 1694                               l6913 16B8  
                             l6921 1752                               l6841 13A2  
                             l6825 1344                               l6745 10A4  
                             l6665 391C                               l7289 4032  
                             l7529 2F56                               l7563 4188  
                             l7491 3C8A                               l7475 3C32  
                             l7483 3C40                               l6683 4270  
                             l5875 4284                               l5883 438C  
                             l6691 4112                               l6499 3D02  
                             l6835 1378                               l7477 3C36  
                             l5973 239E                               l5885 4392  
                             l6693 4120                               l6589 4370  
                             l6933 1794                               l6773 1196  
                             l6749 10CC                               l7487 3C78  
                             l7479 3C3A                               l6599 3850  
                             l5879 429C                               l6951 17EA  
                             l6871 15A0                               l6863 1548  
                             l6783 125C                               l6759 1138  
                             l6767 1152                               l7583 37B6  
                             l5985 23F8                               l6961 1842  
                             l6873 15C2                               l6849 149A  
                             l6777 11D0                               l7577 379E  
                             l5987 23FC                               l6971 186E  
                             l6795 12B2                               l6779 1220  
                             l7595 37D6                               l6949 17E0  
                             l6885 1644                               l7589 37C6  
                             l6799 12D4                               l6897 1674  
                             l6987 18CE                               STR_1 0F61  
                             STR_2 0F1D                               STR_3 0F4D  
                             STR_4 0F38                               STR_5 0F01  
                   _contador_datos 0042                               STR_6 0F6B  
                             STR_7 0F73                               STR_8 0F7B  
                             u7000 431A                               u7100 23C0  
                             u7110 23D0                               u7120 23D2  
                             u7300 253A                               u7150 2414  
                             u8030 2204                               u8130 3CE6  
                             u9010 2D38                               u9100 3156  
                             u7500 375E                               u8070 2260  
                             u8310 383E                               u9110 3158  
                             u7510 40F6                               u7360 2596  
                             u7280 2526                               u8080 227E  
                             u8320 386E                               u8240 3C0E  
                             u7440 36E0                               u8400 3610  
                             u9040 2EA0                               u9041 2E9E  
                             u7610 2C66                               u7530 41CC  
                             u9050 2EAE                               u7540 41CE  
                             u8500 0FF0                               u9060 2EB2  
                             u9300 1BAE                               u8325 3864  
                             u7445 36D4                               u7517 40EC  
                             u8190 3F58                               u7630 2CC6  
                             u8430 3920                               u9310 1BBC  
                             u7615 2C5C                               u8360 38C4  
                             u9080 309A                               u7560 2BB4  
                             u9240 1AA8                               u7490 375C  
                             u7570 2BD4                               u8530 105A  
                             u9250 1AAA                               u7635 2CBC  
                             u9420 3E4C                               u7660 434A  
                             u8460 426C                               u6940 3A5E  
                             u8620 1286                               u8540 105C  
                             u9180 3A24                               u9260 1AB8  
                             u7485 373E                               u7565 2BAA  
                             u8381 35D6                               u9430 3E8C  
                             u7670 434C                               u9520 328C  
                             u6960 3AA6                               u7840 2ABA  
                             u8720 1340                               u8650 12C0  
                             u8570 1110                               u9370 1DE8  
                             u9290 1BAC                               u9427 3E42  
                             u7595 2BFE                               u7596 2C04  
                             u8580 1112                               u9380 1DEA  
                             u9437 3E82                               u7597 2C12  
                             u6990 4318                               u9631 2EE2  
                             u9560 3EF0                               u7880 2B16  
                             u8680 12F2                               u7890 2B3A  
                             u7980 2002                               u9661 3778  
                             u7990 2178                               u8950 1858  
                             u8790 1538                               u9567 3EE6  
                             u9671 3786                               u9737 3EFA  
                             u8970 18B8                               u8890 1776  
                             u9747 43CC                               u7995 216E  
                             u8980 18BA                       ?_frenarMotor 0001  
                             _TMR2 000FCC                               _TMR4 000F78  
                 ?_configurarRS232 0001                       ?_enviarRS232 0068  
                    __CFG_FCMEN$ON 000000                               _dbuf 0123  
                             _atoi 3038                               _ctoa 4100  
                             _main 376E                               _prec 0038  
                             _nout 011C                               pad@i 0077  
                             pad@p 0074                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf1 000FE7  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 0079                               fsr2l 000FD9  
                             btemp 004E                               _utoa 2D26  
                    ___fpclassifyf 36A0                               prodh 000FF4  
                             prodl 000FF3                               start 016C  
                  ___fldiv@new_exp 0071                       _tolower$1967 006C  
                     ___param_bank 000000                              ??_pad 0076  
                    __CFG_PLLDIV$3 000000                       _BAUDCON1bits 000F7E  
                     _BAUDCON2bits 000F7C                      ___fltol@sign1 008F  
                            ?_atoi 0067                              ?_ctoa 007B  
                  __end_of___fladd 25D6                              ?_main 0001  
                  __end_of___fldiv 2B6C                    __end_of___awdiv 3D24  
                  __end_of___flneg 4382                              STR_11 0F77  
                            STR_12 0F7F                              STR_15 0F83  
                            STR_17 0F83                    __end_of___awmod 3F8E  
                  __end_of___flmul 22C8                    __end_of___flsub 4238  
                  __end_of___fltol 38EC                              ?_utoa 007B  
                  __end_of___lodiv 36A0                    ___awdiv@divisor 0062  
                            _T2CON 000FCA                    __end_of___lomod 399C  
                            _T5CON 000F22                              i2l211 0072  
                            i2l220 0144                              i2l214 0080  
                            i2l207 0042                              i2l216 0132  
                            i2l224 0160                    ___awdiv@counter 0064  
                     vfpfcnvrt@fmt 00E5                       vfpfcnvrt@llu 017D  
                            _TMR5H 000F24                              _TMR5L 000F23  
                    i2___fladd@grs 0026                              _datos 0173  
                            _flags 003A                              _atras 44FA  
                            _fputc 3A4C                              _parar 003E  
                            _fputs 4278                    __end_of_isdigit 4352  
                   __CFG_CLKOEC$ON 000000                              _motor 0045  
                            atoi@n 0074                              pad@fp 0070  
                            atoi@s 0067                              _width 0036  
                            ctoa@c 007D                              _putch 451C  
                            ctoa@w 007E                    __end_of_isspace 4278  
                  __end_of_isupper 4320                              tablat 000FF5  
                 __end_of_PWMServo 41A2                              plusw1 000FE3  
                            plusw2 000FDB                              ttemp5 004F  
                            ttemp6 0052                              ttemp7 0056  
                            utoa@d 007D                              utoa@i 0099  
                            utoa@n 0091                              utoa@p 008D  
                            utoa@w 008F                              status 000FD8  
                            wtemp8 004F                    __end_of_sprintf 40AA  
                   ?___fpclassifyf 0060                    __end_of_tolower 41F0  
                 _servo_dirreccion 0043                    __end_of_strncmp 3A4C  
                 ___lodiv@dividend 0060                   terminal@medicion 01B8  
        enviarRS232@longitud_texto 006C                 __size_ofi2___fladd 030C  
               __size_ofi2___awdiv 0084            __CFG_DSWDTOSC$INTOSCREF 000000  
                  __initialization 3F8E                       __end_of_atoi 3190  
                     __end_of_ctoa 4152                       __end_of_main 3830  
                ?_definirVelocidad 0001                       __end_of_utoa 2EDC  
               ??_definirVelocidad 0060                     __CFG_OSC$HSPLL 000000  
                           ??_atoi 0069                             ??_ctoa 007E  
                           ??_main 00FF                             ??_utoa 0085  
                    __activetblptr 000003                   dirreccion@degree 0060  
                      ?i2___xxtofl 0009                   ___lodiv@quotient 0070  
                           ?_atras 0001                             ?_fputc 0060  
                           ?_fputs 0069                             _CCPR7L 000F0A  
                           _ANCON0 000F48                             _ANCON1 000F49  
                 ___awdiv@dividend 0060                             ?_putch 0001  
                           i2l1052 2718                             i2l1053 26F6  
                           i2l1068 27EA                             i2l1077 2850  
                           i2l1078 284C                             i2l1185 3390  
                           i2l1178 3312                     __CFG_WDTEN$OFF 000000  
                           i2l5311 3D38                             i2l5323 3D5E  
                           i2l5325 3D66                             i2l5317 3D48  
                           i2l5343 3D9E                             i2l5335 3D86  
                           i2l5505 282E                             i2l5425 26AA  
                           i2l5339 3D90                             i2l5363 2606  
                           i2l5603 002E                             i2l5533 28BC  
                           i2l5525 2896                             i2l5461 275E  
                           i2l5453 273C                             i2l5437 2704  
                           i2l5463 2762                             i2l5471 2774  
                           i2l5439 2708                             i2l5383 264A  
                           i2l5359 2602                             i2l5631 00F4  
                           i2l5537 28C4                             i2l5481 27DA  
                           i2l5561 3340                             i2l5539 28C6  
                           i2l5395 266E                             i2l5387 264E  
                           i2l5563 3346                             i2l5555 3322  
                           i2l5573 33B6                             i2l5565 3352  
                           i2l5591 3402                             i2l5575 33C2  
                           i2l5567 3378                             i2l5489 280E  
                           i2l5499 2824                             _RCREG1 000FAF  
                           _RCREG2 000FAA                   __end_of_adelante 450E  
                           _RCSTA1 000FAC                             _RCSTA2 000F9C  
                    vfpfcnvrt@done 0185                             _SPBRG1 000FB0  
                           _SPBRG2 000FAB                             _PPSCON 000EBF  
                           _RPINR1 000EE1                             _RPOR23 000ED7  
                   __CFG_WPCFG$OFF 000000                             _TXREG1 000FAE  
                           _TXREG2 000FA9                   __end_of___xxtofl 32D4  
                           _TXSTA1 000FAD                             _TXSTA2 000FA8  
                   __CFG_WPDIS$OFF 000000                   _contador_timer_5 003C  
                   i2___fladd@aexp 0024                     i2___fladd@bexp 0025  
                   __CFG_XINST$OFF 000000                       _CCPTMRS1bits 000F51  
                     vfprintf@cfmt 00F3                             ___flge 34FE  
                           ___fleq 3B8A                          ??___fladd 008F  
                           ___wmul 43DC                  _tiempo_anterior_1 0046  
                        ??___fldiv 0068                          ??___awdiv 0064  
                        ??___flneg 0064                     __CFG_STVREN$ON 000000  
                        ??___awmod 0064                          ??___flmul 0076  
                        ??___flsub 009F                          ??___fltol 008B  
    __size_of_configuracionInicial 001E                          ??___lodiv 0070  
                        ??___lomod 0070                             _efgtoa 0F88  
                           _floorf 2B6C                             _length 3E2A  
                           clear_0 3FD4                             clear_1 3FE0  
                 ___awdiv@quotient 0066                    ___awmod@divisor 0062  
                  ___awmod@counter 0064                             pad@buf 0072  
                           ctoa@fp 007B                             _rutina 0008  
                           _strcpy 40AA                             _strlen 4382  
                _configurarPuertos 44C2                     i2___awdiv@sign 0006  
                           fputc@c 0060                             fputs@c 006D  
                           fputs@i 006E                       __pdataCOMRAM 0046  
                           fputs@s 0069                  __end_ofi2___fladd 28E2  
                        ??_isdigit 0062                  __end_ofi2___awdiv 3DA8  
                  ___fpclassifyf@e 0068                    ___fpclassifyf@u 006A  
                  ___fpclassifyf@x 0060                 ?_configurarPuertos 0001  
                     __mediumconst 0000                          ??_isspace 0062  
                 __end_of_terminal 3038                             tblptrh 000FF7  
                        ??_isupper 0062                             tblptrl 000FF6  
                           tblptru 000FF8                             putch@c 0001  
                 __end_of_vfprintf 4052                             utoa@fp 007B  
                        ??_sprintf 00F5                          ??_tolower 0068  
                        ??_strncmp 0066                ??_configurarPuertos 0060  
                       ___flge@ff1 0087                         ___flge@ff2 008B  
                  ??___fpclassifyf 0064               __CFG_LS48MHZ$SYS48X8 000000  
                     ___xxtofl@arg 006A                       ___xxtofl@exp 0069  
                     ___xxtofl@val 0060                         ___fleq@ff1 0060  
                       ___fleq@ff2 0064       __end_of_configurarRS232US100 4426  
                       __accesstop 0060            __end_of__initialization 3FE6  
                       ___flneg@f1 0060               __size_of_frenarMotor 0010  
         _configurarInterrupciones 4446               __size_of_enviarRS232 0076  
                    ___rparam_used 000001                         ___fltol@f1 0087  
                     enviarRS232@i 006E                    __CFG_IOL1WAY$ON 000000  
             __CFG_WPEND$PAGE_WPFP 000000                __size_ofi2___xxtofl 0140  
                   __pcstackCOMRAM 0001                       __pidataBANK1 4516  
                    __end_of_atras 4504                   ??_configurarTMR4 0060  
                 ??_configurarTMR5 0060                   ??_configurarPWM7 0060  
                    __end_of_fputc 3AEE                      __end_of_fputs 42B4  
                    __end_of_putch 451E          __end_of_configurarPuertos 44D2  
                  __CFG_DSWDTPS$G2 000000                          ?_PWMServo 0001  
                       _cambiarPWM 44EE                            ??_atras 0060  
                          ??_fputc 0064                            ??_fputs 006D  
                          ??_putch 0060                  ?_estadoDirreccion 0060  
          __size_of_rutinaArranque 002C                         __pbssBANK1 0100  
               ??_estadoDirreccion 0062                            ?___flge 0087  
                          ?___fleq 0060                            ?___wmul 0060  
                          ?_efgtoa 009F                            ?_floorf 0079  
                          ?_length 0060                         ??_PWMServo 0060  
                          ?_rutina 0001                            ?_strcpy 0060  
                          ?_strlen 0060                          ?_adelante 0001  
                        ?___xxtofl 0060                 __size_of_vfpfcnvrt 0668  
                       _dirreccion 3C16                            _RPINR16 000EF7  
                    _bandera_fuego 0122                   fijarVelocidad@DC 0097  
                    _bandera_servo 0120                   ___lomod@dividend 0060  
            __end_of_encenderMotor 44E0                   __CFG_CFGPLLEN$ON 000000  
                  i2___fladd@signs 0023                            __Hparam 0000  
                          __Lparam 0000           __size_of_configurarRS232 0018  
                        ?_terminal 019D                    __size_of___flge 00D2  
                  __size_of___fleq 008C                            ___fladd 22C8  
                          ___fldiv 28E2                            ___awdiv 3C9E  
                          ___flneg 4352                            ___awmod 3F1C  
                          ___flmul 1F74                            ___flsub 41F0  
                          ___fltol 3830                    __size_of___wmul 0028  
                          ___lodiv 35D0                            ___lomod 38EC  
                        ?_vfprintf 00ED                       __psmallconst 0F00  
                  __size_of_efgtoa 0984                            _bandera 0121  
       __size_of_configurarPuertos 0010                    __size_of_floorf 01BA  
                          __pcinit 3F8E                    __size_of_length 007C  
                          __ramtop 0F00             estadoDirreccion@angulo 0064  
                          __ptext0 376E                            __ptext1 2EDC  
                          __ptext2 4052                            __ptext3 3FF0  
                          __ptext4 190C                            __ptext5 2D26  
                          __ptext6 38EC                            __ptext7 35D0  
                          __ptext8 399C                            __ptext9 0F88  
             _configurarRS232US100 4404                         ??_adelante 0060  
                  __size_of_rutina 0164                    __size_of_strcpy 0056  
                  __size_of_strlen 002E                          _T2CONbits 000FCA  
                     __size_of_pad 009C                            _isdigit 4320  
                     ??i2___xxtofl 000D                         ??___xxtofl 0064  
                 ___awmod@dividend 0060                          _T4CONbits 000F76  
                      ?_cambiarPWM 0001                            _isspace 4238  
                        _T5CONbits 000F22                            _isupper 42EE  
                          efgtoa@c 00A5                            efgtoa@d 00C3  
                          efgtoa@e 00DB                            efgtoa@f 00A1  
                          efgtoa@g 00D7                            efgtoa@h 00CD  
                          efgtoa@i 00D5                            efgtoa@l 00D1  
                          efgtoa@m 00BF                            efgtoa@n 00DD  
                          efgtoa@p 00C7                            efgtoa@t 00BB  
                          efgtoa@u 00DF                            efgtoa@w 00CA  
        __size_of_definirVelocidad 003A                            atoi@neg 006D  
                   length@longitud 0064                            _sprintf 4052  
                          _tolower 41A2                            _strncmp 399C  
             end_of_initialization 3FE6                            floorf@e 0087  
                          floorf@m 0083                            floorf@u 0089  
                          floorf@x 0079                            length@i 0067  
                          fputc@fp 0062                            fputs@fp 006B  
          __size_of_fijarVelocidad 00EA                     i2___xxtofl@arg 0013  
                   i2___xxtofl@exp 0012                     i2___xxtofl@val 0009  
                __end_of_vfpfcnvrt 1F74                         efgtoa@mode 00CC  
                       efgtoa@sign 00C5                 __end_ofi2___xxtofl 3414  
                       ??_terminal 019F                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                       ??_vfprintf 00F3                            strcpy@d 0068  
                          strlen@a 0062                            strcpy@s 0066  
                          strlen@s 0060              ?_configurarRS232US100 0001  
                        _PORTAbits 000F80                          _PORTDbits 000F83  
                 __CFG_DSBOREN$OFF 000000                        ___fladd@grs 0096  
                 __CFG_CPUDIV$OSC1 000000                      ___xxtofl@sign 0068  
                        _TRISAbits 000F92                          _TRISBbits 000F93  
                        _TRISCbits 000F94                          _TRISDbits 000F95  
                      ?_dirreccion 0060         ??_configurarInterrupciones 0060  
                      ___fldiv@grs 0073       __end_of_configuracionInicial 4484  
                      ___fldiv@rem 006C                          i2___fladd 25D6  
                        i2___awdiv 3D24                  __CFG_SOSCSEL$HIGH 000000  
                   _rutinaArranque 43B0                        ___flmul@grs 007C  
               i2___awdiv@dividend 0001                        _CCP7CONbits 000F09  
              __CFG_MSSP7B_EN$MSK7 000000                __size_of_cambiarPWM 000C  
                   __end_of___flge 35D0                     __end_of___fleq 3C16  
                      vfpfcnvrt@ap 00E7                        vfpfcnvrt@ct 0191  
                      vfpfcnvrt@fp 00E3                     __end_of___wmul 4404  
                    __pidataCOMRAM 450E                     __end_of_efgtoa 190C  
                ??_configurarRS232 0060                     __end_of_floorf 2D26  
                   __end_of_length 3EA6                         floorf@F524 002A  
                 __CFG_DSWDTEN$OFF 000000                     __end_of_rutina 016C  
                   __end_of_strcpy 4100                     __end_of_strlen 43B0  
              start_initialization 3F8E                    ___lodiv@divisor 0068  
                __size_of_PWMServo 0050                    ___lodiv@counter 0078  
               i2___awdiv@quotient 0007             __end_of_rutinaArranque 43DC  
                      __end_of_pad 3B8A                         ?i2___fladd 0017  
                       ?i2___awdiv 0001                      ??_frenarMotor 0060  
                    ??_enviarRS232 006A              __end_of___fpclassifyf 376E  
                       length@dato 0066                         length@text 0060  
                      vfprintf@fmt 00EF                           ??___flge 008F  
                         ??___fleq 0068                __size_of_dirreccion 0088  
                         ??___wmul 0064          __size_of_estadoDirreccion 0082  
                         ??_efgtoa 00A6                  __CFG_ADCSEL$BIT12 000000  
                      __pdataBANK1 01CA             ??_configurarRS232US100 0060  
                         ??_floorf 007D                           ??_length 0062  
                         ??_rutina 0027                           ??_strcpy 0064  
                         ??_strlen 0062                          ___fladd@a 008B  
                        ___fladd@b 0087                          ___fldiv@a 0064  
                        ___fldiv@b 0060                          ___flmul@a 0072  
                        ___flmul@b 006E                        __pbssCOMRAM 002A  
                        ___flsub@a 009B                          ___flsub@b 0097  
                __size_of_adelante 000A                      __pcstackBANK0 0060  
                    __pcstackBANK1 017D                    ?_rutinaArranque 0001  
                 _definirVelocidad 42B4                  __size_of___xxtofl 0144  
                   _fijarVelocidad 3414                          _atoi$1851 006F  
                        _atoi$1852 0073                          _atoi$1853 0071  
                      _efgtoa$1341 00AF                        _efgtoa$1350 00B5  
                      _efgtoa$1342 00B1                        _efgtoa$1351 00B7  
                      _efgtoa$1352 00B9                        _efgtoa$1346 00B3  
              __end_of_frenarMotor 44C2                __end_of_enviarRS232 3F1C  
               enviarRS232@valores 0068                          __pintcode 0008  
                         ?___fladd 0087                           ?___fldiv 0060  
                         ?___awdiv 0060                           ?___flneg 0060  
                         ?___awmod 0060                           ?___flmul 006E  
                         ?___flsub 0097                           ?___fltol 0087  
             _configuracionInicial 4466                 dirreccion@tiempo_1 0064  
                         ?___lodiv 0060                           ?___lomod 0060  
                __size_of_terminal 015C                          _distancia 0032  
                __size_of_vfprintf 0062                    ___lomod@divisor 0068  
                      __smallconst 0F00                    ___lomod@counter 0070  
                         ?_isdigit 0060                          _indicador 0044  
             __CFG_RTCOSC$T1OSCREF 000000                       ??_cambiarPWM 0062  
                         ?_isspace 0060   __end_of_configurarInterrupciones 4466  
                         ?_isupper 0060            __size_of_configurarTMR4 000E  
          __size_of_configurarPWM7 0020            __size_of_configurarTMR5 0016  
                      ??i2___fladd 001F                        ??i2___awdiv 0005  
                   __size_of_atras 000A                           ?_sprintf 0195  
                         ?_tolower 0066                     __size_of_fputc 00A2  
                   __size_of_fputs 003C                           ?_strncmp 0060  
           __end_of_fijarVelocidad 34FE                     __size_of_putch 0002  
            estadoDirreccion@valor 0066                          _obstaculo 011F  
                   ___wmul@product 0064                 _contador_distancia 0040  
                         _PIE1bits 000F9D                           _PIE3bits 000FA3  
                         _PIE5bits 000F91                           _PIR1bits 000F9E  
                         _PIR3bits 000FA4                           i2u623_40 3D6A  
                         i2u640_40 2720                           _PIR5bits 000F98  
                         i2u635_40 26CC                           i2u636_40 26DC  
                         i2u661_40 28A2                           i2u653_40 2832  
                         i2u637_40 26DE                           i2u655_40 2846  
                         i2u671_40 33CC                           i2u678_41 0060  
                 __CFG_WDTPS$32768 000000                          main@F7121 0114  
                        main@F7119 01CA              ?_configuracionInicial 0001  
                         _TIME_MAX 0048                 __end_of_cambiarPWM 44FA  
                        _velocidad 004A                          _vfpfcnvrt 190C  
                ___wmul@multiplier 0060             __size_of_encenderMotor 000E  
                         _PWMServo 4152                  i2___awdiv@divisor 0003  
                        main@texto 01C2                  i2___awdiv@counter 0005  
                     ??_dirreccion 0062                       _isspace$1882 0066  
                       vfpfcnvrt@c 0194                         vfpfcnvrt@f 018D  
                      _INTCON2bits 000FF1                        _INTCON3bits 000FF0  
                        copy_data0 3FA2                          copy_data1 3FC2  
                  ?_fijarVelocidad 0001                        _frenarMotor 44B2  
                      _enviarRS232 3EA6                    _configurarRS232 4484  
                         __Hrparam 0000                         vfprintf@ap 00F1  
                         __Lrparam 0000                         vfprintf@fp 00ED  
                 _estadoDirreccion 3DA8                        _estadoFuego 0041  
               __end_of_dirreccion 3C9E                   __size_of___fladd 030E  
                 __size_of___fldiv 028A                   __size_of___awdiv 0086  
                 __size_of___flneg 0030                   __size_of___awmod 0072  
                 __size_of___flmul 0354                   __size_of___flsub 0048  
                 __size_of___fltol 00BC                   __size_of___lodiv 00D0  
                 __size_of___lomod 00B0                         ?_vfpfcnvrt 00E3  
                         _adelante 4504                 ___fpclassifyf@F463 002E  
              _fijarVelocidad$2194 009B                         sprintf@fmt 0197  
                         _cicle_90 004C                           ___xxtofl 3190  
                 __size_of_isdigit 0032                   __size_of_isspace 0040  
                         __ptext10 41A2                           __ptext11 42EE  
                         __ptext20 3F1C                           __ptext12 40AA  
                         __ptext21 3C9E                           __ptext13 2B6C  
                         __ptext30 4320                           __ptext22 4100  
                         __ptext14 36A0                           __ptext31 43DC  
                         __ptext23 3AEE                           __ptext15 41F0  
                         __ptext40 3E2A                           __ptext32 44B2  
                         __ptext24 4382                           __ptext16 4352  
                         __ptext41 44D2                           __ptext33 3414  
                         __ptext25 4278                           __ptext17 34FE  
                         __ptext50 44E0                           __ptext42 43B0  
                         __ptext34 3190                           __ptext26 3A4C  
                         __ptext18 3B8A                           __ptext51 4404  
                         __ptext43 3C16                           __ptext35 3830  
                         __ptext27 451C                           __ptext19 28E2  
                         __ptext60 3D24                           __ptext52 4484  
                         __ptext44 44EE                           __ptext36 1F74  
                         __ptext28 3038                           __ptext53 44C2  
                         __ptext45 42B4                           __ptext37 22C8  
                         __ptext29 4238                           __ptext54 4426  
                         __ptext46 44FA                           __ptext38 3DA8  
                         __ptext55 4446                           __ptext47 4504  
                         __ptext39 3EA6                           __ptext56 4152  
                         __ptext48 4466                           __ptext49 449C  
                         __ptext58 32D4                           __ptext59 25D6  
                 __size_of_isupper 0032                         rutina@dato 0029  
                 __size_of_sprintf 0058                   __size_of_tolower 004E  
                       strcpy@dest 0060                   __size_of_strncmp 00B0  
                    _encenderMotor 44D2                      __size_of_atoi 0158  
                    __size_of_ctoa 0052                      __size_of_main 00C2  
                    __size_of_utoa 01B6             ??_configuracionInicial 0060  
                         efgtoa@fp 009F                           efgtoa@ne 00C1  
                         efgtoa@pp 00BD  __size_of_configurarInterrupciones 0020  
                         efgtoa@ou 00AB          ?_configurarInterrupciones 0001  
         __end_of_definirVelocidad 42EE                           _terminal 2EDC  
                         int$flags 004E                           _vfprintf 3FF0  
                         main@text 01BC                   ??_rutinaArranque 0060  
                   _vfpfcnvrt$1373 0187                     _vfpfcnvrt$1374 0189  
                   _vfpfcnvrt$1379 018B                         _INTCONbits 000FF2  
                   _configurarTMR4 44E0                     _configurarTMR5 449C  
                   _configurarPWM7 4426                           isdigit@c 0060  
          __end_of_configurarRS232 449C                           intlevel2 0000  
                        sprintf@ap 00F7                  _bandera_distancia 011E  
                   ?_encenderMotor 0001                    i2___xxtofl@sign 0011  
                         isspace@c 0060                          strcpy@src 0062  
                         isupper@c 0060                          strncmp@_l 0060  
                        strncmp@_r 0062                        efgtoa@nmode 00C9  
                      ??_vfpfcnvrt 00E9      __size_of_configurarRS232US100 0022  
                         sprintf@f 00F9                           tolower@c 0066  
                         sprintf@s 0195             __end_of_configurarTMR4 44EE  
           __end_of_configurarPWM7 4446             __end_of_configurarTMR5 44B2  
           __size_of___fpclassifyf 00CE                           strncmp@l 0067  
                         strncmp@n 0064                           strncmp@r 0069  
                    ___fladd@signs 0093                fijarVelocidad@speed 009F  
                     ___fladd@aexp 0094                       ___fladd@bexp 0095  
                    terminal@F7128 0100  
