

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jun 28 08:53:58 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F47J53 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  00450A                     __pidataCOMRAM:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for _TIME_MAX
   122  00450A  00B9               	dw	185
   123                           
   124                           ;initializer for _velocidad
   125  00450C  01C2               	dw	450
   126                           
   127                           ;initializer for _cicle_90
   128  00450E  01C2               	dw	450
   129                           
   130                           ;initializer for _tiempo_anterior_1
   131  004510  0F                 	db	15
   132                           
   133                           	psect	idataBANK1
   134  004511                     __pidataBANK1:
   135                           	opt callstack 0
   136                           
   137                           ;initializer for main@F7115
   138  004511  48                 	db	72
   139  004512  4F                 	db	79
   140  004513  4C                 	db	76
   141  004514  41                 	db	65
   142  004515  21                 	db	33
   143  004516  00                 	db	0
   144  0000                     _RPINR16	set	3831
   145  0000                     _RPOR23	set	3799
   146  0000                     _PPSCON	set	3775
   147  0000                     _T5CONbits	set	3874
   148  0000                     _CCPR7L	set	3850
   149  0000                     _TMR5L	set	3875
   150  0000                     _TMR5H	set	3876
   151  0000                     _T5CON	set	3874
   152  0000                     _CCPTMRS1bits	set	3921
   153  0000                     _CCP7CONbits	set	3849
   154  0000                     _ANCON1	set	3913
   155  0000                     _ANCON0	set	3912
   156  0000                     _PORTBbits	set	3969
   157  0000                     _PORTAbits	set	3968
   158  0000                     _TXREG2	set	4009
   159  0000                     _RCREG1	set	4015
   160  0000                     _TXREG1	set	4014
   161  0000                     _T2CONbits	set	4042
   162  0000                     _PIE3bits	set	4003
   163  0000                     _PIR3bits	set	4004
   164  0000                     _SPBRG2	set	4011
   165  0000                     _BAUDCON2bits	set	3964
   166  0000                     _RCSTA2	set	3996
   167  0000                     _TXSTA2	set	4008
   168  0000                     _PIR5bits	set	3992
   169  0000                     _PIE5bits	set	3985
   170  0000                     _PORTDbits	set	3971
   171  0000                     _TRISDbits	set	3989
   172  0000                     _PIE1bits	set	3997
   173  0000                     _PIR1bits	set	3998
   174  0000                     _SPBRG1	set	4016
   175  0000                     _BAUDCON1bits	set	3966
   176  0000                     _RCSTA1	set	4012
   177  0000                     _TXSTA1	set	4013
   178  0000                     _TRISCbits	set	3988
   179  0000                     _TMR2	set	4044
   180  0000                     _PR2	set	4043
   181  0000                     _T2CON	set	4042
   182  0000                     _INTCON2bits	set	4081
   183  0000                     _INTCONbits	set	4082
   184  0000                     _TRISBbits	set	3987
   185  0000                     _TRISAbits	set	3986
   186  0000                     _RCREG2	set	4010
   187                           
   188                           	psect	smallconst
   189  000F00                     __psmallconst:
   190                           	opt callstack 0
   191  000F00  00                 	db	0
   192  000F01  4E                 	db	78	;'N'
   193  000F02  6F                 	db	111	;'o'
   194  000F03  20                 	db	32
   195  000F04  70                 	db	112	;'p'
   196  000F05  75                 	db	117	;'u'
   197  000F06  65                 	db	101	;'e'
   198  000F07  64                 	db	100	;'d'
   199  000F08  6F                 	db	111	;'o'
   200  000F09  20                 	db	32
   201  000F0A  65                 	db	101	;'e'
   202  000F0B  73                 	db	115	;'s'
   203  000F0C  71                 	db	113	;'q'
   204  000F0D  75                 	db	117	;'u'
   205  000F0E  69                 	db	105	;'i'
   206  000F0F  76                 	db	118	;'v'
   207  000F10  61                 	db	97	;'a'
   208  000F11  72                 	db	114	;'r'
   209  000F12  20                 	db	32
   210  000F13  65                 	db	101	;'e'
   211  000F14  6C                 	db	108	;'l'
   212  000F15  20                 	db	32
   213  000F16  66                 	db	102	;'f'
   214  000F17  75                 	db	117	;'u'
   215  000F18  65                 	db	101	;'e'
   216  000F19  67                 	db	103	;'g'
   217  000F1A  6F                 	db	111	;'o'
   218  000F1B  21                 	db	33
   219  000F1C  20                 	db	32
   220  000F1D  6C                 	db	108	;'l'
   221  000F1E  6C                 	db	108	;'l'
   222  000F1F  61                 	db	97	;'a'
   223  000F20  6D                 	db	109	;'m'
   224  000F21  65                 	db	101	;'e'
   225  000F22  20                 	db	32
   226  000F23  61                 	db	97	;'a'
   227  000F24  20                 	db	32
   228  000F25  6C                 	db	108	;'l'
   229  000F26  6F                 	db	111	;'o'
   230  000F27  73                 	db	115	;'s'
   231  000F28  20                 	db	32
   232  000F29  62                 	db	98	;'b'
   233  000F2A  6F                 	db	111	;'o'
   234  000F2B  6D                 	db	109	;'m'
   235  000F2C  62                 	db	98	;'b'
   236  000F2D  65                 	db	101	;'e'
   237  000F2E  72                 	db	114	;'r'
   238  000F2F  6F                 	db	111	;'o'
   239  000F30  73                 	db	115	;'s'
   240  000F31  00                 	db	0
   241  000F32                     STR_4:
   242  000F32  56                 	db	86	;'V'
   243  000F33  65                 	db	101	;'e'
   244  000F34  6C                 	db	108	;'l'
   245  000F35  6F                 	db	111	;'o'
   246  000F36  63                 	db	99	;'c'
   247  000F37  69                 	db	105	;'i'
   248  000F38  64                 	db	100	;'d'
   249  000F39  61                 	db	97	;'a'
   250  000F3A  64                 	db	100	;'d'
   251  000F3B  20                 	db	32
   252  000F3C  66                 	db	102	;'f'
   253  000F3D  69                 	db	105	;'i'
   254  000F3E  6A                 	db	106	;'j'
   255  000F3F  61                 	db	97	;'a'
   256  000F40  64                 	db	100	;'d'
   257  000F41  61                 	db	97	;'a'
   258  000F42  20                 	db	32
   259  000F43  61                 	db	97	;'a'
   260  000F44  6C                 	db	108	;'l'
   261  000F45  3A                 	db	58	;':'
   262  000F46  20                 	db	32
   263  000F47  25                 	db	37
   264  000F48  30                 	db	48	;'0'
   265  000F49  33                 	db	51	;'3'
   266  000F4A  75                 	db	117	;'u'
   267  000F4B  25                 	db	37
   268  000F4C  63                 	db	99	;'c'
   269  000F4D  00                 	db	0
   270  000F4E                     STR_3:
   271  000F4E  56                 	db	86	;'V'
   272  000F4F  65                 	db	101	;'e'
   273  000F50  68                 	db	104	;'h'
   274  000F51  69                 	db	105	;'i'
   275  000F52  63                 	db	99	;'c'
   276  000F53  75                 	db	117	;'u'
   277  000F54  6C                 	db	108	;'l'
   278  000F55  6F                 	db	111	;'o'
   279  000F56  20                 	db	32
   280  000F57  65                 	db	101	;'e'
   281  000F58  6E                 	db	110	;'n'
   282  000F59  20                 	db	32
   283  000F5A  72                 	db	114	;'r'
   284  000F5B  65                 	db	101	;'e'
   285  000F5C  76                 	db	118	;'v'
   286  000F5D  65                 	db	101	;'e'
   287  000F5E  72                 	db	114	;'r'
   288  000F5F  73                 	db	115	;'s'
   289  000F60  61                 	db	97	;'a'
   290  000F61  21                 	db	33
   291  000F62  00                 	db	0
   292  000F63                     STR_2:
   293  000F63  4D                 	db	77	;'M'
   294  000F64  6F                 	db	111	;'o'
   295  000F65  74                 	db	116	;'t'
   296  000F66  6F                 	db	111	;'o'
   297  000F67  72                 	db	114	;'r'
   298  000F68  65                 	db	101	;'e'
   299  000F69  73                 	db	115	;'s'
   300  000F6A  20                 	db	32
   301  000F6B  65                 	db	101	;'e'
   302  000F6C  6E                 	db	110	;'n'
   303  000F6D  63                 	db	99	;'c'
   304  000F6E  65                 	db	101	;'e'
   305  000F6F  6E                 	db	110	;'n'
   306  000F70  64                 	db	100	;'d'
   307  000F71  69                 	db	105	;'i'
   308  000F72  64                 	db	100	;'d'
   309  000F73  6F                 	db	111	;'o'
   310  000F74  73                 	db	115	;'s'
   311  000F75  21                 	db	33
   312  000F76  00                 	db	0
   313  000F77                     STR_1:
   314  000F77  25                 	db	37
   315  000F78  30                 	db	48	;'0'
   316  000F79  33                 	db	51	;'3'
   317  000F7A  2E                 	db	46
   318  000F7B  31                 	db	49	;'1'
   319  000F7C  66                 	db	102	;'f'
   320  000F7D  20                 	db	32
   321  000F7E  63                 	db	99	;'c'
   322  000F7F  6D                 	db	109	;'m'
   323  000F80  00                 	db	0
   324  000F81                     STR_5:
   325  000F81  47                 	db	71	;'G'
   326  000F82  69                 	db	105	;'i'
   327  000F83  72                 	db	114	;'r'
   328  000F84  61                 	db	97	;'a'
   329  000F85  6E                 	db	110	;'n'
   330  000F86  64                 	db	100	;'d'
   331  000F87  6F                 	db	111	;'o'
   332  000F88  00                 	db	0
   333  000F89                     STR_7:
   334  000F89  49                 	db	73	;'I'
   335  000F8A  4E                 	db	78	;'N'
   336  000F8B  46                 	db	70	;'F'
   337  000F8C  00                 	db	0
   338  000F8D                     STR_11:
   339  000F8D  4E                 	db	78	;'N'
   340  000F8E  41                 	db	65	;'A'
   341  000F8F  4E                 	db	78	;'N'
   342  000F90  00                 	db	0
   343  000F91                     STR_8:
   344  000F91  69                 	db	105	;'i'
   345  000F92  6E                 	db	110	;'n'
   346  000F93  66                 	db	102	;'f'
   347  000F94  00                 	db	0
   348  000F95                     STR_12:
   349  000F95  6E                 	db	110	;'n'
   350  000F96  61                 	db	97	;'a'
   351  000F97  6E                 	db	110	;'n'
   352  000F98  00                 	db	0
   353  000F99                     STR_15:
   354  000F99  6C                 	db	108	;'l'
   355  000F9A  66                 	db	102	;'f'
   356  000F9B  00                 	db	0
   357  0000                     
   358                           ; #config settings
   359  000F9C  00                 	db	0	; dummy byte at the end
   360  0000                     
   361                           	psect	cinit
   362  003F5C                     __pcinit:
   363                           	opt callstack 0
   364  003F5C                     start_initialization:
   365                           	opt callstack 0
   366  003F5C                     __initialization:
   367                           	opt callstack 0
   368                           
   369                           ; Initialize objects allocated to BANK1 (6 bytes)
   370                           ; load TBLPTR registers with __pidataBANK1
   371  003F5C  0E11               	movlw	low __pidataBANK1
   372  003F5E  6EF6               	movwf	tblptrl,c
   373  003F60  0E45               	movlw	high __pidataBANK1
   374  003F62  6EF7               	movwf	tblptrh,c
   375  003F64  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   376  003F66  6EF8               	movwf	tblptru,c
   377  003F68  EE01  F0BF         	lfsr	0,__pdataBANK1
   378  003F6C  EE10 F006          	lfsr	1,6
   379  003F70                     copy_data0:
   380  003F70  0009               	tblrd		*+
   381  003F72  CFF5 FFEE          	movff	tablat,postinc0
   382  003F76  50E5               	movf	postdec1,w,c
   383  003F78  50E1               	movf	fsr1l,w,c
   384  003F7A  E1FA               	bnz	copy_data0
   385                           
   386                           ; Initialize objects allocated to COMRAM (7 bytes)
   387                           ; load TBLPTR registers with __pidataCOMRAM
   388  003F7C  0E0A               	movlw	low __pidataCOMRAM
   389  003F7E  6EF6               	movwf	tblptrl,c
   390  003F80  0E45               	movlw	high __pidataCOMRAM
   391  003F82  6EF7               	movwf	tblptrh,c
   392  003F84  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   393  003F86  6EF8               	movwf	tblptru,c
   394  003F88  EE00  F04E         	lfsr	0,__pdataCOMRAM
   395  003F8C  EE10 F007          	lfsr	1,7
   396  003F90                     copy_data1:
   397  003F90  0009               	tblrd		*+
   398  003F92  CFF5 FFEE          	movff	tablat,postinc0
   399  003F96  50E5               	movf	postdec1,w,c
   400  003F98  50E1               	movf	fsr1l,w,c
   401  003F9A  E1FA               	bnz	copy_data1
   402                           
   403                           ; Clear objects allocated to BANK1 (114 bytes)
   404  003F9C  EE01  F000         	lfsr	0,__pbssBANK1
   405  003FA0  0E72               	movlw	114
   406  003FA2                     clear_0:
   407  003FA2  6AEE               	clrf	postinc0,c
   408  003FA4  06E8               	decf	wreg,f,c
   409  003FA6  E1FD               	bnz	clear_0
   410                           
   411                           ; Clear objects allocated to BANK0 (1 bytes)
   412  003FA8  0100               	movlb	0
   413  003FAA  6BFE               	clrf	__pbssBANK0& (0+255),b
   414                           
   415                           ; Clear objects allocated to COMRAM (34 bytes)
   416  003FAC  EE00  F02C         	lfsr	0,__pbssCOMRAM
   417  003FB0  0E22               	movlw	34
   418  003FB2                     clear_1:
   419  003FB2  6AEE               	clrf	postinc0,c
   420  003FB4  06E8               	decf	wreg,f,c
   421  003FB6  E1FD               	bnz	clear_1
   422  003FB8                     end_of_initialization:
   423                           	opt callstack 0
   424  003FB8                     __end_of__initialization:
   425                           	opt callstack 0
   426  003FB8  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   427  003FBA  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   428  003FBC  0100               	movlb	0
   429  003FBE  EFCF  F01C         	goto	_main	;jump to C main() function
   430                           
   431                           	psect	bssCOMRAM
   432  00002C                     __pbssCOMRAM:
   433                           	opt callstack 0
   434  00002C                     floorf@F524:
   435                           	opt callstack 0
   436  00002C                     	ds	4
   437  000030                     ___fpclassifyf@F463:
   438                           	opt callstack 0
   439  000030                     	ds	4
   440  000034                     _distancia:
   441                           	opt callstack 0
   442  000034                     	ds	4
   443  000038                     _width:
   444                           	opt callstack 0
   445  000038                     	ds	2
   446  00003A                     _prec:
   447                           	opt callstack 0
   448  00003A                     	ds	2
   449  00003C                     _flags:
   450                           	opt callstack 0
   451  00003C                     	ds	2
   452  00003E                     _contador_datos:
   453                           	opt callstack 0
   454  00003E                     	ds	1
   455  00003F                     _parar:
   456                           	opt callstack 0
   457  00003F                     	ds	1
   458  000040                     _servo_dirreccion:
   459                           	opt callstack 0
   460  000040                     	ds	1
   461  000041                     _contador_timer_5:
   462                           	opt callstack 0
   463  000041                     	ds	1
   464  000042                     _indicador:
   465                           	opt callstack 0
   466  000042                     	ds	1
   467  000043                     _motor:
   468                           	opt callstack 0
   469  000043                     	ds	1
   470  000044                     _datos:
   471                           	opt callstack 0
   472  000044                     	ds	10
   473                           
   474                           	psect	dataCOMRAM
   475  00004E                     __pdataCOMRAM:
   476                           	opt callstack 0
   477  00004E                     _TIME_MAX:
   478                           	opt callstack 0
   479  00004E                     	ds	2
   480  000050                     _velocidad:
   481                           	opt callstack 0
   482  000050                     	ds	2
   483  000052                     _cicle_90:
   484                           	opt callstack 0
   485  000052                     	ds	2
   486  000054                     _tiempo_anterior_1:
   487                           	opt callstack 0
   488  000054                     	ds	1
   489                           
   490                           	psect	bssBANK0
   491  0000FE                     __pbssBANK0:
   492                           	opt callstack 0
   493  0000FE                     _estadoFuego:
   494                           	opt callstack 0
   495  0000FE                     	ds	1
   496                           
   497                           	psect	bssBANK1
   498  000100                     __pbssBANK1:
   499                           	opt callstack 0
   500  000100                     	ds	20
   501  000114                     	ds	8
   502  00011C                     _nout:
   503                           	opt callstack 0
   504  00011C                     	ds	2
   505  00011E                     _bandera_distancia:
   506                           	opt callstack 0
   507  00011E                     	ds	1
   508  00011F                     _obstaculo:
   509                           	opt callstack 0
   510  00011F                     	ds	1
   511  000120                     _bandera_servo:
   512                           	opt callstack 0
   513  000120                     	ds	1
   514  000121                     _bandera:
   515                           	opt callstack 0
   516  000121                     	ds	1
   517  000122                     _dbuf:
   518                           	opt callstack 0
   519  000122                     	ds	80
   520                           
   521                           	psect	dataBANK1
   522  0001BF                     __pdataBANK1:
   523                           	opt callstack 0
   524  0001BF                     main@F7115:
   525                           	opt callstack 0
   526  0001BF                     	ds	6
   527                           
   528                           	psect	cstackBANK1
   529  000172                     __pcstackBANK1:
   530                           	opt callstack 0
   531  000172                     vfpfcnvrt@llu:
   532                           	opt callstack 0
   533                           
   534                           ; 8 bytes @ 0x0
   535  000172                     	ds	8
   536  00017A                     vfpfcnvrt@done:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x8
   540  00017A                     	ds	2
   541  00017C                     _vfpfcnvrt$1443:
   542                           	opt callstack 0
   543                           
   544                           ; 2 bytes @ 0xA
   545  00017C                     	ds	2
   546  00017E                     _vfpfcnvrt$1444:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0xC
   550  00017E                     	ds	2
   551  000180                     _vfpfcnvrt$1449:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0xE
   555  000180                     	ds	2
   556  000182                     vfpfcnvrt@f:
   557                           	opt callstack 0
   558                           
   559                           ; 4 bytes @ 0x10
   560  000182                     	ds	4
   561  000186                     vfpfcnvrt@ct:
   562                           	opt callstack 0
   563                           
   564                           ; 3 bytes @ 0x14
   565  000186                     	ds	3
   566  000189                     vfpfcnvrt@c:
   567                           	opt callstack 0
   568                           
   569                           ; 1 bytes @ 0x17
   570  000189                     	ds	1
   571  00018A                     ?_vfprintf:
   572                           	opt callstack 0
   573  00018A                     vfprintf@fp:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x18
   577  00018A                     	ds	2
   578  00018C                     vfprintf@fmt:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x1A
   582  00018C                     	ds	2
   583  00018E                     vfprintf@ap:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x1C
   587  00018E                     	ds	2
   588  000190                     ?_sprintf:
   589                           	opt callstack 0
   590  000190                     sprintf@s:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0x1E
   594  000190                     	ds	2
   595  000192                     sprintf@fmt:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0x20
   599  000192                     	ds	6
   600  000198                     terminal@comand:
   601                           	opt callstack 0
   602                           
   603                           ; 2 bytes @ 0x26
   604  000198                     	ds	2
   605  00019A                     terminal@texto:
   606                           	opt callstack 0
   607                           
   608                           ; 20 bytes @ 0x28
   609  00019A                     	ds	20
   610  0001AE                     terminal@medicion:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x3C
   614  0001AE                     	ds	2
   615  0001B0                     terminal@degree:
   616                           	opt callstack 0
   617                           
   618                           ; 1 bytes @ 0x3E
   619  0001B0                     	ds	1
   620  0001B1                     main@text:
   621                           	opt callstack 0
   622                           
   623                           ; 6 bytes @ 0x3F
   624  0001B1                     	ds	6
   625  0001B7                     main@texto:
   626                           	opt callstack 0
   627                           
   628                           ; 8 bytes @ 0x45
   629  0001B7                     	ds	8
   630                           
   631                           	psect	cstackBANK0
   632  000060                     __pcstackBANK0:
   633                           	opt callstack 0
   634  000060                     ??_definirVelocidad:
   635  000060                     ??_estadoDirreccion:
   636  000060                     ??_dirreccion:
   637  000060                     ??_rutinaArranque:
   638  000060                     ?_length:
   639                           	opt callstack 0
   640  000060                     ?_strlen:
   641                           	opt callstack 0
   642  000060                     ?___fpclassifyf:
   643                           	opt callstack 0
   644  000060                     ?_isupper:
   645                           	opt callstack 0
   646  000060                     ?_isdigit:
   647                           	opt callstack 0
   648  000060                     ?_strncmp:
   649                           	opt callstack 0
   650  000060                     ?_isspace:
   651                           	opt callstack 0
   652  000060                     ?___wmul:
   653                           	opt callstack 0
   654  000060                     ?___awdiv:
   655                           	opt callstack 0
   656  000060                     ?___awmod:
   657                           	opt callstack 0
   658  000060                     ?___fldiv:
   659                           	opt callstack 0
   660  000060                     ?___flneg:
   661                           	opt callstack 0
   662  000060                     ?___xxtofl:
   663                           	opt callstack 0
   664  000060                     ?___lodiv:
   665                           	opt callstack 0
   666  000060                     ?___lomod:
   667                           	opt callstack 0
   668  000060                     length@text:
   669                           	opt callstack 0
   670  000060                     ___wmul@multiplier:
   671                           	opt callstack 0
   672  000060                     ___awdiv@dividend:
   673                           	opt callstack 0
   674  000060                     ___awmod@dividend:
   675                           	opt callstack 0
   676  000060                     isdigit@c:
   677                           	opt callstack 0
   678  000060                     isspace@c:
   679                           	opt callstack 0
   680  000060                     isupper@c:
   681                           	opt callstack 0
   682  000060                     fputc@c:
   683                           	opt callstack 0
   684  000060                     strcpy@dest:
   685                           	opt callstack 0
   686  000060                     strlen@s:
   687                           	opt callstack 0
   688  000060                     strncmp@_l:
   689                           	opt callstack 0
   690  000060                     ___fleq@ff1:
   691                           	opt callstack 0
   692  000060                     ___flneg@f1:
   693                           	opt callstack 0
   694  000060                     ___fldiv@b:
   695                           	opt callstack 0
   696  000060                     ___xxtofl@val:
   697                           	opt callstack 0
   698  000060                     ___fpclassifyf@x:
   699                           	opt callstack 0
   700  000060                     ___lodiv@dividend:
   701                           	opt callstack 0
   702  000060                     ___lomod@dividend:
   703                           	opt callstack 0
   704                           
   705                           ; 8 bytes @ 0x0
   706  000060                     	ds	2
   707  000062                     ??_length:
   708  000062                     ??_isupper:
   709  000062                     ??_isdigit:
   710  000062                     ??_isspace:
   711  000062                     estadoDirreccion@valor:
   712                           	opt callstack 0
   713  000062                     dirreccion@degree:
   714                           	opt callstack 0
   715  000062                     ___wmul@multiplicand:
   716                           	opt callstack 0
   717  000062                     ___awdiv@divisor:
   718                           	opt callstack 0
   719  000062                     ___awmod@divisor:
   720                           	opt callstack 0
   721  000062                     fputc@fp:
   722                           	opt callstack 0
   723  000062                     strcpy@src:
   724                           	opt callstack 0
   725  000062                     strlen@a:
   726                           	opt callstack 0
   727  000062                     strncmp@_r:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x2
   731  000062                     	ds	1
   732  000063                     estadoDirreccion@angulo:
   733                           	opt callstack 0
   734  000063                     dirreccion@tiempo_1:
   735                           	opt callstack 0
   736                           
   737                           ; 1 bytes @ 0x3
   738  000063                     	ds	1
   739  000064                     ??_fputc:
   740  000064                     ??___fpclassifyf:
   741  000064                     ??_strcpy:
   742  000064                     ??___xxtofl:
   743  000064                     ___awdiv@counter:
   744                           	opt callstack 0
   745  000064                     ___awmod@counter:
   746                           	opt callstack 0
   747  000064                     length@longitud:
   748                           	opt callstack 0
   749  000064                     ___wmul@product:
   750                           	opt callstack 0
   751  000064                     strncmp@n:
   752                           	opt callstack 0
   753  000064                     ___fleq@ff2:
   754                           	opt callstack 0
   755  000064                     ___fldiv@a:
   756                           	opt callstack 0
   757                           
   758                           ; 4 bytes @ 0x4
   759  000064                     	ds	1
   760  000065                     ___awdiv@sign:
   761                           	opt callstack 0
   762  000065                     ___awmod@sign:
   763                           	opt callstack 0
   764                           
   765                           ; 1 bytes @ 0x5
   766  000065                     	ds	1
   767  000066                     ??_strncmp:
   768  000066                     ?_tolower:
   769                           	opt callstack 0
   770  000066                     length@dato:
   771                           	opt callstack 0
   772  000066                     _isspace$1952:
   773                           	opt callstack 0
   774  000066                     ___awdiv@quotient:
   775                           	opt callstack 0
   776  000066                     strcpy@s:
   777                           	opt callstack 0
   778  000066                     tolower@c:
   779                           	opt callstack 0
   780                           
   781                           ; 2 bytes @ 0x6
   782  000066                     	ds	1
   783  000067                     ?_atoi:
   784                           	opt callstack 0
   785  000067                     length@i:
   786                           	opt callstack 0
   787  000067                     atoi@s:
   788                           	opt callstack 0
   789  000067                     strncmp@l:
   790                           	opt callstack 0
   791                           
   792                           ; 2 bytes @ 0x7
   793  000067                     	ds	1
   794  000068                     ??_tolower:
   795  000068                     ??___fldiv:
   796  000068                     ??___fleq:
   797  000068                     ___xxtofl@sign:
   798                           	opt callstack 0
   799  000068                     enviarRS232@valores:
   800                           	opt callstack 0
   801  000068                     ___fpclassifyf@e:
   802                           	opt callstack 0
   803  000068                     strcpy@d:
   804                           	opt callstack 0
   805  000068                     ___lodiv@divisor:
   806                           	opt callstack 0
   807  000068                     ___lomod@divisor:
   808                           	opt callstack 0
   809                           
   810                           ; 8 bytes @ 0x8
   811  000068                     	ds	1
   812  000069                     ??_atoi:
   813  000069                     ___xxtofl@exp:
   814                           	opt callstack 0
   815  000069                     fputs@s:
   816                           	opt callstack 0
   817  000069                     strncmp@r:
   818                           	opt callstack 0
   819                           
   820                           ; 2 bytes @ 0x9
   821  000069                     	ds	1
   822  00006A                     ??_enviarRS232:
   823  00006A                     ___xxtofl@arg:
   824                           	opt callstack 0
   825  00006A                     ___fpclassifyf@u:
   826                           	opt callstack 0
   827                           
   828                           ; 4 bytes @ 0xA
   829  00006A                     	ds	1
   830  00006B                     fputs@fp:
   831                           	opt callstack 0
   832                           
   833                           ; 2 bytes @ 0xB
   834  00006B                     	ds	1
   835  00006C                     enviarRS232@longitud_texto:
   836                           	opt callstack 0
   837  00006C                     _tolower$2037:
   838                           	opt callstack 0
   839  00006C                     ___fldiv@rem:
   840                           	opt callstack 0
   841                           
   842                           ; 4 bytes @ 0xC
   843  00006C                     	ds	1
   844  00006D                     fputs@c:
   845                           	opt callstack 0
   846  00006D                     atoi@neg:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0xD
   850  00006D                     	ds	1
   851  00006E                     ?___flmul:
   852                           	opt callstack 0
   853  00006E                     enviarRS232@i:
   854                           	opt callstack 0
   855  00006E                     fputs@i:
   856                           	opt callstack 0
   857  00006E                     ___flmul@b:
   858                           	opt callstack 0
   859                           
   860                           ; 4 bytes @ 0xE
   861  00006E                     	ds	1
   862  00006F                     _atoi$1921:
   863                           	opt callstack 0
   864                           
   865                           ; 2 bytes @ 0xF
   866  00006F                     	ds	1
   867  000070                     ?_pad:
   868                           	opt callstack 0
   869  000070                     ___lomod@counter:
   870                           	opt callstack 0
   871  000070                     ___fldiv@sign:
   872                           	opt callstack 0
   873  000070                     pad@fp:
   874                           	opt callstack 0
   875  000070                     ___lodiv@quotient:
   876                           	opt callstack 0
   877                           
   878                           ; 8 bytes @ 0x10
   879  000070                     	ds	1
   880  000071                     ___fldiv@new_exp:
   881                           	opt callstack 0
   882  000071                     _atoi$1923:
   883                           	opt callstack 0
   884                           
   885                           ; 2 bytes @ 0x11
   886  000071                     	ds	1
   887  000072                     pad@buf:
   888                           	opt callstack 0
   889  000072                     ___flmul@a:
   890                           	opt callstack 0
   891                           
   892                           ; 4 bytes @ 0x12
   893  000072                     	ds	1
   894  000073                     _atoi$1922:
   895                           	opt callstack 0
   896  000073                     ___fldiv@grs:
   897                           	opt callstack 0
   898                           
   899                           ; 4 bytes @ 0x13
   900  000073                     	ds	1
   901  000074                     pad@p:
   902                           	opt callstack 0
   903  000074                     atoi@n:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0x14
   907  000074                     	ds	2
   908  000076                     ??___flmul:
   909  000076                     ??_pad:
   910                           
   911                           ; 1 bytes @ 0x16
   912  000076                     	ds	1
   913  000077                     ___fldiv@bexp:
   914                           	opt callstack 0
   915  000077                     pad@i:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x17
   919  000077                     	ds	1
   920  000078                     ___lodiv@counter:
   921                           	opt callstack 0
   922  000078                     ___fldiv@aexp:
   923                           	opt callstack 0
   924                           
   925                           ; 1 bytes @ 0x18
   926  000078                     	ds	1
   927  000079                     ?_floorf:
   928                           	opt callstack 0
   929  000079                     pad@w:
   930                           	opt callstack 0
   931  000079                     floorf@x:
   932                           	opt callstack 0
   933                           
   934                           ; 4 bytes @ 0x19
   935  000079                     	ds	1
   936  00007A                     ___flmul@sign:
   937                           	opt callstack 0
   938                           
   939                           ; 1 bytes @ 0x1A
   940  00007A                     	ds	1
   941  00007B                     ?_ctoa:
   942                           	opt callstack 0
   943  00007B                     ?_utoa:
   944                           	opt callstack 0
   945  00007B                     ___flmul@aexp:
   946                           	opt callstack 0
   947  00007B                     ctoa@fp:
   948                           	opt callstack 0
   949  00007B                     utoa@fp:
   950                           	opt callstack 0
   951                           
   952                           ; 2 bytes @ 0x1B
   953  00007B                     	ds	1
   954  00007C                     ___flmul@grs:
   955                           	opt callstack 0
   956                           
   957                           ; 4 bytes @ 0x1C
   958  00007C                     	ds	1
   959  00007D                     ??_floorf:
   960  00007D                     ctoa@c:
   961                           	opt callstack 0
   962  00007D                     utoa@d:
   963                           	opt callstack 0
   964                           
   965                           ; 8 bytes @ 0x1D
   966  00007D                     	ds	1
   967  00007E                     ctoa@w:
   968                           	opt callstack 0
   969                           
   970                           ; 2 bytes @ 0x1E
   971  00007E                     	ds	2
   972  000080                     ___flmul@bexp:
   973                           	opt callstack 0
   974                           
   975                           ; 1 bytes @ 0x20
   976  000080                     	ds	1
   977  000081                     ___flmul@prod:
   978                           	opt callstack 0
   979                           
   980                           ; 4 bytes @ 0x21
   981  000081                     	ds	2
   982  000083                     floorf@m:
   983                           	opt callstack 0
   984                           
   985                           ; 4 bytes @ 0x23
   986  000083                     	ds	2
   987  000085                     ??_utoa:
   988  000085                     ___flmul@temp:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x25
   992  000085                     	ds	2
   993  000087                     ?___fladd:
   994                           	opt callstack 0
   995  000087                     ?___fltol:
   996                           	opt callstack 0
   997  000087                     floorf@e:
   998                           	opt callstack 0
   999  000087                     ___flge@ff1:
  1000                           	opt callstack 0
  1001  000087                     ___fltol@f1:
  1002                           	opt callstack 0
  1003  000087                     ___fladd@b:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x27
  1007  000087                     	ds	2
  1008  000089                     floorf@u:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x29
  1012  000089                     	ds	2
  1013  00008B                     ??___fltol:
  1014  00008B                     ___flge@ff2:
  1015                           	opt callstack 0
  1016  00008B                     ___fladd@a:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 4 bytes @ 0x2B
  1020  00008B                     	ds	2
  1021  00008D                     utoa@p:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x2D
  1025  00008D                     	ds	2
  1026  00008F                     ??___fladd:
  1027  00008F                     ??___flge:
  1028  00008F                     ___fltol@sign1:
  1029                           	opt callstack 0
  1030  00008F                     utoa@w:
  1031                           	opt callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x2F
  1034  00008F                     	ds	1
  1035  000090                     ___fltol@exp1:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x30
  1039  000090                     	ds	1
  1040  000091                     utoa@n:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 8 bytes @ 0x31
  1044  000091                     	ds	2
  1045  000093                     ___fladd@signs:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x33
  1049  000093                     	ds	1
  1050  000094                     ___fladd@aexp:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x34
  1054  000094                     	ds	1
  1055  000095                     ___fladd@bexp:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x35
  1059  000095                     	ds	1
  1060  000096                     ___fladd@grs:
  1061                           	opt callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x36
  1064  000096                     	ds	1
  1065  000097                     ?___flsub:
  1066                           	opt callstack 0
  1067  000097                     fijarVelocidad@DC:
  1068                           	opt callstack 0
  1069  000097                     ___flsub@b:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x37
  1073  000097                     	ds	2
  1074  000099                     utoa@i:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x39
  1078  000099                     	ds	2
  1079  00009B                     ___flsub@a:
  1080                           	opt callstack 0
  1081  00009B                     _fijarVelocidad$2262:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x3B
  1085  00009B                     	ds	4
  1086  00009F                     ?_efgtoa:
  1087                           	opt callstack 0
  1088  00009F                     fijarVelocidad@speed:
  1089                           	opt callstack 0
  1090  00009F                     efgtoa@fp:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x3F
  1094  00009F                     	ds	1
  1095  0000A0                     ??_rutinaEscape:
  1096                           
  1097                           ; 1 bytes @ 0x40
  1098  0000A0                     	ds	1
  1099  0000A1                     efgtoa@f:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x41
  1103  0000A1                     	ds	1
  1104  0000A2                     rutinaEscape@type:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x42
  1108  0000A2                     	ds	3
  1109  0000A5                     efgtoa@c:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x45
  1113  0000A5                     	ds	1
  1114  0000A6                     ??_efgtoa:
  1115                           
  1116                           ; 1 bytes @ 0x46
  1117  0000A6                     	ds	5
  1118  0000AB                     efgtoa@ou:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x4B
  1122  0000AB                     	ds	4
  1123  0000AF                     _efgtoa$1411:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x4F
  1127  0000AF                     	ds	2
  1128  0000B1                     _efgtoa$1412:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x51
  1132  0000B1                     	ds	2
  1133  0000B3                     _efgtoa$1416:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x53
  1137  0000B3                     	ds	2
  1138  0000B5                     _efgtoa$1420:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x55
  1142  0000B5                     	ds	2
  1143  0000B7                     _efgtoa$1421:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x57
  1147  0000B7                     	ds	2
  1148  0000B9                     _efgtoa$1422:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x59
  1152  0000B9                     	ds	2
  1153  0000BB                     efgtoa@t:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x5B
  1157  0000BB                     	ds	2
  1158  0000BD                     efgtoa@pp:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x5D
  1162  0000BD                     	ds	2
  1163  0000BF                     efgtoa@m:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x5F
  1167  0000BF                     	ds	2
  1168  0000C1                     efgtoa@ne:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x61
  1172  0000C1                     	ds	2
  1173  0000C3                     efgtoa@d:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x63
  1177  0000C3                     	ds	2
  1178  0000C5                     efgtoa@sign:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x65
  1182  0000C5                     	ds	2
  1183  0000C7                     efgtoa@p:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x67
  1187  0000C7                     	ds	2
  1188  0000C9                     efgtoa@nmode:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x69
  1192  0000C9                     	ds	1
  1193  0000CA                     efgtoa@w:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x6A
  1197  0000CA                     	ds	2
  1198  0000CC                     efgtoa@mode:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 1 bytes @ 0x6C
  1202  0000CC                     	ds	1
  1203  0000CD                     efgtoa@h:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x6D
  1207  0000CD                     	ds	4
  1208  0000D1                     efgtoa@l:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x71
  1212  0000D1                     	ds	4
  1213  0000D5                     efgtoa@i:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x75
  1217  0000D5                     	ds	2
  1218  0000D7                     efgtoa@g:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x77
  1222  0000D7                     	ds	4
  1223  0000DB                     efgtoa@e:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x7B
  1227  0000DB                     	ds	2
  1228  0000DD                     efgtoa@n:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x7D
  1232  0000DD                     	ds	2
  1233  0000DF                     efgtoa@u:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x7F
  1237  0000DF                     	ds	4
  1238  0000E3                     ?_vfpfcnvrt:
  1239                           	opt callstack 0
  1240  0000E3                     vfpfcnvrt@fp:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x83
  1244  0000E3                     	ds	2
  1245  0000E5                     vfpfcnvrt@fmt:
  1246                           	opt callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x85
  1249  0000E5                     	ds	2
  1250  0000E7                     vfpfcnvrt@ap:
  1251                           	opt callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x87
  1254  0000E7                     	ds	2
  1255  0000E9                     ??_vfpfcnvrt:
  1256                           
  1257                           ; 1 bytes @ 0x89
  1258  0000E9                     	ds	4
  1259  0000ED                     vfprintf@cfmt:
  1260                           	opt callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x8D
  1263  0000ED                     	ds	2
  1264  0000EF                     
  1265                           ; 1 bytes @ 0x8F
  1266  0000EF                     	ds	2
  1267  0000F1                     sprintf@ap:
  1268                           	opt callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x91
  1271  0000F1                     	ds	2
  1272  0000F3                     sprintf@f:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 6 bytes @ 0x93
  1276  0000F3                     	ds	6
  1277  0000F9                     ??_terminal:
  1278                           
  1279                           ; 1 bytes @ 0x99
  1280  0000F9                     	ds	5
  1281  0000FE                     
  1282                           ; 1 bytes @ 0x9E
  1283                           
  1284                           	psect	cstackCOMRAM
  1285  000001                     __pcstackCOMRAM:
  1286                           	opt callstack 0
  1287  000001                     ?i2___awdiv:
  1288                           	opt callstack 0
  1289  000001                     i2___awdiv@dividend:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x0
  1293  000001                     	ds	2
  1294  000003                     i2___awdiv@divisor:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x2
  1298  000003                     	ds	2
  1299  000005                     i2___awdiv@counter:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 1 bytes @ 0x4
  1303  000005                     	ds	1
  1304  000006                     i2___awdiv@sign:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 1 bytes @ 0x5
  1308  000006                     	ds	1
  1309  000007                     i2___awdiv@quotient:
  1310                           	opt callstack 0
  1311                           
  1312                           ; 2 bytes @ 0x6
  1313  000007                     	ds	2
  1314  000009                     ?i2___xxtofl:
  1315                           	opt callstack 0
  1316  000009                     i2___xxtofl@val:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 4 bytes @ 0x8
  1320  000009                     	ds	4
  1321  00000D                     ??i2___xxtofl:
  1322                           
  1323                           ; 1 bytes @ 0xC
  1324  00000D                     	ds	4
  1325  000011                     i2___xxtofl@sign:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 1 bytes @ 0x10
  1329  000011                     	ds	1
  1330  000012                     i2___xxtofl@exp:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 1 bytes @ 0x11
  1334  000012                     	ds	1
  1335  000013                     i2___xxtofl@arg:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 4 bytes @ 0x12
  1339  000013                     	ds	4
  1340  000017                     ?i2___fladd:
  1341                           	opt callstack 0
  1342  000017                     i2___fladd@b:
  1343                           	opt callstack 0
  1344                           
  1345                           ; 4 bytes @ 0x16
  1346  000017                     	ds	4
  1347  00001B                     i2___fladd@a:
  1348                           	opt callstack 0
  1349                           
  1350                           ; 4 bytes @ 0x1A
  1351  00001B                     	ds	4
  1352  00001F                     ??i2___fladd:
  1353                           
  1354                           ; 1 bytes @ 0x1E
  1355  00001F                     	ds	4
  1356  000023                     i2___fladd@signs:
  1357                           	opt callstack 0
  1358                           
  1359                           ; 1 bytes @ 0x22
  1360  000023                     	ds	1
  1361  000024                     i2___fladd@aexp:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x23
  1365  000024                     	ds	1
  1366  000025                     i2___fladd@bexp:
  1367                           	opt callstack 0
  1368                           
  1369                           ; 1 bytes @ 0x24
  1370  000025                     	ds	1
  1371  000026                     i2___fladd@grs:
  1372                           	opt callstack 0
  1373                           
  1374                           ; 1 bytes @ 0x25
  1375  000026                     	ds	1
  1376  000027                     ??_rutina:
  1377                           
  1378                           ; 1 bytes @ 0x26
  1379  000027                     	ds	4
  1380  00002B                     rutina@dato:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 1 bytes @ 0x2A
  1384  00002B                     	ds	1
  1385                           
  1386 ;;
  1387 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1388 ;;
  1389 ;; *************** function _main *****************
  1390 ;; Defined at:
  1391 ;;		line 91 in file "auto.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;		None
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  texto           8   69[BANK1 ] unsigned char [8]
  1396 ;;  text            6   63[BANK1 ] unsigned char [6]
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1407 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1409 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1410 ;;Total ram usage:       14 bytes
  1411 ;; Hardware stack levels required when called:   11
  1412 ;; This function calls:
  1413 ;;		_PWMServo
  1414 ;;		_configuracionInicial
  1415 ;;		_enviarRS232
  1416 ;;		_rutinaEscape
  1417 ;;		_sprintf
  1418 ;;		_terminal
  1419 ;; This function is called by:
  1420 ;;		Startup code after reset
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text0
  1425  00399E                     __ptext0:
  1426                           	opt callstack 0
  1427  00399E                     _main:
  1428                           	opt callstack 20
  1429                           
  1430                           ;auto.c: 92:     unsigned char text[] = "HOLA!";
  1431                           
  1432                           ;incstack = 0
  1433  00399E  EE21  F0BF         	lfsr	2,main@F7115
  1434  0039A2  EE11  F0B1         	lfsr	1,main@text
  1435  0039A6  0E05               	movlw	5
  1436  0039A8                     u9601:
  1437  0039A8  CFDB FFE3          	movff	plusw2,plusw1
  1438  0039AC  06E8               	decf	wreg,f,c
  1439  0039AE  E2FC               	bc	u9601
  1440                           
  1441                           ;auto.c: 93:     unsigned char texto[8] = {'\0'};
  1442  0039B0  EE21  F0B7         	lfsr	2,main@texto
  1443  0039B4  0E07               	movlw	7
  1444  0039B6                     u9611:
  1445  0039B6  6ADE               	clrf	postinc2,c
  1446  0039B8  06E8               	decf	wreg,f,c
  1447  0039BA  E2FD               	bc	u9611
  1448                           
  1449                           ;auto.c: 94:     configuracionInicial();
  1450  0039BC  EC33  F022         	call	_configuracionInicial	;wreg free
  1451                           
  1452                           ;auto.c: 95:     enviarRS232(text);
  1453  0039C0  0EB1               	movlw	low main@text
  1454  0039C2  0100               	movlb	0	; () banked
  1455  0039C4  6F68               	movwf	enviarRS232@valores& (0+255),b
  1456  0039C6  0E01               	movlw	high main@text
  1457  0039C8  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1458  0039CA  ECCC  F01E         	call	_enviarRS232	;wreg free
  1459  0039CE                     l7573:
  1460                           
  1461                           ;auto.c: 97:         if(bandera == 1){
  1462  0039CE  0101               	movlb	1	; () banked
  1463  0039D0  0521               	decf	_bandera& (0+255),w,b
  1464  0039D2  A4D8               	btfss	status,2,c
  1465  0039D4  D008               	goto	l7579
  1466                           
  1467                           ; BSR set to: 1
  1468                           ;auto.c: 98:             bandera = 0;
  1469  0039D6  0E00               	movlw	0
  1470  0039D8  6F21               	movwf	_bandera& (0+255),b
  1471                           
  1472                           ; BSR set to: 1
  1473                           ;auto.c: 99:             terminal(datos);
  1474  0039DA  0E44               	movlw	low _datos
  1475  0039DC  6F98               	movwf	terminal@comand& (0+255),b
  1476  0039DE  0E00               	movlw	high _datos
  1477  0039E0  6F99               	movwf	(terminal@comand+1)& (0+255),b
  1478  0039E2  EC79  F017         	call	_terminal	;wreg free
  1479  0039E6                     l7579:
  1480                           
  1481                           ;auto.c: 101:         if(bandera_servo == 1){
  1482  0039E6  0101               	movlb	1	; () banked
  1483  0039E8  0520               	decf	_bandera_servo& (0+255),w,b
  1484  0039EA  A4D8               	btfss	status,2,c
  1485  0039EC  D004               	goto	l7585
  1486                           
  1487                           ; BSR set to: 1
  1488                           ;auto.c: 102:             bandera_servo = 0;
  1489  0039EE  0E00               	movlw	0
  1490  0039F0  6F20               	movwf	_bandera_servo& (0+255),b
  1491                           
  1492                           ; BSR set to: 1
  1493                           ;auto.c: 103:             PWMServo();
  1494  0039F2  EC69  F021         	call	_PWMServo	;wreg free
  1495  0039F6                     l7585:
  1496                           
  1497                           ;auto.c: 105:         if(obstaculo == 1){
  1498  0039F6  0101               	movlb	1	; () banked
  1499  0039F8  051F               	decf	_obstaculo& (0+255),w,b
  1500  0039FA  A4D8               	btfss	status,2,c
  1501  0039FC  D005               	goto	l7591
  1502                           
  1503                           ; BSR set to: 1
  1504                           ;auto.c: 106:             obstaculo = 0;
  1505  0039FE  0E00               	movlw	0
  1506  003A00  6F1F               	movwf	_obstaculo& (0+255),b
  1507                           
  1508                           ; BSR set to: 1
  1509                           ;auto.c: 107:             rutinaEscape(2);
  1510  003A02  0E02               	movlw	2
  1511  003A04  EC40  F01F         	call	_rutinaEscape
  1512  003A08                     l7591:
  1513                           
  1514                           ;auto.c: 109:         if(bandera_distancia == 1){
  1515  003A08  0101               	movlb	1	; () banked
  1516  003A0A  051E               	decf	_bandera_distancia& (0+255),w,b
  1517  003A0C  A4D8               	btfss	status,2,c
  1518  003A0E  D7DF               	goto	l7573
  1519                           
  1520                           ; BSR set to: 1
  1521                           ;auto.c: 110:             bandera_distancia = 0;
  1522  003A10  0E00               	movlw	0
  1523  003A12  6F1E               	movwf	_bandera_distancia& (0+255),b
  1524                           
  1525                           ; BSR set to: 1
  1526                           ;auto.c: 111:             sprintf(texto,"%03.1f cm",distancia);
  1527  003A14  0EB7               	movlw	low main@texto
  1528  003A16  6F90               	movwf	sprintf@s& (0+255),b
  1529  003A18  0E01               	movlw	high main@texto
  1530  003A1A  6F91               	movwf	(sprintf@s+1)& (0+255),b
  1531  003A1C  0E77               	movlw	low STR_1
  1532  003A1E  6F92               	movwf	sprintf@fmt& (0+255),b
  1533  003A20  0E0F               	movlw	high STR_1
  1534  003A22  6F93               	movwf	(sprintf@fmt+1)& (0+255),b
  1535  003A24  C034  F194         	movff	_distancia,?_sprintf+4
  1536  003A28  C035  F195         	movff	_distancia+1,?_sprintf+5
  1537  003A2C  C036  F196         	movff	_distancia+2,?_sprintf+6
  1538  003A30  C037  F197         	movff	_distancia+3,?_sprintf+7
  1539  003A34  EC42  F020         	call	_sprintf	;wreg free
  1540                           
  1541                           ;auto.c: 112:             enviarRS232(texto);
  1542  003A38  0EB7               	movlw	low main@texto
  1543  003A3A  0100               	movlb	0	; () banked
  1544  003A3C  6F68               	movwf	enviarRS232@valores& (0+255),b
  1545  003A3E  0E01               	movlw	high main@texto
  1546  003A40  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1547  003A42  ECCC  F01E         	call	_enviarRS232	;wreg free
  1548  003A46  D7C3               	goto	l7573
  1549  003A48                     __end_of_main:
  1550                           	opt callstack 0
  1551                           
  1552 ;; *************** function _terminal *****************
  1553 ;; Defined at:
  1554 ;;		line 127 in file "auto.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  comand          2   38[BANK1 ] PTR unsigned char 
  1557 ;;		 -> datos(10), 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  texto          20   40[BANK1 ] unsigned char [20]
  1560 ;;  medicion        2   60[BANK1 ] unsigned int 
  1561 ;;  degree          1   62[BANK1 ] unsigned char 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1571 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1572 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1573 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1574 ;;      Totals:         0       5      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1575 ;;Total ram usage:       30 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:   10
  1578 ;; This function calls:
  1579 ;;		_adelante
  1580 ;;		_atras
  1581 ;;		_cambiarPWM
  1582 ;;		_dirreccion
  1583 ;;		_encenderMotor
  1584 ;;		_enviarRS232
  1585 ;;		_estadoDirreccion
  1586 ;;		_fijarVelocidad
  1587 ;;		_frenarMotor
  1588 ;;		_sprintf
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text1
  1595  002EF2                     __ptext1:
  1596                           	opt callstack 0
  1597  002EF2                     _terminal:
  1598                           	opt callstack 20
  1599                           
  1600                           ;auto.c: 129:     unsigned char degree;;auto.c: 130:     unsigned char texto[20] = {'\0'
      +                          };
  1601                           
  1602                           ;incstack = 0
  1603  002EF2  EE21  F09A         	lfsr	2,terminal@texto
  1604  002EF6  0E13               	movlw	19
  1605  002EF8                     u9571:
  1606  002EF8  6ADE               	clrf	postinc2,c
  1607  002EFA  06E8               	decf	wreg,f,c
  1608  002EFC  E2FD               	bc	u9571
  1609                           
  1610                           ;auto.c: 131:     TXREG2 = 0x55;
  1611  002EFE  0E55               	movlw	85
  1612  002F00  6EA9               	movwf	4009,c	;volatile
  1613                           
  1614                           ;auto.c: 132:     switch (comand[0]){
  1615  002F02  D084               	goto	l7521
  1616  002F04                     l7491:
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;auto.c: 134:             adelante();
  1620  002F04  EC80  F022         	call	_adelante	;wreg free
  1621                           
  1622                           ;auto.c: 135:             encenderMotor();
  1623  002F08  EC67  F022         	call	_encenderMotor	;wreg free
  1624                           
  1625                           ;auto.c: 136:             enviarRS232("Motores encendidos!");
  1626  002F0C  0E63               	movlw	low STR_2
  1627  002F0E  0100               	movlb	0	; () banked
  1628  002F10  6F68               	movwf	enviarRS232@valores& (0+255),b
  1629  002F12  0E0F               	movlw	high STR_2
  1630  002F14  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1631  002F16  ECCC  F01E         	call	_enviarRS232	;wreg free
  1632                           
  1633                           ;auto.c: 137:             break;
  1634  002F1A  0012               	return	
  1635  002F1C                     l7497:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;auto.c: 139:             atras();
  1639  002F1C  EC7B  F022         	call	_atras	;wreg free
  1640                           
  1641                           ;auto.c: 140:             encenderMotor();
  1642  002F20  EC67  F022         	call	_encenderMotor	;wreg free
  1643                           
  1644                           ;auto.c: 141:             enviarRS232("Vehiculo en reversa!");
  1645  002F24  0E4E               	movlw	low STR_3
  1646  002F26  0100               	movlb	0	; () banked
  1647  002F28  6F68               	movwf	enviarRS232@valores& (0+255),b
  1648  002F2A  0E0F               	movlw	high STR_3
  1649  002F2C  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1650  002F2E  ECCC  F01E         	call	_enviarRS232	;wreg free
  1651                           
  1652                           ;auto.c: 142:             break;
  1653  002F32  0012               	return	
  1654  002F34                     l7503:
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;auto.c: 144:             degree = estadoDirreccion(2);
  1658  002F34  0E02               	movlw	2
  1659  002F36  EC12  F020         	call	_estadoDirreccion
  1660  002F3A  0101               	movlb	1	; () banked
  1661  002F3C  6FB0               	movwf	terminal@degree& (0+255),b
  1662                           
  1663                           ;auto.c: 145:             dirreccion(degree);
  1664  002F3E  51B0               	movf	terminal@degree& (0+255),w,b
  1665  002F40  EC78  F01F         	call	_dirreccion
  1666                           
  1667                           ;auto.c: 146:             break;
  1668  002F44  0012               	return	
  1669  002F46                     l7505:
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;auto.c: 148:             degree = estadoDirreccion(1);
  1673  002F46  0E01               	movlw	1
  1674  002F48  EC12  F020         	call	_estadoDirreccion
  1675  002F4C  0101               	movlb	1	; () banked
  1676  002F4E  6FB0               	movwf	terminal@degree& (0+255),b
  1677                           
  1678                           ;auto.c: 149:             dirreccion(degree);
  1679  002F50  51B0               	movf	terminal@degree& (0+255),w,b
  1680  002F52  EC78  F01F         	call	_dirreccion
  1681                           
  1682                           ;auto.c: 150:             break;
  1683  002F56  0012               	return	
  1684  002F58                     l7507:
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;auto.c: 152:             frenarMotor();
  1688  002F58  EC57  F022         	call	_frenarMotor	;wreg free
  1689                           
  1690                           ;auto.c: 153:             break;
  1691  002F5C  0012               	return	
  1692  002F5E                     l7509:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;auto.c: 155:             medicion = (comand[1] - 0x30)*100 + (comand[2] - 0x30)*10 + co
      +                          mand[3] - 0x30;
  1696  002F5E  0101               	movlb	1	; () banked
  1697  002F60  EE20 F001          	lfsr	2,1
  1698  002F64  5198               	movf	terminal@comand& (0+255),w,b
  1699  002F66  26D9               	addwf	fsr2l,f,c
  1700  002F68  5199               	movf	(terminal@comand+1)& (0+255),w,b
  1701  002F6A  22DA               	addwfc	fsr2h,f,c
  1702  002F6C  50DF               	movf	indf2,w,c
  1703  002F6E  0100               	movlb	0	; () banked
  1704  002F70  6FF9               	movwf	??_terminal& (0+255),b
  1705  002F72  51F9               	movf	??_terminal& (0+255),w,b
  1706  002F74  0D64               	mullw	100
  1707  002F76  CFF3 F0FA          	movff	prodl,??_terminal+1
  1708  002F7A  CFF4 F0FB          	movff	prodh,??_terminal+2
  1709  002F7E  0101               	movlb	1	; () banked
  1710  002F80  EE20 F002          	lfsr	2,2
  1711  002F84  5198               	movf	terminal@comand& (0+255),w,b
  1712  002F86  26D9               	addwf	fsr2l,f,c
  1713  002F88  5199               	movf	(terminal@comand+1)& (0+255),w,b
  1714  002F8A  22DA               	addwfc	fsr2h,f,c
  1715  002F8C  50DF               	movf	indf2,w,c
  1716  002F8E  0100               	movlb	0	; () banked
  1717  002F90  6FFC               	movwf	(??_terminal+3)& (0+255),b
  1718  002F92  51FC               	movf	(??_terminal+3)& (0+255),w,b
  1719  002F94  0D0A               	mullw	10
  1720  002F96  50F3               	movf	prodl,w,c
  1721  002F98  27FA               	addwf	(??_terminal+1)& (0+255),f,b
  1722  002F9A  50F4               	movf	prodh,w,c
  1723  002F9C  23FB               	addwfc	(??_terminal+2)& (0+255),f,b
  1724  002F9E  0101               	movlb	1	; () banked
  1725  002FA0  EE20 F003          	lfsr	2,3
  1726  002FA4  5198               	movf	terminal@comand& (0+255),w,b
  1727  002FA6  26D9               	addwf	fsr2l,f,c
  1728  002FA8  5199               	movf	(terminal@comand+1)& (0+255),w,b
  1729  002FAA  22DA               	addwfc	fsr2h,f,c
  1730  002FAC  50DF               	movf	indf2,w,c
  1731  002FAE  0100               	movlb	0	; () banked
  1732  002FB0  6FFD               	movwf	(??_terminal+4)& (0+255),b
  1733  002FB2  51FD               	movf	(??_terminal+4)& (0+255),w,b
  1734  002FB4  27FA               	addwf	(??_terminal+1)& (0+255),f,b
  1735  002FB6  0E00               	movlw	0
  1736  002FB8  23FB               	addwfc	(??_terminal+2)& (0+255),f,b
  1737  002FBA  0E30               	movlw	48
  1738  002FBC  25FA               	addwf	(??_terminal+1)& (0+255),w,b
  1739  002FBE  0101               	movlb	1	; () banked
  1740  002FC0  6FAE               	movwf	terminal@medicion& (0+255),b
  1741  002FC2  0EEB               	movlw	235
  1742  002FC4  0100               	movlb	0	; () banked
  1743  002FC6  21FB               	addwfc	(??_terminal+2)& (0+255),w,b
  1744  002FC8  0101               	movlb	1	; () banked
  1745  002FCA  6FAF               	movwf	(terminal@medicion+1)& (0+255),b
  1746                           
  1747                           ; BSR set to: 1
  1748                           ;auto.c: 156:             fijarVelocidad(medicion);
  1749  002FCC  51AE               	movf	terminal@medicion& (0+255),w,b
  1750  002FCE  EC14  F01A         	call	_fijarVelocidad
  1751                           
  1752                           ;auto.c: 157:             cambiarPWM();
  1753  002FD2  EC75  F022         	call	_cambiarPWM	;wreg free
  1754                           
  1755                           ;auto.c: 158:             sprintf(texto, "Velocidad fijada al: %03u%c", medicion, '%');
  1756  002FD6  0E9A               	movlw	low terminal@texto
  1757  002FD8  0101               	movlb	1	; () banked
  1758  002FDA  6F90               	movwf	sprintf@s& (0+255),b
  1759  002FDC  0E01               	movlw	high terminal@texto
  1760  002FDE  6F91               	movwf	(sprintf@s+1)& (0+255),b
  1761  002FE0  0E32               	movlw	low STR_4
  1762  002FE2  6F92               	movwf	sprintf@fmt& (0+255),b
  1763  002FE4  0E0F               	movlw	high STR_4
  1764  002FE6  6F93               	movwf	(sprintf@fmt+1)& (0+255),b
  1765  002FE8  C1AE  F194         	movff	terminal@medicion,?_sprintf+4
  1766  002FEC  C1AF  F195         	movff	terminal@medicion+1,?_sprintf+5
  1767  002FF0  0E00               	movlw	0
  1768  002FF2  6F97               	movwf	(?_sprintf+7)& (0+255),b
  1769  002FF4  0E25               	movlw	37
  1770  002FF6  6F96               	movwf	(?_sprintf+6)& (0+255),b
  1771  002FF8  EC42  F020         	call	_sprintf	;wreg free
  1772                           
  1773                           ;auto.c: 159:             enviarRS232(texto);
  1774  002FFC  0E9A               	movlw	low terminal@texto
  1775  002FFE  0100               	movlb	0	; () banked
  1776  003000  6F68               	movwf	enviarRS232@valores& (0+255),b
  1777  003002  0E01               	movlw	high terminal@texto
  1778  003004  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1779  003006  ECCC  F01E         	call	_enviarRS232	;wreg free
  1780                           
  1781                           ;auto.c: 160:             break;
  1782  00300A  0012               	return	
  1783  00300C                     l7521:
  1784  00300C  C198  FFD9         	movff	terminal@comand,fsr2l
  1785  003010  C199  FFDA         	movff	terminal@comand+1,fsr2h
  1786  003014  50DF               	movf	indf2,w,c
  1787  003016  0100               	movlb	0	; () banked
  1788  003018  6FF9               	movwf	??_terminal& (0+255),b
  1789  00301A  6BFA               	clrf	(??_terminal+1)& (0+255),b
  1790                           
  1791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1792                           ; Switch size 1, requested type "simple"
  1793                           ; Number of cases is 1, Range of values is 0 to 0
  1794                           ; switch strategies available:
  1795                           ; Name         Instructions Cycles
  1796                           ; simple_byte            4     3 (average)
  1797                           ;	Chosen strategy is simple_byte
  1798  00301C  51FA               	movf	(??_terminal+1)& (0+255),w,b
  1799  00301E  0A00               	xorlw	0	; case 0
  1800  003020  A4D8               	btfss	status,2,c
  1801  003022  0012               	return	
  1802                           
  1803                           ; BSR set to: 0
  1804                           ; Switch size 1, requested type "simple"
  1805                           ; Number of cases is 6, Range of values is 70 to 119
  1806                           ; switch strategies available:
  1807                           ; Name         Instructions Cycles
  1808                           ; simple_byte           19    10 (average)
  1809                           ;	Chosen strategy is simple_byte
  1810  003024  51F9               	movf	??_terminal& (0+255),w,b
  1811  003026  0A46               	xorlw	70	; case 70
  1812  003028  B4D8               	btfsc	status,2,c
  1813  00302A  D799               	goto	l7509
  1814  00302C  0A27               	xorlw	39	; case 97
  1815  00302E  B4D8               	btfsc	status,2,c
  1816  003030  D781               	goto	l7503
  1817  003032  0A02               	xorlw	2	; case 99
  1818  003034  B4D8               	btfsc	status,2,c
  1819  003036  D790               	goto	l7507
  1820  003038  0A07               	xorlw	7	; case 100
  1821  00303A  B4D8               	btfsc	status,2,c
  1822  00303C  D784               	goto	l7505
  1823  00303E  0A17               	xorlw	23	; case 115
  1824  003040  B4D8               	btfsc	status,2,c
  1825  003042  D76C               	goto	l7497
  1826  003044  0A04               	xorlw	4	; case 119
  1827  003046  A4D8               	btfss	status,2,c
  1828  003048  0012               	return	
  1829  00304A  D75C               	goto	l7491
  1830  00304C                     __end_of_terminal:
  1831                           	opt callstack 0
  1832                           
  1833 ;; *************** function _sprintf *****************
  1834 ;; Defined at:
  1835 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  s               2   30[BANK1 ] PTR unsigned char 
  1838 ;;		 -> terminal@texto(20), main@texto(8), 
  1839 ;;  fmt             2   32[BANK1 ] PTR const unsigned char 
  1840 ;;		 -> STR_4(28), STR_1(10), 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  f               6  147[BANK0 ] struct _IO_FILE
  1843 ;;  ap              2  145[BANK0 ] PTR void [1]
  1844 ;;		 -> ?_sprintf(2), 
  1845 ;;  ret             2    0        int 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  2   30[BANK1 ] int 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1855 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1856 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;      Totals:         0      10       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;Total ram usage:       18 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    9
  1862 ;; This function calls:
  1863 ;;		_vfprintf
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;;		_terminal
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text2
  1871  004084                     __ptext2:
  1872                           	opt callstack 0
  1873  004084                     _sprintf:
  1874                           	opt callstack 20
  1875                           
  1876                           ;incstack = 0
  1877  004084  0E94               	movlw	low (?_sprintf+4)
  1878  004086  0100               	movlb	0	; () banked
  1879  004088  6FF1               	movwf	sprintf@ap& (0+255),b
  1880  00408A  0E01               	movlw	high (?_sprintf+4)
  1881  00408C  6FF2               	movwf	(sprintf@ap+1)& (0+255),b
  1882  00408E  C190  F0F3         	movff	sprintf@s,sprintf@f
  1883  004092  C191  F0F4         	movff	sprintf@s+1,sprintf@f+1
  1884                           
  1885                           ; BSR set to: 0
  1886  004096  0E00               	movlw	0
  1887  004098  6FF6               	movwf	(sprintf@f+3)& (0+255),b
  1888  00409A  0E00               	movlw	0
  1889  00409C  6FF5               	movwf	(sprintf@f+2)& (0+255),b
  1890                           
  1891                           ; BSR set to: 0
  1892  00409E  0E00               	movlw	0
  1893  0040A0  6FF8               	movwf	(sprintf@f+5)& (0+255),b
  1894  0040A2  0E00               	movlw	0
  1895  0040A4  6FF7               	movwf	(sprintf@f+4)& (0+255),b
  1896                           
  1897                           ; BSR set to: 0
  1898  0040A6  0EF3               	movlw	low sprintf@f
  1899  0040A8  0101               	movlb	1	; () banked
  1900  0040AA  6F8A               	movwf	vfprintf@fp& (0+255),b
  1901  0040AC  0E00               	movlw	high sprintf@f
  1902  0040AE  6F8B               	movwf	(vfprintf@fp+1)& (0+255),b
  1903  0040B0  C192  F18C         	movff	sprintf@fmt,vfprintf@fmt
  1904  0040B4  C193  F18D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1905  0040B8  0EF1               	movlw	low sprintf@ap
  1906  0040BA  6F8E               	movwf	vfprintf@ap& (0+255),b
  1907  0040BC  0E00               	movlw	high sprintf@ap
  1908  0040BE  6F8F               	movwf	(vfprintf@ap+1)& (0+255),b
  1909  0040C0  ECE1  F01F         	call	_vfprintf	;wreg free
  1910  0040C4  0100               	movlb	0	; () banked
  1911  0040C6  51F5               	movf	(sprintf@f+2)& (0+255),w,b
  1912  0040C8  0101               	movlb	1	; () banked
  1913  0040CA  2590               	addwf	sprintf@s& (0+255),w,b
  1914  0040CC  6ED9               	movwf	fsr2l,c
  1915  0040CE  0100               	movlb	0	; () banked
  1916  0040D0  51F6               	movf	(sprintf@f+3)& (0+255),w,b
  1917  0040D2  0101               	movlb	1	; () banked
  1918  0040D4  2191               	addwfc	(sprintf@s+1)& (0+255),w,b
  1919  0040D6  6EDA               	movwf	fsr2h,c
  1920  0040D8  0E00               	movlw	0
  1921  0040DA  6EDF               	movwf	indf2,c
  1922                           
  1923                           ; BSR set to: 1
  1924  0040DC  0012               	return		;funcret
  1925  0040DE                     __end_of_sprintf:
  1926                           	opt callstack 0
  1927                           
  1928 ;; *************** function _vfprintf *****************
  1929 ;; Defined at:
  1930 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  fp              2   24[BANK1 ] PTR struct _IO_FILE
  1933 ;;		 -> sprintf@f(6), 
  1934 ;;  fmt             2   26[BANK1 ] PTR const unsigned char 
  1935 ;;		 -> STR_4(28), STR_1(10), 
  1936 ;;  ap              2   28[BANK1 ] PTR PTR void 
  1937 ;;		 -> sprintf@ap(2), 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  cfmt            2  141[BANK0 ] PTR unsigned char 
  1940 ;;		 -> STR_4(28), STR_1(10), 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  2   24[BANK1 ] int 
  1943 ;; Registers used:
  1944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1950 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1951 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1953 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1954 ;;Total ram usage:        8 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    8
  1957 ;; This function calls:
  1958 ;;		_vfpfcnvrt
  1959 ;; This function is called by:
  1960 ;;		_sprintf
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text3
  1965  003FC2                     __ptext3:
  1966                           	opt callstack 0
  1967  003FC2                     _vfprintf:
  1968                           	opt callstack 20
  1969                           
  1970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1971                           
  1972                           ; BSR set to: 1
  1973                           ;incstack = 0
  1974  003FC2  C18C  F0ED         	movff	vfprintf@fmt,vfprintf@cfmt
  1975  003FC6  C18D  F0EE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1976                           
  1977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1978  003FCA  0E00               	movlw	0
  1979  003FCC  0101               	movlb	1	; () banked
  1980  003FCE  6F1D               	movwf	(_nout+1)& (0+255),b
  1981  003FD0  0E00               	movlw	0
  1982  003FD2  6F1C               	movwf	_nout& (0+255),b
  1983                           
  1984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1985  003FD4  D017               	goto	l7283
  1986  003FD6                     l7281:
  1987                           
  1988                           ; BSR set to: 1
  1989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1990  003FD6  C18A  F0E3         	movff	vfprintf@fp,vfpfcnvrt@fp
  1991  003FDA  C18B  F0E4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1992  003FDE  0EED               	movlw	low vfprintf@cfmt
  1993  003FE0  0100               	movlb	0	; () banked
  1994  003FE2  6FE5               	movwf	vfpfcnvrt@fmt& (0+255),b
  1995  003FE4  0E00               	movlw	high vfprintf@cfmt
  1996  003FE6  6FE6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1997  003FE8  C18E  F0E7         	movff	vfprintf@ap,vfpfcnvrt@ap
  1998  003FEC  C18F  F0E8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1999  003FF0  EC91  F00C         	call	_vfpfcnvrt	;wreg free
  2000  003FF4  0100               	movlb	0	; () banked
  2001  003FF6  51E3               	movf	?_vfpfcnvrt& (0+255),w,b
  2002  003FF8  0101               	movlb	1	; () banked
  2003  003FFA  271C               	addwf	_nout& (0+255),f,b
  2004  003FFC  0100               	movlb	0	; () banked
  2005  003FFE  51E4               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2006  004000  0101               	movlb	1	; () banked
  2007  004002  231D               	addwfc	(_nout+1)& (0+255),f,b
  2008  004004                     l7283:
  2009                           
  2010                           ; BSR set to: 1
  2011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2012  004004  C0ED  FFF6         	movff	vfprintf@cfmt,tblptrl
  2013  004008  C0EE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2014  00400C                     	if	0	;tblptru may be non-zero
  2015  00400C                     	endif
  2016  00400C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2017  00400C  0E00               	movlw	low (__mediumconst shr (0+16))
  2018  00400E  6EF8               	movwf	tblptru,c
  2019  004010                     	endif
  2020  004010  0008               	tblrd		*
  2021  004012  50F5               	movf	tablat,w,c
  2022  004014  0900               	iorlw	0
  2023  004016  A4D8               	btfss	status,2,c
  2024  004018  D7DE               	goto	l7281
  2025                           
  2026                           ; BSR set to: 1
  2027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2028  00401A  C11C  F18A         	movff	_nout,?_vfprintf
  2029  00401E  C11D  F18B         	movff	_nout+1,?_vfprintf+1
  2030                           
  2031                           ; BSR set to: 1
  2032  004022  0012               	return		;funcret
  2033  004024                     __end_of_vfprintf:
  2034                           	opt callstack 0
  2035                           
  2036 ;; *************** function _vfpfcnvrt *****************
  2037 ;; Defined at:
  2038 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  fp              2  131[BANK0 ] PTR struct _IO_FILE
  2041 ;;		 -> sprintf@f(6), 
  2042 ;;  fmt             2  133[BANK0 ] PTR PTR unsigned char 
  2043 ;;		 -> vfprintf@cfmt(2), 
  2044 ;;  ap              2  135[BANK0 ] PTR PTR void 
  2045 ;;		 -> sprintf@ap(2), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  llu             8    0[BANK1 ] unsigned long long 
  2048 ;;  ll              8    0        long long 
  2049 ;;  f               4   16[BANK1 ] long long 
  2050 ;;  ct              3   20[BANK1 ] unsigned char [3]
  2051 ;;  vp              3    0        PTR void 
  2052 ;;  cp              3    0        PTR unsigned char 
  2053 ;;  done            2    8[BANK1 ] int 
  2054 ;;  i               2    0        int 
  2055 ;;  c               1   23[BANK1 ] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  2  131[BANK0 ] int 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2065 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2066 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2067 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2068 ;;      Totals:         0      10      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;Total ram usage:       34 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    7
  2072 ;; This function calls:
  2073 ;;		_atoi
  2074 ;;		_ctoa
  2075 ;;		_efgtoa
  2076 ;;		_fputc
  2077 ;;		_isdigit
  2078 ;;		_isupper
  2079 ;;		_strncmp
  2080 ;;		_tolower
  2081 ;;		_utoa
  2082 ;; This function is called by:
  2083 ;;		_vfprintf
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text4
  2088  001922                     __ptext4:
  2089                           	opt callstack 0
  2090  001922                     _vfpfcnvrt:
  2091                           	opt callstack 20
  2092                           
  2093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2094                           
  2095                           ; BSR set to: 1
  2096                           ;incstack = 0
  2097  001922  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2098  001926  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2099  00192A  CFDE FFF6          	movff	postinc2,tblptrl
  2100  00192E  CFDD FFF7          	movff	postdec2,tblptrh
  2101  001932                     	if	0	;tblptru may be non-zero
  2102  001932                     	endif
  2103  001932                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2104  001932  0E00               	movlw	low (__mediumconst shr (0+16))
  2105  001934  6EF8               	movwf	tblptru,c
  2106  001936                     	endif
  2107  001936  0008               	tblrd		*
  2108  001938  50F5               	movf	tablat,w,c
  2109  00193A  0A25               	xorlw	37
  2110  00193C  A4D8               	btfss	status,2,c
  2111  00193E  D308               	goto	l7239
  2112                           
  2113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2114  001940  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2115  001944  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2116  001948  2ADE               	incf	postinc2,f,c
  2117  00194A  0E00               	movlw	0
  2118  00194C  22DD               	addwfc	postdec2,f,c
  2119                           
  2120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2121  00194E  0E00               	movlw	0
  2122  001950  6E39               	movwf	_width+1,c
  2123  001952  0E00               	movlw	0
  2124  001954  6E38               	movwf	_width,c
  2125  001956  C038  F03C         	movff	_width,_flags
  2126  00195A  C039  F03D         	movff	_width+1,_flags+1
  2127                           
  2128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2129  00195E  683A               	setf	_prec,c
  2130  001960  683B               	setf	_prec+1,c
  2131                           
  2132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2133  001962  0E00               	movlw	0
  2134  001964  0101               	movlb	1	; () banked
  2135  001966  6F7B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2136  001968  0E00               	movlw	0
  2137  00196A  D015               	goto	L1
  2138  00196C                     l7101:
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2142  00196C  803C               	bsf	_flags,0,c
  2143  00196E                     l7103:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2147  00196E  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2148  001972  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2149  001976  2ADE               	incf	postinc2,f,c
  2150  001978  0E00               	movlw	0
  2151  00197A  22DD               	addwfc	postdec2,f,c
  2152                           
  2153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2154  00197C  D032               	goto	l7127
  2155  00197E                     l7105:
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2159  00197E  823C               	bsf	_flags,1,c
  2160  001980  D7F6               	goto	l7103
  2161  001982                     l7109:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2165  001982  843C               	bsf	_flags,2,c
  2166  001984  D7F4               	goto	l7103
  2167  001986                     l7113:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2171  001986  863C               	bsf	_flags,3,c
  2172  001988  D7F2               	goto	l7103
  2173  00198A                     l7117:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2177  00198A  883C               	bsf	_flags,4,c
  2178  00198C  D7F0               	goto	l7103
  2179  00198E                     l7121:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2183  00198E  0E00               	movlw	0
  2184  001990  0101               	movlb	1	; () banked
  2185  001992  6F7B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2186  001994  0E01               	movlw	1
  2187  001996                     L1:
  2188  001996  6F7A               	movwf	vfpfcnvrt@done& (0+255),b
  2189                           
  2190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2191  001998  D024               	goto	l7127
  2192  00199A                     l7125:
  2193                           
  2194                           ; BSR set to: 1
  2195  00199A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2196  00199E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2197  0019A2  CFDE FFF6          	movff	postinc2,tblptrl
  2198  0019A6  CFDD FFF7          	movff	postdec2,tblptrh
  2199  0019AA                     	if	0	;tblptru may be non-zero
  2200  0019AA                     	endif
  2201  0019AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2202  0019AA  0E00               	movlw	low (__mediumconst shr (0+16))
  2203  0019AC  6EF8               	movwf	tblptru,c
  2204  0019AE                     	endif
  2205  0019AE  0008               	tblrd		*
  2206  0019B0  50F5               	movf	tablat,w,c
  2207  0019B2  0100               	movlb	0	; () banked
  2208  0019B4  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2209  0019B6  6BEA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2210                           
  2211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2212                           ; Switch size 1, requested type "simple"
  2213                           ; Number of cases is 1, Range of values is 0 to 0
  2214                           ; switch strategies available:
  2215                           ; Name         Instructions Cycles
  2216                           ; simple_byte            4     3 (average)
  2217                           ;	Chosen strategy is simple_byte
  2218  0019B8  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2219  0019BA  0A00               	xorlw	0	; case 0
  2220  0019BC  A4D8               	btfss	status,2,c
  2221  0019BE  D7E7               	goto	l7121
  2222                           
  2223                           ; BSR set to: 0
  2224                           ; Switch size 1, requested type "simple"
  2225                           ; Number of cases is 5, Range of values is 32 to 48
  2226                           ; switch strategies available:
  2227                           ; Name         Instructions Cycles
  2228                           ; simple_byte           16     9 (average)
  2229                           ;	Chosen strategy is simple_byte
  2230  0019C0  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2231  0019C2  0A20               	xorlw	32	; case 32
  2232  0019C4  B4D8               	btfsc	status,2,c
  2233  0019C6  D7DF               	goto	l7113
  2234  0019C8  0A03               	xorlw	3	; case 35
  2235  0019CA  B4D8               	btfsc	status,2,c
  2236  0019CC  D7DE               	goto	l7117
  2237  0019CE  0A08               	xorlw	8	; case 43
  2238  0019D0  B4D8               	btfsc	status,2,c
  2239  0019D2  D7D7               	goto	l7109
  2240  0019D4  0A06               	xorlw	6	; case 45
  2241  0019D6  B4D8               	btfsc	status,2,c
  2242  0019D8  D7C9               	goto	l7101
  2243  0019DA  0A1D               	xorlw	29	; case 48
  2244  0019DC  B4D8               	btfsc	status,2,c
  2245  0019DE  D7CF               	goto	l7105
  2246  0019E0  D7D6               	goto	l7121
  2247  0019E2                     l7127:
  2248                           
  2249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2250  0019E2  0101               	movlb	1	; () banked
  2251  0019E4  517A               	movf	vfpfcnvrt@done& (0+255),w,b
  2252  0019E6  117B               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2253  0019E8  B4D8               	btfsc	status,2,c
  2254  0019EA  D7D7               	goto	l7125
  2255                           
  2256                           ; BSR set to: 1
  2257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2258  0019EC  B03C               	btfsc	_flags,0,c
  2259                           
  2260                           ; BSR set to: 1
  2261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2262  0019EE  923C               	bcf	_flags,1,c
  2263                           
  2264                           ; BSR set to: 1
  2265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2266  0019F0  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2267  0019F4  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2268  0019F8  CFDE FFF6          	movff	postinc2,tblptrl
  2269  0019FC  CFDD FFF7          	movff	postdec2,tblptrh
  2270  001A00                     	if	0	;tblptru may be non-zero
  2271  001A00                     	endif
  2272  001A00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2273  001A00  0E00               	movlw	low (__mediumconst shr (0+16))
  2274  001A02  6EF8               	movwf	tblptru,c
  2275  001A04                     	endif
  2276  001A04  0008               	tblrd		*
  2277  001A06  50F5               	movf	tablat,w,c
  2278  001A08  0A2A               	xorlw	42
  2279  001A0A  A4D8               	btfss	status,2,c
  2280  001A0C  D023               	goto	l7139
  2281                           
  2282                           ; BSR set to: 1
  2283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2284  001A0E  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2285  001A12  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2286  001A16  2ADE               	incf	postinc2,f,c
  2287  001A18  0E00               	movlw	0
  2288  001A1A  22DD               	addwfc	postdec2,f,c
  2289                           
  2290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2291  001A1C  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2292  001A20  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2293  001A24  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2294  001A28  0E02               	movlw	2
  2295  001A2A  26DE               	addwf	postinc2,f,c
  2296  001A2C  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2297  001A30  0E00               	movlw	0
  2298  001A32  22DD               	addwfc	postdec2,f,c
  2299  001A34  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2300  001A38  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2301  001A3C  CFDE F038          	movff	postinc2,_width
  2302  001A40  CFDD F039          	movff	postdec2,_width+1
  2303                           
  2304                           ; BSR set to: 1
  2305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2306  001A44  AE39               	btfss	_width+1,7,c
  2307  001A46  D043               	goto	u9200
  2308                           
  2309                           ; BSR set to: 1
  2310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2311  001A48  803C               	bsf	_flags,0,c
  2312                           
  2313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2314  001A4A  6C38               	negf	_width,c
  2315  001A4C  1E39               	comf	_width+1,f,c
  2316  001A4E  B0D8               	btfsc	status,0,c
  2317  001A50  2A39               	incf	_width+1,f,c
  2318  001A52  D03D               	goto	u9200
  2319  001A54                     l7139:
  2320                           
  2321                           ; BSR set to: 1
  2322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2323  001A54  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2324  001A58  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2325  001A5C  CFDE F067          	movff	postinc2,atoi@s
  2326  001A60  CFDD F068          	movff	postdec2,atoi@s+1
  2327  001A64  EC26  F018         	call	_atoi	;wreg free
  2328  001A68  C067  F038         	movff	?_atoi,_width
  2329  001A6C  C068  F039         	movff	?_atoi+1,_width+1
  2330                           
  2331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2332  001A70  D007               	goto	l7143
  2333  001A72                     l7141:
  2334                           
  2335                           ; BSR set to: 1
  2336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2337  001A72  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2338  001A76  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2339  001A7A  2ADE               	incf	postinc2,f,c
  2340  001A7C  0E00               	movlw	0
  2341  001A7E  22DD               	addwfc	postdec2,f,c
  2342  001A80                     l7143:
  2343  001A80  0ED0               	movlw	208
  2344  001A82  0100               	movlb	0	; () banked
  2345  001A84  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2346  001A86  0EFF               	movlw	255
  2347  001A88  6FEA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2348  001A8A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2349  001A8E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2350  001A92  CFDE FFF6          	movff	postinc2,tblptrl
  2351  001A96  CFDD FFF7          	movff	postdec2,tblptrh
  2352  001A9A                     	if	0	;tblptru may be non-zero
  2353  001A9A                     	endif
  2354  001A9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2355  001A9A  0E00               	movlw	low (__mediumconst shr (0+16))
  2356  001A9C  6EF8               	movwf	tblptru,c
  2357  001A9E                     	endif
  2358  001A9E  0008               	tblrd		*
  2359  001AA0  50F5               	movf	tablat,w,c
  2360  001AA2  6FEB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2361  001AA4  6BEC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2362  001AA6  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2363  001AA8  27EB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2364  001AAA  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2365  001AAC  23EC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2366  001AAE  51EC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2367  001AB0  E106               	bnz	u9180
  2368  001AB2  0E0A               	movlw	10
  2369  001AB4  5DEB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2370  001AB6  B0D8               	btfsc	status,0,c
  2371  001AB8  D002               	goto	u9180
  2372  001ABA  0E01               	movlw	1
  2373  001ABC  D001               	goto	u9190
  2374  001ABE                     u9180:
  2375  001ABE  0E00               	movlw	0
  2376  001AC0                     u9190:
  2377  001AC0  0101               	movlb	1	; () banked
  2378  001AC2  6F7C               	movwf	_vfpfcnvrt$1443& (0+255),b
  2379  001AC4  6B7D               	clrf	(_vfpfcnvrt$1443+1)& (0+255),b
  2380                           
  2381                           ; BSR set to: 1
  2382  001AC6  517C               	movf	_vfpfcnvrt$1443& (0+255),w,b
  2383  001AC8  117D               	iorwf	(_vfpfcnvrt$1443+1)& (0+255),w,b
  2384  001ACA  A4D8               	btfss	status,2,c
  2385  001ACC  D7D2               	goto	l7141
  2386  001ACE                     u9200:
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2390  001ACE  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2391  001AD2  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2392  001AD6  CFDE FFF6          	movff	postinc2,tblptrl
  2393  001ADA  CFDD FFF7          	movff	postdec2,tblptrh
  2394  001ADE                     	if	0	;tblptru may be non-zero
  2395  001ADE                     	endif
  2396  001ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2397  001ADE  0E00               	movlw	low (__mediumconst shr (0+16))
  2398  001AE0  6EF8               	movwf	tblptru,c
  2399  001AE2                     	endif
  2400  001AE2  0008               	tblrd		*
  2401  001AE4  50F5               	movf	tablat,w,c
  2402  001AE6  0A2E               	xorlw	46
  2403  001AE8  A4D8               	btfss	status,2,c
  2404  001AEA  D073               	goto	u9250
  2405                           
  2406                           ; BSR set to: 1
  2407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2408  001AEC  0E00               	movlw	0
  2409  001AEE  6E3B               	movwf	_prec+1,c
  2410  001AF0  0E00               	movlw	0
  2411  001AF2  6E3A               	movwf	_prec,c
  2412                           
  2413                           ; BSR set to: 1
  2414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2415  001AF4  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2416  001AF8  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2417  001AFC  2ADE               	incf	postinc2,f,c
  2418  001AFE  0E00               	movlw	0
  2419  001B00  22DD               	addwfc	postdec2,f,c
  2420                           
  2421                           ; BSR set to: 1
  2422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2423  001B02  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2424  001B06  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2425  001B0A  CFDE FFF6          	movff	postinc2,tblptrl
  2426  001B0E  CFDD FFF7          	movff	postdec2,tblptrh
  2427  001B12                     	if	0	;tblptru may be non-zero
  2428  001B12                     	endif
  2429  001B12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2430  001B12  0E00               	movlw	low (__mediumconst shr (0+16))
  2431  001B14  6EF8               	movwf	tblptru,c
  2432  001B16                     	endif
  2433  001B16  0008               	tblrd		*
  2434  001B18  50F5               	movf	tablat,w,c
  2435  001B1A  0A2A               	xorlw	42
  2436  001B1C  A4D8               	btfss	status,2,c
  2437  001B1E  D01C               	goto	l7159
  2438                           
  2439                           ; BSR set to: 1
  2440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2441  001B20  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2442  001B24  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2443  001B28  2ADE               	incf	postinc2,f,c
  2444  001B2A  0E00               	movlw	0
  2445  001B2C  22DD               	addwfc	postdec2,f,c
  2446                           
  2447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2448  001B2E  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2449  001B32  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2450  001B36  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2451  001B3A  0E02               	movlw	2
  2452  001B3C  26DE               	addwf	postinc2,f,c
  2453  001B3E  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2454  001B42  0E00               	movlw	0
  2455  001B44  22DD               	addwfc	postdec2,f,c
  2456  001B46  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2457  001B4A  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2458  001B4E  CFDE F03A          	movff	postinc2,_prec
  2459  001B52  CFDD F03B          	movff	postdec2,_prec+1
  2460                           
  2461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2462  001B56  D03D               	goto	u9250
  2463  001B58                     l7159:
  2464                           
  2465                           ; BSR set to: 1
  2466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2467  001B58  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2468  001B5C  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2469  001B60  CFDE F067          	movff	postinc2,atoi@s
  2470  001B64  CFDD F068          	movff	postdec2,atoi@s+1
  2471  001B68  EC26  F018         	call	_atoi	;wreg free
  2472  001B6C  C067  F03A         	movff	?_atoi,_prec
  2473  001B70  C068  F03B         	movff	?_atoi+1,_prec+1
  2474                           
  2475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2476  001B74  D007               	goto	l7163
  2477  001B76                     l7161:
  2478                           
  2479                           ; BSR set to: 1
  2480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2481  001B76  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2482  001B7A  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2483  001B7E  2ADE               	incf	postinc2,f,c
  2484  001B80  0E00               	movlw	0
  2485  001B82  22DD               	addwfc	postdec2,f,c
  2486  001B84                     l7163:
  2487  001B84  0ED0               	movlw	208
  2488  001B86  0100               	movlb	0	; () banked
  2489  001B88  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2490  001B8A  0EFF               	movlw	255
  2491  001B8C  6FEA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2492  001B8E  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2493  001B92  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2494  001B96  CFDE FFF6          	movff	postinc2,tblptrl
  2495  001B9A  CFDD FFF7          	movff	postdec2,tblptrh
  2496  001B9E                     	if	0	;tblptru may be non-zero
  2497  001B9E                     	endif
  2498  001B9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2499  001B9E  0E00               	movlw	low (__mediumconst shr (0+16))
  2500  001BA0  6EF8               	movwf	tblptru,c
  2501  001BA2                     	endif
  2502  001BA2  0008               	tblrd		*
  2503  001BA4  50F5               	movf	tablat,w,c
  2504  001BA6  6FEB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2505  001BA8  6BEC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2506  001BAA  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2507  001BAC  27EB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2508  001BAE  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2509  001BB0  23EC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2510  001BB2  51EC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2511  001BB4  E106               	bnz	u9230
  2512  001BB6  0E0A               	movlw	10
  2513  001BB8  5DEB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2514  001BBA  B0D8               	btfsc	status,0,c
  2515  001BBC  D002               	goto	u9230
  2516  001BBE  0E01               	movlw	1
  2517  001BC0  D001               	goto	u9240
  2518  001BC2                     u9230:
  2519  001BC2  0E00               	movlw	0
  2520  001BC4                     u9240:
  2521  001BC4  0101               	movlb	1	; () banked
  2522  001BC6  6F7E               	movwf	_vfpfcnvrt$1444& (0+255),b
  2523  001BC8  6B7F               	clrf	(_vfpfcnvrt$1444+1)& (0+255),b
  2524                           
  2525                           ; BSR set to: 1
  2526  001BCA  517E               	movf	_vfpfcnvrt$1444& (0+255),w,b
  2527  001BCC  117F               	iorwf	(_vfpfcnvrt$1444+1)& (0+255),w,b
  2528  001BCE  A4D8               	btfss	status,2,c
  2529  001BD0  D7D2               	goto	l7161
  2530  001BD2                     u9250:
  2531                           
  2532                           ; BSR set to: 1
  2533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2534  001BD2  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2535  001BD6  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2536  001BDA  CFDE FFF6          	movff	postinc2,tblptrl
  2537  001BDE  CFDD FFF7          	movff	postdec2,tblptrh
  2538  001BE2                     	if	0	;tblptru may be non-zero
  2539  001BE2                     	endif
  2540  001BE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2541  001BE2  0E00               	movlw	low (__mediumconst shr (0+16))
  2542  001BE4  6EF8               	movwf	tblptru,c
  2543  001BE6                     	endif
  2544  001BE6  0008               	tblrd		*
  2545  001BE8  50F5               	movf	tablat,w,c
  2546  001BEA  0100               	movlb	0	; () banked
  2547  001BEC  6F66               	movwf	tolower@c& (0+255),b
  2548  001BEE  6B67               	clrf	(tolower@c+1)& (0+255),b
  2549  001BF0  ECC3  F020         	call	_tolower	;wreg free
  2550  001BF4  0100               	movlb	0	; () banked
  2551  001BF6  5166               	movf	?_tolower& (0+255),w,b
  2552  001BF8  0101               	movlb	1	; () banked
  2553  001BFA  6F86               	movwf	vfpfcnvrt@ct& (0+255),b
  2554                           
  2555                           ; BSR set to: 1
  2556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2557  001BFC  5186               	movf	vfpfcnvrt@ct& (0+255),w,b
  2558  001BFE  B4D8               	btfsc	status,2,c
  2559  001C00  D03D               	goto	l7179
  2560                           
  2561                           ; BSR set to: 1
  2562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2563  001C02  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2564  001C06  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2565  001C0A  CFDE F0E9          	movff	postinc2,??_vfpfcnvrt
  2566  001C0E  CFDD F0EA          	movff	postdec2,??_vfpfcnvrt+1
  2567  001C12  0E01               	movlw	1
  2568  001C14  0100               	movlb	0	; () banked
  2569  001C16  27E9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2570  001C18  0E00               	movlw	0
  2571  001C1A  23EA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2572  001C1C  C0E9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2573  001C20  C0EA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2574  001C24                     	if	0	;tblptru may be non-zero
  2575  001C24                     	endif
  2576  001C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2577  001C24  0E00               	movlw	low (__mediumconst shr (0+16))
  2578  001C26  6EF8               	movwf	tblptru,c
  2579  001C28                     	endif
  2580  001C28  0008               	tblrd		*
  2581  001C2A  50F5               	movf	tablat,w,c
  2582  001C2C  6F66               	movwf	tolower@c& (0+255),b
  2583  001C2E  6B67               	clrf	(tolower@c+1)& (0+255),b
  2584  001C30  ECC3  F020         	call	_tolower	;wreg free
  2585  001C34  0100               	movlb	0	; () banked
  2586  001C36  5166               	movf	?_tolower& (0+255),w,b
  2587  001C38  0101               	movlb	1	; () banked
  2588  001C3A  6F87               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2589                           
  2590                           ; BSR set to: 1
  2591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2592  001C3C  5187               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2593  001C3E  B4D8               	btfsc	status,2,c
  2594  001C40  D01D               	goto	l7179
  2595                           
  2596                           ; BSR set to: 1
  2597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2598  001C42  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2599  001C46  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2600  001C4A  CFDE F0E9          	movff	postinc2,??_vfpfcnvrt
  2601  001C4E  CFDD F0EA          	movff	postdec2,??_vfpfcnvrt+1
  2602  001C52  0E02               	movlw	2
  2603  001C54  0100               	movlb	0	; () banked
  2604  001C56  27E9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2605  001C58  0E00               	movlw	0
  2606  001C5A  23EA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2607  001C5C  C0E9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2608  001C60  C0EA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2609  001C64                     	if	0	;tblptru may be non-zero
  2610  001C64                     	endif
  2611  001C64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2612  001C64  0E00               	movlw	low (__mediumconst shr (0+16))
  2613  001C66  6EF8               	movwf	tblptru,c
  2614  001C68                     	endif
  2615  001C68  0008               	tblrd		*
  2616  001C6A  50F5               	movf	tablat,w,c
  2617  001C6C  6F66               	movwf	tolower@c& (0+255),b
  2618  001C6E  6B67               	clrf	(tolower@c+1)& (0+255),b
  2619  001C70  ECC3  F020         	call	_tolower	;wreg free
  2620  001C74  0100               	movlb	0	; () banked
  2621  001C76  5166               	movf	?_tolower& (0+255),w,b
  2622  001C78  0101               	movlb	1	; () banked
  2623  001C7A  6F88               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2624  001C7C                     l7179:
  2625                           
  2626                           ; BSR set to: 1
  2627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  2628  001C7C  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2629  001C80  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2630  001C84  CFDE FFF6          	movff	postinc2,tblptrl
  2631  001C88  CFDD FFF7          	movff	postdec2,tblptrh
  2632  001C8C                     	if	0	;tblptru may be non-zero
  2633  001C8C                     	endif
  2634  001C8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2635  001C8C  0E00               	movlw	low (__mediumconst shr (0+16))
  2636  001C8E  6EF8               	movwf	tblptru,c
  2637  001C90                     	endif
  2638  001C90  0008               	tblrd		*
  2639  001C92  50F5               	movf	tablat,w,c
  2640  001C94  0A63               	xorlw	99
  2641  001C96  A4D8               	btfss	status,2,c
  2642  001C98  D026               	goto	l7187
  2643                           
  2644                           ; BSR set to: 1
  2645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  2646  001C9A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2647  001C9E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2648  001CA2  2ADE               	incf	postinc2,f,c
  2649  001CA4  0E00               	movlw	0
  2650  001CA6  22DD               	addwfc	postdec2,f,c
  2651                           
  2652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2653  001CA8  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2654  001CAC  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2655  001CB0  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2656  001CB4  0E02               	movlw	2
  2657  001CB6  26DE               	addwf	postinc2,f,c
  2658  001CB8  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2659  001CBC  0E00               	movlw	0
  2660  001CBE  22DD               	addwfc	postdec2,f,c
  2661  001CC0  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2662  001CC4  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2663  001CC8  50DF               	movf	indf2,w,c
  2664  001CCA  6F89               	movwf	vfpfcnvrt@c& (0+255),b
  2665                           
  2666                           ; BSR set to: 1
  2667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  2668  001CCC  C0E3  F07B         	movff	vfpfcnvrt@fp,ctoa@fp
  2669  001CD0  C0E4  F07C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2670  001CD4  C189  F07D         	movff	vfpfcnvrt@c,ctoa@c
  2671  001CD8  EC9A  F020         	call	_ctoa	;wreg free
  2672  001CDC  C07B  F0E3         	movff	?_ctoa,?_vfpfcnvrt
  2673  001CE0  C07C  F0E4         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2674  001CE4  0012               	return	
  2675  001CE6                     l7187:
  2676                           
  2677                           ; BSR set to: 1
  2678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2679  001CE6  0E66               	movlw	102
  2680  001CE8  1986               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2681  001CEA  A4D8               	btfss	status,2,c
  2682  001CEC  D041               	goto	l7199
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2686  001CEE  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2687  001CF2  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2688  001CF6  CFDE FFF6          	movff	postinc2,tblptrl
  2689  001CFA  CFDD FFF7          	movff	postdec2,tblptrh
  2690  001CFE                     	if	0	;tblptru may be non-zero
  2691  001CFE                     	endif
  2692  001CFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2693  001CFE  0E00               	movlw	low (__mediumconst shr (0+16))
  2694  001D00  6EF8               	movwf	tblptru,c
  2695  001D02                     	endif
  2696  001D02  0008               	tblrd		*
  2697  001D04  CFF5 F189          	movff	tablat,vfpfcnvrt@c
  2698                           
  2699                           ; BSR set to: 1
  2700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2701  001D08  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2702  001D0C  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2703  001D10  2ADE               	incf	postinc2,f,c
  2704  001D12  0E00               	movlw	0
  2705  001D14  22DD               	addwfc	postdec2,f,c
  2706                           
  2707                           ; BSR set to: 1
  2708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2709  001D16  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2710  001D1A  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2711  001D1E  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2712  001D22  0E04               	movlw	4
  2713  001D24  26DE               	addwf	postinc2,f,c
  2714  001D26  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2715  001D2A  0E00               	movlw	0
  2716  001D2C  22DD               	addwfc	postdec2,f,c
  2717  001D2E  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2718  001D32  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2719  001D36  CFDE F182          	movff	postinc2,vfpfcnvrt@f
  2720  001D3A  CFDE F183          	movff	postinc2,vfpfcnvrt@f+1
  2721  001D3E  CFDE F184          	movff	postinc2,vfpfcnvrt@f+2
  2722  001D42  CFDE F185          	movff	postinc2,vfpfcnvrt@f+3
  2723  001D46                     l7195:
  2724                           
  2725                           ; BSR set to: 1
  2726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2727  001D46  C0E3  F09F         	movff	vfpfcnvrt@fp,efgtoa@fp
  2728  001D4A  C0E4  F0A0         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2729  001D4E  C182  F0A1         	movff	vfpfcnvrt@f,efgtoa@f
  2730  001D52  C183  F0A2         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2731  001D56  C184  F0A3         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2732  001D5A  C185  F0A4         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2733  001D5E  C189  F0A5         	movff	vfpfcnvrt@c,efgtoa@c
  2734  001D62  ECCF  F007         	call	_efgtoa	;wreg free
  2735  001D66  C09F  F0E3         	movff	?_efgtoa,?_vfpfcnvrt
  2736  001D6A  C0A0  F0E4         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2737  001D6E  0012               	return	
  2738  001D70                     l7199:
  2739                           
  2740                           ; BSR set to: 1
  2741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2742  001D70  0E86               	movlw	low vfpfcnvrt@ct
  2743  001D72  0100               	movlb	0	; () banked
  2744  001D74  6F60               	movwf	strncmp@_l& (0+255),b
  2745  001D76  0E01               	movlw	high vfpfcnvrt@ct
  2746  001D78  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2747  001D7A  0E99               	movlw	low STR_15
  2748  001D7C  6F62               	movwf	strncmp@_r& (0+255),b
  2749  001D7E  0E0F               	movlw	high STR_15
  2750  001D80  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2751  001D82  0E00               	movlw	0
  2752  001D84  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2753  001D86  0E02               	movlw	2
  2754  001D88  6F64               	movwf	strncmp@n& (0+255),b
  2755  001D8A  EC77  F01C         	call	_strncmp	;wreg free
  2756  001D8E  0100               	movlb	0	; () banked
  2757  001D90  5160               	movf	?_strncmp& (0+255),w,b
  2758  001D92  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2759  001D94  A4D8               	btfss	status,2,c
  2760  001D96  D05A               	goto	l7215
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2764  001D98  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2765  001D9C  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2766  001DA0  CFDE F0E9          	movff	postinc2,??_vfpfcnvrt
  2767  001DA4  CFDD F0EA          	movff	postdec2,??_vfpfcnvrt+1
  2768  001DA8  0E01               	movlw	1
  2769  001DAA  27E9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2770  001DAC  0E00               	movlw	0
  2771  001DAE  23EA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2772  001DB0  C0E9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2773  001DB4  C0EA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2774  001DB8                     	if	0	;tblptru may be non-zero
  2775  001DB8                     	endif
  2776  001DB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2777  001DB8  0E00               	movlw	low (__mediumconst shr (0+16))
  2778  001DBA  6EF8               	movwf	tblptru,c
  2779  001DBC                     	endif
  2780  001DBC  0008               	tblrd		*
  2781  001DBE  CFF5 F189          	movff	tablat,vfpfcnvrt@c
  2782  001DC2  0EBF               	movlw	191
  2783  001DC4  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2784  001DC6  0EFF               	movlw	255
  2785  001DC8  6FEA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2786  001DCA  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2787  001DCE  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2788  001DD2  CFDE FFF6          	movff	postinc2,tblptrl
  2789  001DD6  CFDD FFF7          	movff	postdec2,tblptrh
  2790  001DDA                     	if	0	;tblptru may be non-zero
  2791  001DDA                     	endif
  2792  001DDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2793  001DDA  0E00               	movlw	low (__mediumconst shr (0+16))
  2794  001DDC  6EF8               	movwf	tblptru,c
  2795  001DDE                     	endif
  2796  001DDE  0008               	tblrd		*
  2797  001DE0  50F5               	movf	tablat,w,c
  2798  001DE2  6FEB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2799  001DE4  6BEC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2800  001DE6  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2801  001DE8  27EB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2802  001DEA  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2803  001DEC  23EC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2804  001DEE  51EC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2805  001DF0  E106               	bnz	u9310
  2806  001DF2  0E1A               	movlw	26
  2807  001DF4  5DEB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2808  001DF6  B0D8               	btfsc	status,0,c
  2809  001DF8  D002               	goto	u9310
  2810  001DFA  0E01               	movlw	1
  2811  001DFC  D001               	goto	u9320
  2812  001DFE                     u9310:
  2813  001DFE  0E00               	movlw	0
  2814  001E00                     u9320:
  2815  001E00  0101               	movlb	1	; () banked
  2816  001E02  6F80               	movwf	_vfpfcnvrt$1449& (0+255),b
  2817  001E04  6B81               	clrf	(_vfpfcnvrt$1449+1)& (0+255),b
  2818                           
  2819                           ; BSR set to: 1
  2820  001E06  5180               	movf	_vfpfcnvrt$1449& (0+255),w,b
  2821  001E08  1181               	iorwf	(_vfpfcnvrt$1449+1)& (0+255),w,b
  2822                           
  2823                           ; BSR set to: 1
  2824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2825                           
  2826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2827                           
  2828                           ; BSR set to: 1
  2829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2830  001E0A  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2831  001E0E  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2832  001E12  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2833  001E16  0E04               	movlw	4
  2834  001E18  26DE               	addwf	postinc2,f,c
  2835  001E1A  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2836  001E1E  0E00               	movlw	0
  2837  001E20  22DD               	addwfc	postdec2,f,c
  2838  001E22  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2839  001E26  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2840  001E2A  CFDE F182          	movff	postinc2,vfpfcnvrt@f
  2841  001E2E  CFDE F183          	movff	postinc2,vfpfcnvrt@f+1
  2842  001E32  CFDE F184          	movff	postinc2,vfpfcnvrt@f+2
  2843  001E36  CFDE F185          	movff	postinc2,vfpfcnvrt@f+3
  2844                           
  2845                           ; BSR set to: 1
  2846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2847                           
  2848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  2849  001E3A  0E02               	movlw	2
  2850  001E3C  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2851  001E40  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2852  001E44  26DE               	addwf	postinc2,f,c
  2853  001E46  0E00               	movlw	0
  2854  001E48  22DD               	addwfc	postdec2,f,c
  2855  001E4A  D77D               	goto	l7195
  2856  001E4C                     l7215:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  2860  001E4C  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2861  001E50  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2862  001E54  CFDE FFF6          	movff	postinc2,tblptrl
  2863  001E58  CFDD FFF7          	movff	postdec2,tblptrh
  2864  001E5C                     	if	0	;tblptru may be non-zero
  2865  001E5C                     	endif
  2866  001E5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2867  001E5C  0E00               	movlw	low (__mediumconst shr (0+16))
  2868  001E5E  6EF8               	movwf	tblptru,c
  2869  001E60                     	endif
  2870  001E60  0008               	tblrd		*
  2871  001E62  50F5               	movf	tablat,w,c
  2872  001E64  0A75               	xorlw	117
  2873  001E66  A4D8               	btfss	status,2,c
  2874  001E68  D041               	goto	l7223
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  2878  001E6A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2879  001E6E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2880  001E72  2ADE               	incf	postinc2,f,c
  2881  001E74  0E00               	movlw	0
  2882  001E76  22DD               	addwfc	postdec2,f,c
  2883                           
  2884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2885  001E78  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2886  001E7C  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2887  001E80  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2888  001E84  0E02               	movlw	2
  2889  001E86  26DE               	addwf	postinc2,f,c
  2890  001E88  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2891  001E8C  0E00               	movlw	0
  2892  001E8E  22DD               	addwfc	postdec2,f,c
  2893  001E90  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2894  001E94  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2895  001E98  CFDE F0EB          	movff	postinc2,??_vfpfcnvrt+2
  2896  001E9C  CFDD F0EC          	movff	postdec2,??_vfpfcnvrt+3
  2897  001EA0  C0EB  F172         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2898  001EA4  C0EC  F173         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2899  001EA8  0101               	movlb	1	; () banked
  2900  001EAA  6B74               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2901  001EAC  6B75               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2902  001EAE  6B76               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2903  001EB0  6B77               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2904  001EB2  6B78               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2905  001EB4  6B79               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2906                           
  2907                           ; BSR set to: 1
  2908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  2909  001EB6  C0E3  F07B         	movff	vfpfcnvrt@fp,utoa@fp
  2910  001EBA  C0E4  F07C         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2911  001EBE  C172  F07D         	movff	vfpfcnvrt@llu,utoa@d
  2912  001EC2  C173  F07E         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2913  001EC6  C174  F07F         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2914  001ECA  C175  F080         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2915  001ECE  C176  F081         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2916  001ED2  C177  F082         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2917  001ED6  C178  F083         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2918  001EDA  C179  F084         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2919  001EDE  EC9E  F016         	call	_utoa	;wreg free
  2920  001EE2  C07B  F0E3         	movff	?_utoa,?_vfpfcnvrt
  2921  001EE6  C07C  F0E4         	movff	?_utoa+1,?_vfpfcnvrt+1
  2922  001EEA  0012               	return	
  2923  001EEC                     l7223:
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2927  001EEC  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2928  001EF0  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2929  001EF4  CFDE FFF6          	movff	postinc2,tblptrl
  2930  001EF8  CFDD FFF7          	movff	postdec2,tblptrh
  2931  001EFC                     	if	0	;tblptru may be non-zero
  2932  001EFC                     	endif
  2933  001EFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2934  001EFC  0E00               	movlw	low (__mediumconst shr (0+16))
  2935  001EFE  6EF8               	movwf	tblptru,c
  2936  001F00                     	endif
  2937  001F00  0008               	tblrd		*
  2938  001F02  50F5               	movf	tablat,w,c
  2939  001F04  0A25               	xorlw	37
  2940  001F06  A4D8               	btfss	status,2,c
  2941  001F08  D017               	goto	l7233
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2945  001F0A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2946  001F0E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2947  001F12  2ADE               	incf	postinc2,f,c
  2948  001F14  0E00               	movlw	0
  2949  001F16  22DD               	addwfc	postdec2,f,c
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2953  001F18  0E00               	movlw	0
  2954  001F1A  6F61               	movwf	(fputc@c+1)& (0+255),b
  2955  001F1C  0E25               	movlw	37
  2956  001F1E  6F60               	movwf	fputc@c& (0+255),b
  2957  001F20  C0E3  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2958  001F24  C0E4  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2959  001F28  EC24  F01D         	call	_fputc	;wreg free
  2960  001F2C                     l7229:
  2961                           
  2962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2963  001F2C  0E00               	movlw	0
  2964  001F2E  0100               	movlb	0	; () banked
  2965  001F30  6FE4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2966  001F32  0E01               	movlw	1
  2967  001F34  6FE3               	movwf	?_vfpfcnvrt& (0+255),b
  2968  001F36  0012               	return	
  2969  001F38                     l7233:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2973  001F38  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2974  001F3C  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2975  001F40  2ADE               	incf	postinc2,f,c
  2976  001F42  0E00               	movlw	0
  2977  001F44  22DD               	addwfc	postdec2,f,c
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2981  001F46  0E00               	movlw	0
  2982  001F48  6FE4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2983  001F4A  0E00               	movlw	0
  2984  001F4C  6FE3               	movwf	?_vfpfcnvrt& (0+255),b
  2985  001F4E  0012               	return	
  2986  001F50                     l7239:
  2987                           
  2988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2989  001F50  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2990  001F54  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2991  001F58  CFDE FFF6          	movff	postinc2,tblptrl
  2992  001F5C  CFDD FFF7          	movff	postdec2,tblptrh
  2993  001F60                     	if	0	;tblptru may be non-zero
  2994  001F60                     	endif
  2995  001F60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2996  001F60  0E00               	movlw	low (__mediumconst shr (0+16))
  2997  001F62  6EF8               	movwf	tblptru,c
  2998  001F64                     	endif
  2999  001F64  0008               	tblrd		*
  3000  001F66  50F5               	movf	tablat,w,c
  3001  001F68  0100               	movlb	0	; () banked
  3002  001F6A  6F60               	movwf	fputc@c& (0+255),b
  3003  001F6C  6B61               	clrf	(fputc@c+1)& (0+255),b
  3004  001F6E  C0E3  F062         	movff	vfpfcnvrt@fp,fputc@fp
  3005  001F72  C0E4  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3006  001F76  EC24  F01D         	call	_fputc	;wreg free
  3007                           
  3008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3009  001F7A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3010  001F7E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3011  001F82  2ADE               	incf	postinc2,f,c
  3012  001F84  0E00               	movlw	0
  3013  001F86  22DD               	addwfc	postdec2,f,c
  3014  001F88  D7D1               	goto	l7229
  3015  001F8A                     __end_of_vfpfcnvrt:
  3016                           	opt callstack 0
  3017                           
  3018 ;; *************** function _utoa *****************
  3019 ;; Defined at:
  3020 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  3023 ;;		 -> sprintf@f(6), 
  3024 ;;  d               8   29[BANK0 ] unsigned long long 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  n               8   49[BANK0 ] unsigned long long 
  3027 ;;  i               2   57[BANK0 ] int 
  3028 ;;  w               2   47[BANK0 ] int 
  3029 ;;  p               2   45[BANK0 ] int 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  2   27[BANK0 ] int 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3039 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3040 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3041 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3042 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3043 ;;Total ram usage:       32 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    6
  3046 ;; This function calls:
  3047 ;;		___lodiv
  3048 ;;		___lomod
  3049 ;;		_pad
  3050 ;; This function is called by:
  3051 ;;		_vfpfcnvrt
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text5
  3056  002D3C                     __ptext5:
  3057                           	opt callstack 0
  3058  002D3C                     _utoa:
  3059                           	opt callstack 20
  3060                           
  3061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  3062                           
  3063                           ;incstack = 0
  3064  002D3C  AE3B               	btfss	_prec+1,7,c
  3065                           
  3066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  3067  002D3E  923C               	bcf	_flags,1,c
  3068                           
  3069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  3070  002D40  BE3B               	btfsc	_prec+1,7,c
  3071  002D42  D005               	goto	u8950
  3072  002D44  503B               	movf	_prec+1,w,c
  3073  002D46  E109               	bnz	l451
  3074  002D48  043A               	decf	_prec,w,c
  3075  002D4A  B0D8               	btfsc	status,0,c
  3076  002D4C  D006               	goto	l451
  3077  002D4E                     u8950:
  3078  002D4E  0E00               	movlw	0
  3079  002D50  0100               	movlb	0	; () banked
  3080  002D52  6F8E               	movwf	(utoa@p+1)& (0+255),b
  3081  002D54  0E01               	movlw	1
  3082  002D56  6F8D               	movwf	utoa@p& (0+255),b
  3083  002D58  D004               	goto	l453
  3084  002D5A                     l451:
  3085  002D5A  C03A  F08D         	movff	_prec,utoa@p
  3086  002D5E  C03B  F08E         	movff	_prec+1,utoa@p+1
  3087  002D62                     l453:
  3088                           
  3089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  3090  002D62  C038  F08F         	movff	_width,utoa@w
  3091  002D66  C039  F090         	movff	_width+1,utoa@w+1
  3092                           
  3093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  3094  002D6A  C07D  F091         	movff	utoa@d,utoa@n
  3095  002D6E  C07E  F092         	movff	utoa@d+1,utoa@n+1
  3096  002D72  C07F  F093         	movff	utoa@d+2,utoa@n+2
  3097  002D76  C080  F094         	movff	utoa@d+3,utoa@n+3
  3098  002D7A  C081  F095         	movff	utoa@d+4,utoa@n+4
  3099  002D7E  C082  F096         	movff	utoa@d+5,utoa@n+5
  3100  002D82  C083  F097         	movff	utoa@d+6,utoa@n+6
  3101  002D86  C084  F098         	movff	utoa@d+7,utoa@n+7
  3102                           
  3103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  3104  002D8A  0E00               	movlw	0
  3105  002D8C  0100               	movlb	0	; () banked
  3106  002D8E  6F9A               	movwf	(utoa@i+1)& (0+255),b
  3107  002D90  0E4F               	movlw	79
  3108  002D92  6F99               	movwf	utoa@i& (0+255),b
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  3112  002D94  0E00               	movlw	0
  3113  002D96  0101               	movlb	1	; () banked
  3114  002D98  6F71               	movwf	(_dbuf+79)& (0+255),b
  3115                           
  3116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3117  002D9A  D077               	goto	l7015
  3118  002D9C                     l7005:
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  3122  002D9C  0799               	decf	utoa@i& (0+255),f,b
  3123  002D9E  A0D8               	btfss	status,0,c
  3124  002DA0  079A               	decf	(utoa@i+1)& (0+255),f,b
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  3128  002DA2  0E22               	movlw	low _dbuf
  3129  002DA4  2599               	addwf	utoa@i& (0+255),w,b
  3130  002DA6  6ED9               	movwf	fsr2l,c
  3131  002DA8  0E01               	movlw	high _dbuf
  3132  002DAA  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  3133  002DAC  6EDA               	movwf	fsr2h,c
  3134  002DAE  C091  F060         	movff	utoa@n,___lomod@dividend
  3135  002DB2  C092  F061         	movff	utoa@n+1,___lomod@dividend+1
  3136  002DB6  C093  F062         	movff	utoa@n+2,___lomod@dividend+2
  3137  002DBA  C094  F063         	movff	utoa@n+3,___lomod@dividend+3
  3138  002DBE  C095  F064         	movff	utoa@n+4,___lomod@dividend+4
  3139  002DC2  C096  F065         	movff	utoa@n+5,___lomod@dividend+5
  3140  002DC6  C097  F066         	movff	utoa@n+6,___lomod@dividend+6
  3141  002DCA  C098  F067         	movff	utoa@n+7,___lomod@dividend+7
  3142  002DCE  0E0A               	movlw	10
  3143  002DD0  6F68               	movwf	___lomod@divisor& (0+255),b
  3144  002DD2  0E00               	movlw	0
  3145  002DD4  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  3146  002DD6  0E00               	movlw	0
  3147  002DD8  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  3148  002DDA  0E00               	movlw	0
  3149  002DDC  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  3150  002DDE  0E00               	movlw	0
  3151  002DE0  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  3152  002DE2  0E00               	movlw	0
  3153  002DE4  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  3154  002DE6  0E00               	movlw	0
  3155  002DE8  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  3156  002DEA  0E00               	movlw	0
  3157  002DEC  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  3158  002DEE  EC1F  F01C         	call	___lomod	;wreg free
  3159  002DF2  C060  F085         	movff	?___lomod,??_utoa
  3160  002DF6  C061  F086         	movff	?___lomod+1,??_utoa+1
  3161  002DFA  C062  F087         	movff	?___lomod+2,??_utoa+2
  3162  002DFE  C063  F088         	movff	?___lomod+3,??_utoa+3
  3163  002E02  C064  F089         	movff	?___lomod+4,??_utoa+4
  3164  002E06  C065  F08A         	movff	?___lomod+5,??_utoa+5
  3165  002E0A  C066  F08B         	movff	?___lomod+6,??_utoa+6
  3166  002E0E  C067  F08C         	movff	?___lomod+7,??_utoa+7
  3167  002E12  0100               	movlb	0	; () banked
  3168  002E14  5185               	movf	??_utoa& (0+255),w,b
  3169  002E16  0F30               	addlw	48
  3170  002E18  6EDF               	movwf	indf2,c
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  3174  002E1A  078D               	decf	utoa@p& (0+255),f,b
  3175  002E1C  A0D8               	btfss	status,0,c
  3176  002E1E  078E               	decf	(utoa@p+1)& (0+255),f,b
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  3180  002E20  078F               	decf	utoa@w& (0+255),f,b
  3181  002E22  A0D8               	btfss	status,0,c
  3182  002E24  0790               	decf	(utoa@w+1)& (0+255),f,b
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  3186  002E26  C091  F060         	movff	utoa@n,___lodiv@dividend
  3187  002E2A  C092  F061         	movff	utoa@n+1,___lodiv@dividend+1
  3188  002E2E  C093  F062         	movff	utoa@n+2,___lodiv@dividend+2
  3189  002E32  C094  F063         	movff	utoa@n+3,___lodiv@dividend+3
  3190  002E36  C095  F064         	movff	utoa@n+4,___lodiv@dividend+4
  3191  002E3A  C096  F065         	movff	utoa@n+5,___lodiv@dividend+5
  3192  002E3E  C097  F066         	movff	utoa@n+6,___lodiv@dividend+6
  3193  002E42  C098  F067         	movff	utoa@n+7,___lodiv@dividend+7
  3194  002E46  0E0A               	movlw	10
  3195  002E48  6F68               	movwf	___lodiv@divisor& (0+255),b
  3196  002E4A  0E00               	movlw	0
  3197  002E4C  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  3198  002E4E  0E00               	movlw	0
  3199  002E50  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  3200  002E52  0E00               	movlw	0
  3201  002E54  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  3202  002E56  0E00               	movlw	0
  3203  002E58  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  3204  002E5A  0E00               	movlw	0
  3205  002E5C  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  3206  002E5E  0E00               	movlw	0
  3207  002E60  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  3208  002E62  0E00               	movlw	0
  3209  002E64  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  3210  002E66  ECF2  F01A         	call	___lodiv	;wreg free
  3211  002E6A  C060  F091         	movff	?___lodiv,utoa@n
  3212  002E6E  C061  F092         	movff	?___lodiv+1,utoa@n+1
  3213  002E72  C062  F093         	movff	?___lodiv+2,utoa@n+2
  3214  002E76  C063  F094         	movff	?___lodiv+3,utoa@n+3
  3215  002E7A  C064  F095         	movff	?___lodiv+4,utoa@n+4
  3216  002E7E  C065  F096         	movff	?___lodiv+5,utoa@n+5
  3217  002E82  C066  F097         	movff	?___lodiv+6,utoa@n+6
  3218  002E86  C067  F098         	movff	?___lodiv+7,utoa@n+7
  3219  002E8A                     l7015:
  3220                           
  3221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3222  002E8A  0100               	movlb	0	; () banked
  3223  002E8C  5199               	movf	utoa@i& (0+255),w,b
  3224  002E8E  119A               	iorwf	(utoa@i+1)& (0+255),w,b
  3225  002E90  B4D8               	btfsc	status,2,c
  3226  002E92  D01A               	goto	u9000
  3227                           
  3228                           ; BSR set to: 0
  3229  002E94  5191               	movf	utoa@n& (0+255),w,b
  3230  002E96  1192               	iorwf	(utoa@n+1)& (0+255),w,b
  3231  002E98  1193               	iorwf	(utoa@n+2)& (0+255),w,b
  3232  002E9A  1194               	iorwf	(utoa@n+3)& (0+255),w,b
  3233  002E9C  1195               	iorwf	(utoa@n+4)& (0+255),w,b
  3234  002E9E  1196               	iorwf	(utoa@n+5)& (0+255),w,b
  3235  002EA0  1197               	iorwf	(utoa@n+6)& (0+255),w,b
  3236  002EA2  1198               	iorwf	(utoa@n+7)& (0+255),w,b
  3237  002EA4  A4D8               	btfss	status,2,c
  3238  002EA6  D77A               	goto	l7005
  3239                           
  3240                           ; BSR set to: 0
  3241  002EA8  BF8E               	btfsc	(utoa@p+1)& (0+255),7,b
  3242  002EAA  D005               	goto	u8980
  3243  002EAC  518E               	movf	(utoa@p+1)& (0+255),w,b
  3244  002EAE  E102               	bnz	u8981
  3245  002EB0  058D               	decf	utoa@p& (0+255),w,b
  3246  002EB2  B0D8               	btfsc	status,0,c
  3247  002EB4                     u8981:
  3248  002EB4  D773               	goto	l7005
  3249  002EB6                     u8980:
  3250                           
  3251                           ; BSR set to: 0
  3252  002EB6  BF90               	btfsc	(utoa@w+1)& (0+255),7,b
  3253  002EB8  D007               	goto	u9000
  3254  002EBA  5190               	movf	(utoa@w+1)& (0+255),w,b
  3255  002EBC  E103               	bnz	u8990
  3256  002EBE  058F               	decf	utoa@w& (0+255),w,b
  3257  002EC0  A0D8               	btfss	status,0,c
  3258  002EC2  D002               	goto	u9000
  3259  002EC4                     u8990:
  3260                           
  3261                           ; BSR set to: 0
  3262  002EC4  B23C               	btfsc	_flags,1,c
  3263  002EC6  D76A               	goto	l7005
  3264  002EC8                     u9000:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  3268  002EC8  C07B  F070         	movff	utoa@fp,pad@fp
  3269  002ECC  C07C  F071         	movff	utoa@fp+1,pad@fp+1
  3270  002ED0  0E22               	movlw	low _dbuf
  3271  002ED2  2599               	addwf	utoa@i& (0+255),w,b
  3272  002ED4  6F72               	movwf	pad@buf& (0+255),b
  3273  002ED6  0E01               	movlw	high _dbuf
  3274  002ED8  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  3275  002EDA  6F73               	movwf	(pad@buf+1)& (0+255),b
  3276  002EDC  C08F  F074         	movff	utoa@w,pad@p
  3277  002EE0  C090  F075         	movff	utoa@w+1,pad@p+1
  3278  002EE4  EC75  F01D         	call	_pad	;wreg free
  3279  002EE8  C070  F07B         	movff	?_pad,?_utoa
  3280  002EEC  C071  F07C         	movff	?_pad+1,?_utoa+1
  3281  002EF0  0012               	return		;funcret
  3282  002EF2                     __end_of_utoa:
  3283                           	opt callstack 0
  3284                           
  3285 ;; *************** function ___lomod *****************
  3286 ;; Defined at:
  3287 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3290 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  counter         1   16[BANK0 ] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  8    0[BANK0 ] unsigned long long 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3302 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3303 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3305 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3306 ;;Total ram usage:       17 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    2
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_utoa
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text6
  3317  00383E                     __ptext6:
  3318                           	opt callstack 0
  3319  00383E                     ___lomod:
  3320                           	opt callstack 23
  3321                           
  3322                           ;incstack = 0
  3323  00383E  0100               	movlb	0	; () banked
  3324  003840  5168               	movf	___lomod@divisor& (0+255),w,b
  3325  003842  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  3326  003844  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  3327  003846  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  3328  003848  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  3329  00384A  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  3330  00384C  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  3331  00384E  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  3332  003850  B4D8               	btfsc	status,2,c
  3333  003852  D03C               	goto	l967
  3334                           
  3335                           ; BSR set to: 0
  3336  003854  0E01               	movlw	1
  3337  003856  6F70               	movwf	___lomod@counter& (0+255),b
  3338  003858  D00A               	goto	l6659
  3339  00385A                     l6657:
  3340                           
  3341                           ; BSR set to: 0
  3342  00385A  90D8               	bcf	status,0,c
  3343  00385C  3768               	rlcf	___lomod@divisor& (0+255),f,b
  3344  00385E  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  3345  003860  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  3346  003862  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  3347  003864  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  3348  003866  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  3349  003868  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  3350  00386A  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  3351  00386C  2B70               	incf	___lomod@counter& (0+255),f,b
  3352  00386E                     l6659:
  3353                           
  3354                           ; BSR set to: 0
  3355  00386E  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  3356  003870  D7F4               	goto	l6657
  3357  003872                     u8370:
  3358                           
  3359                           ; BSR set to: 0
  3360  003872  5168               	movf	___lomod@divisor& (0+255),w,b
  3361  003874  5D60               	subwf	___lomod@dividend& (0+255),w,b
  3362  003876  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3363  003878  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  3364  00387A  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3365  00387C  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  3366  00387E  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3367  003880  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  3368  003882  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3369  003884  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  3370  003886  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3371  003888  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  3372  00388A  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3373  00388C  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  3374  00388E  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3375  003890  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  3376  003892  A0D8               	btfss	status,0,c
  3377  003894  D010               	goto	l6665
  3378                           
  3379                           ; BSR set to: 0
  3380  003896  5168               	movf	___lomod@divisor& (0+255),w,b
  3381  003898  5F60               	subwf	___lomod@dividend& (0+255),f,b
  3382  00389A  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3383  00389C  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  3384  00389E  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3385  0038A0  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  3386  0038A2  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3387  0038A4  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  3388  0038A6  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3389  0038A8  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  3390  0038AA  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3391  0038AC  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  3392  0038AE  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3393  0038B0  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  3394  0038B2  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3395  0038B4  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  3396  0038B6                     l6665:
  3397                           
  3398                           ; BSR set to: 0
  3399  0038B6  90D8               	bcf	status,0,c
  3400  0038B8  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  3401  0038BA  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  3402  0038BC  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  3403  0038BE  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  3404  0038C0  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  3405  0038C2  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  3406  0038C4  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  3407  0038C6  3368               	rrcf	___lomod@divisor& (0+255),f,b
  3408                           
  3409                           ; BSR set to: 0
  3410  0038C8  2F70               	decfsz	___lomod@counter& (0+255),f,b
  3411  0038CA  D7D3               	goto	u8370
  3412  0038CC                     l967:
  3413                           
  3414                           ; BSR set to: 0
  3415  0038CC  C060  F060         	movff	___lomod@dividend,?___lomod
  3416  0038D0  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  3417  0038D4  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  3418  0038D8  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  3419  0038DC  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  3420  0038E0  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  3421  0038E4  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  3422  0038E8  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  3423                           
  3424                           ; BSR set to: 0
  3425  0038EC  0012               	return		;funcret
  3426  0038EE                     __end_of___lomod:
  3427                           	opt callstack 0
  3428                           
  3429 ;; *************** function ___lodiv *****************
  3430 ;; Defined at:
  3431 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3434 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  quotient        8   16[BANK0 ] unsigned long long 
  3437 ;;  counter         1   24[BANK0 ] unsigned char 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  8    0[BANK0 ] unsigned long long 
  3440 ;; Registers used:
  3441 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3447 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3448 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3450 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3451 ;;Total ram usage:       25 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    2
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_utoa
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           	psect	text7
  3462  0035E4                     __ptext7:
  3463                           	opt callstack 0
  3464  0035E4                     ___lodiv:
  3465                           	opt callstack 23
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;incstack = 0
  3469  0035E4  EE20  F070         	lfsr	2,___lodiv@quotient
  3470  0035E8  0E07               	movlw	7
  3471  0035EA                     u8321:
  3472  0035EA  6ADE               	clrf	postinc2,c
  3473  0035EC  06E8               	decf	wreg,f,c
  3474  0035EE  E2FD               	bc	u8321
  3475  0035F0  0100               	movlb	0	; () banked
  3476  0035F2  5168               	movf	___lodiv@divisor& (0+255),w,b
  3477  0035F4  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  3478  0035F6  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  3479  0035F8  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  3480  0035FA  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  3481  0035FC  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  3482  0035FE  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  3483  003600  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  3484  003602  B4D8               	btfsc	status,2,c
  3485  003604  D046               	goto	l957
  3486                           
  3487                           ; BSR set to: 0
  3488  003606  0E01               	movlw	1
  3489  003608  6F78               	movwf	___lodiv@counter& (0+255),b
  3490  00360A  D00A               	goto	l6639
  3491  00360C                     l6637:
  3492                           
  3493                           ; BSR set to: 0
  3494  00360C  90D8               	bcf	status,0,c
  3495  00360E  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  3496  003610  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  3497  003612  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  3498  003614  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  3499  003616  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  3500  003618  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  3501  00361A  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  3502  00361C  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  3503  00361E  2B78               	incf	___lodiv@counter& (0+255),f,b
  3504  003620                     l6639:
  3505                           
  3506                           ; BSR set to: 0
  3507  003620  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  3508  003622  D7F4               	goto	l6637
  3509  003624                     u8340:
  3510                           
  3511                           ; BSR set to: 0
  3512  003624  90D8               	bcf	status,0,c
  3513  003626  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  3514  003628  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  3515  00362A  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  3516  00362C  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  3517  00362E  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  3518  003630  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  3519  003632  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  3520  003634  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  3521                           
  3522                           ; BSR set to: 0
  3523  003636  5168               	movf	___lodiv@divisor& (0+255),w,b
  3524  003638  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  3525  00363A  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3526  00363C  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  3527  00363E  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3528  003640  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  3529  003642  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3530  003644  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  3531  003646  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3532  003648  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  3533  00364A  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3534  00364C  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  3535  00364E  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3536  003650  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  3537  003652  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3538  003654  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  3539  003656  A0D8               	btfss	status,0,c
  3540  003658  D011               	goto	l6649
  3541                           
  3542                           ; BSR set to: 0
  3543  00365A  5168               	movf	___lodiv@divisor& (0+255),w,b
  3544  00365C  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  3545  00365E  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3546  003660  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  3547  003662  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3548  003664  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  3549  003666  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3550  003668  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  3551  00366A  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3552  00366C  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  3553  00366E  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3554  003670  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  3555  003672  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3556  003674  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  3557  003676  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3558  003678  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  3559                           
  3560                           ; BSR set to: 0
  3561  00367A  8170               	bsf	___lodiv@quotient& (0+255),0,b
  3562  00367C                     l6649:
  3563                           
  3564                           ; BSR set to: 0
  3565  00367C  90D8               	bcf	status,0,c
  3566  00367E  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  3567  003680  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  3568  003682  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  3569  003684  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  3570  003686  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  3571  003688  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  3572  00368A  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  3573  00368C  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  3574                           
  3575                           ; BSR set to: 0
  3576  00368E  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  3577  003690  D7C9               	goto	u8340
  3578  003692                     l957:
  3579                           
  3580                           ; BSR set to: 0
  3581  003692  C070  F060         	movff	___lodiv@quotient,?___lodiv
  3582  003696  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  3583  00369A  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  3584  00369E  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  3585  0036A2  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  3586  0036A6  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  3587  0036AA  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  3588  0036AE  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  3589                           
  3590                           ; BSR set to: 0
  3591  0036B2  0012               	return		;funcret
  3592  0036B4                     __end_of___lodiv:
  3593                           	opt callstack 0
  3594                           
  3595 ;; *************** function _strncmp *****************
  3596 ;; Defined at:
  3597 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  3600 ;;		 -> vfpfcnvrt@ct(3), 
  3601 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  3602 ;;		 -> STR_17(3), 
  3603 ;;  n               2    4[BANK0 ] unsigned int 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  3606 ;;		 -> STR_17(3), 
  3607 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  3608 ;;		 -> vfpfcnvrt@ct(3), 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  2    0[BANK0 ] int 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3618 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3619 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3620 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;Total ram usage:       11 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    2
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_vfpfcnvrt
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text8
  3633  0038EE                     __ptext8:
  3634                           	opt callstack 0
  3635  0038EE                     _strncmp:
  3636                           	opt callstack 24
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;incstack = 0
  3640  0038EE  C060  F067         	movff	strncmp@_l,strncmp@l
  3641  0038F2  C061  F068         	movff	strncmp@_l+1,strncmp@l+1
  3642  0038F6  C062  F069         	movff	strncmp@_r,strncmp@r
  3643  0038FA  C063  F06A         	movff	strncmp@_r+1,strncmp@r+1
  3644  0038FE  0100               	movlb	0	; () banked
  3645  003900  0764               	decf	strncmp@n& (0+255),f,b
  3646  003902  A0D8               	btfss	status,0,c
  3647  003904  0765               	decf	(strncmp@n+1)& (0+255),f,b
  3648  003906  2964               	incf	strncmp@n& (0+255),w,b
  3649  003908  E10F               	bnz	l7079
  3650  00390A  2965               	incf	(strncmp@n+1)& (0+255),w,b
  3651  00390C  A4D8               	btfss	status,2,c
  3652  00390E  D00C               	goto	l7079
  3653                           
  3654                           ; BSR set to: 0
  3655  003910  0E00               	movlw	0
  3656  003912  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3657  003914  0E00               	movlw	0
  3658  003916  6F60               	movwf	?_strncmp& (0+255),b
  3659  003918  0012               	return	
  3660  00391A                     l7077:
  3661                           
  3662                           ; BSR set to: 0
  3663  00391A  4B67               	infsnz	strncmp@l& (0+255),f,b
  3664  00391C  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  3665  00391E  4B69               	infsnz	strncmp@r& (0+255),f,b
  3666  003920  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  3667  003922  0764               	decf	strncmp@n& (0+255),f,b
  3668  003924  A0D8               	btfss	status,0,c
  3669  003926  0765               	decf	(strncmp@n+1)& (0+255),f,b
  3670  003928                     l7079:
  3671                           
  3672                           ; BSR set to: 0
  3673  003928  C067  FFD9         	movff	strncmp@l,fsr2l
  3674  00392C  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3675  003930  50DF               	movf	indf2,w,c
  3676  003932  B4D8               	btfsc	status,2,c
  3677  003934  D020               	goto	u9120
  3678                           
  3679                           ; BSR set to: 0
  3680  003936  C069  FFF6         	movff	strncmp@r,tblptrl
  3681  00393A  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3682  00393E                     	if	0	;tblptru may be non-zero
  3683  00393E                     	endif
  3684  00393E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3685  00393E  0E00               	movlw	low (__mediumconst shr (0+16))
  3686  003940  6EF8               	movwf	tblptru,c
  3687  003942                     	endif
  3688  003942  0008               	tblrd		*
  3689  003944  50F5               	movf	tablat,w,c
  3690  003946  0900               	iorlw	0
  3691  003948  B4D8               	btfsc	status,2,c
  3692  00394A  D015               	goto	u9120
  3693                           
  3694                           ; BSR set to: 0
  3695  00394C  5164               	movf	strncmp@n& (0+255),w,b
  3696  00394E  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  3697  003950  B4D8               	btfsc	status,2,c
  3698  003952  D011               	goto	u9120
  3699                           
  3700                           ; BSR set to: 0
  3701  003954  C067  FFD9         	movff	strncmp@l,fsr2l
  3702  003958  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3703  00395C  50DF               	movf	indf2,w,c
  3704  00395E  6F66               	movwf	??_strncmp& (0+255),b
  3705  003960  C069  FFF6         	movff	strncmp@r,tblptrl
  3706  003964  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3707  003968                     	if	0	;tblptru may be non-zero
  3708  003968                     	endif
  3709  003968                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3710  003968  0E00               	movlw	low (__mediumconst shr (0+16))
  3711  00396A  6EF8               	movwf	tblptru,c
  3712  00396C                     	endif
  3713  00396C  0008               	tblrd		*
  3714  00396E  50F5               	movf	tablat,w,c
  3715  003970  1966               	xorwf	??_strncmp& (0+255),w,b
  3716  003972  B4D8               	btfsc	status,2,c
  3717  003974  D7D2               	goto	l7077
  3718  003976                     u9120:
  3719                           
  3720                           ; BSR set to: 0
  3721  003976  C067  FFD9         	movff	strncmp@l,fsr2l
  3722  00397A  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3723  00397E  50DF               	movf	indf2,w,c
  3724  003980  6F66               	movwf	??_strncmp& (0+255),b
  3725  003982  C069  FFF6         	movff	strncmp@r,tblptrl
  3726  003986  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3727  00398A                     	if	0	;tblptru may be non-zero
  3728  00398A                     	endif
  3729  00398A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3730  00398A  0E00               	movlw	low (__mediumconst shr (0+16))
  3731  00398C  6EF8               	movwf	tblptru,c
  3732  00398E                     	endif
  3733  00398E  0008               	tblrd		*
  3734  003990  50F5               	movf	tablat,w,c
  3735  003992  5D66               	subwf	??_strncmp& (0+255),w,b
  3736  003994  6F60               	movwf	?_strncmp& (0+255),b
  3737  003996  6B61               	clrf	(?_strncmp+1)& (0+255),b
  3738  003998  A0D8               	btfss	status,0,c
  3739  00399A  0761               	decf	(?_strncmp+1)& (0+255),f,b
  3740                           
  3741                           ; BSR set to: 0
  3742  00399C  0012               	return		;funcret
  3743  00399E                     __end_of_strncmp:
  3744                           	opt callstack 0
  3745                           
  3746 ;; *************** function _efgtoa *****************
  3747 ;; Defined at:
  3748 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  3751 ;;		 -> sprintf@f(6), 
  3752 ;;  f               4   65[BANK0 ] PTR struct _IO_FILE
  3753 ;;  c               1   69[BANK0 ] unsigned char 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  u               4  127[BANK0 ] unsigned char 
  3756 ;;  g               4  119[BANK0 ] unsigned char 
  3757 ;;  l               4  113[BANK0 ] unsigned char 
  3758 ;;  h               4  109[BANK0 ] unsigned char 
  3759 ;;  ou              4   75[BANK0 ] unsigned char 
  3760 ;;  n               2  125[BANK0 ] int 
  3761 ;;  e               2  123[BANK0 ] int 
  3762 ;;  i               2  117[BANK0 ] int 
  3763 ;;  w               2  106[BANK0 ] int 
  3764 ;;  p               2  103[BANK0 ] int 
  3765 ;;  sign            2  101[BANK0 ] int 
  3766 ;;  d               2   99[BANK0 ] int 
  3767 ;;  ne              2   97[BANK0 ] int 
  3768 ;;  m               2   95[BANK0 ] int 
  3769 ;;  pp              2   93[BANK0 ] int 
  3770 ;;  t               2   91[BANK0 ] int 
  3771 ;;  mode            1  108[BANK0 ] unsigned char 
  3772 ;;  nmode           1  105[BANK0 ] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  2   63[BANK0 ] int 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3782 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3783 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3784 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3785 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3786 ;;Total ram usage:       68 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    6
  3789 ;; This function calls:
  3790 ;;		___awdiv
  3791 ;;		___awmod
  3792 ;;		___fladd
  3793 ;;		___fldiv
  3794 ;;		___fleq
  3795 ;;		___flge
  3796 ;;		___flmul
  3797 ;;		___flneg
  3798 ;;		___flsub
  3799 ;;		___fltol
  3800 ;;		___fpclassifyf
  3801 ;;		_floorf
  3802 ;;		_isupper
  3803 ;;		_pad
  3804 ;;		_strcpy
  3805 ;;		_tolower
  3806 ;; This function is called by:
  3807 ;;		_vfpfcnvrt
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text9
  3812  000F9E                     __ptext9:
  3813                           	opt callstack 0
  3814  000F9E                     _efgtoa:
  3815                           	opt callstack 20
  3816                           
  3817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;incstack = 0
  3821  000F9E  0E00               	movlw	0
  3822  000FA0  0100               	movlb	0	; () banked
  3823  000FA2  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  3824  000FA4  0E00               	movlw	0
  3825  000FA6  6FC5               	movwf	efgtoa@sign& (0+255),b
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3829  000FA8  C0A1  F0D7         	movff	efgtoa@f,efgtoa@g
  3830  000FAC  C0A2  F0D8         	movff	efgtoa@f+1,efgtoa@g+1
  3831  000FB0  C0A3  F0D9         	movff	efgtoa@f+2,efgtoa@g+2
  3832  000FB4  C0A4  F0DA         	movff	efgtoa@f+3,efgtoa@g+3
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3836  000FB8  AFDA               	btfss	(efgtoa@g+3)& (0+255),7,b
  3837  000FBA  D016               	goto	l6705
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3841  000FBC  0E00               	movlw	0
  3842  000FBE  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  3843  000FC0  0E01               	movlw	1
  3844  000FC2  6FC5               	movwf	efgtoa@sign& (0+255),b
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3848  000FC4  C0D7  F060         	movff	efgtoa@g,___flneg@f1
  3849  000FC8  C0D8  F061         	movff	efgtoa@g+1,___flneg@f1+1
  3850  000FCC  C0D9  F062         	movff	efgtoa@g+2,___flneg@f1+2
  3851  000FD0  C0DA  F063         	movff	efgtoa@g+3,___flneg@f1+3
  3852  000FD4  ECB7  F021         	call	___flneg	;wreg free
  3853  000FD8  C060  F0D7         	movff	?___flneg,efgtoa@g
  3854  000FDC  C061  F0D8         	movff	?___flneg+1,efgtoa@g+1
  3855  000FE0  C062  F0D9         	movff	?___flneg+2,efgtoa@g+2
  3856  000FE4  C063  F0DA         	movff	?___flneg+3,efgtoa@g+3
  3857  000FE8                     l6705:
  3858                           
  3859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3860  000FE8  0E00               	movlw	0
  3861  000FEA  0100               	movlb	0	; () banked
  3862  000FEC  6FDE               	movwf	(efgtoa@n+1)& (0+255),b
  3863  000FEE  0E00               	movlw	0
  3864  000FF0  6FDD               	movwf	efgtoa@n& (0+255),b
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3868  000FF2  C038  F0CA         	movff	_width,efgtoa@w
  3869  000FF6  C039  F0CB         	movff	_width+1,efgtoa@w+1
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3873  000FFA  51C5               	movf	efgtoa@sign& (0+255),w,b
  3874  000FFC  11C6               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3875  000FFE  A4D8               	btfss	status,2,c
  3876  001000  D002               	goto	u8440
  3877                           
  3878                           ; BSR set to: 0
  3879  001002  A43C               	btfss	_flags,2,c
  3880  001004  D013               	goto	l6725
  3881  001006                     u8440:
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3885  001006  51C5               	movf	efgtoa@sign& (0+255),w,b
  3886  001008  11C6               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3887  00100A  A4D8               	btfss	status,2,c
  3888  00100C  D004               	goto	l6717
  3889                           
  3890                           ; BSR set to: 0
  3891  00100E  0E00               	movlw	0
  3892  001010  6FB0               	movwf	(_efgtoa$1411+1)& (0+255),b
  3893  001012  0E2B               	movlw	43
  3894  001014  D003               	goto	L2
  3895  001016                     l6717:
  3896                           
  3897                           ; BSR set to: 0
  3898  001016  0E00               	movlw	0
  3899  001018  6FB0               	movwf	(_efgtoa$1411+1)& (0+255),b
  3900  00101A  0E2D               	movlw	45
  3901  00101C                     L2:
  3902  00101C  6FAF               	movwf	_efgtoa$1411& (0+255),b
  3903                           
  3904                           ; BSR set to: 0
  3905  00101E  C0AF  F122         	movff	_efgtoa$1411,_dbuf
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3909  001022  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  3910  001024  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3914  001026  07CA               	decf	efgtoa@w& (0+255),f,b
  3915  001028  A0D8               	btfss	status,0,c
  3916  00102A  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  3917  00102C                     l6725:
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3921  00102C  C0D7  F060         	movff	efgtoa@g,___fpclassifyf@x
  3922  001030  C0D8  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3923  001034  C0D9  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3924  001038  C0DA  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3925  00103C  EC5A  F01B         	call	___fpclassifyf	;wreg free
  3926  001040  0100               	movlb	0	; () banked
  3927  001042  0560               	decf	?___fpclassifyf& (0+255),w,b
  3928  001044  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3929  001046  A4D8               	btfss	status,2,c
  3930  001048  D04C               	goto	l6743
  3931                           
  3932                           ; BSR set to: 0
  3933  00104A  0EBF               	movlw	191
  3934  00104C  6FA6               	movwf	??_efgtoa& (0+255),b
  3935  00104E  0EFF               	movlw	255
  3936  001050  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  3937  001052  51A5               	movf	efgtoa@c& (0+255),w,b
  3938  001054  6FA8               	movwf	(??_efgtoa+2)& (0+255),b
  3939  001056  6BA9               	clrf	(??_efgtoa+3)& (0+255),b
  3940  001058  51A6               	movf	??_efgtoa& (0+255),w,b
  3941  00105A  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  3942  00105C  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  3943  00105E  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3944  001060  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  3945  001062  E106               	bnz	u8470
  3946  001064  0E1A               	movlw	26
  3947  001066  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  3948  001068  B0D8               	btfsc	status,0,c
  3949  00106A  D002               	goto	u8470
  3950  00106C  0E01               	movlw	1
  3951  00106E  D001               	goto	u8480
  3952  001070                     u8470:
  3953  001070  0E00               	movlw	0
  3954  001072                     u8480:
  3955  001072  6FB1               	movwf	_efgtoa$1412& (0+255),b
  3956  001074  6BB2               	clrf	(_efgtoa$1412+1)& (0+255),b
  3957                           
  3958                           ; BSR set to: 0
  3959  001076  51B1               	movf	_efgtoa$1412& (0+255),w,b
  3960  001078  11B2               	iorwf	(_efgtoa$1412+1)& (0+255),w,b
  3961  00107A  B4D8               	btfsc	status,2,c
  3962  00107C  D00D               	goto	l6735
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3966  00107E  0E22               	movlw	low _dbuf
  3967  001080  25DD               	addwf	efgtoa@n& (0+255),w,b
  3968  001082  6F60               	movwf	strcpy@dest& (0+255),b
  3969  001084  0E01               	movlw	high _dbuf
  3970  001086  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3971  001088  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3972  00108A  0E89               	movlw	low STR_7
  3973  00108C  6F62               	movwf	strcpy@src& (0+255),b
  3974  00108E  0E0F               	movlw	high STR_7
  3975  001090  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3976  001092  EC6F  F020         	call	_strcpy	;wreg free
  3977                           
  3978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3979  001096  D00C               	goto	l6737
  3980  001098                     l6735:
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3984  001098  0E22               	movlw	low _dbuf
  3985  00109A  25DD               	addwf	efgtoa@n& (0+255),w,b
  3986  00109C  6F60               	movwf	strcpy@dest& (0+255),b
  3987  00109E  0E01               	movlw	high _dbuf
  3988  0010A0  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3989  0010A2  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3990  0010A4  0E91               	movlw	low STR_8
  3991  0010A6  6F62               	movwf	strcpy@src& (0+255),b
  3992  0010A8  0E0F               	movlw	high STR_8
  3993  0010AA  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3994  0010AC  EC6F  F020         	call	_strcpy	;wreg free
  3995  0010B0                     l6737:
  3996                           
  3997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3998  0010B0  0100               	movlb	0	; () banked
  3999  0010B2  0EFD               	movlw	253
  4000  0010B4  27CA               	addwf	efgtoa@w& (0+255),f,b
  4001  0010B6  0EFF               	movlw	255
  4002  0010B8  23CB               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4003  0010BA                     l6739:
  4004                           
  4005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  4006  0010BA  C09F  F070         	movff	efgtoa@fp,pad@fp
  4007  0010BE  C0A0  F071         	movff	efgtoa@fp+1,pad@fp+1
  4008  0010C2  0E22               	movlw	low _dbuf
  4009  0010C4  0100               	movlb	0	; () banked
  4010  0010C6  6F72               	movwf	pad@buf& (0+255),b
  4011  0010C8  0E01               	movlw	high _dbuf
  4012  0010CA  6F73               	movwf	(pad@buf+1)& (0+255),b
  4013  0010CC  C0CA  F074         	movff	efgtoa@w,pad@p
  4014  0010D0  C0CB  F075         	movff	efgtoa@w+1,pad@p+1
  4015  0010D4  EC75  F01D         	call	_pad	;wreg free
  4016  0010D8  C070  F09F         	movff	?_pad,?_efgtoa
  4017  0010DC  C071  F0A0         	movff	?_pad+1,?_efgtoa+1
  4018  0010E0  0012               	return	
  4019  0010E2                     l6743:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4023  0010E2  C0D7  F060         	movff	efgtoa@g,___fpclassifyf@x
  4024  0010E6  C0D8  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4025  0010EA  C0D9  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4026  0010EE  C0DA  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4027  0010F2  EC5A  F01B         	call	___fpclassifyf	;wreg free
  4028  0010F6  0100               	movlb	0	; () banked
  4029  0010F8  5160               	movf	?___fpclassifyf& (0+255),w,b
  4030  0010FA  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  4031  0010FC  A4D8               	btfss	status,2,c
  4032  0010FE  D034               	goto	l6761
  4033                           
  4034                           ; BSR set to: 0
  4035  001100  0EBF               	movlw	191
  4036  001102  6FA6               	movwf	??_efgtoa& (0+255),b
  4037  001104  0EFF               	movlw	255
  4038  001106  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  4039  001108  51A5               	movf	efgtoa@c& (0+255),w,b
  4040  00110A  6FA8               	movwf	(??_efgtoa+2)& (0+255),b
  4041  00110C  6BA9               	clrf	(??_efgtoa+3)& (0+255),b
  4042  00110E  51A6               	movf	??_efgtoa& (0+255),w,b
  4043  001110  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  4044  001112  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  4045  001114  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4046  001116  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  4047  001118  E106               	bnz	u8510
  4048  00111A  0E1A               	movlw	26
  4049  00111C  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  4050  00111E  B0D8               	btfsc	status,0,c
  4051  001120  D002               	goto	u8510
  4052  001122  0E01               	movlw	1
  4053  001124  D001               	goto	u8520
  4054  001126                     u8510:
  4055  001126  0E00               	movlw	0
  4056  001128                     u8520:
  4057  001128  6FB3               	movwf	_efgtoa$1416& (0+255),b
  4058  00112A  6BB4               	clrf	(_efgtoa$1416+1)& (0+255),b
  4059                           
  4060                           ; BSR set to: 0
  4061  00112C  51B3               	movf	_efgtoa$1416& (0+255),w,b
  4062  00112E  11B4               	iorwf	(_efgtoa$1416+1)& (0+255),w,b
  4063  001130  B4D8               	btfsc	status,2,c
  4064  001132  D00D               	goto	l6753
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4068  001134  0E22               	movlw	low _dbuf
  4069  001136  25DD               	addwf	efgtoa@n& (0+255),w,b
  4070  001138  6F60               	movwf	strcpy@dest& (0+255),b
  4071  00113A  0E01               	movlw	high _dbuf
  4072  00113C  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4073  00113E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4074  001140  0E8D               	movlw	low STR_11
  4075  001142  6F62               	movwf	strcpy@src& (0+255),b
  4076  001144  0E0F               	movlw	high STR_11
  4077  001146  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4078  001148  EC6F  F020         	call	_strcpy	;wreg free
  4079                           
  4080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4081  00114C  D7B1               	goto	l6737
  4082  00114E                     l6753:
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4086  00114E  0E22               	movlw	low _dbuf
  4087  001150  25DD               	addwf	efgtoa@n& (0+255),w,b
  4088  001152  6F60               	movwf	strcpy@dest& (0+255),b
  4089  001154  0E01               	movlw	high _dbuf
  4090  001156  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4091  001158  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4092  00115A  0E95               	movlw	low STR_12
  4093  00115C  6F62               	movwf	strcpy@src& (0+255),b
  4094  00115E  0E0F               	movlw	high STR_12
  4095  001160  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4096  001162  EC6F  F020         	call	_strcpy	;wreg free
  4097  001166  D7A4               	goto	l6737
  4098  001168                     l6761:
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4102  001168  0E00               	movlw	0
  4103  00116A  6FDF               	movwf	efgtoa@u& (0+255),b
  4104  00116C  0E00               	movlw	0
  4105  00116E  6FE0               	movwf	(efgtoa@u+1)& (0+255),b
  4106  001170  0E80               	movlw	128
  4107  001172  6FE1               	movwf	(efgtoa@u+2)& (0+255),b
  4108  001174  0E3F               	movlw	63
  4109  001176  6FE2               	movwf	(efgtoa@u+3)& (0+255),b
  4110                           
  4111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4112  001178  0E00               	movlw	0
  4113  00117A  6FDC               	movwf	(efgtoa@e+1)& (0+255),b
  4114  00117C  0E00               	movlw	0
  4115  00117E  6FDB               	movwf	efgtoa@e& (0+255),b
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4119  001180  C0D7  F060         	movff	efgtoa@g,___fleq@ff1
  4120  001184  C0D8  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  4121  001188  C0D9  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  4122  00118C  C0DA  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  4123  001190  0E00               	movlw	0
  4124  001192  6F64               	movwf	___fleq@ff2& (0+255),b
  4125  001194  0E00               	movlw	0
  4126  001196  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4127  001198  0E00               	movlw	0
  4128  00119A  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4129  00119C  0E00               	movlw	0
  4130  00119E  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4131  0011A0  ECC3  F01D         	call	___fleq	;wreg free
  4132  0011A4  0100               	movlb	0	; () banked
  4133  0011A6  A0D8               	btfss	status,0,c
  4134  0011A8  D01E               	goto	l6771
  4135  0011AA  D078               	goto	u8560
  4136  0011AC                     l6767:
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4140  0011AC  C0DF  F06E         	movff	efgtoa@u,___flmul@b
  4141  0011B0  C0E0  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4142  0011B4  C0E1  F070         	movff	efgtoa@u+2,___flmul@b+2
  4143  0011B8  C0E2  F071         	movff	efgtoa@u+3,___flmul@b+3
  4144  0011BC  0E00               	movlw	0
  4145  0011BE  6F72               	movwf	___flmul@a& (0+255),b
  4146  0011C0  0E00               	movlw	0
  4147  0011C2  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4148  0011C4  0E20               	movlw	32
  4149  0011C6  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4150  0011C8  0E41               	movlw	65
  4151  0011CA  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4152  0011CC  ECC5  F00F         	call	___flmul	;wreg free
  4153  0011D0  C06E  F0DF         	movff	?___flmul,efgtoa@u
  4154  0011D4  C06F  F0E0         	movff	?___flmul+1,efgtoa@u+1
  4155  0011D8  C070  F0E1         	movff	?___flmul+2,efgtoa@u+2
  4156  0011DC  C071  F0E2         	movff	?___flmul+3,efgtoa@u+3
  4157                           
  4158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4159  0011E0  0100               	movlb	0	; () banked
  4160  0011E2  4BDB               	infsnz	efgtoa@e& (0+255),f,b
  4161  0011E4  2BDC               	incf	(efgtoa@e+1)& (0+255),f,b
  4162  0011E6                     l6771:
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4166  0011E6  C0D7  F087         	movff	efgtoa@g,___flge@ff1
  4167  0011EA  C0D8  F088         	movff	efgtoa@g+1,___flge@ff1+1
  4168  0011EE  C0D9  F089         	movff	efgtoa@g+2,___flge@ff1+2
  4169  0011F2  C0DA  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  4170  0011F6  0E00               	movlw	0
  4171  0011F8  6F72               	movwf	___flmul@a& (0+255),b
  4172  0011FA  0E00               	movlw	0
  4173  0011FC  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4174  0011FE  0E20               	movlw	32
  4175  001200  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4176  001202  0E41               	movlw	65
  4177  001204  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4178  001206  C0DF  F06E         	movff	efgtoa@u,___flmul@b
  4179  00120A  C0E0  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4180  00120E  C0E1  F070         	movff	efgtoa@u+2,___flmul@b+2
  4181  001212  C0E2  F071         	movff	efgtoa@u+3,___flmul@b+3
  4182  001216  ECC5  F00F         	call	___flmul	;wreg free
  4183  00121A  C06E  F08B         	movff	?___flmul,___flge@ff2
  4184  00121E  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  4185  001222  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  4186  001226  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  4187  00122A  EC89  F01A         	call	___flge	;wreg free
  4188  00122E  0100               	movlb	0	; () banked
  4189  001230  A0D8               	btfss	status,0,c
  4190  001232  D01F               	goto	l6777
  4191  001234  D7BB               	goto	l6767
  4192  001236                     l6773:
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4196  001236  C0DF  F060         	movff	efgtoa@u,___fldiv@b
  4197  00123A  C0E0  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4198  00123E  C0E1  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4199  001242  C0E2  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4200  001246  0E00               	movlw	0
  4201  001248  6F64               	movwf	___fldiv@a& (0+255),b
  4202  00124A  0E00               	movlw	0
  4203  00124C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4204  00124E  0E20               	movlw	32
  4205  001250  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4206  001252  0E41               	movlw	65
  4207  001254  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4208  001256  EC7C  F014         	call	___fldiv	;wreg free
  4209  00125A  C060  F0DF         	movff	?___fldiv,efgtoa@u
  4210  00125E  C061  F0E0         	movff	?___fldiv+1,efgtoa@u+1
  4211  001262  C062  F0E1         	movff	?___fldiv+2,efgtoa@u+2
  4212  001266  C063  F0E2         	movff	?___fldiv+3,efgtoa@u+3
  4213                           
  4214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4215  00126A  0100               	movlb	0	; () banked
  4216  00126C  07DB               	decf	efgtoa@e& (0+255),f,b
  4217  00126E  A0D8               	btfss	status,0,c
  4218  001270  07DC               	decf	(efgtoa@e+1)& (0+255),f,b
  4219  001272                     l6777:
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4223  001272  C0D7  F087         	movff	efgtoa@g,___flge@ff1
  4224  001276  C0D8  F088         	movff	efgtoa@g+1,___flge@ff1+1
  4225  00127A  C0D9  F089         	movff	efgtoa@g+2,___flge@ff1+2
  4226  00127E  C0DA  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  4227  001282  C0DF  F08B         	movff	efgtoa@u,___flge@ff2
  4228  001286  C0E0  F08C         	movff	efgtoa@u+1,___flge@ff2+1
  4229  00128A  C0E1  F08D         	movff	efgtoa@u+2,___flge@ff2+2
  4230  00128E  C0E2  F08E         	movff	efgtoa@u+3,___flge@ff2+3
  4231  001292  EC89  F01A         	call	___flge	;wreg free
  4232  001296  0100               	movlb	0	; () banked
  4233  001298  A0D8               	btfss	status,0,c
  4234  00129A  D7CD               	goto	l6773
  4235  00129C                     u8560:
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4239  00129C  C0A5  F066         	movff	efgtoa@c,tolower@c
  4240  0012A0  6B67               	clrf	(tolower@c+1)& (0+255),b
  4241  0012A2  ECC3  F020         	call	_tolower	;wreg free
  4242  0012A6  0100               	movlb	0	; () banked
  4243  0012A8  5166               	movf	?_tolower& (0+255),w,b
  4244  0012AA  6FCC               	movwf	efgtoa@mode& (0+255),b
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4248  0012AC  C0CC  F0C9         	movff	efgtoa@mode,efgtoa@nmode
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4252  0012B0  0E67               	movlw	103
  4253  0012B2  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4254  0012B4  A4D8               	btfss	status,2,c
  4255  0012B6  D019               	goto	l6793
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4259  0012B8  503A               	movf	_prec,w,c
  4260  0012BA  103B               	iorwf	_prec+1,w,c
  4261  0012BC  A4D8               	btfss	status,2,c
  4262  0012BE  D004               	goto	l6789
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4266  0012C0  0E00               	movlw	0
  4267  0012C2  6E3B               	movwf	_prec+1,c
  4268  0012C4  0E01               	movlw	1
  4269  0012C6  6E3A               	movwf	_prec,c
  4270  0012C8                     l6789:
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4274  0012C8  BE3B               	btfsc	_prec+1,7,c
  4275  0012CA  D005               	goto	u8590
  4276  0012CC  503B               	movf	_prec+1,w,c
  4277  0012CE  E108               	bnz	l391
  4278  0012D0  043A               	decf	_prec,w,c
  4279  0012D2  B0D8               	btfsc	status,0,c
  4280  0012D4  D005               	goto	l391
  4281  0012D6                     u8590:
  4282                           
  4283                           ; BSR set to: 0
  4284  0012D6  0E00               	movlw	0
  4285  0012D8  6FC8               	movwf	(efgtoa@p+1)& (0+255),b
  4286  0012DA  0E06               	movlw	6
  4287  0012DC  6FC7               	movwf	efgtoa@p& (0+255),b
  4288  0012DE  D008               	goto	l6799
  4289  0012E0                     l391:
  4290                           
  4291                           ; BSR set to: 0
  4292  0012E0  C03A  F0C7         	movff	_prec,efgtoa@p
  4293  0012E4  C03B  F0C8         	movff	_prec+1,efgtoa@p+1
  4294  0012E8  D003               	goto	l6799
  4295  0012EA                     l6793:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4299  0012EA  AE3B               	btfss	_prec+1,7,c
  4300  0012EC  D7F9               	goto	l391
  4301  0012EE  D7F3               	goto	u8590
  4302  0012F0                     l6799:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4306  0012F0  0E67               	movlw	103
  4307  0012F2  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4308  0012F4  A4D8               	btfss	status,2,c
  4309  0012F6  D022               	goto	l6809
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4313  0012F8  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4314  0012FA  D006               	goto	u8620
  4315  0012FC  0EFC               	movlw	252
  4316  0012FE  5DDB               	subwf	efgtoa@e& (0+255),w,b
  4317  001300  0EFF               	movlw	255
  4318  001302  59DC               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4319  001304  A0D8               	btfss	status,0,c
  4320  001306  D018               	goto	l6807
  4321  001308                     u8620:
  4322                           
  4323                           ; BSR set to: 0
  4324  001308  0EFF               	movlw	255
  4325  00130A  6FA6               	movwf	??_efgtoa& (0+255),b
  4326  00130C  0EFF               	movlw	255
  4327  00130E  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  4328  001310  C0C7  F0A8         	movff	efgtoa@p,??_efgtoa+2
  4329  001314  C0C8  F0A9         	movff	efgtoa@p+1,??_efgtoa+3
  4330  001318  51A6               	movf	??_efgtoa& (0+255),w,b
  4331  00131A  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  4332  00131C  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  4333  00131E  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4334  001320  51DB               	movf	efgtoa@e& (0+255),w,b
  4335  001322  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  4336  001324  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  4337  001326  0A80               	xorlw	128
  4338  001328  6FAA               	movwf	(??_efgtoa+4)& (0+255),b
  4339  00132A  51DC               	movf	(efgtoa@e+1)& (0+255),w,b
  4340  00132C  0A80               	xorlw	128
  4341  00132E  59AA               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4342  001330  A0D8               	btfss	status,0,c
  4343  001332  D002               	goto	l6807
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4347  001334  0E66               	movlw	102
  4348  001336  D001               	goto	L3
  4349  001338                     l6807:
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4353  001338  0E65               	movlw	101
  4354  00133A                     L3:
  4355  00133A  6FC9               	movwf	efgtoa@nmode& (0+255),b
  4356  00133C                     l6809:
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4360  00133C  C0C7  F0BF         	movff	efgtoa@p,efgtoa@m
  4361  001340  C0C8  F0C0         	movff	efgtoa@p+1,efgtoa@m+1
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4365  001344  0E67               	movlw	103
  4366  001346  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4367  001348  A4D8               	btfss	status,2,c
  4368  00134A  D005               	goto	u8660
  4369                           
  4370                           ; BSR set to: 0
  4371  00134C  0E66               	movlw	102
  4372  00134E  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4373  001350  B4D8               	btfsc	status,2,c
  4374                           
  4375                           ; BSR set to: 0
  4376  001352  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4377  001354  D002               	goto	l6819
  4378  001356                     u8660:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4382  001356  4BBF               	infsnz	efgtoa@m& (0+255),f,b
  4383  001358  2BC0               	incf	(efgtoa@m+1)& (0+255),f,b
  4384  00135A                     l6819:
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4388  00135A  0E66               	movlw	102
  4389  00135C  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4390  00135E  A4D8               	btfss	status,2,c
  4391  001360  D016               	goto	l6829
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4395  001362  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4396  001364  D00C               	goto	l6825
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4400  001366  0E00               	movlw	0
  4401  001368  6FDF               	movwf	efgtoa@u& (0+255),b
  4402  00136A  0E00               	movlw	0
  4403  00136C  6FE0               	movwf	(efgtoa@u+1)& (0+255),b
  4404  00136E  0E80               	movlw	128
  4405  001370  6FE1               	movwf	(efgtoa@u+2)& (0+255),b
  4406  001372  0E3F               	movlw	63
  4407  001374  6FE2               	movwf	(efgtoa@u+3)& (0+255),b
  4408                           
  4409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4410  001376  0E00               	movlw	0
  4411  001378  6FDC               	movwf	(efgtoa@e+1)& (0+255),b
  4412  00137A  0E00               	movlw	0
  4413  00137C  6FDB               	movwf	efgtoa@e& (0+255),b
  4414  00137E                     l6825:
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4418  00137E  0E67               	movlw	103
  4419  001380  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4420  001382  B4D8               	btfsc	status,2,c
  4421  001384  D004               	goto	l6829
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4425  001386  51DB               	movf	efgtoa@e& (0+255),w,b
  4426  001388  27BF               	addwf	efgtoa@m& (0+255),f,b
  4427  00138A  51DC               	movf	(efgtoa@e+1)& (0+255),w,b
  4428  00138C  23C0               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4429  00138E                     l6829:
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4433  00138E  0E00               	movlw	0
  4434  001390  6FD6               	movwf	(efgtoa@i+1)& (0+255),b
  4435  001392  0E00               	movlw	0
  4436  001394  6FD5               	movwf	efgtoa@i& (0+255),b
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4440  001396  C0D7  F0CD         	movff	efgtoa@g,efgtoa@h
  4441  00139A  C0D8  F0CE         	movff	efgtoa@g+1,efgtoa@h+1
  4442  00139E  C0D9  F0CF         	movff	efgtoa@g+2,efgtoa@h+2
  4443  0013A2  C0DA  F0D0         	movff	efgtoa@g+3,efgtoa@h+3
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4447  0013A6  C0DF  F0AB         	movff	efgtoa@u,efgtoa@ou
  4448  0013AA  C0E0  F0AC         	movff	efgtoa@u+1,efgtoa@ou+1
  4449  0013AE  C0E1  F0AD         	movff	efgtoa@u+2,efgtoa@ou+2
  4450  0013B2  C0E2  F0AE         	movff	efgtoa@u+3,efgtoa@ou+3
  4451                           
  4452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4453  0013B6  D07C               	goto	l6843
  4454  0013B8                     l6835:
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4458  0013B8  C0CD  F060         	movff	efgtoa@h,___fldiv@b
  4459  0013BC  C0CE  F061         	movff	efgtoa@h+1,___fldiv@b+1
  4460  0013C0  C0CF  F062         	movff	efgtoa@h+2,___fldiv@b+2
  4461  0013C4  C0D0  F063         	movff	efgtoa@h+3,___fldiv@b+3
  4462  0013C8  C0DF  F064         	movff	efgtoa@u,___fldiv@a
  4463  0013CC  C0E0  F065         	movff	efgtoa@u+1,___fldiv@a+1
  4464  0013D0  C0E1  F066         	movff	efgtoa@u+2,___fldiv@a+2
  4465  0013D4  C0E2  F067         	movff	efgtoa@u+3,___fldiv@a+3
  4466  0013D8  EC7C  F014         	call	___fldiv	;wreg free
  4467  0013DC  C060  F079         	movff	?___fldiv,floorf@x
  4468  0013E0  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  4469  0013E4  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  4470  0013E8  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  4471  0013EC  ECC1  F015         	call	_floorf	;wreg free
  4472  0013F0  C079  F0D1         	movff	?_floorf,efgtoa@l
  4473  0013F4  C07A  F0D2         	movff	?_floorf+1,efgtoa@l+1
  4474  0013F8  C07B  F0D3         	movff	?_floorf+2,efgtoa@l+2
  4475  0013FC  C07C  F0D4         	movff	?_floorf+3,efgtoa@l+3
  4476                           
  4477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4478  001400  C0D1  F087         	movff	efgtoa@l,___fltol@f1
  4479  001404  C0D2  F088         	movff	efgtoa@l+1,___fltol@f1+1
  4480  001408  C0D3  F089         	movff	efgtoa@l+2,___fltol@f1+2
  4481  00140C  C0D4  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  4482  001410  ECC1  F01B         	call	___fltol	;wreg free
  4483  001414  C087  F0C3         	movff	?___fltol,efgtoa@d
  4484  001418  C088  F0C4         	movff	?___fltol+1,efgtoa@d+1
  4485                           
  4486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4487  00141C  C0CD  F097         	movff	efgtoa@h,___flsub@b
  4488  001420  C0CE  F098         	movff	efgtoa@h+1,___flsub@b+1
  4489  001424  C0CF  F099         	movff	efgtoa@h+2,___flsub@b+2
  4490  001428  C0D0  F09A         	movff	efgtoa@h+3,___flsub@b+3
  4491  00142C  C0DF  F072         	movff	efgtoa@u,___flmul@a
  4492  001430  C0E0  F073         	movff	efgtoa@u+1,___flmul@a+1
  4493  001434  C0E1  F074         	movff	efgtoa@u+2,___flmul@a+2
  4494  001438  C0E2  F075         	movff	efgtoa@u+3,___flmul@a+3
  4495  00143C  C0D1  F06E         	movff	efgtoa@l,___flmul@b
  4496  001440  C0D2  F06F         	movff	efgtoa@l+1,___flmul@b+1
  4497  001444  C0D3  F070         	movff	efgtoa@l+2,___flmul@b+2
  4498  001448  C0D4  F071         	movff	efgtoa@l+3,___flmul@b+3
  4499  00144C  ECC5  F00F         	call	___flmul	;wreg free
  4500  001450  C06E  F09B         	movff	?___flmul,___flsub@a
  4501  001454  C06F  F09C         	movff	?___flmul+1,___flsub@a+1
  4502  001458  C070  F09D         	movff	?___flmul+2,___flsub@a+2
  4503  00145C  C071  F09E         	movff	?___flmul+3,___flsub@a+3
  4504  001460  ECEA  F020         	call	___flsub	;wreg free
  4505  001464  C097  F0CD         	movff	?___flsub,efgtoa@h
  4506  001468  C098  F0CE         	movff	?___flsub+1,efgtoa@h+1
  4507  00146C  C099  F0CF         	movff	?___flsub+2,efgtoa@h+2
  4508  001470  C09A  F0D0         	movff	?___flsub+3,efgtoa@h+3
  4509                           
  4510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4511  001474  C0DF  F060         	movff	efgtoa@u,___fldiv@b
  4512  001478  C0E0  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4513  00147C  C0E1  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4514  001480  C0E2  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4515  001484  0E00               	movlw	0
  4516  001486  0100               	movlb	0	; () banked
  4517  001488  6F64               	movwf	___fldiv@a& (0+255),b
  4518  00148A  0E00               	movlw	0
  4519  00148C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4520  00148E  0E20               	movlw	32
  4521  001490  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4522  001492  0E41               	movlw	65
  4523  001494  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4524  001496  EC7C  F014         	call	___fldiv	;wreg free
  4525  00149A  C060  F0DF         	movff	?___fldiv,efgtoa@u
  4526  00149E  C061  F0E0         	movff	?___fldiv+1,efgtoa@u+1
  4527  0014A2  C062  F0E1         	movff	?___fldiv+2,efgtoa@u+2
  4528  0014A6  C063  F0E2         	movff	?___fldiv+3,efgtoa@u+3
  4529                           
  4530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4531  0014AA  0100               	movlb	0	; () banked
  4532  0014AC  4BD5               	infsnz	efgtoa@i& (0+255),f,b
  4533  0014AE  2BD6               	incf	(efgtoa@i+1)& (0+255),f,b
  4534  0014B0                     l6843:
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4538  0014B0  51BF               	movf	efgtoa@m& (0+255),w,b
  4539  0014B2  5DD5               	subwf	efgtoa@i& (0+255),w,b
  4540  0014B4  51D6               	movf	(efgtoa@i+1)& (0+255),w,b
  4541  0014B6  0A80               	xorlw	128
  4542  0014B8  6FA6               	movwf	??_efgtoa& (0+255),b
  4543  0014BA  51C0               	movf	(efgtoa@m+1)& (0+255),w,b
  4544  0014BC  0A80               	xorlw	128
  4545  0014BE  59A6               	subwfb	??_efgtoa& (0+255),w,b
  4546  0014C0  A0D8               	btfss	status,0,c
  4547  0014C2  D77A               	goto	l6835
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4551  0014C4  C0DF  F06E         	movff	efgtoa@u,___flmul@b
  4552  0014C8  C0E0  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4553  0014CC  C0E1  F070         	movff	efgtoa@u+2,___flmul@b+2
  4554  0014D0  C0E2  F071         	movff	efgtoa@u+3,___flmul@b+3
  4555  0014D4  0E00               	movlw	0
  4556  0014D6  6F72               	movwf	___flmul@a& (0+255),b
  4557  0014D8  0E00               	movlw	0
  4558  0014DA  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4559  0014DC  0EA0               	movlw	160
  4560  0014DE  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4561  0014E0  0E40               	movlw	64
  4562  0014E2  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4563  0014E4  ECC5  F00F         	call	___flmul	;wreg free
  4564  0014E8  C06E  F0D1         	movff	?___flmul,efgtoa@l
  4565  0014EC  C06F  F0D2         	movff	?___flmul+1,efgtoa@l+1
  4566  0014F0  C070  F0D3         	movff	?___flmul+2,efgtoa@l+2
  4567  0014F4  C071  F0D4         	movff	?___flmul+3,efgtoa@l+3
  4568                           
  4569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4570  0014F8  C0CD  F087         	movff	efgtoa@h,___flge@ff1
  4571  0014FC  C0CE  F088         	movff	efgtoa@h+1,___flge@ff1+1
  4572  001500  C0CF  F089         	movff	efgtoa@h+2,___flge@ff1+2
  4573  001504  C0D0  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  4574  001508  C0D1  F08B         	movff	efgtoa@l,___flge@ff2
  4575  00150C  C0D2  F08C         	movff	efgtoa@l+1,___flge@ff2+1
  4576  001510  C0D3  F08D         	movff	efgtoa@l+2,___flge@ff2+2
  4577  001514  C0D4  F08E         	movff	efgtoa@l+3,___flge@ff2+3
  4578  001518  EC89  F01A         	call	___flge	;wreg free
  4579  00151C  0100               	movlb	0	; () banked
  4580  00151E  A0D8               	btfss	status,0,c
  4581  001520  D016               	goto	u8730
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4585                           
  4586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4590  001522  C0CD  F060         	movff	efgtoa@h,___fleq@ff1
  4591  001526  C0CE  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  4592  00152A  C0CF  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  4593  00152E  C0D0  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  4594  001532  C0D1  F064         	movff	efgtoa@l,___fleq@ff2
  4595  001536  C0D2  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  4596  00153A  C0D3  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  4597  00153E  C0D4  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  4598  001542  ECC3  F01D         	call	___fleq	;wreg free
  4599  001546  0100               	movlb	0	; () banked
  4600  001548  B0D8               	btfsc	status,0,c
  4601                           
  4602                           ; BSR set to: 0
  4603  00154A  B1C3               	btfsc	efgtoa@d& (0+255),0,b
  4604  00154C  D008               	goto	l6857
  4605  00154E                     u8730:
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4609  00154E  0E00               	movlw	0
  4610  001550  6FD1               	movwf	efgtoa@l& (0+255),b
  4611  001552  0E00               	movlw	0
  4612  001554  6FD2               	movwf	(efgtoa@l+1)& (0+255),b
  4613  001556  0E00               	movlw	0
  4614  001558  6FD3               	movwf	(efgtoa@l+2)& (0+255),b
  4615  00155A  0E00               	movlw	0
  4616  00155C  6FD4               	movwf	(efgtoa@l+3)& (0+255),b
  4617  00155E                     l6857:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4621  00155E  C0D7  F087         	movff	efgtoa@g,___fladd@b
  4622  001562  C0D8  F088         	movff	efgtoa@g+1,___fladd@b+1
  4623  001566  C0D9  F089         	movff	efgtoa@g+2,___fladd@b+2
  4624  00156A  C0DA  F08A         	movff	efgtoa@g+3,___fladd@b+3
  4625  00156E  C0D1  F08B         	movff	efgtoa@l,___fladd@a
  4626  001572  C0D2  F08C         	movff	efgtoa@l+1,___fladd@a+1
  4627  001576  C0D3  F08D         	movff	efgtoa@l+2,___fladd@a+2
  4628  00157A  C0D4  F08E         	movff	efgtoa@l+3,___fladd@a+3
  4629  00157E  EC6F  F011         	call	___fladd	;wreg free
  4630  001582  C087  F0CD         	movff	?___fladd,efgtoa@h
  4631  001586  C088  F0CE         	movff	?___fladd+1,efgtoa@h+1
  4632  00158A  C089  F0CF         	movff	?___fladd+2,efgtoa@h+2
  4633  00158E  C08A  F0D0         	movff	?___fladd+3,efgtoa@h+3
  4634                           
  4635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4636  001592  C0AB  F0DF         	movff	efgtoa@ou,efgtoa@u
  4637  001596  C0AC  F0E0         	movff	efgtoa@ou+1,efgtoa@u+1
  4638  00159A  C0AD  F0E1         	movff	efgtoa@ou+2,efgtoa@u+2
  4639  00159E  C0AE  F0E2         	movff	efgtoa@ou+3,efgtoa@u+3
  4640                           
  4641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4642  0015A2  0E65               	movlw	101
  4643  0015A4  0100               	movlb	0	; () banked
  4644  0015A6  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4645  0015A8  B4D8               	btfsc	status,2,c
  4646  0015AA  D005               	goto	l6865
  4647                           
  4648                           ; BSR set to: 0
  4649  0015AC  C0DB  F0C1         	movff	efgtoa@e,efgtoa@ne
  4650  0015B0  C0DC  F0C2         	movff	efgtoa@e+1,efgtoa@ne+1
  4651  0015B4  D004               	goto	l417
  4652  0015B6                     l6865:
  4653                           
  4654                           ; BSR set to: 0
  4655  0015B6  0E00               	movlw	0
  4656  0015B8  6FC2               	movwf	(efgtoa@ne+1)& (0+255),b
  4657  0015BA  0E00               	movlw	0
  4658  0015BC  6FC1               	movwf	efgtoa@ne& (0+255),b
  4659  0015BE                     l417:
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4663  0015BE  0E00               	movlw	0
  4664  0015C0  6FBE               	movwf	(efgtoa@pp+1)& (0+255),b
  4665  0015C2  0E00               	movlw	0
  4666  0015C4  6FBD               	movwf	efgtoa@pp& (0+255),b
  4667                           
  4668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4669  0015C6  0E00               	movlw	0
  4670  0015C8  6FBC               	movwf	(efgtoa@t+1)& (0+255),b
  4671  0015CA  0E00               	movlw	0
  4672  0015CC  6FBB               	movwf	efgtoa@t& (0+255),b
  4673                           
  4674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4675  0015CE  0E00               	movlw	0
  4676  0015D0  6FD6               	movwf	(efgtoa@i+1)& (0+255),b
  4677  0015D2  0E00               	movlw	0
  4678  0015D4  6FD5               	movwf	efgtoa@i& (0+255),b
  4679                           
  4680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4681  0015D6  D0C8               	goto	l6915
  4682  0015D8                     l6867:
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4686  0015D8  C0CD  F060         	movff	efgtoa@h,___fldiv@b
  4687  0015DC  C0CE  F061         	movff	efgtoa@h+1,___fldiv@b+1
  4688  0015E0  C0CF  F062         	movff	efgtoa@h+2,___fldiv@b+2
  4689  0015E4  C0D0  F063         	movff	efgtoa@h+3,___fldiv@b+3
  4690  0015E8  C0DF  F064         	movff	efgtoa@u,___fldiv@a
  4691  0015EC  C0E0  F065         	movff	efgtoa@u+1,___fldiv@a+1
  4692  0015F0  C0E1  F066         	movff	efgtoa@u+2,___fldiv@a+2
  4693  0015F4  C0E2  F067         	movff	efgtoa@u+3,___fldiv@a+3
  4694  0015F8  EC7C  F014         	call	___fldiv	;wreg free
  4695  0015FC  C060  F079         	movff	?___fldiv,floorf@x
  4696  001600  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  4697  001604  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  4698  001608  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  4699  00160C  ECC1  F015         	call	_floorf	;wreg free
  4700  001610  C079  F0D1         	movff	?_floorf,efgtoa@l
  4701  001614  C07A  F0D2         	movff	?_floorf+1,efgtoa@l+1
  4702  001618  C07B  F0D3         	movff	?_floorf+2,efgtoa@l+2
  4703  00161C  C07C  F0D4         	movff	?_floorf+3,efgtoa@l+3
  4704                           
  4705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4706  001620  C0D1  F087         	movff	efgtoa@l,___fltol@f1
  4707  001624  C0D2  F088         	movff	efgtoa@l+1,___fltol@f1+1
  4708  001628  C0D3  F089         	movff	efgtoa@l+2,___fltol@f1+2
  4709  00162C  C0D4  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  4710  001630  ECC1  F01B         	call	___fltol	;wreg free
  4711  001634  C087  F0C3         	movff	?___fltol,efgtoa@d
  4712  001638  C088  F0C4         	movff	?___fltol+1,efgtoa@d+1
  4713                           
  4714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4715  00163C  B83C               	btfsc	_flags,4,c
  4716  00163E  D00D               	goto	l6879
  4717  001640  0100               	movlb	0	; () banked
  4718  001642  51C3               	movf	efgtoa@d& (0+255),w,b
  4719  001644  11C4               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4720  001646  A4D8               	btfss	status,2,c
  4721  001648  D008               	goto	l6879
  4722                           
  4723                           ; BSR set to: 0
  4724  00164A  0E67               	movlw	103
  4725  00164C  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4726  00164E  B4D8               	btfsc	status,2,c
  4727                           
  4728                           ; BSR set to: 0
  4729  001650  AFC2               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4730  001652  D003               	goto	l6879
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4734  001654  4BBB               	infsnz	efgtoa@t& (0+255),f,b
  4735  001656  2BBC               	incf	(efgtoa@t+1)& (0+255),f,b
  4736                           
  4737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4738  001658  D03A               	goto	l6907
  4739  00165A                     l6879:
  4740                           
  4741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4742  00165A  0100               	movlb	0	; () banked
  4743  00165C  51BD               	movf	efgtoa@pp& (0+255),w,b
  4744  00165E  11BE               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4745  001660  B4D8               	btfsc	status,2,c
  4746                           
  4747                           ; BSR set to: 0
  4748  001662  AFC2               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4749  001664  D022               	goto	l6899
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4753  001666  0E22               	movlw	low _dbuf
  4754  001668  25DD               	addwf	efgtoa@n& (0+255),w,b
  4755  00166A  6ED9               	movwf	fsr2l,c
  4756  00166C  0E01               	movlw	high _dbuf
  4757  00166E  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4758  001670  6EDA               	movwf	fsr2h,c
  4759  001672  0E2E               	movlw	46
  4760  001674  6EDF               	movwf	indf2,c
  4761                           
  4762                           ; BSR set to: 0
  4763  001676  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4764  001678  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4768  00167A  07CA               	decf	efgtoa@w& (0+255),f,b
  4769  00167C  A0D8               	btfss	status,0,c
  4770  00167E  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4774  001680  0E00               	movlw	0
  4775  001682  6FBE               	movwf	(efgtoa@pp+1)& (0+255),b
  4776  001684  0E01               	movlw	1
  4777  001686  6FBD               	movwf	efgtoa@pp& (0+255),b
  4778  001688  D010               	goto	l6899
  4779  00168A                     l6891:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4783  00168A  0E22               	movlw	low _dbuf
  4784  00168C  25DD               	addwf	efgtoa@n& (0+255),w,b
  4785  00168E  6ED9               	movwf	fsr2l,c
  4786  001690  0E01               	movlw	high _dbuf
  4787  001692  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4788  001694  6EDA               	movwf	fsr2h,c
  4789  001696  0E30               	movlw	48
  4790  001698  6EDF               	movwf	indf2,c
  4791                           
  4792                           ; BSR set to: 0
  4793  00169A  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4794  00169C  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4798  00169E  07CA               	decf	efgtoa@w& (0+255),f,b
  4799  0016A0  A0D8               	btfss	status,0,c
  4800  0016A2  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4804  0016A4  07BB               	decf	efgtoa@t& (0+255),f,b
  4805  0016A6  A0D8               	btfss	status,0,c
  4806  0016A8  07BC               	decf	(efgtoa@t+1)& (0+255),f,b
  4807  0016AA                     l6899:
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4811  0016AA  51BB               	movf	efgtoa@t& (0+255),w,b
  4812  0016AC  11BC               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4813  0016AE  A4D8               	btfss	status,2,c
  4814  0016B0  D7EC               	goto	l6891
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4818  0016B2  0E22               	movlw	low _dbuf
  4819  0016B4  25DD               	addwf	efgtoa@n& (0+255),w,b
  4820  0016B6  6ED9               	movwf	fsr2l,c
  4821  0016B8  0E01               	movlw	high _dbuf
  4822  0016BA  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4823  0016BC  6EDA               	movwf	fsr2h,c
  4824  0016BE  51C3               	movf	efgtoa@d& (0+255),w,b
  4825  0016C0  0F30               	addlw	48
  4826  0016C2  6EDF               	movwf	indf2,c
  4827                           
  4828                           ; BSR set to: 0
  4829  0016C4  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4830  0016C6  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4834  0016C8  07CA               	decf	efgtoa@w& (0+255),f,b
  4835  0016CA  A0D8               	btfss	status,0,c
  4836  0016CC  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  4837  0016CE                     l6907:
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4841  0016CE  C0CD  F097         	movff	efgtoa@h,___flsub@b
  4842  0016D2  C0CE  F098         	movff	efgtoa@h+1,___flsub@b+1
  4843  0016D6  C0CF  F099         	movff	efgtoa@h+2,___flsub@b+2
  4844  0016DA  C0D0  F09A         	movff	efgtoa@h+3,___flsub@b+3
  4845  0016DE  C0DF  F072         	movff	efgtoa@u,___flmul@a
  4846  0016E2  C0E0  F073         	movff	efgtoa@u+1,___flmul@a+1
  4847  0016E6  C0E1  F074         	movff	efgtoa@u+2,___flmul@a+2
  4848  0016EA  C0E2  F075         	movff	efgtoa@u+3,___flmul@a+3
  4849  0016EE  C0D1  F06E         	movff	efgtoa@l,___flmul@b
  4850  0016F2  C0D2  F06F         	movff	efgtoa@l+1,___flmul@b+1
  4851  0016F6  C0D3  F070         	movff	efgtoa@l+2,___flmul@b+2
  4852  0016FA  C0D4  F071         	movff	efgtoa@l+3,___flmul@b+3
  4853  0016FE  ECC5  F00F         	call	___flmul	;wreg free
  4854  001702  C06E  F09B         	movff	?___flmul,___flsub@a
  4855  001706  C06F  F09C         	movff	?___flmul+1,___flsub@a+1
  4856  00170A  C070  F09D         	movff	?___flmul+2,___flsub@a+2
  4857  00170E  C071  F09E         	movff	?___flmul+3,___flsub@a+3
  4858  001712  ECEA  F020         	call	___flsub	;wreg free
  4859  001716  C097  F0CD         	movff	?___flsub,efgtoa@h
  4860  00171A  C098  F0CE         	movff	?___flsub+1,efgtoa@h+1
  4861  00171E  C099  F0CF         	movff	?___flsub+2,efgtoa@h+2
  4862  001722  C09A  F0D0         	movff	?___flsub+3,efgtoa@h+3
  4863                           
  4864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4865  001726  C0DF  F060         	movff	efgtoa@u,___fldiv@b
  4866  00172A  C0E0  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4867  00172E  C0E1  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4868  001732  C0E2  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4869  001736  0E00               	movlw	0
  4870  001738  0100               	movlb	0	; () banked
  4871  00173A  6F64               	movwf	___fldiv@a& (0+255),b
  4872  00173C  0E00               	movlw	0
  4873  00173E  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4874  001740  0E20               	movlw	32
  4875  001742  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4876  001744  0E41               	movlw	65
  4877  001746  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4878  001748  EC7C  F014         	call	___fldiv	;wreg free
  4879  00174C  C060  F0DF         	movff	?___fldiv,efgtoa@u
  4880  001750  C061  F0E0         	movff	?___fldiv+1,efgtoa@u+1
  4881  001754  C062  F0E1         	movff	?___fldiv+2,efgtoa@u+2
  4882  001758  C063  F0E2         	movff	?___fldiv+3,efgtoa@u+3
  4883                           
  4884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4885  00175C  0100               	movlb	0	; () banked
  4886  00175E  07C1               	decf	efgtoa@ne& (0+255),f,b
  4887  001760  A0D8               	btfss	status,0,c
  4888  001762  07C2               	decf	(efgtoa@ne+1)& (0+255),f,b
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4892  001764  4BD5               	infsnz	efgtoa@i& (0+255),f,b
  4893  001766  2BD6               	incf	(efgtoa@i+1)& (0+255),f,b
  4894  001768                     l6915:
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4898  001768  51BF               	movf	efgtoa@m& (0+255),w,b
  4899  00176A  5DD5               	subwf	efgtoa@i& (0+255),w,b
  4900  00176C  51D6               	movf	(efgtoa@i+1)& (0+255),w,b
  4901  00176E  0A80               	xorlw	128
  4902  001770  6FA6               	movwf	??_efgtoa& (0+255),b
  4903  001772  51C0               	movf	(efgtoa@m+1)& (0+255),w,b
  4904  001774  0A80               	xorlw	128
  4905  001776  59A6               	subwfb	??_efgtoa& (0+255),w,b
  4906  001778  B0D8               	btfsc	status,0,c
  4907  00177A  D008               	goto	u8830
  4908                           
  4909                           ; BSR set to: 0
  4910  00177C  BFDE               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4911  00177E  D72C               	goto	l6867
  4912  001780  51DE               	movf	(efgtoa@n+1)& (0+255),w,b
  4913  001782  E104               	bnz	u8830
  4914  001784  0E4B               	movlw	75
  4915  001786  5DDD               	subwf	efgtoa@n& (0+255),w,b
  4916  001788  A0D8               	btfss	status,0,c
  4917  00178A  D726               	goto	l6867
  4918  00178C                     u8830:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4922  00178C  51BD               	movf	efgtoa@pp& (0+255),w,b
  4923  00178E  11BE               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4924  001790  B4D8               	btfsc	status,2,c
  4925                           
  4926                           ; BSR set to: 0
  4927  001792  A83C               	btfss	_flags,4,c
  4928  001794  D00A               	goto	l6927
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4932  001796  0E22               	movlw	low _dbuf
  4933  001798  25DD               	addwf	efgtoa@n& (0+255),w,b
  4934  00179A  6ED9               	movwf	fsr2l,c
  4935  00179C  0E01               	movlw	high _dbuf
  4936  00179E  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4937  0017A0  6EDA               	movwf	fsr2h,c
  4938  0017A2  0E2E               	movlw	46
  4939  0017A4  6EDF               	movwf	indf2,c
  4940                           
  4941                           ; BSR set to: 0
  4942  0017A6  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4943  0017A8  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4944  0017AA                     l6927:
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4948  0017AA  0E22               	movlw	low _dbuf
  4949  0017AC  25DD               	addwf	efgtoa@n& (0+255),w,b
  4950  0017AE  6ED9               	movwf	fsr2l,c
  4951  0017B0  0E01               	movlw	high _dbuf
  4952  0017B2  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4953  0017B4  6EDA               	movwf	fsr2h,c
  4954  0017B6  0E00               	movlw	0
  4955  0017B8  6EDF               	movwf	indf2,c
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4959  0017BA  0E65               	movlw	101
  4960  0017BC  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4961  0017BE  A4D8               	btfss	status,2,c
  4962  0017C0  D47C               	goto	l6739
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4966  0017C2  0E00               	movlw	0
  4967  0017C4  6FD6               	movwf	(efgtoa@i+1)& (0+255),b
  4968  0017C6  0E4F               	movlw	79
  4969  0017C8  6FD5               	movwf	efgtoa@i& (0+255),b
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4973  0017CA  0E22               	movlw	low _dbuf
  4974  0017CC  25D5               	addwf	efgtoa@i& (0+255),w,b
  4975  0017CE  6ED9               	movwf	fsr2l,c
  4976  0017D0  0E01               	movlw	high _dbuf
  4977  0017D2  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4978  0017D4  6EDA               	movwf	fsr2h,c
  4979  0017D6  0E00               	movlw	0
  4980  0017D8  6EDF               	movwf	indf2,c
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4984  0017DA  0E00               	movlw	0
  4985  0017DC  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  4986  0017DE  0E00               	movlw	0
  4987  0017E0  6FC5               	movwf	efgtoa@sign& (0+255),b
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4991  0017E2  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4992  0017E4  D008               	goto	l6943
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4996  0017E6  0E00               	movlw	0
  4997  0017E8  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  4998  0017EA  0E01               	movlw	1
  4999  0017EC  6FC5               	movwf	efgtoa@sign& (0+255),b
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  5003  0017EE  6DDB               	negf	efgtoa@e& (0+255),b
  5004  0017F0  1FDC               	comf	(efgtoa@e+1)& (0+255),f,b
  5005  0017F2  B0D8               	btfsc	status,0,c
  5006  0017F4  2BDC               	incf	(efgtoa@e+1)& (0+255),f,b
  5007  0017F6                     l6943:
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  5011  0017F6  0E00               	movlw	0
  5012  0017F8  6FC8               	movwf	(efgtoa@p+1)& (0+255),b
  5013  0017FA  0E02               	movlw	2
  5014  0017FC  6FC7               	movwf	efgtoa@p& (0+255),b
  5015                           
  5016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5017  0017FE  D02C               	goto	l6955
  5018  001800                     l6945:
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  5022  001800  07D5               	decf	efgtoa@i& (0+255),f,b
  5023  001802  A0D8               	btfss	status,0,c
  5024  001804  07D6               	decf	(efgtoa@i+1)& (0+255),f,b
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  5028  001806  0E22               	movlw	low _dbuf
  5029  001808  25D5               	addwf	efgtoa@i& (0+255),w,b
  5030  00180A  6ED9               	movwf	fsr2l,c
  5031  00180C  0E01               	movlw	high _dbuf
  5032  00180E  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5033  001810  6EDA               	movwf	fsr2h,c
  5034  001812  C0DB  F060         	movff	efgtoa@e,___awmod@dividend
  5035  001816  C0DC  F061         	movff	efgtoa@e+1,___awmod@dividend+1
  5036  00181A  0E00               	movlw	0
  5037  00181C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5038  00181E  0E0A               	movlw	10
  5039  001820  6F62               	movwf	___awmod@divisor& (0+255),b
  5040  001822  EC07  F01F         	call	___awmod	;wreg free
  5041  001826  0100               	movlb	0	; () banked
  5042  001828  5160               	movf	?___awmod& (0+255),w,b
  5043  00182A  0F30               	addlw	48
  5044  00182C  6EDF               	movwf	indf2,c
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  5048  00182E  C0DB  F060         	movff	efgtoa@e,___awdiv@dividend
  5049  001832  C0DC  F061         	movff	efgtoa@e+1,___awdiv@dividend+1
  5050  001836  0E00               	movlw	0
  5051  001838  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5052  00183A  0E0A               	movlw	10
  5053  00183C  6F62               	movwf	___awdiv@divisor& (0+255),b
  5054  00183E  EC09  F01E         	call	___awdiv	;wreg free
  5055  001842  C060  F0DB         	movff	?___awdiv,efgtoa@e
  5056  001846  C061  F0DC         	movff	?___awdiv+1,efgtoa@e+1
  5057                           
  5058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  5059  00184A  0100               	movlb	0	; () banked
  5060  00184C  07C7               	decf	efgtoa@p& (0+255),f,b
  5061  00184E  A0D8               	btfss	status,0,c
  5062  001850  07C8               	decf	(efgtoa@p+1)& (0+255),f,b
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  5066  001852  07CA               	decf	efgtoa@w& (0+255),f,b
  5067  001854  A0D8               	btfss	status,0,c
  5068  001856  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  5069  001858                     l6955:
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5073  001858  51DB               	movf	efgtoa@e& (0+255),w,b
  5074  00185A  11DC               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5075  00185C  A4D8               	btfss	status,2,c
  5076  00185E  D7D0               	goto	l6945
  5077                           
  5078                           ; BSR set to: 0
  5079  001860  BFC8               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5080  001862  D005               	goto	u8890
  5081  001864  51C8               	movf	(efgtoa@p+1)& (0+255),w,b
  5082  001866  E1CC               	bnz	l6945
  5083  001868  05C7               	decf	efgtoa@p& (0+255),w,b
  5084  00186A  B0D8               	btfsc	status,0,c
  5085  00186C  D7C9               	goto	l6945
  5086  00186E                     u8890:
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  5090  00186E  07D5               	decf	efgtoa@i& (0+255),f,b
  5091  001870  A0D8               	btfss	status,0,c
  5092  001872  07D6               	decf	(efgtoa@i+1)& (0+255),f,b
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  5096  001874  51C5               	movf	efgtoa@sign& (0+255),w,b
  5097  001876  11C6               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5098  001878  A4D8               	btfss	status,2,c
  5099  00187A  D004               	goto	l6965
  5100                           
  5101                           ; BSR set to: 0
  5102  00187C  0E00               	movlw	0
  5103  00187E  6FB6               	movwf	(_efgtoa$1420+1)& (0+255),b
  5104  001880  0E2B               	movlw	43
  5105  001882  D003               	goto	L4
  5106  001884                     l6965:
  5107                           
  5108                           ; BSR set to: 0
  5109  001884  0E00               	movlw	0
  5110  001886  6FB6               	movwf	(_efgtoa$1420+1)& (0+255),b
  5111  001888  0E2D               	movlw	45
  5112  00188A                     L4:
  5113  00188A  6FB5               	movwf	_efgtoa$1420& (0+255),b
  5114                           
  5115                           ; BSR set to: 0
  5116  00188C  0E22               	movlw	low _dbuf
  5117  00188E  25D5               	addwf	efgtoa@i& (0+255),w,b
  5118  001890  6ED9               	movwf	fsr2l,c
  5119  001892  0E01               	movlw	high _dbuf
  5120  001894  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5121  001896  6EDA               	movwf	fsr2h,c
  5122  001898  C0B5  FFDF         	movff	_efgtoa$1420,indf2
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  5126  00189C  07CA               	decf	efgtoa@w& (0+255),f,b
  5127  00189E  A0D8               	btfss	status,0,c
  5128  0018A0  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5132  0018A2  07D5               	decf	efgtoa@i& (0+255),f,b
  5133  0018A4  A0D8               	btfss	status,0,c
  5134  0018A6  07D6               	decf	(efgtoa@i+1)& (0+255),f,b
  5135                           
  5136                           ; BSR set to: 0
  5137  0018A8  0EBF               	movlw	191
  5138  0018AA  6FA6               	movwf	??_efgtoa& (0+255),b
  5139  0018AC  0EFF               	movlw	255
  5140  0018AE  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  5141  0018B0  51A5               	movf	efgtoa@c& (0+255),w,b
  5142  0018B2  6FA8               	movwf	(??_efgtoa+2)& (0+255),b
  5143  0018B4  6BA9               	clrf	(??_efgtoa+3)& (0+255),b
  5144  0018B6  51A6               	movf	??_efgtoa& (0+255),w,b
  5145  0018B8  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  5146  0018BA  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  5147  0018BC  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5148  0018BE  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  5149  0018C0  E106               	bnz	u8910
  5150  0018C2  0E1A               	movlw	26
  5151  0018C4  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  5152  0018C6  B0D8               	btfsc	status,0,c
  5153  0018C8  D002               	goto	u8910
  5154  0018CA  0E01               	movlw	1
  5155  0018CC  D001               	goto	u8920
  5156  0018CE                     u8910:
  5157  0018CE  0E00               	movlw	0
  5158  0018D0                     u8920:
  5159  0018D0  6FB9               	movwf	_efgtoa$1422& (0+255),b
  5160  0018D2  6BBA               	clrf	(_efgtoa$1422+1)& (0+255),b
  5161                           
  5162                           ; BSR set to: 0
  5163  0018D4  51B9               	movf	_efgtoa$1422& (0+255),w,b
  5164  0018D6  11BA               	iorwf	(_efgtoa$1422+1)& (0+255),w,b
  5165  0018D8  A4D8               	btfss	status,2,c
  5166  0018DA  D004               	goto	l6981
  5167                           
  5168                           ; BSR set to: 0
  5169  0018DC  0E00               	movlw	0
  5170  0018DE  6FB8               	movwf	(_efgtoa$1421+1)& (0+255),b
  5171  0018E0  0E65               	movlw	101
  5172  0018E2  D003               	goto	L5
  5173  0018E4                     l6981:
  5174                           
  5175                           ; BSR set to: 0
  5176  0018E4  0E00               	movlw	0
  5177  0018E6  6FB8               	movwf	(_efgtoa$1421+1)& (0+255),b
  5178  0018E8  0E45               	movlw	69
  5179  0018EA                     L5:
  5180  0018EA  6FB7               	movwf	_efgtoa$1421& (0+255),b
  5181                           
  5182                           ; BSR set to: 0
  5183  0018EC  0E22               	movlw	low _dbuf
  5184  0018EE  25D5               	addwf	efgtoa@i& (0+255),w,b
  5185  0018F0  6ED9               	movwf	fsr2l,c
  5186  0018F2  0E01               	movlw	high _dbuf
  5187  0018F4  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5188  0018F6  6EDA               	movwf	fsr2h,c
  5189  0018F8  C0B7  FFDF         	movff	_efgtoa$1421,indf2
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  5193  0018FC  07CA               	decf	efgtoa@w& (0+255),f,b
  5194  0018FE  A0D8               	btfss	status,0,c
  5195  001900  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  5199  001902  0E22               	movlw	low _dbuf
  5200  001904  25DD               	addwf	efgtoa@n& (0+255),w,b
  5201  001906  6F60               	movwf	strcpy@dest& (0+255),b
  5202  001908  0E01               	movlw	high _dbuf
  5203  00190A  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5204  00190C  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  5205  00190E  0E22               	movlw	low _dbuf
  5206  001910  25D5               	addwf	efgtoa@i& (0+255),w,b
  5207  001912  6F62               	movwf	strcpy@src& (0+255),b
  5208  001914  0E01               	movlw	high _dbuf
  5209  001916  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5210  001918  6F63               	movwf	(strcpy@src+1)& (0+255),b
  5211  00191A  EC6F  F020         	call	_strcpy	;wreg free
  5212  00191E  EF5D  F008         	goto	l6739
  5213  001922                     __end_of_efgtoa:
  5214                           	opt callstack 0
  5215                           
  5216 ;; *************** function _tolower *****************
  5217 ;; Defined at:
  5218 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  c               2    6[BANK0 ] int 
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;		None
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  2    6[BANK0 ] int 
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5232 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5233 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5234 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5235 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5236 ;;Total ram usage:        8 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    3
  5239 ;; This function calls:
  5240 ;;		_isupper
  5241 ;; This function is called by:
  5242 ;;		_efgtoa
  5243 ;;		_vfpfcnvrt
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text10
  5248  004186                     __ptext10:
  5249                           	opt callstack 0
  5250  004186                     _tolower:
  5251                           	opt callstack 23
  5252                           
  5253                           ;incstack = 0
  5254  004186  0EBF               	movlw	191
  5255  004188  0100               	movlb	0	; () banked
  5256  00418A  6F68               	movwf	??_tolower& (0+255),b
  5257  00418C  0EFF               	movlw	255
  5258  00418E  6F69               	movwf	(??_tolower+1)& (0+255),b
  5259  004190  C066  F06A         	movff	tolower@c,??_tolower+2
  5260  004194  C067  F06B         	movff	tolower@c+1,??_tolower+3
  5261  004198  5168               	movf	??_tolower& (0+255),w,b
  5262  00419A  276A               	addwf	(??_tolower+2)& (0+255),f,b
  5263  00419C  5169               	movf	(??_tolower+1)& (0+255),w,b
  5264  00419E  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  5265  0041A0  516B               	movf	(??_tolower+3)& (0+255),w,b
  5266  0041A2  E106               	bnz	u7470
  5267  0041A4  0E1A               	movlw	26
  5268  0041A6  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  5269  0041A8  B0D8               	btfsc	status,0,c
  5270  0041AA  D002               	goto	u7470
  5271  0041AC  0E01               	movlw	1
  5272  0041AE  D001               	goto	u7480
  5273  0041B0                     u7470:
  5274  0041B0  0E00               	movlw	0
  5275  0041B2                     u7480:
  5276  0041B2  6F6C               	movwf	_tolower$2037& (0+255),b
  5277  0041B4  6B6D               	clrf	(_tolower$2037+1)& (0+255),b
  5278                           
  5279                           ; BSR set to: 0
  5280  0041B6  516C               	movf	_tolower$2037& (0+255),w,b
  5281  0041B8  116D               	iorwf	(_tolower$2037+1)& (0+255),w,b
  5282  0041BA  B4D8               	btfsc	status,2,c
  5283  0041BC  D006               	goto	l1321
  5284                           
  5285                           ; BSR set to: 0
  5286  0041BE  0E20               	movlw	32
  5287  0041C0  1166               	iorwf	tolower@c& (0+255),w,b
  5288  0041C2  6F66               	movwf	?_tolower& (0+255),b
  5289  0041C4  5167               	movf	(tolower@c+1)& (0+255),w,b
  5290  0041C6  6F67               	movwf	(?_tolower+1)& (0+255),b
  5291  0041C8  0012               	return	
  5292  0041CA                     l1321:
  5293                           
  5294                           ; BSR set to: 0
  5295  0041CA  C066  F066         	movff	tolower@c,?_tolower
  5296  0041CE  C067  F067         	movff	tolower@c+1,?_tolower+1
  5297                           
  5298                           ; BSR set to: 0
  5299  0041D2  0012               	return		;funcret
  5300  0041D4                     __end_of_tolower:
  5301                           	opt callstack 0
  5302                           
  5303 ;; *************** function _isupper *****************
  5304 ;; Defined at:
  5305 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  c               2    0[BANK0 ] int 
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;		None
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  2    0[BANK0 ] int 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5319 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5321 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5322 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5323 ;;Total ram usage:        6 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    2
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		_efgtoa
  5330 ;;		_vfpfcnvrt
  5331 ;;		_tolower
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text11
  5336  00430A                     __ptext11:
  5337                           	opt callstack 0
  5338  00430A                     _isupper:
  5339                           	opt callstack 23
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;incstack = 0
  5343  00430A  0EBF               	movlw	191
  5344  00430C  0100               	movlb	0	; () banked
  5345  00430E  6F62               	movwf	??_isupper& (0+255),b
  5346  004310  0EFF               	movlw	255
  5347  004312  6F63               	movwf	(??_isupper+1)& (0+255),b
  5348  004314  C060  F064         	movff	isupper@c,??_isupper+2
  5349  004318  C061  F065         	movff	isupper@c+1,??_isupper+3
  5350  00431C  5162               	movf	??_isupper& (0+255),w,b
  5351  00431E  2764               	addwf	(??_isupper+2)& (0+255),f,b
  5352  004320  5163               	movf	(??_isupper+1)& (0+255),w,b
  5353  004322  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  5354  004324  5165               	movf	(??_isupper+3)& (0+255),w,b
  5355  004326  E106               	bnz	u6930
  5356  004328  0E1A               	movlw	26
  5357  00432A  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  5358  00432C  B0D8               	btfsc	status,0,c
  5359  00432E  D002               	goto	u6930
  5360  004330  0E01               	movlw	1
  5361  004332  D001               	goto	u6940
  5362  004334                     u6930:
  5363  004334  0E00               	movlw	0
  5364  004336                     u6940:
  5365  004336  6F60               	movwf	?_isupper& (0+255),b
  5366  004338  6B61               	clrf	(?_isupper+1)& (0+255),b
  5367                           
  5368                           ; BSR set to: 0
  5369  00433A  0012               	return		;funcret
  5370  00433C                     __end_of_isupper:
  5371                           	opt callstack 0
  5372                           
  5373 ;; *************** function _strcpy *****************
  5374 ;; Defined at:
  5375 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  5378 ;;		 -> dbuf(80), 
  5379 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  5380 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  5381 ;;		 -> dbuf(80), 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  d               2    8[BANK0 ] PTR unsigned char 
  5384 ;;		 -> dbuf(80), 
  5385 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5386 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  5387 ;;		 -> dbuf(80), 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  2    0[BANK0 ] PTR unsigned char 
  5390 ;; Registers used:
  5391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5397 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5398 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5399 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5400 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5401 ;;Total ram usage:       10 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:    2
  5404 ;; This function calls:
  5405 ;;		Nothing
  5406 ;; This function is called by:
  5407 ;;		_efgtoa
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text12
  5412  0040DE                     __ptext12:
  5413                           	opt callstack 0
  5414  0040DE                     _strcpy:
  5415                           	opt callstack 23
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;incstack = 0
  5419  0040DE  C062  F066         	movff	strcpy@src,strcpy@s
  5420  0040E2  C063  F067         	movff	strcpy@src+1,strcpy@s+1
  5421  0040E6  C060  F068         	movff	strcpy@dest,strcpy@d
  5422  0040EA  C061  F069         	movff	strcpy@dest+1,strcpy@d+1
  5423  0040EE                     l6137:
  5424  0040EE  0100               	movlb	0	; () banked
  5425  0040F0  5166               	movf	strcpy@s& (0+255),w,b
  5426  0040F2  6F64               	movwf	??_strcpy& (0+255),b
  5427  0040F4  5167               	movf	(strcpy@s+1)& (0+255),w,b
  5428  0040F6  6F65               	movwf	(??_strcpy+1)& (0+255),b
  5429  0040F8  4B66               	infsnz	strcpy@s& (0+255),f,b
  5430  0040FA  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  5431  0040FC  C064  FFF6         	movff	??_strcpy,tblptrl
  5432  004100  C065  FFF7         	movff	??_strcpy+1,tblptrh
  5433  004104  0E00               	movlw	low (__smallconst shr (0+16))
  5434  004106  6EF8               	movwf	tblptru,c
  5435  004108  C068  FFD9         	movff	strcpy@d,fsr2l
  5436  00410C  C069  FFDA         	movff	strcpy@d+1,fsr2h
  5437  004110  4B68               	infsnz	strcpy@d& (0+255),f,b
  5438  004112  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  5439  004114  0E0E               	movlw	(high __ramtop+-1)
  5440  004116  64F7               	cpfsgt	tblptrh,c
  5441  004118  D003               	bra	u7457
  5442  00411A  0008               	tblrd		*
  5443  00411C  50F5               	movf	tablat,w,c
  5444  00411E  D005               	bra	u7450
  5445  004120                     u7457:
  5446  004120  CFF6 FFE1          	movff	tblptrl,fsr1l
  5447  004124  CFF7 FFE2          	movff	tblptrh,fsr1h
  5448  004128  50E7               	movf	indf1,w,c
  5449  00412A                     u7450:
  5450  00412A  6EDF               	movwf	indf2,c
  5451  00412C  50DF               	movf	indf2,w,c
  5452  00412E  B4D8               	btfsc	status,2,c
  5453  004130  0012               	return	
  5454  004132  D7DD               	goto	l6137
  5455  004134                     __end_of_strcpy:
  5456                           	opt callstack 0
  5457                           
  5458 ;; *************** function _floorf *****************
  5459 ;; Defined at:
  5460 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;  x               4   25[BANK0 ] float 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  u               4   41[BANK0 ] struct .
  5465 ;;  m               4   35[BANK0 ] unsigned long 
  5466 ;;  e               2   39[BANK0 ] int 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  4   25[BANK0 ] float 
  5469 ;; Registers used:
  5470 ;;		wreg, status,2, status,0
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5476 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5477 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5478 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5479 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5480 ;;Total ram usage:       20 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    2
  5483 ;; This function calls:
  5484 ;;		Nothing
  5485 ;; This function is called by:
  5486 ;;		_efgtoa
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text13
  5491  002B82                     __ptext13:
  5492                           	opt callstack 0
  5493  002B82                     _floorf:
  5494                           	opt callstack 23
  5495                           
  5496                           ;incstack = 0
  5497  002B82  C02C  F089         	movff	floorf@F524,floorf@u
  5498  002B86  C02D  F08A         	movff	floorf@F524+1,floorf@u+1
  5499  002B8A  C02E  F08B         	movff	floorf@F524+2,floorf@u+2
  5500  002B8E  C02F  F08C         	movff	floorf@F524+3,floorf@u+3
  5501  002B92  C079  F089         	movff	floorf@x,floorf@u
  5502  002B96  C07A  F08A         	movff	floorf@x+1,floorf@u+1
  5503  002B9A  C07B  F08B         	movff	floorf@x+2,floorf@u+2
  5504  002B9E  C07C  F08C         	movff	floorf@x+3,floorf@u+3
  5505  002BA2  0E81               	movlw	129
  5506  002BA4  0100               	movlb	0	; () banked
  5507  002BA6  6F7D               	movwf	??_floorf& (0+255),b
  5508  002BA8  0EFF               	movlw	255
  5509  002BAA  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5510  002BAC  C089  F07F         	movff	floorf@u,??_floorf+2
  5511  002BB0  C08A  F080         	movff	floorf@u+1,??_floorf+3
  5512  002BB4  C08B  F081         	movff	floorf@u+2,??_floorf+4
  5513  002BB8  C08C  F082         	movff	floorf@u+3,??_floorf+5
  5514  002BBC  0E18               	movlw	24
  5515  002BBE  D005               	goto	u7500
  5516  002BC0                     u7505:
  5517  002BC0  90D8               	bcf	status,0,c
  5518  002BC2  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  5519  002BC4  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  5520  002BC6  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5521  002BC8  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5522  002BCA                     u7500:
  5523  002BCA  2EE8               	decfsz	wreg,f,c
  5524  002BCC  D7F9               	goto	u7505
  5525  002BCE  517F               	movf	(??_floorf+2)& (0+255),w,b
  5526  002BD0  257D               	addwf	??_floorf& (0+255),w,b
  5527  002BD2  6F87               	movwf	floorf@e& (0+255),b
  5528  002BD4  0E00               	movlw	0
  5529  002BD6  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  5530  002BD8  6F88               	movwf	(floorf@e+1)& (0+255),b
  5531  002BDA  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  5532  002BDC  D00F               	goto	l6155
  5533  002BDE  5188               	movf	(floorf@e+1)& (0+255),w,b
  5534  002BE0  E104               	bnz	u7510
  5535  002BE2  0E17               	movlw	23
  5536  002BE4  5D87               	subwf	floorf@e& (0+255),w,b
  5537  002BE6  A0D8               	btfss	status,0,c
  5538  002BE8  D009               	goto	l6155
  5539  002BEA                     u7510:
  5540                           
  5541                           ; BSR set to: 0
  5542  002BEA  C079  F079         	movff	floorf@x,?_floorf
  5543  002BEE  C07A  F07A         	movff	floorf@x+1,?_floorf+1
  5544  002BF2  C07B  F07B         	movff	floorf@x+2,?_floorf+2
  5545  002BF6  C07C  F07C         	movff	floorf@x+3,?_floorf+3
  5546  002BFA  0012               	return	
  5547  002BFC                     l6155:
  5548                           
  5549                           ; BSR set to: 0
  5550  002BFC  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  5551  002BFE  D05F               	goto	l6165
  5552                           
  5553                           ; BSR set to: 0
  5554  002C00  C087  F07D         	movff	floorf@e,??_floorf
  5555  002C04  0EFF               	movlw	255
  5556  002C06  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5557  002C08  0EFF               	movlw	255
  5558  002C0A  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5559  002C0C  0E7F               	movlw	127
  5560  002C0E  6F80               	movwf	(??_floorf+3)& (0+255),b
  5561  002C10  0E00               	movlw	0
  5562  002C12  6F81               	movwf	(??_floorf+4)& (0+255),b
  5563  002C14                     u7535:
  5564  002C14  677D               	tstfsz	??_floorf& (0+255),b
  5565  002C16  D001               	goto	u7536
  5566  002C18  D007               	goto	u7537
  5567  002C1A                     u7536:
  5568  002C1A  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  5569  002C1C  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  5570  002C1E  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5571  002C20  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5572  002C22  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5573  002C24  2F7D               	decfsz	??_floorf& (0+255),f,b
  5574  002C26  D7F6               	goto	u7535
  5575  002C28                     u7537:
  5576  002C28  C07E  F083         	movff	??_floorf+1,floorf@m
  5577  002C2C  C07F  F084         	movff	??_floorf+2,floorf@m+1
  5578  002C30  C080  F085         	movff	??_floorf+3,floorf@m+2
  5579  002C34  C081  F086         	movff	??_floorf+4,floorf@m+3
  5580  002C38  0100               	movlb	0	; () banked
  5581  002C3A  5183               	movf	floorf@m& (0+255),w,b
  5582  002C3C  1589               	andwf	floorf@u& (0+255),w,b
  5583  002C3E  6F7D               	movwf	??_floorf& (0+255),b
  5584  002C40  5184               	movf	(floorf@m+1)& (0+255),w,b
  5585  002C42  158A               	andwf	(floorf@u+1)& (0+255),w,b
  5586  002C44  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5587  002C46  5185               	movf	(floorf@m+2)& (0+255),w,b
  5588  002C48  158B               	andwf	(floorf@u+2)& (0+255),w,b
  5589  002C4A  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5590  002C4C  5186               	movf	(floorf@m+3)& (0+255),w,b
  5591  002C4E  158C               	andwf	(floorf@u+3)& (0+255),w,b
  5592  002C50  6F80               	movwf	(??_floorf+3)& (0+255),b
  5593  002C52  517D               	movf	??_floorf& (0+255),w,b
  5594  002C54  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5595  002C56  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5596  002C58  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5597  002C5A  B4D8               	btfsc	status,2,c
  5598  002C5C  D7C6               	goto	u7510
  5599                           
  5600                           ; BSR set to: 0
  5601  002C5E  C089  F07D         	movff	floorf@u,??_floorf
  5602  002C62  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  5603  002C66  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  5604  002C6A  C08C  F080         	movff	floorf@u+3,??_floorf+3
  5605  002C6E  0E20               	movlw	32
  5606  002C70  D005               	goto	u7550
  5607  002C72                     u7555:
  5608  002C72  90D8               	bcf	status,0,c
  5609  002C74  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5610  002C76  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5611  002C78  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5612  002C7A  337D               	rrcf	??_floorf& (0+255),f,b
  5613  002C7C                     u7550:
  5614  002C7C  2EE8               	decfsz	wreg,f,c
  5615  002C7E  D7F9               	goto	u7555
  5616  002C80  517D               	movf	??_floorf& (0+255),w,b
  5617  002C82  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5618  002C84  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5619  002C86  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5620  002C88  B4D8               	btfsc	status,2,c
  5621  002C8A  D008               	goto	l1241
  5622                           
  5623                           ; BSR set to: 0
  5624  002C8C  5183               	movf	floorf@m& (0+255),w,b
  5625  002C8E  2789               	addwf	floorf@u& (0+255),f,b
  5626  002C90  5184               	movf	(floorf@m+1)& (0+255),w,b
  5627  002C92  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  5628  002C94  5185               	movf	(floorf@m+2)& (0+255),w,b
  5629  002C96  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  5630  002C98  5186               	movf	(floorf@m+3)& (0+255),w,b
  5631  002C9A  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  5632  002C9C                     l1241:
  5633                           
  5634                           ; BSR set to: 0
  5635  002C9C  1D83               	comf	floorf@m& (0+255),w,b
  5636  002C9E  6F7D               	movwf	??_floorf& (0+255),b
  5637  002CA0  1D84               	comf	(floorf@m+1)& (0+255),w,b
  5638  002CA2  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5639  002CA4  1D85               	comf	(floorf@m+2)& (0+255),w,b
  5640  002CA6  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5641  002CA8  1D86               	comf	(floorf@m+3)& (0+255),w,b
  5642  002CAA  6F80               	movwf	(??_floorf+3)& (0+255),b
  5643  002CAC  517D               	movf	??_floorf& (0+255),w,b
  5644  002CAE  1789               	andwf	floorf@u& (0+255),f,b
  5645  002CB0  517E               	movf	(??_floorf+1)& (0+255),w,b
  5646  002CB2  178A               	andwf	(floorf@u+1)& (0+255),f,b
  5647  002CB4  517F               	movf	(??_floorf+2)& (0+255),w,b
  5648  002CB6  178B               	andwf	(floorf@u+2)& (0+255),f,b
  5649  002CB8  5180               	movf	(??_floorf+3)& (0+255),w,b
  5650  002CBA  178C               	andwf	(floorf@u+3)& (0+255),f,b
  5651  002CBC  D036               	goto	l6173
  5652  002CBE                     l6165:
  5653                           
  5654                           ; BSR set to: 0
  5655  002CBE  C089  F07D         	movff	floorf@u,??_floorf
  5656  002CC2  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  5657  002CC6  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  5658  002CCA  C08C  F080         	movff	floorf@u+3,??_floorf+3
  5659  002CCE  0E20               	movlw	32
  5660  002CD0  D005               	goto	u7570
  5661  002CD2                     u7575:
  5662  002CD2  90D8               	bcf	status,0,c
  5663  002CD4  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5664  002CD6  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5665  002CD8  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5666  002CDA  337D               	rrcf	??_floorf& (0+255),f,b
  5667  002CDC                     u7570:
  5668  002CDC  2EE8               	decfsz	wreg,f,c
  5669  002CDE  D7F9               	goto	u7575
  5670  002CE0  517D               	movf	??_floorf& (0+255),w,b
  5671  002CE2  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5672  002CE4  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5673  002CE6  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5674  002CE8  A4D8               	btfss	status,2,c
  5675  002CEA  D008               	goto	l6169
  5676                           
  5677                           ; BSR set to: 0
  5678  002CEC  0E00               	movlw	0
  5679  002CEE  6F89               	movwf	floorf@u& (0+255),b
  5680  002CF0  0E00               	movlw	0
  5681  002CF2  6F8A               	movwf	(floorf@u+1)& (0+255),b
  5682  002CF4  0E00               	movlw	0
  5683  002CF6  6F8B               	movwf	(floorf@u+2)& (0+255),b
  5684  002CF8  0E00               	movlw	0
  5685  002CFA  D016               	goto	L6
  5686  002CFC                     l6169:
  5687                           
  5688                           ; BSR set to: 0
  5689  002CFC  90D8               	bcf	status,0,c
  5690  002CFE  3589               	rlcf	floorf@u& (0+255),w,b
  5691  002D00  6F7D               	movwf	??_floorf& (0+255),b
  5692  002D02  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  5693  002D04  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5694  002D06  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  5695  002D08  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5696  002D0A  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  5697  002D0C  6F80               	movwf	(??_floorf+3)& (0+255),b
  5698  002D0E  517D               	movf	??_floorf& (0+255),w,b
  5699  002D10  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5700  002D12  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5701  002D14  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5702  002D16  B4D8               	btfsc	status,2,c
  5703  002D18  D008               	goto	l6173
  5704                           
  5705                           ; BSR set to: 0
  5706  002D1A  0E00               	movlw	0
  5707  002D1C  6F89               	movwf	floorf@u& (0+255),b
  5708  002D1E  0E00               	movlw	0
  5709  002D20  6F8A               	movwf	(floorf@u+1)& (0+255),b
  5710  002D22  0E80               	movlw	128
  5711  002D24  6F8B               	movwf	(floorf@u+2)& (0+255),b
  5712  002D26  0EBF               	movlw	191
  5713  002D28                     L6:
  5714  002D28  6F8C               	movwf	(floorf@u+3)& (0+255),b
  5715  002D2A                     l6173:
  5716                           
  5717                           ; BSR set to: 0
  5718  002D2A  C089  F079         	movff	floorf@u,?_floorf
  5719  002D2E  C08A  F07A         	movff	floorf@u+1,?_floorf+1
  5720  002D32  C08B  F07B         	movff	floorf@u+2,?_floorf+2
  5721  002D36  C08C  F07C         	movff	floorf@u+3,?_floorf+3
  5722                           
  5723                           ; BSR set to: 0
  5724  002D3A  0012               	return		;funcret
  5725  002D3C                     __end_of_floorf:
  5726                           	opt callstack 0
  5727                           
  5728 ;; *************** function ___fpclassifyf *****************
  5729 ;; Defined at:
  5730 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  x               4    0[BANK0 ] float 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  u               4   10[BANK0 ] struct .
  5735 ;;  e               2    8[BANK0 ] int 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  2    0[BANK0 ] int 
  5738 ;; Registers used:
  5739 ;;		wreg, status,2, status,0
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5745 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5746 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5747 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5748 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5749 ;;Total ram usage:       14 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    2
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		_efgtoa
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           	psect	text14
  5760  0036B4                     __ptext14:
  5761                           	opt callstack 0
  5762  0036B4                     ___fpclassifyf:
  5763                           	opt callstack 23
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;incstack = 0
  5767  0036B4  C030  F06A         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5768  0036B8  C031  F06B         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5769  0036BC  C032  F06C         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5770  0036C0  C033  F06D         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5771  0036C4  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  5772  0036C8  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5773  0036CC  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5774  0036D0  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5775  0036D4  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5776  0036D8  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5777  0036DC  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5778  0036E0  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5779  0036E4  0E18               	movlw	24
  5780  0036E6  D006               	goto	u7380
  5781  0036E8                     u7385:
  5782  0036E8  0100               	movlb	0	; () banked
  5783  0036EA  90D8               	bcf	status,0,c
  5784  0036EC  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5785  0036EE  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5786  0036F0  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5787  0036F2  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5788  0036F4                     u7380:
  5789  0036F4  2EE8               	decfsz	wreg,f,c
  5790  0036F6  D7F8               	goto	u7385
  5791  0036F8  5164               	movf	??___fpclassifyf& (0+255),w,b
  5792  0036FA  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5793  0036FC  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5794  0036FE  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5795  003700  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5796  003702  A4D8               	btfss	status,2,c
  5797  003704  D019               	goto	l6125
  5798                           
  5799                           ; BSR set to: 0
  5800  003706  90D8               	bcf	status,0,c
  5801  003708  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5802  00370A  6F64               	movwf	??___fpclassifyf& (0+255),b
  5803  00370C  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5804  00370E  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5805  003710  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5806  003712  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5807  003714  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5808  003716  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5809  003718  5164               	movf	??___fpclassifyf& (0+255),w,b
  5810  00371A  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5811  00371C  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5812  00371E  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5813  003720  A4D8               	btfss	status,2,c
  5814  003722  D005               	goto	l6121
  5815                           
  5816                           ; BSR set to: 0
  5817  003724  0E00               	movlw	0
  5818  003726  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5819  003728  0E02               	movlw	2
  5820  00372A  6F60               	movwf	?___fpclassifyf& (0+255),b
  5821  00372C  0012               	return	
  5822  00372E                     l6121:
  5823                           
  5824                           ; BSR set to: 0
  5825  00372E  0E00               	movlw	0
  5826  003730  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5827  003732  0E03               	movlw	3
  5828  003734  6F60               	movwf	?___fpclassifyf& (0+255),b
  5829  003736  0012               	return	
  5830  003738                     l6125:
  5831                           
  5832                           ; BSR set to: 0
  5833  003738  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5834  00373A  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5835  00373C  A4D8               	btfss	status,2,c
  5836  00373E  D01C               	goto	l6131
  5837                           
  5838                           ; BSR set to: 0
  5839  003740  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5840  003744  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5841  003748  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5842  00374C  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5843  003750  0E09               	movlw	9
  5844  003752                     u7425:
  5845  003752  90D8               	bcf	status,0,c
  5846  003754  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5847  003756  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5848  003758  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5849  00375A  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5850  00375C  2EE8               	decfsz	wreg,f,c
  5851  00375E  D7F9               	goto	u7425
  5852  003760  5164               	movf	??___fpclassifyf& (0+255),w,b
  5853  003762  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5854  003764  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5855  003766  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5856  003768  A4D8               	btfss	status,2,c
  5857  00376A  D002               	goto	u7430
  5858  00376C  0E01               	movlw	1
  5859  00376E  D001               	goto	u7440
  5860  003770                     u7430:
  5861  003770  0E00               	movlw	0
  5862  003772                     u7440:
  5863  003772  6F60               	movwf	?___fpclassifyf& (0+255),b
  5864  003774  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5865  003776  0012               	return	
  5866  003778                     l6131:
  5867                           
  5868                           ; BSR set to: 0
  5869  003778  0E00               	movlw	0
  5870  00377A  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5871  00377C  0E04               	movlw	4
  5872  00377E  6F60               	movwf	?___fpclassifyf& (0+255),b
  5873                           
  5874                           ; BSR set to: 0
  5875  003780  0012               	return		;funcret
  5876  003782                     __end_of___fpclassifyf:
  5877                           	opt callstack 0
  5878                           
  5879 ;; *************** function ___flsub *****************
  5880 ;; Defined at:
  5881 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  b               4   55[BANK0 ] int 
  5884 ;;  a               4   59[BANK0 ] int 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  4   55[BANK0 ] int 
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5896 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5899 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5900 ;;Total ram usage:        8 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    3
  5903 ;; This function calls:
  5904 ;;		___fladd
  5905 ;; This function is called by:
  5906 ;;		_efgtoa
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text15
  5911  0041D4                     __ptext15:
  5912                           	opt callstack 0
  5913  0041D4                     ___flsub:
  5914                           	opt callstack 22
  5915                           
  5916                           ; BSR set to: 0
  5917                           ;incstack = 0
  5918  0041D4  0E00               	movlw	0
  5919  0041D6  0100               	movlb	0	; () banked
  5920  0041D8  1B9B               	xorwf	___flsub@a& (0+255),f,b
  5921  0041DA  0E00               	movlw	0
  5922  0041DC  1B9C               	xorwf	(___flsub@a+1)& (0+255),f,b
  5923  0041DE  0E00               	movlw	0
  5924  0041E0  1B9D               	xorwf	(___flsub@a+2)& (0+255),f,b
  5925  0041E2  0E80               	movlw	128
  5926  0041E4  1B9E               	xorwf	(___flsub@a+3)& (0+255),f,b
  5927                           
  5928                           ; BSR set to: 0
  5929  0041E6  C097  F087         	movff	___flsub@b,___fladd@b
  5930  0041EA  C098  F088         	movff	___flsub@b+1,___fladd@b+1
  5931  0041EE  C099  F089         	movff	___flsub@b+2,___fladd@b+2
  5932  0041F2  C09A  F08A         	movff	___flsub@b+3,___fladd@b+3
  5933  0041F6  C09B  F08B         	movff	___flsub@a,___fladd@a
  5934  0041FA  C09C  F08C         	movff	___flsub@a+1,___fladd@a+1
  5935  0041FE  C09D  F08D         	movff	___flsub@a+2,___fladd@a+2
  5936  004202  C09E  F08E         	movff	___flsub@a+3,___fladd@a+3
  5937  004206  EC6F  F011         	call	___fladd	;wreg free
  5938  00420A  C087  F097         	movff	?___fladd,?___flsub
  5939  00420E  C088  F098         	movff	?___fladd+1,?___flsub+1
  5940  004212  C089  F099         	movff	?___fladd+2,?___flsub+2
  5941  004216  C08A  F09A         	movff	?___fladd+3,?___flsub+3
  5942  00421A  0012               	return		;funcret
  5943  00421C                     __end_of___flsub:
  5944                           	opt callstack 0
  5945                           
  5946 ;; *************** function ___flneg *****************
  5947 ;; Defined at:
  5948 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  f1              4    0[BANK0 ] int 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;		None
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  4    0[BANK0 ] int 
  5955 ;; Registers used:
  5956 ;;		wreg, status,2, status,0
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5962 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5965 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5966 ;;Total ram usage:        4 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    2
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		_efgtoa
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text16
  5977  00436E                     __ptext16:
  5978                           	opt callstack 0
  5979  00436E                     ___flneg:
  5980                           	opt callstack 23
  5981                           
  5982                           ;incstack = 0
  5983  00436E  0100               	movlb	0	; () banked
  5984  004370  5160               	movf	___flneg@f1& (0+255),w,b
  5985  004372  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5986  004374  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5987  004376  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5988  004378  B4D8               	btfsc	status,2,c
  5989  00437A  D008               	goto	l6583
  5990                           
  5991                           ; BSR set to: 0
  5992  00437C  0E00               	movlw	0
  5993  00437E  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5994  004380  0E00               	movlw	0
  5995  004382  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5996  004384  0E00               	movlw	0
  5997  004386  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5998  004388  0E80               	movlw	128
  5999  00438A  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6000  00438C                     l6583:
  6001                           
  6002                           ; BSR set to: 0
  6003  00438C  C060  F060         	movff	___flneg@f1,?___flneg
  6004  004390  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  6005  004394  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  6006  004398  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  6007                           
  6008                           ; BSR set to: 0
  6009  00439C  0012               	return		;funcret
  6010  00439E                     __end_of___flneg:
  6011                           	opt callstack 0
  6012                           
  6013 ;; *************** function ___flge *****************
  6014 ;; Defined at:
  6015 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;  ff1             4   39[BANK0 ] int 
  6018 ;;  ff2             4   43[BANK0 ] int 
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;		None
  6021 ;; Return value:  Size  Location     Type
  6022 ;;		None               void
  6023 ;; Registers used:
  6024 ;;		wreg, status,2, status,0
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6030 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6032 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6033 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6034 ;;Total ram usage:       12 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    2
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_efgtoa
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text17
  6045  003512                     __ptext17:
  6046                           	opt callstack 0
  6047  003512                     ___flge:
  6048                           	opt callstack 23
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;incstack = 0
  6052  003512  0E00               	movlw	0
  6053  003514  0100               	movlb	0	; () banked
  6054  003516  1587               	andwf	___flge@ff1& (0+255),w,b
  6055  003518  6F8F               	movwf	??___flge& (0+255),b
  6056  00351A  0E00               	movlw	0
  6057  00351C  1588               	andwf	(___flge@ff1+1)& (0+255),w,b
  6058  00351E  6F90               	movwf	(??___flge+1)& (0+255),b
  6059  003520  0E80               	movlw	128
  6060  003522  1589               	andwf	(___flge@ff1+2)& (0+255),w,b
  6061  003524  6F91               	movwf	(??___flge+2)& (0+255),b
  6062  003526  0E7F               	movlw	127
  6063  003528  158A               	andwf	(___flge@ff1+3)& (0+255),w,b
  6064  00352A  6F92               	movwf	(??___flge+3)& (0+255),b
  6065  00352C  518F               	movf	??___flge& (0+255),w,b
  6066  00352E  1190               	iorwf	(??___flge+1)& (0+255),w,b
  6067  003530  1191               	iorwf	(??___flge+2)& (0+255),w,b
  6068  003532  1192               	iorwf	(??___flge+3)& (0+255),w,b
  6069  003534  A4D8               	btfss	status,2,c
  6070  003536  D008               	goto	l6561
  6071                           
  6072                           ; BSR set to: 0
  6073  003538  0E00               	movlw	0
  6074  00353A  6F87               	movwf	___flge@ff1& (0+255),b
  6075  00353C  0E00               	movlw	0
  6076  00353E  6F88               	movwf	(___flge@ff1+1)& (0+255),b
  6077  003540  0E00               	movlw	0
  6078  003542  6F89               	movwf	(___flge@ff1+2)& (0+255),b
  6079  003544  0E00               	movlw	0
  6080  003546  6F8A               	movwf	(___flge@ff1+3)& (0+255),b
  6081  003548                     l6561:
  6082                           
  6083                           ; BSR set to: 0
  6084  003548  0E00               	movlw	0
  6085  00354A  158B               	andwf	___flge@ff2& (0+255),w,b
  6086  00354C  6F8F               	movwf	??___flge& (0+255),b
  6087  00354E  0E00               	movlw	0
  6088  003550  158C               	andwf	(___flge@ff2+1)& (0+255),w,b
  6089  003552  6F90               	movwf	(??___flge+1)& (0+255),b
  6090  003554  0E80               	movlw	128
  6091  003556  158D               	andwf	(___flge@ff2+2)& (0+255),w,b
  6092  003558  6F91               	movwf	(??___flge+2)& (0+255),b
  6093  00355A  0E7F               	movlw	127
  6094  00355C  158E               	andwf	(___flge@ff2+3)& (0+255),w,b
  6095  00355E  6F92               	movwf	(??___flge+3)& (0+255),b
  6096  003560  518F               	movf	??___flge& (0+255),w,b
  6097  003562  1190               	iorwf	(??___flge+1)& (0+255),w,b
  6098  003564  1191               	iorwf	(??___flge+2)& (0+255),w,b
  6099  003566  1192               	iorwf	(??___flge+3)& (0+255),w,b
  6100  003568  A4D8               	btfss	status,2,c
  6101  00356A  D008               	goto	l6565
  6102                           
  6103                           ; BSR set to: 0
  6104  00356C  0E00               	movlw	0
  6105  00356E  6F8B               	movwf	___flge@ff2& (0+255),b
  6106  003570  0E00               	movlw	0
  6107  003572  6F8C               	movwf	(___flge@ff2+1)& (0+255),b
  6108  003574  0E00               	movlw	0
  6109  003576  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
  6110  003578  0E00               	movlw	0
  6111  00357A  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
  6112  00357C                     l6565:
  6113                           
  6114                           ; BSR set to: 0
  6115  00357C  AF8A               	btfss	(___flge@ff1+3)& (0+255),7,b
  6116  00357E  D009               	goto	l6569
  6117                           
  6118                           ; BSR set to: 0
  6119  003580  6D87               	negf	___flge@ff1& (0+255),b
  6120  003582  1F88               	comf	(___flge@ff1+1)& (0+255),f,b
  6121  003584  B0D8               	btfsc	status,0,c
  6122  003586  2B88               	incf	(___flge@ff1+1)& (0+255),f,b
  6123  003588  1F89               	comf	(___flge@ff1+2)& (0+255),f,b
  6124  00358A  B0D8               	btfsc	status,0,c
  6125  00358C  2B89               	incf	(___flge@ff1+2)& (0+255),f,b
  6126  00358E  0E80               	movlw	128
  6127  003590  578A               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6128  003592                     l6569:
  6129                           
  6130                           ; BSR set to: 0
  6131  003592  AF8E               	btfss	(___flge@ff2+3)& (0+255),7,b
  6132  003594  D009               	goto	l784
  6133                           
  6134                           ; BSR set to: 0
  6135  003596  6D8B               	negf	___flge@ff2& (0+255),b
  6136  003598  1F8C               	comf	(___flge@ff2+1)& (0+255),f,b
  6137  00359A  B0D8               	btfsc	status,0,c
  6138  00359C  2B8C               	incf	(___flge@ff2+1)& (0+255),f,b
  6139  00359E  1F8D               	comf	(___flge@ff2+2)& (0+255),f,b
  6140  0035A0  B0D8               	btfsc	status,0,c
  6141  0035A2  2B8D               	incf	(___flge@ff2+2)& (0+255),f,b
  6142  0035A4  0E80               	movlw	128
  6143  0035A6  578E               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6144  0035A8                     l784:
  6145                           
  6146                           ; BSR set to: 0
  6147  0035A8  0E00               	movlw	0
  6148  0035AA  1B87               	xorwf	___flge@ff1& (0+255),f,b
  6149  0035AC  0E00               	movlw	0
  6150  0035AE  1B88               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6151  0035B0  0E00               	movlw	0
  6152  0035B2  1B89               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6153  0035B4  0E80               	movlw	128
  6154  0035B6  1B8A               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6155  0035B8  0E00               	movlw	0
  6156  0035BA  1B8B               	xorwf	___flge@ff2& (0+255),f,b
  6157  0035BC  0E00               	movlw	0
  6158  0035BE  1B8C               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6159  0035C0  0E00               	movlw	0
  6160  0035C2  1B8D               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6161  0035C4  0E80               	movlw	128
  6162  0035C6  1B8E               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6163  0035C8  518B               	movf	___flge@ff2& (0+255),w,b
  6164  0035CA  5D87               	subwf	___flge@ff1& (0+255),w,b
  6165  0035CC  518C               	movf	(___flge@ff2+1)& (0+255),w,b
  6166  0035CE  5988               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6167  0035D0  518D               	movf	(___flge@ff2+2)& (0+255),w,b
  6168  0035D2  5989               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6169  0035D4  518E               	movf	(___flge@ff2+3)& (0+255),w,b
  6170  0035D6  598A               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6171  0035D8  B0D8               	btfsc	status,0,c
  6172  0035DA  D002               	goto	l6575
  6173                           
  6174                           ; BSR set to: 0
  6175  0035DC  90D8               	bcf	status,0,c
  6176  0035DE  0012               	return	
  6177  0035E0                     l6575:
  6178                           
  6179                           ; BSR set to: 0
  6180  0035E0  80D8               	bsf	status,0,c
  6181                           
  6182                           ; BSR set to: 0
  6183  0035E2  0012               	return		;funcret
  6184  0035E4                     __end_of___flge:
  6185                           	opt callstack 0
  6186                           
  6187 ;; *************** function ___fleq *****************
  6188 ;; Defined at:
  6189 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  ff1             4    0[BANK0 ] int 
  6192 ;;  ff2             4    4[BANK0 ] int 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;		None               void
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6204 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6206 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6207 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6208 ;;Total ram usage:       12 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    2
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_efgtoa
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text18
  6219  003B86                     __ptext18:
  6220                           	opt callstack 0
  6221  003B86                     ___fleq:
  6222                           	opt callstack 23
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;incstack = 0
  6226  003B86  0E00               	movlw	0
  6227  003B88  0100               	movlb	0	; () banked
  6228  003B8A  1560               	andwf	___fleq@ff1& (0+255),w,b
  6229  003B8C  6F68               	movwf	??___fleq& (0+255),b
  6230  003B8E  0E00               	movlw	0
  6231  003B90  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6232  003B92  6F69               	movwf	(??___fleq+1)& (0+255),b
  6233  003B94  0E80               	movlw	128
  6234  003B96  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6235  003B98  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6236  003B9A  0E7F               	movlw	127
  6237  003B9C  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6238  003B9E  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6239  003BA0  5168               	movf	??___fleq& (0+255),w,b
  6240  003BA2  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6241  003BA4  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6242  003BA6  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6243  003BA8  A4D8               	btfss	status,2,c
  6244  003BAA  D008               	goto	l6545
  6245                           
  6246                           ; BSR set to: 0
  6247  003BAC  0E00               	movlw	0
  6248  003BAE  6F60               	movwf	___fleq@ff1& (0+255),b
  6249  003BB0  0E00               	movlw	0
  6250  003BB2  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6251  003BB4  0E00               	movlw	0
  6252  003BB6  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6253  003BB8  0E00               	movlw	0
  6254  003BBA  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6255  003BBC                     l6545:
  6256                           
  6257                           ; BSR set to: 0
  6258  003BBC  0E00               	movlw	0
  6259  003BBE  1564               	andwf	___fleq@ff2& (0+255),w,b
  6260  003BC0  6F68               	movwf	??___fleq& (0+255),b
  6261  003BC2  0E00               	movlw	0
  6262  003BC4  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6263  003BC6  6F69               	movwf	(??___fleq+1)& (0+255),b
  6264  003BC8  0E80               	movlw	128
  6265  003BCA  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6266  003BCC  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6267  003BCE  0E7F               	movlw	127
  6268  003BD0  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6269  003BD2  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6270  003BD4  5168               	movf	??___fleq& (0+255),w,b
  6271  003BD6  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6272  003BD8  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6273  003BDA  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6274  003BDC  A4D8               	btfss	status,2,c
  6275  003BDE  D008               	goto	l6549
  6276                           
  6277                           ; BSR set to: 0
  6278  003BE0  0E00               	movlw	0
  6279  003BE2  6F64               	movwf	___fleq@ff2& (0+255),b
  6280  003BE4  0E00               	movlw	0
  6281  003BE6  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6282  003BE8  0E00               	movlw	0
  6283  003BEA  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6284  003BEC  0E00               	movlw	0
  6285  003BEE  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6286  003BF0                     l6549:
  6287                           
  6288                           ; BSR set to: 0
  6289  003BF0  5164               	movf	___fleq@ff2& (0+255),w,b
  6290  003BF2  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6291  003BF4  E10A               	bnz	u8180
  6292  003BF6  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6293  003BF8  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6294  003BFA  E107               	bnz	u8180
  6295  003BFC  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6296  003BFE  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6297  003C00  E104               	bnz	u8180
  6298  003C02  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6299  003C04  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6300  003C06  B4D8               	btfsc	status,2,c
  6301  003C08  D002               	goto	l6553
  6302  003C0A                     u8180:
  6303                           
  6304                           ; BSR set to: 0
  6305  003C0A  90D8               	bcf	status,0,c
  6306  003C0C  0012               	return	
  6307  003C0E                     l6553:
  6308                           
  6309                           ; BSR set to: 0
  6310  003C0E  80D8               	bsf	status,0,c
  6311                           
  6312                           ; BSR set to: 0
  6313  003C10  0012               	return		;funcret
  6314  003C12                     __end_of___fleq:
  6315                           	opt callstack 0
  6316                           
  6317 ;; *************** function ___fldiv *****************
  6318 ;; Defined at:
  6319 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  b               4    0[BANK0 ] int 
  6322 ;;  a               4    4[BANK0 ] int 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  grs             4   19[BANK0 ] unsigned long 
  6325 ;;  rem             4   12[BANK0 ] unsigned long 
  6326 ;;  new_exp         2   17[BANK0 ] short 
  6327 ;;  aexp            1   24[BANK0 ] unsigned char 
  6328 ;;  bexp            1   23[BANK0 ] unsigned char 
  6329 ;;  sign            1   16[BANK0 ] unsigned char 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  4    0[BANK0 ] unsigned char 
  6332 ;; Registers used:
  6333 ;;		wreg, status,2, status,0
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6339 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6340 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6341 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6342 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6343 ;;Total ram usage:       25 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    2
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_efgtoa
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text19
  6354  0028F8                     __ptext19:
  6355                           	opt callstack 0
  6356  0028F8                     ___fldiv:
  6357                           	opt callstack 23
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;incstack = 0
  6361  0028F8  0100               	movlb	0	; () banked
  6362  0028FA  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6363  0028FC  0B80               	andlw	128
  6364  0028FE  6F70               	movwf	___fldiv@sign& (0+255),b
  6365  002900  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6366  002902  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  6367  002904  6F77               	movwf	___fldiv@bexp& (0+255),b
  6368                           
  6369                           ; BSR set to: 0
  6370  002906  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
  6371                           
  6372                           ; BSR set to: 0
  6373  002908  8177               	bsf	___fldiv@bexp& (0+255),0,b
  6374                           
  6375                           ; BSR set to: 0
  6376  00290A  5177               	movf	___fldiv@bexp& (0+255),w,b
  6377  00290C  B4D8               	btfsc	status,2,c
  6378  00290E  D00D               	goto	l6203
  6379                           
  6380                           ; BSR set to: 0
  6381  002910  2977               	incf	___fldiv@bexp& (0+255),w,b
  6382  002912  A4D8               	btfss	status,2,c
  6383  002914  D008               	goto	l6199
  6384                           
  6385                           ; BSR set to: 0
  6386  002916  0E00               	movlw	0
  6387  002918  6F60               	movwf	___fldiv@b& (0+255),b
  6388  00291A  0E00               	movlw	0
  6389  00291C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6390  00291E  0E00               	movlw	0
  6391  002920  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6392  002922  0E00               	movlw	0
  6393  002924  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6394  002926                     l6199:
  6395                           
  6396                           ; BSR set to: 0
  6397  002926  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6398  002928  D006               	goto	L7
  6399  00292A                     l6203:
  6400                           
  6401                           ; BSR set to: 0
  6402  00292A  0E00               	movlw	0
  6403  00292C  6F60               	movwf	___fldiv@b& (0+255),b
  6404  00292E  0E00               	movlw	0
  6405  002930  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6406  002932  0E00               	movlw	0
  6407  002934  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6408  002936                     L7:
  6409  002936  0E00               	movlw	0
  6410  002938  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6411                           
  6412                           ; BSR set to: 0
  6413  00293A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6414  00293C  0B80               	andlw	128
  6415  00293E  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  6416                           
  6417                           ; BSR set to: 0
  6418  002940  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6419  002942  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  6420  002944  6F78               	movwf	___fldiv@aexp& (0+255),b
  6421                           
  6422                           ; BSR set to: 0
  6423  002946  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
  6424                           
  6425                           ; BSR set to: 0
  6426  002948  8178               	bsf	___fldiv@aexp& (0+255),0,b
  6427                           
  6428                           ; BSR set to: 0
  6429  00294A  5178               	movf	___fldiv@aexp& (0+255),w,b
  6430  00294C  B4D8               	btfsc	status,2,c
  6431  00294E  D00D               	goto	l6223
  6432                           
  6433                           ; BSR set to: 0
  6434  002950  2978               	incf	___fldiv@aexp& (0+255),w,b
  6435  002952  A4D8               	btfss	status,2,c
  6436  002954  D008               	goto	l6219
  6437                           
  6438                           ; BSR set to: 0
  6439  002956  0E00               	movlw	0
  6440  002958  6F64               	movwf	___fldiv@a& (0+255),b
  6441  00295A  0E00               	movlw	0
  6442  00295C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6443  00295E  0E00               	movlw	0
  6444  002960  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6445  002962  0E00               	movlw	0
  6446  002964  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6447  002966                     l6219:
  6448                           
  6449                           ; BSR set to: 0
  6450  002966  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  6451  002968  D006               	goto	L8
  6452  00296A                     l6223:
  6453                           
  6454                           ; BSR set to: 0
  6455  00296A  0E00               	movlw	0
  6456  00296C  6F64               	movwf	___fldiv@a& (0+255),b
  6457  00296E  0E00               	movlw	0
  6458  002970  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6459  002972  0E00               	movlw	0
  6460  002974  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6461  002976                     L8:
  6462  002976  0E00               	movlw	0
  6463  002978  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6464                           
  6465                           ; BSR set to: 0
  6466  00297A  5164               	movf	___fldiv@a& (0+255),w,b
  6467  00297C  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6468  00297E  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6469  002980  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6470  002982  A4D8               	btfss	status,2,c
  6471  002984  D017               	goto	l6237
  6472                           
  6473                           ; BSR set to: 0
  6474  002986  0E00               	movlw	0
  6475  002988  6F60               	movwf	___fldiv@b& (0+255),b
  6476  00298A  0E00               	movlw	0
  6477  00298C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6478  00298E  0E00               	movlw	0
  6479  002990  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6480  002992  0E00               	movlw	0
  6481  002994  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6482                           
  6483                           ; BSR set to: 0
  6484  002996  0E80               	movlw	128
  6485  002998  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6486  00299A  0E7F               	movlw	127
  6487  00299C  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6488  00299E                     l6231:
  6489                           
  6490                           ; BSR set to: 0
  6491  00299E  5170               	movf	___fldiv@sign& (0+255),w,b
  6492  0029A0  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6493                           
  6494                           ; BSR set to: 0
  6495  0029A2  C060  F060         	movff	___fldiv@b,?___fldiv
  6496  0029A6  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  6497  0029AA  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  6498  0029AE  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  6499  0029B2  0012               	return	
  6500  0029B4                     l6237:
  6501                           
  6502                           ; BSR set to: 0
  6503  0029B4  5177               	movf	___fldiv@bexp& (0+255),w,b
  6504  0029B6  A4D8               	btfss	status,2,c
  6505  0029B8  D009               	goto	l6245
  6506                           
  6507                           ; BSR set to: 0
  6508                           
  6509                           ; BSR set to: 0
  6510  0029BA  0E00               	movlw	0
  6511  0029BC  6F60               	movwf	?___fldiv& (0+255),b
  6512  0029BE  0E00               	movlw	0
  6513  0029C0  6F61               	movwf	(?___fldiv+1)& (0+255),b
  6514  0029C2  0E00               	movlw	0
  6515  0029C4  6F62               	movwf	(?___fldiv+2)& (0+255),b
  6516  0029C6  0E00               	movlw	0
  6517  0029C8  6F63               	movwf	(?___fldiv+3)& (0+255),b
  6518  0029CA  0012               	return	
  6519  0029CC                     l6245:
  6520                           
  6521                           ; BSR set to: 0
  6522  0029CC  5178               	movf	___fldiv@aexp& (0+255),w,b
  6523  0029CE  C077  F068         	movff	___fldiv@bexp,??___fldiv
  6524  0029D2  6B69               	clrf	(??___fldiv+1)& (0+255),b
  6525  0029D4  5F68               	subwf	??___fldiv& (0+255),f,b
  6526  0029D6  0E00               	movlw	0
  6527  0029D8  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  6528  0029DA  0E7F               	movlw	127
  6529  0029DC  2568               	addwf	??___fldiv& (0+255),w,b
  6530  0029DE  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6531  0029E0  0E00               	movlw	0
  6532  0029E2  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  6533  0029E4  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6534                           
  6535                           ; BSR set to: 0
  6536  0029E6  C060  F06C         	movff	___fldiv@b,___fldiv@rem
  6537  0029EA  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
  6538  0029EE  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
  6539  0029F2  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
  6540                           
  6541                           ; BSR set to: 0
  6542  0029F6  0E00               	movlw	0
  6543  0029F8  6F60               	movwf	___fldiv@b& (0+255),b
  6544  0029FA  0E00               	movlw	0
  6545  0029FC  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6546  0029FE  0E00               	movlw	0
  6547  002A00  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6548  002A02  0E00               	movlw	0
  6549  002A04  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6550                           
  6551                           ; BSR set to: 0
  6552  002A06  0E00               	movlw	0
  6553  002A08  6F73               	movwf	___fldiv@grs& (0+255),b
  6554  002A0A  0E00               	movlw	0
  6555  002A0C  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  6556  002A0E  0E00               	movlw	0
  6557  002A10  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  6558  002A12  0E00               	movlw	0
  6559  002A14  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  6560                           
  6561                           ; BSR set to: 0
  6562  002A16  0E00               	movlw	0
  6563  002A18  6F78               	movwf	___fldiv@aexp& (0+255),b
  6564  002A1A  D028               	goto	l1103
  6565  002A1C                     l6255:
  6566                           
  6567                           ; BSR set to: 0
  6568  002A1C  5178               	movf	___fldiv@aexp& (0+255),w,b
  6569  002A1E  B4D8               	btfsc	status,2,c
  6570  002A20  D011               	goto	l6263
  6571                           
  6572                           ; BSR set to: 0
  6573  002A22  90D8               	bcf	status,0,c
  6574  002A24  376C               	rlcf	___fldiv@rem& (0+255),f,b
  6575  002A26  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6576  002A28  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6577  002A2A  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6578  002A2C  90D8               	bcf	status,0,c
  6579  002A2E  3760               	rlcf	___fldiv@b& (0+255),f,b
  6580  002A30  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6581  002A32  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6582  002A34  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6583                           
  6584                           ; BSR set to: 0
  6585  002A36  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6586                           
  6587                           ; BSR set to: 0
  6588  002A38  8160               	bsf	___fldiv@b& (0+255),0,b
  6589                           
  6590                           ; BSR set to: 0
  6591  002A3A  90D8               	bcf	status,0,c
  6592  002A3C  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6593  002A3E  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6594  002A40  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6595  002A42  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6596  002A44                     l6263:
  6597                           
  6598                           ; BSR set to: 0
  6599  002A44  5164               	movf	___fldiv@a& (0+255),w,b
  6600  002A46  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  6601  002A48  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6602  002A4A  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6603  002A4C  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6604  002A4E  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6605  002A50  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6606  002A52  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6607  002A54  A0D8               	btfss	status,0,c
  6608  002A56  D009               	goto	l6269
  6609                           
  6610                           ; BSR set to: 0
  6611  002A58  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6612                           
  6613                           ; BSR set to: 0
  6614  002A5A  5164               	movf	___fldiv@a& (0+255),w,b
  6615  002A5C  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  6616  002A5E  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6617  002A60  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6618  002A62  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6619  002A64  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6620  002A66  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6621  002A68  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6622  002A6A                     l6269:
  6623                           
  6624                           ; BSR set to: 0
  6625  002A6A  2B78               	incf	___fldiv@aexp& (0+255),f,b
  6626  002A6C                     l1103:
  6627                           
  6628                           ; BSR set to: 0
  6629  002A6C  0E19               	movlw	25
  6630  002A6E  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  6631  002A70  D7D5               	goto	l6255
  6632                           
  6633                           ; BSR set to: 0
  6634  002A72  516C               	movf	___fldiv@rem& (0+255),w,b
  6635  002A74  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6636  002A76  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6637  002A78  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6638  002A7A  B4D8               	btfsc	status,2,c
  6639  002A7C  D011               	goto	l6281
  6640                           
  6641                           ; BSR set to: 0
  6642  002A7E  8173               	bsf	___fldiv@grs& (0+255),0,b
  6643  002A80  D00F               	goto	l6281
  6644  002A82                     l6275:
  6645                           
  6646                           ; BSR set to: 0
  6647  002A82  90D8               	bcf	status,0,c
  6648  002A84  3760               	rlcf	___fldiv@b& (0+255),f,b
  6649  002A86  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6650  002A88  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6651  002A8A  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6652                           
  6653                           ; BSR set to: 0
  6654  002A8C  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6655                           
  6656                           ; BSR set to: 0
  6657  002A8E  8160               	bsf	___fldiv@b& (0+255),0,b
  6658                           
  6659                           ; BSR set to: 0
  6660  002A90  90D8               	bcf	status,0,c
  6661  002A92  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6662  002A94  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6663  002A96  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6664  002A98  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6665  002A9A  0771               	decf	___fldiv@new_exp& (0+255),f,b
  6666  002A9C  A0D8               	btfss	status,0,c
  6667  002A9E  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6668  002AA0                     l6281:
  6669                           
  6670                           ; BSR set to: 0
  6671  002AA0  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6672  002AA2  D7EF               	goto	l6275
  6673                           
  6674                           ; BSR set to: 0
  6675  002AA4  0E00               	movlw	0
  6676  002AA6  6F78               	movwf	___fldiv@aexp& (0+255),b
  6677                           
  6678                           ; BSR set to: 0
  6679  002AA8  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6680  002AAA  D017               	goto	l1114
  6681                           
  6682                           ; BSR set to: 0
  6683  002AAC  0EFF               	movlw	255
  6684  002AAE  1573               	andwf	___fldiv@grs& (0+255),w,b
  6685  002AB0  6F68               	movwf	??___fldiv& (0+255),b
  6686  002AB2  0EFF               	movlw	255
  6687  002AB4  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6688  002AB6  6F69               	movwf	(??___fldiv+1)& (0+255),b
  6689  002AB8  0EFF               	movlw	255
  6690  002ABA  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6691  002ABC  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  6692  002ABE  0E7F               	movlw	127
  6693  002AC0  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6694  002AC2  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  6695  002AC4  5168               	movf	??___fldiv& (0+255),w,b
  6696  002AC6  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  6697  002AC8  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  6698  002ACA  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  6699  002ACC  B4D8               	btfsc	status,2,c
  6700  002ACE  D003               	goto	l1115
  6701  002AD0                     u7780:
  6702                           
  6703                           ; BSR set to: 0
  6704  002AD0  0E01               	movlw	1
  6705  002AD2  6F78               	movwf	___fldiv@aexp& (0+255),b
  6706  002AD4  D002               	goto	l1114
  6707  002AD6                     l1115:
  6708                           
  6709                           ; BSR set to: 0
  6710  002AD6  B160               	btfsc	___fldiv@b& (0+255),0,b
  6711  002AD8  D7FB               	goto	u7780
  6712  002ADA                     l1114:
  6713                           
  6714                           ; BSR set to: 0
  6715  002ADA  5178               	movf	___fldiv@aexp& (0+255),w,b
  6716  002ADC  B4D8               	btfsc	status,2,c
  6717  002ADE  D01F               	goto	l6301
  6718                           
  6719                           ; BSR set to: 0
  6720  002AE0  0E01               	movlw	1
  6721  002AE2  2760               	addwf	___fldiv@b& (0+255),f,b
  6722  002AE4  0E00               	movlw	0
  6723  002AE6  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6724  002AE8  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6725  002AEA  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6726                           
  6727                           ; BSR set to: 0
  6728  002AEC  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  6729  002AEE  D017               	goto	l6301
  6730                           
  6731                           ; BSR set to: 0
  6732  002AF0  C060  F068         	movff	___fldiv@b,??___fldiv
  6733  002AF4  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
  6734  002AF8  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
  6735  002AFC  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
  6736  002B00  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  6737  002B02  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  6738  002B04  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  6739  002B06  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  6740  002B08  3368               	rrcf	??___fldiv& (0+255),f,b
  6741  002B0A  C068  F060         	movff	??___fldiv,___fldiv@b
  6742  002B0E  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
  6743  002B12  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
  6744  002B16  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
  6745                           
  6746                           ; BSR set to: 0
  6747  002B1A  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  6748  002B1C  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6749  002B1E                     l6301:
  6750                           
  6751                           ; BSR set to: 0
  6752  002B1E  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6753  002B20  D010               	goto	l6305
  6754  002B22  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6755  002B24  E103               	bnz	u7820
  6756  002B26  2971               	incf	___fldiv@new_exp& (0+255),w,b
  6757  002B28  A0D8               	btfss	status,0,c
  6758  002B2A  D00B               	goto	l6305
  6759  002B2C                     u7820:
  6760                           
  6761                           ; BSR set to: 0
  6762  002B2C  0E00               	movlw	0
  6763  002B2E  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6764  002B30  6971               	setf	___fldiv@new_exp& (0+255),b
  6765  002B32  0E00               	movlw	0
  6766  002B34  6F60               	movwf	___fldiv@b& (0+255),b
  6767  002B36  0E00               	movlw	0
  6768  002B38  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6769  002B3A  0E00               	movlw	0
  6770  002B3C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6771  002B3E  0E00               	movlw	0
  6772  002B40  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6773  002B42                     l6305:
  6774                           
  6775                           ; BSR set to: 0
  6776  002B42  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6777  002B44  D005               	goto	u7830
  6778  002B46  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6779  002B48  E111               	bnz	l6309
  6780  002B4A  0571               	decf	___fldiv@new_exp& (0+255),w,b
  6781  002B4C  B0D8               	btfsc	status,0,c
  6782  002B4E  D00E               	goto	l6309
  6783  002B50                     u7830:
  6784                           
  6785                           ; BSR set to: 0
  6786  002B50  0E00               	movlw	0
  6787  002B52  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6788  002B54  0E00               	movlw	0
  6789  002B56  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6790  002B58  0E00               	movlw	0
  6791  002B5A  6F60               	movwf	___fldiv@b& (0+255),b
  6792  002B5C  0E00               	movlw	0
  6793  002B5E  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6794  002B60  0E00               	movlw	0
  6795  002B62  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6796  002B64  0E00               	movlw	0
  6797  002B66  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6798  002B68  0E00               	movlw	0
  6799  002B6A  6F70               	movwf	___fldiv@sign& (0+255),b
  6800  002B6C                     l6309:
  6801                           
  6802                           ; BSR set to: 0
  6803  002B6C  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
  6804                           
  6805                           ; BSR set to: 0
  6806  002B70  A177               	btfss	___fldiv@bexp& (0+255),0,b
  6807  002B72  D002               	goto	l6315
  6808                           
  6809                           ; BSR set to: 0
  6810  002B74  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6811  002B76  D001               	goto	l6317
  6812  002B78                     l6315:
  6813                           
  6814                           ; BSR set to: 0
  6815  002B78  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  6816  002B7A                     l6317:
  6817                           
  6818                           ; BSR set to: 0
  6819  002B7A  90D8               	bcf	status,0,c
  6820  002B7C  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  6821  002B7E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6822  002B80  D70E               	goto	l6231
  6823  002B82                     __end_of___fldiv:
  6824                           	opt callstack 0
  6825                           
  6826 ;; *************** function ___awmod *****************
  6827 ;; Defined at:
  6828 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;  dividend        2    0[BANK0 ] int 
  6831 ;;  divisor         2    2[BANK0 ] int 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;  sign            1    5[BANK0 ] unsigned char 
  6834 ;;  counter         1    4[BANK0 ] unsigned char 
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  2    0[BANK0 ] int 
  6837 ;; Registers used:
  6838 ;;		wreg, status,2, status,0
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6844 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6845 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6847 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6848 ;;Total ram usage:        6 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:    2
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_efgtoa
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text20
  6859  003E0E                     __ptext20:
  6860                           	opt callstack 0
  6861  003E0E                     ___awmod:
  6862                           	opt callstack 23
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;incstack = 0
  6866  003E0E  0E00               	movlw	0
  6867  003E10  0100               	movlb	0	; () banked
  6868  003E12  6F65               	movwf	___awmod@sign& (0+255),b
  6869                           
  6870                           ; BSR set to: 0
  6871  003E14  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6872  003E16  D006               	goto	l6513
  6873                           
  6874                           ; BSR set to: 0
  6875  003E18  6D60               	negf	___awmod@dividend& (0+255),b
  6876  003E1A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6877  003E1C  B0D8               	btfsc	status,0,c
  6878  003E1E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6879                           
  6880                           ; BSR set to: 0
  6881  003E20  0E01               	movlw	1
  6882  003E22  6F65               	movwf	___awmod@sign& (0+255),b
  6883  003E24                     l6513:
  6884                           
  6885                           ; BSR set to: 0
  6886  003E24  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6887  003E26  D004               	goto	l6517
  6888                           
  6889                           ; BSR set to: 0
  6890  003E28  6D62               	negf	___awmod@divisor& (0+255),b
  6891  003E2A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  6892  003E2C  B0D8               	btfsc	status,0,c
  6893  003E2E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  6894  003E30                     l6517:
  6895                           
  6896                           ; BSR set to: 0
  6897  003E30  5162               	movf	___awmod@divisor& (0+255),w,b
  6898  003E32  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6899  003E34  B4D8               	btfsc	status,2,c
  6900  003E36  D018               	goto	l6533
  6901                           
  6902                           ; BSR set to: 0
  6903  003E38  0E01               	movlw	1
  6904  003E3A  6F64               	movwf	___awmod@counter& (0+255),b
  6905  003E3C  D004               	goto	l6523
  6906  003E3E                     l6521:
  6907                           
  6908                           ; BSR set to: 0
  6909  003E3E  90D8               	bcf	status,0,c
  6910  003E40  3762               	rlcf	___awmod@divisor& (0+255),f,b
  6911  003E42  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6912  003E44  2B64               	incf	___awmod@counter& (0+255),f,b
  6913  003E46                     l6523:
  6914                           
  6915                           ; BSR set to: 0
  6916  003E46  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6917  003E48  D7FA               	goto	l6521
  6918  003E4A                     u8130:
  6919                           
  6920                           ; BSR set to: 0
  6921  003E4A  5162               	movf	___awmod@divisor& (0+255),w,b
  6922  003E4C  5D60               	subwf	___awmod@dividend& (0+255),w,b
  6923  003E4E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6924  003E50  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6925  003E52  A0D8               	btfss	status,0,c
  6926  003E54  D004               	goto	l6529
  6927                           
  6928                           ; BSR set to: 0
  6929  003E56  5162               	movf	___awmod@divisor& (0+255),w,b
  6930  003E58  5F60               	subwf	___awmod@dividend& (0+255),f,b
  6931  003E5A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6932  003E5C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6933  003E5E                     l6529:
  6934                           
  6935                           ; BSR set to: 0
  6936  003E5E  90D8               	bcf	status,0,c
  6937  003E60  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6938  003E62  3362               	rrcf	___awmod@divisor& (0+255),f,b
  6939                           
  6940                           ; BSR set to: 0
  6941  003E64  2F64               	decfsz	___awmod@counter& (0+255),f,b
  6942  003E66  D7F1               	goto	u8130
  6943  003E68                     l6533:
  6944                           
  6945                           ; BSR set to: 0
  6946  003E68  5165               	movf	___awmod@sign& (0+255),w,b
  6947  003E6A  B4D8               	btfsc	status,2,c
  6948  003E6C  D004               	goto	l6537
  6949                           
  6950                           ; BSR set to: 0
  6951  003E6E  6D60               	negf	___awmod@dividend& (0+255),b
  6952  003E70  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6953  003E72  B0D8               	btfsc	status,0,c
  6954  003E74  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6955  003E76                     l6537:
  6956                           
  6957                           ; BSR set to: 0
  6958  003E76  C060  F060         	movff	___awmod@dividend,?___awmod
  6959  003E7A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  6960                           
  6961                           ; BSR set to: 0
  6962  003E7E  0012               	return		;funcret
  6963  003E80                     __end_of___awmod:
  6964                           	opt callstack 0
  6965                           
  6966 ;; *************** function ___awdiv *****************
  6967 ;; Defined at:
  6968 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  dividend        2    0[BANK0 ] int 
  6971 ;;  divisor         2    2[BANK0 ] int 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;  quotient        2    6[BANK0 ] int 
  6974 ;;  sign            1    5[BANK0 ] unsigned char 
  6975 ;;  counter         1    4[BANK0 ] unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  2    0[BANK0 ] int 
  6978 ;; Registers used:
  6979 ;;		wreg, status,2, status,0
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6986 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6988 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6989 ;;Total ram usage:        8 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; Hardware stack levels required when called:    2
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_efgtoa
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text21
  7000  003C12                     __ptext21:
  7001                           	opt callstack 0
  7002  003C12                     ___awdiv:
  7003                           	opt callstack 23
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;incstack = 0
  7007  003C12  0E00               	movlw	0
  7008  003C14  0100               	movlb	0	; () banked
  7009  003C16  6F65               	movwf	___awdiv@sign& (0+255),b
  7010                           
  7011                           ; BSR set to: 0
  7012  003C18  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7013  003C1A  D006               	goto	l6469
  7014                           
  7015                           ; BSR set to: 0
  7016  003C1C  6D62               	negf	___awdiv@divisor& (0+255),b
  7017  003C1E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7018  003C20  B0D8               	btfsc	status,0,c
  7019  003C22  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7020                           
  7021                           ; BSR set to: 0
  7022  003C24  0E01               	movlw	1
  7023  003C26  6F65               	movwf	___awdiv@sign& (0+255),b
  7024  003C28                     l6469:
  7025                           
  7026                           ; BSR set to: 0
  7027  003C28  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7028  003C2A  D006               	goto	l6475
  7029                           
  7030                           ; BSR set to: 0
  7031  003C2C  6D60               	negf	___awdiv@dividend& (0+255),b
  7032  003C2E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7033  003C30  B0D8               	btfsc	status,0,c
  7034  003C32  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7035                           
  7036                           ; BSR set to: 0
  7037  003C34  0E01               	movlw	1
  7038  003C36  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7039  003C38                     l6475:
  7040                           
  7041                           ; BSR set to: 0
  7042  003C38  0E00               	movlw	0
  7043  003C3A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7044  003C3C  0E00               	movlw	0
  7045  003C3E  6F66               	movwf	___awdiv@quotient& (0+255),b
  7046                           
  7047                           ; BSR set to: 0
  7048  003C40  5162               	movf	___awdiv@divisor& (0+255),w,b
  7049  003C42  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7050  003C44  B4D8               	btfsc	status,2,c
  7051  003C46  D01C               	goto	l6497
  7052                           
  7053                           ; BSR set to: 0
  7054  003C48  0E01               	movlw	1
  7055  003C4A  6F64               	movwf	___awdiv@counter& (0+255),b
  7056  003C4C  D004               	goto	l6483
  7057  003C4E                     l6481:
  7058                           
  7059                           ; BSR set to: 0
  7060  003C4E  90D8               	bcf	status,0,c
  7061  003C50  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7062  003C52  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7063  003C54  2B64               	incf	___awdiv@counter& (0+255),f,b
  7064  003C56                     l6483:
  7065                           
  7066                           ; BSR set to: 0
  7067  003C56  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7068  003C58  D7FA               	goto	l6481
  7069  003C5A                     u8070:
  7070                           
  7071                           ; BSR set to: 0
  7072  003C5A  90D8               	bcf	status,0,c
  7073  003C5C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7074  003C5E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7075                           
  7076                           ; BSR set to: 0
  7077  003C60  5162               	movf	___awdiv@divisor& (0+255),w,b
  7078  003C62  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7079  003C64  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7080  003C66  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7081  003C68  A0D8               	btfss	status,0,c
  7082  003C6A  D005               	goto	l6493
  7083                           
  7084                           ; BSR set to: 0
  7085  003C6C  5162               	movf	___awdiv@divisor& (0+255),w,b
  7086  003C6E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7087  003C70  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7088  003C72  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7089                           
  7090                           ; BSR set to: 0
  7091  003C74  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7092  003C76                     l6493:
  7093                           
  7094                           ; BSR set to: 0
  7095  003C76  90D8               	bcf	status,0,c
  7096  003C78  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7097  003C7A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7098                           
  7099                           ; BSR set to: 0
  7100  003C7C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7101  003C7E  D7ED               	goto	u8070
  7102  003C80                     l6497:
  7103                           
  7104                           ; BSR set to: 0
  7105  003C80  5165               	movf	___awdiv@sign& (0+255),w,b
  7106  003C82  B4D8               	btfsc	status,2,c
  7107  003C84  D004               	goto	l6501
  7108                           
  7109                           ; BSR set to: 0
  7110  003C86  6D66               	negf	___awdiv@quotient& (0+255),b
  7111  003C88  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7112  003C8A  B0D8               	btfsc	status,0,c
  7113  003C8C  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7114  003C8E                     l6501:
  7115                           
  7116                           ; BSR set to: 0
  7117  003C8E  C066  F060         	movff	___awdiv@quotient,?___awdiv
  7118  003C92  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  7119                           
  7120                           ; BSR set to: 0
  7121  003C96  0012               	return		;funcret
  7122  003C98                     __end_of___awdiv:
  7123                           	opt callstack 0
  7124                           
  7125 ;; *************** function _ctoa *****************
  7126 ;; Defined at:
  7127 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  7130 ;;		 -> sprintf@f(6), 
  7131 ;;  c               1   29[BANK0 ] unsigned char 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  w               2   30[BANK0 ] int 
  7134 ;;  l               2    0        int 
  7135 ;; Return value:  Size  Location     Type
  7136 ;;                  2   27[BANK0 ] int 
  7137 ;; Registers used:
  7138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7144 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7145 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7147 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7148 ;;Total ram usage:        5 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; Hardware stack levels required when called:    6
  7151 ;; This function calls:
  7152 ;;		_pad
  7153 ;; This function is called by:
  7154 ;;		_vfpfcnvrt
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text22
  7159  004134                     __ptext22:
  7160                           	opt callstack 0
  7161  004134                     _ctoa:
  7162                           	opt callstack 20
  7163                           
  7164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;incstack = 0
  7168  004134  5038               	movf	_width,w,c
  7169  004136  1039               	iorwf	_width+1,w,c
  7170  004138  A4D8               	btfss	status,2,c
  7171  00413A  D005               	goto	l6685
  7172  00413C  C038  F07E         	movff	_width,ctoa@w
  7173  004140  C039  F07F         	movff	_width+1,ctoa@w+1
  7174  004144  D007               	goto	l6687
  7175  004146                     l6685:
  7176  004146  0EFF               	movlw	255
  7177  004148  2438               	addwf	_width,w,c
  7178  00414A  0100               	movlb	0	; () banked
  7179  00414C  6F7E               	movwf	ctoa@w& (0+255),b
  7180  00414E  0EFF               	movlw	255
  7181  004150  2039               	addwfc	_width+1,w,c
  7182  004152  6F7F               	movwf	(ctoa@w+1)& (0+255),b
  7183  004154                     l6687:
  7184                           
  7185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  7186  004154  C07D  F122         	movff	ctoa@c,_dbuf
  7187                           
  7188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  7189  004158  0E00               	movlw	0
  7190  00415A  0101               	movlb	1	; () banked
  7191  00415C  6F23               	movwf	(_dbuf+1)& (0+255),b
  7192                           
  7193                           ; BSR set to: 1
  7194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  7195  00415E  C07B  F070         	movff	ctoa@fp,pad@fp
  7196  004162  C07C  F071         	movff	ctoa@fp+1,pad@fp+1
  7197  004166  0E22               	movlw	low _dbuf
  7198  004168  0100               	movlb	0	; () banked
  7199  00416A  6F72               	movwf	pad@buf& (0+255),b
  7200  00416C  0E01               	movlw	high _dbuf
  7201  00416E  6F73               	movwf	(pad@buf+1)& (0+255),b
  7202  004170  C07E  F074         	movff	ctoa@w,pad@p
  7203  004174  C07F  F075         	movff	ctoa@w+1,pad@p+1
  7204  004178  EC75  F01D         	call	_pad	;wreg free
  7205  00417C  C070  F07B         	movff	?_pad,?_ctoa
  7206  004180  C071  F07C         	movff	?_pad+1,?_ctoa+1
  7207  004184  0012               	return		;funcret
  7208  004186                     __end_of_ctoa:
  7209                           	opt callstack 0
  7210                           
  7211 ;; *************** function _pad *****************
  7212 ;; Defined at:
  7213 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7216 ;;		 -> sprintf@f(6), 
  7217 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  7218 ;;		 -> dbuf(80), 
  7219 ;;  p               2   20[BANK0 ] int 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;  w               2   25[BANK0 ] int 
  7222 ;;  i               2   23[BANK0 ] int 
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  2   16[BANK0 ] int 
  7225 ;; Registers used:
  7226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7232 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7233 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7234 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7235 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7236 ;;Total ram usage:       11 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; Hardware stack levels required when called:    5
  7239 ;; This function calls:
  7240 ;;		_fputc
  7241 ;;		_fputs
  7242 ;;		_strlen
  7243 ;; This function is called by:
  7244 ;;		_ctoa
  7245 ;;		_efgtoa
  7246 ;;		_utoa
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           	psect	text23
  7251  003AEA                     __ptext23:
  7252                           	opt callstack 0
  7253  003AEA                     _pad:
  7254                           	opt callstack 20
  7255                           
  7256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7257                           
  7258                           ;incstack = 0
  7259  003AEA  A03C               	btfss	_flags,0,c
  7260  003AEC  D00A               	goto	l6095
  7261                           
  7262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7263  003AEE  C072  F069         	movff	pad@buf,fputs@s
  7264  003AF2  C073  F06A         	movff	pad@buf+1,fputs@s+1
  7265  003AF6  C070  F06B         	movff	pad@fp,fputs@fp
  7266  003AFA  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  7267  003AFE  EC2E  F021         	call	_fputs	;wreg free
  7268  003B02                     l6095:
  7269                           
  7270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7271  003B02  0100               	movlb	0	; () banked
  7272  003B04  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  7273  003B06  D005               	goto	l6099
  7274                           
  7275                           ; BSR set to: 0
  7276  003B08  C074  F079         	movff	pad@p,pad@w
  7277  003B0C  C075  F07A         	movff	pad@p+1,pad@w+1
  7278  003B10  D004               	goto	l343
  7279  003B12                     l6099:
  7280                           
  7281                           ; BSR set to: 0
  7282  003B12  0E00               	movlw	0
  7283  003B14  6F7A               	movwf	(pad@w+1)& (0+255),b
  7284  003B16  0E00               	movlw	0
  7285  003B18  6F79               	movwf	pad@w& (0+255),b
  7286  003B1A                     l343:
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7290  003B1A  0E00               	movlw	0
  7291  003B1C  6F78               	movwf	(pad@i+1)& (0+255),b
  7292  003B1E  0E00               	movlw	0
  7293  003B20  6F77               	movwf	pad@i& (0+255),b
  7294                           
  7295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7296  003B22  D00D               	goto	l6105
  7297  003B24                     l6101:
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7301  003B24  0E00               	movlw	0
  7302  003B26  6F61               	movwf	(fputc@c+1)& (0+255),b
  7303  003B28  0E20               	movlw	32
  7304  003B2A  6F60               	movwf	fputc@c& (0+255),b
  7305  003B2C  C070  F062         	movff	pad@fp,fputc@fp
  7306  003B30  C071  F063         	movff	pad@fp+1,fputc@fp+1
  7307  003B34  EC24  F01D         	call	_fputc	;wreg free
  7308                           
  7309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  7310  003B38  0100               	movlb	0	; () banked
  7311  003B3A  4B77               	infsnz	pad@i& (0+255),f,b
  7312  003B3C  2B78               	incf	(pad@i+1)& (0+255),f,b
  7313  003B3E                     l6105:
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7317  003B3E  5179               	movf	pad@w& (0+255),w,b
  7318  003B40  5D77               	subwf	pad@i& (0+255),w,b
  7319  003B42  5178               	movf	(pad@i+1)& (0+255),w,b
  7320  003B44  0A80               	xorlw	128
  7321  003B46  6F76               	movwf	??_pad& (0+255),b
  7322  003B48  517A               	movf	(pad@w+1)& (0+255),w,b
  7323  003B4A  0A80               	xorlw	128
  7324  003B4C  5976               	subwfb	??_pad& (0+255),w,b
  7325  003B4E  A0D8               	btfss	status,0,c
  7326  003B50  D7E9               	goto	l6101
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7330  003B52  B03C               	btfsc	_flags,0,c
  7331  003B54  D00A               	goto	l6109
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7335  003B56  C072  F069         	movff	pad@buf,fputs@s
  7336  003B5A  C073  F06A         	movff	pad@buf+1,fputs@s+1
  7337  003B5E  C070  F06B         	movff	pad@fp,fputs@fp
  7338  003B62  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  7339  003B66  EC2E  F021         	call	_fputs	;wreg free
  7340  003B6A                     l6109:
  7341                           
  7342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7343  003B6A  C072  F060         	movff	pad@buf,strlen@s
  7344  003B6E  C073  F061         	movff	pad@buf+1,strlen@s+1
  7345  003B72  ECCF  F021         	call	_strlen	;wreg free
  7346  003B76  0100               	movlb	0	; () banked
  7347  003B78  5179               	movf	pad@w& (0+255),w,b
  7348  003B7A  2560               	addwf	?_strlen& (0+255),w,b
  7349  003B7C  6F70               	movwf	?_pad& (0+255),b
  7350  003B7E  517A               	movf	(pad@w+1)& (0+255),w,b
  7351  003B80  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  7352  003B82  6F71               	movwf	(?_pad+1)& (0+255),b
  7353                           
  7354                           ; BSR set to: 0
  7355  003B84  0012               	return		;funcret
  7356  003B86                     __end_of_pad:
  7357                           	opt callstack 0
  7358                           
  7359 ;; *************** function _strlen *****************
  7360 ;; Defined at:
  7361 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  7364 ;;		 -> dbuf(80), 
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  7367 ;;		 -> dbuf(80), 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  2    0[BANK0 ] unsigned int 
  7370 ;; Registers used:
  7371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7377 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7380 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7381 ;;Total ram usage:        4 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    2
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_pad
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text24
  7392  00439E                     __ptext24:
  7393                           	opt callstack 0
  7394  00439E                     _strlen:
  7395                           	opt callstack 22
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;incstack = 0
  7399  00439E  C060  F062         	movff	strlen@s,strlen@a
  7400  0043A2  C061  F063         	movff	strlen@s+1,strlen@a+1
  7401  0043A6  D003               	goto	l5879
  7402  0043A8                     l5877:
  7403  0043A8  0100               	movlb	0	; () banked
  7404  0043AA  4B60               	infsnz	strlen@s& (0+255),f,b
  7405  0043AC  2B61               	incf	(strlen@s+1)& (0+255),f,b
  7406  0043AE                     l5879:
  7407  0043AE  C060  FFD9         	movff	strlen@s,fsr2l
  7408  0043B2  C061  FFDA         	movff	strlen@s+1,fsr2h
  7409  0043B6  50DF               	movf	indf2,w,c
  7410  0043B8  A4D8               	btfss	status,2,c
  7411  0043BA  D7F6               	goto	l5877
  7412  0043BC  0100               	movlb	0	; () banked
  7413  0043BE  5162               	movf	strlen@a& (0+255),w,b
  7414  0043C0  5D60               	subwf	strlen@s& (0+255),w,b
  7415  0043C2  6F60               	movwf	?_strlen& (0+255),b
  7416  0043C4  5163               	movf	(strlen@a+1)& (0+255),w,b
  7417  0043C6  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  7418  0043C8  6F61               	movwf	(?_strlen+1)& (0+255),b
  7419                           
  7420                           ; BSR set to: 0
  7421  0043CA  0012               	return		;funcret
  7422  0043CC                     __end_of_strlen:
  7423                           	opt callstack 0
  7424                           
  7425 ;; *************** function _fputs *****************
  7426 ;; Defined at:
  7427 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  7430 ;;		 -> dbuf(80), 
  7431 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  7432 ;;		 -> sprintf@f(6), 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;  i               2   14[BANK0 ] int 
  7435 ;;  c               1   13[BANK0 ] unsigned char 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  2    9[BANK0 ] int 
  7438 ;; Registers used:
  7439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7445 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7446 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7448 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7449 ;;Total ram usage:        7 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    4
  7452 ;; This function calls:
  7453 ;;		_fputc
  7454 ;; This function is called by:
  7455 ;;		_pad
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text25
  7460  00425C                     __ptext25:
  7461                           	opt callstack 0
  7462  00425C                     _fputs:
  7463                           	opt callstack 20
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;incstack = 0
  7467  00425C  0E00               	movlw	0
  7468  00425E  0100               	movlb	0	; () banked
  7469  004260  6F6F               	movwf	(fputs@i+1)& (0+255),b
  7470  004262  0E00               	movlw	0
  7471  004264  6F6E               	movwf	fputs@i& (0+255),b
  7472  004266  D00C               	goto	l5873
  7473  004268                     l5869:
  7474                           
  7475                           ; BSR set to: 0
  7476  004268  C06D  F060         	movff	fputs@c,fputc@c
  7477  00426C  6B61               	clrf	(fputc@c+1)& (0+255),b
  7478  00426E  C06B  F062         	movff	fputs@fp,fputc@fp
  7479  004272  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  7480  004276  EC24  F01D         	call	_fputc	;wreg free
  7481  00427A  0100               	movlb	0	; () banked
  7482  00427C  4B6E               	infsnz	fputs@i& (0+255),f,b
  7483  00427E  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  7484  004280                     l5873:
  7485                           
  7486                           ; BSR set to: 0
  7487  004280  516E               	movf	fputs@i& (0+255),w,b
  7488  004282  2569               	addwf	fputs@s& (0+255),w,b
  7489  004284  6ED9               	movwf	fsr2l,c
  7490  004286  516F               	movf	(fputs@i+1)& (0+255),w,b
  7491  004288  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  7492  00428A  6EDA               	movwf	fsr2h,c
  7493  00428C  50DF               	movf	indf2,w,c
  7494  00428E  6F6D               	movwf	fputs@c& (0+255),b
  7495  004290  516D               	movf	fputs@c& (0+255),w,b
  7496  004292  B4D8               	btfsc	status,2,c
  7497  004294  0012               	return	
  7498  004296  D7E8               	goto	l5869
  7499  004298                     __end_of_fputs:
  7500                           	opt callstack 0
  7501                           
  7502 ;; *************** function _fputc *****************
  7503 ;; Defined at:
  7504 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  c               2    0[BANK0 ] int 
  7507 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  7508 ;;		 -> sprintf@f(6), 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  2    0[BANK0 ] int 
  7513 ;; Registers used:
  7514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7520 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7522 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7523 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7524 ;;Total ram usage:        9 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    3
  7527 ;; This function calls:
  7528 ;;		_putch
  7529 ;; This function is called by:
  7530 ;;		_pad
  7531 ;;		_vfpfcnvrt
  7532 ;;		_fputs
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text26
  7537  003A48                     __ptext26:
  7538                           	opt callstack 0
  7539  003A48                     _fputc:
  7540                           	opt callstack 20
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;incstack = 0
  7544  003A48  0100               	movlb	0	; () banked
  7545  003A4A  5162               	movf	fputc@fp& (0+255),w,b
  7546  003A4C  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  7547  003A4E  B4D8               	btfsc	status,2,c
  7548  003A50  D004               	goto	u6880
  7549                           
  7550                           ; BSR set to: 0
  7551  003A52  5162               	movf	fputc@fp& (0+255),w,b
  7552  003A54  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  7553  003A56  A4D8               	btfss	status,2,c
  7554  003A58  D004               	goto	l5859
  7555  003A5A                     u6880:
  7556                           
  7557                           ; BSR set to: 0
  7558  003A5A  5160               	movf	fputc@c& (0+255),w,b
  7559  003A5C  EC8C  F022         	call	_putch
  7560  003A60  0012               	return	
  7561  003A62                     l5859:
  7562                           
  7563                           ; BSR set to: 0
  7564  003A62  EE20 F004          	lfsr	2,4
  7565  003A66  5162               	movf	fputc@fp& (0+255),w,b
  7566  003A68  26D9               	addwf	fsr2l,f,c
  7567  003A6A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7568  003A6C  22DA               	addwfc	fsr2h,f,c
  7569  003A6E  50DE               	movf	postinc2,w,c
  7570  003A70  10DE               	iorwf	postinc2,w,c
  7571  003A72  B4D8               	btfsc	status,2,c
  7572  003A74  D016               	goto	u6900
  7573                           
  7574                           ; BSR set to: 0
  7575  003A76  EE20 F004          	lfsr	2,4
  7576  003A7A  5162               	movf	fputc@fp& (0+255),w,b
  7577  003A7C  26D9               	addwf	fsr2l,f,c
  7578  003A7E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7579  003A80  22DA               	addwfc	fsr2h,f,c
  7580  003A82  EE10 F002          	lfsr	1,2
  7581  003A86  5162               	movf	fputc@fp& (0+255),w,b
  7582  003A88  26E1               	addwf	fsr1l,f,c
  7583  003A8A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7584  003A8C  22E2               	addwfc	fsr1h,f,c
  7585  003A8E  50DE               	movf	postinc2,w,c
  7586  003A90  5CE6               	subwf	postinc1,w,c
  7587  003A92  50E6               	movf	postinc1,w,c
  7588  003A94  0A80               	xorlw	128
  7589  003A96  6F68               	movwf	(??_fputc+4)& (0+255),b
  7590  003A98  50DE               	movf	postinc2,w,c
  7591  003A9A  0A80               	xorlw	128
  7592  003A9C  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  7593  003A9E  B0D8               	btfsc	status,0,c
  7594  003AA0  0012               	return	
  7595  003AA2                     u6900:
  7596                           
  7597                           ; BSR set to: 0
  7598  003AA2  EE20 F002          	lfsr	2,2
  7599  003AA6  5162               	movf	fputc@fp& (0+255),w,b
  7600  003AA8  26D9               	addwf	fsr2l,f,c
  7601  003AAA  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7602  003AAC  22DA               	addwfc	fsr2h,f,c
  7603  003AAE  CFDE F064          	movff	postinc2,??_fputc
  7604  003AB2  CFDD F065          	movff	postdec2,??_fputc+1
  7605  003AB6  C062  FFD9         	movff	fputc@fp,fsr2l
  7606  003ABA  C063  FFDA         	movff	fputc@fp+1,fsr2h
  7607  003ABE  CFDE F066          	movff	postinc2,??_fputc+2
  7608  003AC2  CFDD F067          	movff	postdec2,??_fputc+3
  7609  003AC6  5164               	movf	??_fputc& (0+255),w,b
  7610  003AC8  2566               	addwf	(??_fputc+2)& (0+255),w,b
  7611  003ACA  6ED9               	movwf	fsr2l,c
  7612  003ACC  5165               	movf	(??_fputc+1)& (0+255),w,b
  7613  003ACE  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  7614  003AD0  6EDA               	movwf	fsr2h,c
  7615  003AD2  C060  FFDF         	movff	fputc@c,indf2
  7616  003AD6  EE20 F002          	lfsr	2,2
  7617  003ADA  5162               	movf	fputc@fp& (0+255),w,b
  7618  003ADC  26D9               	addwf	fsr2l,f,c
  7619  003ADE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7620  003AE0  22DA               	addwfc	fsr2h,f,c
  7621  003AE2  2ADE               	incf	postinc2,f,c
  7622  003AE4  0E00               	movlw	0
  7623  003AE6  22DD               	addwfc	postdec2,f,c
  7624  003AE8  0012               	return		;funcret
  7625  003AEA                     __end_of_fputc:
  7626                           	opt callstack 0
  7627                           
  7628 ;; *************** function _putch *****************
  7629 ;; Defined at:
  7630 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  c               1    wreg     unsigned char 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;  c               1    0[COMRAM] unsigned char 
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1    wreg      void 
  7637 ;; Registers used:
  7638 ;;		wreg
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7648 ;;Total ram usage:        0 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:    2
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_fputc
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text27
  7659  004518                     __ptext27:
  7660                           	opt callstack 0
  7661  004518                     _putch:
  7662                           	opt callstack 20
  7663                           
  7664                           ;incstack = 0
  7665  004518  0012               	return		;funcret
  7666  00451A                     __end_of_putch:
  7667                           	opt callstack 0
  7668                           
  7669 ;; *************** function _atoi *****************
  7670 ;; Defined at:
  7671 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  7674 ;;		 -> STR_4(28), STR_1(10), 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;  n               2   20[BANK0 ] int 
  7677 ;;  neg             2   13[BANK0 ] int 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  2    7[BANK0 ] int 
  7680 ;; Registers used:
  7681 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7687 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7688 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7689 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7690 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7691 ;;Total ram usage:       15 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:    3
  7694 ;; This function calls:
  7695 ;;		___wmul
  7696 ;;		_isdigit
  7697 ;;		_isspace
  7698 ;; This function is called by:
  7699 ;;		_vfpfcnvrt
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text28
  7704  00304C                     __ptext28:
  7705                           	opt callstack 0
  7706  00304C                     _atoi:
  7707                           	opt callstack 23
  7708                           
  7709                           ;incstack = 0
  7710  00304C  0E00               	movlw	0
  7711  00304E  0100               	movlb	0	; () banked
  7712  003050  6F75               	movwf	(atoi@n+1)& (0+255),b
  7713  003052  0E00               	movlw	0
  7714  003054  6F74               	movwf	atoi@n& (0+255),b
  7715  003056  0E00               	movlw	0
  7716  003058  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  7717  00305A  0E00               	movlw	0
  7718  00305C  6F6D               	movwf	atoi@neg& (0+255),b
  7719  00305E  D002               	goto	l7033
  7720  003060                     l7031:
  7721                           
  7722                           ; BSR set to: 0
  7723  003060  4B67               	infsnz	atoi@s& (0+255),f,b
  7724  003062  2B68               	incf	(atoi@s+1)& (0+255),f,b
  7725  003064                     l7033:
  7726                           
  7727                           ; BSR set to: 0
  7728  003064  0E01               	movlw	1
  7729  003066  6F73               	movwf	_atoi$1922& (0+255),b
  7730                           
  7731                           ; BSR set to: 0
  7732  003068  C067  FFF6         	movff	atoi@s,tblptrl
  7733  00306C  C068  FFF7         	movff	atoi@s+1,tblptrh
  7734  003070                     	if	0	;tblptru may be non-zero
  7735  003070                     	endif
  7736  003070                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7737  003070  0E00               	movlw	low (__mediumconst shr (0+16))
  7738  003072  6EF8               	movwf	tblptru,c
  7739  003074                     	endif
  7740  003074  0008               	tblrd		*
  7741  003076  50F5               	movf	tablat,w,c
  7742  003078  0A20               	xorlw	32
  7743  00307A  B4D8               	btfsc	status,2,c
  7744  00307C  D01A               	goto	l7041
  7745                           
  7746                           ; BSR set to: 0
  7747  00307E  0EF7               	movlw	247
  7748  003080  6F69               	movwf	??_atoi& (0+255),b
  7749  003082  0EFF               	movlw	255
  7750  003084  6F6A               	movwf	(??_atoi+1)& (0+255),b
  7751  003086  C067  FFF6         	movff	atoi@s,tblptrl
  7752  00308A  C068  FFF7         	movff	atoi@s+1,tblptrh
  7753  00308E                     	if	0	;tblptru may be non-zero
  7754  00308E                     	endif
  7755  00308E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7756  00308E  0E00               	movlw	low (__mediumconst shr (0+16))
  7757  003090  6EF8               	movwf	tblptru,c
  7758  003092                     	endif
  7759  003092  0008               	tblrd		*
  7760  003094  50F5               	movf	tablat,w,c
  7761  003096  6F6B               	movwf	(??_atoi+2)& (0+255),b
  7762  003098  6B6C               	clrf	(??_atoi+3)& (0+255),b
  7763  00309A  5169               	movf	??_atoi& (0+255),w,b
  7764  00309C  276B               	addwf	(??_atoi+2)& (0+255),f,b
  7765  00309E  516A               	movf	(??_atoi+1)& (0+255),w,b
  7766  0030A0  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  7767  0030A2  516C               	movf	(??_atoi+3)& (0+255),w,b
  7768  0030A4  E104               	bnz	u9020
  7769  0030A6  0E05               	movlw	5
  7770  0030A8  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  7771  0030AA  A0D8               	btfss	status,0,c
  7772  0030AC  D002               	goto	l7041
  7773  0030AE                     u9020:
  7774                           
  7775                           ; BSR set to: 0
  7776  0030AE  0E00               	movlw	0
  7777  0030B0  6F73               	movwf	_atoi$1922& (0+255),b
  7778  0030B2                     l7041:
  7779                           
  7780                           ; BSR set to: 0
  7781  0030B2  C073  F06F         	movff	_atoi$1922,_atoi$1921
  7782  0030B6  6B70               	clrf	(_atoi$1921+1)& (0+255),b
  7783                           
  7784                           ; BSR set to: 0
  7785  0030B8  516F               	movf	_atoi$1921& (0+255),w,b
  7786  0030BA  1170               	iorwf	(_atoi$1921+1)& (0+255),w,b
  7787  0030BC  B4D8               	btfsc	status,2,c
  7788  0030BE  D008               	goto	l7051
  7789  0030C0  D7CF               	goto	l7031
  7790  0030C2                     l7047:
  7791                           
  7792                           ; BSR set to: 0
  7793  0030C2  0E00               	movlw	0
  7794  0030C4  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  7795  0030C6  0E01               	movlw	1
  7796  0030C8  6F6D               	movwf	atoi@neg& (0+255),b
  7797  0030CA                     l7049:
  7798                           
  7799                           ; BSR set to: 0
  7800  0030CA  4B67               	infsnz	atoi@s& (0+255),f,b
  7801  0030CC  2B68               	incf	(atoi@s+1)& (0+255),f,b
  7802  0030CE  D033               	goto	l7057
  7803  0030D0                     l7051:
  7804                           
  7805                           ; BSR set to: 0
  7806  0030D0  C067  FFF6         	movff	atoi@s,tblptrl
  7807  0030D4  C068  FFF7         	movff	atoi@s+1,tblptrh
  7808  0030D8                     	if	0	;tblptru may be non-zero
  7809  0030D8                     	endif
  7810  0030D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7811  0030D8  0E00               	movlw	low (__mediumconst shr (0+16))
  7812  0030DA  6EF8               	movwf	tblptru,c
  7813  0030DC                     	endif
  7814  0030DC  0008               	tblrd		*
  7815  0030DE  50F5               	movf	tablat,w,c
  7816  0030E0  6F69               	movwf	??_atoi& (0+255),b
  7817  0030E2  6B6A               	clrf	(??_atoi+1)& (0+255),b
  7818                           
  7819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7820                           ; Switch size 1, requested type "simple"
  7821                           ; Number of cases is 1, Range of values is 0 to 0
  7822                           ; switch strategies available:
  7823                           ; Name         Instructions Cycles
  7824                           ; simple_byte            4     3 (average)
  7825                           ;	Chosen strategy is simple_byte
  7826  0030E4  516A               	movf	(??_atoi+1)& (0+255),w,b
  7827  0030E6  0A00               	xorlw	0	; case 0
  7828  0030E8  A4D8               	btfss	status,2,c
  7829  0030EA  D025               	goto	l7057
  7830                           
  7831                           ; BSR set to: 0
  7832                           ; Switch size 1, requested type "simple"
  7833                           ; Number of cases is 2, Range of values is 43 to 45
  7834                           ; switch strategies available:
  7835                           ; Name         Instructions Cycles
  7836                           ; simple_byte            7     4 (average)
  7837                           ;	Chosen strategy is simple_byte
  7838  0030EC  5169               	movf	??_atoi& (0+255),w,b
  7839  0030EE  0A2B               	xorlw	43	; case 43
  7840  0030F0  B4D8               	btfsc	status,2,c
  7841  0030F2  D7EB               	goto	l7049
  7842  0030F4  0A06               	xorlw	6	; case 45
  7843  0030F6  B4D8               	btfsc	status,2,c
  7844  0030F8  D7E4               	goto	l7047
  7845  0030FA  D01D               	goto	l7057
  7846  0030FC                     l7053:
  7847                           
  7848                           ; BSR set to: 0
  7849  0030FC  C074  F060         	movff	atoi@n,___wmul@multiplier
  7850  003100  C075  F061         	movff	atoi@n+1,___wmul@multiplier+1
  7851  003104  0E00               	movlw	0
  7852  003106  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7853  003108  0E0A               	movlw	10
  7854  00310A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  7855  00310C  ECFC  F021         	call	___wmul	;wreg free
  7856  003110  C067  FFF6         	movff	atoi@s,tblptrl
  7857  003114  C068  FFF7         	movff	atoi@s+1,tblptrh
  7858  003118                     	if	0	;tblptru may be non-zero
  7859  003118                     	endif
  7860  003118                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7861  003118  0E00               	movlw	low (__mediumconst shr (0+16))
  7862  00311A  6EF8               	movwf	tblptru,c
  7863  00311C                     	endif
  7864  00311C  0008               	tblrd		*
  7865  00311E  50F5               	movf	tablat,w,c
  7866  003120  0100               	movlb	0	; () banked
  7867  003122  5F60               	subwf	?___wmul& (0+255),f,b
  7868  003124  0E00               	movlw	0
  7869  003126  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
  7870  003128  0E30               	movlw	48
  7871  00312A  2560               	addwf	?___wmul& (0+255),w,b
  7872  00312C  6F74               	movwf	atoi@n& (0+255),b
  7873  00312E  0E00               	movlw	0
  7874  003130  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  7875  003132  6F75               	movwf	(atoi@n+1)& (0+255),b
  7876  003134  D7CA               	goto	l7049
  7877  003136                     l7057:
  7878                           
  7879                           ; BSR set to: 0
  7880  003136  0ED0               	movlw	208
  7881  003138  6F69               	movwf	??_atoi& (0+255),b
  7882  00313A  0EFF               	movlw	255
  7883  00313C  6F6A               	movwf	(??_atoi+1)& (0+255),b
  7884  00313E  C067  FFF6         	movff	atoi@s,tblptrl
  7885  003142  C068  FFF7         	movff	atoi@s+1,tblptrh
  7886  003146                     	if	0	;tblptru may be non-zero
  7887  003146                     	endif
  7888  003146                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7889  003146  0E00               	movlw	low (__mediumconst shr (0+16))
  7890  003148  6EF8               	movwf	tblptru,c
  7891  00314A                     	endif
  7892  00314A  0008               	tblrd		*
  7893  00314C  50F5               	movf	tablat,w,c
  7894  00314E  6F6B               	movwf	(??_atoi+2)& (0+255),b
  7895  003150  6B6C               	clrf	(??_atoi+3)& (0+255),b
  7896  003152  5169               	movf	??_atoi& (0+255),w,b
  7897  003154  276B               	addwf	(??_atoi+2)& (0+255),f,b
  7898  003156  516A               	movf	(??_atoi+1)& (0+255),w,b
  7899  003158  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  7900  00315A  516C               	movf	(??_atoi+3)& (0+255),w,b
  7901  00315C  E106               	bnz	u9040
  7902  00315E  0E0A               	movlw	10
  7903  003160  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  7904  003162  B0D8               	btfsc	status,0,c
  7905  003164  D002               	goto	u9040
  7906  003166  0E01               	movlw	1
  7907  003168  D001               	goto	u9050
  7908  00316A                     u9040:
  7909  00316A  0E00               	movlw	0
  7910  00316C                     u9050:
  7911  00316C  6F71               	movwf	_atoi$1923& (0+255),b
  7912  00316E  6B72               	clrf	(_atoi$1923+1)& (0+255),b
  7913                           
  7914                           ; BSR set to: 0
  7915  003170  5171               	movf	_atoi$1923& (0+255),w,b
  7916  003172  1172               	iorwf	(_atoi$1923+1)& (0+255),w,b
  7917  003174  A4D8               	btfss	status,2,c
  7918  003176  D7C2               	goto	l7053
  7919                           
  7920                           ; BSR set to: 0
  7921  003178  516D               	movf	atoi@neg& (0+255),w,b
  7922  00317A  116E               	iorwf	(atoi@neg+1)& (0+255),w,b
  7923  00317C  A4D8               	btfss	status,2,c
  7924  00317E  D00D               	goto	l1229
  7925                           
  7926                           ; BSR set to: 0
  7927  003180  C074  F069         	movff	atoi@n,??_atoi
  7928  003184  C075  F06A         	movff	atoi@n+1,??_atoi+1
  7929  003188  1F69               	comf	??_atoi& (0+255),f,b
  7930  00318A  1F6A               	comf	(??_atoi+1)& (0+255),f,b
  7931  00318C  4B69               	infsnz	??_atoi& (0+255),f,b
  7932  00318E  2B6A               	incf	(??_atoi+1)& (0+255),f,b
  7933  003190  C069  F067         	movff	??_atoi,?_atoi
  7934  003194  C06A  F068         	movff	??_atoi+1,?_atoi+1
  7935  003198  0012               	return	
  7936  00319A                     l1229:
  7937                           
  7938                           ; BSR set to: 0
  7939  00319A  C074  F067         	movff	atoi@n,?_atoi
  7940  00319E  C075  F068         	movff	atoi@n+1,?_atoi+1
  7941                           
  7942                           ; BSR set to: 0
  7943  0031A2  0012               	return		;funcret
  7944  0031A4                     __end_of_atoi:
  7945                           	opt callstack 0
  7946                           
  7947 ;; *************** function _isspace *****************
  7948 ;; Defined at:
  7949 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  c               2    0[BANK0 ] int 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;		None
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  2    0[BANK0 ] int 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7963 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7965 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7966 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7967 ;;Total ram usage:        7 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    2
  7970 ;; This function calls:
  7971 ;;		Nothing
  7972 ;; This function is called by:
  7973 ;;		_atoi
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           	psect	text29
  7978  00421C                     __ptext29:
  7979                           	opt callstack 0
  7980  00421C                     _isspace:
  7981                           	opt callstack 23
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;incstack = 0
  7985  00421C  0E01               	movlw	1
  7986  00421E  0100               	movlb	0	; () banked
  7987  004220  6F66               	movwf	_isspace$1952& (0+255),b
  7988                           
  7989                           ; BSR set to: 0
  7990  004222  0E20               	movlw	32
  7991  004224  1960               	xorwf	isspace@c& (0+255),w,b
  7992  004226  1161               	iorwf	(isspace@c+1)& (0+255),w,b
  7993  004228  B4D8               	btfsc	status,2,c
  7994  00422A  D014               	goto	l6677
  7995                           
  7996                           ; BSR set to: 0
  7997  00422C  0EF7               	movlw	247
  7998  00422E  6F62               	movwf	??_isspace& (0+255),b
  7999  004230  0EFF               	movlw	255
  8000  004232  6F63               	movwf	(??_isspace+1)& (0+255),b
  8001  004234  C060  F064         	movff	isspace@c,??_isspace+2
  8002  004238  C061  F065         	movff	isspace@c+1,??_isspace+3
  8003  00423C  5162               	movf	??_isspace& (0+255),w,b
  8004  00423E  2764               	addwf	(??_isspace+2)& (0+255),f,b
  8005  004240  5163               	movf	(??_isspace+1)& (0+255),w,b
  8006  004242  2365               	addwfc	(??_isspace+3)& (0+255),f,b
  8007  004244  5165               	movf	(??_isspace+3)& (0+255),w,b
  8008  004246  E104               	bnz	u8400
  8009  004248  0E05               	movlw	5
  8010  00424A  5D64               	subwf	(??_isspace+2)& (0+255),w,b
  8011  00424C  A0D8               	btfss	status,0,c
  8012  00424E  D002               	goto	l6677
  8013  004250                     u8400:
  8014                           
  8015                           ; BSR set to: 0
  8016  004250  0E00               	movlw	0
  8017  004252  6F66               	movwf	_isspace$1952& (0+255),b
  8018  004254                     l6677:
  8019                           
  8020                           ; BSR set to: 0
  8021  004254  C066  F060         	movff	_isspace$1952,?_isspace
  8022  004258  6B61               	clrf	(?_isspace+1)& (0+255),b
  8023                           
  8024                           ; BSR set to: 0
  8025  00425A  0012               	return		;funcret
  8026  00425C                     __end_of_isspace:
  8027                           	opt callstack 0
  8028                           
  8029 ;; *************** function _isdigit *****************
  8030 ;; Defined at:
  8031 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;  c               2    0[BANK0 ] int 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;		None
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  2    0[BANK0 ] int 
  8038 ;; Registers used:
  8039 ;;		wreg, status,2, status,0
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8045 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8047 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8048 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8049 ;;Total ram usage:        6 bytes
  8050 ;; Hardware stack levels used:    1
  8051 ;; Hardware stack levels required when called:    2
  8052 ;; This function calls:
  8053 ;;		Nothing
  8054 ;; This function is called by:
  8055 ;;		_vfpfcnvrt
  8056 ;;		_atoi
  8057 ;; This function uses a non-reentrant model
  8058 ;;
  8059                           
  8060                           	psect	text30
  8061  00433C                     __ptext30:
  8062                           	opt callstack 0
  8063  00433C                     _isdigit:
  8064                           	opt callstack 24
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;incstack = 0
  8068  00433C  0ED0               	movlw	208
  8069  00433E  0100               	movlb	0	; () banked
  8070  004340  6F62               	movwf	??_isdigit& (0+255),b
  8071  004342  0EFF               	movlw	255
  8072  004344  6F63               	movwf	(??_isdigit+1)& (0+255),b
  8073  004346  C060  F064         	movff	isdigit@c,??_isdigit+2
  8074  00434A  C061  F065         	movff	isdigit@c+1,??_isdigit+3
  8075  00434E  5162               	movf	??_isdigit& (0+255),w,b
  8076  004350  2764               	addwf	(??_isdigit+2)& (0+255),f,b
  8077  004352  5163               	movf	(??_isdigit+1)& (0+255),w,b
  8078  004354  2365               	addwfc	(??_isdigit+3)& (0+255),f,b
  8079  004356  5165               	movf	(??_isdigit+3)& (0+255),w,b
  8080  004358  E106               	bnz	u7600
  8081  00435A  0E0A               	movlw	10
  8082  00435C  5D64               	subwf	(??_isdigit+2)& (0+255),w,b
  8083  00435E  B0D8               	btfsc	status,0,c
  8084  004360  D002               	goto	u7600
  8085  004362  0E01               	movlw	1
  8086  004364  D001               	goto	u7610
  8087  004366                     u7600:
  8088  004366  0E00               	movlw	0
  8089  004368                     u7610:
  8090  004368  6F60               	movwf	?_isdigit& (0+255),b
  8091  00436A  6B61               	clrf	(?_isdigit+1)& (0+255),b
  8092                           
  8093                           ; BSR set to: 0
  8094  00436C  0012               	return		;funcret
  8095  00436E                     __end_of_isdigit:
  8096                           	opt callstack 0
  8097                           
  8098 ;; *************** function ___wmul *****************
  8099 ;; Defined at:
  8100 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8103 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;  product         2    4[BANK0 ] unsigned int 
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  2    0[BANK0 ] unsigned int 
  8108 ;; Registers used:
  8109 ;;		wreg, status,2, status,0, prodl, prodh
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8115 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8116 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8118 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8119 ;;Total ram usage:        6 bytes
  8120 ;; Hardware stack levels used:    1
  8121 ;; Hardware stack levels required when called:    2
  8122 ;; This function calls:
  8123 ;;		Nothing
  8124 ;; This function is called by:
  8125 ;;		_atoi
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text31
  8130  0043F8                     __ptext31:
  8131                           	opt callstack 0
  8132  0043F8                     ___wmul:
  8133                           	opt callstack 23
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;incstack = 0
  8137  0043F8  0100               	movlb	0	; () banked
  8138  0043FA  5160               	movf	___wmul@multiplier& (0+255),w,b
  8139  0043FC  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8140  0043FE  CFF3 F064          	movff	prodl,___wmul@product
  8141  004402  CFF4 F065          	movff	prodh,___wmul@product+1
  8142  004406  5160               	movf	___wmul@multiplier& (0+255),w,b
  8143  004408  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8144  00440A  50F3               	movf	prodl,w,c
  8145  00440C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8146  00440E  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8147  004410  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8148  004412  50F3               	movf	prodl,w,c
  8149  004414  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8150                           
  8151                           ; BSR set to: 0
  8152  004416  C064  F060         	movff	___wmul@product,?___wmul
  8153  00441A  C065  F061         	movff	___wmul@product+1,?___wmul+1
  8154                           
  8155                           ; BSR set to: 0
  8156  00441E  0012               	return		;funcret
  8157  004420                     __end_of___wmul:
  8158                           	opt callstack 0
  8159                           
  8160 ;; *************** function _estadoDirreccion *****************
  8161 ;; Defined at:
  8162 ;;		line 172 in file "auto.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;  valor           1    wreg     unsigned char 
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;  valor           1    2[BANK0 ] unsigned char 
  8167 ;;  angulo          1    3[BANK0 ] unsigned char 
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1    wreg      unsigned char 
  8170 ;; Registers used:
  8171 ;;		wreg, status,2, status,0
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8178 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8179 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8180 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8181 ;;Total ram usage:        4 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; Hardware stack levels required when called:    2
  8184 ;; This function calls:
  8185 ;;		Nothing
  8186 ;; This function is called by:
  8187 ;;		_terminal
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           	psect	text32
  8192  004024                     __ptext32:
  8193                           	opt callstack 0
  8194  004024                     _estadoDirreccion:
  8195                           	opt callstack 27
  8196                           
  8197                           ; BSR set to: 0
  8198                           ;incstack = 0
  8199                           ;estadoDirreccion@valor stored from wreg
  8200  004024  0100               	movlb	0	; () banked
  8201  004026  6F62               	movwf	estadoDirreccion@valor& (0+255),b
  8202                           
  8203                           ;auto.c: 173:     unsigned char angulo = 90;
  8204  004028  0E5A               	movlw	90
  8205  00402A  0100               	movlb	0	; () banked
  8206  00402C  6F63               	movwf	estadoDirreccion@angulo& (0+255),b
  8207                           
  8208                           ;auto.c: 174:     switch(servo_dirreccion){
  8209  00402E  D017               	goto	l7433
  8210  004030                     l7413:
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;auto.c: 176:             if(valor == 1){
  8214  004030  0562               	decf	estadoDirreccion@valor& (0+255),w,b
  8215  004032  A4D8               	btfss	status,2,c
  8216  004034  D004               	goto	l7417
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;auto.c: 177:                 servo_dirreccion = 1;
  8220  004036  0E01               	movlw	1
  8221  004038  6E40               	movwf	_servo_dirreccion,c
  8222  00403A                     
  8223                           ;auto.c: 178:                 angulo = 0;
  8224  00403A  0E00               	movlw	0
  8225  00403C  D00E               	goto	L12
  8226  00403E                     l7417:
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;auto.c: 181:                 servo_dirreccion = 2;
  8230  00403E  0E02               	movlw	2
  8231  004040  6E40               	movwf	_servo_dirreccion,c
  8232  004042  D00A               	goto	l7429
  8233  004044                     l7419:
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;auto.c: 186:             if(valor != 1){
  8237  004044  0562               	decf	estadoDirreccion@valor& (0+255),w,b
  8238  004046  B4D8               	btfsc	status,2,c
  8239  004048  D7F8               	goto	L13
  8240  00404A                     u9530:
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;auto.c: 187:                 servo_dirreccion = 0;
  8244  00404A  0E00               	movlw	0
  8245  00404C  6E40               	movwf	_servo_dirreccion,c
  8246                           
  8247                           ;auto.c: 188:                 angulo = 90;
  8248  00404E  0E5A               	movlw	90
  8249  004050  D004               	goto	L12
  8250  004052                     l7425:
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;auto.c: 195:             if(valor == 1){
  8254  004052  0562               	decf	estadoDirreccion@valor& (0+255),w,b
  8255  004054  B4D8               	btfsc	status,2,c
  8256  004056  D7F9               	goto	u9530
  8257  004058                     l7429:
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;auto.c: 200:                 angulo = 180;
  8261  004058  0EB4               	movlw	180
  8262  00405A                     L12:
  8263  00405A  6F63               	movwf	estadoDirreccion@angulo& (0+255),b
  8264  00405C  D011               	goto	l7435
  8265  00405E                     l7433:
  8266                           
  8267                           ; BSR set to: 0
  8268  00405E  5040               	movf	_servo_dirreccion,w,c
  8269  004060  6F60               	movwf	??_estadoDirreccion& (0+255),b
  8270  004062  6B61               	clrf	(??_estadoDirreccion+1)& (0+255),b
  8271                           
  8272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8273                           ; Switch size 1, requested type "simple"
  8274                           ; Number of cases is 1, Range of values is 0 to 0
  8275                           ; switch strategies available:
  8276                           ; Name         Instructions Cycles
  8277                           ; simple_byte            4     3 (average)
  8278                           ;	Chosen strategy is simple_byte
  8279  004064  5161               	movf	(??_estadoDirreccion+1)& (0+255),w,b
  8280  004066  0A00               	xorlw	0	; case 0
  8281  004068  A4D8               	btfss	status,2,c
  8282  00406A  D00A               	goto	l7435
  8283                           
  8284                           ; BSR set to: 0
  8285                           ; Switch size 1, requested type "simple"
  8286                           ; Number of cases is 3, Range of values is 0 to 2
  8287                           ; switch strategies available:
  8288                           ; Name         Instructions Cycles
  8289                           ; simple_byte           10     6 (average)
  8290                           ;	Chosen strategy is simple_byte
  8291  00406C  5160               	movf	??_estadoDirreccion& (0+255),w,b
  8292  00406E  0A00               	xorlw	0	; case 0
  8293  004070  B4D8               	btfsc	status,2,c
  8294  004072  D7DE               	goto	l7413
  8295  004074  0A01               	xorlw	1	; case 1
  8296  004076  B4D8               	btfsc	status,2,c
  8297  004078  D7E5               	goto	l7419
  8298  00407A  0A03               	xorlw	3	; case 2
  8299  00407C  B4D8               	btfsc	status,2,c
  8300  00407E  D7E9               	goto	l7425
  8301  004080                     l7435:
  8302                           
  8303                           ; BSR set to: 0
  8304                           ;auto.c: 204:     return angulo;
  8305  004080  5163               	movf	estadoDirreccion@angulo& (0+255),w,b
  8306                           
  8307                           ; BSR set to: 0
  8308  004082  0012               	return		;funcret
  8309  004084                     __end_of_estadoDirreccion:
  8310                           	opt callstack 0
  8311                           
  8312 ;; *************** function _dirreccion *****************
  8313 ;; Defined at:
  8314 ;;		line 207 in file "auto.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  degree          1    wreg     unsigned char 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  degree          1    2[BANK0 ] unsigned char 
  8319 ;;  tiempo_1        1    3[BANK0 ] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2, status,0
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8330 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8333 ;;Total ram usage:        4 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:    2
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_terminal
  8340 ;;		_cambiarEstadoEscapeFuego
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	text33
  8345  003EF0                     __ptext33:
  8346                           	opt callstack 0
  8347  003EF0                     _dirreccion:
  8348                           	opt callstack 27
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;incstack = 0
  8352                           ;dirreccion@degree stored from wreg
  8353  003EF0  0100               	movlb	0	; () banked
  8354  003EF2  6F62               	movwf	dirreccion@degree& (0+255),b
  8355                           
  8356                           ;auto.c: 208:     unsigned char tiempo_1 = 14;
  8357  003EF4  0E0E               	movlw	14
  8358  003EF6  0100               	movlb	0	; () banked
  8359  003EF8  6F63               	movwf	dirreccion@tiempo_1& (0+255),b
  8360                           
  8361                           ;auto.c: 209:     switch(degree){
  8362  003EFA  D007               	goto	l7453
  8363  003EFC                     l7445:
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;auto.c: 211:             tiempo_1 = 14;
  8367  003EFC  0E0E               	movlw	14
  8368  003EFE  D003               	goto	L15
  8369  003F00                     l7447:
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;auto.c: 214:             tiempo_1 = 15;
  8373  003F00  0E0F               	movlw	15
  8374  003F02  D001               	goto	L15
  8375  003F04                     l7449:
  8376                           
  8377                           ; BSR set to: 0
  8378                           ;auto.c: 217:             tiempo_1 = 13;
  8379  003F04  0E0D               	movlw	13
  8380  003F06                     L15:
  8381  003F06  6F63               	movwf	dirreccion@tiempo_1& (0+255),b
  8382                           
  8383                           ;auto.c: 218:             break;
  8384  003F08  D011               	goto	l262
  8385  003F0A                     l7453:
  8386                           
  8387                           ; BSR set to: 0
  8388  003F0A  5162               	movf	dirreccion@degree& (0+255),w,b
  8389  003F0C  6F60               	movwf	??_dirreccion& (0+255),b
  8390  003F0E  6B61               	clrf	(??_dirreccion+1)& (0+255),b
  8391                           
  8392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8393                           ; Switch size 1, requested type "simple"
  8394                           ; Number of cases is 1, Range of values is 0 to 0
  8395                           ; switch strategies available:
  8396                           ; Name         Instructions Cycles
  8397                           ; simple_byte            4     3 (average)
  8398                           ;	Chosen strategy is simple_byte
  8399  003F10  5161               	movf	(??_dirreccion+1)& (0+255),w,b
  8400  003F12  0A00               	xorlw	0	; case 0
  8401  003F14  A4D8               	btfss	status,2,c
  8402  003F16  D00A               	goto	l262
  8403                           
  8404                           ; BSR set to: 0
  8405                           ; Switch size 1, requested type "simple"
  8406                           ; Number of cases is 3, Range of values is 0 to 180
  8407                           ; switch strategies available:
  8408                           ; Name         Instructions Cycles
  8409                           ; simple_byte           10     6 (average)
  8410                           ;	Chosen strategy is simple_byte
  8411  003F18  5160               	movf	??_dirreccion& (0+255),w,b
  8412  003F1A  0A00               	xorlw	0	; case 0
  8413  003F1C  B4D8               	btfsc	status,2,c
  8414  003F1E  D7F0               	goto	l7447
  8415  003F20  0A5A               	xorlw	90	; case 90
  8416  003F22  B4D8               	btfsc	status,2,c
  8417  003F24  D7EB               	goto	l7445
  8418  003F26  0AEE               	xorlw	238	; case 180
  8419  003F28  B4D8               	btfsc	status,2,c
  8420  003F2A  D7EC               	goto	l7449
  8421  003F2C                     l262:
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;auto.c: 220:     if(PORTDbits.RD4 != 1){
  8425  003F2C  B883               	btfsc	3971,4,c	;volatile
  8426  003F2E  D005               	goto	l7457
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;auto.c: 221:         TIME_MAX = tiempo_1;
  8430  003F30  C063  F04E         	movff	dirreccion@tiempo_1,_TIME_MAX
  8431  003F34  6A4F               	clrf	_TIME_MAX+1,c
  8432                           
  8433                           ;auto.c: 222:         PORTDbits.RD4 = 1;
  8434  003F36  8883               	bsf	3971,4,c	;volatile
  8435                           
  8436                           ;auto.c: 223:     }
  8437  003F38  D009               	goto	l7461
  8438  003F3A                     l7457:
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;auto.c: 225:         TIME_MAX = 200 - tiempo_1;
  8442  003F3A  5163               	movf	dirreccion@tiempo_1& (0+255),w,b
  8443  003F3C  08C8               	sublw	200
  8444  003F3E  6E4E               	movwf	_TIME_MAX,c
  8445  003F40  0E00               	movlw	0
  8446  003F42  A0D8               	btfss	status,0,c
  8447  003F44  2AE8               	incf	wreg,f,c
  8448  003F46  0800               	sublw	0
  8449  003F48  6E4F               	movwf	_TIME_MAX+1,c
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;auto.c: 226:         PORTDbits.RD4 = 0;
  8453  003F4A  9883               	bcf	3971,4,c	;volatile
  8454  003F4C                     l7461:
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;auto.c: 228:     contador_timer_5 = 0;
  8458  003F4C  0E00               	movlw	0
  8459  003F4E  6E41               	movwf	_contador_timer_5,c
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;auto.c: 229:     bandera_servo = 0;
  8463  003F50  0E00               	movlw	0
  8464  003F52  0101               	movlb	1	; () banked
  8465  003F54  6F20               	movwf	_bandera_servo& (0+255),b
  8466                           
  8467                           ; BSR set to: 1
  8468                           ;auto.c: 230:     T5CONbits.TMR5ON = 1;
  8469  003F56  010F               	movlb	15	; () banked
  8470  003F58  8122               	bsf	34,0,b	;volatile
  8471                           
  8472                           ; BSR set to: 15
  8473  003F5A  0012               	return		;funcret
  8474  003F5C                     __end_of_dirreccion:
  8475                           	opt callstack 0
  8476                           
  8477 ;; *************** function _cambiarPWM *****************
  8478 ;; Defined at:
  8479 ;;		line 166 in file "auto.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;		None
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;		None
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      void 
  8486 ;; Registers used:
  8487 ;;		wreg, status,2, status,0, cstack
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8497 ;;Total ram usage:        0 bytes
  8498 ;; Hardware stack levels used:    1
  8499 ;; Hardware stack levels required when called:    3
  8500 ;; This function calls:
  8501 ;;		_definirVelocidad
  8502 ;; This function is called by:
  8503 ;;		_terminal
  8504 ;; This function uses a non-reentrant model
  8505 ;;
  8506                           
  8507                           	psect	text34
  8508  0044EA                     __ptext34:
  8509                           	opt callstack 0
  8510  0044EA                     _cambiarPWM:
  8511                           	opt callstack 26
  8512                           
  8513                           ;auto.c: 167:     if(motor == 1){
  8514                           
  8515                           ; BSR set to: 15
  8516                           ;incstack = 0
  8517  0044EA  0443               	decf	_motor,w,c
  8518  0044EC  A4D8               	btfss	status,2,c
  8519  0044EE  0012               	return	
  8520                           
  8521                           ;auto.c: 168:         definirVelocidad();
  8522  0044F0  EC4C  F021         	call	_definirVelocidad	;wreg free
  8523  0044F4  0012               	return		;funcret
  8524  0044F6                     __end_of_cambiarPWM:
  8525                           	opt callstack 0
  8526                           
  8527 ;; *************** function _rutinaEscape *****************
  8528 ;; Defined at:
  8529 ;;		line 264 in file "auto.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;  type            1    wreg     unsigned char 
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;  type            1   66[BANK0 ] unsigned char 
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  1    wreg      void 
  8536 ;; Registers used:
  8537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8544 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8545 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8546 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8547 ;;Total ram usage:        3 bytes
  8548 ;; Hardware stack levels used:    1
  8549 ;; Hardware stack levels required when called:    4
  8550 ;; This function calls:
  8551 ;;		_adelante
  8552 ;;		_atras
  8553 ;;		_definirVelocidad
  8554 ;;		_encenderMotor
  8555 ;;		_enviarRS232
  8556 ;;		_fijarVelocidad
  8557 ;;		_frenarMotor
  8558 ;; This function is called by:
  8559 ;;		_main
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           	psect	text35
  8564  003E80                     __ptext35:
  8565                           	opt callstack 0
  8566  003E80                     _rutinaEscape:
  8567                           	opt callstack 26
  8568                           
  8569                           ;incstack = 0
  8570                           ;rutinaEscape@type stored from wreg
  8571  003E80  0100               	movlb	0	; () banked
  8572  003E82  6FA2               	movwf	rutinaEscape@type& (0+255),b
  8573                           
  8574                           ;auto.c: 265:     frenarMotor();
  8575  003E84  EC57  F022         	call	_frenarMotor	;wreg free
  8576                           
  8577                           ;auto.c: 266:     switch(type){
  8578  003E88  D023               	goto	l7559
  8579  003E8A                     l7541:
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;auto.c: 272:             fijarVelocidad(0);
  8583  003E8A  0E00               	movlw	0
  8584  003E8C  EC14  F01A         	call	_fijarVelocidad
  8585                           
  8586                           ;auto.c: 273:             atras();
  8587  003E90  EC7B  F022         	call	_atras	;wreg free
  8588                           
  8589                           ;auto.c: 274:             encenderMotor();
  8590  003E94  EC67  F022         	call	_encenderMotor	;wreg free
  8591                           
  8592                           ;auto.c: 275:             _delay((unsigned long)((1000)*(48000000/4000.0)));
  8593  003E98  0E3D               	movlw	61
  8594  003E9A  0100               	movlb	0	; () banked
  8595  003E9C  6FA1               	movwf	(??_rutinaEscape+1)& (0+255),b
  8596  003E9E  0EE1               	movlw	225
  8597  003EA0  6FA0               	movwf	??_rutinaEscape& (0+255),b
  8598  003EA2  0E3F               	movlw	63
  8599  003EA4                     u9687:
  8600  003EA4  2EE8               	decfsz	wreg,f,c
  8601  003EA6  D7FE               	bra	u9687
  8602  003EA8  2FA0               	decfsz	??_rutinaEscape& (0+255),f,b
  8603  003EAA  D7FC               	bra	u9687
  8604  003EAC  2FA1               	decfsz	(??_rutinaEscape+1)& (0+255),f,b
  8605  003EAE  D7FA               	bra	u9687
  8606  003EB0  D000               	nop2	
  8607                           
  8608                           ;auto.c: 276:             adelante();
  8609  003EB2  EC80  F022         	call	_adelante	;wreg free
  8610                           
  8611                           ;auto.c: 277:             enviarRS232("Girando");
  8612  003EB6  0E81               	movlw	low STR_5
  8613  003EB8  0100               	movlb	0	; () banked
  8614  003EBA  6F68               	movwf	enviarRS232@valores& (0+255),b
  8615  003EBC  0E0F               	movlw	high STR_5
  8616  003EBE  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  8617  003EC0  ECCC  F01E         	call	_enviarRS232	;wreg free
  8618                           
  8619                           ;auto.c: 278:             fijarVelocidad(50);
  8620  003EC4  0E32               	movlw	50
  8621  003EC6  EC14  F01A         	call	_fijarVelocidad
  8622                           
  8623                           ;auto.c: 279:             definirVelocidad();
  8624  003ECA  EC4C  F021         	call	_definirVelocidad	;wreg free
  8625                           
  8626                           ;auto.c: 280:             break;
  8627  003ECE  0012               	return	
  8628  003ED0                     l7559:
  8629  003ED0  0100               	movlb	0	; () banked
  8630  003ED2  51A2               	movf	rutinaEscape@type& (0+255),w,b
  8631  003ED4  6FA0               	movwf	??_rutinaEscape& (0+255),b
  8632  003ED6  6BA1               	clrf	(??_rutinaEscape+1)& (0+255),b
  8633                           
  8634                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8635                           ; Switch size 1, requested type "simple"
  8636                           ; Number of cases is 1, Range of values is 0 to 0
  8637                           ; switch strategies available:
  8638                           ; Name         Instructions Cycles
  8639                           ; simple_byte            4     3 (average)
  8640                           ;	Chosen strategy is simple_byte
  8641  003ED8  51A1               	movf	(??_rutinaEscape+1)& (0+255),w,b
  8642  003EDA  0A00               	xorlw	0	; case 0
  8643  003EDC  A4D8               	btfss	status,2,c
  8644  003EDE  0012               	return	
  8645                           
  8646                           ; BSR set to: 0
  8647                           ; Switch size 1, requested type "simple"
  8648                           ; Number of cases is 2, Range of values is 1 to 2
  8649                           ; switch strategies available:
  8650                           ; Name         Instructions Cycles
  8651                           ; simple_byte            7     4 (average)
  8652                           ;	Chosen strategy is simple_byte
  8653  003EE0  51A0               	movf	??_rutinaEscape& (0+255),w,b
  8654  003EE2  0A01               	xorlw	1	; case 1
  8655  003EE4  B4D8               	btfsc	status,2,c
  8656  003EE6  0012               	return	
  8657  003EE8  0A03               	xorlw	3	; case 2
  8658  003EEA  A4D8               	btfss	status,2,c
  8659  003EEC  0012               	return	
  8660  003EEE  D7CD               	goto	l7541
  8661  003EF0                     __end_of_rutinaEscape:
  8662                           	opt callstack 0
  8663                           
  8664 ;; *************** function _frenarMotor *****************
  8665 ;; Defined at:
  8666 ;;		line 45 in file "./../LIBRERIAS/funciones_auto.h"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;		None
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;		None
  8671 ;; Return value:  Size  Location     Type
  8672 ;;                  1    wreg      void 
  8673 ;; Registers used:
  8674 ;;		wreg, status,2
  8675 ;; Tracked objects:
  8676 ;;		On entry : 0/0
  8677 ;;		On exit  : 0/0
  8678 ;;		Unchanged: 0/0
  8679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8684 ;;Total ram usage:        0 bytes
  8685 ;; Hardware stack levels used:    1
  8686 ;; Hardware stack levels required when called:    2
  8687 ;; This function calls:
  8688 ;;		Nothing
  8689 ;; This function is called by:
  8690 ;;		_terminal
  8691 ;;		_rutinaEscape
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           	psect	text36
  8696  0044AE                     __ptext36:
  8697                           	opt callstack 0
  8698  0044AE                     _frenarMotor:
  8699                           	opt callstack 27
  8700                           
  8701                           ;./../LIBRERIAS/funciones_auto.h: 46:     CCP7CONbits.DC7B = 0b00;
  8702                           
  8703                           ;incstack = 0
  8704  0044AE  0ECF               	movlw	-49
  8705  0044B0  010F               	movlb	15	; () banked
  8706  0044B2  1709               	andwf	9,f,b	;volatile
  8707                           
  8708                           ;./../LIBRERIAS/funciones_auto.h: 47:     CCPR7L = 0x00;
  8709  0044B4  0E00               	movlw	0
  8710  0044B6  6F0A               	movwf	10,b	;volatile
  8711                           
  8712                           ;./../LIBRERIAS/funciones_auto.h: 48:     motor = 0;
  8713  0044B8  0E00               	movlw	0
  8714  0044BA  6E43               	movwf	_motor,c
  8715                           
  8716                           ; BSR set to: 15
  8717  0044BC  0012               	return		;funcret
  8718  0044BE                     __end_of_frenarMotor:
  8719                           	opt callstack 0
  8720                           
  8721 ;; *************** function _fijarVelocidad *****************
  8722 ;; Defined at:
  8723 ;;		line 29 in file "./../LIBRERIAS/funciones_auto.h"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;  speed           1    wreg     unsigned char 
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;  speed           1   63[BANK0 ] unsigned char 
  8728 ;;  DC              4   55[BANK0 ] float 
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  1    wreg      void 
  8731 ;; Registers used:
  8732 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8739 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8741 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8742 ;;Total ram usage:        9 bytes
  8743 ;; Hardware stack levels used:    1
  8744 ;; Hardware stack levels required when called:    3
  8745 ;; This function calls:
  8746 ;;		___fladd
  8747 ;;		___flmul
  8748 ;;		___fltol
  8749 ;;		___xxtofl
  8750 ;; This function is called by:
  8751 ;;		_terminal
  8752 ;;		_rutinaEscape
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           	psect	text37
  8757  003428                     __ptext37:
  8758                           	opt callstack 0
  8759  003428                     _fijarVelocidad:
  8760                           	opt callstack 26
  8761                           
  8762                           ; BSR set to: 15
  8763                           ;incstack = 0
  8764                           ;fijarVelocidad@speed stored from wreg
  8765  003428  0100               	movlb	0	; () banked
  8766  00342A  6F9F               	movwf	fijarVelocidad@speed& (0+255),b
  8767                           
  8768                           ;./../LIBRERIAS/funciones_auto.h: 30:     float DC = 0.006 * speed + 0.6;
  8769  00342C  0EA6               	movlw	166
  8770  00342E  0100               	movlb	0	; () banked
  8771  003430  6F72               	movwf	___flmul@a& (0+255),b
  8772  003432  0E9B               	movlw	155
  8773  003434  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8774  003436  0EC4               	movlw	196
  8775  003438  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8776  00343A  0E3B               	movlw	59
  8777  00343C  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8778  00343E  519F               	movf	fijarVelocidad@speed& (0+255),w,b
  8779  003440  6F60               	movwf	___xxtofl@val& (0+255),b
  8780  003442  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  8781  003444  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  8782  003446  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  8783  003448  0E01               	movlw	1
  8784  00344A  ECD2  F018         	call	___xxtofl
  8785  00344E  C060  F06E         	movff	?___xxtofl,___flmul@b
  8786  003452  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  8787  003456  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  8788  00345A  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  8789  00345E  ECC5  F00F         	call	___flmul	;wreg free
  8790  003462  C06E  F087         	movff	?___flmul,___fladd@b
  8791  003466  C06F  F088         	movff	?___flmul+1,___fladd@b+1
  8792  00346A  C070  F089         	movff	?___flmul+2,___fladd@b+2
  8793  00346E  C071  F08A         	movff	?___flmul+3,___fladd@b+3
  8794  003472  0E9A               	movlw	154
  8795  003474  0100               	movlb	0	; () banked
  8796  003476  6F8B               	movwf	___fladd@a& (0+255),b
  8797  003478  0E99               	movlw	153
  8798  00347A  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  8799  00347C  0E19               	movlw	25
  8800  00347E  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  8801  003480  0E3F               	movlw	63
  8802  003482  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  8803  003484  EC6F  F011         	call	___fladd	;wreg free
  8804  003488  C087  F097         	movff	?___fladd,fijarVelocidad@DC
  8805  00348C  C088  F098         	movff	?___fladd+1,fijarVelocidad@DC+1
  8806  003490  C089  F099         	movff	?___fladd+2,fijarVelocidad@DC+2
  8807  003494  C08A  F09A         	movff	?___fladd+3,fijarVelocidad@DC+3
  8808                           
  8809                           ;./../LIBRERIAS/funciones_auto.h: 31:     velocidad = 4 * DC * 125;
  8810  003498  0E00               	movlw	0
  8811  00349A  0100               	movlb	0	; () banked
  8812  00349C  6F72               	movwf	___flmul@a& (0+255),b
  8813  00349E  0E00               	movlw	0
  8814  0034A0  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8815  0034A2  0E80               	movlw	128
  8816  0034A4  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8817  0034A6  0E40               	movlw	64
  8818  0034A8  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8819  0034AA  C097  F06E         	movff	fijarVelocidad@DC,___flmul@b
  8820  0034AE  C098  F06F         	movff	fijarVelocidad@DC+1,___flmul@b+1
  8821  0034B2  C099  F070         	movff	fijarVelocidad@DC+2,___flmul@b+2
  8822  0034B6  C09A  F071         	movff	fijarVelocidad@DC+3,___flmul@b+3
  8823  0034BA  ECC5  F00F         	call	___flmul	;wreg free
  8824  0034BE  C06E  F09B         	movff	?___flmul,_fijarVelocidad$2262
  8825  0034C2  C06F  F09C         	movff	?___flmul+1,_fijarVelocidad$2262+1
  8826  0034C6  C070  F09D         	movff	?___flmul+2,_fijarVelocidad$2262+2
  8827  0034CA  C071  F09E         	movff	?___flmul+3,_fijarVelocidad$2262+3
  8828                           
  8829                           ;./../LIBRERIAS/funciones_auto.h: 31:     velocidad = 4 * DC * 125;
  8830  0034CE  0E00               	movlw	0
  8831  0034D0  0100               	movlb	0	; () banked
  8832  0034D2  6F72               	movwf	___flmul@a& (0+255),b
  8833  0034D4  0E00               	movlw	0
  8834  0034D6  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8835  0034D8  0EFA               	movlw	250
  8836  0034DA  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8837  0034DC  0E42               	movlw	66
  8838  0034DE  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8839  0034E0  C09B  F06E         	movff	_fijarVelocidad$2262,___flmul@b
  8840  0034E4  C09C  F06F         	movff	_fijarVelocidad$2262+1,___flmul@b+1
  8841  0034E8  C09D  F070         	movff	_fijarVelocidad$2262+2,___flmul@b+2
  8842  0034EC  C09E  F071         	movff	_fijarVelocidad$2262+3,___flmul@b+3
  8843  0034F0  ECC5  F00F         	call	___flmul	;wreg free
  8844  0034F4  C06E  F087         	movff	?___flmul,___fltol@f1
  8845  0034F8  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  8846  0034FC  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  8847  003500  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  8848  003504  ECC1  F01B         	call	___fltol	;wreg free
  8849  003508  C087  F050         	movff	?___fltol,_velocidad
  8850  00350C  C088  F051         	movff	?___fltol+1,_velocidad+1
  8851  003510  0012               	return		;funcret
  8852  003512                     __end_of_fijarVelocidad:
  8853                           	opt callstack 0
  8854                           
  8855 ;; *************** function ___xxtofl *****************
  8856 ;; Defined at:
  8857 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8858 ;; Parameters:    Size  Location     Type
  8859 ;;  sign            1    wreg     unsigned char 
  8860 ;;  val             4    0[BANK0 ] long 
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;  sign            1    8[BANK0 ] unsigned char 
  8863 ;;  arg             4   10[BANK0 ] unsigned long 
  8864 ;;  exp             1    9[BANK0 ] unsigned char 
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  4    0[BANK0 ] unsigned char 
  8867 ;; Registers used:
  8868 ;;		wreg, status,2, status,0
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8874 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8875 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8876 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8877 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8878 ;;Total ram usage:       14 bytes
  8879 ;; Hardware stack levels used:    1
  8880 ;; Hardware stack levels required when called:    2
  8881 ;; This function calls:
  8882 ;;		Nothing
  8883 ;; This function is called by:
  8884 ;;		_fijarVelocidad
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text38
  8889  0031A4                     __ptext38:
  8890                           	opt callstack 0
  8891  0031A4                     ___xxtofl:
  8892                           	opt callstack 26
  8893                           
  8894                           ;incstack = 0
  8895                           ;___xxtofl@sign stored from wreg
  8896  0031A4  0100               	movlb	0	; () banked
  8897  0031A6  6F68               	movwf	___xxtofl@sign& (0+255),b
  8898  0031A8  0100               	movlb	0	; () banked
  8899  0031AA  5168               	movf	___xxtofl@sign& (0+255),w,b
  8900  0031AC  A4D8               	btfss	status,2,c
  8901                           
  8902                           ; BSR set to: 0
  8903  0031AE  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8904  0031B0  D01A               	goto	l1174
  8905                           
  8906                           ; BSR set to: 0
  8907  0031B2  C060  F064         	movff	___xxtofl@val,??___xxtofl
  8908  0031B6  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  8909  0031BA  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  8910  0031BE  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  8911  0031C2  1F64               	comf	??___xxtofl& (0+255),f,b
  8912  0031C4  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  8913  0031C6  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  8914  0031C8  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  8915  0031CA  2B64               	incf	??___xxtofl& (0+255),f,b
  8916  0031CC  0E00               	movlw	0
  8917  0031CE  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  8918  0031D0  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  8919  0031D2  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  8920  0031D4  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  8921  0031D8  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  8922  0031DC  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  8923  0031E0  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  8924  0031E4  D008               	goto	l7291
  8925  0031E6                     l1174:
  8926                           
  8927                           ; BSR set to: 0
  8928  0031E6  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  8929  0031EA  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8930  0031EE  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8931  0031F2  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8932  0031F6                     l7291:
  8933                           
  8934                           ; BSR set to: 0
  8935  0031F6  5160               	movf	___xxtofl@val& (0+255),w,b
  8936  0031F8  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  8937  0031FA  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  8938  0031FC  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  8939  0031FE  A4D8               	btfss	status,2,c
  8940  003200  D009               	goto	l7297
  8941                           
  8942                           ; BSR set to: 0
  8943  003202  0E00               	movlw	0
  8944  003204  6F60               	movwf	?___xxtofl& (0+255),b
  8945  003206  0E00               	movlw	0
  8946  003208  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  8947  00320A  0E00               	movlw	0
  8948  00320C  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  8949  00320E  0E00               	movlw	0
  8950  003210  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  8951  003212  0012               	return	
  8952  003214                     l7297:
  8953                           
  8954                           ; BSR set to: 0
  8955  003214  0E96               	movlw	150
  8956  003216  6F69               	movwf	___xxtofl@exp& (0+255),b
  8957  003218  D006               	goto	l7301
  8958  00321A                     l7299:
  8959                           
  8960                           ; BSR set to: 0
  8961  00321A  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8962  00321C  90D8               	bcf	status,0,c
  8963  00321E  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8964  003220  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8965  003222  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8966  003224  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  8967  003226                     l7301:
  8968                           
  8969                           ; BSR set to: 0
  8970  003226  0E00               	movlw	0
  8971  003228  156A               	andwf	___xxtofl@arg& (0+255),w,b
  8972  00322A  6F64               	movwf	??___xxtofl& (0+255),b
  8973  00322C  0E00               	movlw	0
  8974  00322E  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8975  003230  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  8976  003232  0E00               	movlw	0
  8977  003234  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8978  003236  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  8979  003238  0EFE               	movlw	254
  8980  00323A  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8981  00323C  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  8982  00323E  5164               	movf	??___xxtofl& (0+255),w,b
  8983  003240  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8984  003242  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8985  003244  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8986  003246  B4D8               	btfsc	status,2,c
  8987  003248  D00D               	goto	l1181
  8988  00324A  D7E7               	goto	l7299
  8989  00324C                     l7303:
  8990                           
  8991                           ; BSR set to: 0
  8992  00324C  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8993                           
  8994                           ; BSR set to: 0
  8995  00324E  0E01               	movlw	1
  8996  003250  276A               	addwf	___xxtofl@arg& (0+255),f,b
  8997  003252  0E00               	movlw	0
  8998  003254  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8999  003256  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9000  003258  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9001                           
  9002                           ; BSR set to: 0
  9003  00325A  90D8               	bcf	status,0,c
  9004  00325C  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9005  00325E  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9006  003260  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9007  003262  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  9008  003264                     l1181:
  9009                           
  9010                           ; BSR set to: 0
  9011  003264  0E00               	movlw	0
  9012  003266  156A               	andwf	___xxtofl@arg& (0+255),w,b
  9013  003268  6F64               	movwf	??___xxtofl& (0+255),b
  9014  00326A  0E00               	movlw	0
  9015  00326C  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9016  00326E  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  9017  003270  0E00               	movlw	0
  9018  003272  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9019  003274  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  9020  003276  0EFF               	movlw	255
  9021  003278  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9022  00327A  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  9023  00327C  5164               	movf	??___xxtofl& (0+255),w,b
  9024  00327E  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9025  003280  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9026  003282  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9027  003284  B4D8               	btfsc	status,2,c
  9028  003286  D007               	goto	l7311
  9029  003288  D7E1               	goto	l7303
  9030  00328A                     l7309:
  9031                           
  9032                           ; BSR set to: 0
  9033  00328A  0769               	decf	___xxtofl@exp& (0+255),f,b
  9034  00328C  90D8               	bcf	status,0,c
  9035  00328E  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  9036  003290  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9037  003292  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9038  003294  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9039  003296                     l7311:
  9040                           
  9041                           ; BSR set to: 0
  9042  003296  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9043  003298  D003               	goto	u9460
  9044                           
  9045                           ; BSR set to: 0
  9046  00329A  0E02               	movlw	2
  9047  00329C  6169               	cpfslt	___xxtofl@exp& (0+255),b
  9048  00329E  D7F5               	goto	l7309
  9049  0032A0                     u9460:
  9050                           
  9051                           ; BSR set to: 0
  9052  0032A0  A169               	btfss	___xxtofl@exp& (0+255),0,b
  9053                           
  9054                           ; BSR set to: 0
  9055  0032A2  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  9056                           
  9057                           ; BSR set to: 0
  9058  0032A4  90D8               	bcf	status,0,c
  9059  0032A6  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  9060                           
  9061                           ; BSR set to: 0
  9062  0032A8  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  9063  0032AC  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  9064  0032AE  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  9065  0032B0  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  9066  0032B2  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  9067  0032B6  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  9068  0032B8  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  9069  0032BA  6B64               	clrf	??___xxtofl& (0+255),b
  9070  0032BC  5164               	movf	??___xxtofl& (0+255),w,b
  9071  0032BE  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  9072  0032C0  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  9073  0032C2  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  9074  0032C4  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  9075  0032C6  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  9076  0032C8  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  9077  0032CA  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  9078                           
  9079                           ; BSR set to: 0
  9080  0032CC  5168               	movf	___xxtofl@sign& (0+255),w,b
  9081  0032CE  A4D8               	btfss	status,2,c
  9082                           
  9083                           ; BSR set to: 0
  9084  0032D0  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9085  0032D2  D001               	goto	l7327
  9086                           
  9087                           ; BSR set to: 0
  9088  0032D4  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  9089  0032D6                     l7327:
  9090                           
  9091                           ; BSR set to: 0
  9092  0032D6  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  9093  0032DA  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  9094  0032DE  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  9095  0032E2  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  9096                           
  9097                           ; BSR set to: 0
  9098  0032E6  0012               	return		;funcret
  9099  0032E8                     __end_of___xxtofl:
  9100                           	opt callstack 0
  9101                           
  9102 ;; *************** function ___fltol *****************
  9103 ;; Defined at:
  9104 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  f1              4   39[BANK0 ] unsigned char 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;  exp1            1   48[BANK0 ] unsigned char 
  9109 ;;  sign1           1   47[BANK0 ] unsigned char 
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  4   39[BANK0 ] long 
  9112 ;; Registers used:
  9113 ;;		wreg, status,2, status,0
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9119 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9120 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9121 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9122 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9123 ;;Total ram usage:       10 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; Hardware stack levels required when called:    2
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_fijarVelocidad
  9130 ;;		_efgtoa
  9131 ;; This function uses a non-reentrant model
  9132 ;;
  9133                           
  9134                           	psect	text39
  9135  003782                     __ptext39:
  9136                           	opt callstack 0
  9137  003782                     ___fltol:
  9138                           	opt callstack 23
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;incstack = 0
  9142  003782  0100               	movlb	0	; () banked
  9143  003784  3589               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9144  003786  358A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9145  003788  6F90               	movwf	___fltol@exp1& (0+255),b
  9146  00378A  5190               	movf	___fltol@exp1& (0+255),w,b
  9147  00378C  A4D8               	btfss	status,2,c
  9148  00378E  D009               	goto	l6593
  9149  003790                     u8250:
  9150                           
  9151                           ; BSR set to: 0
  9152  003790  0E00               	movlw	0
  9153  003792  6F87               	movwf	?___fltol& (0+255),b
  9154  003794  0E00               	movlw	0
  9155  003796  6F88               	movwf	(?___fltol+1)& (0+255),b
  9156  003798  0E00               	movlw	0
  9157  00379A  6F89               	movwf	(?___fltol+2)& (0+255),b
  9158  00379C  0E00               	movlw	0
  9159  00379E  6F8A               	movwf	(?___fltol+3)& (0+255),b
  9160  0037A0  0012               	return	
  9161  0037A2                     l6593:
  9162                           
  9163                           ; BSR set to: 0
  9164  0037A2  C087  F08B         	movff	___fltol@f1,??___fltol
  9165  0037A6  C088  F08C         	movff	___fltol@f1+1,??___fltol+1
  9166  0037AA  C089  F08D         	movff	___fltol@f1+2,??___fltol+2
  9167  0037AE  C08A  F08E         	movff	___fltol@f1+3,??___fltol+3
  9168  0037B2  0E20               	movlw	32
  9169  0037B4  D005               	goto	u8260
  9170  0037B6                     u8265:
  9171  0037B6  90D8               	bcf	status,0,c
  9172  0037B8  338E               	rrcf	(??___fltol+3)& (0+255),f,b
  9173  0037BA  338D               	rrcf	(??___fltol+2)& (0+255),f,b
  9174  0037BC  338C               	rrcf	(??___fltol+1)& (0+255),f,b
  9175  0037BE  338B               	rrcf	??___fltol& (0+255),f,b
  9176  0037C0                     u8260:
  9177  0037C0  2EE8               	decfsz	wreg,f,c
  9178  0037C2  D7F9               	goto	u8265
  9179  0037C4  518B               	movf	??___fltol& (0+255),w,b
  9180  0037C6  6F8F               	movwf	___fltol@sign1& (0+255),b
  9181                           
  9182                           ; BSR set to: 0
  9183  0037C8  8F89               	bsf	(___fltol@f1+2)& (0+255),7,b
  9184                           
  9185                           ; BSR set to: 0
  9186  0037CA  0EFF               	movlw	255
  9187  0037CC  1787               	andwf	___fltol@f1& (0+255),f,b
  9188  0037CE  0EFF               	movlw	255
  9189  0037D0  1788               	andwf	(___fltol@f1+1)& (0+255),f,b
  9190  0037D2  0EFF               	movlw	255
  9191  0037D4  1789               	andwf	(___fltol@f1+2)& (0+255),f,b
  9192  0037D6  0E00               	movlw	0
  9193  0037D8  178A               	andwf	(___fltol@f1+3)& (0+255),f,b
  9194                           
  9195                           ; BSR set to: 0
  9196  0037DA  0E96               	movlw	150
  9197  0037DC  5F90               	subwf	___fltol@exp1& (0+255),f,b
  9198                           
  9199                           ; BSR set to: 0
  9200  0037DE  AF90               	btfss	___fltol@exp1& (0+255),7,b
  9201  0037E0  D00D               	goto	l6613
  9202                           
  9203                           ; BSR set to: 0
  9204  0037E2  5190               	movf	___fltol@exp1& (0+255),w,b
  9205  0037E4  0A80               	xorlw	128
  9206  0037E6  0F97               	addlw	151
  9207  0037E8  A0D8               	btfss	status,0,c
  9208  0037EA  D7D2               	goto	u8250
  9209  0037EC                     l6609:
  9210                           
  9211                           ; BSR set to: 0
  9212  0037EC  90D8               	bcf	status,0,c
  9213  0037EE  338A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9214  0037F0  3389               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9215  0037F2  3388               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9216  0037F4  3387               	rrcf	___fltol@f1& (0+255),f,b
  9217                           
  9218                           ; BSR set to: 0
  9219  0037F6  3F90               	incfsz	___fltol@exp1& (0+255),f,b
  9220  0037F8  D7F9               	goto	l6609
  9221  0037FA  D00D               	goto	u8300
  9222  0037FC                     l6613:
  9223                           
  9224                           ; BSR set to: 0
  9225  0037FC  0E1F               	movlw	31
  9226  0037FE  6590               	cpfsgt	___fltol@exp1& (0+255),b
  9227  003800  D007               	goto	l6621
  9228  003802  D7C6               	goto	u8250
  9229  003804                     l6619:
  9230                           
  9231                           ; BSR set to: 0
  9232  003804  90D8               	bcf	status,0,c
  9233  003806  3787               	rlcf	___fltol@f1& (0+255),f,b
  9234  003808  3788               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9235  00380A  3789               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9236  00380C  378A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9237  00380E  0790               	decf	___fltol@exp1& (0+255),f,b
  9238  003810                     l6621:
  9239                           
  9240                           ; BSR set to: 0
  9241  003810  5190               	movf	___fltol@exp1& (0+255),w,b
  9242  003812  A4D8               	btfss	status,2,c
  9243  003814  D7F7               	goto	l6619
  9244  003816                     u8300:
  9245                           
  9246                           ; BSR set to: 0
  9247  003816  518F               	movf	___fltol@sign1& (0+255),w,b
  9248  003818  B4D8               	btfsc	status,2,c
  9249  00381A  D008               	goto	l6627
  9250                           
  9251                           ; BSR set to: 0
  9252  00381C  1F8A               	comf	(___fltol@f1+3)& (0+255),f,b
  9253  00381E  1F89               	comf	(___fltol@f1+2)& (0+255),f,b
  9254  003820  1F88               	comf	(___fltol@f1+1)& (0+255),f,b
  9255  003822  6D87               	negf	___fltol@f1& (0+255),b
  9256  003824  0E00               	movlw	0
  9257  003826  2388               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9258  003828  2389               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9259  00382A  238A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9260  00382C                     l6627:
  9261                           
  9262                           ; BSR set to: 0
  9263  00382C  C087  F087         	movff	___fltol@f1,?___fltol
  9264  003830  C088  F088         	movff	___fltol@f1+1,?___fltol+1
  9265  003834  C089  F089         	movff	___fltol@f1+2,?___fltol+2
  9266  003838  C08A  F08A         	movff	___fltol@f1+3,?___fltol+3
  9267                           
  9268                           ; BSR set to: 0
  9269  00383C  0012               	return		;funcret
  9270  00383E                     __end_of___fltol:
  9271                           	opt callstack 0
  9272                           
  9273 ;; *************** function ___flmul *****************
  9274 ;; Defined at:
  9275 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;  b               4   14[BANK0 ] long 
  9278 ;;  a               4   18[BANK0 ] long 
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;  prod            4   33[BANK0 ] struct .
  9281 ;;  grs             4   28[BANK0 ] unsigned long 
  9282 ;;  temp            2   37[BANK0 ] struct .
  9283 ;;  bexp            1   32[BANK0 ] unsigned char 
  9284 ;;  aexp            1   27[BANK0 ] unsigned char 
  9285 ;;  sign            1   26[BANK0 ] unsigned char 
  9286 ;; Return value:  Size  Location     Type
  9287 ;;                  4   14[BANK0 ] unsigned char 
  9288 ;; Registers used:
  9289 ;;		wreg, status,2, status,0, prodl, prodh
  9290 ;; Tracked objects:
  9291 ;;		On entry : 0/0
  9292 ;;		On exit  : 0/0
  9293 ;;		Unchanged: 0/0
  9294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9295 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9296 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9297 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9298 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9299 ;;Total ram usage:       25 bytes
  9300 ;; Hardware stack levels used:    1
  9301 ;; Hardware stack levels required when called:    2
  9302 ;; This function calls:
  9303 ;;		Nothing
  9304 ;; This function is called by:
  9305 ;;		_fijarVelocidad
  9306 ;;		_efgtoa
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text40
  9311  001F8A                     __ptext40:
  9312                           	opt callstack 0
  9313  001F8A                     ___flmul:
  9314                           	opt callstack 23
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;incstack = 0
  9318  001F8A  0100               	movlb	0	; () banked
  9319  001F8C  5171               	movf	(___flmul@b+3)& (0+255),w,b
  9320  001F8E  0B80               	andlw	128
  9321  001F90  6F7A               	movwf	___flmul@sign& (0+255),b
  9322  001F92  5171               	movf	(___flmul@b+3)& (0+255),w,b
  9323  001F94  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  9324  001F96  6F80               	movwf	___flmul@bexp& (0+255),b
  9325                           
  9326                           ; BSR set to: 0
  9327  001F98  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
  9328                           
  9329                           ; BSR set to: 0
  9330  001F9A  8180               	bsf	___flmul@bexp& (0+255),0,b
  9331                           
  9332                           ; BSR set to: 0
  9333  001F9C  5180               	movf	___flmul@bexp& (0+255),w,b
  9334  001F9E  B4D8               	btfsc	status,2,c
  9335  001FA0  D00D               	goto	l6339
  9336                           
  9337                           ; BSR set to: 0
  9338  001FA2  2980               	incf	___flmul@bexp& (0+255),w,b
  9339  001FA4  A4D8               	btfss	status,2,c
  9340  001FA6  D008               	goto	l6337
  9341                           
  9342                           ; BSR set to: 0
  9343  001FA8  0E00               	movlw	0
  9344  001FAA  6F6E               	movwf	___flmul@b& (0+255),b
  9345  001FAC  0E00               	movlw	0
  9346  001FAE  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  9347  001FB0  0E00               	movlw	0
  9348  001FB2  6F70               	movwf	(___flmul@b+2)& (0+255),b
  9349  001FB4  0E00               	movlw	0
  9350  001FB6  6F71               	movwf	(___flmul@b+3)& (0+255),b
  9351  001FB8                     l6337:
  9352                           
  9353                           ; BSR set to: 0
  9354  001FB8  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  9355  001FBA  D008               	goto	l6341
  9356  001FBC                     l6339:
  9357                           
  9358                           ; BSR set to: 0
  9359  001FBC  0E00               	movlw	0
  9360  001FBE  6F6E               	movwf	___flmul@b& (0+255),b
  9361  001FC0  0E00               	movlw	0
  9362  001FC2  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  9363  001FC4  0E00               	movlw	0
  9364  001FC6  6F70               	movwf	(___flmul@b+2)& (0+255),b
  9365  001FC8  0E00               	movlw	0
  9366  001FCA  6F71               	movwf	(___flmul@b+3)& (0+255),b
  9367  001FCC                     l6341:
  9368                           
  9369                           ; BSR set to: 0
  9370  001FCC  5175               	movf	(___flmul@a+3)& (0+255),w,b
  9371  001FCE  0B80               	andlw	128
  9372  001FD0  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  9373                           
  9374                           ; BSR set to: 0
  9375  001FD2  5175               	movf	(___flmul@a+3)& (0+255),w,b
  9376  001FD4  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  9377  001FD6  6F7B               	movwf	___flmul@aexp& (0+255),b
  9378                           
  9379                           ; BSR set to: 0
  9380  001FD8  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
  9381                           
  9382                           ; BSR set to: 0
  9383  001FDA  817B               	bsf	___flmul@aexp& (0+255),0,b
  9384                           
  9385                           ; BSR set to: 0
  9386  001FDC  517B               	movf	___flmul@aexp& (0+255),w,b
  9387  001FDE  B4D8               	btfsc	status,2,c
  9388  001FE0  D00D               	goto	l6357
  9389                           
  9390                           ; BSR set to: 0
  9391  001FE2  297B               	incf	___flmul@aexp& (0+255),w,b
  9392  001FE4  A4D8               	btfss	status,2,c
  9393  001FE6  D008               	goto	l6355
  9394                           
  9395                           ; BSR set to: 0
  9396  001FE8  0E00               	movlw	0
  9397  001FEA  6F72               	movwf	___flmul@a& (0+255),b
  9398  001FEC  0E00               	movlw	0
  9399  001FEE  6F73               	movwf	(___flmul@a+1)& (0+255),b
  9400  001FF0  0E00               	movlw	0
  9401  001FF2  6F74               	movwf	(___flmul@a+2)& (0+255),b
  9402  001FF4  0E00               	movlw	0
  9403  001FF6  6F75               	movwf	(___flmul@a+3)& (0+255),b
  9404  001FF8                     l6355:
  9405                           
  9406                           ; BSR set to: 0
  9407  001FF8  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  9408  001FFA  D008               	goto	l1133
  9409  001FFC                     l6357:
  9410                           
  9411                           ; BSR set to: 0
  9412  001FFC  0E00               	movlw	0
  9413  001FFE  6F72               	movwf	___flmul@a& (0+255),b
  9414  002000  0E00               	movlw	0
  9415  002002  6F73               	movwf	(___flmul@a+1)& (0+255),b
  9416  002004  0E00               	movlw	0
  9417  002006  6F74               	movwf	(___flmul@a+2)& (0+255),b
  9418  002008  0E00               	movlw	0
  9419  00200A  6F75               	movwf	(___flmul@a+3)& (0+255),b
  9420  00200C                     l1133:
  9421                           
  9422                           ; BSR set to: 0
  9423  00200C  517B               	movf	___flmul@aexp& (0+255),w,b
  9424  00200E  B4D8               	btfsc	status,2,c
  9425  002010  D003               	goto	u7920
  9426                           
  9427                           ; BSR set to: 0
  9428  002012  5180               	movf	___flmul@bexp& (0+255),w,b
  9429  002014  A4D8               	btfss	status,2,c
  9430  002016  D009               	goto	l6365
  9431  002018                     u7920:
  9432                           
  9433                           ; BSR set to: 0
  9434  002018  0E00               	movlw	0
  9435  00201A  6F6E               	movwf	?___flmul& (0+255),b
  9436  00201C  0E00               	movlw	0
  9437  00201E  6F6F               	movwf	(?___flmul+1)& (0+255),b
  9438  002020  0E00               	movlw	0
  9439  002022  6F70               	movwf	(?___flmul+2)& (0+255),b
  9440  002024  0E00               	movlw	0
  9441  002026  6F71               	movwf	(?___flmul+3)& (0+255),b
  9442  002028  0012               	return	
  9443  00202A                     l6365:
  9444                           
  9445                           ; BSR set to: 0
  9446  00202A  5174               	movf	(___flmul@a+2)& (0+255),w,b
  9447  00202C  036E               	mulwf	___flmul@b& (0+255),b
  9448  00202E  CFF3 F085          	movff	prodl,___flmul@temp
  9449  002032  CFF4 F086          	movff	prodh,___flmul@temp+1
  9450                           
  9451                           ; BSR set to: 0
  9452  002036  5185               	movf	___flmul@temp& (0+255),w,b
  9453  002038  6F7C               	movwf	___flmul@grs& (0+255),b
  9454  00203A  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
  9455  00203C  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
  9456  00203E  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
  9457                           
  9458                           ; BSR set to: 0
  9459  002040  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9460  002042  6F81               	movwf	___flmul@prod& (0+255),b
  9461  002044  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  9462  002046  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  9463  002048  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  9464  00204A  5173               	movf	(___flmul@a+1)& (0+255),w,b
  9465  00204C  036F               	mulwf	(___flmul@b+1)& (0+255),b
  9466  00204E  CFF3 F085          	movff	prodl,___flmul@temp
  9467  002052  CFF4 F086          	movff	prodh,___flmul@temp+1
  9468                           
  9469                           ; BSR set to: 0
  9470  002056  5185               	movf	___flmul@temp& (0+255),w,b
  9471  002058  277C               	addwf	___flmul@grs& (0+255),f,b
  9472  00205A  0E00               	movlw	0
  9473  00205C  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9474  00205E  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9475  002060  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9476                           
  9477                           ; BSR set to: 0
  9478  002062  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9479  002064  2781               	addwf	___flmul@prod& (0+255),f,b
  9480  002066  0E00               	movlw	0
  9481  002068  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9482  00206A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9483  00206C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9484  00206E  5172               	movf	___flmul@a& (0+255),w,b
  9485  002070  0370               	mulwf	(___flmul@b+2)& (0+255),b
  9486  002072  CFF3 F085          	movff	prodl,___flmul@temp
  9487  002076  CFF4 F086          	movff	prodh,___flmul@temp+1
  9488                           
  9489                           ; BSR set to: 0
  9490  00207A  5185               	movf	___flmul@temp& (0+255),w,b
  9491  00207C  277C               	addwf	___flmul@grs& (0+255),f,b
  9492  00207E  0E00               	movlw	0
  9493  002080  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9494  002082  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9495  002084  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9496                           
  9497                           ; BSR set to: 0
  9498  002086  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9499  002088  2781               	addwf	___flmul@prod& (0+255),f,b
  9500  00208A  0E00               	movlw	0
  9501  00208C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9502  00208E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9503  002090  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9504                           
  9505                           ; BSR set to: 0
  9506  002092  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  9507  002096  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  9508  00209A  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  9509  00209E  6B7C               	clrf	___flmul@grs& (0+255),b
  9510                           
  9511                           ; BSR set to: 0
  9512  0020A0  5172               	movf	___flmul@a& (0+255),w,b
  9513  0020A2  036F               	mulwf	(___flmul@b+1)& (0+255),b
  9514  0020A4  CFF3 F085          	movff	prodl,___flmul@temp
  9515  0020A8  CFF4 F086          	movff	prodh,___flmul@temp+1
  9516                           
  9517                           ; BSR set to: 0
  9518  0020AC  5185               	movf	___flmul@temp& (0+255),w,b
  9519  0020AE  277C               	addwf	___flmul@grs& (0+255),f,b
  9520  0020B0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9521  0020B2  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9522  0020B4  0E00               	movlw	0
  9523  0020B6  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9524  0020B8  0E00               	movlw	0
  9525  0020BA  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9526                           
  9527                           ; BSR set to: 0
  9528  0020BC  5173               	movf	(___flmul@a+1)& (0+255),w,b
  9529  0020BE  036E               	mulwf	___flmul@b& (0+255),b
  9530  0020C0  CFF3 F085          	movff	prodl,___flmul@temp
  9531  0020C4  CFF4 F086          	movff	prodh,___flmul@temp+1
  9532                           
  9533                           ; BSR set to: 0
  9534  0020C8  5185               	movf	___flmul@temp& (0+255),w,b
  9535  0020CA  277C               	addwf	___flmul@grs& (0+255),f,b
  9536  0020CC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9537  0020CE  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9538  0020D0  0E00               	movlw	0
  9539  0020D2  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9540  0020D4  0E00               	movlw	0
  9541  0020D6  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9542                           
  9543                           ; BSR set to: 0
  9544  0020D8  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  9545  0020DC  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  9546  0020E0  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  9547  0020E4  6B7C               	clrf	___flmul@grs& (0+255),b
  9548  0020E6  5172               	movf	___flmul@a& (0+255),w,b
  9549  0020E8  036E               	mulwf	___flmul@b& (0+255),b
  9550  0020EA  CFF3 F085          	movff	prodl,___flmul@temp
  9551  0020EE  CFF4 F086          	movff	prodh,___flmul@temp+1
  9552                           
  9553                           ; BSR set to: 0
  9554  0020F2  5185               	movf	___flmul@temp& (0+255),w,b
  9555  0020F4  277C               	addwf	___flmul@grs& (0+255),f,b
  9556  0020F6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9557  0020F8  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9558  0020FA  0E00               	movlw	0
  9559  0020FC  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9560  0020FE  0E00               	movlw	0
  9561  002100  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9562                           
  9563                           ; BSR set to: 0
  9564  002102  5174               	movf	(___flmul@a+2)& (0+255),w,b
  9565  002104  036F               	mulwf	(___flmul@b+1)& (0+255),b
  9566  002106  CFF3 F085          	movff	prodl,___flmul@temp
  9567  00210A  CFF4 F086          	movff	prodh,___flmul@temp+1
  9568  00210E  5185               	movf	___flmul@temp& (0+255),w,b
  9569  002110  2781               	addwf	___flmul@prod& (0+255),f,b
  9570  002112  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9571  002114  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9572  002116  0E00               	movlw	0
  9573  002118  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9574  00211A  0E00               	movlw	0
  9575  00211C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9576                           
  9577                           ; BSR set to: 0
  9578  00211E  5173               	movf	(___flmul@a+1)& (0+255),w,b
  9579  002120  0370               	mulwf	(___flmul@b+2)& (0+255),b
  9580  002122  CFF3 F085          	movff	prodl,___flmul@temp
  9581  002126  CFF4 F086          	movff	prodh,___flmul@temp+1
  9582                           
  9583                           ; BSR set to: 0
  9584  00212A  5185               	movf	___flmul@temp& (0+255),w,b
  9585  00212C  2781               	addwf	___flmul@prod& (0+255),f,b
  9586  00212E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9587  002130  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9588  002132  0E00               	movlw	0
  9589  002134  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9590  002136  0E00               	movlw	0
  9591  002138  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9592  00213A  5174               	movf	(___flmul@a+2)& (0+255),w,b
  9593  00213C  0370               	mulwf	(___flmul@b+2)& (0+255),b
  9594  00213E  CFF3 F085          	movff	prodl,___flmul@temp
  9595  002142  CFF4 F086          	movff	prodh,___flmul@temp+1
  9596                           
  9597                           ; BSR set to: 0
  9598  002146  5185               	movf	___flmul@temp& (0+255),w,b
  9599  002148  6F76               	movwf	??___flmul& (0+255),b
  9600  00214A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9601  00214C  6F77               	movwf	(??___flmul+1)& (0+255),b
  9602  00214E  6B78               	clrf	(??___flmul+2)& (0+255),b
  9603  002150  6B79               	clrf	(??___flmul+3)& (0+255),b
  9604  002152  C078  F079         	movff	??___flmul+2,??___flmul+3
  9605  002156  C077  F078         	movff	??___flmul+1,??___flmul+2
  9606  00215A  C076  F077         	movff	??___flmul,??___flmul+1
  9607  00215E  6B76               	clrf	??___flmul& (0+255),b
  9608  002160  5176               	movf	??___flmul& (0+255),w,b
  9609  002162  2781               	addwf	___flmul@prod& (0+255),f,b
  9610  002164  5177               	movf	(??___flmul+1)& (0+255),w,b
  9611  002166  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9612  002168  5178               	movf	(??___flmul+2)& (0+255),w,b
  9613  00216A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9614  00216C  5179               	movf	(??___flmul+3)& (0+255),w,b
  9615  00216E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9616                           
  9617                           ; BSR set to: 0
  9618  002170  C07C  F076         	movff	___flmul@grs,??___flmul
  9619  002174  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
  9620  002178  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
  9621  00217C  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
  9622  002180  0E19               	movlw	25
  9623  002182  D005               	goto	u7930
  9624  002184                     u7935:
  9625  002184  90D8               	bcf	status,0,c
  9626  002186  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  9627  002188  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  9628  00218A  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  9629  00218C  3376               	rrcf	??___flmul& (0+255),f,b
  9630  00218E                     u7930:
  9631  00218E  2EE8               	decfsz	wreg,f,c
  9632  002190  D7F9               	goto	u7935
  9633  002192  5176               	movf	??___flmul& (0+255),w,b
  9634  002194  2781               	addwf	___flmul@prod& (0+255),f,b
  9635  002196  5177               	movf	(??___flmul+1)& (0+255),w,b
  9636  002198  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9637  00219A  5178               	movf	(??___flmul+2)& (0+255),w,b
  9638  00219C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9639  00219E  5179               	movf	(??___flmul+3)& (0+255),w,b
  9640  0021A0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9641                           
  9642                           ; BSR set to: 0
  9643  0021A2  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  9644  0021A6  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  9645  0021AA  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  9646  0021AE  6B7C               	clrf	___flmul@grs& (0+255),b
  9647                           
  9648                           ; BSR set to: 0
  9649  0021B0  517B               	movf	___flmul@aexp& (0+255),w,b
  9650  0021B2  C080  F076         	movff	___flmul@bexp,??___flmul
  9651  0021B6  6B77               	clrf	(??___flmul+1)& (0+255),b
  9652  0021B8  2776               	addwf	??___flmul& (0+255),f,b
  9653  0021BA  0E00               	movlw	0
  9654  0021BC  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  9655  0021BE  0E82               	movlw	130
  9656  0021C0  2576               	addwf	??___flmul& (0+255),w,b
  9657  0021C2  6F85               	movwf	___flmul@temp& (0+255),b
  9658  0021C4  0EFF               	movlw	255
  9659  0021C6  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  9660  0021C8  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  9661  0021CA  D00F               	goto	l6413
  9662  0021CC                     l6407:
  9663                           
  9664                           ; BSR set to: 0
  9665  0021CC  90D8               	bcf	status,0,c
  9666  0021CE  3781               	rlcf	___flmul@prod& (0+255),f,b
  9667  0021D0  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9668  0021D2  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9669  0021D4  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9670                           
  9671                           ; BSR set to: 0
  9672  0021D6  BF7F               	btfsc	(___flmul@grs+3)& (0+255),7,b
  9673                           
  9674                           ; BSR set to: 0
  9675  0021D8  8181               	bsf	___flmul@prod& (0+255),0,b
  9676                           
  9677                           ; BSR set to: 0
  9678  0021DA  90D8               	bcf	status,0,c
  9679  0021DC  377C               	rlcf	___flmul@grs& (0+255),f,b
  9680  0021DE  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9681  0021E0  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9682  0021E2  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9683  0021E4  0785               	decf	___flmul@temp& (0+255),f,b
  9684  0021E6  A0D8               	btfss	status,0,c
  9685  0021E8  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  9686  0021EA                     l6413:
  9687                           
  9688                           ; BSR set to: 0
  9689  0021EA  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  9690  0021EC  D7EF               	goto	l6407
  9691                           
  9692                           ; BSR set to: 0
  9693  0021EE  0E00               	movlw	0
  9694  0021F0  6F7B               	movwf	___flmul@aexp& (0+255),b
  9695                           
  9696                           ; BSR set to: 0
  9697  0021F2  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  9698  0021F4  D017               	goto	l1142
  9699                           
  9700                           ; BSR set to: 0
  9701  0021F6  0EFF               	movlw	255
  9702  0021F8  157C               	andwf	___flmul@grs& (0+255),w,b
  9703  0021FA  6F76               	movwf	??___flmul& (0+255),b
  9704  0021FC  0EFF               	movlw	255
  9705  0021FE  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
  9706  002200  6F77               	movwf	(??___flmul+1)& (0+255),b
  9707  002202  0EFF               	movlw	255
  9708  002204  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
  9709  002206  6F78               	movwf	(??___flmul+2)& (0+255),b
  9710  002208  0E7F               	movlw	127
  9711  00220A  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
  9712  00220C  6F79               	movwf	(??___flmul+3)& (0+255),b
  9713  00220E  5176               	movf	??___flmul& (0+255),w,b
  9714  002210  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  9715  002212  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  9716  002214  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  9717  002216  B4D8               	btfsc	status,2,c
  9718  002218  D003               	goto	l1143
  9719  00221A                     u7970:
  9720                           
  9721                           ; BSR set to: 0
  9722  00221A  0E01               	movlw	1
  9723  00221C  6F7B               	movwf	___flmul@aexp& (0+255),b
  9724  00221E  D002               	goto	l1142
  9725  002220                     l1143:
  9726                           
  9727                           ; BSR set to: 0
  9728  002220  B181               	btfsc	___flmul@prod& (0+255),0,b
  9729  002222  D7FB               	goto	u7970
  9730  002224                     l1142:
  9731                           
  9732                           ; BSR set to: 0
  9733  002224  517B               	movf	___flmul@aexp& (0+255),w,b
  9734  002226  B4D8               	btfsc	status,2,c
  9735  002228  D01F               	goto	l6433
  9736                           
  9737                           ; BSR set to: 0
  9738  00222A  0E01               	movlw	1
  9739  00222C  2781               	addwf	___flmul@prod& (0+255),f,b
  9740  00222E  0E00               	movlw	0
  9741  002230  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9742  002232  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9743  002234  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9744                           
  9745                           ; BSR set to: 0
  9746  002236  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  9747  002238  D017               	goto	l6433
  9748                           
  9749                           ; BSR set to: 0
  9750  00223A  C081  F076         	movff	___flmul@prod,??___flmul
  9751  00223E  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  9752  002242  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  9753  002246  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  9754  00224A  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  9755  00224C  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  9756  00224E  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  9757  002250  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  9758  002252  3376               	rrcf	??___flmul& (0+255),f,b
  9759  002254  C076  F081         	movff	??___flmul,___flmul@prod
  9760  002258  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  9761  00225C  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  9762  002260  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  9763                           
  9764                           ; BSR set to: 0
  9765  002264  4B85               	infsnz	___flmul@temp& (0+255),f,b
  9766  002266  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  9767  002268                     l6433:
  9768                           
  9769                           ; BSR set to: 0
  9770  002268  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9771  00226A  D00D               	goto	l6437
  9772  00226C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9773  00226E  E103               	bnz	u8010
  9774  002270  2985               	incf	___flmul@temp& (0+255),w,b
  9775  002272  A0D8               	btfss	status,0,c
  9776  002274  D008               	goto	l6437
  9777  002276                     u8010:
  9778                           
  9779                           ; BSR set to: 0
  9780  002276  0E00               	movlw	0
  9781  002278  6F81               	movwf	___flmul@prod& (0+255),b
  9782  00227A  0E00               	movlw	0
  9783  00227C  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  9784  00227E  0E80               	movlw	128
  9785  002280  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  9786  002282  0E7F               	movlw	127
  9787  002284  D020               	goto	L16
  9788  002286                     l6437:
  9789                           
  9790                           ; BSR set to: 0
  9791  002286  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9792  002288  D005               	goto	u8020
  9793  00228A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9794  00228C  E10E               	bnz	l1150
  9795  00228E  0585               	decf	___flmul@temp& (0+255),w,b
  9796  002290  B0D8               	btfsc	status,0,c
  9797  002292  D00B               	goto	l1150
  9798  002294                     u8020:
  9799                           
  9800                           ; BSR set to: 0
  9801  002294  0E00               	movlw	0
  9802  002296  6F81               	movwf	___flmul@prod& (0+255),b
  9803  002298  0E00               	movlw	0
  9804  00229A  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  9805  00229C  0E00               	movlw	0
  9806  00229E  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  9807  0022A0  0E00               	movlw	0
  9808  0022A2  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9809  0022A4  0E00               	movlw	0
  9810  0022A6  6F7A               	movwf	___flmul@sign& (0+255),b
  9811  0022A8  D00F               	goto	l6449
  9812  0022AA                     l1150:
  9813                           
  9814                           ; BSR set to: 0
  9815  0022AA  C085  F080         	movff	___flmul@temp,___flmul@bexp
  9816                           
  9817                           ; BSR set to: 0
  9818  0022AE  0EFF               	movlw	255
  9819  0022B0  1781               	andwf	___flmul@prod& (0+255),f,b
  9820  0022B2  0EFF               	movlw	255
  9821  0022B4  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  9822  0022B6  0E7F               	movlw	127
  9823  0022B8  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  9824  0022BA  0E00               	movlw	0
  9825  0022BC  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  9826                           
  9827                           ; BSR set to: 0
  9828  0022BE  B180               	btfsc	___flmul@bexp& (0+255),0,b
  9829                           
  9830                           ; BSR set to: 0
  9831  0022C0  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  9832                           
  9833                           ; BSR set to: 0
  9834  0022C2  90D8               	bcf	status,0,c
  9835  0022C4  3180               	rrcf	___flmul@bexp& (0+255),w,b
  9836  0022C6                     L16:
  9837  0022C6  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9838  0022C8                     l6449:
  9839                           
  9840                           ; BSR set to: 0
  9841  0022C8  517A               	movf	___flmul@sign& (0+255),w,b
  9842  0022CA  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9843                           
  9844                           ; BSR set to: 0
  9845  0022CC  C081  F06E         	movff	___flmul@prod,?___flmul
  9846  0022D0  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  9847  0022D4  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  9848  0022D8  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  9849                           
  9850                           ; BSR set to: 0
  9851  0022DC  0012               	return		;funcret
  9852  0022DE                     __end_of___flmul:
  9853                           	opt callstack 0
  9854                           
  9855 ;; *************** function ___fladd *****************
  9856 ;; Defined at:
  9857 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;  b               4   39[BANK0 ] unsigned char 
  9860 ;;  a               4   43[BANK0 ] unsigned char 
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;  grs             1   54[BANK0 ] unsigned char 
  9863 ;;  bexp            1   53[BANK0 ] unsigned char 
  9864 ;;  aexp            1   52[BANK0 ] unsigned char 
  9865 ;;  signs           1   51[BANK0 ] unsigned char 
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  4   39[BANK0 ] unsigned char 
  9868 ;; Registers used:
  9869 ;;		wreg, status,2, status,0
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9875 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9876 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9877 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9878 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9879 ;;Total ram usage:       16 bytes
  9880 ;; Hardware stack levels used:    1
  9881 ;; Hardware stack levels required when called:    2
  9882 ;; This function calls:
  9883 ;;		Nothing
  9884 ;; This function is called by:
  9885 ;;		_fijarVelocidad
  9886 ;;		_efgtoa
  9887 ;;		___flsub
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891                           	psect	text41
  9892  0022DE                     __ptext41:
  9893                           	opt callstack 0
  9894  0022DE                     ___fladd:
  9895                           	opt callstack 22
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;incstack = 0
  9899  0022DE  0100               	movlb	0	; () banked
  9900  0022E0  518A               	movf	(___fladd@b+3)& (0+255),w,b
  9901  0022E2  0B80               	andlw	128
  9902  0022E4  6F93               	movwf	___fladd@signs& (0+255),b
  9903  0022E6  518A               	movf	(___fladd@b+3)& (0+255),w,b
  9904  0022E8  258A               	addwf	(___fladd@b+3)& (0+255),w,b
  9905  0022EA  6F95               	movwf	___fladd@bexp& (0+255),b
  9906                           
  9907                           ; BSR set to: 0
  9908  0022EC  BF89               	btfsc	(___fladd@b+2)& (0+255),7,b
  9909                           
  9910                           ; BSR set to: 0
  9911  0022EE  8195               	bsf	___fladd@bexp& (0+255),0,b
  9912                           
  9913                           ; BSR set to: 0
  9914  0022F0  5195               	movf	___fladd@bexp& (0+255),w,b
  9915  0022F2  B4D8               	btfsc	status,2,c
  9916  0022F4  D00D               	goto	l5905
  9917                           
  9918                           ; BSR set to: 0
  9919  0022F6  2995               	incf	___fladd@bexp& (0+255),w,b
  9920  0022F8  A4D8               	btfss	status,2,c
  9921  0022FA  D008               	goto	l5901
  9922                           
  9923                           ; BSR set to: 0
  9924  0022FC  0E00               	movlw	0
  9925  0022FE  6F87               	movwf	___fladd@b& (0+255),b
  9926  002300  0E00               	movlw	0
  9927  002302  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9928  002304  0E00               	movlw	0
  9929  002306  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9930  002308  0E00               	movlw	0
  9931  00230A  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9932  00230C                     l5901:
  9933                           
  9934                           ; BSR set to: 0
  9935  00230C  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  9936  00230E  D006               	goto	L17
  9937  002310                     l5905:
  9938                           
  9939                           ; BSR set to: 0
  9940  002310  0E00               	movlw	0
  9941  002312  6F87               	movwf	___fladd@b& (0+255),b
  9942  002314  0E00               	movlw	0
  9943  002316  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9944  002318  0E00               	movlw	0
  9945  00231A  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9946  00231C                     L17:
  9947  00231C  0E00               	movlw	0
  9948  00231E  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9949                           
  9950                           ; BSR set to: 0
  9951  002320  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9952  002322  0B80               	andlw	128
  9953  002324  6F94               	movwf	___fladd@aexp& (0+255),b
  9954                           
  9955                           ; BSR set to: 0
  9956  002326  5193               	movf	___fladd@signs& (0+255),w,b
  9957  002328  1994               	xorwf	___fladd@aexp& (0+255),w,b
  9958  00232A  A4D8               	btfss	status,2,c
  9959                           
  9960                           ; BSR set to: 0
  9961  00232C  8D93               	bsf	___fladd@signs& (0+255),6,b
  9962                           
  9963                           ; BSR set to: 0
  9964  00232E  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9965  002330  258E               	addwf	(___fladd@a+3)& (0+255),w,b
  9966  002332  6F94               	movwf	___fladd@aexp& (0+255),b
  9967                           
  9968                           ; BSR set to: 0
  9969  002334  BF8D               	btfsc	(___fladd@a+2)& (0+255),7,b
  9970                           
  9971                           ; BSR set to: 0
  9972  002336  8194               	bsf	___fladd@aexp& (0+255),0,b
  9973                           
  9974                           ; BSR set to: 0
  9975  002338  5194               	movf	___fladd@aexp& (0+255),w,b
  9976  00233A  B4D8               	btfsc	status,2,c
  9977  00233C  D00D               	goto	l5929
  9978                           
  9979                           ; BSR set to: 0
  9980  00233E  2994               	incf	___fladd@aexp& (0+255),w,b
  9981  002340  A4D8               	btfss	status,2,c
  9982  002342  D008               	goto	l5925
  9983                           
  9984                           ; BSR set to: 0
  9985  002344  0E00               	movlw	0
  9986  002346  6F8B               	movwf	___fladd@a& (0+255),b
  9987  002348  0E00               	movlw	0
  9988  00234A  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  9989  00234C  0E00               	movlw	0
  9990  00234E  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  9991  002350  0E00               	movlw	0
  9992  002352  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  9993  002354                     l5925:
  9994                           
  9995                           ; BSR set to: 0
  9996  002354  8F8D               	bsf	(___fladd@a+2)& (0+255),7,b
  9997  002356  D006               	goto	L18
  9998  002358                     l5929:
  9999                           
 10000                           ; BSR set to: 0
 10001  002358  0E00               	movlw	0
 10002  00235A  6F8B               	movwf	___fladd@a& (0+255),b
 10003  00235C  0E00               	movlw	0
 10004  00235E  6F8C               	movwf	(___fladd@a+1)& (0+255),b
 10005  002360  0E00               	movlw	0
 10006  002362  6F8D               	movwf	(___fladd@a+2)& (0+255),b
 10007  002364                     L18:
 10008  002364  0E00               	movlw	0
 10009  002366  6F8E               	movwf	(___fladd@a+3)& (0+255),b
 10010                           
 10011                           ; BSR set to: 0
 10012  002368  5195               	movf	___fladd@bexp& (0+255),w,b
 10013  00236A  5D94               	subwf	___fladd@aexp& (0+255),w,b
 10014  00236C  B0D8               	btfsc	status,0,c
 10015  00236E  D022               	goto	l5967
 10016                           
 10017                           ; BSR set to: 0
 10018  002370  AD93               	btfss	___fladd@signs& (0+255),6,b
 10019  002372  D002               	goto	l5937
 10020                           
 10021                           ; BSR set to: 0
 10022  002374  0E80               	movlw	128
 10023  002376  1B93               	xorwf	___fladd@signs& (0+255),f,b
 10024  002378                     l5937:
 10025                           
 10026                           ; BSR set to: 0
 10027  002378  C095  F096         	movff	___fladd@bexp,___fladd@grs
 10028                           
 10029                           ; BSR set to: 0
 10030  00237C  C094  F095         	movff	___fladd@aexp,___fladd@bexp
 10031                           
 10032                           ; BSR set to: 0
 10033  002380  C096  F094         	movff	___fladd@grs,___fladd@aexp
 10034                           
 10035                           ; BSR set to: 0
 10036  002384  C087  F096         	movff	___fladd@b,___fladd@grs
 10037                           
 10038                           ; BSR set to: 0
 10039  002388  C08B  F087         	movff	___fladd@a,___fladd@b
 10040                           
 10041                           ; BSR set to: 0
 10042  00238C  C096  F08B         	movff	___fladd@grs,___fladd@a
 10043                           
 10044                           ; BSR set to: 0
 10045  002390  C088  F096         	movff	___fladd@b+1,___fladd@grs
 10046                           
 10047                           ; BSR set to: 0
 10048  002394  C08C  F088         	movff	___fladd@a+1,___fladd@b+1
 10049                           
 10050                           ; BSR set to: 0
 10051  002398  C096  F08C         	movff	___fladd@grs,___fladd@a+1
 10052                           
 10053                           ; BSR set to: 0
 10054  00239C  C089  F096         	movff	___fladd@b+2,___fladd@grs
 10055                           
 10056                           ; BSR set to: 0
 10057  0023A0  C08D  F089         	movff	___fladd@a+2,___fladd@b+2
 10058                           
 10059                           ; BSR set to: 0
 10060  0023A4  C096  F08D         	movff	___fladd@grs,___fladd@a+2
 10061                           
 10062                           ; BSR set to: 0
 10063  0023A8  C08A  F096         	movff	___fladd@b+3,___fladd@grs
 10064                           
 10065                           ; BSR set to: 0
 10066  0023AC  C08E  F08A         	movff	___fladd@a+3,___fladd@b+3
 10067                           
 10068                           ; BSR set to: 0
 10069  0023B0  C096  F08E         	movff	___fladd@grs,___fladd@a+3
 10070  0023B4                     l5967:
 10071                           
 10072                           ; BSR set to: 0
 10073  0023B4  0E00               	movlw	0
 10074  0023B6  6F96               	movwf	___fladd@grs& (0+255),b
 10075                           
 10076                           ; BSR set to: 0
 10077  0023B8  5195               	movf	___fladd@bexp& (0+255),w,b
 10078  0023BA  C094  F08F         	movff	___fladd@aexp,??___fladd
 10079  0023BE  6B90               	clrf	(??___fladd+1)& (0+255),b
 10080  0023C0  5F8F               	subwf	??___fladd& (0+255),f,b
 10081  0023C2  0E00               	movlw	0
 10082  0023C4  5B90               	subwfb	(??___fladd+1)& (0+255),f,b
 10083  0023C6  BF90               	btfsc	(??___fladd+1)& (0+255),7,b
 10084  0023C8  D02C               	goto	l1048
 10085  0023CA  5190               	movf	(??___fladd+1)& (0+255),w,b
 10086  0023CC  E104               	bnz	u7040
 10087  0023CE  0E1A               	movlw	26
 10088  0023D0  5D8F               	subwf	??___fladd& (0+255),w,b
 10089  0023D2  A0D8               	btfss	status,0,c
 10090  0023D4  D026               	goto	l1048
 10091  0023D6                     u7040:
 10092                           
 10093                           ; BSR set to: 0
 10094  0023D6  5187               	movf	___fladd@b& (0+255),w,b
 10095  0023D8  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
 10096  0023DA  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
 10097  0023DC  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
 10098  0023DE  B4D8               	btfsc	status,2,c
 10099  0023E0  D002               	goto	u7050
 10100  0023E2  0E01               	movlw	1
 10101  0023E4  D001               	goto	u7060
 10102  0023E6                     u7050:
 10103  0023E6  0E00               	movlw	0
 10104  0023E8                     u7060:
 10105  0023E8  6F96               	movwf	___fladd@grs& (0+255),b
 10106                           
 10107                           ; BSR set to: 0
 10108  0023EA  0E00               	movlw	0
 10109  0023EC  6F87               	movwf	___fladd@b& (0+255),b
 10110  0023EE  0E00               	movlw	0
 10111  0023F0  6F88               	movwf	(___fladd@b+1)& (0+255),b
 10112  0023F2  0E00               	movlw	0
 10113  0023F4  6F89               	movwf	(___fladd@b+2)& (0+255),b
 10114  0023F6  0E00               	movlw	0
 10115  0023F8  6F8A               	movwf	(___fladd@b+3)& (0+255),b
 10116                           
 10117                           ; BSR set to: 0
 10118  0023FA  C094  F095         	movff	___fladd@aexp,___fladd@bexp
 10119  0023FE  D015               	goto	u7090
 10120  002400                     l1049:
 10121                           
 10122                           ; BSR set to: 0
 10123  002400  A196               	btfss	___fladd@grs& (0+255),0,b
 10124  002402  D005               	goto	l5979
 10125                           
 10126                           ; BSR set to: 0
 10127  002404  90D8               	bcf	status,0,c
 10128  002406  3196               	rrcf	___fladd@grs& (0+255),w,b
 10129  002408  0901               	iorlw	1
 10130  00240A  6F96               	movwf	___fladd@grs& (0+255),b
 10131  00240C  D002               	goto	l5981
 10132  00240E                     l5979:
 10133                           
 10134                           ; BSR set to: 0
 10135  00240E  90D8               	bcf	status,0,c
 10136  002410  3396               	rrcf	___fladd@grs& (0+255),f,b
 10137  002412                     l5981:
 10138                           
 10139                           ; BSR set to: 0
 10140  002412  B187               	btfsc	___fladd@b& (0+255),0,b
 10141                           
 10142                           ; BSR set to: 0
 10143  002414  8F96               	bsf	___fladd@grs& (0+255),7,b
 10144                           
 10145                           ; BSR set to: 0
 10146  002416  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
 10147  002418  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
 10148  00241A  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
 10149  00241C  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
 10150  00241E  3387               	rrcf	___fladd@b& (0+255),f,b
 10151                           
 10152                           ; BSR set to: 0
 10153  002420  2B95               	incf	___fladd@bexp& (0+255),f,b
 10154  002422                     l1048:
 10155                           
 10156                           ; BSR set to: 0
 10157  002422  5194               	movf	___fladd@aexp& (0+255),w,b
 10158  002424  5D95               	subwf	___fladd@bexp& (0+255),w,b
 10159  002426  A0D8               	btfss	status,0,c
 10160  002428  D7EB               	goto	l1049
 10161  00242A                     u7090:
 10162                           
 10163                           ; BSR set to: 0
 10164  00242A  BD93               	btfsc	___fladd@signs& (0+255),6,b
 10165  00242C  D028               	goto	l6013
 10166                           
 10167                           ; BSR set to: 0
 10168  00242E  5195               	movf	___fladd@bexp& (0+255),w,b
 10169  002430  A4D8               	btfss	status,2,c
 10170  002432  D009               	goto	l5995
 10171                           
 10172                           ; BSR set to: 0
 10173  002434  0E00               	movlw	0
 10174  002436  6F87               	movwf	?___fladd& (0+255),b
 10175  002438  0E00               	movlw	0
 10176  00243A  6F88               	movwf	(?___fladd+1)& (0+255),b
 10177  00243C  0E00               	movlw	0
 10178  00243E  6F89               	movwf	(?___fladd+2)& (0+255),b
 10179  002440  0E00               	movlw	0
 10180  002442  6F8A               	movwf	(?___fladd+3)& (0+255),b
 10181  002444  0012               	return	
 10182  002446                     l5995:
 10183                           
 10184                           ; BSR set to: 0
 10185  002446  518B               	movf	___fladd@a& (0+255),w,b
 10186  002448  2787               	addwf	___fladd@b& (0+255),f,b
 10187  00244A  518C               	movf	(___fladd@a+1)& (0+255),w,b
 10188  00244C  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
 10189  00244E  518D               	movf	(___fladd@a+2)& (0+255),w,b
 10190  002450  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
 10191  002452  518E               	movf	(___fladd@a+3)& (0+255),w,b
 10192  002454  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
 10193                           
 10194                           ; BSR set to: 0
 10195  002456  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
 10196  002458  D071               	goto	u7220
 10197                           
 10198                           ; BSR set to: 0
 10199  00245A  A196               	btfss	___fladd@grs& (0+255),0,b
 10200  00245C  D005               	goto	l6003
 10201                           
 10202                           ; BSR set to: 0
 10203  00245E  90D8               	bcf	status,0,c
 10204  002460  3196               	rrcf	___fladd@grs& (0+255),w,b
 10205  002462  0901               	iorlw	1
 10206  002464  6F96               	movwf	___fladd@grs& (0+255),b
 10207  002466  D002               	goto	l6005
 10208  002468                     l6003:
 10209                           
 10210                           ; BSR set to: 0
 10211  002468  90D8               	bcf	status,0,c
 10212  00246A  3396               	rrcf	___fladd@grs& (0+255),f,b
 10213  00246C                     l6005:
 10214                           
 10215                           ; BSR set to: 0
 10216  00246C  B187               	btfsc	___fladd@b& (0+255),0,b
 10217                           
 10218                           ; BSR set to: 0
 10219  00246E  8F96               	bsf	___fladd@grs& (0+255),7,b
 10220                           
 10221                           ; BSR set to: 0
 10222  002470  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
 10223  002472  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
 10224  002474  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
 10225  002476  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
 10226  002478  3387               	rrcf	___fladd@b& (0+255),f,b
 10227                           
 10228                           ; BSR set to: 0
 10229  00247A  2B95               	incf	___fladd@bexp& (0+255),f,b
 10230  00247C  D05F               	goto	u7220
 10231  00247E                     l6013:
 10232                           
 10233                           ; BSR set to: 0
 10234  00247E  518B               	movf	___fladd@a& (0+255),w,b
 10235  002480  5D87               	subwf	___fladd@b& (0+255),w,b
 10236  002482  518C               	movf	(___fladd@a+1)& (0+255),w,b
 10237  002484  5988               	subwfb	(___fladd@b+1)& (0+255),w,b
 10238  002486  518D               	movf	(___fladd@a+2)& (0+255),w,b
 10239  002488  5989               	subwfb	(___fladd@b+2)& (0+255),w,b
 10240  00248A  518A               	movf	(___fladd@b+3)& (0+255),w,b
 10241  00248C  0A80               	xorlw	128
 10242  00248E  6F8F               	movwf	??___fladd& (0+255),b
 10243  002490  518E               	movf	(___fladd@a+3)& (0+255),w,b
 10244  002492  0A80               	xorlw	128
 10245  002494  598F               	subwfb	??___fladd& (0+255),w,b
 10246  002496  B0D8               	btfsc	status,0,c
 10247  002498  D025               	goto	l6023
 10248                           
 10249                           ; BSR set to: 0
 10250  00249A  5187               	movf	___fladd@b& (0+255),w,b
 10251  00249C  5D8B               	subwf	___fladd@a& (0+255),w,b
 10252  00249E  6F8F               	movwf	??___fladd& (0+255),b
 10253  0024A0  5188               	movf	(___fladd@b+1)& (0+255),w,b
 10254  0024A2  598C               	subwfb	(___fladd@a+1)& (0+255),w,b
 10255  0024A4  6F90               	movwf	(??___fladd+1)& (0+255),b
 10256  0024A6  5189               	movf	(___fladd@b+2)& (0+255),w,b
 10257  0024A8  598D               	subwfb	(___fladd@a+2)& (0+255),w,b
 10258  0024AA  6F91               	movwf	(??___fladd+2)& (0+255),b
 10259  0024AC  518A               	movf	(___fladd@b+3)& (0+255),w,b
 10260  0024AE  598E               	subwfb	(___fladd@a+3)& (0+255),w,b
 10261  0024B0  6F92               	movwf	(??___fladd+3)& (0+255),b
 10262  0024B2  0EFF               	movlw	255
 10263  0024B4  258F               	addwf	??___fladd& (0+255),w,b
 10264  0024B6  6F87               	movwf	___fladd@b& (0+255),b
 10265  0024B8  0EFF               	movlw	255
 10266  0024BA  2190               	addwfc	(??___fladd+1)& (0+255),w,b
 10267  0024BC  6F88               	movwf	(___fladd@b+1)& (0+255),b
 10268  0024BE  0EFF               	movlw	255
 10269  0024C0  2191               	addwfc	(??___fladd+2)& (0+255),w,b
 10270  0024C2  6F89               	movwf	(___fladd@b+2)& (0+255),b
 10271  0024C4  0EFF               	movlw	255
 10272  0024C6  2192               	addwfc	(??___fladd+3)& (0+255),w,b
 10273  0024C8  6F8A               	movwf	(___fladd@b+3)& (0+255),b
 10274  0024CA  0E80               	movlw	128
 10275  0024CC  1B93               	xorwf	___fladd@signs& (0+255),f,b
 10276                           
 10277                           ; BSR set to: 0
 10278  0024CE  6D96               	negf	___fladd@grs& (0+255),b
 10279                           
 10280                           ; BSR set to: 0
 10281  0024D0  5196               	movf	___fladd@grs& (0+255),w,b
 10282  0024D2  A4D8               	btfss	status,2,c
 10283  0024D4  D00F               	goto	l1064
 10284                           
 10285                           ; BSR set to: 0
 10286  0024D6  0E01               	movlw	1
 10287  0024D8  2787               	addwf	___fladd@b& (0+255),f,b
 10288  0024DA  0E00               	movlw	0
 10289  0024DC  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
 10290  0024DE  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
 10291  0024E0  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
 10292  0024E2  D008               	goto	l1064
 10293  0024E4                     l6023:
 10294                           
 10295                           ; BSR set to: 0
 10296  0024E4  518B               	movf	___fladd@a& (0+255),w,b
 10297  0024E6  5F87               	subwf	___fladd@b& (0+255),f,b
 10298  0024E8  518C               	movf	(___fladd@a+1)& (0+255),w,b
 10299  0024EA  5B88               	subwfb	(___fladd@b+1)& (0+255),f,b
 10300  0024EC  518D               	movf	(___fladd@a+2)& (0+255),w,b
 10301  0024EE  5B89               	subwfb	(___fladd@b+2)& (0+255),f,b
 10302  0024F0  518E               	movf	(___fladd@a+3)& (0+255),w,b
 10303  0024F2  5B8A               	subwfb	(___fladd@b+3)& (0+255),f,b
 10304  0024F4                     l1064:
 10305                           
 10306                           ; BSR set to: 0
 10307  0024F4  5187               	movf	___fladd@b& (0+255),w,b
 10308  0024F6  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
 10309  0024F8  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
 10310  0024FA  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
 10311  0024FC  A4D8               	btfss	status,2,c
 10312  0024FE  D01C               	goto	l6047
 10313                           
 10314                           ; BSR set to: 0
 10315  002500  5196               	movf	___fladd@grs& (0+255),w,b
 10316  002502  A4D8               	btfss	status,2,c
 10317  002504  D019               	goto	l6047
 10318                           
 10319                           ; BSR set to: 0
 10320  002506  0E00               	movlw	0
 10321  002508  6F87               	movwf	?___fladd& (0+255),b
 10322  00250A  0E00               	movlw	0
 10323  00250C  6F88               	movwf	(?___fladd+1)& (0+255),b
 10324  00250E  0E00               	movlw	0
 10325  002510  6F89               	movwf	(?___fladd+2)& (0+255),b
 10326  002512  0E00               	movlw	0
 10327  002514  6F8A               	movwf	(?___fladd+3)& (0+255),b
 10328  002516  0012               	return	
 10329  002518                     l6031:
 10330                           
 10331                           ; BSR set to: 0
 10332  002518  90D8               	bcf	status,0,c
 10333  00251A  3787               	rlcf	___fladd@b& (0+255),f,b
 10334  00251C  3788               	rlcf	(___fladd@b+1)& (0+255),f,b
 10335  00251E  3789               	rlcf	(___fladd@b+2)& (0+255),f,b
 10336  002520  378A               	rlcf	(___fladd@b+3)& (0+255),f,b
 10337                           
 10338                           ; BSR set to: 0
 10339  002522  BF96               	btfsc	___fladd@grs& (0+255),7,b
 10340                           
 10341                           ; BSR set to: 0
 10342  002524  8187               	bsf	___fladd@b& (0+255),0,b
 10343                           
 10344                           ; BSR set to: 0
 10345  002526  A196               	btfss	___fladd@grs& (0+255),0,b
 10346  002528  D002               	goto	l6041
 10347                           
 10348                           ; BSR set to: 0
 10349  00252A  80D8               	bsf	status,0,c
 10350  00252C  D001               	goto	L19
 10351  00252E                     l6041:
 10352                           
 10353                           ; BSR set to: 0
 10354  00252E  90D8               	bcf	status,0,c
 10355  002530                     L19:
 10356  002530  3796               	rlcf	___fladd@grs& (0+255),f,b
 10357                           
 10358                           ; BSR set to: 0
 10359  002532  5195               	movf	___fladd@bexp& (0+255),w,b
 10360  002534  A4D8               	btfss	status,2,c
 10361                           
 10362                           ; BSR set to: 0
 10363  002536  0795               	decf	___fladd@bexp& (0+255),f,b
 10364  002538                     l6047:
 10365                           
 10366                           ; BSR set to: 0
 10367  002538  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
 10368  00253A  D7EE               	goto	l6031
 10369  00253C                     u7220:
 10370                           
 10371                           ; BSR set to: 0
 10372  00253C  0E00               	movlw	0
 10373  00253E  6F94               	movwf	___fladd@aexp& (0+255),b
 10374                           
 10375                           ; BSR set to: 0
 10376  002540  AF96               	btfss	___fladd@grs& (0+255),7,b
 10377  002542  D00B               	goto	l1073
 10378                           
 10379                           ; BSR set to: 0
 10380  002544  C096  F08F         	movff	___fladd@grs,??___fladd
 10381  002548  0E7F               	movlw	127
 10382  00254A  178F               	andwf	??___fladd& (0+255),f,b
 10383  00254C  B4D8               	btfsc	status,2,c
 10384  00254E  D003               	goto	l1074
 10385  002550                     u7240:
 10386                           
 10387                           ; BSR set to: 0
 10388  002550  0E01               	movlw	1
 10389  002552  6F94               	movwf	___fladd@aexp& (0+255),b
 10390  002554  D002               	goto	l1073
 10391  002556                     l1074:
 10392                           
 10393                           ; BSR set to: 0
 10394  002556  B187               	btfsc	___fladd@b& (0+255),0,b
 10395  002558  D7FB               	goto	u7240
 10396  00255A                     l1073:
 10397                           
 10398                           ; BSR set to: 0
 10399  00255A  5194               	movf	___fladd@aexp& (0+255),w,b
 10400  00255C  B4D8               	btfsc	status,2,c
 10401  00255E  D020               	goto	l6067
 10402                           
 10403                           ; BSR set to: 0
 10404  002560  0E01               	movlw	1
 10405  002562  2787               	addwf	___fladd@b& (0+255),f,b
 10406  002564  0E00               	movlw	0
 10407  002566  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
 10408  002568  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
 10409  00256A  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
 10410                           
 10411                           ; BSR set to: 0
 10412  00256C  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
 10413  00256E  D018               	goto	l6067
 10414                           
 10415                           ; BSR set to: 0
 10416  002570  C087  F08F         	movff	___fladd@b,??___fladd
 10417  002574  C088  F090         	movff	___fladd@b+1,??___fladd+1
 10418  002578  C089  F091         	movff	___fladd@b+2,??___fladd+2
 10419  00257C  C08A  F092         	movff	___fladd@b+3,??___fladd+3
 10420  002580  3592               	rlcf	(??___fladd+3)& (0+255),w,b
 10421  002582  3392               	rrcf	(??___fladd+3)& (0+255),f,b
 10422  002584  3391               	rrcf	(??___fladd+2)& (0+255),f,b
 10423  002586  3390               	rrcf	(??___fladd+1)& (0+255),f,b
 10424  002588  338F               	rrcf	??___fladd& (0+255),f,b
 10425  00258A  C08F  F087         	movff	??___fladd,___fladd@b
 10426  00258E  C090  F088         	movff	??___fladd+1,___fladd@b+1
 10427  002592  C091  F089         	movff	??___fladd+2,___fladd@b+2
 10428  002596  C092  F08A         	movff	??___fladd+3,___fladd@b+3
 10429  00259A  2995               	incf	___fladd@bexp& (0+255),w,b
 10430  00259C  A4D8               	btfss	status,2,c
 10431                           
 10432                           ; BSR set to: 0
 10433  00259E  2B95               	incf	___fladd@bexp& (0+255),f,b
 10434  0025A0                     l6067:
 10435                           
 10436                           ; BSR set to: 0
 10437  0025A0  2995               	incf	___fladd@bexp& (0+255),w,b
 10438  0025A2  B4D8               	btfsc	status,2,c
 10439  0025A4  D003               	goto	u7300
 10440                           
 10441                           ; BSR set to: 0
 10442  0025A6  5195               	movf	___fladd@bexp& (0+255),w,b
 10443  0025A8  A4D8               	btfss	status,2,c
 10444  0025AA  D00D               	goto	l6075
 10445  0025AC                     u7300:
 10446                           
 10447                           ; BSR set to: 0
 10448  0025AC  0E00               	movlw	0
 10449  0025AE  6F87               	movwf	___fladd@b& (0+255),b
 10450  0025B0  0E00               	movlw	0
 10451  0025B2  6F88               	movwf	(___fladd@b+1)& (0+255),b
 10452  0025B4  0E00               	movlw	0
 10453  0025B6  6F89               	movwf	(___fladd@b+2)& (0+255),b
 10454  0025B8  0E00               	movlw	0
 10455  0025BA  6F8A               	movwf	(___fladd@b+3)& (0+255),b
 10456  0025BC  5195               	movf	___fladd@bexp& (0+255),w,b
 10457  0025BE  A4D8               	btfss	status,2,c
 10458  0025C0  D002               	goto	l6075
 10459                           
 10460                           ; BSR set to: 0
 10461  0025C2  0E00               	movlw	0
 10462  0025C4  6F93               	movwf	___fladd@signs& (0+255),b
 10463  0025C6                     l6075:
 10464                           
 10465                           ; BSR set to: 0
 10466  0025C6  A195               	btfss	___fladd@bexp& (0+255),0,b
 10467  0025C8  D002               	goto	l6079
 10468                           
 10469                           ; BSR set to: 0
 10470  0025CA  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
 10471  0025CC  D001               	goto	l6081
 10472  0025CE                     l6079:
 10473                           
 10474                           ; BSR set to: 0
 10475  0025CE  9F89               	bcf	(___fladd@b+2)& (0+255),7,b
 10476  0025D0                     l6081:
 10477                           
 10478                           ; BSR set to: 0
 10479  0025D0  90D8               	bcf	status,0,c
 10480  0025D2  3195               	rrcf	___fladd@bexp& (0+255),w,b
 10481  0025D4  6F8A               	movwf	(___fladd@b+3)& (0+255),b
 10482                           
 10483                           ; BSR set to: 0
 10484  0025D6  BF93               	btfsc	___fladd@signs& (0+255),7,b
 10485                           
 10486                           ; BSR set to: 0
 10487  0025D8  8F8A               	bsf	(___fladd@b+3)& (0+255),7,b
 10488                           
 10489                           ; BSR set to: 0
 10490  0025DA  C087  F087         	movff	___fladd@b,?___fladd
 10491  0025DE  C088  F088         	movff	___fladd@b+1,?___fladd+1
 10492  0025E2  C089  F089         	movff	___fladd@b+2,?___fladd+2
 10493  0025E6  C08A  F08A         	movff	___fladd@b+3,?___fladd+3
 10494                           
 10495                           ; BSR set to: 0
 10496  0025EA  0012               	return		;funcret
 10497  0025EC                     __end_of___fladd:
 10498                           	opt callstack 0
 10499                           
 10500 ;; *************** function _enviarRS232 *****************
 10501 ;; Defined at:
 10502 ;;		line 51 in file "./../LIBRERIAS/funciones_auto.h"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;  valores         2    8[BANK0 ] PTR unsigned char 
 10505 ;;		 -> STR_6(49), STR_5(8), STR_3(21), STR_2(20), 
 10506 ;;		 -> terminal@texto(20), main@texto(8), main@text(6), 
 10507 ;; Auto vars:     Size  Location     Type
 10508 ;;  i               1   14[BANK0 ] unsigned char 
 10509 ;;  longitud_tex    2   12[BANK0 ] unsigned int 
 10510 ;; Return value:  Size  Location     Type
 10511 ;;                  1    wreg      void 
 10512 ;; Registers used:
 10513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10514 ;; Tracked objects:
 10515 ;;		On entry : 0/0
 10516 ;;		On exit  : 0/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10519 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10520 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10521 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10522 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10523 ;;Total ram usage:        7 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:    3
 10526 ;; This function calls:
 10527 ;;		_length
 10528 ;; This function is called by:
 10529 ;;		_main
 10530 ;;		_terminal
 10531 ;;		_rutinaEscape
 10532 ;;		_cambiarEstadoEscapeFuego
 10533 ;; This function uses a non-reentrant model
 10534 ;;
 10535                           
 10536                           	psect	text42
 10537  003D98                     __ptext42:
 10538                           	opt callstack 0
 10539  003D98                     _enviarRS232:
 10540                           	opt callstack 26
 10541                           
 10542                           ;./../LIBRERIAS/funciones_auto.h: 52:     unsigned int longitud_texto = length(valores);
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;incstack = 0
 10546  003D98  C068  F060         	movff	enviarRS232@valores,length@text
 10547  003D9C  C069  F061         	movff	enviarRS232@valores+1,length@text+1
 10548  003DA0  EC8E  F01E         	call	_length	;wreg free
 10549  003DA4  C060  F06C         	movff	?_length,enviarRS232@longitud_texto
 10550  003DA8  C061  F06D         	movff	?_length+1,enviarRS232@longitud_texto+1
 10551                           
 10552                           ;./../LIBRERIAS/funciones_auto.h: 53:     for(unsigned char i = 0; i<longitud_texto; i++
      +                          ){
 10553  003DAC  0E00               	movlw	0
 10554  003DAE  0100               	movlb	0	; () banked
 10555  003DB0  6F6E               	movwf	enviarRS232@i& (0+255),b
 10556  003DB2  D023               	goto	l7393
 10557  003DB4                     l7387:
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;./../LIBRERIAS/funciones_auto.h: 54:         TXREG1 = valores[i];
 10561  003DB4  516E               	movf	enviarRS232@i& (0+255),w,b
 10562  003DB6  2568               	addwf	enviarRS232@valores& (0+255),w,b
 10563  003DB8  6F6A               	movwf	??_enviarRS232& (0+255),b
 10564  003DBA  0E00               	movlw	0
 10565  003DBC  2169               	addwfc	(enviarRS232@valores+1)& (0+255),w,b
 10566  003DBE  6F6B               	movwf	(??_enviarRS232+1)& (0+255),b
 10567  003DC0  C06A  FFF6         	movff	??_enviarRS232,tblptrl
 10568  003DC4  C06B  FFF7         	movff	??_enviarRS232+1,tblptrh
 10569  003DC8  0E00               	movlw	low (__smallconst shr (0+16))
 10570  003DCA  6EF8               	movwf	tblptru,c
 10571  003DCC  0E0E               	movlw	(high __ramtop+-1)
 10572  003DCE  64F7               	cpfsgt	tblptrh,c
 10573  003DD0  D003               	bra	u9507
 10574  003DD2  0008               	tblrd		*
 10575  003DD4  50F5               	movf	tablat,w,c
 10576  003DD6  D005               	bra	u9500
 10577  003DD8                     u9507:
 10578  003DD8  CFF6 FFE1          	movff	tblptrl,fsr1l
 10579  003DDC  CFF7 FFE2          	movff	tblptrh,fsr1h
 10580  003DE0  50E7               	movf	indf1,w,c
 10581  003DE2                     u9500:
 10582  003DE2  6EAE               	movwf	4014,c	;volatile
 10583                           
 10584                           ;./../LIBRERIAS/funciones_auto.h: 55:         _delay((unsigned long)((3)*(48000000/4000.
      +                          0)));
 10585  003DE4  0E2F               	movlw	47
 10586  003DE6  0100               	movlb	0	; () banked
 10587  003DE8  6F6A               	movwf	??_enviarRS232& (0+255),b
 10588  003DEA  0EBF               	movlw	191
 10589  003DEC                     u9697:
 10590  003DEC  2EE8               	decfsz	wreg,f,c
 10591  003DEE  D7FE               	bra	u9697
 10592  003DF0  2F6A               	decfsz	??_enviarRS232& (0+255),f,b
 10593  003DF2  D7FC               	bra	u9697
 10594  003DF4  D000               	nop2	
 10595                           
 10596                           ;./../LIBRERIAS/funciones_auto.h: 56:     }
 10597  003DF6  0100               	movlb	0	; () banked
 10598  003DF8  2B6E               	incf	enviarRS232@i& (0+255),f,b
 10599  003DFA                     l7393:
 10600                           
 10601                           ; BSR set to: 0
 10602  003DFA  516E               	movf	enviarRS232@i& (0+255),w,b
 10603  003DFC  6F6A               	movwf	??_enviarRS232& (0+255),b
 10604  003DFE  6B6B               	clrf	(??_enviarRS232+1)& (0+255),b
 10605  003E00  516C               	movf	enviarRS232@longitud_texto& (0+255),w,b
 10606  003E02  5D6A               	subwf	??_enviarRS232& (0+255),w,b
 10607  003E04  516D               	movf	(enviarRS232@longitud_texto+1)& (0+255),w,b
 10608  003E06  596B               	subwfb	(??_enviarRS232+1)& (0+255),w,b
 10609  003E08  B0D8               	btfsc	status,0,c
 10610  003E0A  0012               	return	
 10611  003E0C  D7D3               	goto	l7387
 10612  003E0E                     __end_of_enviarRS232:
 10613                           	opt callstack 0
 10614                           
 10615 ;; *************** function _length *****************
 10616 ;; Defined at:
 10617 ;;		line 59 in file "./../LIBRERIAS/funciones_auto.h"
 10618 ;; Parameters:    Size  Location     Type
 10619 ;;  text            2    0[BANK0 ] PTR unsigned char 
 10620 ;;		 -> STR_6(49), STR_5(8), STR_3(21), STR_2(20), 
 10621 ;;		 -> terminal@texto(20), main@texto(8), main@text(6), 
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;  longitud        2    4[BANK0 ] int 
 10624 ;;  i               1    7[BANK0 ] unsigned char 
 10625 ;;  dato            1    6[BANK0 ] unsigned char 
 10626 ;; Return value:  Size  Location     Type
 10627 ;;                  2    0[BANK0 ] int 
 10628 ;; Registers used:
 10629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10630 ;; Tracked objects:
 10631 ;;		On entry : 0/0
 10632 ;;		On exit  : 0/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10635 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10636 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10637 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10638 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10639 ;;Total ram usage:        8 bytes
 10640 ;; Hardware stack levels used:    1
 10641 ;; Hardware stack levels required when called:    2
 10642 ;; This function calls:
 10643 ;;		Nothing
 10644 ;; This function is called by:
 10645 ;;		_enviarRS232
 10646 ;; This function uses a non-reentrant model
 10647 ;;
 10648                           
 10649                           	psect	text43
 10650  003D1C                     __ptext43:
 10651                           	opt callstack 0
 10652  003D1C                     _length:
 10653                           	opt callstack 26
 10654                           
 10655                           ;./../LIBRERIAS/funciones_auto.h: 60:     unsigned char dato = text[0], i = 1;
 10656                           
 10657                           ; BSR set to: 0
 10658                           ;incstack = 0
 10659  003D1C  C060  FFF6         	movff	length@text,tblptrl
 10660  003D20  C061  FFF7         	movff	length@text+1,tblptrh
 10661  003D24  0E00               	movlw	low (__smallconst shr (0+16))
 10662  003D26  6EF8               	movwf	tblptru,c
 10663  003D28  0E0E               	movlw	(high __ramtop+-1)
 10664  003D2A  64F7               	cpfsgt	tblptrh,c
 10665  003D2C  D003               	bra	u9367
 10666  003D2E  0008               	tblrd		*
 10667  003D30  50F5               	movf	tablat,w,c
 10668  003D32  D005               	bra	u9360
 10669  003D34                     u9367:
 10670  003D34  CFF6 FFE1          	movff	tblptrl,fsr1l
 10671  003D38  CFF7 FFE2          	movff	tblptrh,fsr1h
 10672  003D3C  50E7               	movf	indf1,w,c
 10673  003D3E                     u9360:
 10674  003D3E  0100               	movlb	0	; () banked
 10675  003D40  6F66               	movwf	length@dato& (0+255),b
 10676                           
 10677                           ; BSR set to: 0
 10678  003D42  0E01               	movlw	1
 10679  003D44  6F67               	movwf	length@i& (0+255),b
 10680                           
 10681                           ; BSR set to: 0
 10682                           ;./../LIBRERIAS/funciones_auto.h: 61:     int longitud = 0;
 10683  003D46  0E00               	movlw	0
 10684  003D48  6F65               	movwf	(length@longitud+1)& (0+255),b
 10685  003D4A  0E00               	movlw	0
 10686  003D4C  6F64               	movwf	length@longitud& (0+255),b
 10687                           
 10688                           ;./../LIBRERIAS/funciones_auto.h: 62:     while(dato != '\0'){
 10689  003D4E  D01C               	goto	l7275
 10690  003D50                     l7269:
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;./../LIBRERIAS/funciones_auto.h: 63:         dato = text[i];
 10694  003D50  5167               	movf	length@i& (0+255),w,b
 10695  003D52  2560               	addwf	length@text& (0+255),w,b
 10696  003D54  6F62               	movwf	??_length& (0+255),b
 10697  003D56  0E00               	movlw	0
 10698  003D58  2161               	addwfc	(length@text+1)& (0+255),w,b
 10699  003D5A  6F63               	movwf	(??_length+1)& (0+255),b
 10700  003D5C  C062  FFF6         	movff	??_length,tblptrl
 10701  003D60  C063  FFF7         	movff	??_length+1,tblptrh
 10702  003D64  0E00               	movlw	low (__smallconst shr (0+16))
 10703  003D66  6EF8               	movwf	tblptru,c
 10704  003D68  0E0E               	movlw	(high __ramtop+-1)
 10705  003D6A  64F7               	cpfsgt	tblptrh,c
 10706  003D6C  D003               	bra	u9377
 10707  003D6E  0008               	tblrd		*
 10708  003D70  50F5               	movf	tablat,w,c
 10709  003D72  D005               	bra	u9370
 10710  003D74                     u9377:
 10711  003D74  CFF6 FFE1          	movff	tblptrl,fsr1l
 10712  003D78  CFF7 FFE2          	movff	tblptrh,fsr1h
 10713  003D7C  50E7               	movf	indf1,w,c
 10714  003D7E                     u9370:
 10715  003D7E  0100               	movlb	0	; () banked
 10716  003D80  6F66               	movwf	length@dato& (0+255),b
 10717                           
 10718                           ; BSR set to: 0
 10719                           ;./../LIBRERIAS/funciones_auto.h: 64:         i++;
 10720  003D82  2B67               	incf	length@i& (0+255),f,b
 10721                           
 10722                           ; BSR set to: 0
 10723                           ;./../LIBRERIAS/funciones_auto.h: 65:         longitud++;
 10724  003D84  4B64               	infsnz	length@longitud& (0+255),f,b
 10725  003D86  2B65               	incf	(length@longitud+1)& (0+255),f,b
 10726  003D88                     l7275:
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;./../LIBRERIAS/funciones_auto.h: 62:     while(dato != '\0'){
 10730  003D88  5166               	movf	length@dato& (0+255),w,b
 10731  003D8A  A4D8               	btfss	status,2,c
 10732  003D8C  D7E1               	goto	l7269
 10733                           
 10734                           ; BSR set to: 0
 10735                           ;./../LIBRERIAS/funciones_auto.h: 67:     return longitud;
 10736  003D8E  C064  F060         	movff	length@longitud,?_length
 10737  003D92  C065  F061         	movff	length@longitud+1,?_length+1
 10738                           
 10739                           ; BSR set to: 0
 10740  003D96  0012               	return		;funcret
 10741  003D98                     __end_of_length:
 10742                           	opt callstack 0
 10743                           
 10744 ;; *************** function _encenderMotor *****************
 10745 ;; Defined at:
 10746 ;;		line 34 in file "./../LIBRERIAS/funciones_auto.h"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;		None
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  1    wreg      void 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0, cstack
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10764 ;;Total ram usage:        0 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; Hardware stack levels required when called:    3
 10767 ;; This function calls:
 10768 ;;		_definirVelocidad
 10769 ;;		_rutinaArranque
 10770 ;; This function is called by:
 10771 ;;		_terminal
 10772 ;;		_rutinaEscape
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           
 10776                           	psect	text44
 10777  0044CE                     __ptext44:
 10778                           	opt callstack 0
 10779  0044CE                     _encenderMotor:
 10780                           	opt callstack 26
 10781                           
 10782                           ;./../LIBRERIAS/funciones_auto.h: 35:     rutinaArranque();
 10783                           
 10784                           ; BSR set to: 0
 10785                           ;incstack = 0
 10786  0044CE  ECE6  F021         	call	_rutinaArranque	;wreg free
 10787                           
 10788                           ;./../LIBRERIAS/funciones_auto.h: 36:     definirVelocidad();
 10789  0044D2  EC4C  F021         	call	_definirVelocidad	;wreg free
 10790                           
 10791                           ;./../LIBRERIAS/funciones_auto.h: 37:     motor = 1;
 10792  0044D6  0E01               	movlw	1
 10793  0044D8  6E43               	movwf	_motor,c
 10794  0044DA  0012               	return		;funcret
 10795  0044DC                     __end_of_encenderMotor:
 10796                           	opt callstack 0
 10797                           
 10798 ;; *************** function _rutinaArranque *****************
 10799 ;; Defined at:
 10800 ;;		line 22 in file "./../LIBRERIAS/funciones_auto.h"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;		None
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;		None
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  1    wreg      void 
 10807 ;; Registers used:
 10808 ;;		wreg, status,2
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10817 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10818 ;;Total ram usage:        2 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; Hardware stack levels required when called:    2
 10821 ;; This function calls:
 10822 ;;		Nothing
 10823 ;; This function is called by:
 10824 ;;		_encenderMotor
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828                           	psect	text45
 10829  0043CC                     __ptext45:
 10830                           	opt callstack 0
 10831  0043CC                     _rutinaArranque:
 10832                           	opt callstack 26
 10833                           
 10834                           ;./../LIBRERIAS/funciones_auto.h: 23:     CCP7CONbits.DC7B = cicle_90 & 0x0003;
 10835                           
 10836                           ;incstack = 0
 10837  0043CC  010F               	movlb	15	; () banked
 10838  0043CE  5109               	movf	9,w,b	;volatile
 10839  0043D0  0BCF               	andlw	-49
 10840  0043D2  0920               	iorlw	32
 10841  0043D4  6F09               	movwf	9,b	;volatile
 10842                           
 10843                           ;./../LIBRERIAS/funciones_auto.h: 24:     CCPR7L = cicle_90>>2;
 10844  0043D6  0E70               	movlw	112
 10845  0043D8  6F0A               	movwf	10,b	;volatile
 10846                           
 10847                           ; BSR set to: 15
 10848                           ;./../LIBRERIAS/funciones_auto.h: 25:     T2CONbits.TMR2ON = 1;
 10849  0043DA  84CA               	bsf	4042,2,c	;volatile
 10850                           
 10851                           ; BSR set to: 15
 10852                           ;./../LIBRERIAS/funciones_auto.h: 26:     _delay((unsigned long)((50)*(48000000/4000.0))
      +                          );
 10853  0043DC  0E04               	movlw	4
 10854  0043DE  0100               	movlb	0	; () banked
 10855  0043E0  6F61               	movwf	(??_rutinaArranque+1)& (0+255),b
 10856  0043E2  0E0C               	movlw	12
 10857  0043E4  6F60               	movwf	??_rutinaArranque& (0+255),b
 10858  0043E6  0E33               	movlw	51
 10859  0043E8                     u9707:
 10860  0043E8  2EE8               	decfsz	wreg,f,c
 10861  0043EA  D7FE               	bra	u9707
 10862  0043EC  2F60               	decfsz	??_rutinaArranque& (0+255),f,b
 10863  0043EE  D7FC               	bra	u9707
 10864  0043F0  2F61               	decfsz	(??_rutinaArranque+1)& (0+255),f,b
 10865  0043F2  D7FA               	bra	u9707
 10866  0043F4  D000               	nop2	
 10867  0043F6  0012               	return		;funcret
 10868  0043F8                     __end_of_rutinaArranque:
 10869                           	opt callstack 0
 10870                           
 10871 ;; *************** function _definirVelocidad *****************
 10872 ;; Defined at:
 10873 ;;		line 40 in file "./../LIBRERIAS/funciones_auto.h"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;		None
 10876 ;; Auto vars:     Size  Location     Type
 10877 ;;		None
 10878 ;; Return value:  Size  Location     Type
 10879 ;;                  1    wreg      void 
 10880 ;; Registers used:
 10881 ;;		wreg, status,2, status,0
 10882 ;; Tracked objects:
 10883 ;;		On entry : 0/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10889 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10890 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10891 ;;Total ram usage:        2 bytes
 10892 ;; Hardware stack levels used:    1
 10893 ;; Hardware stack levels required when called:    2
 10894 ;; This function calls:
 10895 ;;		Nothing
 10896 ;; This function is called by:
 10897 ;;		_encenderMotor
 10898 ;;		_cambiarPWM
 10899 ;;		_rutinaEscape
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text46
 10904  004298                     __ptext46:
 10905                           	opt callstack 0
 10906  004298                     _definirVelocidad:
 10907                           	opt callstack 26
 10908                           
 10909                           ;./../LIBRERIAS/funciones_auto.h: 41:     CCP7CONbits.DC7B = velocidad & 0x0003;
 10910                           
 10911                           ;incstack = 0
 10912  004298  C050  F060         	movff	_velocidad,??_definirVelocidad
 10913  00429C  0E03               	movlw	3
 10914  00429E  0100               	movlb	0	; () banked
 10915  0042A0  1760               	andwf	??_definirVelocidad& (0+255),f,b
 10916  0042A2  3B60               	swapf	??_definirVelocidad& (0+255),f,b
 10917  0042A4  010F               	movlb	15	; () banked
 10918  0042A6  5109               	movf	9,w,b	;volatile
 10919  0042A8  0100               	movlb	0	; () banked
 10920  0042AA  1960               	xorwf	??_definirVelocidad& (0+255),w,b
 10921  0042AC  0BCF               	andlw	-49
 10922  0042AE  1960               	xorwf	??_definirVelocidad& (0+255),w,b
 10923  0042B0  010F               	movlb	15	; () banked
 10924  0042B2  6F09               	movwf	9,b	;volatile
 10925                           
 10926                           ;./../LIBRERIAS/funciones_auto.h: 42:     CCPR7L = velocidad>>2;
 10927  0042B4  C050  F060         	movff	_velocidad,??_definirVelocidad
 10928  0042B8  C051  F061         	movff	_velocidad+1,??_definirVelocidad+1
 10929  0042BC  0100               	movlb	0	; () banked
 10930  0042BE  90D8               	bcf	status,0,c
 10931  0042C0  3361               	rrcf	(??_definirVelocidad+1)& (0+255),f,b
 10932  0042C2  3360               	rrcf	??_definirVelocidad& (0+255),f,b
 10933  0042C4  90D8               	bcf	status,0,c
 10934  0042C6  3361               	rrcf	(??_definirVelocidad+1)& (0+255),f,b
 10935  0042C8  3360               	rrcf	??_definirVelocidad& (0+255),f,b
 10936  0042CA  5160               	movf	??_definirVelocidad& (0+255),w,b
 10937  0042CC  010F               	movlb	15	; () banked
 10938  0042CE  6F0A               	movwf	10,b	;volatile
 10939                           
 10940                           ; BSR set to: 15
 10941  0042D0  0012               	return		;funcret
 10942  0042D2                     __end_of_definirVelocidad:
 10943                           	opt callstack 0
 10944                           
 10945 ;; *************** function _atras *****************
 10946 ;; Defined at:
 10947 ;;		line 257 in file "auto.c"
 10948 ;; Parameters:    Size  Location     Type
 10949 ;;		None
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;		None
 10952 ;; Return value:  Size  Location     Type
 10953 ;;                  1    wreg      void 
 10954 ;; Registers used:
 10955 ;;		None
 10956 ;; Tracked objects:
 10957 ;;		On entry : 0/0
 10958 ;;		On exit  : 0/0
 10959 ;;		Unchanged: 0/0
 10960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10965 ;;Total ram usage:        0 bytes
 10966 ;; Hardware stack levels used:    1
 10967 ;; Hardware stack levels required when called:    2
 10968 ;; This function calls:
 10969 ;;		Nothing
 10970 ;; This function is called by:
 10971 ;;		_terminal
 10972 ;;		_rutinaEscape
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           	psect	text47
 10977  0044F6                     __ptext47:
 10978                           	opt callstack 0
 10979  0044F6                     _atras:
 10980                           	opt callstack 27
 10981                           
 10982                           ;auto.c: 258:     PORTAbits.RA0 = 0;
 10983                           
 10984                           ; BSR set to: 15
 10985                           ;incstack = 0
 10986  0044F6  9080               	bcf	3968,0,c	;volatile
 10987                           
 10988                           ;auto.c: 259:     PORTAbits.RA1 = 0;
 10989  0044F8  9280               	bcf	3968,1,c	;volatile
 10990                           
 10991                           ;auto.c: 260:     PORTAbits.RA0 = 0;
 10992  0044FA  9080               	bcf	3968,0,c	;volatile
 10993                           
 10994                           ;auto.c: 261:     PORTAbits.RA1 = 1;
 10995  0044FC  8280               	bsf	3968,1,c	;volatile
 10996  0044FE  0012               	return		;funcret
 10997  004500                     __end_of_atras:
 10998                           	opt callstack 0
 10999                           
 11000 ;; *************** function _adelante *****************
 11001 ;; Defined at:
 11002 ;;		line 250 in file "auto.c"
 11003 ;; Parameters:    Size  Location     Type
 11004 ;;		None
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;		None
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  1    wreg      void 
 11009 ;; Registers used:
 11010 ;;		None
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11020 ;;Total ram usage:        0 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; Hardware stack levels required when called:    2
 11023 ;; This function calls:
 11024 ;;		Nothing
 11025 ;; This function is called by:
 11026 ;;		_terminal
 11027 ;;		_rutinaEscape
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           	psect	text48
 11032  004500                     __ptext48:
 11033                           	opt callstack 0
 11034  004500                     _adelante:
 11035                           	opt callstack 27
 11036                           
 11037                           ;auto.c: 251:     PORTAbits.RA0 = 0;
 11038                           
 11039                           ;incstack = 0
 11040  004500  9080               	bcf	3968,0,c	;volatile
 11041                           
 11042                           ;auto.c: 252:     PORTAbits.RA1 = 0;
 11043  004502  9280               	bcf	3968,1,c	;volatile
 11044                           
 11045                           ;auto.c: 253:     PORTAbits.RA0 = 1;
 11046  004504  8080               	bsf	3968,0,c	;volatile
 11047                           
 11048                           ;auto.c: 254:     PORTAbits.RA1 = 0;
 11049  004506  9280               	bcf	3968,1,c	;volatile
 11050  004508  0012               	return		;funcret
 11051  00450A                     __end_of_adelante:
 11052                           	opt callstack 0
 11053                           
 11054 ;; *************** function _configuracionInicial *****************
 11055 ;; Defined at:
 11056 ;;		line 118 in file "auto.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;		None
 11059 ;; Auto vars:     Size  Location     Type
 11060 ;;		None
 11061 ;; Return value:  Size  Location     Type
 11062 ;;                  1    wreg      void 
 11063 ;; Registers used:
 11064 ;;		wreg, status,2, cstack
 11065 ;; Tracked objects:
 11066 ;;		On entry : 0/0
 11067 ;;		On exit  : 0/0
 11068 ;;		Unchanged: 0/0
 11069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11074 ;;Total ram usage:        0 bytes
 11075 ;; Hardware stack levels used:    1
 11076 ;; Hardware stack levels required when called:    3
 11077 ;; This function calls:
 11078 ;;		_configurarInterrupciones
 11079 ;;		_configurarPWM7
 11080 ;;		_configurarPuertos
 11081 ;;		_configurarRS232
 11082 ;;		_configurarRS232US100
 11083 ;;		_configurarTMR5
 11084 ;; This function is called by:
 11085 ;;		_main
 11086 ;; This function uses a non-reentrant model
 11087 ;;
 11088                           
 11089                           	psect	text49
 11090  004466                     __ptext49:
 11091                           	opt callstack 0
 11092  004466                     _configuracionInicial:
 11093                           	opt callstack 27
 11094                           
 11095                           ;auto.c: 119:     configurarPuertos();
 11096                           
 11097                           ;incstack = 0
 11098  004466  EC5F  F022         	call	_configurarPuertos	;wreg free
 11099                           
 11100                           ;auto.c: 120:     configurarPWM7();
 11101  00446A  EC23  F022         	call	_configurarPWM7	;wreg free
 11102                           
 11103                           ;auto.c: 121:     configurarInterrupciones();
 11104  00446E  EC6E  F022         	call	_configurarInterrupciones	;wreg free
 11105                           
 11106                           ;auto.c: 122:     configurarRS232();
 11107  004472  EC40  F022         	call	_configurarRS232	;wreg free
 11108                           
 11109                           ;auto.c: 123:     configurarTMR5();
 11110  004476  EC4C  F022         	call	_configurarTMR5	;wreg free
 11111                           
 11112                           ;auto.c: 124:     configurarRS232US100();
 11113  00447A  EC10  F022         	call	_configurarRS232US100	;wreg free
 11114  00447E  0012               	return		;funcret
 11115  004480                     __end_of_configuracionInicial:
 11116                           	opt callstack 0
 11117                           
 11118 ;; *************** function _configurarTMR5 *****************
 11119 ;; Defined at:
 11120 ;;		line 43 in file "./../LIBRERIAS/configuracion_auto.h"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;		None
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;		None
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  1    wreg      void 
 11127 ;; Registers used:
 11128 ;;		wreg, status,2
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11138 ;;Total ram usage:        0 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:    2
 11141 ;; This function calls:
 11142 ;;		Nothing
 11143 ;; This function is called by:
 11144 ;;		_configuracionInicial
 11145 ;; This function uses a non-reentrant model
 11146 ;;
 11147                           
 11148                           	psect	text50
 11149  004498                     __ptext50:
 11150                           	opt callstack 0
 11151  004498                     _configurarTMR5:
 11152                           	opt callstack 27
 11153                           
 11154                           ;./../LIBRERIAS/configuracion_auto.h: 44:     TRISDbits.TRISD4 = 0;
 11155                           
 11156                           ;incstack = 0
 11157  004498  9895               	bcf	3989,4,c	;volatile
 11158                           
 11159                           ;./../LIBRERIAS/configuracion_auto.h: 45:     PORTDbits.RD4 = 0;
 11160  00449A  9883               	bcf	3971,4,c	;volatile
 11161                           
 11162                           ;./../LIBRERIAS/configuracion_auto.h: 46:     T5CON = 0x32;
 11163  00449C  0E32               	movlw	50
 11164  00449E  010F               	movlb	15	; () banked
 11165  0044A0  6F22               	movwf	34,b	;volatile
 11166                           
 11167                           ; BSR set to: 15
 11168                           ;./../LIBRERIAS/configuracion_auto.h: 47:     TMR5H = 0xFF;
 11169  0044A2  6924               	setf	36,b	;volatile
 11170                           
 11171                           ;./../LIBRERIAS/configuracion_auto.h: 48:     TMR5L = 0x6A;
 11172  0044A4  0E6A               	movlw	106
 11173  0044A6  6F23               	movwf	35,b	;volatile
 11174                           
 11175                           ; BSR set to: 15
 11176                           ;./../LIBRERIAS/configuracion_auto.h: 49:     PIE5bits.TMR5IE = 1;
 11177  0044A8  8491               	bsf	3985,2,c	;volatile
 11178                           
 11179                           ; BSR set to: 15
 11180                           ;./../LIBRERIAS/configuracion_auto.h: 50:     PIR5bits.TMR5IF = 0;
 11181  0044AA  9498               	bcf	3992,2,c	;volatile
 11182                           
 11183                           ; BSR set to: 15
 11184  0044AC  0012               	return		;funcret
 11185  0044AE                     __end_of_configurarTMR5:
 11186                           	opt callstack 0
 11187                           
 11188 ;; *************** function _configurarRS232US100 *****************
 11189 ;; Defined at:
 11190 ;;		line 54 in file "./../LIBRERIAS/configuracion_auto.h"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;		None
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;		None
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  1    wreg      void 
 11197 ;; Registers used:
 11198 ;;		wreg, status,2
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11208 ;;Total ram usage:        0 bytes
 11209 ;; Hardware stack levels used:    1
 11210 ;; Hardware stack levels required when called:    2
 11211 ;; This function calls:
 11212 ;;		Nothing
 11213 ;; This function is called by:
 11214 ;;		_configuracionInicial
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218                           	psect	text51
 11219  004420                     __ptext51:
 11220                           	opt callstack 0
 11221  004420                     _configurarRS232US100:
 11222                           	opt callstack 27
 11223                           
 11224                           ;./../LIBRERIAS/configuracion_auto.h: 55:     TRISDbits.TRISD6 = 0;
 11225                           
 11226                           ; BSR set to: 15
 11227                           ;incstack = 0
 11228  004420  9C95               	bcf	3989,6,c	;volatile
 11229                           
 11230                           ;./../LIBRERIAS/configuracion_auto.h: 56:     TRISDbits.TRISD7 = 1;
 11231  004422  8E95               	bsf	3989,7,c	;volatile
 11232                           
 11233                           ;./../LIBRERIAS/configuracion_auto.h: 57:     PPSCON = 0;
 11234  004424  0E00               	movlw	0
 11235  004426  010E               	movlb	14	; () banked
 11236  004428  6FBF               	movwf	191,b	;volatile
 11237                           
 11238                           ;./../LIBRERIAS/configuracion_auto.h: 58:     RPOR23 = 6;
 11239  00442A  0E06               	movlw	6
 11240  00442C  6FD7               	movwf	215,b	;volatile
 11241                           
 11242                           ;./../LIBRERIAS/configuracion_auto.h: 59:     RPINR16 = 24;
 11243  00442E  0E18               	movlw	24
 11244  004430  6FF7               	movwf	247,b	;volatile
 11245                           
 11246                           ;./../LIBRERIAS/configuracion_auto.h: 60:     TXSTA2 = 0x22;
 11247  004432  0E22               	movlw	34
 11248  004434  6EA8               	movwf	4008,c	;volatile
 11249                           
 11250                           ;./../LIBRERIAS/configuracion_auto.h: 61:     RCSTA2 = 0x90;
 11251  004436  0E90               	movlw	144
 11252  004438  6E9C               	movwf	3996,c	;volatile
 11253                           
 11254                           ; BSR set to: 14
 11255                           ;./../LIBRERIAS/configuracion_auto.h: 62:     BAUDCON2bits.BRG16 = 0;
 11256  00443A  967C               	bcf	3964,3,c	;volatile
 11257                           
 11258                           ;./../LIBRERIAS/configuracion_auto.h: 63:     SPBRG2 = 77;
 11259  00443C  0E4D               	movlw	77
 11260  00443E  6EAB               	movwf	4011,c	;volatile
 11261                           
 11262                           ; BSR set to: 14
 11263                           ;./../LIBRERIAS/configuracion_auto.h: 64:     PIR3bits.RC2IF = 0;
 11264  004440  9AA4               	bcf	4004,5,c	;volatile
 11265                           
 11266                           ; BSR set to: 14
 11267                           ;./../LIBRERIAS/configuracion_auto.h: 65:     PIE3bits.RC2IE = 1;
 11268  004442  8AA3               	bsf	4003,5,c	;volatile
 11269                           
 11270                           ; BSR set to: 14
 11271  004444  0012               	return		;funcret
 11272  004446                     __end_of_configurarRS232US100:
 11273                           	opt callstack 0
 11274                           
 11275 ;; *************** function _configurarRS232 *****************
 11276 ;; Defined at:
 11277 ;;		line 32 in file "./../LIBRERIAS/configuracion_auto.h"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;		None
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;		None
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  1    wreg      void 
 11284 ;; Registers used:
 11285 ;;		wreg, status,2
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11295 ;;Total ram usage:        0 bytes
 11296 ;; Hardware stack levels used:    1
 11297 ;; Hardware stack levels required when called:    2
 11298 ;; This function calls:
 11299 ;;		Nothing
 11300 ;; This function is called by:
 11301 ;;		_configuracionInicial
 11302 ;; This function uses a non-reentrant model
 11303 ;;
 11304                           
 11305                           	psect	text52
 11306  004480                     __ptext52:
 11307                           	opt callstack 0
 11308  004480                     _configurarRS232:
 11309                           	opt callstack 27
 11310                           
 11311                           ;./../LIBRERIAS/configuracion_auto.h: 33:     TRISCbits.TRISC7 = 1;
 11312                           
 11313                           ; BSR set to: 14
 11314                           ;incstack = 0
 11315  004480  8E94               	bsf	3988,7,c	;volatile
 11316                           
 11317                           ;./../LIBRERIAS/configuracion_auto.h: 34:     TRISCbits.TRISC6 = 0;
 11318  004482  9C94               	bcf	3988,6,c	;volatile
 11319                           
 11320                           ;./../LIBRERIAS/configuracion_auto.h: 35:     TXSTA1 = 0x22;
 11321  004484  0E22               	movlw	34
 11322  004486  6EAD               	movwf	4013,c	;volatile
 11323                           
 11324                           ;./../LIBRERIAS/configuracion_auto.h: 36:     RCSTA1 = 0x90;
 11325  004488  0E90               	movlw	144
 11326  00448A  6EAC               	movwf	4012,c	;volatile
 11327                           
 11328                           ;./../LIBRERIAS/configuracion_auto.h: 37:     BAUDCON1bits.BRG16 = 0;
 11329  00448C  967E               	bcf	3966,3,c	;volatile
 11330                           
 11331                           ;./../LIBRERIAS/configuracion_auto.h: 38:     SPBRG1 = 77;
 11332  00448E  0E4D               	movlw	77
 11333  004490  6EB0               	movwf	4016,c	;volatile
 11334                           
 11335                           ;./../LIBRERIAS/configuracion_auto.h: 39:     PIR1bits.RC1IF = 0;
 11336  004492  9A9E               	bcf	3998,5,c	;volatile
 11337                           
 11338                           ;./../LIBRERIAS/configuracion_auto.h: 40:     PIE1bits.RC1IE = 1;
 11339  004494  8A9D               	bsf	3997,5,c	;volatile
 11340  004496  0012               	return		;funcret
 11341  004498                     __end_of_configurarRS232:
 11342                           	opt callstack 0
 11343                           
 11344 ;; *************** function _configurarPuertos *****************
 11345 ;; Defined at:
 11346 ;;		line 3 in file "./../LIBRERIAS/configuracion_auto.h"
 11347 ;; Parameters:    Size  Location     Type
 11348 ;;		None
 11349 ;; Auto vars:     Size  Location     Type
 11350 ;;		None
 11351 ;; Return value:  Size  Location     Type
 11352 ;;                  1    wreg      void 
 11353 ;; Registers used:
 11354 ;;		wreg, status,2
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11364 ;;Total ram usage:        0 bytes
 11365 ;; Hardware stack levels used:    1
 11366 ;; Hardware stack levels required when called:    2
 11367 ;; This function calls:
 11368 ;;		Nothing
 11369 ;; This function is called by:
 11370 ;;		_configuracionInicial
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           	psect	text53
 11375  0044BE                     __ptext53:
 11376                           	opt callstack 0
 11377  0044BE                     _configurarPuertos:
 11378                           	opt callstack 27
 11379                           
 11380                           ;./../LIBRERIAS/configuracion_auto.h: 4:     ANCON0 = 0x7F;
 11381                           
 11382                           ;incstack = 0
 11383  0044BE  0E7F               	movlw	127
 11384  0044C0  010F               	movlb	15	; () banked
 11385  0044C2  6F48               	movwf	72,b	;volatile
 11386                           
 11387                           ;./../LIBRERIAS/configuracion_auto.h: 5:     ANCON1 = 0x1F;
 11388  0044C4  0E1F               	movlw	31
 11389  0044C6  6F49               	movwf	73,b	;volatile
 11390                           
 11391                           ; BSR set to: 15
 11392                           ;./../LIBRERIAS/configuracion_auto.h: 6:     TRISAbits.TRISA0 = 0;
 11393  0044C8  9092               	bcf	3986,0,c	;volatile
 11394                           
 11395                           ; BSR set to: 15
 11396                           ;./../LIBRERIAS/configuracion_auto.h: 7:     TRISAbits.TRISA1 = 0;
 11397  0044CA  9292               	bcf	3986,1,c	;volatile
 11398                           
 11399                           ; BSR set to: 15
 11400  0044CC  0012               	return		;funcret
 11401  0044CE                     __end_of_configurarPuertos:
 11402                           	opt callstack 0
 11403                           
 11404 ;; *************** function _configurarPWM7 *****************
 11405 ;; Defined at:
 11406 ;;		line 20 in file "./../LIBRERIAS/configuracion_auto.h"
 11407 ;; Parameters:    Size  Location     Type
 11408 ;;		None
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;		None
 11411 ;; Return value:  Size  Location     Type
 11412 ;;                  1    wreg      void 
 11413 ;; Registers used:
 11414 ;;		wreg, status,2
 11415 ;; Tracked objects:
 11416 ;;		On entry : 0/0
 11417 ;;		On exit  : 0/0
 11418 ;;		Unchanged: 0/0
 11419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11424 ;;Total ram usage:        0 bytes
 11425 ;; Hardware stack levels used:    1
 11426 ;; Hardware stack levels required when called:    2
 11427 ;; This function calls:
 11428 ;;		Nothing
 11429 ;; This function is called by:
 11430 ;;		_configuracionInicial
 11431 ;; This function uses a non-reentrant model
 11432 ;;
 11433                           
 11434                           	psect	text54
 11435  004446                     __ptext54:
 11436                           	opt callstack 0
 11437  004446                     _configurarPWM7:
 11438                           	opt callstack 27
 11439                           
 11440                           ;./../LIBRERIAS/configuracion_auto.h: 21:     TRISBbits.TRISB4 = 0;
 11441                           
 11442                           ; BSR set to: 15
 11443                           ;incstack = 0
 11444  004446  9893               	bcf	3987,4,c	;volatile
 11445                           
 11446                           ;./../LIBRERIAS/configuracion_auto.h: 22:     TRISBbits.TRISB7 = 0;
 11447  004448  9E93               	bcf	3987,7,c	;volatile
 11448                           
 11449                           ;./../LIBRERIAS/configuracion_auto.h: 23:     CCP7CONbits.CCP7M = 0xC;
 11450  00444A  010F               	movlb	15	; () banked
 11451  00444C  5109               	movf	9,w,b	;volatile
 11452  00444E  0BF0               	andlw	-16
 11453  004450  090C               	iorlw	12
 11454  004452  6F09               	movwf	9,b	;volatile
 11455                           
 11456                           ;./../LIBRERIAS/configuracion_auto.h: 24:     CCPTMRS1bits.C7TSEL = 0b00;
 11457  004454  0E3F               	movlw	-193
 11458  004456  1751               	andwf	81,f,b	;volatile
 11459                           
 11460                           ;./../LIBRERIAS/configuracion_auto.h: 26:     T2CON = 0x02;
 11461  004458  0E02               	movlw	2
 11462  00445A  6ECA               	movwf	4042,c	;volatile
 11463                           
 11464                           ;./../LIBRERIAS/configuracion_auto.h: 27:     PR2 = 124;
 11465  00445C  0E7C               	movlw	124
 11466  00445E  6ECB               	movwf	4043,c	;volatile
 11467                           
 11468                           ;./../LIBRERIAS/configuracion_auto.h: 29:     TMR2 = 0x00;
 11469  004460  0E00               	movlw	0
 11470  004462  6ECC               	movwf	4044,c	;volatile
 11471                           
 11472                           ; BSR set to: 15
 11473  004464  0012               	return		;funcret
 11474  004466                     __end_of_configurarPWM7:
 11475                           	opt callstack 0
 11476                           
 11477 ;; *************** function _configurarInterrupciones *****************
 11478 ;; Defined at:
 11479 ;;		line 10 in file "./../LIBRERIAS/configuracion_auto.h"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;		None
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;		None
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  1    wreg      void 
 11486 ;; Registers used:
 11487 ;;		None
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/0
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11497 ;;Total ram usage:        0 bytes
 11498 ;; Hardware stack levels used:    1
 11499 ;; Hardware stack levels required when called:    2
 11500 ;; This function calls:
 11501 ;;		Nothing
 11502 ;; This function is called by:
 11503 ;;		_configuracionInicial
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text55
 11508  0044DC                     __ptext55:
 11509                           	opt callstack 0
 11510  0044DC                     _configurarInterrupciones:
 11511                           	opt callstack 27
 11512                           
 11513                           ;./../LIBRERIAS/configuracion_auto.h: 11:     TRISBbits.TRISB0 = 1;
 11514                           
 11515                           ; BSR set to: 15
 11516                           ;incstack = 0
 11517  0044DC  8093               	bsf	3987,0,c	;volatile
 11518                           
 11519                           ;./../LIBRERIAS/configuracion_auto.h: 12:     INTCONbits.GIE = 1;
 11520  0044DE  8EF2               	bsf	4082,7,c	;volatile
 11521                           
 11522                           ;./../LIBRERIAS/configuracion_auto.h: 13:     INTCONbits.PEIE = 1;
 11523  0044E0  8CF2               	bsf	4082,6,c	;volatile
 11524                           
 11525                           ;./../LIBRERIAS/configuracion_auto.h: 14:     INTCON2bits.INTEDG0=0;
 11526  0044E2  9CF1               	bcf	4081,6,c	;volatile
 11527                           
 11528                           ;./../LIBRERIAS/configuracion_auto.h: 15:     INTCONbits.INT0F = 0;
 11529  0044E4  92F2               	bcf	4082,1,c	;volatile
 11530                           
 11531                           ;./../LIBRERIAS/configuracion_auto.h: 16:     INTCONbits.INT0E = 1;
 11532  0044E6  88F2               	bsf	4082,4,c	;volatile
 11533  0044E8  0012               	return		;funcret
 11534  0044EA                     __end_of_configurarInterrupciones:
 11535                           	opt callstack 0
 11536                           
 11537 ;; *************** function _PWMServo *****************
 11538 ;; Defined at:
 11539 ;;		line 233 in file "auto.c"
 11540 ;; Parameters:    Size  Location     Type
 11541 ;;		None
 11542 ;; Auto vars:     Size  Location     Type
 11543 ;;		None
 11544 ;; Return value:  Size  Location     Type
 11545 ;;                  1    wreg      void 
 11546 ;; Registers used:
 11547 ;;		wreg, status,2, status,0
 11548 ;; Tracked objects:
 11549 ;;		On entry : 0/0
 11550 ;;		On exit  : 0/0
 11551 ;;		Unchanged: 0/0
 11552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11557 ;;Total ram usage:        0 bytes
 11558 ;; Hardware stack levels used:    1
 11559 ;; Hardware stack levels required when called:    2
 11560 ;; This function calls:
 11561 ;;		Nothing
 11562 ;; This function is called by:
 11563 ;;		_main
 11564 ;; This function uses a non-reentrant model
 11565 ;;
 11566                           
 11567                           	psect	text56
 11568  0042D2                     __ptext56:
 11569                           	opt callstack 0
 11570  0042D2                     _PWMServo:
 11571                           	opt callstack 28
 11572                           
 11573                           ;auto.c: 234:     if(PORTDbits.RD4 == 1){
 11574                           
 11575                           ;incstack = 0
 11576  0042D2  A883               	btfss	3971,4,c	;volatile
 11577  0042D4  D00C               	goto	l270
 11578                           
 11579                           ;auto.c: 235:         PORTDbits.RD4 = 0;
 11580  0042D6  9883               	bcf	3971,4,c	;volatile
 11581                           
 11582                           ;auto.c: 236:         tiempo_anterior_1 = TIME_MAX;
 11583  0042D8  C04E  F054         	movff	_TIME_MAX,_tiempo_anterior_1
 11584                           
 11585                           ;auto.c: 237:         TIME_MAX = 200 - tiempo_anterior_1;
 11586  0042DC  5054               	movf	_tiempo_anterior_1,w,c
 11587  0042DE  08C8               	sublw	200
 11588  0042E0  6E4E               	movwf	_TIME_MAX,c
 11589  0042E2  0E00               	movlw	0
 11590  0042E4  A0D8               	btfss	status,0,c
 11591  0042E6  2AE8               	incf	wreg,f,c
 11592  0042E8  0800               	sublw	0
 11593  0042EA  6E4F               	movwf	_TIME_MAX+1,c
 11594                           
 11595                           ;auto.c: 238:     }
 11596  0042EC  D004               	goto	l7533
 11597  0042EE                     l270:
 11598                           
 11599                           ;auto.c: 240:         PORTDbits.RD4 = 1;
 11600  0042EE  8883               	bsf	3971,4,c	;volatile
 11601                           
 11602                           ;auto.c: 241:         TIME_MAX = tiempo_anterior_1;
 11603  0042F0  C054  F04E         	movff	_tiempo_anterior_1,_TIME_MAX
 11604  0042F4  6A4F               	clrf	_TIME_MAX+1,c
 11605  0042F6                     l7533:
 11606                           
 11607                           ;auto.c: 243:     if(parar == 30){
 11608  0042F6  0E1E               	movlw	30
 11609  0042F8  183F               	xorwf	_parar,w,c
 11610  0042FA  A4D8               	btfss	status,2,c
 11611  0042FC  0012               	return	
 11612                           
 11613                           ;auto.c: 244:         T5CONbits.TMR5ON = 0;
 11614  0042FE  010F               	movlb	15	; () banked
 11615  004300  9122               	bcf	34,0,b	;volatile
 11616                           
 11617                           ;auto.c: 245:         PORTDbits.RD4 = 0;
 11618  004302  9883               	bcf	3971,4,c	;volatile
 11619                           
 11620                           ; BSR set to: 15
 11621                           ;auto.c: 246:         parar = 0;
 11622  004304  0E00               	movlw	0
 11623  004306  6E3F               	movwf	_parar,c
 11624  004308  0012               	return		;funcret
 11625  00430A                     __end_of_PWMServo:
 11626                           	opt callstack 0
 11627                           
 11628 ;; *************** function _rutina *****************
 11629 ;; Defined at:
 11630 ;;		line 51 in file "auto.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;		None
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;  dato            1   42[COMRAM] unsigned char 
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  1    wreg      void 
 11637 ;; Registers used:
 11638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11647 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11648 ;;Total ram usage:        5 bytes
 11649 ;; Hardware stack levels used:    1
 11650 ;; Hardware stack levels required when called:    1
 11651 ;; This function calls:
 11652 ;;		i2___awdiv
 11653 ;;		i2___fladd
 11654 ;;		i2___xxtofl
 11655 ;; This function is called by:
 11656 ;;		Interrupt level 2
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660                           	psect	intcode
 11661  000008                     __pintcode:
 11662                           	opt callstack 0
 11663  000008                     _rutina:
 11664                           	opt callstack 20
 11665                           
 11666                           ;incstack = 0
 11667  000008  8255               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11668  00000A  CFD9 F029          	movff	fsr2l,??_rutina+2
 11669  00000E  CFDA F02A          	movff	fsr2h,??_rutina+3
 11670                           
 11671                           ;auto.c: 52:     if(PIR1bits.RC1IF == 1){
 11672  000012  AA9E               	btfss	3998,5,c	;volatile
 11673  000014  D018               	goto	i2l194
 11674                           
 11675                           ;auto.c: 53:         unsigned char dato = RCREG1;
 11676  000016  CFAF F02B          	movff	4015,rutina@dato	;volatile
 11677                           
 11678                           ;auto.c: 54:         if(dato == 'P'){
 11679  00001A  0E50               	movlw	80
 11680  00001C  182B               	xorwf	rutina@dato,w,c
 11681  00001E  A4D8               	btfss	status,2,c
 11682  000020  D006               	goto	i2l195
 11683                           
 11684                           ;auto.c: 55:             bandera = 1;
 11685  000022  0E01               	movlw	1
 11686  000024  0101               	movlb	1	; () banked
 11687  000026  6F21               	movwf	_bandera& (0+255),b
 11688                           
 11689                           ;auto.c: 56:             indicador = 0;
 11690  000028  0E00               	movlw	0
 11691  00002A  6E42               	movwf	_indicador,c
 11692                           
 11693                           ;auto.c: 57:         }
 11694  00002C  D083               	goto	i2l206
 11695  00002E                     i2l195:
 11696                           
 11697                           ;auto.c: 59:             TXREG1 = dato;
 11698  00002E  C02B  FFAE         	movff	rutina@dato,4014	;volatile
 11699                           
 11700                           ;auto.c: 60:             datos[indicador] = dato;
 11701  000032  0E44               	movlw	low _datos
 11702  000034  2442               	addwf	_indicador,w,c
 11703  000036  6ED9               	movwf	fsr2l,c
 11704  000038  6ADA               	clrf	fsr2h,c
 11705  00003A  0E00               	movlw	high _datos
 11706  00003C  22DA               	addwfc	fsr2h,f,c
 11707  00003E  C02B  FFDF         	movff	rutina@dato,indf2
 11708                           
 11709                           ;auto.c: 61:             indicador++;
 11710  000042  2A42               	incf	_indicador,f,c
 11711  000044  D077               	goto	i2l206
 11712  000046                     i2l194:
 11713  000046  A498               	btfss	3992,2,c	;volatile
 11714  000048  D016               	goto	i2l198
 11715                           
 11716                           ;auto.c: 65:         PIR5bits.TMR5IF = 0;
 11717  00004A  9498               	bcf	3992,2,c	;volatile
 11718                           
 11719                           ;auto.c: 66:         contador_timer_5++;
 11720  00004C  2A41               	incf	_contador_timer_5,f,c
 11721                           
 11722                           ;auto.c: 67:         TMR5H = 0xFF;
 11723  00004E  010F               	movlb	15	; () banked
 11724  000050  6924               	setf	36,b	;volatile
 11725                           
 11726                           ; BSR set to: 15
 11727                           ;auto.c: 68:         TMR5L = 0x6A;
 11728  000052  0E6A               	movlw	106
 11729  000054  6F23               	movwf	35,b	;volatile
 11730                           
 11731                           ; BSR set to: 15
 11732                           ;auto.c: 69:         if(contador_timer_5 == TIME_MAX){
 11733  000056  5041               	movf	_contador_timer_5,w,c
 11734  000058  6E27               	movwf	??_rutina& (0+255),c
 11735  00005A  6A28               	clrf	(??_rutina+1)& (0+255),c
 11736  00005C  504E               	movf	_TIME_MAX,w,c
 11737  00005E  1827               	xorwf	??_rutina,w,c
 11738  000060  E169               	bnz	i2l206
 11739  000062  504F               	movf	_TIME_MAX+1,w,c
 11740  000064  1828               	xorwf	??_rutina+1,w,c
 11741  000066  A4D8               	btfss	status,2,c
 11742  000068  D065               	goto	i2l206
 11743                           
 11744                           ; BSR set to: 15
 11745                           ;auto.c: 70:             contador_timer_5 = 0;
 11746  00006A  0E00               	movlw	0
 11747  00006C  6E41               	movwf	_contador_timer_5,c
 11748                           
 11749                           ;auto.c: 71:             bandera_servo = 1;
 11750  00006E  0E01               	movlw	1
 11751  000070  0101               	movlb	1	; () banked
 11752  000072  6F20               	movwf	_bandera_servo& (0+255),b
 11753  000074  D05F               	goto	i2l206
 11754  000076                     i2l198:
 11755  000076  A2F2               	btfss	4082,1,c	;volatile
 11756  000078  D005               	goto	i2l201
 11757                           
 11758                           ;auto.c: 75:         INTCONbits.INT0F = 0;
 11759  00007A  92F2               	bcf	4082,1,c	;volatile
 11760                           
 11761                           ;auto.c: 76:         obstaculo = 1;
 11762  00007C  0E01               	movlw	1
 11763  00007E  0101               	movlb	1	; () banked
 11764  000080  6F1F               	movwf	_obstaculo& (0+255),b
 11765                           
 11766                           ;auto.c: 77:     }
 11767  000082  D058               	goto	i2l206
 11768  000084                     i2l201:
 11769  000084  AAA4               	btfss	4004,5,c	;volatile
 11770  000086  D056               	goto	i2l206
 11771                           
 11772                           ;auto.c: 79:         if(contador_datos == 1){
 11773  000088  043E               	decf	_contador_datos,w,c
 11774  00008A  A4D8               	btfss	status,2,c
 11775  00008C  D035               	goto	i2l5633
 11776                           
 11777                           ;auto.c: 80:             bandera_distancia = 1;
 11778  00008E  0E01               	movlw	1
 11779  000090  0101               	movlb	1	; () banked
 11780  000092  6F1E               	movwf	_bandera_distancia& (0+255),b
 11781                           
 11782                           ; BSR set to: 1
 11783                           ;auto.c: 81:             distancia += (RCREG2)/10;
 11784  000094  C034  F017         	movff	_distancia,i2___fladd@b
 11785  000098  C035  F018         	movff	_distancia+1,i2___fladd@b+1
 11786  00009C  C036  F019         	movff	_distancia+2,i2___fladd@b+2
 11787  0000A0  C037  F01A         	movff	_distancia+3,i2___fladd@b+3
 11788  0000A4  0E00               	movlw	0
 11789  0000A6  6E04               	movwf	i2___awdiv@divisor+1,c
 11790  0000A8  0E0A               	movlw	10
 11791  0000AA  6E03               	movwf	i2___awdiv@divisor,c
 11792  0000AC  CFAA F001          	movff	4010,i2___awdiv@dividend	;volatile
 11793  0000B0  6A02               	clrf	i2___awdiv@dividend+1,c
 11794  0000B2  EC4C  F01E         	call	i2___awdiv	;wreg free
 11795  0000B6  C001  F009         	movff	?i2___awdiv,i2___xxtofl@val
 11796  0000BA  C002  F00A         	movff	?i2___awdiv+1,i2___xxtofl@val+1
 11797  0000BE  0E00               	movlw	0
 11798  0000C0  BE0A               	btfsc	i2___xxtofl@val+1,7,c
 11799  0000C2  0EFF               	movlw	-1
 11800  0000C4  6E0B               	movwf	i2___xxtofl@val+2,c
 11801  0000C6  6E0C               	movwf	i2___xxtofl@val+3,c
 11802  0000C8  0E01               	movlw	1
 11803  0000CA  EC74  F019         	call	i2___xxtofl
 11804  0000CE  C009  F01B         	movff	?i2___xxtofl,i2___fladd@a
 11805  0000D2  C00A  F01C         	movff	?i2___xxtofl+1,i2___fladd@a+1
 11806  0000D6  C00B  F01D         	movff	?i2___xxtofl+2,i2___fladd@a+2
 11807  0000DA  C00C  F01E         	movff	?i2___xxtofl+3,i2___fladd@a+3
 11808  0000DE  ECF6  F012         	call	i2___fladd	;wreg free
 11809  0000E2  C017  F034         	movff	?i2___fladd,_distancia
 11810  0000E6  C018  F035         	movff	?i2___fladd+1,_distancia+1
 11811  0000EA  C019  F036         	movff	?i2___fladd+2,_distancia+2
 11812  0000EE  C01A  F037         	movff	?i2___fladd+3,_distancia+3
 11813                           
 11814                           ;auto.c: 82:             contador_datos = 0;
 11815  0000F2  0E00               	movlw	0
 11816  0000F4  6E3E               	movwf	_contador_datos,c
 11817                           
 11818                           ;auto.c: 83:         }
 11819  0000F6  D01E               	goto	i2l206
 11820  0000F8                     i2l5633:
 11821                           
 11822                           ;auto.c: 85:             distancia = 256*(RCREG2)/10;
 11823  0000F8  0E00               	movlw	0
 11824  0000FA  6E04               	movwf	i2___awdiv@divisor+1,c
 11825  0000FC  0E0A               	movlw	10
 11826  0000FE  6E03               	movwf	i2___awdiv@divisor,c
 11827  000100  50AA               	movf	4010,w,c	;volatile
 11828  000102  6E02               	movwf	i2___awdiv@dividend+1,c
 11829  000104  6A01               	clrf	i2___awdiv@dividend,c
 11830  000106  EC4C  F01E         	call	i2___awdiv	;wreg free
 11831  00010A  C001  F009         	movff	?i2___awdiv,i2___xxtofl@val
 11832  00010E  C002  F00A         	movff	?i2___awdiv+1,i2___xxtofl@val+1
 11833  000112  0E00               	movlw	0
 11834  000114  BE0A               	btfsc	i2___xxtofl@val+1,7,c
 11835  000116  0EFF               	movlw	-1
 11836  000118  6E0B               	movwf	i2___xxtofl@val+2,c
 11837  00011A  6E0C               	movwf	i2___xxtofl@val+3,c
 11838  00011C  0E01               	movlw	1
 11839  00011E  EC74  F019         	call	i2___xxtofl
 11840  000122  C009  F034         	movff	?i2___xxtofl,_distancia
 11841  000126  C00A  F035         	movff	?i2___xxtofl+1,_distancia+1
 11842  00012A  C00B  F036         	movff	?i2___xxtofl+2,_distancia+2
 11843  00012E  C00C  F037         	movff	?i2___xxtofl+3,_distancia+3
 11844                           
 11845                           ;auto.c: 86:             contador_datos ++;
 11846  000132  2A3E               	incf	_contador_datos,f,c
 11847  000134                     i2l206:
 11848  000134  C02A  FFDA         	movff	??_rutina+3,fsr2h
 11849  000138  C029  FFD9         	movff	??_rutina+2,fsr2l
 11850  00013C  9255               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11851  00013E  0011               	retfie		f
 11852  000140                     __end_of_rutina:
 11853                           	opt callstack 0
 11854                           
 11855 ;; *************** function i2___xxtofl *****************
 11856 ;; Defined at:
 11857 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;  sign            1    wreg     unsigned char 
 11860 ;;  val             4    8[COMRAM] long 
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;  sign            1   16[COMRAM] unsigned char 
 11863 ;;  __xxtofl        4   18[COMRAM] unsigned long 
 11864 ;;  __xxtofl        1   17[COMRAM] unsigned char 
 11865 ;; Return value:  Size  Location     Type
 11866 ;;                  4    8[COMRAM] unsigned char 
 11867 ;; Registers used:
 11868 ;;		wreg, status,2, status,0
 11869 ;; Tracked objects:
 11870 ;;		On entry : 0/0
 11871 ;;		On exit  : 0/0
 11872 ;;		Unchanged: 0/0
 11873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11875 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11876 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11877 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11878 ;;Total ram usage:       14 bytes
 11879 ;; Hardware stack levels used:    1
 11880 ;; This function calls:
 11881 ;;		Nothing
 11882 ;; This function is called by:
 11883 ;;		_rutina
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           
 11887                           	psect	text58
 11888  0032E8                     __ptext58:
 11889                           	opt callstack 0
 11890  0032E8                     i2___xxtofl:
 11891                           	opt callstack 20
 11892                           
 11893                           ;incstack = 0
 11894                           ;i2___xxtofl@sign stored from wreg
 11895  0032E8  6E11               	movwf	i2___xxtofl@sign,c
 11896  0032EA  5011               	movf	i2___xxtofl@sign,w,c
 11897  0032EC  A4D8               	btfss	status,2,c
 11898  0032EE  AE0C               	btfss	i2___xxtofl@val+3,7,c
 11899  0032F0  D01A               	goto	i2l1174
 11900  0032F2  C009  F00D         	movff	i2___xxtofl@val,??i2___xxtofl
 11901  0032F6  C00A  F00E         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 11902  0032FA  C00B  F00F         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 11903  0032FE  C00C  F010         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 11904  003302  1E0D               	comf	??i2___xxtofl,f,c
 11905  003304  1E0E               	comf	??i2___xxtofl+1,f,c
 11906  003306  1E0F               	comf	??i2___xxtofl+2,f,c
 11907  003308  1E10               	comf	??i2___xxtofl+3,f,c
 11908  00330A  2A0D               	incf	??i2___xxtofl,f,c
 11909  00330C  0E00               	movlw	0
 11910  00330E  220E               	addwfc	??i2___xxtofl+1,f,c
 11911  003310  220F               	addwfc	??i2___xxtofl+2,f,c
 11912  003312  2210               	addwfc	??i2___xxtofl+3,f,c
 11913  003314  C00D  F013         	movff	??i2___xxtofl,i2___xxtofl@arg
 11914  003318  C00E  F014         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 11915  00331C  C00F  F015         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 11916  003320  C010  F016         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 11917  003324  D008               	goto	i2l5557
 11918  003326                     i2l1174:
 11919  003326  C009  F013         	movff	i2___xxtofl@val,i2___xxtofl@arg
 11920  00332A  C00A  F014         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 11921  00332E  C00B  F015         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 11922  003332  C00C  F016         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 11923  003336                     i2l5557:
 11924  003336  5009               	movf	i2___xxtofl@val,w,c
 11925  003338  100A               	iorwf	i2___xxtofl@val+1,w,c
 11926  00333A  100B               	iorwf	i2___xxtofl@val+2,w,c
 11927  00333C  100C               	iorwf	i2___xxtofl@val+3,w,c
 11928  00333E  A4D8               	btfss	status,2,c
 11929  003340  D009               	goto	i2l5563
 11930  003342  0E00               	movlw	0
 11931  003344  6E09               	movwf	?i2___xxtofl,c
 11932  003346  0E00               	movlw	0
 11933  003348  6E0A               	movwf	?i2___xxtofl+1,c
 11934  00334A  0E00               	movlw	0
 11935  00334C  6E0B               	movwf	?i2___xxtofl+2,c
 11936  00334E  0E00               	movlw	0
 11937  003350  6E0C               	movwf	?i2___xxtofl+3,c
 11938  003352  0012               	return	
 11939  003354                     i2l5563:
 11940  003354  0E96               	movlw	150
 11941  003356  6E12               	movwf	i2___xxtofl@exp,c
 11942  003358  D006               	goto	i2l5567
 11943  00335A                     i2l5565:
 11944  00335A  2A12               	incf	i2___xxtofl@exp,f,c
 11945  00335C  90D8               	bcf	status,0,c
 11946  00335E  3216               	rrcf	i2___xxtofl@arg+3,f,c
 11947  003360  3215               	rrcf	i2___xxtofl@arg+2,f,c
 11948  003362  3214               	rrcf	i2___xxtofl@arg+1,f,c
 11949  003364  3213               	rrcf	i2___xxtofl@arg,f,c
 11950  003366                     i2l5567:
 11951  003366  0E00               	movlw	0
 11952  003368  1413               	andwf	i2___xxtofl@arg,w,c
 11953  00336A  6E0D               	movwf	??i2___xxtofl& (0+255),c
 11954  00336C  0E00               	movlw	0
 11955  00336E  1414               	andwf	i2___xxtofl@arg+1,w,c
 11956  003370  6E0E               	movwf	(??i2___xxtofl+1)& (0+255),c
 11957  003372  0E00               	movlw	0
 11958  003374  1415               	andwf	i2___xxtofl@arg+2,w,c
 11959  003376  6E0F               	movwf	(??i2___xxtofl+2)& (0+255),c
 11960  003378  0EFE               	movlw	254
 11961  00337A  1416               	andwf	i2___xxtofl@arg+3,w,c
 11962  00337C  6E10               	movwf	(??i2___xxtofl+3)& (0+255),c
 11963  00337E  500D               	movf	??i2___xxtofl,w,c
 11964  003380  100E               	iorwf	??i2___xxtofl+1,w,c
 11965  003382  100F               	iorwf	??i2___xxtofl+2,w,c
 11966  003384  1010               	iorwf	??i2___xxtofl+3,w,c
 11967  003386  B4D8               	btfsc	status,2,c
 11968  003388  D00D               	goto	i2l1181
 11969  00338A  D7E7               	goto	i2l5565
 11970  00338C                     i2l5569:
 11971  00338C  2A12               	incf	i2___xxtofl@exp,f,c
 11972  00338E  0E01               	movlw	1
 11973  003390  2613               	addwf	i2___xxtofl@arg,f,c
 11974  003392  0E00               	movlw	0
 11975  003394  2214               	addwfc	i2___xxtofl@arg+1,f,c
 11976  003396  2215               	addwfc	i2___xxtofl@arg+2,f,c
 11977  003398  2216               	addwfc	i2___xxtofl@arg+3,f,c
 11978  00339A  90D8               	bcf	status,0,c
 11979  00339C  3216               	rrcf	i2___xxtofl@arg+3,f,c
 11980  00339E  3215               	rrcf	i2___xxtofl@arg+2,f,c
 11981  0033A0  3214               	rrcf	i2___xxtofl@arg+1,f,c
 11982  0033A2  3213               	rrcf	i2___xxtofl@arg,f,c
 11983  0033A4                     i2l1181:
 11984  0033A4  0E00               	movlw	0
 11985  0033A6  1413               	andwf	i2___xxtofl@arg,w,c
 11986  0033A8  6E0D               	movwf	??i2___xxtofl& (0+255),c
 11987  0033AA  0E00               	movlw	0
 11988  0033AC  1414               	andwf	i2___xxtofl@arg+1,w,c
 11989  0033AE  6E0E               	movwf	(??i2___xxtofl+1)& (0+255),c
 11990  0033B0  0E00               	movlw	0
 11991  0033B2  1415               	andwf	i2___xxtofl@arg+2,w,c
 11992  0033B4  6E0F               	movwf	(??i2___xxtofl+2)& (0+255),c
 11993  0033B6  0EFF               	movlw	255
 11994  0033B8  1416               	andwf	i2___xxtofl@arg+3,w,c
 11995  0033BA  6E10               	movwf	(??i2___xxtofl+3)& (0+255),c
 11996  0033BC  500D               	movf	??i2___xxtofl,w,c
 11997  0033BE  100E               	iorwf	??i2___xxtofl+1,w,c
 11998  0033C0  100F               	iorwf	??i2___xxtofl+2,w,c
 11999  0033C2  1010               	iorwf	??i2___xxtofl+3,w,c
 12000  0033C4  B4D8               	btfsc	status,2,c
 12001  0033C6  D007               	goto	i2l5577
 12002  0033C8  D7E1               	goto	i2l5569
 12003  0033CA                     i2l5575:
 12004  0033CA  0612               	decf	i2___xxtofl@exp,f,c
 12005  0033CC  90D8               	bcf	status,0,c
 12006  0033CE  3613               	rlcf	i2___xxtofl@arg,f,c
 12007  0033D0  3614               	rlcf	i2___xxtofl@arg+1,f,c
 12008  0033D2  3615               	rlcf	i2___xxtofl@arg+2,f,c
 12009  0033D4  3616               	rlcf	i2___xxtofl@arg+3,f,c
 12010  0033D6                     i2l5577:
 12011  0033D6  BE15               	btfsc	i2___xxtofl@arg+2,7,c
 12012  0033D8  D003               	goto	i2u668_40
 12013  0033DA  0E02               	movlw	2
 12014  0033DC  6012               	cpfslt	i2___xxtofl@exp,c
 12015  0033DE  D7F5               	goto	i2l5575
 12016  0033E0                     i2u668_40:
 12017  0033E0  A012               	btfss	i2___xxtofl@exp,0,c
 12018  0033E2  9E15               	bcf	i2___xxtofl@arg+2,7,c
 12019  0033E4  90D8               	bcf	status,0,c
 12020  0033E6  3212               	rrcf	i2___xxtofl@exp,f,c
 12021  0033E8  C012  F00D         	movff	i2___xxtofl@exp,??i2___xxtofl
 12022  0033EC  6A0E               	clrf	(??i2___xxtofl+1)& (0+255),c
 12023  0033EE  6A0F               	clrf	(??i2___xxtofl+2)& (0+255),c
 12024  0033F0  6A10               	clrf	(??i2___xxtofl+3)& (0+255),c
 12025  0033F2  C00D  F010         	movff	??i2___xxtofl,??i2___xxtofl+3
 12026  0033F6  6A0F               	clrf	??i2___xxtofl+2,c
 12027  0033F8  6A0E               	clrf	??i2___xxtofl+1,c
 12028  0033FA  6A0D               	clrf	??i2___xxtofl,c
 12029  0033FC  500D               	movf	??i2___xxtofl,w,c
 12030  0033FE  1213               	iorwf	i2___xxtofl@arg,f,c
 12031  003400  500E               	movf	??i2___xxtofl+1,w,c
 12032  003402  1214               	iorwf	i2___xxtofl@arg+1,f,c
 12033  003404  500F               	movf	??i2___xxtofl+2,w,c
 12034  003406  1215               	iorwf	i2___xxtofl@arg+2,f,c
 12035  003408  5010               	movf	??i2___xxtofl+3,w,c
 12036  00340A  1216               	iorwf	i2___xxtofl@arg+3,f,c
 12037  00340C  5011               	movf	i2___xxtofl@sign,w,c
 12038  00340E  A4D8               	btfss	status,2,c
 12039  003410  AE0C               	btfss	i2___xxtofl@val+3,7,c
 12040  003412  D001               	goto	i2l5593
 12041  003414  8E16               	bsf	i2___xxtofl@arg+3,7,c
 12042  003416                     i2l5593:
 12043  003416  C013  F009         	movff	i2___xxtofl@arg,?i2___xxtofl
 12044  00341A  C014  F00A         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 12045  00341E  C015  F00B         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 12046  003422  C016  F00C         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 12047  003426  0012               	return		;funcret
 12048  003428                     __end_ofi2___xxtofl:
 12049                           	opt callstack 0
 12050                           
 12051 ;; *************** function i2___fladd *****************
 12052 ;; Defined at:
 12053 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12054 ;; Parameters:    Size  Location     Type
 12055 ;;  b               4   22[COMRAM] unsigned char 
 12056 ;;  a               4   26[COMRAM] unsigned char 
 12057 ;; Auto vars:     Size  Location     Type
 12058 ;;  __fladd         1   37[COMRAM] unsigned char 
 12059 ;;  __fladd         1   36[COMRAM] unsigned char 
 12060 ;;  __fladd         1   35[COMRAM] unsigned char 
 12061 ;;  __fladd         1   34[COMRAM] unsigned char 
 12062 ;; Return value:  Size  Location     Type
 12063 ;;                  4   22[COMRAM] unsigned char 
 12064 ;; Registers used:
 12065 ;;		wreg, status,2, status,0
 12066 ;; Tracked objects:
 12067 ;;		On entry : 0/0
 12068 ;;		On exit  : 0/0
 12069 ;;		Unchanged: 0/0
 12070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12071 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12072 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12073 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12074 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12075 ;;Total ram usage:       16 bytes
 12076 ;; Hardware stack levels used:    1
 12077 ;; This function calls:
 12078 ;;		Nothing
 12079 ;; This function is called by:
 12080 ;;		_rutina
 12081 ;; This function uses a non-reentrant model
 12082 ;;
 12083                           
 12084                           	psect	text59
 12085  0025EC                     __ptext59:
 12086                           	opt callstack 0
 12087  0025EC                     i2___fladd:
 12088                           	opt callstack 20
 12089                           
 12090                           ;incstack = 0
 12091  0025EC  501A               	movf	i2___fladd@b+3,w,c
 12092  0025EE  0B80               	andlw	128
 12093  0025F0  6E23               	movwf	i2___fladd@signs,c
 12094  0025F2  501A               	movf	i2___fladd@b+3,w,c
 12095  0025F4  241A               	addwf	i2___fladd@b+3,w,c
 12096  0025F6  6E25               	movwf	i2___fladd@bexp,c
 12097  0025F8  BE19               	btfsc	i2___fladd@b+2,7,c
 12098  0025FA  8025               	bsf	i2___fladd@bexp,0,c
 12099  0025FC  5025               	movf	i2___fladd@bexp,w,c
 12100  0025FE  B4D8               	btfsc	status,2,c
 12101  002600  D00D               	goto	i2l5365
 12102  002602  2825               	incf	i2___fladd@bexp,w,c
 12103  002604  A4D8               	btfss	status,2,c
 12104  002606  D008               	goto	i2l5361
 12105  002608  0E00               	movlw	0
 12106  00260A  6E17               	movwf	i2___fladd@b,c
 12107  00260C  0E00               	movlw	0
 12108  00260E  6E18               	movwf	i2___fladd@b+1,c
 12109  002610  0E00               	movlw	0
 12110  002612  6E19               	movwf	i2___fladd@b+2,c
 12111  002614  0E00               	movlw	0
 12112  002616  6E1A               	movwf	i2___fladd@b+3,c
 12113  002618                     i2l5361:
 12114  002618  8E19               	bsf	i2___fladd@b+2,7,c
 12115  00261A  D006               	goto	L20
 12116  00261C                     i2l5365:
 12117  00261C  0E00               	movlw	0
 12118  00261E  6E17               	movwf	i2___fladd@b,c
 12119  002620  0E00               	movlw	0
 12120  002622  6E18               	movwf	i2___fladd@b+1,c
 12121  002624  0E00               	movlw	0
 12122  002626  6E19               	movwf	i2___fladd@b+2,c
 12123  002628                     L20:
 12124  002628  0E00               	movlw	0
 12125  00262A  6E1A               	movwf	i2___fladd@b+3,c
 12126  00262C  501E               	movf	i2___fladd@a+3,w,c
 12127  00262E  0B80               	andlw	128
 12128  002630  6E24               	movwf	i2___fladd@aexp,c
 12129  002632  5023               	movf	i2___fladd@signs,w,c
 12130  002634  1824               	xorwf	i2___fladd@aexp,w,c
 12131  002636  A4D8               	btfss	status,2,c
 12132  002638  8C23               	bsf	i2___fladd@signs,6,c
 12133  00263A  501E               	movf	i2___fladd@a+3,w,c
 12134  00263C  241E               	addwf	i2___fladd@a+3,w,c
 12135  00263E  6E24               	movwf	i2___fladd@aexp,c
 12136  002640  BE1D               	btfsc	i2___fladd@a+2,7,c
 12137  002642  8024               	bsf	i2___fladd@aexp,0,c
 12138  002644  5024               	movf	i2___fladd@aexp,w,c
 12139  002646  B4D8               	btfsc	status,2,c
 12140  002648  D00D               	goto	i2l5389
 12141  00264A  2824               	incf	i2___fladd@aexp,w,c
 12142  00264C  A4D8               	btfss	status,2,c
 12143  00264E  D008               	goto	i2l5385
 12144  002650  0E00               	movlw	0
 12145  002652  6E1B               	movwf	i2___fladd@a,c
 12146  002654  0E00               	movlw	0
 12147  002656  6E1C               	movwf	i2___fladd@a+1,c
 12148  002658  0E00               	movlw	0
 12149  00265A  6E1D               	movwf	i2___fladd@a+2,c
 12150  00265C  0E00               	movlw	0
 12151  00265E  6E1E               	movwf	i2___fladd@a+3,c
 12152  002660                     i2l5385:
 12153  002660  8E1D               	bsf	i2___fladd@a+2,7,c
 12154  002662  D006               	goto	L21
 12155  002664                     i2l5389:
 12156  002664  0E00               	movlw	0
 12157  002666  6E1B               	movwf	i2___fladd@a,c
 12158  002668  0E00               	movlw	0
 12159  00266A  6E1C               	movwf	i2___fladd@a+1,c
 12160  00266C  0E00               	movlw	0
 12161  00266E  6E1D               	movwf	i2___fladd@a+2,c
 12162  002670                     L21:
 12163  002670  0E00               	movlw	0
 12164  002672  6E1E               	movwf	i2___fladd@a+3,c
 12165  002674  5025               	movf	i2___fladd@bexp,w,c
 12166  002676  5C24               	subwf	i2___fladd@aexp,w,c
 12167  002678  B0D8               	btfsc	status,0,c
 12168  00267A  D022               	goto	i2l5427
 12169  00267C  AC23               	btfss	i2___fladd@signs,6,c
 12170  00267E  D002               	goto	i2l5397
 12171  002680  0E80               	movlw	128
 12172  002682  1A23               	xorwf	i2___fladd@signs,f,c
 12173  002684                     i2l5397:
 12174  002684  C025  F026         	movff	i2___fladd@bexp,i2___fladd@grs
 12175  002688  C024  F025         	movff	i2___fladd@aexp,i2___fladd@bexp
 12176  00268C  C026  F024         	movff	i2___fladd@grs,i2___fladd@aexp
 12177  002690  C017  F026         	movff	i2___fladd@b,i2___fladd@grs
 12178  002694  C01B  F017         	movff	i2___fladd@a,i2___fladd@b
 12179  002698  C026  F01B         	movff	i2___fladd@grs,i2___fladd@a
 12180  00269C  C018  F026         	movff	i2___fladd@b+1,i2___fladd@grs
 12181  0026A0  C01C  F018         	movff	i2___fladd@a+1,i2___fladd@b+1
 12182  0026A4  C026  F01C         	movff	i2___fladd@grs,i2___fladd@a+1
 12183  0026A8  C019  F026         	movff	i2___fladd@b+2,i2___fladd@grs
 12184  0026AC  C01D  F019         	movff	i2___fladd@a+2,i2___fladd@b+2
 12185  0026B0  C026  F01D         	movff	i2___fladd@grs,i2___fladd@a+2
 12186  0026B4  C01A  F026         	movff	i2___fladd@b+3,i2___fladd@grs
 12187  0026B8  C01E  F01A         	movff	i2___fladd@a+3,i2___fladd@b+3
 12188  0026BC  C026  F01E         	movff	i2___fladd@grs,i2___fladd@a+3
 12189  0026C0                     i2l5427:
 12190  0026C0  0E00               	movlw	0
 12191  0026C2  6E26               	movwf	i2___fladd@grs,c
 12192  0026C4  5025               	movf	i2___fladd@bexp,w,c
 12193  0026C6  C024  F01F         	movff	i2___fladd@aexp,??i2___fladd
 12194  0026CA  6A20               	clrf	(??i2___fladd+1)& (0+255),c
 12195  0026CC  5E1F               	subwf	??i2___fladd,f,c
 12196  0026CE  0E00               	movlw	0
 12197  0026D0  5A20               	subwfb	??i2___fladd+1,f,c
 12198  0026D2  BE20               	btfsc	??i2___fladd+1,7,c
 12199  0026D4  D02C               	goto	i2l1048
 12200  0026D6  5020               	movf	??i2___fladd+1,w,c
 12201  0026D8  E104               	bnz	i2u632_40
 12202  0026DA  0E1A               	movlw	26
 12203  0026DC  5C1F               	subwf	??i2___fladd,w,c
 12204  0026DE  A0D8               	btfss	status,0,c
 12205  0026E0  D026               	goto	i2l1048
 12206  0026E2                     i2u632_40:
 12207  0026E2  5017               	movf	i2___fladd@b,w,c
 12208  0026E4  1018               	iorwf	i2___fladd@b+1,w,c
 12209  0026E6  1019               	iorwf	i2___fladd@b+2,w,c
 12210  0026E8  101A               	iorwf	i2___fladd@b+3,w,c
 12211  0026EA  B4D8               	btfsc	status,2,c
 12212  0026EC  D002               	goto	i2u633_40
 12213  0026EE  0E01               	movlw	1
 12214  0026F0  D001               	goto	i2u634_40
 12215  0026F2                     i2u633_40:
 12216  0026F2  0E00               	movlw	0
 12217  0026F4                     i2u634_40:
 12218  0026F4  6E26               	movwf	i2___fladd@grs,c
 12219  0026F6  0E00               	movlw	0
 12220  0026F8  6E17               	movwf	i2___fladd@b,c
 12221  0026FA  0E00               	movlw	0
 12222  0026FC  6E18               	movwf	i2___fladd@b+1,c
 12223  0026FE  0E00               	movlw	0
 12224  002700  6E19               	movwf	i2___fladd@b+2,c
 12225  002702  0E00               	movlw	0
 12226  002704  6E1A               	movwf	i2___fladd@b+3,c
 12227  002706  C024  F025         	movff	i2___fladd@aexp,i2___fladd@bexp
 12228  00270A  D015               	goto	i2u637_40
 12229  00270C                     i2l1049:
 12230  00270C  A026               	btfss	i2___fladd@grs,0,c
 12231  00270E  D005               	goto	i2l5439
 12232  002710  90D8               	bcf	status,0,c
 12233  002712  3026               	rrcf	i2___fladd@grs,w,c
 12234  002714  0901               	iorlw	1
 12235  002716  6E26               	movwf	i2___fladd@grs,c
 12236  002718  D002               	goto	i2l5441
 12237  00271A                     i2l5439:
 12238  00271A  90D8               	bcf	status,0,c
 12239  00271C  3226               	rrcf	i2___fladd@grs,f,c
 12240  00271E                     i2l5441:
 12241  00271E  B017               	btfsc	i2___fladd@b,0,c
 12242  002720  8E26               	bsf	i2___fladd@grs,7,c
 12243  002722  341A               	rlcf	i2___fladd@b+3,w,c
 12244  002724  321A               	rrcf	i2___fladd@b+3,f,c
 12245  002726  3219               	rrcf	i2___fladd@b+2,f,c
 12246  002728  3218               	rrcf	i2___fladd@b+1,f,c
 12247  00272A  3217               	rrcf	i2___fladd@b,f,c
 12248  00272C  2A25               	incf	i2___fladd@bexp,f,c
 12249  00272E                     i2l1048:
 12250  00272E  5024               	movf	i2___fladd@aexp,w,c
 12251  002730  5C25               	subwf	i2___fladd@bexp,w,c
 12252  002732  A0D8               	btfss	status,0,c
 12253  002734  D7EB               	goto	i2l1049
 12254  002736                     i2u637_40:
 12255  002736  BC23               	btfsc	i2___fladd@signs,6,c
 12256  002738  D028               	goto	i2l5473
 12257  00273A  5025               	movf	i2___fladd@bexp,w,c
 12258  00273C  A4D8               	btfss	status,2,c
 12259  00273E  D009               	goto	i2l5455
 12260  002740  0E00               	movlw	0
 12261  002742  6E17               	movwf	?i2___fladd,c
 12262  002744  0E00               	movlw	0
 12263  002746  6E18               	movwf	?i2___fladd+1,c
 12264  002748  0E00               	movlw	0
 12265  00274A  6E19               	movwf	?i2___fladd+2,c
 12266  00274C  0E00               	movlw	0
 12267  00274E  6E1A               	movwf	?i2___fladd+3,c
 12268  002750  0012               	return	
 12269  002752                     i2l5455:
 12270  002752  501B               	movf	i2___fladd@a,w,c
 12271  002754  2617               	addwf	i2___fladd@b,f,c
 12272  002756  501C               	movf	i2___fladd@a+1,w,c
 12273  002758  2218               	addwfc	i2___fladd@b+1,f,c
 12274  00275A  501D               	movf	i2___fladd@a+2,w,c
 12275  00275C  2219               	addwfc	i2___fladd@b+2,f,c
 12276  00275E  501E               	movf	i2___fladd@a+3,w,c
 12277  002760  221A               	addwfc	i2___fladd@b+3,f,c
 12278  002762  A01A               	btfss	i2___fladd@b+3,0,c
 12279  002764  D071               	goto	i2u650_40
 12280  002766  A026               	btfss	i2___fladd@grs,0,c
 12281  002768  D005               	goto	i2l5463
 12282  00276A  90D8               	bcf	status,0,c
 12283  00276C  3026               	rrcf	i2___fladd@grs,w,c
 12284  00276E  0901               	iorlw	1
 12285  002770  6E26               	movwf	i2___fladd@grs,c
 12286  002772  D002               	goto	i2l5465
 12287  002774                     i2l5463:
 12288  002774  90D8               	bcf	status,0,c
 12289  002776  3226               	rrcf	i2___fladd@grs,f,c
 12290  002778                     i2l5465:
 12291  002778  B017               	btfsc	i2___fladd@b,0,c
 12292  00277A  8E26               	bsf	i2___fladd@grs,7,c
 12293  00277C  341A               	rlcf	i2___fladd@b+3,w,c
 12294  00277E  321A               	rrcf	i2___fladd@b+3,f,c
 12295  002780  3219               	rrcf	i2___fladd@b+2,f,c
 12296  002782  3218               	rrcf	i2___fladd@b+1,f,c
 12297  002784  3217               	rrcf	i2___fladd@b,f,c
 12298  002786  2A25               	incf	i2___fladd@bexp,f,c
 12299  002788  D05F               	goto	i2u650_40
 12300  00278A                     i2l5473:
 12301  00278A  501B               	movf	i2___fladd@a,w,c
 12302  00278C  5C17               	subwf	i2___fladd@b,w,c
 12303  00278E  501C               	movf	i2___fladd@a+1,w,c
 12304  002790  5818               	subwfb	i2___fladd@b+1,w,c
 12305  002792  501D               	movf	i2___fladd@a+2,w,c
 12306  002794  5819               	subwfb	i2___fladd@b+2,w,c
 12307  002796  501A               	movf	i2___fladd@b+3,w,c
 12308  002798  0A80               	xorlw	128
 12309  00279A  6E1F               	movwf	??i2___fladd& (0+255),c
 12310  00279C  501E               	movf	i2___fladd@a+3,w,c
 12311  00279E  0A80               	xorlw	128
 12312  0027A0  581F               	subwfb	??i2___fladd& (0+255),w,c
 12313  0027A2  B0D8               	btfsc	status,0,c
 12314  0027A4  D025               	goto	i2l5483
 12315  0027A6  5017               	movf	i2___fladd@b,w,c
 12316  0027A8  5C1B               	subwf	i2___fladd@a,w,c
 12317  0027AA  6E1F               	movwf	??i2___fladd& (0+255),c
 12318  0027AC  5018               	movf	i2___fladd@b+1,w,c
 12319  0027AE  581C               	subwfb	i2___fladd@a+1,w,c
 12320  0027B0  6E20               	movwf	(??i2___fladd+1)& (0+255),c
 12321  0027B2  5019               	movf	i2___fladd@b+2,w,c
 12322  0027B4  581D               	subwfb	i2___fladd@a+2,w,c
 12323  0027B6  6E21               	movwf	(??i2___fladd+2)& (0+255),c
 12324  0027B8  501A               	movf	i2___fladd@b+3,w,c
 12325  0027BA  581E               	subwfb	i2___fladd@a+3,w,c
 12326  0027BC  6E22               	movwf	(??i2___fladd+3)& (0+255),c
 12327  0027BE  0EFF               	movlw	255
 12328  0027C0  241F               	addwf	??i2___fladd,w,c
 12329  0027C2  6E17               	movwf	i2___fladd@b,c
 12330  0027C4  0EFF               	movlw	255
 12331  0027C6  2020               	addwfc	??i2___fladd+1,w,c
 12332  0027C8  6E18               	movwf	i2___fladd@b+1,c
 12333  0027CA  0EFF               	movlw	255
 12334  0027CC  2021               	addwfc	??i2___fladd+2,w,c
 12335  0027CE  6E19               	movwf	i2___fladd@b+2,c
 12336  0027D0  0EFF               	movlw	255
 12337  0027D2  2022               	addwfc	??i2___fladd+3,w,c
 12338  0027D4  6E1A               	movwf	i2___fladd@b+3,c
 12339  0027D6  0E80               	movlw	128
 12340  0027D8  1A23               	xorwf	i2___fladd@signs,f,c
 12341  0027DA  6C26               	negf	i2___fladd@grs,c
 12342  0027DC  5026               	movf	i2___fladd@grs,w,c
 12343  0027DE  A4D8               	btfss	status,2,c
 12344  0027E0  D00F               	goto	i2l1064
 12345  0027E2  0E01               	movlw	1
 12346  0027E4  2617               	addwf	i2___fladd@b,f,c
 12347  0027E6  0E00               	movlw	0
 12348  0027E8  2218               	addwfc	i2___fladd@b+1,f,c
 12349  0027EA  2219               	addwfc	i2___fladd@b+2,f,c
 12350  0027EC  221A               	addwfc	i2___fladd@b+3,f,c
 12351  0027EE  D008               	goto	i2l1064
 12352  0027F0                     i2l5483:
 12353  0027F0  501B               	movf	i2___fladd@a,w,c
 12354  0027F2  5E17               	subwf	i2___fladd@b,f,c
 12355  0027F4  501C               	movf	i2___fladd@a+1,w,c
 12356  0027F6  5A18               	subwfb	i2___fladd@b+1,f,c
 12357  0027F8  501D               	movf	i2___fladd@a+2,w,c
 12358  0027FA  5A19               	subwfb	i2___fladd@b+2,f,c
 12359  0027FC  501E               	movf	i2___fladd@a+3,w,c
 12360  0027FE  5A1A               	subwfb	i2___fladd@b+3,f,c
 12361  002800                     i2l1064:
 12362  002800  5017               	movf	i2___fladd@b,w,c
 12363  002802  1018               	iorwf	i2___fladd@b+1,w,c
 12364  002804  1019               	iorwf	i2___fladd@b+2,w,c
 12365  002806  101A               	iorwf	i2___fladd@b+3,w,c
 12366  002808  A4D8               	btfss	status,2,c
 12367  00280A  D01C               	goto	i2l5507
 12368  00280C  5026               	movf	i2___fladd@grs,w,c
 12369  00280E  A4D8               	btfss	status,2,c
 12370  002810  D019               	goto	i2l5507
 12371  002812  0E00               	movlw	0
 12372  002814  6E17               	movwf	?i2___fladd,c
 12373  002816  0E00               	movlw	0
 12374  002818  6E18               	movwf	?i2___fladd+1,c
 12375  00281A  0E00               	movlw	0
 12376  00281C  6E19               	movwf	?i2___fladd+2,c
 12377  00281E  0E00               	movlw	0
 12378  002820  6E1A               	movwf	?i2___fladd+3,c
 12379  002822  0012               	return	
 12380  002824                     i2l5491:
 12381  002824  90D8               	bcf	status,0,c
 12382  002826  3617               	rlcf	i2___fladd@b,f,c
 12383  002828  3618               	rlcf	i2___fladd@b+1,f,c
 12384  00282A  3619               	rlcf	i2___fladd@b+2,f,c
 12385  00282C  361A               	rlcf	i2___fladd@b+3,f,c
 12386  00282E  BE26               	btfsc	i2___fladd@grs,7,c
 12387  002830  8017               	bsf	i2___fladd@b,0,c
 12388  002832  A026               	btfss	i2___fladd@grs,0,c
 12389  002834  D002               	goto	i2l5501
 12390  002836  80D8               	bsf	status,0,c
 12391  002838  D001               	goto	L22
 12392  00283A                     i2l5501:
 12393  00283A  90D8               	bcf	status,0,c
 12394  00283C                     L22:
 12395  00283C  3626               	rlcf	i2___fladd@grs,f,c
 12396  00283E  5025               	movf	i2___fladd@bexp,w,c
 12397  002840  A4D8               	btfss	status,2,c
 12398  002842  0625               	decf	i2___fladd@bexp,f,c
 12399  002844                     i2l5507:
 12400  002844  AE19               	btfss	i2___fladd@b+2,7,c
 12401  002846  D7EE               	goto	i2l5491
 12402  002848                     i2u650_40:
 12403  002848  0E00               	movlw	0
 12404  00284A  6E24               	movwf	i2___fladd@aexp,c
 12405  00284C  AE26               	btfss	i2___fladd@grs,7,c
 12406  00284E  D00B               	goto	i2l1073
 12407  002850  C026  F01F         	movff	i2___fladd@grs,??i2___fladd
 12408  002854  0E7F               	movlw	127
 12409  002856  161F               	andwf	??i2___fladd,f,c
 12410  002858  B4D8               	btfsc	status,2,c
 12411  00285A  D003               	goto	i2l1074
 12412  00285C                     i2u652_40:
 12413  00285C  0E01               	movlw	1
 12414  00285E  6E24               	movwf	i2___fladd@aexp,c
 12415  002860  D002               	goto	i2l1073
 12416  002862                     i2l1074:
 12417  002862  B017               	btfsc	i2___fladd@b,0,c
 12418  002864  D7FB               	goto	i2u652_40
 12419  002866                     i2l1073:
 12420  002866  5024               	movf	i2___fladd@aexp,w,c
 12421  002868  B4D8               	btfsc	status,2,c
 12422  00286A  D020               	goto	i2l5527
 12423  00286C  0E01               	movlw	1
 12424  00286E  2617               	addwf	i2___fladd@b,f,c
 12425  002870  0E00               	movlw	0
 12426  002872  2218               	addwfc	i2___fladd@b+1,f,c
 12427  002874  2219               	addwfc	i2___fladd@b+2,f,c
 12428  002876  221A               	addwfc	i2___fladd@b+3,f,c
 12429  002878  A01A               	btfss	i2___fladd@b+3,0,c
 12430  00287A  D018               	goto	i2l5527
 12431  00287C  C017  F01F         	movff	i2___fladd@b,??i2___fladd
 12432  002880  C018  F020         	movff	i2___fladd@b+1,??i2___fladd+1
 12433  002884  C019  F021         	movff	i2___fladd@b+2,??i2___fladd+2
 12434  002888  C01A  F022         	movff	i2___fladd@b+3,??i2___fladd+3
 12435  00288C  3422               	rlcf	??i2___fladd+3,w,c
 12436  00288E  3222               	rrcf	??i2___fladd+3,f,c
 12437  002890  3221               	rrcf	??i2___fladd+2,f,c
 12438  002892  3220               	rrcf	??i2___fladd+1,f,c
 12439  002894  321F               	rrcf	??i2___fladd,f,c
 12440  002896  C01F  F017         	movff	??i2___fladd,i2___fladd@b
 12441  00289A  C020  F018         	movff	??i2___fladd+1,i2___fladd@b+1
 12442  00289E  C021  F019         	movff	??i2___fladd+2,i2___fladd@b+2
 12443  0028A2  C022  F01A         	movff	??i2___fladd+3,i2___fladd@b+3
 12444  0028A6  2825               	incf	i2___fladd@bexp,w,c
 12445  0028A8  A4D8               	btfss	status,2,c
 12446  0028AA  2A25               	incf	i2___fladd@bexp,f,c
 12447  0028AC                     i2l5527:
 12448  0028AC  2825               	incf	i2___fladd@bexp,w,c
 12449  0028AE  B4D8               	btfsc	status,2,c
 12450  0028B0  D003               	goto	i2u658_40
 12451  0028B2  5025               	movf	i2___fladd@bexp,w,c
 12452  0028B4  A4D8               	btfss	status,2,c
 12453  0028B6  D00D               	goto	i2l5535
 12454  0028B8                     i2u658_40:
 12455  0028B8  0E00               	movlw	0
 12456  0028BA  6E17               	movwf	i2___fladd@b,c
 12457  0028BC  0E00               	movlw	0
 12458  0028BE  6E18               	movwf	i2___fladd@b+1,c
 12459  0028C0  0E00               	movlw	0
 12460  0028C2  6E19               	movwf	i2___fladd@b+2,c
 12461  0028C4  0E00               	movlw	0
 12462  0028C6  6E1A               	movwf	i2___fladd@b+3,c
 12463  0028C8  5025               	movf	i2___fladd@bexp,w,c
 12464  0028CA  A4D8               	btfss	status,2,c
 12465  0028CC  D002               	goto	i2l5535
 12466  0028CE  0E00               	movlw	0
 12467  0028D0  6E23               	movwf	i2___fladd@signs,c
 12468  0028D2                     i2l5535:
 12469  0028D2  A025               	btfss	i2___fladd@bexp,0,c
 12470  0028D4  D002               	goto	i2l5539
 12471  0028D6  8E19               	bsf	i2___fladd@b+2,7,c
 12472  0028D8  D001               	goto	i2l5541
 12473  0028DA                     i2l5539:
 12474  0028DA  9E19               	bcf	i2___fladd@b+2,7,c
 12475  0028DC                     i2l5541:
 12476  0028DC  90D8               	bcf	status,0,c
 12477  0028DE  3025               	rrcf	i2___fladd@bexp,w,c
 12478  0028E0  6E1A               	movwf	i2___fladd@b+3,c
 12479  0028E2  BE23               	btfsc	i2___fladd@signs,7,c
 12480  0028E4  8E1A               	bsf	i2___fladd@b+3,7,c
 12481  0028E6  C017  F017         	movff	i2___fladd@b,?i2___fladd
 12482  0028EA  C018  F018         	movff	i2___fladd@b+1,?i2___fladd+1
 12483  0028EE  C019  F019         	movff	i2___fladd@b+2,?i2___fladd+2
 12484  0028F2  C01A  F01A         	movff	i2___fladd@b+3,?i2___fladd+3
 12485  0028F6  0012               	return		;funcret
 12486  0028F8                     __end_ofi2___fladd:
 12487                           	opt callstack 0
 12488                           
 12489 ;; *************** function i2___awdiv *****************
 12490 ;; Defined at:
 12491 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12492 ;; Parameters:    Size  Location     Type
 12493 ;;  dividend        2    0[COMRAM] int 
 12494 ;;  divisor         2    2[COMRAM] int 
 12495 ;; Auto vars:     Size  Location     Type
 12496 ;;  __awdiv         2    6[COMRAM] int 
 12497 ;;  __awdiv         1    5[COMRAM] unsigned char 
 12498 ;;  __awdiv         1    4[COMRAM] unsigned char 
 12499 ;; Return value:  Size  Location     Type
 12500 ;;                  2    0[COMRAM] int 
 12501 ;; Registers used:
 12502 ;;		wreg, status,2, status,0
 12503 ;; Tracked objects:
 12504 ;;		On entry : 0/0
 12505 ;;		On exit  : 0/0
 12506 ;;		Unchanged: 0/0
 12507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12509 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12511 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12512 ;;Total ram usage:        8 bytes
 12513 ;; Hardware stack levels used:    1
 12514 ;; This function calls:
 12515 ;;		Nothing
 12516 ;; This function is called by:
 12517 ;;		_rutina
 12518 ;; This function uses a non-reentrant model
 12519 ;;
 12520                           
 12521                           	psect	text60
 12522  003C98                     __ptext60:
 12523                           	opt callstack 0
 12524  003C98                     i2___awdiv:
 12525                           	opt callstack 20
 12526                           
 12527                           ;incstack = 0
 12528  003C98  0E00               	movlw	0
 12529  003C9A  6E06               	movwf	i2___awdiv@sign,c
 12530  003C9C  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12531  003C9E  D006               	goto	i2l5313
 12532  003CA0  6C03               	negf	i2___awdiv@divisor,c
 12533  003CA2  1E04               	comf	i2___awdiv@divisor+1,f,c
 12534  003CA4  B0D8               	btfsc	status,0,c
 12535  003CA6  2A04               	incf	i2___awdiv@divisor+1,f,c
 12536  003CA8  0E01               	movlw	1
 12537  003CAA  6E06               	movwf	i2___awdiv@sign,c
 12538  003CAC                     i2l5313:
 12539  003CAC  AE02               	btfss	i2___awdiv@dividend+1,7,c
 12540  003CAE  D006               	goto	i2l5319
 12541  003CB0  6C01               	negf	i2___awdiv@dividend,c
 12542  003CB2  1E02               	comf	i2___awdiv@dividend+1,f,c
 12543  003CB4  B0D8               	btfsc	status,0,c
 12544  003CB6  2A02               	incf	i2___awdiv@dividend+1,f,c
 12545  003CB8  0E01               	movlw	1
 12546  003CBA  1A06               	xorwf	i2___awdiv@sign,f,c
 12547  003CBC                     i2l5319:
 12548  003CBC  0E00               	movlw	0
 12549  003CBE  6E08               	movwf	i2___awdiv@quotient+1,c
 12550  003CC0  0E00               	movlw	0
 12551  003CC2  6E07               	movwf	i2___awdiv@quotient,c
 12552  003CC4  5003               	movf	i2___awdiv@divisor,w,c
 12553  003CC6  1004               	iorwf	i2___awdiv@divisor+1,w,c
 12554  003CC8  B4D8               	btfsc	status,2,c
 12555  003CCA  D01C               	goto	i2l5341
 12556  003CCC  0E01               	movlw	1
 12557  003CCE  6E05               	movwf	i2___awdiv@counter,c
 12558  003CD0  D004               	goto	i2l5327
 12559  003CD2                     i2l5325:
 12560  003CD2  90D8               	bcf	status,0,c
 12561  003CD4  3603               	rlcf	i2___awdiv@divisor,f,c
 12562  003CD6  3604               	rlcf	i2___awdiv@divisor+1,f,c
 12563  003CD8  2A05               	incf	i2___awdiv@counter,f,c
 12564  003CDA                     i2l5327:
 12565  003CDA  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12566  003CDC  D7FA               	goto	i2l5325
 12567  003CDE                     i2u620_40:
 12568  003CDE  90D8               	bcf	status,0,c
 12569  003CE0  3607               	rlcf	i2___awdiv@quotient,f,c
 12570  003CE2  3608               	rlcf	i2___awdiv@quotient+1,f,c
 12571  003CE4  5003               	movf	i2___awdiv@divisor,w,c
 12572  003CE6  5C01               	subwf	i2___awdiv@dividend,w,c
 12573  003CE8  5004               	movf	i2___awdiv@divisor+1,w,c
 12574  003CEA  5802               	subwfb	i2___awdiv@dividend+1,w,c
 12575  003CEC  A0D8               	btfss	status,0,c
 12576  003CEE  D005               	goto	i2l5337
 12577  003CF0  5003               	movf	i2___awdiv@divisor,w,c
 12578  003CF2  5E01               	subwf	i2___awdiv@dividend,f,c
 12579  003CF4  5004               	movf	i2___awdiv@divisor+1,w,c
 12580  003CF6  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 12581  003CF8  8007               	bsf	i2___awdiv@quotient,0,c
 12582  003CFA                     i2l5337:
 12583  003CFA  90D8               	bcf	status,0,c
 12584  003CFC  3204               	rrcf	i2___awdiv@divisor+1,f,c
 12585  003CFE  3203               	rrcf	i2___awdiv@divisor,f,c
 12586  003D00  2E05               	decfsz	i2___awdiv@counter,f,c
 12587  003D02  D7ED               	goto	i2u620_40
 12588  003D04                     i2l5341:
 12589  003D04  5006               	movf	i2___awdiv@sign,w,c
 12590  003D06  B4D8               	btfsc	status,2,c
 12591  003D08  D004               	goto	i2l5345
 12592  003D0A  6C07               	negf	i2___awdiv@quotient,c
 12593  003D0C  1E08               	comf	i2___awdiv@quotient+1,f,c
 12594  003D0E  B0D8               	btfsc	status,0,c
 12595  003D10  2A08               	incf	i2___awdiv@quotient+1,f,c
 12596  003D12                     i2l5345:
 12597  003D12  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 12598  003D16  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 12599  003D1A  0012               	return		;funcret
 12600  003D1C                     __end_ofi2___awdiv:
 12601                           	opt callstack 0
 12602                           
 12603                           	psect	rparam
 12604  0000                     
 12605                           	psect	temp
 12606  000055                     btemp:
 12607                           	opt callstack 0
 12608  000055                     	ds	1
 12609  0000                     int$flags	set	btemp
 12610  0000                     wtemp8	set	btemp+1
 12611  0000                     ttemp5	set	btemp+1
 12612  0000                     ttemp6	set	btemp+4
 12613  0000                     ttemp7	set	btemp+8
 12614                           tosu	equ	0xFFF
 12615                           tosh	equ	0xFFE
 12616                           tosl	equ	0xFFD
 12617                           stkptr	equ	0xFFC
 12618                           pclatu	equ	0xFFB
 12619                           pclath	equ	0xFFA
 12620                           pcl	equ	0xFF9
 12621                           tblptru	equ	0xFF8
 12622                           tblptrh	equ	0xFF7
 12623                           tblptrl	equ	0xFF6
 12624                           tablat	equ	0xFF5
 12625                           prodh	equ	0xFF4
 12626                           prodl	equ	0xFF3
 12627                           indf0	equ	0xFEF
 12628                           postinc0	equ	0xFEE
 12629                           postdec0	equ	0xFED
 12630                           preinc0	equ	0xFEC
 12631                           plusw0	equ	0xFEB
 12632                           fsr0h	equ	0xFEA
 12633                           fsr0l	equ	0xFE9
 12634                           wreg	equ	0xFE8
 12635                           indf1	equ	0xFE7
 12636                           postinc1	equ	0xFE6
 12637                           postdec1	equ	0xFE5
 12638                           preinc1	equ	0xFE4
 12639                           plusw1	equ	0xFE3
 12640                           fsr1h	equ	0xFE2
 12641                           fsr1l	equ	0xFE1
 12642                           bsr	equ	0xFE0
 12643                           indf2	equ	0xFDF
 12644                           postinc2	equ	0xFDE
 12645                           postdec2	equ	0xFDD
 12646                           preinc2	equ	0xFDC
 12647                           plusw2	equ	0xFDB
 12648                           fsr2h	equ	0xFDA
 12649                           fsr2l	equ	0xFD9
 12650                           status	equ	0xFD8


Data Sizes:
    Strings     155
    Constant    0
    Data        13
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      84
    BANK0           160    158     159
    BANK1           256     77     197
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_4(CODE[28]), STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1965_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_4(CODE[28]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_4(CODE[28]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_4(CODE[28]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    terminal@comand	PTR unsigned char  size(2) Largest target is 10
		 -> datos(COMRAM[10]), 

    length@text	PTR unsigned char  size(2) Largest target is 49
		 -> STR_6(CODE[49]), STR_5(CODE[8]), STR_3(CODE[21]), STR_2(CODE[20]), 
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), main@text(BANK1[6]), 

    enviarRS232@valores	PTR unsigned char  size(2) Largest target is 49
		 -> STR_6(CODE[49]), STR_5(CODE[8]), STR_3(CODE[21]), STR_2(CODE[20]), 
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), main@text(BANK1[6]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _rutina in COMRAM

    _rutina->i2___fladd
    i2___xxtofl->i2___awdiv
    i2___fladd->i2___xxtofl

Critical Paths under _main in BANK0

    _main->_terminal
    _terminal->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _cambiarPWM->_definirVelocidad
    _rutinaEscape->_fijarVelocidad
    _fijarVelocidad->___fladd
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fladd->___flmul
    _enviarRS232->_length
    _encenderMotor->_definirVelocidad
    _encenderMotor->_rutinaArranque

Critical Paths under _rutina in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal
    _terminal->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rutina in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rutina in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rutina in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rutina in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rutina in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rutina in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rutina in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _rutina in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  123387
                                             63 BANK1     14    14      0
                           _PWMServo
               _configuracionInicial
                        _enviarRS232
                       _rutinaEscape
                            _sprintf
                           _terminal
 ---------------------------------------------------------------------------------
 (1) _terminal                                            30    28      2   61428
                                            153 BANK0      5     5      0
                                             38 BANK1     25    23      2
                           _adelante
                              _atras
                         _cambiarPWM
                         _dirreccion
                      _encenderMotor
                        _enviarRS232
                   _estadoDirreccion
                     _fijarVelocidad
                        _frenarMotor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   50798
                                            143 BANK0     10    10      0
                                             30 BANK1      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   50096
                                            141 BANK0      2     2      0
                                             24 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           50    44      6   49494
                                            131 BANK0     10     4      6
                                              0 BANK1     24    24      0
                               _atoi
                               _ctoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    5909
                                             27 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   30837
                                             63 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4297
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             39 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     845
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4776
                                             27 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4497
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1795
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _estadoDirreccion                                     4     4      0     145
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _dirreccion                                           4     4      0     105
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _cambiarPWM                                           0     0      0       0
                   _definirVelocidad
 ---------------------------------------------------------------------------------
 (1) _rutinaEscape                                         3     3      0    9975
                                             64 BANK0      3     3      0
                           _adelante
                              _atras
                   _definirVelocidad
                      _encenderMotor
                        _enviarRS232
                     _fijarVelocidad
                        _frenarMotor
 ---------------------------------------------------------------------------------
 (2) _frenarMotor                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _fijarVelocidad                                       9     9      0    8887
                                             55 BANK0      9     9      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     676
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                             39 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3773
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3732
                                             39 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _enviarRS232                                          7     5      2    1057
                                              8 BANK0      7     5      2
                             _length
 ---------------------------------------------------------------------------------
 (3) _length                                               8     6      2     263
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _encenderMotor                                        0     0      0       0
                   _definirVelocidad
                     _rutinaArranque
 ---------------------------------------------------------------------------------
 (3) _rutinaArranque                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _definirVelocidad                                     2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atras                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adelante                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configuracionInicial                                 0     0      0       0
           _configurarInterrupciones
                     _configurarPWM7
                  _configurarPuertos
                    _configurarRS232
               _configurarRS232US100
                     _configurarTMR5
 ---------------------------------------------------------------------------------
 (2) _configurarTMR5                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarRS232US100                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarRS232                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPuertos                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPWM7                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarInterrupciones                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWMServo                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rutina                                              5     5      0    2881
                                             38 COMRAM     5     5      0
                          i2___awdiv
                          i2___fladd
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (11) i2___xxtofl                                         14    10      4     374
                                              8 COMRAM    14    10      4
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___fladd                                          16     8      8    2036
                                             22 COMRAM    16     8      8
                          i2___awdiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMServo
   _configuracionInicial
     _configurarInterrupciones
     _configurarPWM7
     _configurarPuertos
     _configurarRS232
     _configurarRS232US100
     _configurarTMR5
   _enviarRS232
     _length
   _rutinaEscape
     _adelante
     _atras
     _definirVelocidad
     _encenderMotor
       _definirVelocidad
       _rutinaArranque
     _enviarRS232
       _length
     _fijarVelocidad
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _frenarMotor
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
   _terminal
     _adelante
     _atras
     _cambiarPWM
       _definirVelocidad
     _dirreccion
     _encenderMotor
       _definirVelocidad
       _rutinaArranque
     _enviarRS232
       _length
     _estadoDirreccion
     _fijarVelocidad
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _frenarMotor
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen

 _rutina (ROOT)
   i2___awdiv
   i2___fladd
     i2___awdiv (ARG)
     i2___xxtofl (ARG)
       i2___awdiv (ARG)
   i2___xxtofl
     i2___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     4D      C5       8       77.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      54       1       89.4%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B8       6        0.0%
DATA                 0      0     1B8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jun 28 08:53:58 2019

                     ___fldiv@aexp 0078                       ___fldiv@bexp 0077  
                     ___fldiv@sign 0070                       ___awdiv@sign 0065  
              ___wmul@multiplicand 0062                       __CFG_CP0$OFF 000000  
                    terminal@texto 019A                                l270 42EE  
                              l262 3F2C                                l343 3B1A  
                              l417 15BE                                l451 2D5A  
                              l453 2D62                                l391 12E0  
                              l784 35A8                                l957 3692  
                              l967 38CC                                _PR2 000FCB  
                      i2___fladd@a 001B                        i2___fladd@b 0017  
                  ?_configurarTMR5 0001                    ?_configurarPWM7 0001  
                              _pad 3AEA                     terminal@degree 01B0  
                     ___awmod@sign 0065                         i2___xxtofl 32E8  
                   terminal@comand 0198                   ??_fijarVelocidad 0097  
                              wreg 000FE8                       __CFG_IESO$ON 000000  
                     ___flmul@aexp 007B                       ___flmul@bexp 0080  
                     ___flmul@sign 007A                       ___flmul@temp 0085  
                     ___flmul@prod 0081           __end_of_estadoDirreccion 4084  
                     ___fltol@exp1 0090                    ??_encenderMotor 0062  
                             l1103 2A6C                               l1114 2ADA  
                             l1115 2AD6                               l1133 200C  
                             l1150 22AA                               l1142 2224  
                             l1143 2220                               l1064 24F4  
                             l1048 2422                               l1073 255A  
                             l1049 2400                               l1241 2C9C  
                             l1321 41CA                               l1074 2556  
                             l1181 3264                               l1229 319A  
                             l1174 31E6                               l6003 2468  
                             l6005 246C                               l6013 247E  
                             l6101 3B24                               l6031 2518  
                             l6023 24E4                               l6041 252E  
                             l6105 3B3E                               l6121 372E  
                             l6203 292A                               l6131 3778  
                             l6109 3B6A                               l6301 2B1E  
                             l6125 3738                               l7005 2D9C  
                             l7101 196C                               ?_pad 0070  
                             l6047 2538                               l7031 3060  
                             l6231 299E                               l6223 296A  
                             l7015 2E8A                               l7103 196E  
                             l6081 25D0                               l7041 30B2  
                             l7033 3064                               l6305 2B42  
                             l6137 40EE                               l7121 198E  
                             l7113 1986                               l7105 197E  
                             l6075 25C6                               l6067 25A0  
                             l7051 30D0                               l6315 2B78  
                             l6219 2966                               l6155 2BFC  
                             l6413 21EA                               l6341 1FCC  
                             l7301 3226                               l7053 30FC  
                             l6501 3C8E                               l6317 2B7A  
                             l6309 2B6C                               l6245 29CC  
                             l6237 29B4                               l6173 2D2A  
                             l6165 2CBE                               l7141 1A72  
                             l7125 199A                               l7117 198A  
                             l7109 1982                               l6079 25CE  
                             l6407 21CC                               l7311 3296  
                             l7303 324C                               l7047 30C2  
                             l6095 3B02                               l6263 2A44  
                             l6255 2A1C                               l7223 1EEC  
                             l7215 1E4C                               l7143 1A80  
                             l7127 19E2                               l6433 2268  
                             l6337 1FB8                               l7057 3136  
                             l7049 30CA                               l6521 3E3E  
                             l6513 3E24                               l6281 2AA0  
                             l6169 2CFC                               l7233 1F38  
                             l7161 1B76                               l6355 1FF8  
                             l6339 1FBC                               l6099 3B12  
                             l6523 3E46                               l6275 2A82  
                             l7163 1B84                               l7139 1A54  
                             l5901 230C                               l6437 2286  
                             l6365 202A                               l6357 1FFC  
                             l6621 3810                               l6613 37FC  
                             l7309 328A                               l7413 4030  
                             l6533 3E68                               l6517 3E30  
                             l6269 2A6A                               l7077 391A  
                             l7229 1F2C                               l7327 32D6  
                             l6199 2926                               l7079 3928  
                             l7159 1B58                               l7239 1F50  
                             l7503 2F34                 __CFG_WPFP$PAGE_127 000000  
                             l5905 2310                               l6449 22C8  
                             l6609 37EC                               l7425 4052  
                             l7417 403E                               l7433 405E  
                             l6481 3C4E                               l6537 3E76  
                             l6529 3E5E                               l6553 3C0E  
                             l6545 3BBC                               l6561 3548  
                             l6705 0FE8                               l7281 3FD6  
                             l7505 2F46                               l7521 300C  
                             l7275 3D88                               l6627 382C  
                             l6619 3804                               l7291 31F6  
                             l7419 4044                               l7435 4080  
                             l6483 3C56                               l6475 3C38  
                             l7195 1D46                               l7187 1CE6  
                             l7179 1C7C                               l7283 4004  
                             l7507 2F58                               l7533 42F6  
                             l7269 3D50                               l5925 2354  
                             l7541 3E8A                               l7461 3F4C  
                             l7445 3EFC                               l7453 3F0A  
                             l7429 4058                               l6493 3C76  
                             l6469 3C28                               l6549 3BF0  
                             l6565 357C                               l6717 1016  
                             l6725 102C                               l6637 360C  
                             l7509 2F5E                               l7447 3F00  
                             l6575 35E0                               l6583 438C  
                             l6807 1338                               l6735 1098  
                             l6743 10E2                               l6639 3620  
                             l7199 1D70                               l7393 3DFA  
                             l5937 2378                               l5929 2358  
                             l6593 37A2                               l7297 3214  
                             l7457 3F3A                               l7449 3F04  
                             l5873 4280                               l6497 3C80  
                             l6569 3592                               l6825 137E  
                             l6809 133C                               l6753 114E  
                             l6761 1168                               l6737 10B0  
                             l6649 367C                               l6665 38B6  
                             l6657 385A                               l7387 3DB4  
                             l7299 321A                               l5859 3A62  
                             l6907 16CE                               l6915 1768  
                             l6835 13B8                               l6843 14B0  
                             l6819 135A                               l6771 11E6  
                             l6739 10BA                               l6659 386E  
                             l7491 2F04                               l5981 2412  
                             l6677 4254                               l5869 4268  
                             l5877 43A8                               l6685 4146  
                             l6829 138E                               l6773 1236  
                             l7573 39CE                               l5967 23B4  
                             l7559 3ED0                               l5879 43AE  
                             l6687 4154                               l6943 17F6  
                             l6927 17AA                               l6767 11AC  
                             l7591 3A08                               l6945 1800  
                             l6865 15B6                               l6857 155E  
                             l6793 12EA                               l6777 1272  
                             l7497 2F1C                               l7585 39F6  
                             l5995 2446                               l5979 240E  
                             l6955 1858                               l6891 168A  
                             l6867 15D8                               l7579 39E6  
                             l6981 18E4                               l6965 1884  
                             l6789 12C8                               l6879 165A  
                             l6799 12F0                               l6899 16AA  
                             STR_1 0F77                               STR_2 0F63  
                             STR_3 0F4E                               STR_4 0F32  
                             STR_5 0F81                     _contador_datos 003E  
                             STR_6 0F01                               STR_7 0F89  
                             STR_8 0F91                               u7040 23D6  
                             u7050 23E6                               u8010 2276  
                             u7300 25AC                               u7220 253C  
                             u7060 23E8                               u8020 2294  
                             u7240 2550                               u9000 2EC8  
                             u7090 242A                               u8130 3E4A  
                             u8300 3816                               u9020 30AE  
                             u7500 2BCA                               u8070 3C5A  
                             u7430 3770                               u7510 2BEA  
                             u7600 4366                               u8400 4250  
                             u9040 316A                               u7440 3772  
                             u9120 3976                               u9200 1ACE  
                             u7425 3752                               u7505 2BC0  
                             u8321 35EA                               u8250 3790  
                             u7610 4368                               u9050 316C  
                             u7450 412A                               u8260 37C0  
                             u6900 3AA2                               u8180 3C0A  
                             u7380 36F4                               u8340 3624  
                             u7550 2C7C                               u7470 41B0  
                             u8510 1126                               u9310 1DFE  
                             u9230 1BC2                               u7535 2C14  
                             u7536 2C1A                               u7480 41B2  
                             u8520 1128                               u8440 1006  
                             u9320 1E00                               u9240 1BC4  
                             u8265 37B6                               u7385 36E8  
                             u7537 2C28                               u7457 4120  
                             u7570 2CDC                               u6930 4334  
                             u8370 3872                               u9250 1BD2  
                             u7555 2C72                               u9500 3DE2  
                             u7820 2B2C                               u6940 4336  
                             u8620 1308                               u9180 1ABE  
                             u7830 2B50                               u8470 1070  
                             u9190 1AC0                               u7575 2CD2  
                             u9360 3D3E                               u7920 2018  
                             u6880 3A5A                               u8560 129C  
                             u8480 1072                               u9601 39A8  
                             u9370 3D7E                               u7930 218E  
                             u9530 404A                               u8730 154E  
                             u9507 3DD8                               u9611 39B6  
                             u9460 32A0                               u7780 2AD0  
                             u8660 1356                               u8910 18CE  
                             u8830 178C                               u8590 12D6  
                             u9367 3D34                               u7935 2184  
                             u8920 18D0                               u9377 3D74  
                             u7970 221A                               u9707 43E8  
                             u9571 2EF8                               u8950 2D4E  
                             u8890 186E                               u8980 2EB6  
                             u8981 2EB4                               u8990 2EC4  
                             u9687 3EA4                               u9697 3DEC  
                     ?_frenarMotor 0001                               _TMR2 000FCC  
                 ?_configurarRS232 0001                       ?_enviarRS232 0068  
                    __CFG_FCMEN$ON 000000                               _dbuf 0122  
                             _atoi 304C                               _ctoa 4134  
                             _main 399E                               _prec 003A  
                             _nout 011C                               pad@i 0077  
                             pad@p 0074                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf1 000FE7  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 0079                               fsr2l 000FD9  
                             btemp 0055                               _utoa 2D3C  
                    ___fpclassifyf 36B4                               prodh 000FF4  
                             prodl 000FF3                               start 0140  
                  ___fldiv@new_exp 0071                       _tolower$2037 006C  
                     ___param_bank 000000                              ??_pad 0076  
            __size_of_rutinaEscape 0070                      __CFG_PLLDIV$3 000000  
                     _BAUDCON1bits 000F7E                       _BAUDCON2bits 000F7C  
                    ___fltol@sign1 008F                              ?_atoi 0067  
                            ?_ctoa 007B                    __end_of___fladd 25EC  
                            ?_main 0001                    __end_of___fldiv 2B82  
                  __end_of___awdiv 3C98                    __end_of___flneg 439E  
                            STR_11 0F8D                              STR_12 0F95  
                            STR_15 0F99                              STR_17 0F99  
                  __end_of___awmod 3E80                    __end_of___flmul 22DE  
                  __end_of___flsub 421C                    __end_of___fltol 383E  
                            ?_utoa 007B                    __end_of___lodiv 36B4  
                  ___awdiv@divisor 0062                              _T2CON 000FCA  
                  __end_of___lomod 38EE                              _T5CON 000F22  
                            i2l201 0084                              i2l206 0134  
                            i2l194 0046                              i2l195 002E  
                            i2l198 0076                    ___awdiv@counter 0064  
                     vfpfcnvrt@fmt 00E5                       vfpfcnvrt@llu 0172  
                            _TMR5H 000F24                              _TMR5L 000F23  
                    i2___fladd@grs 0026                              _datos 0044  
                            _flags 003C                              _atras 44F6  
                            _fputc 3A48                              _parar 003F  
                            _fputs 425C                    __end_of_isdigit 436E  
                   __CFG_CLKOEC$ON 000000                              _motor 0043  
                            atoi@n 0074                              pad@fp 0070  
                            atoi@s 0067                              _width 0038  
                            ctoa@c 007D                              _putch 4518  
                            ctoa@w 007E                    __end_of_isspace 425C  
                  __end_of_isupper 433C                              tablat 000FF5  
                 __end_of_PWMServo 430A                              plusw1 000FE3  
                            plusw2 000FDB                              ttemp5 0056  
                            ttemp6 0059                              ttemp7 005D  
                            utoa@d 007D                              utoa@i 0099  
                            utoa@n 0091                              utoa@p 008D  
                            utoa@w 008F                              status 000FD8  
                            wtemp8 0056                    __end_of_sprintf 40DE  
                   ?___fpclassifyf 0060                    __end_of_tolower 41D4  
                 _servo_dirreccion 0040                    __end_of_strncmp 399E  
                 ___lodiv@dividend 0060                   terminal@medicion 01AE  
        enviarRS232@longitud_texto 006C                 __size_ofi2___fladd 030C  
               __size_ofi2___awdiv 0084                       _rutinaEscape 3E80  
          __CFG_DSWDTOSC$INTOSCREF 000000                    __initialization 3F5C  
                     __end_of_atoi 31A4                       __end_of_ctoa 4186  
                     __end_of_main 3A48                  ?_definirVelocidad 0001  
                     __end_of_utoa 2EF2                 ??_definirVelocidad 0060  
                   __CFG_OSC$HSPLL 000000                             ??_atoi 0069  
                           ??_ctoa 007E                             ??_main 00FE  
                           ??_utoa 0085                      __activetblptr 000003  
                 dirreccion@degree 0062                        ?i2___xxtofl 0009  
                 ___lodiv@quotient 0070                             ?_atras 0001  
                           ?_fputc 0060                             ?_fputs 0069  
                           _CCPR7L 000F0A                             _ANCON0 000F48  
                           _ANCON1 000F49                   ___awdiv@dividend 0060  
                           ?_putch 0001                             i2l1064 2800  
                           i2l1048 272E                             i2l1073 2866  
                           i2l1049 270C                             i2l1074 2862  
                           i2l1181 33A4                             i2l1174 3326  
                   __CFG_WDTEN$OFF 000000                             i2l5313 3CAC  
                           i2l5325 3CD2                             i2l5341 3D04  
                           i2l5501 283A                             i2l5327 3CDA  
                           i2l5319 3CBC                             i2l5345 3D12  
                           i2l5337 3CFA                             i2l5441 271E  
                           i2l5361 2618                             i2l5507 2844  
                           i2l5427 26C0                             i2l5541 28DC  
                           i2l5365 261C                             i2l5535 28D2  
                           i2l5527 28AC                             i2l5463 2774  
                           i2l5455 2752                             i2l5439 271A  
                           i2l5465 2778                             i2l5473 278A  
                           i2l5385 2660                             i2l5633 00F8  
                           i2l5539 28DA                             i2l5491 2824  
                           i2l5483 27F0                             i2l5563 3354  
                           i2l5397 2684                             i2l5389 2664  
                           i2l5565 335A                             i2l5557 3336  
                           i2l5575 33CA                             i2l5567 3366  
                           i2l5593 3416                             i2l5577 33D6  
                           i2l5569 338C                             _RCREG1 000FAF  
                           _RCREG2 000FAA                   __end_of_adelante 450A  
                           _RCSTA1 000FAC                             _RCSTA2 000F9C  
                    vfpfcnvrt@done 017A                             _SPBRG1 000FB0  
                           _SPBRG2 000FAB                             _PPSCON 000EBF  
                           _RPOR23 000ED7                     __CFG_WPCFG$OFF 000000  
                           _TXREG1 000FAE                             _TXREG2 000FA9  
                 __end_of___xxtofl 32E8                             _TXSTA1 000FAD  
                           _TXSTA2 000FA8                     __CFG_WPDIS$OFF 000000  
                 _contador_timer_5 0041                     i2___fladd@aexp 0024  
                   i2___fladd@bexp 0025                     __CFG_XINST$OFF 000000  
                     _CCPTMRS1bits 000F51                       vfprintf@cfmt 00ED  
                           ___flge 3512                             ___fleq 3B86  
                        ??___fladd 008F                             ___wmul 43F8  
                _tiempo_anterior_1 0054                          ??___fldiv 0068  
                        ??___awdiv 0064                          ??___flneg 0064  
                   __CFG_STVREN$ON 000000                          ??___awmod 0064  
                        ??___flmul 0076                          ??___flsub 009F  
                        ??___fltol 008B      __size_of_configuracionInicial 001A  
                        ??___lodiv 0070                          ??___lomod 0070  
                           _efgtoa 0F9E                             _floorf 2B82  
                           _length 3D1C                             clear_0 3FA2  
                           clear_1 3FB2                   ___awdiv@quotient 0066  
                  ___awmod@divisor 0062                    ___awmod@counter 0064  
                           pad@buf 0072                             ctoa@fp 007B  
                           _rutina 0008                             _strcpy 40DE  
                           _strlen 439E                  _configurarPuertos 44BE  
                   i2___awdiv@sign 0006                             fputc@c 0060  
                           fputs@c 006D                             fputs@i 006E  
                     __pdataCOMRAM 004E                             fputs@s 0069  
                __end_ofi2___fladd 28F8                          ??_isdigit 0062  
                __end_ofi2___awdiv 3D1C                    ___fpclassifyf@e 0068  
                  ___fpclassifyf@u 006A                    ___fpclassifyf@x 0060  
               ?_configurarPuertos 0001                       __mediumconst 0000  
                        ??_isspace 0062                   __end_of_terminal 304C  
                           tblptrh 000FF7                          ??_isupper 0062  
                           tblptrl 000FF6                             tblptru 000FF8  
                 rutinaEscape@type 00A2                             putch@c 0001  
                 __end_of_vfprintf 4024                             utoa@fp 007B  
                        ??_sprintf 00EF                          ??_tolower 0068  
                        ??_strncmp 0066                ??_configurarPuertos 0060  
                       ___flge@ff1 0087                         ___flge@ff2 008B  
                  ??___fpclassifyf 0064               __CFG_LS48MHZ$SYS48X8 000000  
                     ___xxtofl@arg 006A                       ___xxtofl@exp 0069  
                     ___xxtofl@val 0060                         ___fleq@ff1 0060  
                       ___fleq@ff2 0064       __end_of_configurarRS232US100 4446  
                       __accesstop 0060            __end_of__initialization 3FB8  
                       ___flneg@f1 0060               __size_of_frenarMotor 0010  
         _configurarInterrupciones 44DC               __size_of_enviarRS232 0076  
                    ___rparam_used 000001                         ___fltol@f1 0087  
                     enviarRS232@i 006E                    __CFG_IOL1WAY$ON 000000  
             __CFG_WPEND$PAGE_WPFP 000000                __size_ofi2___xxtofl 0140  
                   __pcstackCOMRAM 0001                       __pidataBANK1 4511  
                    __end_of_atras 4500                   ??_configurarTMR5 0060  
                 ??_configurarPWM7 0060                      __end_of_fputc 3AEA  
                    __end_of_fputs 4298                      __end_of_putch 451A  
        __end_of_configurarPuertos 44CE                    __CFG_DSWDTPS$G2 000000  
                        ?_PWMServo 0001                         _cambiarPWM 44EA  
                          ??_atras 0060                            ??_fputc 0064  
                          ??_fputs 006D                            ??_putch 0060  
                ?_estadoDirreccion 0001            __size_of_rutinaArranque 002C  
                       __pbssBANK0 00FE                         __pbssBANK1 0100  
               ??_estadoDirreccion 0060                            ?___flge 0087  
                          ?___fleq 0060                            ?___wmul 0060  
                          ?_efgtoa 009F                            ?_floorf 0079  
                          ?_length 0060                         ??_PWMServo 0060  
                          ?_rutina 0001                            ?_strcpy 0060  
                          ?_strlen 0060                          ?_adelante 0001  
                        ?___xxtofl 0060                 __size_of_vfpfcnvrt 0668  
                       _dirreccion 3EF0                            _RPINR16 000EF7  
                 fijarVelocidad@DC 0097                      _bandera_servo 0120  
                 ___lomod@dividend 0060              __end_of_encenderMotor 44DC  
                 __CFG_CFGPLLEN$ON 000000                    i2___fladd@signs 0023  
                          __Hparam 0000                            __Lparam 0000  
         __size_of_configurarRS232 0018                          ?_terminal 0198  
                  __size_of___flge 00D2                    __size_of___fleq 008C  
                          ___fladd 22DE                            ___fldiv 28F8  
                          ___awdiv 3C12                            ___flneg 436E  
                          ___awmod 3E0E                            ___flmul 1F8A  
                          ___flsub 41D4                            ___fltol 3782  
                  __size_of___wmul 0028                            ___lodiv 35E4  
                          ___lomod 383E                          ?_vfprintf 018A  
                     __psmallconst 0F00                    __size_of_efgtoa 0984  
                          _bandera 0121         __size_of_configurarPuertos 0010  
                  __size_of_floorf 01BA                            __pcinit 3F5C  
                  __size_of_length 007C                            __ramtop 0F00  
           estadoDirreccion@angulo 0063                            __ptext0 399E  
                          __ptext1 2EF2                            __ptext2 4084  
                          __ptext3 3FC2                            __ptext4 1922  
                          __ptext5 2D3C                            __ptext6 383E  
                          __ptext7 35E4                            __ptext8 38EE  
                          __ptext9 0F9E               _configurarRS232US100 4420  
                       ??_adelante 0060                    __size_of_rutina 0138  
                  __size_of_strcpy 0056                    __size_of_strlen 002E  
                        _T2CONbits 000FCA                       __size_of_pad 009C  
                          _isdigit 433C                       ??i2___xxtofl 000D  
                       ??___xxtofl 0064                   ___awmod@dividend 0060  
                      ?_cambiarPWM 0001                            _isspace 421C  
                        _T5CONbits 000F22                            _isupper 430A  
                          efgtoa@c 00A5                            efgtoa@d 00C3  
                          efgtoa@e 00DB                            efgtoa@f 00A1  
                          efgtoa@g 00D7                            efgtoa@h 00CD  
                          efgtoa@i 00D5                            efgtoa@l 00D1  
                          efgtoa@m 00BF                            efgtoa@n 00DD  
                          efgtoa@p 00C7                            efgtoa@t 00BB  
                          efgtoa@u 00DF                            efgtoa@w 00CA  
        __size_of_definirVelocidad 003A                            atoi@neg 006D  
                   length@longitud 0064                            _sprintf 4084  
                          _tolower 4186                            _strncmp 38EE  
             end_of_initialization 3FB8                            floorf@e 0087  
                          floorf@m 0083                            floorf@u 0089  
                          floorf@x 0079                            length@i 0067  
                          fputc@fp 0062                            fputs@fp 006B  
          __size_of_fijarVelocidad 00EA                     i2___xxtofl@arg 0013  
                   i2___xxtofl@exp 0012                     i2___xxtofl@val 0009  
                __end_of_vfpfcnvrt 1F8A                         efgtoa@mode 00CC  
                       efgtoa@sign 00C5                 __end_ofi2___xxtofl 3428  
                       ??_terminal 00F9                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                       ??_vfprintf 00ED                            strcpy@d 0068  
                          strlen@a 0062                            strcpy@s 0066  
                          strlen@s 0060              ?_configurarRS232US100 0001  
                        _PORTAbits 000F80                          _PORTBbits 000F81  
                        _PORTDbits 000F83                   __CFG_DSBOREN$OFF 000000  
                      ___fladd@grs 0096                   __CFG_CPUDIV$OSC1 000000  
                    ___xxtofl@sign 0068                          _TRISAbits 000F92  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                        _TRISDbits 000F95                        ?_dirreccion 0001  
       ??_configurarInterrupciones 0060                        ___fldiv@grs 0073  
     __end_of_configuracionInicial 4480                        ___fldiv@rem 006C  
                        i2___fladd 25EC                          i2___awdiv 3C98  
                __CFG_SOSCSEL$HIGH 000000                     _rutinaArranque 43CC  
                      ___flmul@grs 007C                 i2___awdiv@dividend 0001  
                      _CCP7CONbits 000F09                __CFG_MSSP7B_EN$MSK7 000000  
              __size_of_cambiarPWM 000C                     __end_of___flge 35E4  
                   __end_of___fleq 3C12                        vfpfcnvrt@ap 00E7  
                      vfpfcnvrt@ct 0186                        vfpfcnvrt@fp 00E3  
                   __end_of___wmul 4420                      __pidataCOMRAM 450A  
                   __end_of_efgtoa 1922                  ??_configurarRS232 0060  
                   __end_of_floorf 2D3C                     __end_of_length 3D98  
                       floorf@F524 002C                   __CFG_DSWDTEN$OFF 000000  
                   __end_of_rutina 0140                     __end_of_strcpy 4134  
                   __end_of_strlen 43CC                start_initialization 3F5C  
                  ___lodiv@divisor 0068                  __size_of_PWMServo 0038  
                  ___lodiv@counter 0078                 i2___awdiv@quotient 0007  
           __end_of_rutinaArranque 43F8                        __end_of_pad 3B86  
                       ?i2___fladd 0017                         ?i2___awdiv 0001  
                    ??_frenarMotor 0060                      ??_enviarRS232 006A  
            __end_of___fpclassifyf 3782                         length@dato 0066  
                       length@text 0060                        vfprintf@fmt 018C  
                         ??___flge 008F                           ??___fleq 0068  
              __size_of_dirreccion 006C                           ??___wmul 0064  
        __size_of_estadoDirreccion 0060                           ??_efgtoa 00A6  
                __CFG_ADCSEL$BIT12 000000                        __pdataBANK1 01BF  
           ??_configurarRS232US100 0060                           ??_floorf 007D  
                         ??_length 0062                           ??_rutina 0027  
                         ??_strcpy 0064                           ??_strlen 0062  
                        ___fladd@a 008B                          ___fladd@b 0087  
                        ___fldiv@a 0064                          ___fldiv@b 0060  
                        ___flmul@a 0072                          ___flmul@b 006E  
                      __pbssCOMRAM 002C                          ___flsub@a 009B  
                        ___flsub@b 0097                  __size_of_adelante 000A  
                    __pcstackBANK0 0060                      __pcstackBANK1 0172  
                  ?_rutinaArranque 0001                   _definirVelocidad 4298  
                __size_of___xxtofl 0144                     _fijarVelocidad 3428  
                        _atoi$1921 006F                          _atoi$1922 0073  
                        _atoi$1923 0071                      ?_rutinaEscape 0001  
                      _efgtoa$1411 00AF                        _efgtoa$1420 00B5  
                      _efgtoa$1412 00B1                        _efgtoa$1421 00B7  
                      _efgtoa$1422 00B9                        _efgtoa$1416 00B3  
              __end_of_frenarMotor 44BE                __end_of_enviarRS232 3E0E  
               enviarRS232@valores 0068                          __pintcode 0008  
                         ?___fladd 0087                           ?___fldiv 0060  
                         ?___awdiv 0060                           ?___flneg 0060  
                         ?___awmod 0060                           ?___flmul 006E  
                         ?___flsub 0097                           ?___fltol 0087  
             _configuracionInicial 4466                 dirreccion@tiempo_1 0063  
                         ?___lodiv 0060                           ?___lomod 0060  
                __size_of_terminal 015A                          _distancia 0034  
                __size_of_vfprintf 0062                    ___lomod@divisor 0068  
                      __smallconst 0F00                    ___lomod@counter 0070  
                         ?_isdigit 0060                          _indicador 0042  
             __CFG_RTCOSC$T1OSCREF 000000                       ??_cambiarPWM 0062  
                         ?_isspace 0060   __end_of_configurarInterrupciones 44EA  
                         ?_isupper 0060            __size_of_configurarPWM7 0020  
          __size_of_configurarTMR5 0016                        ??i2___fladd 001F  
                      ??i2___awdiv 0005                     __size_of_atras 000A  
                         ?_sprintf 0190                           ?_tolower 0066  
                   __size_of_fputc 00A2                     __size_of_fputs 003C  
                         ?_strncmp 0060             __end_of_fijarVelocidad 3512  
                   __size_of_putch 0002              estadoDirreccion@valor 0062  
                        _obstaculo 011F                     ___wmul@product 0064  
                   ??_rutinaEscape 00A0                           _PIE1bits 000F9D  
                         _PIE3bits 000FA3                           _PIE5bits 000F91  
                         _PIR1bits 000F9E                           i2u620_40 3CDE  
                         _PIR3bits 000FA4                           i2u632_40 26E2  
                         i2u633_40 26F2                           _PIR5bits 000F98  
                         i2u650_40 2848                           i2u634_40 26F4  
                         i2u652_40 285C                           i2u637_40 2736  
                         i2u658_40 28B8                           i2u668_40 33E0  
                 __CFG_WDTPS$32768 000000                          main@F7115 01BF  
                        main@F7117 0114              ?_configuracionInicial 0001  
                         _TIME_MAX 004E                 __end_of_cambiarPWM 44F6  
                        _velocidad 0050                          _vfpfcnvrt 1922  
                ___wmul@multiplier 0060             __size_of_encenderMotor 000E  
                         _PWMServo 42D2                  i2___awdiv@divisor 0003  
                        main@texto 01B7                  i2___awdiv@counter 0005  
                     ??_dirreccion 0060                       _isspace$1952 0066  
                       vfpfcnvrt@c 0189                         vfpfcnvrt@f 0182  
                      _INTCON2bits 000FF1                          copy_data0 3F70  
                        copy_data1 3F90                    ?_fijarVelocidad 0001  
                      _frenarMotor 44AE                        _enviarRS232 3D98  
                  _configurarRS232 4480                           __Hrparam 0000  
                       vfprintf@ap 018E                           __Lrparam 0000  
                       vfprintf@fp 018A                   _estadoDirreccion 4024  
                      _estadoFuego 00FE                 __end_of_dirreccion 3F5C  
                 __size_of___fladd 030E                   __size_of___fldiv 028A  
                 __size_of___awdiv 0086                   __size_of___flneg 0030  
                 __size_of___awmod 0072                   __size_of___flmul 0354  
                 __size_of___flsub 0048                   __size_of___fltol 00BC  
                 __size_of___lodiv 00D0                   __size_of___lomod 00B0  
                       ?_vfpfcnvrt 00E3                           _adelante 4500  
               ___fpclassifyf@F463 0030                _fijarVelocidad$2262 009B  
                       sprintf@fmt 0192                           _cicle_90 0052  
                         ___xxtofl 31A4                   __size_of_isdigit 0032  
                 __size_of_isspace 0040                           __ptext10 4186  
                         __ptext11 430A                           __ptext20 3E0E  
                         __ptext12 40DE                           __ptext21 3C12  
                         __ptext13 2B82                           __ptext30 433C  
                         __ptext22 4134                           __ptext14 36B4  
                         __ptext31 43F8                           __ptext23 3AEA  
                         __ptext15 41D4                           __ptext40 1F8A  
                         __ptext32 4024                           __ptext24 439E  
                         __ptext16 436E                           __ptext41 22DE  
                         __ptext33 3EF0                           __ptext25 425C  
                         __ptext17 3512                           __ptext50 4498  
                         __ptext42 3D98                           __ptext34 44EA  
                         __ptext26 3A48                           __ptext18 3B86  
                         __ptext51 4420                           __ptext43 3D1C  
                         __ptext35 3E80                           __ptext27 4518  
                         __ptext19 28F8                           __ptext60 3C98  
                         __ptext52 4480                           __ptext44 44CE  
                         __ptext36 44AE                           __ptext28 304C  
                         __ptext53 44BE                           __ptext45 43CC  
                         __ptext37 3428                           __ptext29 421C  
                         __ptext54 4446                           __ptext46 4298  
                         __ptext38 31A4                           __ptext55 44DC  
                         __ptext47 44F6                           __ptext39 3782  
                         __ptext56 42D2                           __ptext48 4500  
                         __ptext49 4466                           __ptext58 32E8  
                         __ptext59 25EC                   __size_of_isupper 0032  
                       rutina@dato 002B                   __size_of_sprintf 005A  
                 __size_of_tolower 004E                         strcpy@dest 0060  
                 __size_of_strncmp 00B0                      _encenderMotor 44CE  
                    __size_of_atoi 0158                      __size_of_ctoa 0052  
                    __size_of_main 00AA                      __size_of_utoa 01B6  
           ??_configuracionInicial 0060                           efgtoa@fp 009F  
                         efgtoa@ne 00C1                           efgtoa@pp 00BD  
__size_of_configurarInterrupciones 000E                           efgtoa@ou 00AB  
        ?_configurarInterrupciones 0001           __end_of_definirVelocidad 42D2  
                         _terminal 2EF2                           int$flags 0055  
                         _vfprintf 3FC2                           main@text 01B1  
                 ??_rutinaArranque 0060               __end_of_rutinaEscape 3EF0  
                   _vfpfcnvrt$1443 017C                     _vfpfcnvrt$1444 017E  
                   _vfpfcnvrt$1449 0180                         _INTCONbits 000FF2  
                   _configurarTMR5 4498                     _configurarPWM7 4446  
                         isdigit@c 0060            __end_of_configurarRS232 4498  
                         intlevel2 0000                          sprintf@ap 00F1  
                _bandera_distancia 011E                     ?_encenderMotor 0001  
                  i2___xxtofl@sign 0011                           isspace@c 0060  
                        strcpy@src 0062                           isupper@c 0060  
                        strncmp@_l 0060                          strncmp@_r 0062  
                      efgtoa@nmode 00C9                        ??_vfpfcnvrt 00E9  
    __size_of_configurarRS232US100 0026                           sprintf@f 00F3  
                         tolower@c 0066                           sprintf@s 0190  
           __end_of_configurarPWM7 4466             __end_of_configurarTMR5 44AE  
           __size_of___fpclassifyf 00CE                           strncmp@l 0067  
                         strncmp@n 0064                           strncmp@r 0069  
                    ___fladd@signs 0093                fijarVelocidad@speed 009F  
                     ___fladd@aexp 0094                       ___fladd@bexp 0095  
                    terminal@F7124 0100  
