

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jun 21 02:42:18 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           ; Version 2.05
    69                           ; Generated 20/12/2018 GMT
    70                           ; 
    71                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F47J53 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataCOMRAM
   104  0036A4                     __pidataCOMRAM:
   105                           	opt callstack 0
   106                           
   107                           ;initializer for _tiempo_anterior_1
   108  0036A4  0F                 	db	15
   109                           
   110                           	psect	idataBANK0
   111  003698                     __pidataBANK0:
   112                           	opt callstack 0
   113                           
   114                           ;initializer for main@F7560
   115  003698  48                 	db	72
   116  003699  4F                 	db	79
   117  00369A  4C                 	db	76
   118  00369B  41                 	db	65
   119  00369C  21                 	db	33
   120  00369D  00                 	db	0
   121                           
   122                           ;initializer for _TIME_MAX
   123  00369E  00B9               	dw	185
   124                           
   125                           ;initializer for _cicle_90
   126  0036A0  01C2               	dw	450
   127                           
   128                           	psect	smallconst
   129  000F00                     __psmallconst:
   130                           	opt callstack 0
   131  000F00  00                 	db	0
   132  000F01  6C3C               	dw	27708
   133  000F03  3636               	dw	13878
   134  000F05                     __end_of_S4:
   135                           	opt callstack 0
   136  000F05  07CF               	dw	1999
   137  000F07  B950               	dw	47440
   138  000F09                     __end_of_S3:
   139                           	opt callstack 0
   140  000F09  8884               	dw	34948
   141  000F0B  3C08               	dw	15368
   142  000F0D                     __end_of_S2:
   143                           	opt callstack 0
   144  000F0D  AAAB               	dw	43691
   145  000F0F  BE2A               	dw	48682
   146  000F11                     __end_of_S1:
   147                           	opt callstack 0
   148  000F11  85A3               	dw	34211
   149  000F13  3288               	dw	12936
   150  000F15                     __end_of_pio2_1t:
   151                           	opt callstack 0
   152  000F15  0FDA               	dw	4058
   153  000F17  3FC9               	dw	16329
   154  000F19                     __end_of_pio2_1:
   155                           	opt callstack 0
   156  000F19  F983               	dw	63875
   157  000F1B  3F22               	dw	16162
   158  000F1D                     __end_of_invpio2:
   159                           	opt callstack 0
   160  000F1D  0000               	dw	0
   161  000F1F  3F00               	dw	16128
   162  000F21                     __end_of_half:
   163                           	opt callstack 0
   164  000F21  0000               	dw	0
   165  000F23  4B40               	dw	19264
   166  000F25                     __end_of_toint:
   167                           	opt callstack 0
   168  000F25  9A17               	dw	39447
   169  000F27  37CC               	dw	14284
   170  000F29                     __end_of_C3:
   171                           	opt callstack 0
   172  000F29  043F               	dw	1087
   173  000F2B  BAB6               	dw	47798
   174  000F2D                     __end_of_C2:
   175                           	opt callstack 0
   176  000F2D  AA9F               	dw	43679
   177  000F2F  3D2A               	dw	15658
   178  000F31                     __end_of_C1:
   179                           	opt callstack 0
   180  000F31  0000               	dw	0
   181  000F33  BF00               	dw	48896
   182  000F35                     __end_of_C0:
   183                           	opt callstack 0
   184  000F35  0FDB               	dw	4059
   185  000F37  40C9               	dw	16585
   186  000F39                     __end_of_s4pio2:
   187                           	opt callstack 0
   188  000F39  CBE4               	dw	52196
   189  000F3B  4096               	dw	16534
   190  000F3D                     __end_of_s3pio2:
   191                           	opt callstack 0
   192  000F3D  0FDB               	dw	4059
   193  000F3F  4049               	dw	16457
   194  000F41                     __end_of_s2pio2:
   195                           	opt callstack 0
   196  000F41  0FDB               	dw	4059
   197  000F43  3FC9               	dw	16329
   198  000F45                     __end_of_s1pio2:
   199                           	opt callstack 0
   200  0000                     _T5CONbits	set	3874
   201  0000                     _CCPR7L	set	3850
   202  0000                     _TMR5L	set	3875
   203  0000                     _TMR5H	set	3876
   204  0000                     _T5CON	set	3874
   205  0000                     _CCPTMRS1bits	set	3921
   206  0000                     _CCP7CONbits	set	3849
   207  0000                     _ANCON1	set	3913
   208  0000                     _ANCON0	set	3912
   209  0000                     _ADRES	set	4035
   210  0000                     _ADCON0bits	set	4034
   211  0000                     _RCREG1	set	4015
   212  0000                     _TXREG1	set	4014
   213  0000                     _T2CONbits	set	4042
   214  0000                     _PIR5bits	set	3992
   215  0000                     _PIE5bits	set	3985
   216  0000                     _PORTDbits	set	3971
   217  0000                     _TRISDbits	set	3989
   218  0000                     _PIE1bits	set	3997
   219  0000                     _PIR1bits	set	3998
   220  0000                     _SPBRG1	set	4016
   221  0000                     _BAUDCON1bits	set	3966
   222  0000                     _RCSTA1	set	4012
   223  0000                     _TXSTA1	set	4013
   224  0000                     _TRISCbits	set	3988
   225  0000                     _TMR2	set	4044
   226  0000                     _PR2	set	4043
   227  0000                     _T2CON	set	4042
   228  0000                     _INTCON2bits	set	4081
   229  0000                     _INTCONbits	set	4082
   230  0000                     _TRISBbits	set	3987
   231  000F45                     STR_3:
   232  000F45  56                 	db	86	;'V'
   233  000F46  65                 	db	101	;'e'
   234  000F47  6C                 	db	108	;'l'
   235  000F48  6F                 	db	111	;'o'
   236  000F49  63                 	db	99	;'c'
   237  000F4A  69                 	db	105	;'i'
   238  000F4B  64                 	db	100	;'d'
   239  000F4C  61                 	db	97	;'a'
   240  000F4D  64                 	db	100	;'d'
   241  000F4E  20                 	db	32
   242  000F4F  66                 	db	102	;'f'
   243  000F50  69                 	db	105	;'i'
   244  000F51  6A                 	db	106	;'j'
   245  000F52  61                 	db	97	;'a'
   246  000F53  64                 	db	100	;'d'
   247  000F54  61                 	db	97	;'a'
   248  000F55  20                 	db	32
   249  000F56  61                 	db	97	;'a'
   250  000F57  6C                 	db	108	;'l'
   251  000F58  3A                 	db	58	;':'
   252  000F59  20                 	db	32
   253  000F5A  25                 	db	37
   254  000F5B  30                 	db	48	;'0'
   255  000F5C  33                 	db	51	;'3'
   256  000F5D  75                 	db	117	;'u'
   257  000F5E  25                 	db	37
   258  000F5F  63                 	db	99	;'c'
   259  000F60  00                 	db	0
   260  000F61                     STR_2:
   261  000F61  56                 	db	86	;'V'
   262  000F62  65                 	db	101	;'e'
   263  000F63  68                 	db	104	;'h'
   264  000F64  69                 	db	105	;'i'
   265  000F65  63                 	db	99	;'c'
   266  000F66  75                 	db	117	;'u'
   267  000F67  6C                 	db	108	;'l'
   268  000F68  6F                 	db	111	;'o'
   269  000F69  20                 	db	32
   270  000F6A  65                 	db	101	;'e'
   271  000F6B  6E                 	db	110	;'n'
   272  000F6C  20                 	db	32
   273  000F6D  72                 	db	114	;'r'
   274  000F6E  65                 	db	101	;'e'
   275  000F6F  76                 	db	118	;'v'
   276  000F70  65                 	db	101	;'e'
   277  000F71  72                 	db	114	;'r'
   278  000F72  73                 	db	115	;'s'
   279  000F73  61                 	db	97	;'a'
   280  000F74  21                 	db	33
   281  000F75  00                 	db	0
   282  000F76                     STR_1:
   283  000F76  4D                 	db	77	;'M'
   284  000F77  6F                 	db	111	;'o'
   285  000F78  74                 	db	116	;'t'
   286  000F79  6F                 	db	111	;'o'
   287  000F7A  72                 	db	114	;'r'
   288  000F7B  65                 	db	101	;'e'
   289  000F7C  73                 	db	115	;'s'
   290  000F7D  20                 	db	32
   291  000F7E  65                 	db	101	;'e'
   292  000F7F  6E                 	db	110	;'n'
   293  000F80  63                 	db	99	;'c'
   294  000F81  65                 	db	101	;'e'
   295  000F82  6E                 	db	110	;'n'
   296  000F83  64                 	db	100	;'d'
   297  000F84  69                 	db	105	;'i'
   298  000F85  64                 	db	100	;'d'
   299  000F86  6F                 	db	111	;'o'
   300  000F87  73                 	db	115	;'s'
   301  000F88  21                 	db	33
   302  000F89  00                 	db	0
   303  000F8A                     STR_4:
   304  000F8A  46                 	db	70	;'F'
   305  000F8B  41                 	db	65	;'A'
   306  000F8C  4C                 	db	76	;'L'
   307  000F8D  54                 	db	84	;'T'
   308  000F8E  41                 	db	65	;'A'
   309  000F8F  20                 	db	32
   310  000F90  49                 	db	73	;'I'
   311  000F91  4D                 	db	77	;'M'
   312  000F92  50                 	db	80	;'P'
   313  000F93  4C                 	db	76	;'L'
   314  000F94  45                 	db	69	;'E'
   315  000F95  4D                 	db	77	;'M'
   316  000F96  45                 	db	69	;'E'
   317  000F97  4E                 	db	78	;'N'
   318  000F98  54                 	db	84	;'T'
   319  000F99  41                 	db	65	;'A'
   320  000F9A  52                 	db	82	;'R'
   321  000F9B  21                 	db	33
   322  000F9C  00                 	db	0
   323  000F9D                     STR_5:
   324  000F9D  46                 	db	70	;'F'
   325  000F9E  41                 	db	65	;'A'
   326  000F9F  4C                 	db	76	;'L'
   327  000FA0  54                 	db	84	;'T'
   328  000FA1  41                 	db	65	;'A'
   329  000FA2  20                 	db	32
   330  000FA3  49                 	db	73	;'I'
   331  000FA4  4D                 	db	77	;'M'
   332  000FA5  50                 	db	80	;'P'
   333  000FA6  4C                 	db	76	;'L'
   334  000FA7  45                 	db	69	;'E'
   335  000FA8  4D                 	db	77	;'M'
   336  000FA9  45                 	db	69	;'E'
   337  000FAA  54                 	db	84	;'T'
   338  000FAB  41                 	db	65	;'A'
   339  000FAC  52                 	db	82	;'R'
   340  000FAD  21                 	db	33
   341  000FAE  00                 	db	0
   342                           
   343                           ; #config settings
   344  000FAF  00                 	db	0	; dummy byte at the end
   345  0000                     
   346                           	psect	cinit
   347  003224                     __pcinit:
   348                           	opt callstack 0
   349  003224                     start_initialization:
   350                           	opt callstack 0
   351  003224                     __initialization:
   352                           	opt callstack 0
   353                           
   354                           ; Initialize objects allocated to BANK0 (10 bytes)
   355                           ; load TBLPTR registers with __pidataBANK0
   356  003224  0E98               	movlw	low __pidataBANK0
   357  003226  6EF6               	movwf	tblptrl,c
   358  003228  0E36               	movlw	high __pidataBANK0
   359  00322A  6EF7               	movwf	tblptrh,c
   360  00322C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   361  00322E  6EF8               	movwf	tblptru,c
   362  003230  EE00  F0DF         	lfsr	0,__pdataBANK0
   363  003234  EE10 F00A          	lfsr	1,10
   364  003238                     copy_data0:
   365  003238  0009               	tblrd		*+
   366  00323A  CFF5 FFEE          	movff	tablat,postinc0
   367  00323E  50E5               	movf	postdec1,w,c
   368  003240  50E1               	movf	fsr1l,w,c
   369  003242  E1FA               	bnz	copy_data0
   370                           
   371                           ; Initialize objects allocated to COMRAM (1 bytes)
   372                           ; load TBLPTR registers with __pidataCOMRAM
   373  003244  0EA4               	movlw	low __pidataCOMRAM
   374  003246  6EF6               	movwf	tblptrl,c
   375  003248  0E36               	movlw	high __pidataCOMRAM
   376  00324A  6EF7               	movwf	tblptrh,c
   377  00324C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   378  00324E  6EF8               	movwf	tblptru,c
   379  003250  0009               	tblrd		*+	;fetch initializer
   380  003252  CFF5 F059          	movff	tablat,__pdataCOMRAM
   381                           
   382                           ; Clear objects allocated to BANK1 (32 bytes)
   383  003256  EE01  F000         	lfsr	0,__pbssBANK1
   384  00325A  0E20               	movlw	32
   385  00325C                     clear_0:
   386  00325C  6AEE               	clrf	postinc0,c
   387  00325E  06E8               	decf	wreg,f,c
   388  003260  E1FD               	bnz	clear_0
   389                           
   390                           ; Clear objects allocated to BANK0 (53 bytes)
   391  003262  EE00  F0AA         	lfsr	0,__pbssBANK0
   392  003266  0E35               	movlw	53
   393  003268                     clear_1:
   394  003268  6AEE               	clrf	postinc0,c
   395  00326A  06E8               	decf	wreg,f,c
   396  00326C  E1FD               	bnz	clear_1
   397                           
   398                           ; Clear objects allocated to COMRAM (4 bytes)
   399  00326E  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   400  003270  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   401  003272  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   402  003274  6A55               	clrf	__pbssCOMRAM& (0+255),c
   403  003276                     end_of_initialization:
   404                           	opt callstack 0
   405  003276                     __end_of__initialization:
   406                           	opt callstack 0
   407  003276  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   408  003278  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   409  00327A  0100               	movlb	0
   410  00327C  EF30  F018         	goto	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMRAM
   413  000055                     __pbssCOMRAM:
   414                           	opt callstack 0
   415  000055                     _width:
   416                           	opt callstack 0
   417  000055                     	ds	2
   418  000057                     _flags:
   419                           	opt callstack 0
   420  000057                     	ds	2
   421                           
   422                           	psect	dataCOMRAM
   423  000059                     __pdataCOMRAM:
   424                           	opt callstack 0
   425  000059                     _tiempo_anterior_1:
   426                           	opt callstack 0
   427  000059                     	ds	1
   428                           
   429                           	psect	bssBANK0
   430  0000AA                     __pbssBANK0:
   431                           	opt callstack 0
   432  0000AA                     	ds	20
   433  0000BE                     fabsf@F463:
   434                           	opt callstack 0
   435  0000BE                     	ds	4
   436  0000C2                     ___rem_pio2f@F530:
   437                           	opt callstack 0
   438  0000C2                     	ds	4
   439  0000C6                     _nout:
   440                           	opt callstack 0
   441  0000C6                     	ds	2
   442  0000C8                     _prec:
   443                           	opt callstack 0
   444  0000C8                     	ds	2
   445  0000CA                     _medicion_adc:
   446                           	opt callstack 0
   447  0000CA                     	ds	2
   448  0000CC                     _velocidad:
   449                           	opt callstack 0
   450  0000CC                     	ds	2
   451  0000CE                     _obstaculo:
   452                           	opt callstack 0
   453  0000CE                     	ds	1
   454  0000CF                     _bandera_servo:
   455                           	opt callstack 0
   456  0000CF                     	ds	1
   457  0000D0                     _bandera_adc:
   458                           	opt callstack 0
   459  0000D0                     	ds	1
   460  0000D1                     _bandera:
   461                           	opt callstack 0
   462  0000D1                     	ds	1
   463  0000D2                     _servo_dirreccion:
   464                           	opt callstack 0
   465  0000D2                     	ds	1
   466  0000D3                     _contador_timer_5:
   467                           	opt callstack 0
   468  0000D3                     	ds	1
   469  0000D4                     _indicador:
   470                           	opt callstack 0
   471  0000D4                     	ds	1
   472  0000D5                     _datos:
   473                           	opt callstack 0
   474  0000D5                     	ds	10
   475                           
   476                           	psect	dataBANK0
   477  0000DF                     __pdataBANK0:
   478                           	opt callstack 0
   479  0000DF                     main@F7560:
   480                           	opt callstack 0
   481  0000DF                     	ds	6
   482  0000E5                     _TIME_MAX:
   483                           	opt callstack 0
   484  0000E5                     	ds	2
   485  0000E7                     _cicle_90:
   486                           	opt callstack 0
   487  0000E7                     	ds	2
   488                           
   489                           	psect	bssBANK1
   490  000100                     __pbssBANK1:
   491                           	opt callstack 0
   492  000100                     _dbuf:
   493                           	opt callstack 0
   494  000100                     	ds	32
   495                           
   496                           	psect	cstackBANK1
   497  000120                     __pcstackBANK1:
   498                           	opt callstack 0
   499  000120                     sinf@n:
   500                           	opt callstack 0
   501                           
   502                           ; 4 bytes @ 0x0
   503  000120                     	ds	4
   504  000124                     sinf@__xc8_float_word:
   505                           	opt callstack 0
   506                           
   507                           ; 4 bytes @ 0x4
   508  000124                     	ds	4
   509  000128                     _sinf$1528:
   510                           	opt callstack 0
   511                           
   512                           ; 4 bytes @ 0x8
   513  000128                     	ds	4
   514  00012C                     _sinf$1529:
   515                           	opt callstack 0
   516                           
   517                           ; 4 bytes @ 0xC
   518  00012C                     	ds	4
   519  000130                     sinf@sign:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x10
   523  000130                     	ds	2
   524  000132                     _sinf$1804:
   525                           	opt callstack 0
   526                           
   527                           ; 4 bytes @ 0x12
   528  000132                     	ds	4
   529  000136                     sinf@y:
   530                           	opt callstack 0
   531                           
   532                           ; 4 bytes @ 0x16
   533  000136                     	ds	4
   534  00013A                     sinf@ix:
   535                           	opt callstack 0
   536                           
   537                           ; 4 bytes @ 0x1A
   538  00013A                     	ds	4
   539                           
   540                           	psect	cstackBANK0
   541  000060                     __pcstackBANK0:
   542                           	opt callstack 0
   543  000060                     ___cosdf@r:
   544                           	opt callstack 0
   545  000060                     vfpfcnvrt@llu:
   546                           	opt callstack 0
   547                           
   548                           ; 8 bytes @ 0x0
   549  000060                     	ds	4
   550  000064                     ___cosdf$1805:
   551                           	opt callstack 0
   552                           
   553                           ; 4 bytes @ 0x4
   554  000064                     	ds	4
   555  000068                     vfpfcnvrt@c:
   556                           	opt callstack 0
   557  000068                     ___cosdf$1806:
   558                           	opt callstack 0
   559                           
   560                           ; 4 bytes @ 0x8
   561  000068                     	ds	1
   562  000069                     vfpfcnvrt@done:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x9
   566  000069                     	ds	2
   567  00006B                     _vfpfcnvrt$969:
   568                           	opt callstack 0
   569                           
   570                           ; 2 bytes @ 0xB
   571  00006B                     	ds	1
   572  00006C                     ___cosdf$1807:
   573                           	opt callstack 0
   574                           
   575                           ; 4 bytes @ 0xC
   576  00006C                     	ds	1
   577  00006D                     ?_vfprintf:
   578                           	opt callstack 0
   579  00006D                     vfprintf@fp:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0xD
   583  00006D                     	ds	2
   584  00006F                     vfprintf@fmt:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0xF
   588  00006F                     	ds	1
   589  000070                     ___cosdf@w:
   590                           	opt callstack 0
   591                           
   592                           ; 4 bytes @ 0x10
   593  000070                     	ds	1
   594  000071                     vfprintf@ap:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x11
   598  000071                     	ds	2
   599  000073                     ?_sprintf:
   600                           	opt callstack 0
   601  000073                     sprintf@s:
   602                           	opt callstack 0
   603                           
   604                           ; 2 bytes @ 0x13
   605  000073                     	ds	1
   606  000074                     ___cosdf@z:
   607                           	opt callstack 0
   608                           
   609                           ; 4 bytes @ 0x14
   610  000074                     	ds	1
   611  000075                     sprintf@fmt:
   612                           	opt callstack 0
   613                           
   614                           ; 2 bytes @ 0x15
   615  000075                     	ds	3
   616  000078                     ?___flneg:
   617                           	opt callstack 0
   618  000078                     ___flneg@f1:
   619                           	opt callstack 0
   620                           
   621                           ; 4 bytes @ 0x18
   622  000078                     	ds	4
   623  00007C                     ?___rem_pio2f:
   624                           	opt callstack 0
   625  00007C                     ?___sindf:
   626                           	opt callstack 0
   627  00007C                     ___rem_pio2f@x:
   628                           	opt callstack 0
   629  00007C                     ___sindf@x:
   630                           	opt callstack 0
   631                           
   632                           ; 4 bytes @ 0x1C
   633  00007C                     	ds	1
   634  00007D                     sprintf@ap:
   635                           	opt callstack 0
   636                           
   637                           ; 2 bytes @ 0x1D
   638  00007D                     	ds	2
   639  00007F                     sprintf@f:
   640                           	opt callstack 0
   641                           
   642                           ; 6 bytes @ 0x1F
   643  00007F                     	ds	1
   644  000080                     ___rem_pio2f@y:
   645                           	opt callstack 0
   646  000080                     ___sindf@r:
   647                           	opt callstack 0
   648                           
   649                           ; 4 bytes @ 0x20
   650  000080                     	ds	2
   651  000082                     ___rem_pio2f@ty:
   652                           	opt callstack 0
   653                           
   654                           ; 4 bytes @ 0x22
   655  000082                     	ds	2
   656  000084                     ___sindf@w:
   657                           	opt callstack 0
   658                           
   659                           ; 4 bytes @ 0x24
   660  000084                     	ds	1
   661  000085                     terminal@comand:
   662                           	opt callstack 0
   663                           
   664                           ; 2 bytes @ 0x25
   665  000085                     	ds	1
   666  000086                     ___rem_pio2f@ix:
   667                           	opt callstack 0
   668                           
   669                           ; 4 bytes @ 0x26
   670  000086                     	ds	1
   671  000087                     terminal@texto:
   672                           	opt callstack 0
   673                           
   674                           ; 20 bytes @ 0x27
   675  000087                     	ds	1
   676  000088                     ___sindf$1809:
   677                           	opt callstack 0
   678                           
   679                           ; 4 bytes @ 0x28
   680  000088                     	ds	2
   681  00008A                     ___rem_pio2f@sign:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x2A
   685  00008A                     	ds	2
   686  00008C                     ___rem_pio2f@u:
   687                           	opt callstack 0
   688  00008C                     ___sindf$1810:
   689                           	opt callstack 0
   690                           
   691                           ; 4 bytes @ 0x2C
   692  00008C                     	ds	4
   693  000090                     ___rem_pio2f$1808:
   694                           	opt callstack 0
   695  000090                     ___sindf$1811:
   696                           	opt callstack 0
   697                           
   698                           ; 4 bytes @ 0x30
   699  000090                     	ds	4
   700  000094                     ___rem_pio2f@fn:
   701                           	opt callstack 0
   702  000094                     ___sindf@s:
   703                           	opt callstack 0
   704                           
   705                           ; 4 bytes @ 0x34
   706  000094                     	ds	4
   707  000098                     ___rem_pio2f@t:
   708                           	opt callstack 0
   709  000098                     ___sindf@z:
   710                           	opt callstack 0
   711                           
   712                           ; 4 bytes @ 0x38
   713  000098                     	ds	3
   714  00009B                     terminal@medicion:
   715                           	opt callstack 0
   716                           
   717                           ; 2 bytes @ 0x3B
   718  00009B                     	ds	1
   719  00009C                     ___rem_pio2f@n:
   720                           	opt callstack 0
   721                           
   722                           ; 4 bytes @ 0x3C
   723  00009C                     	ds	1
   724  00009D                     terminal@degree:
   725                           	opt callstack 0
   726                           
   727                           ; 1 bytes @ 0x3D
   728  00009D                     	ds	3
   729  0000A0                     ?_sinf:
   730                           	opt callstack 0
   731  0000A0                     sinf@x:
   732                           	opt callstack 0
   733                           
   734                           ; 4 bytes @ 0x40
   735  0000A0                     	ds	4
   736  0000A4                     main@text:
   737                           	opt callstack 0
   738                           
   739                           ; 6 bytes @ 0x44
   740  0000A4                     	ds	6
   741                           
   742                           	psect	cstackCOMRAM
   743  000001                     __pcstackCOMRAM:
   744                           	opt callstack 0
   745  000001                     ??_rutina:
   746  000001                     
   747                           ; 1 bytes @ 0x0
   748  000001                     	ds	4
   749  000005                     rutina@dato:
   750                           	opt callstack 0
   751                           
   752                           ; 1 bytes @ 0x4
   753  000005                     	ds	1
   754  000006                     ??_estadoDirreccion:
   755  000006                     ??_dirreccion:
   756  000006                     ??_rutinaArranque:
   757  000006                     ?_length:
   758                           	opt callstack 0
   759  000006                     ?_strlen:
   760                           	opt callstack 0
   761  000006                     ?_isdigit:
   762                           	opt callstack 0
   763  000006                     ?_isspace:
   764                           	opt callstack 0
   765  000006                     ?___wmul:
   766                           	opt callstack 0
   767  000006                     ?_fabsf:
   768                           	opt callstack 0
   769  000006                     ?___xxtofl:
   770                           	opt callstack 0
   771  000006                     ?___lodiv:
   772                           	opt callstack 0
   773  000006                     ?___lomod:
   774                           	opt callstack 0
   775  000006                     length@text:
   776                           	opt callstack 0
   777  000006                     ___wmul@multiplier:
   778                           	opt callstack 0
   779  000006                     isdigit@c:
   780                           	opt callstack 0
   781  000006                     isspace@c:
   782                           	opt callstack 0
   783  000006                     fputc@c:
   784                           	opt callstack 0
   785  000006                     strlen@s:
   786                           	opt callstack 0
   787  000006                     ___xxtofl@val:
   788                           	opt callstack 0
   789  000006                     fabsf@x:
   790                           	opt callstack 0
   791  000006                     ___lodiv@dividend:
   792                           	opt callstack 0
   793  000006                     ___lomod@dividend:
   794                           	opt callstack 0
   795                           
   796                           ; 8 bytes @ 0x5
   797  000006                     	ds	2
   798  000008                     ??_length:
   799  000008                     ??_isdigit:
   800  000008                     ??_isspace:
   801  000008                     ??_encenderMotor:
   802  000008                     estadoDirreccion@angulo:
   803                           	opt callstack 0
   804  000008                     dirreccion@degree:
   805                           	opt callstack 0
   806  000008                     ___wmul@multiplicand:
   807                           	opt callstack 0
   808  000008                     fputc@fp:
   809                           	opt callstack 0
   810  000008                     strlen@a:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0x7
   814  000008                     	ds	1
   815  000009                     estadoDirreccion@valor:
   816                           	opt callstack 0
   817  000009                     dirreccion@tiempo_1:
   818                           	opt callstack 0
   819                           
   820                           ; 1 bytes @ 0x8
   821  000009                     	ds	1
   822  00000A                     ??_fputc:
   823  00000A                     ??___xxtofl:
   824  00000A                     length@longitud:
   825                           	opt callstack 0
   826  00000A                     ___wmul@product:
   827                           	opt callstack 0
   828  00000A                     fabsf@u:
   829                           	opt callstack 0
   830                           
   831                           ; 4 bytes @ 0x9
   832  00000A                     	ds	2
   833  00000C                     length@dato:
   834                           	opt callstack 0
   835  00000C                     _isspace$1443:
   836                           	opt callstack 0
   837                           
   838                           ; 1 bytes @ 0xB
   839  00000C                     	ds	1
   840  00000D                     ?_atoi:
   841                           	opt callstack 0
   842  00000D                     length@i:
   843                           	opt callstack 0
   844  00000D                     atoi@s:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0xC
   848  00000D                     	ds	1
   849  00000E                     ___xxtofl@sign:
   850                           	opt callstack 0
   851  00000E                     enviarRS232@valores:
   852                           	opt callstack 0
   853  00000E                     ___lodiv@divisor:
   854                           	opt callstack 0
   855  00000E                     ___lomod@divisor:
   856                           	opt callstack 0
   857                           
   858                           ; 8 bytes @ 0xD
   859  00000E                     	ds	1
   860  00000F                     ??_atoi:
   861  00000F                     ___xxtofl@exp:
   862                           	opt callstack 0
   863  00000F                     fputs@s:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0xE
   867  00000F                     	ds	1
   868  000010                     ??_enviarRS232:
   869  000010                     ___xxtofl@arg:
   870                           	opt callstack 0
   871                           
   872                           ; 4 bytes @ 0xF
   873  000010                     	ds	1
   874  000011                     fputs@fp:
   875                           	opt callstack 0
   876                           
   877                           ; 2 bytes @ 0x10
   878  000011                     	ds	1
   879  000012                     enviarRS232@longitud_texto:
   880                           	opt callstack 0
   881                           
   882                           ; 2 bytes @ 0x11
   883  000012                     	ds	1
   884  000013                     fputs@c:
   885                           	opt callstack 0
   886  000013                     atoi@neg:
   887                           	opt callstack 0
   888                           
   889                           ; 2 bytes @ 0x12
   890  000013                     	ds	1
   891  000014                     ?___flmul:
   892                           	opt callstack 0
   893  000014                     enviarRS232@i:
   894                           	opt callstack 0
   895  000014                     fputs@i:
   896                           	opt callstack 0
   897  000014                     ___flmul@b:
   898                           	opt callstack 0
   899                           
   900                           ; 4 bytes @ 0x13
   901  000014                     	ds	1
   902  000015                     _atoi$1425:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0x14
   906  000015                     	ds	1
   907  000016                     ?_pad:
   908                           	opt callstack 0
   909  000016                     ___lomod@counter:
   910                           	opt callstack 0
   911  000016                     pad@fp:
   912                           	opt callstack 0
   913  000016                     ___lodiv@quotient:
   914                           	opt callstack 0
   915                           
   916                           ; 8 bytes @ 0x15
   917  000016                     	ds	1
   918  000017                     _atoi$1427:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0x16
   922  000017                     	ds	1
   923  000018                     pad@buf:
   924                           	opt callstack 0
   925  000018                     ___flmul@a:
   926                           	opt callstack 0
   927                           
   928                           ; 4 bytes @ 0x17
   929  000018                     	ds	1
   930  000019                     _atoi$1426:
   931                           	opt callstack 0
   932                           
   933                           ; 1 bytes @ 0x18
   934  000019                     	ds	1
   935  00001A                     pad@p:
   936                           	opt callstack 0
   937  00001A                     atoi@n:
   938                           	opt callstack 0
   939                           
   940                           ; 2 bytes @ 0x19
   941  00001A                     	ds	2
   942  00001C                     ??___flmul:
   943  00001C                     ??_pad:
   944                           
   945                           ; 1 bytes @ 0x1B
   946  00001C                     	ds	1
   947  00001D                     pad@i:
   948                           	opt callstack 0
   949                           
   950                           ; 2 bytes @ 0x1C
   951  00001D                     	ds	1
   952  00001E                     ___lodiv@counter:
   953                           	opt callstack 0
   954                           
   955                           ; 1 bytes @ 0x1D
   956  00001E                     	ds	1
   957  00001F                     pad@w:
   958                           	opt callstack 0
   959                           
   960                           ; 2 bytes @ 0x1E
   961  00001F                     	ds	1
   962  000020                     ___flmul@sign:
   963                           	opt callstack 0
   964                           
   965                           ; 1 bytes @ 0x1F
   966  000020                     	ds	1
   967  000021                     ?_ctoa:
   968                           	opt callstack 0
   969  000021                     ?_utoa:
   970                           	opt callstack 0
   971  000021                     ___flmul@aexp:
   972                           	opt callstack 0
   973  000021                     ctoa@fp:
   974                           	opt callstack 0
   975  000021                     utoa@fp:
   976                           	opt callstack 0
   977                           
   978                           ; 2 bytes @ 0x20
   979  000021                     	ds	1
   980  000022                     ___flmul@grs:
   981                           	opt callstack 0
   982                           
   983                           ; 4 bytes @ 0x21
   984  000022                     	ds	1
   985  000023                     ctoa@c:
   986                           	opt callstack 0
   987  000023                     utoa@d:
   988                           	opt callstack 0
   989                           
   990                           ; 8 bytes @ 0x22
   991  000023                     	ds	1
   992  000024                     ctoa@w:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0x23
   996  000024                     	ds	2
   997  000026                     ___flmul@bexp:
   998                           	opt callstack 0
   999                           
  1000                           ; 1 bytes @ 0x25
  1001  000026                     	ds	1
  1002  000027                     ___flmul@prod:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x26
  1006  000027                     	ds	4
  1007  00002B                     ??_utoa:
  1008  00002B                     ___flmul@temp:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x2A
  1012  00002B                     	ds	2
  1013  00002D                     ?___fladd:
  1014                           	opt callstack 0
  1015  00002D                     ___fladd@b:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x2C
  1019  00002D                     	ds	4
  1020  000031                     ___fladd@a:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x30
  1024  000031                     	ds	2
  1025  000033                     utoa@p:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x32
  1029  000033                     	ds	2
  1030  000035                     ??___fladd:
  1031  000035                     utoa@w:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x34
  1035  000035                     	ds	2
  1036  000037                     utoa@n:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 8 bytes @ 0x36
  1040  000037                     	ds	2
  1041  000039                     ___fladd@signs:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x38
  1045  000039                     	ds	1
  1046  00003A                     ___fladd@aexp:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x39
  1050  00003A                     	ds	1
  1051  00003B                     ___fladd@bexp:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x3A
  1055  00003B                     	ds	1
  1056  00003C                     ___fladd@grs:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x3B
  1060  00003C                     	ds	1
  1061  00003D                     ?___flsub:
  1062                           	opt callstack 0
  1063  00003D                     ?___cosdf:
  1064                           	opt callstack 0
  1065  00003D                     ?___fltol:
  1066                           	opt callstack 0
  1067  00003D                     ___fltol@f1:
  1068                           	opt callstack 0
  1069  00003D                     ___flsub@b:
  1070                           	opt callstack 0
  1071  00003D                     ___cosdf@x:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x3C
  1075  00003D                     	ds	2
  1076  00003F                     utoa@i:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x3E
  1080  00003F                     	ds	2
  1081  000041                     ??___fltol:
  1082  000041                     ?_vfpfcnvrt:
  1083                           	opt callstack 0
  1084  000041                     vfpfcnvrt@fp:
  1085                           	opt callstack 0
  1086  000041                     ___flsub@a:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x40
  1090  000041                     	ds	2
  1091  000043                     vfpfcnvrt@fmt:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x42
  1095  000043                     	ds	2
  1096  000045                     ___fltol@sign1:
  1097                           	opt callstack 0
  1098  000045                     vfpfcnvrt@ap:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x44
  1102  000045                     	ds	1
  1103  000046                     ___fltol@exp1:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x45
  1107  000046                     	ds	1
  1108  000047                     ??___rem_pio2f:
  1109  000047                     ??_vfpfcnvrt:
  1110  000047                     fijarVelocidad@DC:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x46
  1114  000047                     	ds	4
  1115  00004B                     ??_sinf:
  1116  00004B                     vfprintf@cfmt:
  1117                           	opt callstack 0
  1118  00004B                     _fijarVelocidad$1803:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x4A
  1122  00004B                     	ds	2
  1123  00004D                     
  1124                           ; 1 bytes @ 0x4C
  1125  00004D                     	ds	2
  1126  00004F                     fijarVelocidad@speed:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x4E
  1130  00004F                     	ds	1
  1131  000050                     ??_terminal:
  1132                           
  1133                           ; 1 bytes @ 0x4F
  1134  000050                     	ds	5
  1135  000055                     
  1136                           ; 1 bytes @ 0x54
  1137 ;;
  1138 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1139 ;;
  1140 ;; *************** function _main *****************
  1141 ;; Defined at:
  1142 ;;		line 79 in file "auto.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  text            6   68[BANK0 ] unsigned char [6]
  1147 ;;  caca            4    0        float 
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1158 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1160 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1161 ;;Total ram usage:       10 bytes
  1162 ;; Hardware stack levels required when called:   10
  1163 ;; This function calls:
  1164 ;;		_PWMServo
  1165 ;;		_configuracionInicial
  1166 ;;		_enviarRS232
  1167 ;;		_sinf
  1168 ;;		_terminal
  1169 ;; This function is called by:
  1170 ;;		Startup code after reset
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text0
  1175  003060                     __ptext0:
  1176                           	opt callstack 0
  1177  003060                     _main:
  1178                           	opt callstack 21
  1179                           
  1180                           ;auto.c: 80:     unsigned char text[] = "HOLA!";
  1181                           
  1182                           ;incstack = 0
  1183  003060  EE20  F0DF         	lfsr	2,main@F7560
  1184  003064  EE10  F0A4         	lfsr	1,main@text
  1185  003068  0E05               	movlw	5
  1186  00306A                     u4731:
  1187  00306A  CFDB FFE3          	movff	plusw2,plusw1
  1188  00306E  06E8               	decf	wreg,f,c
  1189  003070  E2FC               	bc	u4731
  1190                           
  1191                           ;auto.c: 81:     configuracionInicial();
  1192  003072  EC14  F01B         	call	_configuracionInicial	;wreg free
  1193                           
  1194                           ;auto.c: 82:     enviarRS232(text);
  1195  003076  0EA4               	movlw	low main@text
  1196  003078  6E0E               	movwf	enviarRS232@valores,c
  1197  00307A  0E00               	movlw	high main@text
  1198  00307C  6E0F               	movwf	enviarRS232@valores+1,c
  1199  00307E  ECA8  F018         	call	_enviarRS232	;wreg free
  1200  003082  0EF6               	movlw	246
  1201  003084  0100               	movlb	0	; () banked
  1202  003086  6FA0               	movwf	sinf@x& (0+255),b
  1203  003088  0E37               	movlw	55
  1204  00308A  6FA1               	movwf	(sinf@x+1)& (0+255),b
  1205  00308C  0E10               	movlw	16
  1206  00308E  6FA2               	movwf	(sinf@x+2)& (0+255),b
  1207  003090  0E42               	movlw	66
  1208  003092  6FA3               	movwf	(sinf@x+3)& (0+255),b
  1209  003094  ECD8  F007         	call	_sinf	;wreg free
  1210  003098                     l4971:
  1211                           
  1212                           ;auto.c: 85:         if(bandera == 1){
  1213  003098  0100               	movlb	0	; () banked
  1214  00309A  05D1               	decf	_bandera& (0+255),w,b
  1215  00309C  A4D8               	btfss	status,2,c
  1216  00309E  D008               	goto	l4977
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;auto.c: 86:             bandera = 0;
  1220  0030A0  0E00               	movlw	0
  1221  0030A2  6FD1               	movwf	_bandera& (0+255),b
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;auto.c: 87:             terminal(datos);
  1225  0030A4  0ED5               	movlw	low _datos
  1226  0030A6  6F85               	movwf	terminal@comand& (0+255),b
  1227  0030A8  0E00               	movlw	high _datos
  1228  0030AA  6F86               	movwf	(terminal@comand+1)& (0+255),b
  1229  0030AC  EC6D  F015         	call	_terminal	;wreg free
  1230  0030B0                     l4977:
  1231                           
  1232                           ;auto.c: 89:         if(bandera_servo == 1){
  1233  0030B0  0100               	movlb	0	; () banked
  1234  0030B2  05CF               	decf	_bandera_servo& (0+255),w,b
  1235  0030B4  A4D8               	btfss	status,2,c
  1236  0030B6  D004               	goto	l4983
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;auto.c: 90:             bandera_servo = 0;
  1240  0030B8  0E00               	movlw	0
  1241  0030BA  6FCF               	movwf	_bandera_servo& (0+255),b
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;auto.c: 91:             PWMServo();
  1245  0030BC  ECBC  F01A         	call	_PWMServo	;wreg free
  1246  0030C0                     l4983:
  1247                           
  1248                           ;auto.c: 93:         if(bandera_adc == 1){
  1249  0030C0  0100               	movlb	0	; () banked
  1250  0030C2  05D0               	decf	_bandera_adc& (0+255),w,b
  1251  0030C4  A4D8               	btfss	status,2,c
  1252  0030C6  D002               	goto	l4987
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;auto.c: 94:             bandera_adc = 0;
  1256  0030C8  0E00               	movlw	0
  1257  0030CA  6FD0               	movwf	_bandera_adc& (0+255),b
  1258  0030CC                     l4987:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;auto.c: 97:         if(obstaculo == 1){
  1262  0030CC  05CE               	decf	_obstaculo& (0+255),w,b
  1263  0030CE  A4D8               	btfss	status,2,c
  1264  0030D0  D7E3               	goto	l4971
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;auto.c: 98:             obstaculo = 0;
  1268  0030D2  0E00               	movlw	0
  1269  0030D4  6FCE               	movwf	_obstaculo& (0+255),b
  1270  0030D6  D7E0               	goto	l4971
  1271  0030D8                     __end_of_main:
  1272                           	opt callstack 0
  1273                           
  1274 ;; *************** function _terminal *****************
  1275 ;; Defined at:
  1276 ;;		line 113 in file "auto.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  comand          2   37[BANK0 ] PTR unsigned char 
  1279 ;;		 -> datos(10), 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  texto          20   39[BANK0 ] unsigned char [20]
  1282 ;;  medicion        2   59[BANK0 ] unsigned int 
  1283 ;;  degree          1   61[BANK0 ] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1293 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1294 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1295 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1296 ;;      Totals:         5      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1297 ;;Total ram usage:       30 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    9
  1300 ;; This function calls:
  1301 ;;		_adelante
  1302 ;;		_atras
  1303 ;;		_dirreccion
  1304 ;;		_encenderMotor
  1305 ;;		_enviarRS232
  1306 ;;		_estadoDirreccion
  1307 ;;		_fijarVelocidad
  1308 ;;		_frenarMotor
  1309 ;;		_sprintf
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text1
  1316  002ADA                     __ptext1:
  1317                           	opt callstack 0
  1318  002ADA                     _terminal:
  1319                           	opt callstack 21
  1320                           
  1321                           ;auto.c: 115:     unsigned char degree;;auto.c: 116:     unsigned char texto[20] = {'\0'
      +                          };
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;incstack = 0
  1325  002ADA  EE20  F087         	lfsr	2,terminal@texto
  1326  002ADE  0E13               	movlw	19
  1327  002AE0                     u4721:
  1328  002AE0  6ADE               	clrf	postinc2,c
  1329  002AE2  06E8               	decf	wreg,f,c
  1330  002AE4  E2FD               	bc	u4721
  1331                           
  1332                           ;auto.c: 117:     switch (comand[0]){
  1333  002AE6  D077               	goto	l4957
  1334  002AE8                     l4929:
  1335                           
  1336                           ;auto.c: 119:             adelante();
  1337  002AE8  EC38  F01B         	call	_adelante	;wreg free
  1338                           
  1339                           ;auto.c: 120:             encenderMotor();
  1340  002AEC  EC43  F01A         	call	_encenderMotor	;wreg free
  1341                           
  1342                           ;auto.c: 121:             enviarRS232("Motores encendidos!");
  1343  002AF0  0E76               	movlw	low STR_1
  1344  002AF2  6E0E               	movwf	enviarRS232@valores,c
  1345  002AF4  0E0F               	movlw	high STR_1
  1346  002AF6  6E0F               	movwf	enviarRS232@valores+1,c
  1347  002AF8  ECA8  F018         	call	_enviarRS232	;wreg free
  1348                           
  1349                           ;auto.c: 122:             break;
  1350  002AFC  0012               	return	
  1351  002AFE                     l4935:
  1352                           
  1353                           ;auto.c: 124:             atras();
  1354  002AFE  EC31  F01B         	call	_atras	;wreg free
  1355                           
  1356                           ;auto.c: 125:             encenderMotor();
  1357  002B02  EC43  F01A         	call	_encenderMotor	;wreg free
  1358                           
  1359                           ;auto.c: 126:             enviarRS232("Vehiculo en reversa!");
  1360  002B06  0E61               	movlw	low STR_2
  1361  002B08  6E0E               	movwf	enviarRS232@valores,c
  1362  002B0A  0E0F               	movlw	high STR_2
  1363  002B0C  6E0F               	movwf	enviarRS232@valores+1,c
  1364  002B0E  ECA8  F018         	call	_enviarRS232	;wreg free
  1365                           
  1366                           ;auto.c: 127:             break;
  1367  002B12  0012               	return	
  1368  002B14                     l4941:
  1369                           
  1370                           ;auto.c: 129:             degree = estadoDirreccion(1);
  1371  002B14  0E01               	movlw	1
  1372  002B16  EC96  F019         	call	_estadoDirreccion
  1373  002B1A  0100               	movlb	0	; () banked
  1374  002B1C  6F9D               	movwf	terminal@degree& (0+255),b
  1375                           
  1376                           ;auto.c: 130:             dirreccion(degree);
  1377  002B1E  519D               	movf	terminal@degree& (0+255),w,b
  1378  002B20  ECDF  F018         	call	_dirreccion
  1379                           
  1380                           ;auto.c: 131:             break;
  1381  002B24  0012               	return	
  1382  002B26                     l4943:
  1383                           
  1384                           ;auto.c: 133:             degree = estadoDirreccion(0);
  1385  002B26  0E00               	movlw	0
  1386  002B28  EC96  F019         	call	_estadoDirreccion
  1387  002B2C  0100               	movlb	0	; () banked
  1388  002B2E  6F9D               	movwf	terminal@degree& (0+255),b
  1389                           
  1390                           ;auto.c: 134:             dirreccion(degree);
  1391  002B30  519D               	movf	terminal@degree& (0+255),w,b
  1392  002B32  ECDF  F018         	call	_dirreccion
  1393                           
  1394                           ;auto.c: 135:             break;
  1395  002B36  0012               	return	
  1396  002B38                     l4945:
  1397                           
  1398                           ;auto.c: 137:             frenarMotor();
  1399  002B38  EC2A  F01B         	call	_frenarMotor	;wreg free
  1400                           
  1401                           ;auto.c: 138:             break;
  1402  002B3C  0012               	return	
  1403  002B3E                     l4947:
  1404                           
  1405                           ;auto.c: 140:             medicion = (comand[1] - 0x30)*100 + (comand[2] - 0x30)*10 + co
      +                          mand[3] - 0x30;
  1406  002B3E  0100               	movlb	0	; () banked
  1407  002B40  EE20 F001          	lfsr	2,1
  1408  002B44  5185               	movf	terminal@comand& (0+255),w,b
  1409  002B46  26D9               	addwf	fsr2l,f,c
  1410  002B48  5186               	movf	(terminal@comand+1)& (0+255),w,b
  1411  002B4A  22DA               	addwfc	fsr2h,f,c
  1412  002B4C  50DF               	movf	indf2,w,c
  1413  002B4E  6E50               	movwf	??_terminal& (0+255),c
  1414  002B50  5050               	movf	??_terminal,w,c
  1415  002B52  0D64               	mullw	100
  1416  002B54  CFF3 F051          	movff	prodl,??_terminal+1
  1417  002B58  CFF4 F052          	movff	prodh,??_terminal+2
  1418  002B5C  EE20 F002          	lfsr	2,2
  1419  002B60  5185               	movf	terminal@comand& (0+255),w,b
  1420  002B62  26D9               	addwf	fsr2l,f,c
  1421  002B64  5186               	movf	(terminal@comand+1)& (0+255),w,b
  1422  002B66  22DA               	addwfc	fsr2h,f,c
  1423  002B68  50DF               	movf	indf2,w,c
  1424  002B6A  6E53               	movwf	(??_terminal+3)& (0+255),c
  1425  002B6C  5053               	movf	??_terminal+3,w,c
  1426  002B6E  0D0A               	mullw	10
  1427  002B70  50F3               	movf	prodl,w,c
  1428  002B72  2651               	addwf	??_terminal+1,f,c
  1429  002B74  50F4               	movf	prodh,w,c
  1430  002B76  2252               	addwfc	??_terminal+2,f,c
  1431  002B78  EE20 F003          	lfsr	2,3
  1432  002B7C  5185               	movf	terminal@comand& (0+255),w,b
  1433  002B7E  26D9               	addwf	fsr2l,f,c
  1434  002B80  5186               	movf	(terminal@comand+1)& (0+255),w,b
  1435  002B82  22DA               	addwfc	fsr2h,f,c
  1436  002B84  50DF               	movf	indf2,w,c
  1437  002B86  6E54               	movwf	(??_terminal+4)& (0+255),c
  1438  002B88  5054               	movf	??_terminal+4,w,c
  1439  002B8A  2651               	addwf	??_terminal+1,f,c
  1440  002B8C  0E00               	movlw	0
  1441  002B8E  2252               	addwfc	??_terminal+2,f,c
  1442  002B90  0E30               	movlw	48
  1443  002B92  2451               	addwf	??_terminal+1,w,c
  1444  002B94  6F9B               	movwf	terminal@medicion& (0+255),b
  1445  002B96  0EEB               	movlw	235
  1446  002B98  2052               	addwfc	??_terminal+2,w,c
  1447  002B9A  6F9C               	movwf	(terminal@medicion+1)& (0+255),b
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;auto.c: 141:             fijarVelocidad(medicion);
  1451  002B9C  519B               	movf	terminal@medicion& (0+255),w,b
  1452  002B9E  EC0A  F016         	call	_fijarVelocidad
  1453                           
  1454                           ;auto.c: 142:             sprintf(texto, "Velocidad fijada al: %03u%c", medicion, '%');
  1455  002BA2  0E87               	movlw	low terminal@texto
  1456  002BA4  0100               	movlb	0	; () banked
  1457  002BA6  6F73               	movwf	sprintf@s& (0+255),b
  1458  002BA8  0E00               	movlw	high terminal@texto
  1459  002BAA  6F74               	movwf	(sprintf@s+1)& (0+255),b
  1460  002BAC  0E45               	movlw	low STR_3
  1461  002BAE  6F75               	movwf	sprintf@fmt& (0+255),b
  1462  002BB0  0E0F               	movlw	high STR_3
  1463  002BB2  6F76               	movwf	(sprintf@fmt+1)& (0+255),b
  1464  002BB4  C09B  F077         	movff	terminal@medicion,?_sprintf+4
  1465  002BB8  C09C  F078         	movff	terminal@medicion+1,?_sprintf+5
  1466  002BBC  0E00               	movlw	0
  1467  002BBE  6F7A               	movwf	(?_sprintf+7)& (0+255),b
  1468  002BC0  0E25               	movlw	37
  1469  002BC2  6F79               	movwf	(?_sprintf+6)& (0+255),b
  1470  002BC4  EC6D  F019         	call	_sprintf	;wreg free
  1471                           
  1472                           ;auto.c: 143:             enviarRS232(texto);
  1473  002BC8  0E87               	movlw	low terminal@texto
  1474  002BCA  6E0E               	movwf	enviarRS232@valores,c
  1475  002BCC  0E00               	movlw	high terminal@texto
  1476  002BCE  6E0F               	movwf	enviarRS232@valores+1,c
  1477  002BD0  ECA8  F018         	call	_enviarRS232	;wreg free
  1478                           
  1479                           ;auto.c: 144:             break;
  1480  002BD4  0012               	return	
  1481  002BD6                     l4957:
  1482  002BD6  C085  FFD9         	movff	terminal@comand,fsr2l
  1483  002BDA  C086  FFDA         	movff	terminal@comand+1,fsr2h
  1484  002BDE  50DF               	movf	indf2,w,c
  1485  002BE0  6E50               	movwf	??_terminal& (0+255),c
  1486  002BE2  6A51               	clrf	(??_terminal+1)& (0+255),c
  1487                           
  1488                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1489                           ; Switch size 1, requested type "simple"
  1490                           ; Number of cases is 1, Range of values is 0 to 0
  1491                           ; switch strategies available:
  1492                           ; Name         Instructions Cycles
  1493                           ; simple_byte            4     3 (average)
  1494                           ;	Chosen strategy is simple_byte
  1495  002BE4  5051               	movf	??_terminal+1,w,c
  1496  002BE6  0A00               	xorlw	0	; case 0
  1497  002BE8  A4D8               	btfss	status,2,c
  1498  002BEA  0012               	return	
  1499                           
  1500                           ; Switch size 1, requested type "simple"
  1501                           ; Number of cases is 6, Range of values is 70 to 119
  1502                           ; switch strategies available:
  1503                           ; Name         Instructions Cycles
  1504                           ; simple_byte           19    10 (average)
  1505                           ;	Chosen strategy is simple_byte
  1506  002BEC  5050               	movf	??_terminal,w,c
  1507  002BEE  0A46               	xorlw	70	; case 70
  1508  002BF0  B4D8               	btfsc	status,2,c
  1509  002BF2  D7A5               	goto	l4947
  1510  002BF4  0A27               	xorlw	39	; case 97
  1511  002BF6  B4D8               	btfsc	status,2,c
  1512  002BF8  D78D               	goto	l4941
  1513  002BFA  0A02               	xorlw	2	; case 99
  1514  002BFC  B4D8               	btfsc	status,2,c
  1515  002BFE  D79C               	goto	l4945
  1516  002C00  0A07               	xorlw	7	; case 100
  1517  002C02  B4D8               	btfsc	status,2,c
  1518  002C04  D790               	goto	l4943
  1519  002C06  0A17               	xorlw	23	; case 115
  1520  002C08  B4D8               	btfsc	status,2,c
  1521  002C0A  D779               	goto	l4935
  1522  002C0C  0A04               	xorlw	4	; case 119
  1523  002C0E  A4D8               	btfss	status,2,c
  1524  002C10  0012               	return	
  1525  002C12  D76A               	goto	l4929
  1526  002C14                     __end_of_terminal:
  1527                           	opt callstack 0
  1528                           
  1529 ;; *************** function _sprintf *****************
  1530 ;; Defined at:
  1531 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  s               2   19[BANK0 ] PTR unsigned char 
  1534 ;;		 -> terminal@texto(20), 
  1535 ;;  fmt             2   21[BANK0 ] PTR const unsigned char 
  1536 ;;		 -> STR_3(28), 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  f               6   31[BANK0 ] struct _IO_FILE
  1539 ;;  ap              2   29[BANK0 ] PTR void [1]
  1540 ;;		 -> ?_sprintf(2), 
  1541 ;;  ret             2    0        int 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  2   19[BANK0 ] int 
  1544 ;; Registers used:
  1545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1551 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1552 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1554 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1555 ;;Total ram usage:       18 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    8
  1558 ;; This function calls:
  1559 ;;		_vfprintf
  1560 ;; This function is called by:
  1561 ;;		_terminal
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text2
  1566  0032DA                     __ptext2:
  1567                           	opt callstack 0
  1568  0032DA                     _sprintf:
  1569                           	opt callstack 21
  1570                           
  1571                           ;incstack = 0
  1572  0032DA  0E77               	movlw	low (?_sprintf+4)
  1573  0032DC  0100               	movlb	0	; () banked
  1574  0032DE  6F7D               	movwf	sprintf@ap& (0+255),b
  1575  0032E0  0E00               	movlw	high (?_sprintf+4)
  1576  0032E2  6F7E               	movwf	(sprintf@ap+1)& (0+255),b
  1577  0032E4  C073  F07F         	movff	sprintf@s,sprintf@f
  1578  0032E8  C074  F080         	movff	sprintf@s+1,sprintf@f+1
  1579                           
  1580                           ; BSR set to: 0
  1581  0032EC  0E00               	movlw	0
  1582  0032EE  6F82               	movwf	(sprintf@f+3)& (0+255),b
  1583  0032F0  0E00               	movlw	0
  1584  0032F2  6F81               	movwf	(sprintf@f+2)& (0+255),b
  1585                           
  1586                           ; BSR set to: 0
  1587  0032F4  0E00               	movlw	0
  1588  0032F6  6F84               	movwf	(sprintf@f+5)& (0+255),b
  1589  0032F8  0E00               	movlw	0
  1590  0032FA  6F83               	movwf	(sprintf@f+4)& (0+255),b
  1591                           
  1592                           ; BSR set to: 0
  1593  0032FC  0E7F               	movlw	low sprintf@f
  1594  0032FE  6F6D               	movwf	vfprintf@fp& (0+255),b
  1595  003300  0E00               	movlw	high sprintf@f
  1596  003302  6F6E               	movwf	(vfprintf@fp+1)& (0+255),b
  1597  003304  C075  F06F         	movff	sprintf@fmt,vfprintf@fmt
  1598  003308  C076  F070         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1599  00330C  0E7D               	movlw	low sprintf@ap
  1600  00330E  6F71               	movwf	vfprintf@ap& (0+255),b
  1601  003310  0E00               	movlw	high sprintf@ap
  1602  003312  6F72               	movwf	(vfprintf@ap+1)& (0+255),b
  1603  003314  EC40  F019         	call	_vfprintf	;wreg free
  1604  003318  0100               	movlb	0	; () banked
  1605  00331A  5181               	movf	(sprintf@f+2)& (0+255),w,b
  1606  00331C  2573               	addwf	sprintf@s& (0+255),w,b
  1607  00331E  6ED9               	movwf	fsr2l,c
  1608  003320  5182               	movf	(sprintf@f+3)& (0+255),w,b
  1609  003322  2174               	addwfc	(sprintf@s+1)& (0+255),w,b
  1610  003324  6EDA               	movwf	fsr2h,c
  1611  003326  0E00               	movlw	0
  1612  003328  6EDF               	movwf	indf2,c
  1613                           
  1614                           ; BSR set to: 0
  1615  00332A  0012               	return		;funcret
  1616  00332C                     __end_of_sprintf:
  1617                           	opt callstack 0
  1618                           
  1619 ;; *************** function _vfprintf *****************
  1620 ;; Defined at:
  1621 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  1624 ;;		 -> sprintf@f(6), 
  1625 ;;  fmt             2   15[BANK0 ] PTR const unsigned char 
  1626 ;;		 -> STR_3(28), 
  1627 ;;  ap              2   17[BANK0 ] PTR PTR void 
  1628 ;;		 -> sprintf@ap(2), 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  cfmt            2   74[COMRAM] PTR unsigned char 
  1631 ;;		 -> STR_3(28), 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  2   13[BANK0 ] int 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1641 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1644 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;Total ram usage:        8 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    7
  1648 ;; This function calls:
  1649 ;;		_vfpfcnvrt
  1650 ;; This function is called by:
  1651 ;;		_sprintf
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text3
  1656  003280                     __ptext3:
  1657                           	opt callstack 0
  1658  003280                     _vfprintf:
  1659                           	opt callstack 21
  1660                           
  1661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;incstack = 0
  1665  003280  C06F  F04B         	movff	vfprintf@fmt,vfprintf@cfmt
  1666  003284  C070  F04C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1667                           
  1668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1669  003288  0E00               	movlw	0
  1670  00328A  0100               	movlb	0	; () banked
  1671  00328C  6FC7               	movwf	(_nout+1)& (0+255),b
  1672  00328E  0E00               	movlw	0
  1673  003290  6FC6               	movwf	_nout& (0+255),b
  1674                           
  1675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1676  003292  D013               	goto	l4485
  1677  003294                     l4483:
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1681  003294  C06D  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1682  003298  C06E  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1683  00329C  0E4B               	movlw	low vfprintf@cfmt
  1684  00329E  6E43               	movwf	vfpfcnvrt@fmt,c
  1685  0032A0  0E00               	movlw	high vfprintf@cfmt
  1686  0032A2  6E44               	movwf	vfpfcnvrt@fmt+1,c
  1687  0032A4  C071  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1688  0032A8  C072  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1689  0032AC  EC0A  F00E         	call	_vfpfcnvrt	;wreg free
  1690  0032B0  5041               	movf	?_vfpfcnvrt,w,c
  1691  0032B2  0100               	movlb	0	; () banked
  1692  0032B4  27C6               	addwf	_nout& (0+255),f,b
  1693  0032B6  5042               	movf	?_vfpfcnvrt+1,w,c
  1694  0032B8  23C7               	addwfc	(_nout+1)& (0+255),f,b
  1695  0032BA                     l4485:
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1699  0032BA  C04B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1700  0032BE  C04C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1701  0032C2                     	if	0	;tblptru may be non-zero
  1702  0032C2                     	endif
  1703  0032C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1704  0032C2  0E00               	movlw	low (__mediumconst shr (0+16))
  1705  0032C4  6EF8               	movwf	tblptru,c
  1706  0032C6                     	endif
  1707  0032C6  0008               	tblrd		*
  1708  0032C8  50F5               	movf	tablat,w,c
  1709  0032CA  0900               	iorlw	0
  1710  0032CC  A4D8               	btfss	status,2,c
  1711  0032CE  D7E2               	goto	l4483
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1715  0032D0  C0C6  F06D         	movff	_nout,?_vfprintf
  1716  0032D4  C0C7  F06E         	movff	_nout+1,?_vfprintf+1
  1717                           
  1718                           ; BSR set to: 0
  1719  0032D8  0012               	return		;funcret
  1720  0032DA                     __end_of_vfprintf:
  1721                           	opt callstack 0
  1722                           
  1723 ;; *************** function _vfpfcnvrt *****************
  1724 ;; Defined at:
  1725 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1728 ;;		 -> sprintf@f(6), 
  1729 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1730 ;;		 -> vfprintf@cfmt(2), 
  1731 ;;  ap              2   68[COMRAM] PTR PTR void 
  1732 ;;		 -> sprintf@ap(2), 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  llu             8    0[BANK0 ] unsigned long long 
  1735 ;;  ll              8    0        long long 
  1736 ;;  f               4    0        long long 
  1737 ;;  vp              3    0        PTR void 
  1738 ;;  ct              3    0        unsigned char [3]
  1739 ;;  cp              3    0        PTR unsigned char 
  1740 ;;  done            2    9[BANK0 ] int 
  1741 ;;  i               2    0        int 
  1742 ;;  c               1    8[BANK0 ] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2   64[COMRAM] int 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1752 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1755 ;;      Totals:        10      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1756 ;;Total ram usage:       23 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    6
  1759 ;; This function calls:
  1760 ;;		_atoi
  1761 ;;		_ctoa
  1762 ;;		_fputc
  1763 ;;		_isdigit
  1764 ;;		_utoa
  1765 ;; This function is called by:
  1766 ;;		_vfprintf
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text4
  1771  001C14                     __ptext4:
  1772                           	opt callstack 0
  1773  001C14                     _vfpfcnvrt:
  1774                           	opt callstack 21
  1775                           
  1776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;incstack = 0
  1780  001C14  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1781  001C18  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1782  001C1C  CFDE FFF6          	movff	postinc2,tblptrl
  1783  001C20  CFDD FFF7          	movff	postdec2,tblptrh
  1784  001C24                     	if	0	;tblptru may be non-zero
  1785  001C24                     	endif
  1786  001C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1787  001C24  0E00               	movlw	low (__mediumconst shr (0+16))
  1788  001C26  6EF8               	movwf	tblptru,c
  1789  001C28                     	endif
  1790  001C28  0008               	tblrd		*
  1791  001C2A  50F5               	movf	tablat,w,c
  1792  001C2C  0A25               	xorlw	37
  1793  001C2E  A4D8               	btfss	status,2,c
  1794  001C30  D178               	goto	l4259
  1795                           
  1796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1797  001C32  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1798  001C36  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1799  001C3A  2ADE               	incf	postinc2,f,c
  1800  001C3C  0E00               	movlw	0
  1801  001C3E  22DD               	addwfc	postdec2,f,c
  1802                           
  1803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1804  001C40  0E00               	movlw	0
  1805  001C42  6E56               	movwf	_width+1,c
  1806  001C44  0E00               	movlw	0
  1807  001C46  6E55               	movwf	_width,c
  1808  001C48  C055  F057         	movff	_width,_flags
  1809  001C4C  C056  F058         	movff	_width+1,_flags+1
  1810                           
  1811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1812  001C50  0100               	movlb	0	; () banked
  1813  001C52  69C8               	setf	_prec& (0+255),b
  1814  001C54  69C9               	setf	(_prec+1)& (0+255),b
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1818  001C56  0E00               	movlw	0
  1819  001C58  6F6A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1820  001C5A  0E00               	movlw	0
  1821  001C5C  D014               	goto	L1
  1822  001C5E                     l4179:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1826  001C5E  8057               	bsf	_flags,0,c
  1827  001C60                     l4181:
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1831  001C60  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1832  001C64  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1833  001C68  2ADE               	incf	postinc2,f,c
  1834  001C6A  0E00               	movlw	0
  1835  001C6C  22DD               	addwfc	postdec2,f,c
  1836                           
  1837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1838  001C6E  D030               	goto	l4205
  1839  001C70                     l4183:
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1843  001C70  8257               	bsf	_flags,1,c
  1844  001C72  D7F6               	goto	l4181
  1845  001C74                     l4187:
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1849  001C74  8457               	bsf	_flags,2,c
  1850  001C76  D7F4               	goto	l4181
  1851  001C78                     l4191:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1855  001C78  8657               	bsf	_flags,3,c
  1856  001C7A  D7F2               	goto	l4181
  1857  001C7C                     l4195:
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1861  001C7C  8857               	bsf	_flags,4,c
  1862  001C7E  D7F0               	goto	l4181
  1863  001C80                     l4199:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1867  001C80  0E00               	movlw	0
  1868  001C82  6F6A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1869  001C84  0E01               	movlw	1
  1870  001C86                     L1:
  1871  001C86  6F69               	movwf	vfpfcnvrt@done& (0+255),b
  1872                           
  1873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1874  001C88  D023               	goto	l4205
  1875  001C8A                     l4203:
  1876                           
  1877                           ; BSR set to: 0
  1878  001C8A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1879  001C8E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1880  001C92  CFDE FFF6          	movff	postinc2,tblptrl
  1881  001C96  CFDD FFF7          	movff	postdec2,tblptrh
  1882  001C9A                     	if	0	;tblptru may be non-zero
  1883  001C9A                     	endif
  1884  001C9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1885  001C9A  0E00               	movlw	low (__mediumconst shr (0+16))
  1886  001C9C  6EF8               	movwf	tblptru,c
  1887  001C9E                     	endif
  1888  001C9E  0008               	tblrd		*
  1889  001CA0  50F5               	movf	tablat,w,c
  1890  001CA2  6E47               	movwf	??_vfpfcnvrt& (0+255),c
  1891  001CA4  6A48               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1892                           
  1893                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1894                           ; Switch size 1, requested type "simple"
  1895                           ; Number of cases is 1, Range of values is 0 to 0
  1896                           ; switch strategies available:
  1897                           ; Name         Instructions Cycles
  1898                           ; simple_byte            4     3 (average)
  1899                           ;	Chosen strategy is simple_byte
  1900  001CA6  5048               	movf	??_vfpfcnvrt+1,w,c
  1901  001CA8  0A00               	xorlw	0	; case 0
  1902  001CAA  A4D8               	btfss	status,2,c
  1903  001CAC  D7E9               	goto	l4199
  1904                           
  1905                           ; BSR set to: 0
  1906                           ; Switch size 1, requested type "simple"
  1907                           ; Number of cases is 5, Range of values is 32 to 48
  1908                           ; switch strategies available:
  1909                           ; Name         Instructions Cycles
  1910                           ; simple_byte           16     9 (average)
  1911                           ;	Chosen strategy is simple_byte
  1912  001CAE  5047               	movf	??_vfpfcnvrt,w,c
  1913  001CB0  0A20               	xorlw	32	; case 32
  1914  001CB2  B4D8               	btfsc	status,2,c
  1915  001CB4  D7E1               	goto	l4191
  1916  001CB6  0A03               	xorlw	3	; case 35
  1917  001CB8  B4D8               	btfsc	status,2,c
  1918  001CBA  D7E0               	goto	l4195
  1919  001CBC  0A08               	xorlw	8	; case 43
  1920  001CBE  B4D8               	btfsc	status,2,c
  1921  001CC0  D7D9               	goto	l4187
  1922  001CC2  0A06               	xorlw	6	; case 45
  1923  001CC4  B4D8               	btfsc	status,2,c
  1924  001CC6  D7CB               	goto	l4179
  1925  001CC8  0A1D               	xorlw	29	; case 48
  1926  001CCA  B4D8               	btfsc	status,2,c
  1927  001CCC  D7D1               	goto	l4183
  1928  001CCE  D7D8               	goto	l4199
  1929  001CD0                     l4205:
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1933  001CD0  5169               	movf	vfpfcnvrt@done& (0+255),w,b
  1934  001CD2  116A               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1935  001CD4  B4D8               	btfsc	status,2,c
  1936  001CD6  D7D9               	goto	l4203
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1940  001CD8  B057               	btfsc	_flags,0,c
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1944  001CDA  9257               	bcf	_flags,1,c
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1948  001CDC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1949  001CE0  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1950  001CE4  CFDE FFF6          	movff	postinc2,tblptrl
  1951  001CE8  CFDD FFF7          	movff	postdec2,tblptrh
  1952  001CEC                     	if	0	;tblptru may be non-zero
  1953  001CEC                     	endif
  1954  001CEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1955  001CEC  0E00               	movlw	low (__mediumconst shr (0+16))
  1956  001CEE  6EF8               	movwf	tblptru,c
  1957  001CF0                     	endif
  1958  001CF0  0008               	tblrd		*
  1959  001CF2  50F5               	movf	tablat,w,c
  1960  001CF4  0A2A               	xorlw	42
  1961  001CF6  A4D8               	btfss	status,2,c
  1962  001CF8  D023               	goto	l4217
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1966  001CFA  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1967  001CFE  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1968  001D02  2ADE               	incf	postinc2,f,c
  1969  001D04  0E00               	movlw	0
  1970  001D06  22DD               	addwfc	postdec2,f,c
  1971                           
  1972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1973  001D08  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1974  001D0C  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1975  001D10  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1976  001D14  0E02               	movlw	2
  1977  001D16  26DE               	addwf	postinc2,f,c
  1978  001D18  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1979  001D1C  0E00               	movlw	0
  1980  001D1E  22DD               	addwfc	postdec2,f,c
  1981  001D20  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1982  001D24  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1983  001D28  CFDE F055          	movff	postinc2,_width
  1984  001D2C  CFDD F056          	movff	postdec2,_width+1
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1988  001D30  AE56               	btfss	_width+1,7,c
  1989  001D32  D042               	goto	u3740
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1993  001D34  8057               	bsf	_flags,0,c
  1994                           
  1995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1996  001D36  6C55               	negf	_width,c
  1997  001D38  1E56               	comf	_width+1,f,c
  1998  001D3A  B0D8               	btfsc	status,0,c
  1999  001D3C  2A56               	incf	_width+1,f,c
  2000  001D3E  D03C               	goto	u3740
  2001  001D40                     l4217:
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2005  001D40  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2006  001D44  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2007  001D48  CFDE F00D          	movff	postinc2,atoi@s
  2008  001D4C  CFDD F00E          	movff	postdec2,atoi@s+1
  2009  001D50  EC23  F014         	call	_atoi	;wreg free
  2010  001D54  C00D  F055         	movff	?_atoi,_width
  2011  001D58  C00E  F056         	movff	?_atoi+1,_width+1
  2012                           
  2013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2014  001D5C  D007               	goto	l4221
  2015  001D5E                     l4219:
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2019  001D5E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2020  001D62  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2021  001D66  2ADE               	incf	postinc2,f,c
  2022  001D68  0E00               	movlw	0
  2023  001D6A  22DD               	addwfc	postdec2,f,c
  2024  001D6C                     l4221:
  2025  001D6C  0ED0               	movlw	208
  2026  001D6E  6E47               	movwf	??_vfpfcnvrt& (0+255),c
  2027  001D70  0EFF               	movlw	255
  2028  001D72  6E48               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2029  001D74  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2030  001D78  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2031  001D7C  CFDE FFF6          	movff	postinc2,tblptrl
  2032  001D80  CFDD FFF7          	movff	postdec2,tblptrh
  2033  001D84                     	if	0	;tblptru may be non-zero
  2034  001D84                     	endif
  2035  001D84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2036  001D84  0E00               	movlw	low (__mediumconst shr (0+16))
  2037  001D86  6EF8               	movwf	tblptru,c
  2038  001D88                     	endif
  2039  001D88  0008               	tblrd		*
  2040  001D8A  50F5               	movf	tablat,w,c
  2041  001D8C  6E49               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2042  001D8E  6A4A               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2043  001D90  5047               	movf	??_vfpfcnvrt,w,c
  2044  001D92  2649               	addwf	??_vfpfcnvrt+2,f,c
  2045  001D94  5048               	movf	??_vfpfcnvrt+1,w,c
  2046  001D96  224A               	addwfc	??_vfpfcnvrt+3,f,c
  2047  001D98  504A               	movf	??_vfpfcnvrt+3,w,c
  2048  001D9A  E106               	bnz	u3720
  2049  001D9C  0E0A               	movlw	10
  2050  001D9E  5C49               	subwf	??_vfpfcnvrt+2,w,c
  2051  001DA0  B0D8               	btfsc	status,0,c
  2052  001DA2  D002               	goto	u3720
  2053  001DA4  0E01               	movlw	1
  2054  001DA6  D001               	goto	u3730
  2055  001DA8                     u3720:
  2056  001DA8  0E00               	movlw	0
  2057  001DAA                     u3730:
  2058  001DAA  0100               	movlb	0	; () banked
  2059  001DAC  6F6B               	movwf	_vfpfcnvrt$969& (0+255),b
  2060  001DAE  6B6C               	clrf	(_vfpfcnvrt$969+1)& (0+255),b
  2061                           
  2062                           ; BSR set to: 0
  2063  001DB0  516B               	movf	_vfpfcnvrt$969& (0+255),w,b
  2064  001DB2  116C               	iorwf	(_vfpfcnvrt$969+1)& (0+255),w,b
  2065  001DB4  A4D8               	btfss	status,2,c
  2066  001DB6  D7D3               	goto	l4219
  2067  001DB8                     u3740:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  2071  001DB8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2072  001DBC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2073  001DC0  CFDE FFF6          	movff	postinc2,tblptrl
  2074  001DC4  CFDD FFF7          	movff	postdec2,tblptrh
  2075  001DC8                     	if	0	;tblptru may be non-zero
  2076  001DC8                     	endif
  2077  001DC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2078  001DC8  0E00               	movlw	low (__mediumconst shr (0+16))
  2079  001DCA  6EF8               	movwf	tblptru,c
  2080  001DCC                     	endif
  2081  001DCC  0008               	tblrd		*
  2082  001DCE  50F5               	movf	tablat,w,c
  2083  001DD0  0A63               	xorlw	99
  2084  001DD2  A4D8               	btfss	status,2,c
  2085  001DD4  D026               	goto	l4235
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  2089  001DD6  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2090  001DDA  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2091  001DDE  2ADE               	incf	postinc2,f,c
  2092  001DE0  0E00               	movlw	0
  2093  001DE2  22DD               	addwfc	postdec2,f,c
  2094                           
  2095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2096  001DE4  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2097  001DE8  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2098  001DEC  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2099  001DF0  0E02               	movlw	2
  2100  001DF2  26DE               	addwf	postinc2,f,c
  2101  001DF4  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2102  001DF8  0E00               	movlw	0
  2103  001DFA  22DD               	addwfc	postdec2,f,c
  2104  001DFC  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2105  001E00  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2106  001E04  50DF               	movf	indf2,w,c
  2107  001E06  6F68               	movwf	vfpfcnvrt@c& (0+255),b
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  2111  001E08  C041  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  2112  001E0C  C042  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2113  001E10  C068  F023         	movff	vfpfcnvrt@c,ctoa@c
  2114  001E14  ECBE  F019         	call	_ctoa	;wreg free
  2115  001E18  C021  F041         	movff	?_ctoa,?_vfpfcnvrt
  2116  001E1C  C022  F042         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2117  001E20  0012               	return	
  2118  001E22                     l4235:
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  2122  001E22  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2123  001E26  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2124  001E2A  CFDE FFF6          	movff	postinc2,tblptrl
  2125  001E2E  CFDD FFF7          	movff	postdec2,tblptrh
  2126  001E32                     	if	0	;tblptru may be non-zero
  2127  001E32                     	endif
  2128  001E32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2129  001E32  0E00               	movlw	low (__mediumconst shr (0+16))
  2130  001E34  6EF8               	movwf	tblptru,c
  2131  001E36                     	endif
  2132  001E36  0008               	tblrd		*
  2133  001E38  50F5               	movf	tablat,w,c
  2134  001E3A  0A75               	xorlw	117
  2135  001E3C  A4D8               	btfss	status,2,c
  2136  001E3E  D040               	goto	l4243
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  2140  001E40  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2141  001E44  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2142  001E48  2ADE               	incf	postinc2,f,c
  2143  001E4A  0E00               	movlw	0
  2144  001E4C  22DD               	addwfc	postdec2,f,c
  2145                           
  2146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2147  001E4E  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2148  001E52  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2149  001E56  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2150  001E5A  0E02               	movlw	2
  2151  001E5C  26DE               	addwf	postinc2,f,c
  2152  001E5E  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2153  001E62  0E00               	movlw	0
  2154  001E64  22DD               	addwfc	postdec2,f,c
  2155  001E66  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2156  001E6A  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2157  001E6E  CFDE F049          	movff	postinc2,??_vfpfcnvrt+2
  2158  001E72  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+3
  2159  001E76  C049  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2160  001E7A  C04A  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2161  001E7E  6B62               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2162  001E80  6B63               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2163  001E82  6B64               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2164  001E84  6B65               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2165  001E86  6B66               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2166  001E88  6B67               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  2170  001E8A  C041  F021         	movff	vfpfcnvrt@fp,utoa@fp
  2171  001E8E  C042  F022         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2172  001E92  C060  F023         	movff	vfpfcnvrt@llu,utoa@d
  2173  001E96  C061  F024         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2174  001E9A  C062  F025         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2175  001E9E  C063  F026         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2176  001EA2  C064  F027         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2177  001EA6  C065  F028         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2178  001EAA  C066  F029         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2179  001EAE  C067  F02A         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2180  001EB2  EC4B  F013         	call	_utoa	;wreg free
  2181  001EB6  C021  F041         	movff	?_utoa,?_vfpfcnvrt
  2182  001EBA  C022  F042         	movff	?_utoa+1,?_vfpfcnvrt+1
  2183  001EBE  0012               	return	
  2184  001EC0                     l4243:
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2188  001EC0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2189  001EC4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2190  001EC8  CFDE FFF6          	movff	postinc2,tblptrl
  2191  001ECC  CFDD FFF7          	movff	postdec2,tblptrh
  2192  001ED0                     	if	0	;tblptru may be non-zero
  2193  001ED0                     	endif
  2194  001ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2195  001ED0  0E00               	movlw	low (__mediumconst shr (0+16))
  2196  001ED2  6EF8               	movwf	tblptru,c
  2197  001ED4                     	endif
  2198  001ED4  0008               	tblrd		*
  2199  001ED6  50F5               	movf	tablat,w,c
  2200  001ED8  0A25               	xorlw	37
  2201  001EDA  A4D8               	btfss	status,2,c
  2202  001EDC  D016               	goto	l4253
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2206  001EDE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2207  001EE2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2208  001EE6  2ADE               	incf	postinc2,f,c
  2209  001EE8  0E00               	movlw	0
  2210  001EEA  22DD               	addwfc	postdec2,f,c
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2214  001EEC  0E00               	movlw	0
  2215  001EEE  6E07               	movwf	fputc@c+1,c
  2216  001EF0  0E25               	movlw	37
  2217  001EF2  6E06               	movwf	fputc@c,c
  2218  001EF4  C041  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2219  001EF8  C042  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2220  001EFC  EC95  F017         	call	_fputc	;wreg free
  2221  001F00                     l4249:
  2222                           
  2223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2224  001F00  0E00               	movlw	0
  2225  001F02  6E42               	movwf	?_vfpfcnvrt+1,c
  2226  001F04  0E01               	movlw	1
  2227  001F06  6E41               	movwf	?_vfpfcnvrt,c
  2228  001F08  0012               	return	
  2229  001F0A                     l4253:
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2233  001F0A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2234  001F0E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2235  001F12  2ADE               	incf	postinc2,f,c
  2236  001F14  0E00               	movlw	0
  2237  001F16  22DD               	addwfc	postdec2,f,c
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2241  001F18  0E00               	movlw	0
  2242  001F1A  6E42               	movwf	?_vfpfcnvrt+1,c
  2243  001F1C  0E00               	movlw	0
  2244  001F1E  6E41               	movwf	?_vfpfcnvrt,c
  2245  001F20  0012               	return	
  2246  001F22                     l4259:
  2247                           
  2248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2249  001F22  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2250  001F26  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2251  001F2A  CFDE FFF6          	movff	postinc2,tblptrl
  2252  001F2E  CFDD FFF7          	movff	postdec2,tblptrh
  2253  001F32                     	if	0	;tblptru may be non-zero
  2254  001F32                     	endif
  2255  001F32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2256  001F32  0E00               	movlw	low (__mediumconst shr (0+16))
  2257  001F34  6EF8               	movwf	tblptru,c
  2258  001F36                     	endif
  2259  001F36  0008               	tblrd		*
  2260  001F38  50F5               	movf	tablat,w,c
  2261  001F3A  6E06               	movwf	fputc@c,c
  2262  001F3C  6A07               	clrf	fputc@c+1,c
  2263  001F3E  C041  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2264  001F42  C042  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2265  001F46  EC95  F017         	call	_fputc	;wreg free
  2266                           
  2267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2268  001F4A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2269  001F4E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2270  001F52  2ADE               	incf	postinc2,f,c
  2271  001F54  0E00               	movlw	0
  2272  001F56  22DD               	addwfc	postdec2,f,c
  2273  001F58  D7D3               	goto	l4249
  2274  001F5A                     __end_of_vfpfcnvrt:
  2275                           	opt callstack 0
  2276                           
  2277 ;; *************** function _utoa *****************
  2278 ;; Defined at:
  2279 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  2282 ;;		 -> sprintf@f(6), 
  2283 ;;  d               8   34[COMRAM] unsigned long long 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  n               8   54[COMRAM] unsigned long long 
  2286 ;;  i               2   62[COMRAM] int 
  2287 ;;  w               2   52[COMRAM] int 
  2288 ;;  p               2   50[COMRAM] int 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  2   32[COMRAM] int 
  2291 ;; Registers used:
  2292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2298 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2299 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2300 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2301 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2302 ;;Total ram usage:       32 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    5
  2305 ;; This function calls:
  2306 ;;		___lodiv
  2307 ;;		___lomod
  2308 ;;		_pad
  2309 ;; This function is called by:
  2310 ;;		_vfpfcnvrt
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text5
  2315  002696                     __ptext5:
  2316                           	opt callstack 0
  2317  002696                     _utoa:
  2318                           	opt callstack 21
  2319                           
  2320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  2321                           
  2322                           ;incstack = 0
  2323  002696  0100               	movlb	0	; () banked
  2324  002698  AFC9               	btfss	(_prec+1)& (0+255),7,b
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  2328  00269A  9257               	bcf	_flags,1,c
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  2332  00269C  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  2333  00269E  D005               	goto	u3540
  2334  0026A0  51C9               	movf	(_prec+1)& (0+255),w,b
  2335  0026A2  E108               	bnz	l289
  2336  0026A4  05C8               	decf	_prec& (0+255),w,b
  2337  0026A6  B0D8               	btfsc	status,0,c
  2338  0026A8  D005               	goto	l289
  2339  0026AA                     u3540:
  2340                           
  2341                           ; BSR set to: 0
  2342  0026AA  0E00               	movlw	0
  2343  0026AC  6E34               	movwf	utoa@p+1,c
  2344  0026AE  0E01               	movlw	1
  2345  0026B0  6E33               	movwf	utoa@p,c
  2346  0026B2  D004               	goto	l291
  2347  0026B4                     l289:
  2348                           
  2349                           ; BSR set to: 0
  2350  0026B4  C0C8  F033         	movff	_prec,utoa@p
  2351  0026B8  C0C9  F034         	movff	_prec+1,utoa@p+1
  2352  0026BC                     l291:
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  2356  0026BC  C055  F035         	movff	_width,utoa@w
  2357  0026C0  C056  F036         	movff	_width+1,utoa@w+1
  2358                           
  2359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  2360  0026C4  C023  F037         	movff	utoa@d,utoa@n
  2361  0026C8  C024  F038         	movff	utoa@d+1,utoa@n+1
  2362  0026CC  C025  F039         	movff	utoa@d+2,utoa@n+2
  2363  0026D0  C026  F03A         	movff	utoa@d+3,utoa@n+3
  2364  0026D4  C027  F03B         	movff	utoa@d+4,utoa@n+4
  2365  0026D8  C028  F03C         	movff	utoa@d+5,utoa@n+5
  2366  0026DC  C029  F03D         	movff	utoa@d+6,utoa@n+6
  2367  0026E0  C02A  F03E         	movff	utoa@d+7,utoa@n+7
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  2371  0026E4  0E00               	movlw	0
  2372  0026E6  6E40               	movwf	utoa@i+1,c
  2373  0026E8  0E1F               	movlw	31
  2374  0026EA  6E3F               	movwf	utoa@i,c
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  2378  0026EC  0E00               	movlw	0
  2379  0026EE  0101               	movlb	1	; () banked
  2380  0026F0  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2381                           
  2382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2383  0026F2  D076               	goto	l4113
  2384  0026F4                     l4103:
  2385                           
  2386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  2387  0026F4  063F               	decf	utoa@i,f,c
  2388  0026F6  A0D8               	btfss	status,0,c
  2389  0026F8  0640               	decf	utoa@i+1,f,c
  2390                           
  2391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  2392  0026FA  0E00               	movlw	low _dbuf
  2393  0026FC  243F               	addwf	utoa@i,w,c
  2394  0026FE  6ED9               	movwf	fsr2l,c
  2395  002700  0E01               	movlw	high _dbuf
  2396  002702  2040               	addwfc	utoa@i+1,w,c
  2397  002704  6EDA               	movwf	fsr2h,c
  2398  002706  C037  F006         	movff	utoa@n,___lomod@dividend
  2399  00270A  C038  F007         	movff	utoa@n+1,___lomod@dividend+1
  2400  00270E  C039  F008         	movff	utoa@n+2,___lomod@dividend+2
  2401  002712  C03A  F009         	movff	utoa@n+3,___lomod@dividend+3
  2402  002716  C03B  F00A         	movff	utoa@n+4,___lomod@dividend+4
  2403  00271A  C03C  F00B         	movff	utoa@n+5,___lomod@dividend+5
  2404  00271E  C03D  F00C         	movff	utoa@n+6,___lomod@dividend+6
  2405  002722  C03E  F00D         	movff	utoa@n+7,___lomod@dividend+7
  2406  002726  0E0A               	movlw	10
  2407  002728  6E0E               	movwf	___lomod@divisor,c
  2408  00272A  0E00               	movlw	0
  2409  00272C  6E0F               	movwf	___lomod@divisor+1,c
  2410  00272E  0E00               	movlw	0
  2411  002730  6E10               	movwf	___lomod@divisor+2,c
  2412  002732  0E00               	movlw	0
  2413  002734  6E11               	movwf	___lomod@divisor+3,c
  2414  002736  0E00               	movlw	0
  2415  002738  6E12               	movwf	___lomod@divisor+4,c
  2416  00273A  0E00               	movlw	0
  2417  00273C  6E13               	movwf	___lomod@divisor+5,c
  2418  00273E  0E00               	movlw	0
  2419  002740  6E14               	movwf	___lomod@divisor+6,c
  2420  002742  0E00               	movlw	0
  2421  002744  6E15               	movwf	___lomod@divisor+7,c
  2422  002746  EC3E  F017         	call	___lomod	;wreg free
  2423  00274A  C006  F02B         	movff	?___lomod,??_utoa
  2424  00274E  C007  F02C         	movff	?___lomod+1,??_utoa+1
  2425  002752  C008  F02D         	movff	?___lomod+2,??_utoa+2
  2426  002756  C009  F02E         	movff	?___lomod+3,??_utoa+3
  2427  00275A  C00A  F02F         	movff	?___lomod+4,??_utoa+4
  2428  00275E  C00B  F030         	movff	?___lomod+5,??_utoa+5
  2429  002762  C00C  F031         	movff	?___lomod+6,??_utoa+6
  2430  002766  C00D  F032         	movff	?___lomod+7,??_utoa+7
  2431  00276A  502B               	movf	??_utoa,w,c
  2432  00276C  0F30               	addlw	48
  2433  00276E  6EDF               	movwf	indf2,c
  2434                           
  2435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  2436  002770  0633               	decf	utoa@p,f,c
  2437  002772  A0D8               	btfss	status,0,c
  2438  002774  0634               	decf	utoa@p+1,f,c
  2439                           
  2440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  2441  002776  0635               	decf	utoa@w,f,c
  2442  002778  A0D8               	btfss	status,0,c
  2443  00277A  0636               	decf	utoa@w+1,f,c
  2444                           
  2445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  2446  00277C  C037  F006         	movff	utoa@n,___lodiv@dividend
  2447  002780  C038  F007         	movff	utoa@n+1,___lodiv@dividend+1
  2448  002784  C039  F008         	movff	utoa@n+2,___lodiv@dividend+2
  2449  002788  C03A  F009         	movff	utoa@n+3,___lodiv@dividend+3
  2450  00278C  C03B  F00A         	movff	utoa@n+4,___lodiv@dividend+4
  2451  002790  C03C  F00B         	movff	utoa@n+5,___lodiv@dividend+5
  2452  002794  C03D  F00C         	movff	utoa@n+6,___lodiv@dividend+6
  2453  002798  C03E  F00D         	movff	utoa@n+7,___lodiv@dividend+7
  2454  00279C  0E0A               	movlw	10
  2455  00279E  6E0E               	movwf	___lodiv@divisor,c
  2456  0027A0  0E00               	movlw	0
  2457  0027A2  6E0F               	movwf	___lodiv@divisor+1,c
  2458  0027A4  0E00               	movlw	0
  2459  0027A6  6E10               	movwf	___lodiv@divisor+2,c
  2460  0027A8  0E00               	movlw	0
  2461  0027AA  6E11               	movwf	___lodiv@divisor+3,c
  2462  0027AC  0E00               	movlw	0
  2463  0027AE  6E12               	movwf	___lodiv@divisor+4,c
  2464  0027B0  0E00               	movlw	0
  2465  0027B2  6E13               	movwf	___lodiv@divisor+5,c
  2466  0027B4  0E00               	movlw	0
  2467  0027B6  6E14               	movwf	___lodiv@divisor+6,c
  2468  0027B8  0E00               	movlw	0
  2469  0027BA  6E15               	movwf	___lodiv@divisor+7,c
  2470  0027BC  EC7A  F016         	call	___lodiv	;wreg free
  2471  0027C0  C006  F037         	movff	?___lodiv,utoa@n
  2472  0027C4  C007  F038         	movff	?___lodiv+1,utoa@n+1
  2473  0027C8  C008  F039         	movff	?___lodiv+2,utoa@n+2
  2474  0027CC  C009  F03A         	movff	?___lodiv+3,utoa@n+3
  2475  0027D0  C00A  F03B         	movff	?___lodiv+4,utoa@n+4
  2476  0027D4  C00B  F03C         	movff	?___lodiv+5,utoa@n+5
  2477  0027D8  C00C  F03D         	movff	?___lodiv+6,utoa@n+6
  2478  0027DC  C00D  F03E         	movff	?___lodiv+7,utoa@n+7
  2479  0027E0                     l4113:
  2480                           
  2481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2482  0027E0  503F               	movf	utoa@i,w,c
  2483  0027E2  1040               	iorwf	utoa@i+1,w,c
  2484  0027E4  B4D8               	btfsc	status,2,c
  2485  0027E6  D01A               	goto	u3590
  2486  0027E8  5037               	movf	utoa@n,w,c
  2487  0027EA  1038               	iorwf	utoa@n+1,w,c
  2488  0027EC  1039               	iorwf	utoa@n+2,w,c
  2489  0027EE  103A               	iorwf	utoa@n+3,w,c
  2490  0027F0  103B               	iorwf	utoa@n+4,w,c
  2491  0027F2  103C               	iorwf	utoa@n+5,w,c
  2492  0027F4  103D               	iorwf	utoa@n+6,w,c
  2493  0027F6  103E               	iorwf	utoa@n+7,w,c
  2494  0027F8  A4D8               	btfss	status,2,c
  2495  0027FA  D77C               	goto	l4103
  2496  0027FC  BE34               	btfsc	utoa@p+1,7,c
  2497  0027FE  D005               	goto	u3570
  2498  002800  5034               	movf	utoa@p+1,w,c
  2499  002802  E102               	bnz	u3571
  2500  002804  0433               	decf	utoa@p,w,c
  2501  002806  B0D8               	btfsc	status,0,c
  2502  002808                     u3571:
  2503  002808  D775               	goto	l4103
  2504  00280A                     u3570:
  2505  00280A  BE36               	btfsc	utoa@w+1,7,c
  2506  00280C  D007               	goto	u3590
  2507  00280E  5036               	movf	utoa@w+1,w,c
  2508  002810  E103               	bnz	u3580
  2509  002812  0435               	decf	utoa@w,w,c
  2510  002814  A0D8               	btfss	status,0,c
  2511  002816  D002               	goto	u3590
  2512  002818                     u3580:
  2513  002818  B257               	btfsc	_flags,1,c
  2514  00281A  D76C               	goto	l4103
  2515  00281C                     u3590:
  2516                           
  2517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  2518  00281C  C021  F016         	movff	utoa@fp,pad@fp
  2519  002820  C022  F017         	movff	utoa@fp+1,pad@fp+1
  2520  002824  0E00               	movlw	low _dbuf
  2521  002826  243F               	addwf	utoa@i,w,c
  2522  002828  6E18               	movwf	pad@buf,c
  2523  00282A  0E01               	movlw	high _dbuf
  2524  00282C  2040               	addwfc	utoa@i+1,w,c
  2525  00282E  6E19               	movwf	pad@buf+1,c
  2526  002830  C035  F01A         	movff	utoa@w,pad@p
  2527  002834  C036  F01B         	movff	utoa@w+1,pad@p+1
  2528  002838  ECE5  F017         	call	_pad	;wreg free
  2529  00283C  C016  F021         	movff	?_pad,?_utoa
  2530  002840  C017  F022         	movff	?_pad+1,?_utoa+1
  2531  002844  0012               	return		;funcret
  2532  002846                     __end_of_utoa:
  2533                           	opt callstack 0
  2534                           
  2535 ;; *************** function ___lomod *****************
  2536 ;; Defined at:
  2537 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  dividend        8    5[COMRAM] unsigned long long 
  2540 ;;  divisor         8   13[COMRAM] unsigned long long 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  counter         1   21[COMRAM] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  8    5[COMRAM] unsigned long long 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2552 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2555 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2556 ;;Total ram usage:       17 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_utoa
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text6
  2567  002E7C                     __ptext6:
  2568                           	opt callstack 0
  2569  002E7C                     ___lomod:
  2570                           	opt callstack 24
  2571                           
  2572                           ;incstack = 0
  2573  002E7C  500E               	movf	___lomod@divisor,w,c
  2574  002E7E  100F               	iorwf	___lomod@divisor+1,w,c
  2575  002E80  1010               	iorwf	___lomod@divisor+2,w,c
  2576  002E82  1011               	iorwf	___lomod@divisor+3,w,c
  2577  002E84  1012               	iorwf	___lomod@divisor+4,w,c
  2578  002E86  1013               	iorwf	___lomod@divisor+5,w,c
  2579  002E88  1014               	iorwf	___lomod@divisor+6,w,c
  2580  002E8A  1015               	iorwf	___lomod@divisor+7,w,c
  2581  002E8C  B4D8               	btfsc	status,2,c
  2582  002E8E  D03C               	goto	l785
  2583  002E90  0E01               	movlw	1
  2584  002E92  6E16               	movwf	___lomod@counter,c
  2585  002E94  D00A               	goto	l4055
  2586  002E96                     l4053:
  2587  002E96  90D8               	bcf	status,0,c
  2588  002E98  360E               	rlcf	___lomod@divisor,f,c
  2589  002E9A  360F               	rlcf	___lomod@divisor+1,f,c
  2590  002E9C  3610               	rlcf	___lomod@divisor+2,f,c
  2591  002E9E  3611               	rlcf	___lomod@divisor+3,f,c
  2592  002EA0  3612               	rlcf	___lomod@divisor+4,f,c
  2593  002EA2  3613               	rlcf	___lomod@divisor+5,f,c
  2594  002EA4  3614               	rlcf	___lomod@divisor+6,f,c
  2595  002EA6  3615               	rlcf	___lomod@divisor+7,f,c
  2596  002EA8  2A16               	incf	___lomod@counter,f,c
  2597  002EAA                     l4055:
  2598  002EAA  AE15               	btfss	___lomod@divisor+7,7,c
  2599  002EAC  D7F4               	goto	l4053
  2600  002EAE                     u3480:
  2601  002EAE  500E               	movf	___lomod@divisor,w,c
  2602  002EB0  5C06               	subwf	___lomod@dividend,w,c
  2603  002EB2  500F               	movf	___lomod@divisor+1,w,c
  2604  002EB4  5807               	subwfb	___lomod@dividend+1,w,c
  2605  002EB6  5010               	movf	___lomod@divisor+2,w,c
  2606  002EB8  5808               	subwfb	___lomod@dividend+2,w,c
  2607  002EBA  5011               	movf	___lomod@divisor+3,w,c
  2608  002EBC  5809               	subwfb	___lomod@dividend+3,w,c
  2609  002EBE  5012               	movf	___lomod@divisor+4,w,c
  2610  002EC0  580A               	subwfb	___lomod@dividend+4,w,c
  2611  002EC2  5013               	movf	___lomod@divisor+5,w,c
  2612  002EC4  580B               	subwfb	___lomod@dividend+5,w,c
  2613  002EC6  5014               	movf	___lomod@divisor+6,w,c
  2614  002EC8  580C               	subwfb	___lomod@dividend+6,w,c
  2615  002ECA  5015               	movf	___lomod@divisor+7,w,c
  2616  002ECC  580D               	subwfb	___lomod@dividend+7,w,c
  2617  002ECE  A0D8               	btfss	status,0,c
  2618  002ED0  D010               	goto	l4061
  2619  002ED2  500E               	movf	___lomod@divisor,w,c
  2620  002ED4  5E06               	subwf	___lomod@dividend,f,c
  2621  002ED6  500F               	movf	___lomod@divisor+1,w,c
  2622  002ED8  5A07               	subwfb	___lomod@dividend+1,f,c
  2623  002EDA  5010               	movf	___lomod@divisor+2,w,c
  2624  002EDC  5A08               	subwfb	___lomod@dividend+2,f,c
  2625  002EDE  5011               	movf	___lomod@divisor+3,w,c
  2626  002EE0  5A09               	subwfb	___lomod@dividend+3,f,c
  2627  002EE2  5012               	movf	___lomod@divisor+4,w,c
  2628  002EE4  5A0A               	subwfb	___lomod@dividend+4,f,c
  2629  002EE6  5013               	movf	___lomod@divisor+5,w,c
  2630  002EE8  5A0B               	subwfb	___lomod@dividend+5,f,c
  2631  002EEA  5014               	movf	___lomod@divisor+6,w,c
  2632  002EEC  5A0C               	subwfb	___lomod@dividend+6,f,c
  2633  002EEE  5015               	movf	___lomod@divisor+7,w,c
  2634  002EF0  5A0D               	subwfb	___lomod@dividend+7,f,c
  2635  002EF2                     l4061:
  2636  002EF2  90D8               	bcf	status,0,c
  2637  002EF4  3215               	rrcf	___lomod@divisor+7,f,c
  2638  002EF6  3214               	rrcf	___lomod@divisor+6,f,c
  2639  002EF8  3213               	rrcf	___lomod@divisor+5,f,c
  2640  002EFA  3212               	rrcf	___lomod@divisor+4,f,c
  2641  002EFC  3211               	rrcf	___lomod@divisor+3,f,c
  2642  002EFE  3210               	rrcf	___lomod@divisor+2,f,c
  2643  002F00  320F               	rrcf	___lomod@divisor+1,f,c
  2644  002F02  320E               	rrcf	___lomod@divisor,f,c
  2645  002F04  2E16               	decfsz	___lomod@counter,f,c
  2646  002F06  D7D3               	goto	u3480
  2647  002F08                     l785:
  2648  002F08  C006  F006         	movff	___lomod@dividend,?___lomod
  2649  002F0C  C007  F007         	movff	___lomod@dividend+1,?___lomod+1
  2650  002F10  C008  F008         	movff	___lomod@dividend+2,?___lomod+2
  2651  002F14  C009  F009         	movff	___lomod@dividend+3,?___lomod+3
  2652  002F18  C00A  F00A         	movff	___lomod@dividend+4,?___lomod+4
  2653  002F1C  C00B  F00B         	movff	___lomod@dividend+5,?___lomod+5
  2654  002F20  C00C  F00C         	movff	___lomod@dividend+6,?___lomod+6
  2655  002F24  C00D  F00D         	movff	___lomod@dividend+7,?___lomod+7
  2656  002F28  0012               	return		;funcret
  2657  002F2A                     __end_of___lomod:
  2658                           	opt callstack 0
  2659                           
  2660 ;; *************** function ___lodiv *****************
  2661 ;; Defined at:
  2662 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  dividend        8    5[COMRAM] unsigned long long 
  2665 ;;  divisor         8   13[COMRAM] unsigned long long 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  quotient        8   21[COMRAM] unsigned long long 
  2668 ;;  counter         1   29[COMRAM] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  8    5[COMRAM] unsigned long long 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2678 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2679 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2681 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2682 ;;Total ram usage:       25 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    1
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_utoa
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text7
  2693  002CF4                     __ptext7:
  2694                           	opt callstack 0
  2695  002CF4                     ___lodiv:
  2696                           	opt callstack 24
  2697                           
  2698                           ;incstack = 0
  2699  002CF4  EE20  F016         	lfsr	2,___lodiv@quotient
  2700  002CF8  0E07               	movlw	7
  2701  002CFA                     u3431:
  2702  002CFA  6ADE               	clrf	postinc2,c
  2703  002CFC  06E8               	decf	wreg,f,c
  2704  002CFE  E2FD               	bc	u3431
  2705  002D00  500E               	movf	___lodiv@divisor,w,c
  2706  002D02  100F               	iorwf	___lodiv@divisor+1,w,c
  2707  002D04  1010               	iorwf	___lodiv@divisor+2,w,c
  2708  002D06  1011               	iorwf	___lodiv@divisor+3,w,c
  2709  002D08  1012               	iorwf	___lodiv@divisor+4,w,c
  2710  002D0A  1013               	iorwf	___lodiv@divisor+5,w,c
  2711  002D0C  1014               	iorwf	___lodiv@divisor+6,w,c
  2712  002D0E  1015               	iorwf	___lodiv@divisor+7,w,c
  2713  002D10  B4D8               	btfsc	status,2,c
  2714  002D12  D046               	goto	l775
  2715  002D14  0E01               	movlw	1
  2716  002D16  6E1E               	movwf	___lodiv@counter,c
  2717  002D18  D00A               	goto	l4035
  2718  002D1A                     l4033:
  2719  002D1A  90D8               	bcf	status,0,c
  2720  002D1C  360E               	rlcf	___lodiv@divisor,f,c
  2721  002D1E  360F               	rlcf	___lodiv@divisor+1,f,c
  2722  002D20  3610               	rlcf	___lodiv@divisor+2,f,c
  2723  002D22  3611               	rlcf	___lodiv@divisor+3,f,c
  2724  002D24  3612               	rlcf	___lodiv@divisor+4,f,c
  2725  002D26  3613               	rlcf	___lodiv@divisor+5,f,c
  2726  002D28  3614               	rlcf	___lodiv@divisor+6,f,c
  2727  002D2A  3615               	rlcf	___lodiv@divisor+7,f,c
  2728  002D2C  2A1E               	incf	___lodiv@counter,f,c
  2729  002D2E                     l4035:
  2730  002D2E  AE15               	btfss	___lodiv@divisor+7,7,c
  2731  002D30  D7F4               	goto	l4033
  2732  002D32                     u3450:
  2733  002D32  90D8               	bcf	status,0,c
  2734  002D34  3616               	rlcf	___lodiv@quotient,f,c
  2735  002D36  3617               	rlcf	___lodiv@quotient+1,f,c
  2736  002D38  3618               	rlcf	___lodiv@quotient+2,f,c
  2737  002D3A  3619               	rlcf	___lodiv@quotient+3,f,c
  2738  002D3C  361A               	rlcf	___lodiv@quotient+4,f,c
  2739  002D3E  361B               	rlcf	___lodiv@quotient+5,f,c
  2740  002D40  361C               	rlcf	___lodiv@quotient+6,f,c
  2741  002D42  361D               	rlcf	___lodiv@quotient+7,f,c
  2742  002D44  500E               	movf	___lodiv@divisor,w,c
  2743  002D46  5C06               	subwf	___lodiv@dividend,w,c
  2744  002D48  500F               	movf	___lodiv@divisor+1,w,c
  2745  002D4A  5807               	subwfb	___lodiv@dividend+1,w,c
  2746  002D4C  5010               	movf	___lodiv@divisor+2,w,c
  2747  002D4E  5808               	subwfb	___lodiv@dividend+2,w,c
  2748  002D50  5011               	movf	___lodiv@divisor+3,w,c
  2749  002D52  5809               	subwfb	___lodiv@dividend+3,w,c
  2750  002D54  5012               	movf	___lodiv@divisor+4,w,c
  2751  002D56  580A               	subwfb	___lodiv@dividend+4,w,c
  2752  002D58  5013               	movf	___lodiv@divisor+5,w,c
  2753  002D5A  580B               	subwfb	___lodiv@dividend+5,w,c
  2754  002D5C  5014               	movf	___lodiv@divisor+6,w,c
  2755  002D5E  580C               	subwfb	___lodiv@dividend+6,w,c
  2756  002D60  5015               	movf	___lodiv@divisor+7,w,c
  2757  002D62  580D               	subwfb	___lodiv@dividend+7,w,c
  2758  002D64  A0D8               	btfss	status,0,c
  2759  002D66  D011               	goto	l4045
  2760  002D68  500E               	movf	___lodiv@divisor,w,c
  2761  002D6A  5E06               	subwf	___lodiv@dividend,f,c
  2762  002D6C  500F               	movf	___lodiv@divisor+1,w,c
  2763  002D6E  5A07               	subwfb	___lodiv@dividend+1,f,c
  2764  002D70  5010               	movf	___lodiv@divisor+2,w,c
  2765  002D72  5A08               	subwfb	___lodiv@dividend+2,f,c
  2766  002D74  5011               	movf	___lodiv@divisor+3,w,c
  2767  002D76  5A09               	subwfb	___lodiv@dividend+3,f,c
  2768  002D78  5012               	movf	___lodiv@divisor+4,w,c
  2769  002D7A  5A0A               	subwfb	___lodiv@dividend+4,f,c
  2770  002D7C  5013               	movf	___lodiv@divisor+5,w,c
  2771  002D7E  5A0B               	subwfb	___lodiv@dividend+5,f,c
  2772  002D80  5014               	movf	___lodiv@divisor+6,w,c
  2773  002D82  5A0C               	subwfb	___lodiv@dividend+6,f,c
  2774  002D84  5015               	movf	___lodiv@divisor+7,w,c
  2775  002D86  5A0D               	subwfb	___lodiv@dividend+7,f,c
  2776  002D88  8016               	bsf	___lodiv@quotient,0,c
  2777  002D8A                     l4045:
  2778  002D8A  90D8               	bcf	status,0,c
  2779  002D8C  3215               	rrcf	___lodiv@divisor+7,f,c
  2780  002D8E  3214               	rrcf	___lodiv@divisor+6,f,c
  2781  002D90  3213               	rrcf	___lodiv@divisor+5,f,c
  2782  002D92  3212               	rrcf	___lodiv@divisor+4,f,c
  2783  002D94  3211               	rrcf	___lodiv@divisor+3,f,c
  2784  002D96  3210               	rrcf	___lodiv@divisor+2,f,c
  2785  002D98  320F               	rrcf	___lodiv@divisor+1,f,c
  2786  002D9A  320E               	rrcf	___lodiv@divisor,f,c
  2787  002D9C  2E1E               	decfsz	___lodiv@counter,f,c
  2788  002D9E  D7C9               	goto	u3450
  2789  002DA0                     l775:
  2790  002DA0  C016  F006         	movff	___lodiv@quotient,?___lodiv
  2791  002DA4  C017  F007         	movff	___lodiv@quotient+1,?___lodiv+1
  2792  002DA8  C018  F008         	movff	___lodiv@quotient+2,?___lodiv+2
  2793  002DAC  C019  F009         	movff	___lodiv@quotient+3,?___lodiv+3
  2794  002DB0  C01A  F00A         	movff	___lodiv@quotient+4,?___lodiv+4
  2795  002DB4  C01B  F00B         	movff	___lodiv@quotient+5,?___lodiv+5
  2796  002DB8  C01C  F00C         	movff	___lodiv@quotient+6,?___lodiv+6
  2797  002DBC  C01D  F00D         	movff	___lodiv@quotient+7,?___lodiv+7
  2798  002DC0  0012               	return		;funcret
  2799  002DC2                     __end_of___lodiv:
  2800                           	opt callstack 0
  2801                           
  2802 ;; *************** function _ctoa *****************
  2803 ;; Defined at:
  2804 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  2807 ;;		 -> sprintf@f(6), 
  2808 ;;  c               1   34[COMRAM] unsigned char 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  w               2   35[COMRAM] int 
  2811 ;;  l               2    0        int 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  2   32[COMRAM] int 
  2814 ;; Registers used:
  2815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2821 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2822 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2824 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2825 ;;Total ram usage:        5 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    5
  2828 ;; This function calls:
  2829 ;;		_pad
  2830 ;; This function is called by:
  2831 ;;		_vfpfcnvrt
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text8
  2836  00337C                     __ptext8:
  2837                           	opt callstack 0
  2838  00337C                     _ctoa:
  2839                           	opt callstack 21
  2840                           
  2841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  2842                           
  2843                           ;incstack = 0
  2844  00337C  5055               	movf	_width,w,c
  2845  00337E  1056               	iorwf	_width+1,w,c
  2846  003380  A4D8               	btfss	status,2,c
  2847  003382  D005               	goto	l4081
  2848  003384  C055  F024         	movff	_width,ctoa@w
  2849  003388  C056  F025         	movff	_width+1,ctoa@w+1
  2850  00338C  D006               	goto	l4083
  2851  00338E                     l4081:
  2852  00338E  0EFF               	movlw	255
  2853  003390  2455               	addwf	_width,w,c
  2854  003392  6E24               	movwf	ctoa@w,c
  2855  003394  0EFF               	movlw	255
  2856  003396  2056               	addwfc	_width+1,w,c
  2857  003398  6E25               	movwf	ctoa@w+1,c
  2858  00339A                     l4083:
  2859                           
  2860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  2861  00339A  C023  F100         	movff	ctoa@c,_dbuf
  2862                           
  2863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  2864  00339E  0E00               	movlw	0
  2865  0033A0  0101               	movlb	1	; () banked
  2866  0033A2  6F01               	movwf	(_dbuf+1)& (0+255),b
  2867                           
  2868                           ; BSR set to: 1
  2869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  2870  0033A4  C021  F016         	movff	ctoa@fp,pad@fp
  2871  0033A8  C022  F017         	movff	ctoa@fp+1,pad@fp+1
  2872  0033AC  0E00               	movlw	low _dbuf
  2873  0033AE  6E18               	movwf	pad@buf,c
  2874  0033B0  0E01               	movlw	high _dbuf
  2875  0033B2  6E19               	movwf	pad@buf+1,c
  2876  0033B4  C024  F01A         	movff	ctoa@w,pad@p
  2877  0033B8  C025  F01B         	movff	ctoa@w+1,pad@p+1
  2878  0033BC  ECE5  F017         	call	_pad	;wreg free
  2879  0033C0  C016  F021         	movff	?_pad,?_ctoa
  2880  0033C4  C017  F022         	movff	?_pad+1,?_ctoa+1
  2881  0033C8  0012               	return		;funcret
  2882  0033CA                     __end_of_ctoa:
  2883                           	opt callstack 0
  2884                           
  2885 ;; *************** function _pad *****************
  2886 ;; Defined at:
  2887 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  2890 ;;		 -> sprintf@f(6), 
  2891 ;;  buf             2   23[COMRAM] PTR unsigned char 
  2892 ;;		 -> dbuf(32), 
  2893 ;;  p               2   25[COMRAM] int 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  w               2   30[COMRAM] int 
  2896 ;;  i               2   28[COMRAM] int 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  2   21[COMRAM] int 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2906 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2907 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2909 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2910 ;;Total ram usage:       11 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    4
  2913 ;; This function calls:
  2914 ;;		_fputc
  2915 ;;		_fputs
  2916 ;;		_strlen
  2917 ;; This function is called by:
  2918 ;;		_ctoa
  2919 ;;		_utoa
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text9
  2924  002FCA                     __ptext9:
  2925                           	opt callstack 0
  2926  002FCA                     _pad:
  2927                           	opt callstack 21
  2928                           
  2929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2930                           
  2931                           ;incstack = 0
  2932  002FCA  A057               	btfss	_flags,0,c
  2933  002FCC  D00A               	goto	l3999
  2934                           
  2935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2936  002FCE  C018  F00F         	movff	pad@buf,fputs@s
  2937  002FD2  C019  F010         	movff	pad@buf+1,fputs@s+1
  2938  002FD6  C016  F011         	movff	pad@fp,fputs@fp
  2939  002FDA  C017  F012         	movff	pad@fp+1,fputs@fp+1
  2940  002FDE  EC27  F01A         	call	_fputs	;wreg free
  2941  002FE2                     l3999:
  2942                           
  2943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2944  002FE2  BE1B               	btfsc	pad@p+1,7,c
  2945  002FE4  D005               	goto	l4003
  2946  002FE6  C01A  F01F         	movff	pad@p,pad@w
  2947  002FEA  C01B  F020         	movff	pad@p+1,pad@w+1
  2948  002FEE  D004               	goto	l272
  2949  002FF0                     l4003:
  2950  002FF0  0E00               	movlw	0
  2951  002FF2  6E20               	movwf	pad@w+1,c
  2952  002FF4  0E00               	movlw	0
  2953  002FF6  6E1F               	movwf	pad@w,c
  2954  002FF8                     l272:
  2955                           
  2956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2957  002FF8  0E00               	movlw	0
  2958  002FFA  6E1E               	movwf	pad@i+1,c
  2959  002FFC  0E00               	movlw	0
  2960  002FFE  6E1D               	movwf	pad@i,c
  2961                           
  2962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2963  003000  D00C               	goto	l4009
  2964  003002                     l4005:
  2965                           
  2966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2967  003002  0E00               	movlw	0
  2968  003004  6E07               	movwf	fputc@c+1,c
  2969  003006  0E20               	movlw	32
  2970  003008  6E06               	movwf	fputc@c,c
  2971  00300A  C016  F008         	movff	pad@fp,fputc@fp
  2972  00300E  C017  F009         	movff	pad@fp+1,fputc@fp+1
  2973  003012  EC95  F017         	call	_fputc	;wreg free
  2974                           
  2975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2976  003016  4A1D               	infsnz	pad@i,f,c
  2977  003018  2A1E               	incf	pad@i+1,f,c
  2978  00301A                     l4009:
  2979                           
  2980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2981  00301A  501F               	movf	pad@w,w,c
  2982  00301C  5C1D               	subwf	pad@i,w,c
  2983  00301E  501E               	movf	pad@i+1,w,c
  2984  003020  0A80               	xorlw	128
  2985  003022  6E1C               	movwf	??_pad& (0+255),c
  2986  003024  5020               	movf	pad@w+1,w,c
  2987  003026  0A80               	xorlw	128
  2988  003028  581C               	subwfb	??_pad& (0+255),w,c
  2989  00302A  A0D8               	btfss	status,0,c
  2990  00302C  D7EA               	goto	l4005
  2991                           
  2992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2993  00302E  B057               	btfsc	_flags,0,c
  2994  003030  D00A               	goto	l4013
  2995                           
  2996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2997  003032  C018  F00F         	movff	pad@buf,fputs@s
  2998  003036  C019  F010         	movff	pad@buf+1,fputs@s+1
  2999  00303A  C016  F011         	movff	pad@fp,fputs@fp
  3000  00303E  C017  F012         	movff	pad@fp+1,fputs@fp+1
  3001  003042  EC27  F01A         	call	_fputs	;wreg free
  3002  003046                     l4013:
  3003                           
  3004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3005  003046  C018  F006         	movff	pad@buf,strlen@s
  3006  00304A  C019  F007         	movff	pad@buf+1,strlen@s+1
  3007  00304E  ECA7  F01A         	call	_strlen	;wreg free
  3008  003052  501F               	movf	pad@w,w,c
  3009  003054  2406               	addwf	?_strlen,w,c
  3010  003056  6E16               	movwf	?_pad,c
  3011  003058  5020               	movf	pad@w+1,w,c
  3012  00305A  2007               	addwfc	?_strlen+1,w,c
  3013  00305C  6E17               	movwf	?_pad+1,c
  3014  00305E  0012               	return		;funcret
  3015  003060                     __end_of_pad:
  3016                           	opt callstack 0
  3017                           
  3018 ;; *************** function _strlen *****************
  3019 ;; Defined at:
  3020 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  s               2    5[COMRAM] PTR const unsigned char 
  3023 ;;		 -> dbuf(32), 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  a               2    7[COMRAM] PTR const unsigned char 
  3026 ;;		 -> dbuf(32), 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  2    5[COMRAM] unsigned int 
  3029 ;; Registers used:
  3030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3037 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3039 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3040 ;;Total ram usage:        4 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    1
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_pad
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text10
  3051  00354E                     __ptext10:
  3052                           	opt callstack 0
  3053  00354E                     _strlen:
  3054                           	opt callstack 23
  3055                           
  3056                           ;incstack = 0
  3057  00354E  C006  F008         	movff	strlen@s,strlen@a
  3058  003552  C007  F009         	movff	strlen@s+1,strlen@a+1
  3059  003556  D002               	goto	l3989
  3060  003558                     l3987:
  3061  003558  4A06               	infsnz	strlen@s,f,c
  3062  00355A  2A07               	incf	strlen@s+1,f,c
  3063  00355C                     l3989:
  3064  00355C  C006  FFD9         	movff	strlen@s,fsr2l
  3065  003560  C007  FFDA         	movff	strlen@s+1,fsr2h
  3066  003564  50DF               	movf	indf2,w,c
  3067  003566  A4D8               	btfss	status,2,c
  3068  003568  D7F7               	goto	l3987
  3069  00356A  5008               	movf	strlen@a,w,c
  3070  00356C  5C06               	subwf	strlen@s,w,c
  3071  00356E  6E06               	movwf	?_strlen,c
  3072  003570  5009               	movf	strlen@a+1,w,c
  3073  003572  5807               	subwfb	strlen@s+1,w,c
  3074  003574  6E07               	movwf	?_strlen+1,c
  3075  003576  0012               	return		;funcret
  3076  003578                     __end_of_strlen:
  3077                           	opt callstack 0
  3078                           
  3079 ;; *************** function _fputs *****************
  3080 ;; Defined at:
  3081 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  s               2   14[COMRAM] PTR const unsigned char 
  3084 ;;		 -> dbuf(32), 
  3085 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3086 ;;		 -> sprintf@f(6), 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  i               2   19[COMRAM] int 
  3089 ;;  c               1   18[COMRAM] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  2   14[COMRAM] int 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3100 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3102 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3103 ;;Total ram usage:        7 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    3
  3106 ;; This function calls:
  3107 ;;		_fputc
  3108 ;; This function is called by:
  3109 ;;		_pad
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text11
  3114  00344E                     __ptext11:
  3115                           	opt callstack 0
  3116  00344E                     _fputs:
  3117                           	opt callstack 21
  3118                           
  3119                           ;incstack = 0
  3120  00344E  0E00               	movlw	0
  3121  003450  6E15               	movwf	fputs@i+1,c
  3122  003452  0E00               	movlw	0
  3123  003454  6E14               	movwf	fputs@i,c
  3124  003456  D00B               	goto	l3983
  3125  003458                     l3979:
  3126  003458  C013  F006         	movff	fputs@c,fputc@c
  3127  00345C  6A07               	clrf	fputc@c+1,c
  3128  00345E  C011  F008         	movff	fputs@fp,fputc@fp
  3129  003462  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  3130  003466  EC95  F017         	call	_fputc	;wreg free
  3131  00346A  4A14               	infsnz	fputs@i,f,c
  3132  00346C  2A15               	incf	fputs@i+1,f,c
  3133  00346E                     l3983:
  3134  00346E  5014               	movf	fputs@i,w,c
  3135  003470  240F               	addwf	fputs@s,w,c
  3136  003472  6ED9               	movwf	fsr2l,c
  3137  003474  5015               	movf	fputs@i+1,w,c
  3138  003476  2010               	addwfc	fputs@s+1,w,c
  3139  003478  6EDA               	movwf	fsr2h,c
  3140  00347A  50DF               	movf	indf2,w,c
  3141  00347C  6E13               	movwf	fputs@c,c
  3142  00347E  5013               	movf	fputs@c,w,c
  3143  003480  B4D8               	btfsc	status,2,c
  3144  003482  0012               	return	
  3145  003484  D7E9               	goto	l3979
  3146  003486                     __end_of_fputs:
  3147                           	opt callstack 0
  3148                           
  3149 ;; *************** function _fputc *****************
  3150 ;; Defined at:
  3151 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  c               2    5[COMRAM] int 
  3154 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  3155 ;;		 -> sprintf@f(6), 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  2    5[COMRAM] int 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3167 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3169 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3170 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3171 ;;Total ram usage:        9 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    2
  3174 ;; This function calls:
  3175 ;;		_putch
  3176 ;; This function is called by:
  3177 ;;		_pad
  3178 ;;		_vfpfcnvrt
  3179 ;;		_fputs
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text12
  3184  002F2A                     __ptext12:
  3185                           	opt callstack 0
  3186  002F2A                     _fputc:
  3187                           	opt callstack 21
  3188                           
  3189                           ;incstack = 0
  3190  002F2A  5008               	movf	fputc@fp,w,c
  3191  002F2C  1009               	iorwf	fputc@fp+1,w,c
  3192  002F2E  B4D8               	btfsc	status,2,c
  3193  002F30  D004               	goto	u3320
  3194  002F32  5008               	movf	fputc@fp,w,c
  3195  002F34  1009               	iorwf	fputc@fp+1,w,c
  3196  002F36  A4D8               	btfss	status,2,c
  3197  002F38  D004               	goto	l3969
  3198  002F3A                     u3320:
  3199  002F3A  5006               	movf	fputc@c,w,c
  3200  002F3C  EC51  F01B         	call	_putch
  3201  002F40  0012               	return	
  3202  002F42                     l3969:
  3203  002F42  EE20 F004          	lfsr	2,4
  3204  002F46  5008               	movf	fputc@fp,w,c
  3205  002F48  26D9               	addwf	fsr2l,f,c
  3206  002F4A  5009               	movf	fputc@fp+1,w,c
  3207  002F4C  22DA               	addwfc	fsr2h,f,c
  3208  002F4E  50DE               	movf	postinc2,w,c
  3209  002F50  10DE               	iorwf	postinc2,w,c
  3210  002F52  B4D8               	btfsc	status,2,c
  3211  002F54  D016               	goto	u3340
  3212  002F56  EE20 F004          	lfsr	2,4
  3213  002F5A  5008               	movf	fputc@fp,w,c
  3214  002F5C  26D9               	addwf	fsr2l,f,c
  3215  002F5E  5009               	movf	fputc@fp+1,w,c
  3216  002F60  22DA               	addwfc	fsr2h,f,c
  3217  002F62  EE10 F002          	lfsr	1,2
  3218  002F66  5008               	movf	fputc@fp,w,c
  3219  002F68  26E1               	addwf	fsr1l,f,c
  3220  002F6A  5009               	movf	fputc@fp+1,w,c
  3221  002F6C  22E2               	addwfc	fsr1h,f,c
  3222  002F6E  50DE               	movf	postinc2,w,c
  3223  002F70  5CE6               	subwf	postinc1,w,c
  3224  002F72  50E6               	movf	postinc1,w,c
  3225  002F74  0A80               	xorlw	128
  3226  002F76  6E0E               	movwf	(??_fputc+4)& (0+255),c
  3227  002F78  50DE               	movf	postinc2,w,c
  3228  002F7A  0A80               	xorlw	128
  3229  002F7C  580E               	subwfb	(??_fputc+4)& (0+255),w,c
  3230  002F7E  B0D8               	btfsc	status,0,c
  3231  002F80  0012               	return	
  3232  002F82                     u3340:
  3233  002F82  EE20 F002          	lfsr	2,2
  3234  002F86  5008               	movf	fputc@fp,w,c
  3235  002F88  26D9               	addwf	fsr2l,f,c
  3236  002F8A  5009               	movf	fputc@fp+1,w,c
  3237  002F8C  22DA               	addwfc	fsr2h,f,c
  3238  002F8E  CFDE F00A          	movff	postinc2,??_fputc
  3239  002F92  CFDD F00B          	movff	postdec2,??_fputc+1
  3240  002F96  C008  FFD9         	movff	fputc@fp,fsr2l
  3241  002F9A  C009  FFDA         	movff	fputc@fp+1,fsr2h
  3242  002F9E  CFDE F00C          	movff	postinc2,??_fputc+2
  3243  002FA2  CFDD F00D          	movff	postdec2,??_fputc+3
  3244  002FA6  500A               	movf	??_fputc,w,c
  3245  002FA8  240C               	addwf	??_fputc+2,w,c
  3246  002FAA  6ED9               	movwf	fsr2l,c
  3247  002FAC  500B               	movf	??_fputc+1,w,c
  3248  002FAE  200D               	addwfc	??_fputc+3,w,c
  3249  002FB0  6EDA               	movwf	fsr2h,c
  3250  002FB2  C006  FFDF         	movff	fputc@c,indf2
  3251  002FB6  EE20 F002          	lfsr	2,2
  3252  002FBA  5008               	movf	fputc@fp,w,c
  3253  002FBC  26D9               	addwf	fsr2l,f,c
  3254  002FBE  5009               	movf	fputc@fp+1,w,c
  3255  002FC0  22DA               	addwfc	fsr2h,f,c
  3256  002FC2  2ADE               	incf	postinc2,f,c
  3257  002FC4  0E00               	movlw	0
  3258  002FC6  22DD               	addwfc	postdec2,f,c
  3259  002FC8  0012               	return		;funcret
  3260  002FCA                     __end_of_fputc:
  3261                           	opt callstack 0
  3262                           
  3263 ;; *************** function _putch *****************
  3264 ;; Defined at:
  3265 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  c               1    wreg     unsigned char 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  c               1    0[COMRAM] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3283 ;;Total ram usage:        0 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    1
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_fputc
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text13
  3294  0036A2                     __ptext13:
  3295                           	opt callstack 0
  3296  0036A2                     _putch:
  3297                           	opt callstack 21
  3298                           
  3299                           ;incstack = 0
  3300  0036A2  0012               	return		;funcret
  3301  0036A4                     __end_of_putch:
  3302                           	opt callstack 0
  3303                           
  3304 ;; *************** function _atoi *****************
  3305 ;; Defined at:
  3306 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  s               2   12[COMRAM] PTR const unsigned char 
  3309 ;;		 -> STR_3(28), 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  n               2   25[COMRAM] int 
  3312 ;;  neg             2   18[COMRAM] int 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  2   12[COMRAM] int 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3323 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3325 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3326 ;;Total ram usage:       15 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    2
  3329 ;; This function calls:
  3330 ;;		___wmul
  3331 ;;		_isdigit
  3332 ;;		_isspace
  3333 ;; This function is called by:
  3334 ;;		_vfpfcnvrt
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text14
  3339  002846                     __ptext14:
  3340                           	opt callstack 0
  3341  002846                     _atoi:
  3342                           	opt callstack 24
  3343                           
  3344                           ;incstack = 0
  3345  002846  0E00               	movlw	0
  3346  002848  6E1B               	movwf	atoi@n+1,c
  3347  00284A  0E00               	movlw	0
  3348  00284C  6E1A               	movwf	atoi@n,c
  3349  00284E  0E00               	movlw	0
  3350  002850  6E14               	movwf	atoi@neg+1,c
  3351  002852  0E00               	movlw	0
  3352  002854  6E13               	movwf	atoi@neg,c
  3353  002856  D002               	goto	l4131
  3354  002858                     l4129:
  3355  002858  4A0D               	infsnz	atoi@s,f,c
  3356  00285A  2A0E               	incf	atoi@s+1,f,c
  3357  00285C                     l4131:
  3358  00285C  0E01               	movlw	1
  3359  00285E  6E19               	movwf	_atoi$1426,c
  3360  002860  C00D  FFF6         	movff	atoi@s,tblptrl
  3361  002864  C00E  FFF7         	movff	atoi@s+1,tblptrh
  3362  002868                     	if	0	;tblptru may be non-zero
  3363  002868                     	endif
  3364  002868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3365  002868  0E00               	movlw	low (__mediumconst shr (0+16))
  3366  00286A  6EF8               	movwf	tblptru,c
  3367  00286C                     	endif
  3368  00286C  0008               	tblrd		*
  3369  00286E  50F5               	movf	tablat,w,c
  3370  002870  0A20               	xorlw	32
  3371  002872  B4D8               	btfsc	status,2,c
  3372  002874  D01A               	goto	l4139
  3373  002876  0EF7               	movlw	247
  3374  002878  6E0F               	movwf	??_atoi& (0+255),c
  3375  00287A  0EFF               	movlw	255
  3376  00287C  6E10               	movwf	(??_atoi+1)& (0+255),c
  3377  00287E  C00D  FFF6         	movff	atoi@s,tblptrl
  3378  002882  C00E  FFF7         	movff	atoi@s+1,tblptrh
  3379  002886                     	if	0	;tblptru may be non-zero
  3380  002886                     	endif
  3381  002886                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3382  002886  0E00               	movlw	low (__mediumconst shr (0+16))
  3383  002888  6EF8               	movwf	tblptru,c
  3384  00288A                     	endif
  3385  00288A  0008               	tblrd		*
  3386  00288C  50F5               	movf	tablat,w,c
  3387  00288E  6E11               	movwf	(??_atoi+2)& (0+255),c
  3388  002890  6A12               	clrf	(??_atoi+3)& (0+255),c
  3389  002892  500F               	movf	??_atoi,w,c
  3390  002894  2611               	addwf	??_atoi+2,f,c
  3391  002896  5010               	movf	??_atoi+1,w,c
  3392  002898  2212               	addwfc	??_atoi+3,f,c
  3393  00289A  5012               	movf	??_atoi+3,w,c
  3394  00289C  E104               	bnz	u3610
  3395  00289E  0E05               	movlw	5
  3396  0028A0  5C11               	subwf	??_atoi+2,w,c
  3397  0028A2  A0D8               	btfss	status,0,c
  3398  0028A4  D002               	goto	l4139
  3399  0028A6                     u3610:
  3400  0028A6  0E00               	movlw	0
  3401  0028A8  6E19               	movwf	_atoi$1426,c
  3402  0028AA                     l4139:
  3403  0028AA  C019  F015         	movff	_atoi$1426,_atoi$1425
  3404  0028AE  6A16               	clrf	_atoi$1425+1,c
  3405  0028B0  5015               	movf	_atoi$1425,w,c
  3406  0028B2  1016               	iorwf	_atoi$1425+1,w,c
  3407  0028B4  B4D8               	btfsc	status,2,c
  3408  0028B6  D008               	goto	l4149
  3409  0028B8  D7CF               	goto	l4129
  3410  0028BA                     l4145:
  3411  0028BA  0E00               	movlw	0
  3412  0028BC  6E14               	movwf	atoi@neg+1,c
  3413  0028BE  0E01               	movlw	1
  3414  0028C0  6E13               	movwf	atoi@neg,c
  3415  0028C2                     l4147:
  3416  0028C2  4A0D               	infsnz	atoi@s,f,c
  3417  0028C4  2A0E               	incf	atoi@s+1,f,c
  3418  0028C6  D032               	goto	l4155
  3419  0028C8                     l4149:
  3420  0028C8  C00D  FFF6         	movff	atoi@s,tblptrl
  3421  0028CC  C00E  FFF7         	movff	atoi@s+1,tblptrh
  3422  0028D0                     	if	0	;tblptru may be non-zero
  3423  0028D0                     	endif
  3424  0028D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3425  0028D0  0E00               	movlw	low (__mediumconst shr (0+16))
  3426  0028D2  6EF8               	movwf	tblptru,c
  3427  0028D4                     	endif
  3428  0028D4  0008               	tblrd		*
  3429  0028D6  50F5               	movf	tablat,w,c
  3430  0028D8  6E0F               	movwf	??_atoi& (0+255),c
  3431  0028DA  6A10               	clrf	(??_atoi+1)& (0+255),c
  3432                           
  3433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3434                           ; Switch size 1, requested type "simple"
  3435                           ; Number of cases is 1, Range of values is 0 to 0
  3436                           ; switch strategies available:
  3437                           ; Name         Instructions Cycles
  3438                           ; simple_byte            4     3 (average)
  3439                           ;	Chosen strategy is simple_byte
  3440  0028DC  5010               	movf	??_atoi+1,w,c
  3441  0028DE  0A00               	xorlw	0	; case 0
  3442  0028E0  A4D8               	btfss	status,2,c
  3443  0028E2  D024               	goto	l4155
  3444                           
  3445                           ; Switch size 1, requested type "simple"
  3446                           ; Number of cases is 2, Range of values is 43 to 45
  3447                           ; switch strategies available:
  3448                           ; Name         Instructions Cycles
  3449                           ; simple_byte            7     4 (average)
  3450                           ;	Chosen strategy is simple_byte
  3451  0028E4  500F               	movf	??_atoi,w,c
  3452  0028E6  0A2B               	xorlw	43	; case 43
  3453  0028E8  B4D8               	btfsc	status,2,c
  3454  0028EA  D7EB               	goto	l4147
  3455  0028EC  0A06               	xorlw	6	; case 45
  3456  0028EE  B4D8               	btfsc	status,2,c
  3457  0028F0  D7E4               	goto	l4145
  3458  0028F2  D01C               	goto	l4155
  3459  0028F4                     l4151:
  3460  0028F4  C01A  F006         	movff	atoi@n,___wmul@multiplier
  3461  0028F8  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  3462  0028FC  0E00               	movlw	0
  3463  0028FE  6E09               	movwf	___wmul@multiplicand+1,c
  3464  002900  0E0A               	movlw	10
  3465  002902  6E08               	movwf	___wmul@multiplicand,c
  3466  002904  ECE5  F01A         	call	___wmul	;wreg free
  3467  002908  C00D  FFF6         	movff	atoi@s,tblptrl
  3468  00290C  C00E  FFF7         	movff	atoi@s+1,tblptrh
  3469  002910                     	if	0	;tblptru may be non-zero
  3470  002910                     	endif
  3471  002910                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3472  002910  0E00               	movlw	low (__mediumconst shr (0+16))
  3473  002912  6EF8               	movwf	tblptru,c
  3474  002914                     	endif
  3475  002914  0008               	tblrd		*
  3476  002916  50F5               	movf	tablat,w,c
  3477  002918  5E06               	subwf	?___wmul,f,c
  3478  00291A  0E00               	movlw	0
  3479  00291C  5A07               	subwfb	?___wmul+1,f,c
  3480  00291E  0E30               	movlw	48
  3481  002920  2406               	addwf	?___wmul,w,c
  3482  002922  6E1A               	movwf	atoi@n,c
  3483  002924  0E00               	movlw	0
  3484  002926  2007               	addwfc	?___wmul+1,w,c
  3485  002928  6E1B               	movwf	atoi@n+1,c
  3486  00292A  D7CB               	goto	l4147
  3487  00292C                     l4155:
  3488  00292C  0ED0               	movlw	208
  3489  00292E  6E0F               	movwf	??_atoi& (0+255),c
  3490  002930  0EFF               	movlw	255
  3491  002932  6E10               	movwf	(??_atoi+1)& (0+255),c
  3492  002934  C00D  FFF6         	movff	atoi@s,tblptrl
  3493  002938  C00E  FFF7         	movff	atoi@s+1,tblptrh
  3494  00293C                     	if	0	;tblptru may be non-zero
  3495  00293C                     	endif
  3496  00293C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3497  00293C  0E00               	movlw	low (__mediumconst shr (0+16))
  3498  00293E  6EF8               	movwf	tblptru,c
  3499  002940                     	endif
  3500  002940  0008               	tblrd		*
  3501  002942  50F5               	movf	tablat,w,c
  3502  002944  6E11               	movwf	(??_atoi+2)& (0+255),c
  3503  002946  6A12               	clrf	(??_atoi+3)& (0+255),c
  3504  002948  500F               	movf	??_atoi,w,c
  3505  00294A  2611               	addwf	??_atoi+2,f,c
  3506  00294C  5010               	movf	??_atoi+1,w,c
  3507  00294E  2212               	addwfc	??_atoi+3,f,c
  3508  002950  5012               	movf	??_atoi+3,w,c
  3509  002952  E106               	bnz	u3630
  3510  002954  0E0A               	movlw	10
  3511  002956  5C11               	subwf	??_atoi+2,w,c
  3512  002958  B0D8               	btfsc	status,0,c
  3513  00295A  D002               	goto	u3630
  3514  00295C  0E01               	movlw	1
  3515  00295E  D001               	goto	u3640
  3516  002960                     u3630:
  3517  002960  0E00               	movlw	0
  3518  002962                     u3640:
  3519  002962  6E17               	movwf	_atoi$1427,c
  3520  002964  6A18               	clrf	_atoi$1427+1,c
  3521  002966  5017               	movf	_atoi$1427,w,c
  3522  002968  1018               	iorwf	_atoi$1427+1,w,c
  3523  00296A  A4D8               	btfss	status,2,c
  3524  00296C  D7C3               	goto	l4151
  3525  00296E  5013               	movf	atoi@neg,w,c
  3526  002970  1014               	iorwf	atoi@neg+1,w,c
  3527  002972  A4D8               	btfss	status,2,c
  3528  002974  D00D               	goto	l1036
  3529  002976  C01A  F00F         	movff	atoi@n,??_atoi
  3530  00297A  C01B  F010         	movff	atoi@n+1,??_atoi+1
  3531  00297E  1E0F               	comf	??_atoi,f,c
  3532  002980  1E10               	comf	??_atoi+1,f,c
  3533  002982  4A0F               	infsnz	??_atoi,f,c
  3534  002984  2A10               	incf	??_atoi+1,f,c
  3535  002986  C00F  F00D         	movff	??_atoi,?_atoi
  3536  00298A  C010  F00E         	movff	??_atoi+1,?_atoi+1
  3537  00298E  0012               	return	
  3538  002990                     l1036:
  3539  002990  C01A  F00D         	movff	atoi@n,?_atoi
  3540  002994  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  3541  002998  0012               	return		;funcret
  3542  00299A                     __end_of_atoi:
  3543                           	opt callstack 0
  3544                           
  3545 ;; *************** function _isspace *****************
  3546 ;; Defined at:
  3547 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  c               2    5[COMRAM] int 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  2    5[COMRAM] int 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3564 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3565 ;;Total ram usage:        7 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_atoi
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text15
  3576  003410                     __ptext15:
  3577                           	opt callstack 0
  3578  003410                     _isspace:
  3579                           	opt callstack 24
  3580                           
  3581                           ;incstack = 0
  3582  003410  0E01               	movlw	1
  3583  003412  6E0C               	movwf	_isspace$1443,c
  3584  003414  0E20               	movlw	32
  3585  003416  1806               	xorwf	isspace@c,w,c
  3586  003418  1007               	iorwf	isspace@c+1,w,c
  3587  00341A  B4D8               	btfsc	status,2,c
  3588  00341C  D014               	goto	l4073
  3589  00341E  0EF7               	movlw	247
  3590  003420  6E08               	movwf	??_isspace& (0+255),c
  3591  003422  0EFF               	movlw	255
  3592  003424  6E09               	movwf	(??_isspace+1)& (0+255),c
  3593  003426  C006  F00A         	movff	isspace@c,??_isspace+2
  3594  00342A  C007  F00B         	movff	isspace@c+1,??_isspace+3
  3595  00342E  5008               	movf	??_isspace,w,c
  3596  003430  260A               	addwf	??_isspace+2,f,c
  3597  003432  5009               	movf	??_isspace+1,w,c
  3598  003434  220B               	addwfc	??_isspace+3,f,c
  3599  003436  500B               	movf	??_isspace+3,w,c
  3600  003438  E104               	bnz	u3510
  3601  00343A  0E05               	movlw	5
  3602  00343C  5C0A               	subwf	??_isspace+2,w,c
  3603  00343E  A0D8               	btfss	status,0,c
  3604  003440  D002               	goto	l4073
  3605  003442                     u3510:
  3606  003442  0E00               	movlw	0
  3607  003444  6E0C               	movwf	_isspace$1443,c
  3608  003446                     l4073:
  3609  003446  C00C  F006         	movff	_isspace$1443,?_isspace
  3610  00344A  6A07               	clrf	?_isspace+1,c
  3611  00344C  0012               	return		;funcret
  3612  00344E                     __end_of_isspace:
  3613                           	opt callstack 0
  3614                           
  3615 ;; *************** function _isdigit *****************
  3616 ;; Defined at:
  3617 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  c               2    5[COMRAM] int 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  2    5[COMRAM] int 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2, status,0
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3633 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3634 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3635 ;;Total ram usage:        6 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    1
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_vfpfcnvrt
  3642 ;;		_atoi
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text16
  3647  0034EE                     __ptext16:
  3648                           	opt callstack 0
  3649  0034EE                     _isdigit:
  3650                           	opt callstack 25
  3651                           
  3652                           ;incstack = 0
  3653  0034EE  0ED0               	movlw	208
  3654  0034F0  6E08               	movwf	??_isdigit& (0+255),c
  3655  0034F2  0EFF               	movlw	255
  3656  0034F4  6E09               	movwf	(??_isdigit+1)& (0+255),c
  3657  0034F6  C006  F00A         	movff	isdigit@c,??_isdigit+2
  3658  0034FA  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  3659  0034FE  5008               	movf	??_isdigit,w,c
  3660  003500  260A               	addwf	??_isdigit+2,f,c
  3661  003502  5009               	movf	??_isdigit+1,w,c
  3662  003504  220B               	addwfc	??_isdigit+3,f,c
  3663  003506  500B               	movf	??_isdigit+3,w,c
  3664  003508  E106               	bnz	u3410
  3665  00350A  0E0A               	movlw	10
  3666  00350C  5C0A               	subwf	??_isdigit+2,w,c
  3667  00350E  B0D8               	btfsc	status,0,c
  3668  003510  D002               	goto	u3410
  3669  003512  0E01               	movlw	1
  3670  003514  D001               	goto	u3420
  3671  003516                     u3410:
  3672  003516  0E00               	movlw	0
  3673  003518                     u3420:
  3674  003518  6E06               	movwf	?_isdigit,c
  3675  00351A  6A07               	clrf	?_isdigit+1,c
  3676  00351C  0012               	return		;funcret
  3677  00351E                     __end_of_isdigit:
  3678                           	opt callstack 0
  3679                           
  3680 ;; *************** function ___wmul *****************
  3681 ;; Defined at:
  3682 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  multiplier      2    5[COMRAM] unsigned int 
  3685 ;;  multiplicand    2    7[COMRAM] unsigned int 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  product         2    9[COMRAM] unsigned int 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  2    5[COMRAM] unsigned int 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, prodl, prodh
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3697 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3700 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3701 ;;Total ram usage:        6 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    1
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_atoi
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text17
  3712  0035CA                     __ptext17:
  3713                           	opt callstack 0
  3714  0035CA                     ___wmul:
  3715                           	opt callstack 24
  3716                           
  3717                           ;incstack = 0
  3718  0035CA  5006               	movf	___wmul@multiplier,w,c
  3719  0035CC  0208               	mulwf	___wmul@multiplicand,c
  3720  0035CE  CFF3 F00A          	movff	prodl,___wmul@product
  3721  0035D2  CFF4 F00B          	movff	prodh,___wmul@product+1
  3722  0035D6  5006               	movf	___wmul@multiplier,w,c
  3723  0035D8  0209               	mulwf	___wmul@multiplicand+1,c
  3724  0035DA  50F3               	movf	prodl,w,c
  3725  0035DC  260B               	addwf	___wmul@product+1,f,c
  3726  0035DE  5007               	movf	___wmul@multiplier+1,w,c
  3727  0035E0  0208               	mulwf	___wmul@multiplicand,c
  3728  0035E2  50F3               	movf	prodl,w,c
  3729  0035E4  260B               	addwf	___wmul@product+1,f,c
  3730  0035E6  C00A  F006         	movff	___wmul@product,?___wmul
  3731  0035EA  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  3732  0035EE  0012               	return		;funcret
  3733  0035F0                     __end_of___wmul:
  3734                           	opt callstack 0
  3735                           
  3736 ;; *************** function _frenarMotor *****************
  3737 ;; Defined at:
  3738 ;;		line 38 in file "./../LIBRERIAS/funciones_auto.h"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;		None
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;		None
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, status,2
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3756 ;;Total ram usage:        0 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:    1
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_terminal
  3763 ;;		_rutinaEscape
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text18
  3768  003654                     __ptext18:
  3769                           	opt callstack 0
  3770  003654                     _frenarMotor:
  3771                           	opt callstack 28
  3772                           
  3773                           ;./../LIBRERIAS/funciones_auto.h: 39:     CCP7CONbits.DC7B = 0b00;
  3774                           
  3775                           ;incstack = 0
  3776  003654  0ECF               	movlw	-49
  3777  003656  010F               	movlb	15	; () banked
  3778  003658  1709               	andwf	9,f,b	;volatile
  3779                           
  3780                           ;./../LIBRERIAS/funciones_auto.h: 40:     CCPR7L = 0x00;
  3781  00365A  0E00               	movlw	0
  3782  00365C  6F0A               	movwf	10,b	;volatile
  3783                           
  3784                           ; BSR set to: 15
  3785                           ;./../LIBRERIAS/funciones_auto.h: 41:     T2CONbits.TMR2ON = 0;
  3786  00365E  94CA               	bcf	4042,2,c	;volatile
  3787                           
  3788                           ; BSR set to: 15
  3789  003660  0012               	return		;funcret
  3790  003662                     __end_of_frenarMotor:
  3791                           	opt callstack 0
  3792                           
  3793 ;; *************** function _fijarVelocidad *****************
  3794 ;; Defined at:
  3795 ;;		line 27 in file "./../LIBRERIAS/funciones_auto.h"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  speed           1    wreg     unsigned char 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  speed           1   78[COMRAM] unsigned char 
  3800 ;;  DC              4   70[COMRAM] float 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;Total ram usage:        9 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    2
  3817 ;; This function calls:
  3818 ;;		___fladd
  3819 ;;		___flmul
  3820 ;;		___fltol
  3821 ;;		___xxtofl
  3822 ;; This function is called by:
  3823 ;;		_terminal
  3824 ;;		_rutinaEscape
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text19
  3829  002C14                     __ptext19:
  3830                           	opt callstack 0
  3831  002C14                     _fijarVelocidad:
  3832                           	opt callstack 27
  3833                           
  3834                           ; BSR set to: 15
  3835                           ;incstack = 0
  3836                           ;fijarVelocidad@speed stored from wreg
  3837  002C14  6E4F               	movwf	fijarVelocidad@speed,c
  3838                           
  3839                           ;./../LIBRERIAS/funciones_auto.h: 28:     float DC = 0.003 * speed + 0.6;
  3840  002C16  0EA6               	movlw	166
  3841  002C18  6E18               	movwf	___flmul@a,c
  3842  002C1A  0E9B               	movlw	155
  3843  002C1C  6E19               	movwf	___flmul@a+1,c
  3844  002C1E  0E44               	movlw	68
  3845  002C20  6E1A               	movwf	___flmul@a+2,c
  3846  002C22  0E3B               	movlw	59
  3847  002C24  6E1B               	movwf	___flmul@a+3,c
  3848  002C26  504F               	movf	fijarVelocidad@speed,w,c
  3849  002C28  6E06               	movwf	___xxtofl@val,c
  3850  002C2A  6A07               	clrf	___xxtofl@val+1,c
  3851  002C2C  6A08               	clrf	___xxtofl@val+2,c
  3852  002C2E  6A09               	clrf	___xxtofl@val+3,c
  3853  002C30  0E01               	movlw	1
  3854  002C32  ECCD  F014         	call	___xxtofl
  3855  002C36  C006  F014         	movff	?___xxtofl,___flmul@b
  3856  002C3A  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3857  002C3E  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3858  002C42  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3859  002C46  EC61  F00C         	call	___flmul	;wreg free
  3860  002C4A  C014  F02D         	movff	?___flmul,___fladd@b
  3861  002C4E  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  3862  002C52  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  3863  002C56  C017  F030         	movff	?___flmul+3,___fladd@b+3
  3864  002C5A  0E9A               	movlw	154
  3865  002C5C  6E31               	movwf	___fladd@a,c
  3866  002C5E  0E99               	movlw	153
  3867  002C60  6E32               	movwf	___fladd@a+1,c
  3868  002C62  0E19               	movlw	25
  3869  002C64  6E33               	movwf	___fladd@a+2,c
  3870  002C66  0E3F               	movlw	63
  3871  002C68  6E34               	movwf	___fladd@a+3,c
  3872  002C6A  ECAD  F00F         	call	___fladd	;wreg free
  3873  002C6E  C02D  F047         	movff	?___fladd,fijarVelocidad@DC
  3874  002C72  C02E  F048         	movff	?___fladd+1,fijarVelocidad@DC+1
  3875  002C76  C02F  F049         	movff	?___fladd+2,fijarVelocidad@DC+2
  3876  002C7A  C030  F04A         	movff	?___fladd+3,fijarVelocidad@DC+3
  3877                           
  3878                           ;./../LIBRERIAS/funciones_auto.h: 29:     velocidad = 4 * DC * 125;
  3879  002C7E  0E00               	movlw	0
  3880  002C80  6E18               	movwf	___flmul@a,c
  3881  002C82  0E00               	movlw	0
  3882  002C84  6E19               	movwf	___flmul@a+1,c
  3883  002C86  0E80               	movlw	128
  3884  002C88  6E1A               	movwf	___flmul@a+2,c
  3885  002C8A  0E40               	movlw	64
  3886  002C8C  6E1B               	movwf	___flmul@a+3,c
  3887  002C8E  C047  F014         	movff	fijarVelocidad@DC,___flmul@b
  3888  002C92  C048  F015         	movff	fijarVelocidad@DC+1,___flmul@b+1
  3889  002C96  C049  F016         	movff	fijarVelocidad@DC+2,___flmul@b+2
  3890  002C9A  C04A  F017         	movff	fijarVelocidad@DC+3,___flmul@b+3
  3891  002C9E  EC61  F00C         	call	___flmul	;wreg free
  3892  002CA2  C014  F04B         	movff	?___flmul,_fijarVelocidad$1803
  3893  002CA6  C015  F04C         	movff	?___flmul+1,_fijarVelocidad$1803+1
  3894  002CAA  C016  F04D         	movff	?___flmul+2,_fijarVelocidad$1803+2
  3895  002CAE  C017  F04E         	movff	?___flmul+3,_fijarVelocidad$1803+3
  3896                           
  3897                           ;./../LIBRERIAS/funciones_auto.h: 29:     velocidad = 4 * DC * 125;
  3898  002CB2  0E00               	movlw	0
  3899  002CB4  6E18               	movwf	___flmul@a,c
  3900  002CB6  0E00               	movlw	0
  3901  002CB8  6E19               	movwf	___flmul@a+1,c
  3902  002CBA  0EFA               	movlw	250
  3903  002CBC  6E1A               	movwf	___flmul@a+2,c
  3904  002CBE  0E42               	movlw	66
  3905  002CC0  6E1B               	movwf	___flmul@a+3,c
  3906  002CC2  C04B  F014         	movff	_fijarVelocidad$1803,___flmul@b
  3907  002CC6  C04C  F015         	movff	_fijarVelocidad$1803+1,___flmul@b+1
  3908  002CCA  C04D  F016         	movff	_fijarVelocidad$1803+2,___flmul@b+2
  3909  002CCE  C04E  F017         	movff	_fijarVelocidad$1803+3,___flmul@b+3
  3910  002CD2  EC61  F00C         	call	___flmul	;wreg free
  3911  002CD6  C014  F03D         	movff	?___flmul,___fltol@f1
  3912  002CDA  C015  F03E         	movff	?___flmul+1,___fltol@f1+1
  3913  002CDE  C016  F03F         	movff	?___flmul+2,___fltol@f1+2
  3914  002CE2  C017  F040         	movff	?___flmul+3,___fltol@f1+3
  3915  002CE6  ECE1  F016         	call	___fltol	;wreg free
  3916  002CEA  C03D  F0CC         	movff	?___fltol,_velocidad
  3917  002CEE  C03E  F0CD         	movff	?___fltol+1,_velocidad+1
  3918  002CF2  0012               	return		;funcret
  3919  002CF4                     __end_of_fijarVelocidad:
  3920                           	opt callstack 0
  3921                           
  3922 ;; *************** function _estadoDirreccion *****************
  3923 ;; Defined at:
  3924 ;;		line 150 in file "auto.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  valor           1    wreg     unsigned char 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;  valor           1    8[COMRAM] unsigned char 
  3929 ;;  angulo          1    7[COMRAM] unsigned char 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      unsigned char 
  3932 ;; Registers used:
  3933 ;;		wreg, status,2, status,0
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3940 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3942 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3943 ;;Total ram usage:        4 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    1
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_terminal
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text20
  3954  00332C                     __ptext20:
  3955                           	opt callstack 0
  3956  00332C                     _estadoDirreccion:
  3957                           	opt callstack 28
  3958                           
  3959                           ;incstack = 0
  3960                           ;estadoDirreccion@valor stored from wreg
  3961  00332C  6E09               	movwf	estadoDirreccion@valor,c
  3962                           
  3963                           ;auto.c: 151:     unsigned char angulo = 0;
  3964  00332E  0E00               	movlw	0
  3965  003330  6E08               	movwf	estadoDirreccion@angulo,c
  3966                           
  3967                           ;auto.c: 152:     switch(servo_dirreccion){
  3968  003332  D010               	goto	l3421
  3969  003334                     l3405:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;auto.c: 155:                 servo_dirreccion = 1;
  3973                           
  3974                           ; BSR set to: 0
  3975  003334  0E01               	movlw	1
  3976  003336  6FD2               	movwf	_servo_dirreccion& (0+255),b
  3977                           
  3978                           ;auto.c: 156:                 angulo = 180;
  3979  003338  0EB4               	movlw	180
  3980  00333A  D006               	goto	L2
  3981  00333C                     l3411:
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;auto.c: 164:             if(valor != 1){
  3985  00333C  0409               	decf	estadoDirreccion@valor,w,c
  3986  00333E  B4D8               	btfsc	status,2,c
  3987  003340  D01B               	goto	l3423
  3988  003342                     u2950:
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;auto.c: 165:                 servo_dirreccion = 0;
  3992  003342  0E00               	movlw	0
  3993  003344  6FD2               	movwf	_servo_dirreccion& (0+255),b
  3994                           
  3995                           ;auto.c: 166:                 angulo = 90;
  3996  003346  0E5A               	movlw	90
  3997  003348                     L2:
  3998  003348  6E08               	movwf	estadoDirreccion@angulo,c
  3999  00334A  D016               	goto	l3423
  4000  00334C                     l3415:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;auto.c: 170:             if(valor == 1){
  4004  00334C  0409               	decf	estadoDirreccion@valor,w,c
  4005  00334E  B4D8               	btfsc	status,2,c
  4006  003350  D7F8               	goto	u2950
  4007  003352  D012               	goto	l3423
  4008  003354                     l3421:
  4009  003354  0100               	movlb	0	; () banked
  4010  003356  51D2               	movf	_servo_dirreccion& (0+255),w,b
  4011  003358  6E06               	movwf	??_estadoDirreccion& (0+255),c
  4012  00335A  6A07               	clrf	(??_estadoDirreccion+1)& (0+255),c
  4013                           
  4014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4015                           ; Switch size 1, requested type "simple"
  4016                           ; Number of cases is 1, Range of values is 0 to 0
  4017                           ; switch strategies available:
  4018                           ; Name         Instructions Cycles
  4019                           ; simple_byte            4     3 (average)
  4020                           ;	Chosen strategy is simple_byte
  4021  00335C  5007               	movf	??_estadoDirreccion+1,w,c
  4022  00335E  0A00               	xorlw	0	; case 0
  4023  003360  A4D8               	btfss	status,2,c
  4024  003362  D00A               	goto	l3423
  4025                           
  4026                           ; BSR set to: 0
  4027                           ; Switch size 1, requested type "simple"
  4028                           ; Number of cases is 3, Range of values is 0 to 2
  4029                           ; switch strategies available:
  4030                           ; Name         Instructions Cycles
  4031                           ; simple_byte           10     6 (average)
  4032                           ;	Chosen strategy is simple_byte
  4033  003364  5006               	movf	??_estadoDirreccion,w,c
  4034  003366  0A00               	xorlw	0	; case 0
  4035  003368  B4D8               	btfsc	status,2,c
  4036  00336A  D7E4               	goto	l3405
  4037  00336C  0A01               	xorlw	1	; case 1
  4038  00336E  B4D8               	btfsc	status,2,c
  4039  003370  D7E5               	goto	l3411
  4040  003372  0A03               	xorlw	3	; case 2
  4041  003374  B4D8               	btfsc	status,2,c
  4042  003376  D7EA               	goto	l3415
  4043  003378                     l3423:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;auto.c: 176:     return angulo;
  4047  003378  5008               	movf	estadoDirreccion@angulo,w,c
  4048                           
  4049                           ; BSR set to: 0
  4050  00337A  0012               	return		;funcret
  4051  00337C                     __end_of_estadoDirreccion:
  4052                           	opt callstack 0
  4053                           
  4054 ;; *************** function _encenderMotor *****************
  4055 ;; Defined at:
  4056 ;;		line 32 in file "./../LIBRERIAS/funciones_auto.h"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4074 ;;Total ram usage:        2 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    2
  4077 ;; This function calls:
  4078 ;;		_rutinaArranque
  4079 ;; This function is called by:
  4080 ;;		_terminal
  4081 ;;		_rutinaEscape
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text21
  4086  003486                     __ptext21:
  4087                           	opt callstack 0
  4088  003486                     _encenderMotor:
  4089                           	opt callstack 27
  4090                           
  4091                           ;./../LIBRERIAS/funciones_auto.h: 33:     rutinaArranque();
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;incstack = 0
  4095  003486  ECD1  F01A         	call	_rutinaArranque	;wreg free
  4096                           
  4097                           ;./../LIBRERIAS/funciones_auto.h: 34:     CCP7CONbits.DC7B = velocidad & 0x0003;
  4098  00348A  C0CC  F008         	movff	_velocidad,??_encenderMotor
  4099  00348E  0E03               	movlw	3
  4100  003490  1608               	andwf	??_encenderMotor,f,c
  4101  003492  3A08               	swapf	??_encenderMotor,f,c
  4102  003494  010F               	movlb	15	; () banked
  4103  003496  5109               	movf	9,w,b	;volatile
  4104  003498  1808               	xorwf	??_encenderMotor,w,c
  4105  00349A  0BCF               	andlw	-49
  4106  00349C  1808               	xorwf	??_encenderMotor,w,c
  4107  00349E  6F09               	movwf	9,b	;volatile
  4108                           
  4109                           ; BSR set to: 15
  4110                           ;./../LIBRERIAS/funciones_auto.h: 35:     CCPR7L = velocidad>>2;
  4111  0034A0  C0CC  F008         	movff	_velocidad,??_encenderMotor
  4112  0034A4  C0CD  F009         	movff	_velocidad+1,??_encenderMotor+1
  4113  0034A8  90D8               	bcf	status,0,c
  4114  0034AA  3209               	rrcf	??_encenderMotor+1,f,c
  4115  0034AC  3208               	rrcf	??_encenderMotor,f,c
  4116  0034AE  90D8               	bcf	status,0,c
  4117  0034B0  3209               	rrcf	??_encenderMotor+1,f,c
  4118  0034B2  3208               	rrcf	??_encenderMotor,f,c
  4119  0034B4  5008               	movf	??_encenderMotor,w,c
  4120  0034B6  6F0A               	movwf	10,b	;volatile
  4121                           
  4122                           ; BSR set to: 15
  4123  0034B8  0012               	return		;funcret
  4124  0034BA                     __end_of_encenderMotor:
  4125                           	opt callstack 0
  4126                           
  4127 ;; *************** function _rutinaArranque *****************
  4128 ;; Defined at:
  4129 ;;		line 20 in file "./../LIBRERIAS/funciones_auto.h"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg, status,2
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4147 ;;Total ram usage:        2 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    1
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_encenderMotor
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text22
  4158  0035A2                     __ptext22:
  4159                           	opt callstack 0
  4160  0035A2                     _rutinaArranque:
  4161                           	opt callstack 27
  4162                           
  4163                           ;./../LIBRERIAS/funciones_auto.h: 21:     CCP7CONbits.DC7B = cicle_90 & 0x0003;
  4164                           
  4165                           ; BSR set to: 15
  4166                           ;incstack = 0
  4167  0035A2  010F               	movlb	15	; () banked
  4168  0035A4  5109               	movf	9,w,b	;volatile
  4169  0035A6  0BCF               	andlw	-49
  4170  0035A8  0920               	iorlw	32
  4171  0035AA  6F09               	movwf	9,b	;volatile
  4172                           
  4173                           ;./../LIBRERIAS/funciones_auto.h: 22:     CCPR7L = cicle_90>>2;
  4174  0035AC  0E70               	movlw	112
  4175  0035AE  6F0A               	movwf	10,b	;volatile
  4176                           
  4177                           ; BSR set to: 15
  4178                           ;./../LIBRERIAS/funciones_auto.h: 23:     T2CONbits.TMR2ON = 1;
  4179  0035B0  84CA               	bsf	4042,2,c	;volatile
  4180                           
  4181                           ; BSR set to: 15
  4182                           ;./../LIBRERIAS/funciones_auto.h: 24:     _delay((unsigned long)((50)*(48000000/4000.0))
      +                          );
  4183  0035B2  0E04               	movlw	4
  4184  0035B4  6E07               	movwf	(??_rutinaArranque+1)& (0+255),c
  4185  0035B6  0E0C               	movlw	12
  4186  0035B8  6E06               	movwf	??_rutinaArranque& (0+255),c
  4187  0035BA  0E34               	movlw	52
  4188  0035BC                     u4817:
  4189  0035BC  2EE8               	decfsz	wreg,f,c
  4190  0035BE  D7FE               	bra	u4817
  4191  0035C0  2E06               	decfsz	??_rutinaArranque& (0+255),f,c
  4192  0035C2  D7FC               	bra	u4817
  4193  0035C4  2E07               	decfsz	(??_rutinaArranque+1)& (0+255),f,c
  4194  0035C6  D7FA               	bra	u4817
  4195  0035C8  0012               	return		;funcret
  4196  0035CA                     __end_of_rutinaArranque:
  4197                           	opt callstack 0
  4198                           
  4199 ;; *************** function _dirreccion *****************
  4200 ;; Defined at:
  4201 ;;		line 179 in file "auto.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  degree          1    wreg     unsigned char 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  degree          1    7[COMRAM] unsigned char 
  4206 ;;  tiempo_1        1    8[COMRAM] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4217 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4218 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4219 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4220 ;;Total ram usage:        4 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    1
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_terminal
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text23
  4231  0031BE                     __ptext23:
  4232                           	opt callstack 0
  4233  0031BE                     _dirreccion:
  4234                           	opt callstack 28
  4235                           
  4236                           ;incstack = 0
  4237                           ;dirreccion@degree stored from wreg
  4238  0031BE  6E08               	movwf	dirreccion@degree,c
  4239                           
  4240                           ;auto.c: 180:     unsigned char tiempo_1 = 15;
  4241  0031C0  0E0F               	movlw	15
  4242  0031C2  6E09               	movwf	dirreccion@tiempo_1,c
  4243                           
  4244                           ;auto.c: 181:     switch(degree){
  4245  0031C4  D007               	goto	l3443
  4246  0031C6                     l3435:
  4247                           
  4248                           ;auto.c: 183:             tiempo_1 = 15;
  4249  0031C6  0E0F               	movlw	15
  4250  0031C8  D003               	goto	L4
  4251  0031CA                     l3437:
  4252                           
  4253                           ;auto.c: 186:             tiempo_1 = 23;
  4254  0031CA  0E17               	movlw	23
  4255  0031CC  D001               	goto	L4
  4256  0031CE                     l3439:
  4257                           
  4258                           ;auto.c: 189:             tiempo_1 = 5;
  4259  0031CE  0E05               	movlw	5
  4260  0031D0                     L4:
  4261  0031D0  6E09               	movwf	dirreccion@tiempo_1,c
  4262                           
  4263                           ;auto.c: 190:             break;
  4264  0031D2  D011               	goto	l212
  4265  0031D4                     l3443:
  4266  0031D4  5008               	movf	dirreccion@degree,w,c
  4267  0031D6  6E06               	movwf	??_dirreccion& (0+255),c
  4268  0031D8  6A07               	clrf	(??_dirreccion+1)& (0+255),c
  4269                           
  4270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4271                           ; Switch size 1, requested type "simple"
  4272                           ; Number of cases is 1, Range of values is 0 to 0
  4273                           ; switch strategies available:
  4274                           ; Name         Instructions Cycles
  4275                           ; simple_byte            4     3 (average)
  4276                           ;	Chosen strategy is simple_byte
  4277  0031DA  5007               	movf	??_dirreccion+1,w,c
  4278  0031DC  0A00               	xorlw	0	; case 0
  4279  0031DE  A4D8               	btfss	status,2,c
  4280  0031E0  D00A               	goto	l212
  4281                           
  4282                           ; Switch size 1, requested type "simple"
  4283                           ; Number of cases is 3, Range of values is 0 to 180
  4284                           ; switch strategies available:
  4285                           ; Name         Instructions Cycles
  4286                           ; simple_byte           10     6 (average)
  4287                           ;	Chosen strategy is simple_byte
  4288  0031E2  5006               	movf	??_dirreccion,w,c
  4289  0031E4  0A00               	xorlw	0	; case 0
  4290  0031E6  B4D8               	btfsc	status,2,c
  4291  0031E8  D7F0               	goto	l3437
  4292  0031EA  0A5A               	xorlw	90	; case 90
  4293  0031EC  B4D8               	btfsc	status,2,c
  4294  0031EE  D7EB               	goto	l3435
  4295  0031F0  0AEE               	xorlw	238	; case 180
  4296  0031F2  B4D8               	btfsc	status,2,c
  4297  0031F4  D7EC               	goto	l3439
  4298  0031F6                     l212:
  4299                           
  4300                           ;auto.c: 192:     if(PORTDbits.RD4 != 1){
  4301  0031F6  B883               	btfsc	3971,4,c	;volatile
  4302  0031F8  D006               	goto	l3447
  4303                           
  4304                           ;auto.c: 193:         TIME_MAX = tiempo_1;
  4305  0031FA  C009  F0E5         	movff	dirreccion@tiempo_1,_TIME_MAX
  4306  0031FE  0100               	movlb	0	; () banked
  4307  003200  6BE6               	clrf	(_TIME_MAX+1)& (0+255),b
  4308                           
  4309                           ;auto.c: 194:         PORTDbits.RD4 = 1;
  4310  003202  8883               	bsf	3971,4,c	;volatile
  4311                           
  4312                           ;auto.c: 195:     }
  4313  003204  D00A               	goto	l3451
  4314  003206                     l3447:
  4315                           
  4316                           ;auto.c: 197:         TIME_MAX = 200 - tiempo_1;
  4317  003206  5009               	movf	dirreccion@tiempo_1,w,c
  4318  003208  08C8               	sublw	200
  4319  00320A  0100               	movlb	0	; () banked
  4320  00320C  6FE5               	movwf	_TIME_MAX& (0+255),b
  4321  00320E  0E00               	movlw	0
  4322  003210  A0D8               	btfss	status,0,c
  4323  003212  2AE8               	incf	wreg,f,c
  4324  003214  0800               	sublw	0
  4325  003216  6FE6               	movwf	(_TIME_MAX+1)& (0+255),b
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;auto.c: 198:         PORTDbits.RD4 = 0;
  4329  003218  9883               	bcf	3971,4,c	;volatile
  4330  00321A                     l3451:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;auto.c: 200:     contador_timer_5 = 0;
  4334  00321A  0E00               	movlw	0
  4335  00321C  6FD3               	movwf	_contador_timer_5& (0+255),b
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;auto.c: 201:     T5CONbits.TMR5ON = 1;
  4339  00321E  010F               	movlb	15	; () banked
  4340  003220  8122               	bsf	34,0,b	;volatile
  4341                           
  4342                           ; BSR set to: 15
  4343  003222  0012               	return		;funcret
  4344  003224                     __end_of_dirreccion:
  4345                           	opt callstack 0
  4346                           
  4347 ;; *************** function _atras *****************
  4348 ;; Defined at:
  4349 ;;		line 220 in file "auto.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;		None
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;Total ram usage:        0 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    3
  4370 ;; This function calls:
  4371 ;;		_enviarRS232
  4372 ;; This function is called by:
  4373 ;;		_terminal
  4374 ;;		_rutinaEscape
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           	psect	text24
  4379  003662                     __ptext24:
  4380                           	opt callstack 0
  4381  003662                     _atras:
  4382                           	opt callstack 26
  4383                           
  4384                           ;auto.c: 221:     enviarRS232("FALTA IMPLEMETAR!");
  4385                           
  4386                           ; BSR set to: 15
  4387                           ;incstack = 0
  4388  003662  0E9D               	movlw	low STR_5
  4389  003664  6E0E               	movwf	enviarRS232@valores,c
  4390  003666  0E0F               	movlw	high STR_5
  4391  003668  6E0F               	movwf	enviarRS232@valores+1,c
  4392  00366A  ECA8  F018         	call	_enviarRS232	;wreg free
  4393  00366E  0012               	return		;funcret
  4394  003670                     __end_of_atras:
  4395                           	opt callstack 0
  4396                           
  4397 ;; *************** function _adelante *****************
  4398 ;; Defined at:
  4399 ;;		line 216 in file "auto.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    3
  4420 ;; This function calls:
  4421 ;;		_enviarRS232
  4422 ;; This function is called by:
  4423 ;;		_terminal
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text25
  4428  003670                     __ptext25:
  4429                           	opt callstack 0
  4430  003670                     _adelante:
  4431                           	opt callstack 26
  4432                           
  4433                           ;auto.c: 217:     enviarRS232("FALTA IMPLEMENTAR!");
  4434                           
  4435                           ;incstack = 0
  4436  003670  0E8A               	movlw	low STR_4
  4437  003672  6E0E               	movwf	enviarRS232@valores,c
  4438  003674  0E0F               	movlw	high STR_4
  4439  003676  6E0F               	movwf	enviarRS232@valores+1,c
  4440  003678  ECA8  F018         	call	_enviarRS232	;wreg free
  4441  00367C  0012               	return		;funcret
  4442  00367E                     __end_of_adelante:
  4443                           	opt callstack 0
  4444                           
  4445 ;; *************** function _enviarRS232 *****************
  4446 ;; Defined at:
  4447 ;;		line 44 in file "./../LIBRERIAS/funciones_auto.h"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  valores         2   13[COMRAM] PTR unsigned char 
  4450 ;;		 -> STR_5(18), STR_4(19), STR_2(21), STR_1(20), 
  4451 ;;		 -> terminal@texto(20), main@text(6), 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  i               1   19[COMRAM] unsigned char 
  4454 ;;  longitud_tex    2   17[COMRAM] unsigned int 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4465 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4467 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4468 ;;Total ram usage:        7 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    2
  4471 ;; This function calls:
  4472 ;;		_length
  4473 ;; This function is called by:
  4474 ;;		_main
  4475 ;;		_terminal
  4476 ;;		_adelante
  4477 ;;		_atras
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text26
  4482  003150                     __ptext26:
  4483                           	opt callstack 0
  4484  003150                     _enviarRS232:
  4485                           	opt callstack 27
  4486                           
  4487                           ;./../LIBRERIAS/funciones_auto.h: 45:     unsigned int longitud_texto = length(valores);
  4488                           
  4489                           ;incstack = 0
  4490  003150  C00E  F006         	movff	enviarRS232@valores,length@text
  4491  003154  C00F  F007         	movff	enviarRS232@valores+1,length@text+1
  4492  003158  EC6C  F018         	call	_length	;wreg free
  4493  00315C  C006  F012         	movff	?_length,enviarRS232@longitud_texto
  4494  003160  C007  F013         	movff	?_length+1,enviarRS232@longitud_texto+1
  4495                           
  4496                           ;./../LIBRERIAS/funciones_auto.h: 46:     for(unsigned char i = 0; i<longitud_texto; i++
      +                          ){
  4497  003164  0E00               	movlw	0
  4498  003166  6E14               	movwf	enviarRS232@i,c
  4499  003168  D020               	goto	l3107
  4500  00316A                     l3101:
  4501                           
  4502                           ;./../LIBRERIAS/funciones_auto.h: 47:         TXREG1 = valores[i];
  4503  00316A  5014               	movf	enviarRS232@i,w,c
  4504  00316C  240E               	addwf	enviarRS232@valores,w,c
  4505  00316E  6E10               	movwf	??_enviarRS232& (0+255),c
  4506  003170  0E00               	movlw	0
  4507  003172  200F               	addwfc	enviarRS232@valores+1,w,c
  4508  003174  6E11               	movwf	(??_enviarRS232+1)& (0+255),c
  4509  003176  C010  FFF6         	movff	??_enviarRS232,tblptrl
  4510  00317A  C011  FFF7         	movff	??_enviarRS232+1,tblptrh
  4511  00317E  0E00               	movlw	low (__smallconst shr (0+16))
  4512  003180  6EF8               	movwf	tblptru,c
  4513  003182  0E0E               	movlw	(high __ramtop+-1)
  4514  003184  64F7               	cpfsgt	tblptrh,c
  4515  003186  D003               	bra	u2557
  4516  003188  0008               	tblrd		*
  4517  00318A  50F5               	movf	tablat,w,c
  4518  00318C  D005               	bra	u2550
  4519  00318E                     u2557:
  4520  00318E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4521  003192  CFF7 FFE2          	movff	tblptrh,fsr1h
  4522  003196  50E7               	movf	indf1,w,c
  4523  003198                     u2550:
  4524  003198  6EAE               	movwf	4014,c	;volatile
  4525                           
  4526                           ;./../LIBRERIAS/funciones_auto.h: 48:         _delay((unsigned long)((3)*(48000000/4000.
      +                          0)));
  4527  00319A  0E2F               	movlw	47
  4528  00319C  6E10               	movwf	??_enviarRS232& (0+255),c
  4529  00319E  0EC0               	movlw	192
  4530  0031A0                     u4827:
  4531  0031A0  2EE8               	decfsz	wreg,f,c
  4532  0031A2  D7FE               	bra	u4827
  4533  0031A4  2E10               	decfsz	??_enviarRS232& (0+255),f,c
  4534  0031A6  D7FC               	bra	u4827
  4535                           
  4536                           ;./../LIBRERIAS/funciones_auto.h: 49:     }
  4537  0031A8  2A14               	incf	enviarRS232@i,f,c
  4538  0031AA                     l3107:
  4539  0031AA  5014               	movf	enviarRS232@i,w,c
  4540  0031AC  6E10               	movwf	??_enviarRS232& (0+255),c
  4541  0031AE  6A11               	clrf	(??_enviarRS232+1)& (0+255),c
  4542  0031B0  5012               	movf	enviarRS232@longitud_texto,w,c
  4543  0031B2  5C10               	subwf	??_enviarRS232,w,c
  4544  0031B4  5013               	movf	enviarRS232@longitud_texto+1,w,c
  4545  0031B6  5811               	subwfb	??_enviarRS232+1,w,c
  4546  0031B8  B0D8               	btfsc	status,0,c
  4547  0031BA  0012               	return	
  4548  0031BC  D7D6               	goto	l3101
  4549  0031BE                     __end_of_enviarRS232:
  4550                           	opt callstack 0
  4551                           
  4552 ;; *************** function _length *****************
  4553 ;; Defined at:
  4554 ;;		line 53 in file "./../LIBRERIAS/funciones_auto.h"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  text            2    5[COMRAM] PTR unsigned char 
  4557 ;;		 -> STR_5(18), STR_4(19), STR_2(21), STR_1(20), 
  4558 ;;		 -> terminal@texto(20), main@text(6), 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  longitud        2    9[COMRAM] int 
  4561 ;;  i               1   12[COMRAM] unsigned char 
  4562 ;;  dato            1   11[COMRAM] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  2    5[COMRAM] int 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4573 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4574 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4575 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4576 ;;Total ram usage:        8 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    1
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_enviarRS232
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text27
  4587  0030D8                     __ptext27:
  4588                           	opt callstack 0
  4589  0030D8                     _length:
  4590                           	opt callstack 27
  4591                           
  4592                           ;./../LIBRERIAS/funciones_auto.h: 54:     unsigned char dato = text[0], i = 1;
  4593                           
  4594                           ;incstack = 0
  4595  0030D8  C006  FFF6         	movff	length@text,tblptrl
  4596  0030DC  C007  FFF7         	movff	length@text+1,tblptrh
  4597  0030E0  0E00               	movlw	low (__smallconst shr (0+16))
  4598  0030E2  6EF8               	movwf	tblptru,c
  4599  0030E4  0E0E               	movlw	(high __ramtop+-1)
  4600  0030E6  64F7               	cpfsgt	tblptrh,c
  4601  0030E8  D003               	bra	u2027
  4602  0030EA  0008               	tblrd		*
  4603  0030EC  50F5               	movf	tablat,w,c
  4604  0030EE  D005               	bra	u2020
  4605  0030F0                     u2027:
  4606  0030F0  CFF6 FFE1          	movff	tblptrl,fsr1l
  4607  0030F4  CFF7 FFE2          	movff	tblptrh,fsr1h
  4608  0030F8  50E7               	movf	indf1,w,c
  4609  0030FA                     u2020:
  4610  0030FA  6E0C               	movwf	length@dato,c
  4611  0030FC  0E01               	movlw	1
  4612  0030FE  6E0D               	movwf	length@i,c
  4613                           
  4614                           ;./../LIBRERIAS/funciones_auto.h: 55:     int longitud = 0;
  4615  003100  0E00               	movlw	0
  4616  003102  6E0B               	movwf	length@longitud+1,c
  4617  003104  0E00               	movlw	0
  4618  003106  6E0A               	movwf	length@longitud,c
  4619                           
  4620                           ;./../LIBRERIAS/funciones_auto.h: 56:     while(dato != '\0'){
  4621  003108  D01B               	goto	l2785
  4622  00310A                     l2779:
  4623                           
  4624                           ;./../LIBRERIAS/funciones_auto.h: 57:         dato = text[i];
  4625  00310A  500D               	movf	length@i,w,c
  4626  00310C  2406               	addwf	length@text,w,c
  4627  00310E  6E08               	movwf	??_length& (0+255),c
  4628  003110  0E00               	movlw	0
  4629  003112  2007               	addwfc	length@text+1,w,c
  4630  003114  6E09               	movwf	(??_length+1)& (0+255),c
  4631  003116  C008  FFF6         	movff	??_length,tblptrl
  4632  00311A  C009  FFF7         	movff	??_length+1,tblptrh
  4633  00311E  0E00               	movlw	low (__smallconst shr (0+16))
  4634  003120  6EF8               	movwf	tblptru,c
  4635  003122  0E0E               	movlw	(high __ramtop+-1)
  4636  003124  64F7               	cpfsgt	tblptrh,c
  4637  003126  D003               	bra	u2037
  4638  003128  0008               	tblrd		*
  4639  00312A  50F5               	movf	tablat,w,c
  4640  00312C  D005               	bra	u2030
  4641  00312E                     u2037:
  4642  00312E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4643  003132  CFF7 FFE2          	movff	tblptrh,fsr1h
  4644  003136  50E7               	movf	indf1,w,c
  4645  003138                     u2030:
  4646  003138  6E0C               	movwf	length@dato,c
  4647                           
  4648                           ;./../LIBRERIAS/funciones_auto.h: 58:         i++;
  4649  00313A  2A0D               	incf	length@i,f,c
  4650                           
  4651                           ;./../LIBRERIAS/funciones_auto.h: 59:         longitud++;
  4652  00313C  4A0A               	infsnz	length@longitud,f,c
  4653  00313E  2A0B               	incf	length@longitud+1,f,c
  4654  003140                     l2785:
  4655                           
  4656                           ;./../LIBRERIAS/funciones_auto.h: 56:     while(dato != '\0'){
  4657  003140  500C               	movf	length@dato,w,c
  4658  003142  A4D8               	btfss	status,2,c
  4659  003144  D7E2               	goto	l2779
  4660                           
  4661                           ;./../LIBRERIAS/funciones_auto.h: 61:     return longitud;
  4662  003146  C00A  F006         	movff	length@longitud,?_length
  4663  00314A  C00B  F007         	movff	length@longitud+1,?_length+1
  4664  00314E  0012               	return		;funcret
  4665  003150                     __end_of_length:
  4666                           	opt callstack 0
  4667                           
  4668 ;; *************** function _sinf *****************
  4669 ;; Defined at:
  4670 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sinf.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  x               4   64[BANK0 ] float 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  ix              4   26[BANK1 ] unsigned long 
  4675 ;;  y               4   22[BANK1 ] unsigned long 
  4676 ;;  __xc8_float_    4    4[BANK1 ] struct .
  4677 ;;  n               4    0[BANK1 ] long 
  4678 ;;  sign            2   16[BANK1 ] int 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  4   64[BANK0 ] float 
  4681 ;; Registers used:
  4682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4688 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;      Totals:         4       4      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4692 ;;Total ram usage:       38 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    4
  4695 ;; This function calls:
  4696 ;;		___cosdf
  4697 ;;		___fladd
  4698 ;;		___flneg
  4699 ;;		___flsub
  4700 ;;		___rem_pio2f
  4701 ;;		___sindf
  4702 ;; This function is called by:
  4703 ;;		_main
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           	psect	text28
  4708  000FB0                     __ptext28:
  4709                           	opt callstack 0
  4710  000FB0                     _sinf:
  4711                           	opt callstack 26
  4712                           
  4713                           ;incstack = 0
  4714  000FB0  C0A0  F124         	movff	sinf@x,sinf@__xc8_float_word
  4715  000FB4  C0A1  F125         	movff	sinf@x+1,sinf@__xc8_float_word+1
  4716  000FB8  C0A2  F126         	movff	sinf@x+2,sinf@__xc8_float_word+2
  4717  000FBC  C0A3  F127         	movff	sinf@x+3,sinf@__xc8_float_word+3
  4718  000FC0  C124  F13A         	movff	sinf@__xc8_float_word,sinf@ix
  4719  000FC4  C125  F13B         	movff	sinf@__xc8_float_word+1,sinf@ix+1
  4720  000FC8  C126  F13C         	movff	sinf@__xc8_float_word+2,sinf@ix+2
  4721  000FCC  C127  F13D         	movff	sinf@__xc8_float_word+3,sinf@ix+3
  4722  000FD0  C13A  F04B         	movff	sinf@ix,??_sinf
  4723  000FD4  C13B  F04C         	movff	sinf@ix+1,??_sinf+1
  4724  000FD8  C13C  F04D         	movff	sinf@ix+2,??_sinf+2
  4725  000FDC  C13D  F04E         	movff	sinf@ix+3,??_sinf+3
  4726  000FE0  0E20               	movlw	32
  4727  000FE2  D005               	goto	u4600
  4728  000FE4                     u4605:
  4729  000FE4  90D8               	bcf	status,0,c
  4730  000FE6  324E               	rrcf	??_sinf+3,f,c
  4731  000FE8  324D               	rrcf	??_sinf+2,f,c
  4732  000FEA  324C               	rrcf	??_sinf+1,f,c
  4733  000FEC  324B               	rrcf	??_sinf,f,c
  4734  000FEE                     u4600:
  4735  000FEE  2EE8               	decfsz	wreg,f,c
  4736  000FF0  D7F9               	goto	u4605
  4737  000FF2  C04B  F130         	movff	??_sinf,sinf@sign
  4738  000FF6  C04C  F131         	movff	??_sinf+1,sinf@sign+1
  4739  000FFA  0101               	movlb	1	; () banked
  4740  000FFC  9F3D               	bcf	(sinf@ix+3)& (0+255),7,b
  4741                           
  4742                           ; BSR set to: 1
  4743  000FFE  0EDB               	movlw	219
  4744  001000  5D3A               	subwf	sinf@ix& (0+255),w,b
  4745  001002  0E0F               	movlw	15
  4746  001004  593B               	subwfb	(sinf@ix+1)& (0+255),w,b
  4747  001006  0E49               	movlw	73
  4748  001008  593C               	subwfb	(sinf@ix+2)& (0+255),w,b
  4749  00100A  0E3F               	movlw	63
  4750  00100C  593D               	subwfb	(sinf@ix+3)& (0+255),w,b
  4751  00100E  B0D8               	btfsc	status,0,c
  4752  001010  D022               	goto	l4819
  4753                           
  4754                           ; BSR set to: 1
  4755  001012  0E80               	movlw	128
  4756  001014  5D3C               	subwf	(sinf@ix+2)& (0+255),w,b
  4757  001016  0E39               	movlw	57
  4758  001018  593D               	subwfb	(sinf@ix+3)& (0+255),w,b
  4759  00101A  B0D8               	btfsc	status,0,c
  4760  00101C  D009               	goto	l4815
  4761                           
  4762                           ; BSR set to: 1
  4763  00101E  C0A0  F0A0         	movff	sinf@x,?_sinf
  4764  001022  C0A1  F0A1         	movff	sinf@x+1,?_sinf+1
  4765  001026  C0A2  F0A2         	movff	sinf@x+2,?_sinf+2
  4766  00102A  C0A3  F0A3         	movff	sinf@x+3,?_sinf+3
  4767  00102E  0012               	return	
  4768  001030                     l4815:
  4769                           
  4770                           ; BSR set to: 1
  4771  001030  C0A0  F07C         	movff	sinf@x,___sindf@x
  4772  001034  C0A1  F07D         	movff	sinf@x+1,___sindf@x+1
  4773  001038  C0A2  F07E         	movff	sinf@x+2,___sindf@x+2
  4774  00103C  C0A3  F07F         	movff	sinf@x+3,___sindf@x+3
  4775  001040  EC33  F011         	call	___sindf	;wreg free
  4776  001044  C07C  F0A0         	movff	?___sindf,?_sinf
  4777  001048  C07D  F0A1         	movff	?___sindf+1,?_sinf+1
  4778  00104C  C07E  F0A2         	movff	?___sindf+2,?_sinf+2
  4779  001050  C07F  F0A3         	movff	?___sindf+3,?_sinf+3
  4780  001054  0012               	return	
  4781  001056                     l4819:
  4782                           
  4783                           ; BSR set to: 1
  4784  001056  0ED2               	movlw	210
  4785  001058  5D3A               	subwf	sinf@ix& (0+255),w,b
  4786  00105A  0E53               	movlw	83
  4787  00105C  593B               	subwfb	(sinf@ix+1)& (0+255),w,b
  4788  00105E  0E7B               	movlw	123
  4789  001060  593C               	subwfb	(sinf@ix+2)& (0+255),w,b
  4790  001062  0E40               	movlw	64
  4791  001064  593D               	subwfb	(sinf@ix+3)& (0+255),w,b
  4792  001066  B0D8               	btfsc	status,0,c
  4793  001068  D0CA               	goto	l4849
  4794                           
  4795                           ; BSR set to: 1
  4796  00106A  0EE4               	movlw	228
  4797  00106C  5D3A               	subwf	sinf@ix& (0+255),w,b
  4798  00106E  0ECB               	movlw	203
  4799  001070  593B               	subwfb	(sinf@ix+1)& (0+255),w,b
  4800  001072  0E16               	movlw	22
  4801  001074  593C               	subwfb	(sinf@ix+2)& (0+255),w,b
  4802  001076  0E40               	movlw	64
  4803  001078  593D               	subwfb	(sinf@ix+3)& (0+255),w,b
  4804  00107A  B0D8               	btfsc	status,0,c
  4805  00107C  D068               	goto	l4839
  4806                           
  4807                           ; BSR set to: 1
  4808  00107E  5130               	movf	sinf@sign& (0+255),w,b
  4809  001080  1131               	iorwf	(sinf@sign+1)& (0+255),w,b
  4810  001082  B4D8               	btfsc	status,2,c
  4811  001084  D037               	goto	l4833
  4812                           
  4813                           ; BSR set to: 1
  4814  001086  0EDB               	movlw	219
  4815  001088  6E31               	movwf	___fladd@a,c
  4816  00108A  0E0F               	movlw	15
  4817  00108C  6E32               	movwf	___fladd@a+1,c
  4818  00108E  0EC9               	movlw	201
  4819  001090  6E33               	movwf	___fladd@a+2,c
  4820  001092  0E3F               	movlw	63
  4821  001094  6E34               	movwf	___fladd@a+3,c
  4822  001096  C0A0  F02D         	movff	sinf@x,___fladd@b
  4823  00109A  C0A1  F02E         	movff	sinf@x+1,___fladd@b+1
  4824  00109E  C0A2  F02F         	movff	sinf@x+2,___fladd@b+2
  4825  0010A2  C0A3  F030         	movff	sinf@x+3,___fladd@b+3
  4826  0010A6  ECAD  F00F         	call	___fladd	;wreg free
  4827  0010AA  C02D  F132         	movff	?___fladd,_sinf$1804
  4828  0010AE  C02E  F133         	movff	?___fladd+1,_sinf$1804+1
  4829  0010B2  C02F  F134         	movff	?___fladd+2,_sinf$1804+2
  4830  0010B6  C030  F135         	movff	?___fladd+3,_sinf$1804+3
  4831  0010BA  C132  F03D         	movff	_sinf$1804,___cosdf@x
  4832  0010BE  C133  F03E         	movff	_sinf$1804+1,___cosdf@x+1
  4833  0010C2  C134  F03F         	movff	_sinf$1804+2,___cosdf@x+2
  4834  0010C6  C135  F040         	movff	_sinf$1804+3,___cosdf@x+3
  4835  0010CA  EC4C  F012         	call	___cosdf	;wreg free
  4836  0010CE  C03D  F078         	movff	?___cosdf,___flneg@f1
  4837  0010D2  C03E  F079         	movff	?___cosdf+1,___flneg@f1+1
  4838  0010D6  C03F  F07A         	movff	?___cosdf+2,___flneg@f1+2
  4839  0010DA  C040  F07B         	movff	?___cosdf+3,___flneg@f1+3
  4840  0010DE  EC8F  F01A         	call	___flneg	;wreg free
  4841  0010E2  C078  F0A0         	movff	?___flneg,?_sinf
  4842  0010E6  C079  F0A1         	movff	?___flneg+1,?_sinf+1
  4843  0010EA  C07A  F0A2         	movff	?___flneg+2,?_sinf+2
  4844  0010EE  C07B  F0A3         	movff	?___flneg+3,?_sinf+3
  4845  0010F2  0012               	return	
  4846  0010F4                     l4833:
  4847                           
  4848                           ; BSR set to: 1
  4849  0010F4  C0A0  F02D         	movff	sinf@x,___fladd@b
  4850  0010F8  C0A1  F02E         	movff	sinf@x+1,___fladd@b+1
  4851  0010FC  C0A2  F02F         	movff	sinf@x+2,___fladd@b+2
  4852  001100  C0A3  F030         	movff	sinf@x+3,___fladd@b+3
  4853  001104  0EDB               	movlw	219
  4854  001106  6E31               	movwf	___fladd@a,c
  4855  001108  0E0F               	movlw	15
  4856  00110A  6E32               	movwf	___fladd@a+1,c
  4857  00110C  0EC9               	movlw	201
  4858  00110E  6E33               	movwf	___fladd@a+2,c
  4859  001110  0EBF               	movlw	191
  4860  001112  6E34               	movwf	___fladd@a+3,c
  4861  001114  ECAD  F00F         	call	___fladd	;wreg free
  4862  001118  C02D  F132         	movff	?___fladd,_sinf$1804
  4863  00111C  C02E  F133         	movff	?___fladd+1,_sinf$1804+1
  4864  001120  C02F  F134         	movff	?___fladd+2,_sinf$1804+2
  4865  001124  C030  F135         	movff	?___fladd+3,_sinf$1804+3
  4866  001128  C132  F03D         	movff	_sinf$1804,___cosdf@x
  4867  00112C  C133  F03E         	movff	_sinf$1804+1,___cosdf@x+1
  4868  001130  C134  F03F         	movff	_sinf$1804+2,___cosdf@x+2
  4869  001134  C135  F040         	movff	_sinf$1804+3,___cosdf@x+3
  4870  001138  EC4C  F012         	call	___cosdf	;wreg free
  4871  00113C  C03D  F0A0         	movff	?___cosdf,?_sinf
  4872  001140  C03E  F0A1         	movff	?___cosdf+1,?_sinf+1
  4873  001144  C03F  F0A2         	movff	?___cosdf+2,?_sinf+2
  4874  001148  C040  F0A3         	movff	?___cosdf+3,?_sinf+3
  4875  00114C  0012               	return	
  4876  00114E                     l4839:
  4877                           
  4878                           ; BSR set to: 1
  4879  00114E  5130               	movf	sinf@sign& (0+255),w,b
  4880  001150  1131               	iorwf	(sinf@sign+1)& (0+255),w,b
  4881  001152  A4D8               	btfss	status,2,c
  4882  001154  D01D               	goto	l4843
  4883                           
  4884                           ; BSR set to: 1
  4885  001156  0EDB               	movlw	219
  4886  001158  6E31               	movwf	___fladd@a,c
  4887  00115A  0E0F               	movlw	15
  4888  00115C  6E32               	movwf	___fladd@a+1,c
  4889  00115E  0E49               	movlw	73
  4890  001160  6E33               	movwf	___fladd@a+2,c
  4891  001162  0EC0               	movlw	192
  4892  001164  6E34               	movwf	___fladd@a+3,c
  4893  001166  C0A0  F02D         	movff	sinf@x,___fladd@b
  4894  00116A  C0A1  F02E         	movff	sinf@x+1,___fladd@b+1
  4895  00116E  C0A2  F02F         	movff	sinf@x+2,___fladd@b+2
  4896  001172  C0A3  F030         	movff	sinf@x+3,___fladd@b+3
  4897  001176  ECAD  F00F         	call	___fladd	;wreg free
  4898  00117A  C02D  F078         	movff	?___fladd,___flneg@f1
  4899  00117E  C02E  F079         	movff	?___fladd+1,___flneg@f1+1
  4900  001182  C02F  F07A         	movff	?___fladd+2,___flneg@f1+2
  4901  001186  C030  F07B         	movff	?___fladd+3,___flneg@f1+3
  4902  00118A  EC8F  F01A         	call	___flneg	;wreg free
  4903  00118E  D01C               	goto	L5
  4904  001190                     l4843:
  4905                           
  4906                           ; BSR set to: 1
  4907  001190  0EDB               	movlw	219
  4908  001192  6E31               	movwf	___fladd@a,c
  4909  001194  0E0F               	movlw	15
  4910  001196  6E32               	movwf	___fladd@a+1,c
  4911  001198  0E49               	movlw	73
  4912  00119A  6E33               	movwf	___fladd@a+2,c
  4913  00119C  0E40               	movlw	64
  4914  00119E  6E34               	movwf	___fladd@a+3,c
  4915  0011A0  C0A0  F02D         	movff	sinf@x,___fladd@b
  4916  0011A4  C0A1  F02E         	movff	sinf@x+1,___fladd@b+1
  4917  0011A8  C0A2  F02F         	movff	sinf@x+2,___fladd@b+2
  4918  0011AC  C0A3  F030         	movff	sinf@x+3,___fladd@b+3
  4919  0011B0  ECAD  F00F         	call	___fladd	;wreg free
  4920  0011B4  C02D  F078         	movff	?___fladd,___flneg@f1
  4921  0011B8  C02E  F079         	movff	?___fladd+1,___flneg@f1+1
  4922  0011BC  C02F  F07A         	movff	?___fladd+2,___flneg@f1+2
  4923  0011C0  C030  F07B         	movff	?___fladd+3,___flneg@f1+3
  4924  0011C4  EC8F  F01A         	call	___flneg	;wreg free
  4925  0011C8                     L5:
  4926  0011C8  C078  F128         	movff	?___flneg,_sinf$1528
  4927  0011CC  C079  F129         	movff	?___flneg+1,_sinf$1528+1
  4928  0011D0  C07A  F12A         	movff	?___flneg+2,_sinf$1528+2
  4929  0011D4  C07B  F12B         	movff	?___flneg+3,_sinf$1528+3
  4930  0011D8  C128  F07C         	movff	_sinf$1528,___sindf@x
  4931  0011DC  C129  F07D         	movff	_sinf$1528+1,___sindf@x+1
  4932  0011E0  C12A  F07E         	movff	_sinf$1528+2,___sindf@x+2
  4933  0011E4  C12B  F07F         	movff	_sinf$1528+3,___sindf@x+3
  4934  0011E8  EC33  F011         	call	___sindf	;wreg free
  4935  0011EC  C07C  F0A0         	movff	?___sindf,?_sinf
  4936  0011F0  C07D  F0A1         	movff	?___sindf+1,?_sinf+1
  4937  0011F4  C07E  F0A2         	movff	?___sindf+2,?_sinf+2
  4938  0011F8  C07F  F0A3         	movff	?___sindf+3,?_sinf+3
  4939  0011FC  0012               	return	
  4940  0011FE                     l4849:
  4941                           
  4942                           ; BSR set to: 1
  4943  0011FE  0ED6               	movlw	214
  4944  001200  5D3A               	subwf	sinf@ix& (0+255),w,b
  4945  001202  0E31               	movlw	49
  4946  001204  593B               	subwfb	(sinf@ix+1)& (0+255),w,b
  4947  001206  0EE2               	movlw	226
  4948  001208  593C               	subwfb	(sinf@ix+2)& (0+255),w,b
  4949  00120A  0E40               	movlw	64
  4950  00120C  593D               	subwfb	(sinf@ix+3)& (0+255),w,b
  4951  00120E  B0D8               	btfsc	status,0,c
  4952  001210  D078               	goto	l4879
  4953                           
  4954                           ; BSR set to: 1
  4955  001212  0EE0               	movlw	224
  4956  001214  5D3A               	subwf	sinf@ix& (0+255),w,b
  4957  001216  0EED               	movlw	237
  4958  001218  593B               	subwfb	(sinf@ix+1)& (0+255),w,b
  4959  00121A  0EAF               	movlw	175
  4960  00121C  593C               	subwfb	(sinf@ix+2)& (0+255),w,b
  4961  00121E  0E40               	movlw	64
  4962  001220  593D               	subwfb	(sinf@ix+3)& (0+255),w,b
  4963  001222  B0D8               	btfsc	status,0,c
  4964  001224  D02A               	goto	l4869
  4965                           
  4966                           ; BSR set to: 1
  4967  001226  5130               	movf	sinf@sign& (0+255),w,b
  4968  001228  1131               	iorwf	(sinf@sign+1)& (0+255),w,b
  4969  00122A  B4D8               	btfsc	status,2,c
  4970  00122C  D013               	goto	l4863
  4971                           
  4972                           ; BSR set to: 1
  4973  00122E  C0A0  F02D         	movff	sinf@x,___fladd@b
  4974  001232  C0A1  F02E         	movff	sinf@x+1,___fladd@b+1
  4975  001236  C0A2  F02F         	movff	sinf@x+2,___fladd@b+2
  4976  00123A  C0A3  F030         	movff	sinf@x+3,___fladd@b+3
  4977  00123E  0EE4               	movlw	228
  4978  001240  6E31               	movwf	___fladd@a,c
  4979  001242  0ECB               	movlw	203
  4980  001244  6E32               	movwf	___fladd@a+1,c
  4981  001246  0E96               	movlw	150
  4982  001248  6E33               	movwf	___fladd@a+2,c
  4983  00124A  0E40               	movlw	64
  4984  00124C  6E34               	movwf	___fladd@a+3,c
  4985  00124E  ECAD  F00F         	call	___fladd	;wreg free
  4986  001252  D762               	goto	L6
  4987  001254                     l4863:
  4988                           
  4989                           ; BSR set to: 1
  4990  001254  0EE4               	movlw	228
  4991  001256  6E31               	movwf	___fladd@a,c
  4992  001258  0ECB               	movlw	203
  4993  00125A  6E32               	movwf	___fladd@a+1,c
  4994  00125C  0E96               	movlw	150
  4995  00125E  6E33               	movwf	___fladd@a+2,c
  4996  001260  0EC0               	movlw	192
  4997  001262  6E34               	movwf	___fladd@a+3,c
  4998  001264  C0A0  F02D         	movff	sinf@x,___fladd@b
  4999  001268  C0A1  F02E         	movff	sinf@x+1,___fladd@b+1
  5000  00126C  C0A2  F02F         	movff	sinf@x+2,___fladd@b+2
  5001  001270  C0A3  F030         	movff	sinf@x+3,___fladd@b+3
  5002  001274  ECAD  F00F         	call	___fladd	;wreg free
  5003  001278  D718               	goto	L7
  5004  00127A                     l4869:
  5005                           
  5006                           ; BSR set to: 1
  5007  00127A  5130               	movf	sinf@sign& (0+255),w,b
  5008  00127C  1131               	iorwf	(sinf@sign+1)& (0+255),w,b
  5009  00127E  A4D8               	btfss	status,2,c
  5010  001280  D013               	goto	l4873
  5011                           
  5012                           ; BSR set to: 1
  5013  001282  C0A0  F02D         	movff	sinf@x,___fladd@b
  5014  001286  C0A1  F02E         	movff	sinf@x+1,___fladd@b+1
  5015  00128A  C0A2  F02F         	movff	sinf@x+2,___fladd@b+2
  5016  00128E  C0A3  F030         	movff	sinf@x+3,___fladd@b+3
  5017  001292  0EDB               	movlw	219
  5018  001294  6E31               	movwf	___fladd@a,c
  5019  001296  0E0F               	movlw	15
  5020  001298  6E32               	movwf	___fladd@a+1,c
  5021  00129A  0EC9               	movlw	201
  5022  00129C  6E33               	movwf	___fladd@a+2,c
  5023  00129E  0EC0               	movlw	192
  5024  0012A0  6E34               	movwf	___fladd@a+3,c
  5025  0012A2  ECAD  F00F         	call	___fladd	;wreg free
  5026  0012A6  D012               	goto	L8
  5027  0012A8                     l4873:
  5028                           
  5029                           ; BSR set to: 1
  5030  0012A8  C0A0  F02D         	movff	sinf@x,___fladd@b
  5031  0012AC  C0A1  F02E         	movff	sinf@x+1,___fladd@b+1
  5032  0012B0  C0A2  F02F         	movff	sinf@x+2,___fladd@b+2
  5033  0012B4  C0A3  F030         	movff	sinf@x+3,___fladd@b+3
  5034  0012B8  0EDB               	movlw	219
  5035  0012BA  6E31               	movwf	___fladd@a,c
  5036  0012BC  0E0F               	movlw	15
  5037  0012BE  6E32               	movwf	___fladd@a+1,c
  5038  0012C0  0EC9               	movlw	201
  5039  0012C2  6E33               	movwf	___fladd@a+2,c
  5040  0012C4  0E40               	movlw	64
  5041  0012C6  6E34               	movwf	___fladd@a+3,c
  5042  0012C8  ECAD  F00F         	call	___fladd	;wreg free
  5043  0012CC                     L8:
  5044  0012CC  C02D  F12C         	movff	?___fladd,_sinf$1529
  5045  0012D0  C02E  F12D         	movff	?___fladd+1,_sinf$1529+1
  5046  0012D4  C02F  F12E         	movff	?___fladd+2,_sinf$1529+2
  5047  0012D8  C030  F12F         	movff	?___fladd+3,_sinf$1529+3
  5048  0012DC  C12C  F07C         	movff	_sinf$1529,___sindf@x
  5049  0012E0  C12D  F07D         	movff	_sinf$1529+1,___sindf@x+1
  5050  0012E4  C12E  F07E         	movff	_sinf$1529+2,___sindf@x+2
  5051  0012E8  C12F  F07F         	movff	_sinf$1529+3,___sindf@x+3
  5052  0012EC  EC33  F011         	call	___sindf	;wreg free
  5053  0012F0  C07C  F0A0         	movff	?___sindf,?_sinf
  5054  0012F4  C07D  F0A1         	movff	?___sindf+1,?_sinf+1
  5055  0012F8  C07E  F0A2         	movff	?___sindf+2,?_sinf+2
  5056  0012FC  C07F  F0A3         	movff	?___sindf+3,?_sinf+3
  5057  001300  0012               	return	
  5058  001302                     l4879:
  5059                           
  5060                           ; BSR set to: 1
  5061  001302  0E80               	movlw	128
  5062  001304  5D3C               	subwf	(sinf@ix+2)& (0+255),w,b
  5063  001306  0E7F               	movlw	127
  5064  001308  593D               	subwfb	(sinf@ix+3)& (0+255),w,b
  5065  00130A  A0D8               	btfss	status,0,c
  5066  00130C  D01B               	goto	l4885
  5067                           
  5068                           ; BSR set to: 1
  5069  00130E  C0A0  F03D         	movff	sinf@x,___flsub@b
  5070  001312  C0A1  F03E         	movff	sinf@x+1,___flsub@b+1
  5071  001316  C0A2  F03F         	movff	sinf@x+2,___flsub@b+2
  5072  00131A  C0A3  F040         	movff	sinf@x+3,___flsub@b+3
  5073  00131E  C0A0  F041         	movff	sinf@x,___flsub@a
  5074  001322  C0A1  F042         	movff	sinf@x+1,___flsub@a+1
  5075  001326  C0A2  F043         	movff	sinf@x+2,___flsub@a+2
  5076  00132A  C0A3  F044         	movff	sinf@x+3,___flsub@a+3
  5077  00132E  ECE5  F019         	call	___flsub	;wreg free
  5078  001332  C03D  F0A0         	movff	?___flsub,?_sinf
  5079  001336  C03E  F0A1         	movff	?___flsub+1,?_sinf+1
  5080  00133A  C03F  F0A2         	movff	?___flsub+2,?_sinf+2
  5081  00133E  C040  F0A3         	movff	?___flsub+3,?_sinf+3
  5082  001342  0012               	return	
  5083  001344                     l4885:
  5084                           
  5085                           ; BSR set to: 1
  5086  001344  C0A0  F07C         	movff	sinf@x,___rem_pio2f@x
  5087  001348  C0A1  F07D         	movff	sinf@x+1,___rem_pio2f@x+1
  5088  00134C  C0A2  F07E         	movff	sinf@x+2,___rem_pio2f@x+2
  5089  001350  C0A3  F07F         	movff	sinf@x+3,___rem_pio2f@x+3
  5090  001354  0E36               	movlw	low sinf@y
  5091  001356  0100               	movlb	0	; () banked
  5092  001358  6F80               	movwf	___rem_pio2f@y& (0+255),b
  5093  00135A  0E01               	movlw	high sinf@y
  5094  00135C  6F81               	movwf	(___rem_pio2f@y+1)& (0+255),b
  5095  00135E  EC42  F00A         	call	___rem_pio2f	;wreg free
  5096  001362  0100               	movlb	0	; () banked
  5097  001364  C07C  F120         	movff	?___rem_pio2f,sinf@n
  5098  001368  C07D  F121         	movff	?___rem_pio2f+1,sinf@n+1
  5099  00136C  0101               	movlb	1	; () banked
  5100  00136E  0E00               	movlw	0
  5101  001370  BF21               	btfsc	(sinf@n+1)& (0+255),7,b
  5102  001372  0EFF               	movlw	-1
  5103  001374  6F22               	movwf	(sinf@n+2)& (0+255),b
  5104  001376  6F23               	movwf	(sinf@n+3)& (0+255),b
  5105  001378  D060               	goto	l4905
  5106  00137A                     l4887:
  5107                           
  5108                           ; BSR set to: 1
  5109  00137A  C136  F07C         	movff	sinf@y,___sindf@x
  5110  00137E  C137  F07D         	movff	sinf@y+1,___sindf@x+1
  5111  001382  C138  F07E         	movff	sinf@y+2,___sindf@x+2
  5112  001386  C139  F07F         	movff	sinf@y+3,___sindf@x+3
  5113  00138A  EC33  F011         	call	___sindf	;wreg free
  5114  00138E  C07C  F0A0         	movff	?___sindf,?_sinf
  5115  001392  C07D  F0A1         	movff	?___sindf+1,?_sinf+1
  5116  001396  C07E  F0A2         	movff	?___sindf+2,?_sinf+2
  5117  00139A  C07F  F0A3         	movff	?___sindf+3,?_sinf+3
  5118  00139E  0012               	return	
  5119  0013A0                     l4891:
  5120                           
  5121                           ; BSR set to: 1
  5122  0013A0  C136  F03D         	movff	sinf@y,___cosdf@x
  5123  0013A4  C137  F03E         	movff	sinf@y+1,___cosdf@x+1
  5124  0013A8  C138  F03F         	movff	sinf@y+2,___cosdf@x+2
  5125  0013AC  C139  F040         	movff	sinf@y+3,___cosdf@x+3
  5126  0013B0  EC4C  F012         	call	___cosdf	;wreg free
  5127  0013B4  C03D  F0A0         	movff	?___cosdf,?_sinf
  5128  0013B8  C03E  F0A1         	movff	?___cosdf+1,?_sinf+1
  5129  0013BC  C03F  F0A2         	movff	?___cosdf+2,?_sinf+2
  5130  0013C0  C040  F0A3         	movff	?___cosdf+3,?_sinf+3
  5131  0013C4  0012               	return	
  5132  0013C6                     l4895:
  5133                           
  5134                           ; BSR set to: 1
  5135  0013C6  C136  F078         	movff	sinf@y,___flneg@f1
  5136  0013CA  C137  F079         	movff	sinf@y+1,___flneg@f1+1
  5137  0013CE  C138  F07A         	movff	sinf@y+2,___flneg@f1+2
  5138  0013D2  C139  F07B         	movff	sinf@y+3,___flneg@f1+3
  5139  0013D6  EC8F  F01A         	call	___flneg	;wreg free
  5140  0013DA  C078  F07C         	movff	?___flneg,___sindf@x
  5141  0013DE  C079  F07D         	movff	?___flneg+1,___sindf@x+1
  5142  0013E2  C07A  F07E         	movff	?___flneg+2,___sindf@x+2
  5143  0013E6  C07B  F07F         	movff	?___flneg+3,___sindf@x+3
  5144  0013EA  EC33  F011         	call	___sindf	;wreg free
  5145  0013EE  C07C  F0A0         	movff	?___sindf,?_sinf
  5146  0013F2  C07D  F0A1         	movff	?___sindf+1,?_sinf+1
  5147  0013F6  C07E  F0A2         	movff	?___sindf+2,?_sinf+2
  5148  0013FA  C07F  F0A3         	movff	?___sindf+3,?_sinf+3
  5149  0013FE  0012               	return	
  5150  001400                     l4899:
  5151                           
  5152                           ; BSR set to: 1
  5153  001400  C136  F03D         	movff	sinf@y,___cosdf@x
  5154  001404  C137  F03E         	movff	sinf@y+1,___cosdf@x+1
  5155  001408  C138  F03F         	movff	sinf@y+2,___cosdf@x+2
  5156  00140C  C139  F040         	movff	sinf@y+3,___cosdf@x+3
  5157  001410  EC4C  F012         	call	___cosdf	;wreg free
  5158  001414  C03D  F078         	movff	?___cosdf,___flneg@f1
  5159  001418  C03E  F079         	movff	?___cosdf+1,___flneg@f1+1
  5160  00141C  C03F  F07A         	movff	?___cosdf+2,___flneg@f1+2
  5161  001420  C040  F07B         	movff	?___cosdf+3,___flneg@f1+3
  5162  001424  EC8F  F01A         	call	___flneg	;wreg free
  5163  001428  C078  F0A0         	movff	?___flneg,?_sinf
  5164  00142C  C079  F0A1         	movff	?___flneg+1,?_sinf+1
  5165  001430  C07A  F0A2         	movff	?___flneg+2,?_sinf+2
  5166  001434  C07B  F0A3         	movff	?___flneg+3,?_sinf+3
  5167  001438  0012               	return	
  5168  00143A                     l4905:
  5169                           
  5170                           ; BSR set to: 1
  5171  00143A  0E03               	movlw	3
  5172  00143C  1520               	andwf	sinf@n& (0+255),w,b
  5173  00143E  6E4B               	movwf	??_sinf& (0+255),c
  5174  001440  0E00               	movlw	0
  5175  001442  1521               	andwf	(sinf@n+1)& (0+255),w,b
  5176  001444  6E4C               	movwf	(??_sinf+1)& (0+255),c
  5177  001446  0E00               	movlw	0
  5178  001448  1522               	andwf	(sinf@n+2)& (0+255),w,b
  5179  00144A  6E4D               	movwf	(??_sinf+2)& (0+255),c
  5180  00144C  0E00               	movlw	0
  5181  00144E  1523               	andwf	(sinf@n+3)& (0+255),w,b
  5182  001450  6E4E               	movwf	(??_sinf+3)& (0+255),c
  5183                           
  5184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5185                           ; Switch size 1, requested type "simple"
  5186                           ; Number of cases is 1, Range of values is 0 to 0
  5187                           ; switch strategies available:
  5188                           ; Name         Instructions Cycles
  5189                           ; simple_byte            4     3 (average)
  5190                           ;	Chosen strategy is simple_byte
  5191  001452  504E               	movf	??_sinf+3,w,c
  5192  001454  0A00               	xorlw	0	; case 0
  5193  001456  B4D8               	btfsc	status,2,c
  5194  001458  D010               	goto	l5267
  5195  00145A  D7D2               	goto	l4899
  5196  00145C                     l5265:
  5197                           
  5198                           ; BSR set to: 1
  5199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5200                           ; Switch size 1, requested type "simple"
  5201                           ; Number of cases is 1, Range of values is 0 to 0
  5202                           ; switch strategies available:
  5203                           ; Name         Instructions Cycles
  5204                           ; simple_byte            4     3 (average)
  5205                           ;	Chosen strategy is simple_byte
  5206  00145C  504C               	movf	??_sinf+1,w,c
  5207  00145E  0A00               	xorlw	0	; case 0
  5208  001460  A4D8               	btfss	status,2,c
  5209  001462  D7CE               	goto	l4899
  5210                           
  5211                           ; BSR set to: 1
  5212                           ; Switch size 1, requested type "simple"
  5213                           ; Number of cases is 3, Range of values is 0 to 2
  5214                           ; switch strategies available:
  5215                           ; Name         Instructions Cycles
  5216                           ; simple_byte           10     6 (average)
  5217                           ;	Chosen strategy is simple_byte
  5218  001464  504B               	movf	??_sinf,w,c
  5219  001466  0A00               	xorlw	0	; case 0
  5220  001468  B4D8               	btfsc	status,2,c
  5221  00146A  D787               	goto	l4887
  5222  00146C  0A01               	xorlw	1	; case 1
  5223  00146E  B4D8               	btfsc	status,2,c
  5224  001470  D797               	goto	l4891
  5225  001472  0A03               	xorlw	3	; case 2
  5226  001474  B4D8               	btfsc	status,2,c
  5227  001476  D7A7               	goto	l4895
  5228  001478  D7C3               	goto	l4899
  5229  00147A                     l5267:
  5230                           
  5231                           ; BSR set to: 1
  5232                           ; Switch size 1, requested type "simple"
  5233                           ; Number of cases is 1, Range of values is 0 to 0
  5234                           ; switch strategies available:
  5235                           ; Name         Instructions Cycles
  5236                           ; simple_byte            4     3 (average)
  5237                           ;	Chosen strategy is simple_byte
  5238  00147A  504D               	movf	??_sinf+2,w,c
  5239  00147C  0A00               	xorlw	0	; case 0
  5240  00147E  B4D8               	btfsc	status,2,c
  5241  001480  D7ED               	goto	l5265
  5242  001482  D7BE               	goto	l4899
  5243  001484                     __end_of_sinf:
  5244                           	opt callstack 0
  5245                           
  5246 ;; *************** function ___sindf *****************
  5247 ;; Defined at:
  5248 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__sindf.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  x               4   28[BANK0 ] float 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  z               4   56[BANK0 ] float 
  5253 ;;  s               4   52[BANK0 ] float 
  5254 ;;  w               4   36[BANK0 ] float 
  5255 ;;  r               4   32[BANK0 ] float 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  4   28[BANK0 ] float 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5265 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5266 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5268 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5269 ;;Total ram usage:       32 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    2
  5272 ;; This function calls:
  5273 ;;		___fladd
  5274 ;;		___flmul
  5275 ;; This function is called by:
  5276 ;;		_sinf
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text29
  5281  002266                     __ptext29:
  5282                           	opt callstack 0
  5283  002266                     ___sindf:
  5284                           	opt callstack 27
  5285                           
  5286                           ;incstack = 0
  5287  002266  C07C  F014         	movff	___sindf@x,___flmul@b
  5288  00226A  C07D  F015         	movff	___sindf@x+1,___flmul@b+1
  5289  00226E  C07E  F016         	movff	___sindf@x+2,___flmul@b+2
  5290  002272  C07F  F017         	movff	___sindf@x+3,___flmul@b+3
  5291  002276  C07C  F018         	movff	___sindf@x,___flmul@a
  5292  00227A  C07D  F019         	movff	___sindf@x+1,___flmul@a+1
  5293  00227E  C07E  F01A         	movff	___sindf@x+2,___flmul@a+2
  5294  002282  C07F  F01B         	movff	___sindf@x+3,___flmul@a+3
  5295  002286  EC61  F00C         	call	___flmul	;wreg free
  5296  00228A  C014  F098         	movff	?___flmul,___sindf@z
  5297  00228E  C015  F099         	movff	?___flmul+1,___sindf@z+1
  5298  002292  C016  F09A         	movff	?___flmul+2,___sindf@z+2
  5299  002296  C017  F09B         	movff	?___flmul+3,___sindf@z+3
  5300  00229A  C098  F014         	movff	___sindf@z,___flmul@b
  5301  00229E  C099  F015         	movff	___sindf@z+1,___flmul@b+1
  5302  0022A2  C09A  F016         	movff	___sindf@z+2,___flmul@b+2
  5303  0022A6  C09B  F017         	movff	___sindf@z+3,___flmul@b+3
  5304  0022AA  C098  F018         	movff	___sindf@z,___flmul@a
  5305  0022AE  C099  F019         	movff	___sindf@z+1,___flmul@a+1
  5306  0022B2  C09A  F01A         	movff	___sindf@z+2,___flmul@a+2
  5307  0022B6  C09B  F01B         	movff	___sindf@z+3,___flmul@a+3
  5308  0022BA  EC61  F00C         	call	___flmul	;wreg free
  5309  0022BE  C014  F084         	movff	?___flmul,___sindf@w
  5310  0022C2  C015  F085         	movff	?___flmul+1,___sindf@w+1
  5311  0022C6  C016  F086         	movff	?___flmul+2,___sindf@w+2
  5312  0022CA  C017  F087         	movff	?___flmul+3,___sindf@w+3
  5313  0022CE  0E3C               	movlw	60
  5314  0022D0  6E18               	movwf	___flmul@a,c
  5315  0022D2  0E6C               	movlw	108
  5316  0022D4  6E19               	movwf	___flmul@a+1,c
  5317  0022D6  0E36               	movlw	54
  5318  0022D8  6E1A               	movwf	___flmul@a+2,c
  5319  0022DA  0E36               	movlw	54
  5320  0022DC  6E1B               	movwf	___flmul@a+3,c
  5321  0022DE  C098  F014         	movff	___sindf@z,___flmul@b
  5322  0022E2  C099  F015         	movff	___sindf@z+1,___flmul@b+1
  5323  0022E6  C09A  F016         	movff	___sindf@z+2,___flmul@b+2
  5324  0022EA  C09B  F017         	movff	___sindf@z+3,___flmul@b+3
  5325  0022EE  EC61  F00C         	call	___flmul	;wreg free
  5326  0022F2  C014  F02D         	movff	?___flmul,___fladd@b
  5327  0022F6  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  5328  0022FA  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  5329  0022FE  C017  F030         	movff	?___flmul+3,___fladd@b+3
  5330  002302  0ECF               	movlw	207
  5331  002304  6E31               	movwf	___fladd@a,c
  5332  002306  0E07               	movlw	7
  5333  002308  6E32               	movwf	___fladd@a+1,c
  5334  00230A  0E50               	movlw	80
  5335  00230C  6E33               	movwf	___fladd@a+2,c
  5336  00230E  0EB9               	movlw	185
  5337  002310  6E34               	movwf	___fladd@a+3,c
  5338  002312  ECAD  F00F         	call	___fladd	;wreg free
  5339  002316  C02D  F080         	movff	?___fladd,___sindf@r
  5340  00231A  C02E  F081         	movff	?___fladd+1,___sindf@r+1
  5341  00231E  C02F  F082         	movff	?___fladd+2,___sindf@r+2
  5342  002322  C030  F083         	movff	?___fladd+3,___sindf@r+3
  5343  002326  C098  F014         	movff	___sindf@z,___flmul@b
  5344  00232A  C099  F015         	movff	___sindf@z+1,___flmul@b+1
  5345  00232E  C09A  F016         	movff	___sindf@z+2,___flmul@b+2
  5346  002332  C09B  F017         	movff	___sindf@z+3,___flmul@b+3
  5347  002336  C07C  F018         	movff	___sindf@x,___flmul@a
  5348  00233A  C07D  F019         	movff	___sindf@x+1,___flmul@a+1
  5349  00233E  C07E  F01A         	movff	___sindf@x+2,___flmul@a+2
  5350  002342  C07F  F01B         	movff	___sindf@x+3,___flmul@a+3
  5351  002346  EC61  F00C         	call	___flmul	;wreg free
  5352  00234A  C014  F094         	movff	?___flmul,___sindf@s
  5353  00234E  C015  F095         	movff	?___flmul+1,___sindf@s+1
  5354  002352  C016  F096         	movff	?___flmul+2,___sindf@s+2
  5355  002356  C017  F097         	movff	?___flmul+3,___sindf@s+3
  5356  00235A  0EAB               	movlw	171
  5357  00235C  6E31               	movwf	___fladd@a,c
  5358  00235E  0EAA               	movlw	170
  5359  002360  6E32               	movwf	___fladd@a+1,c
  5360  002362  0E2A               	movlw	42
  5361  002364  6E33               	movwf	___fladd@a+2,c
  5362  002366  0EBE               	movlw	190
  5363  002368  6E34               	movwf	___fladd@a+3,c
  5364  00236A  0E84               	movlw	132
  5365  00236C  6E18               	movwf	___flmul@a,c
  5366  00236E  0E88               	movlw	136
  5367  002370  6E19               	movwf	___flmul@a+1,c
  5368  002372  0E08               	movlw	8
  5369  002374  6E1A               	movwf	___flmul@a+2,c
  5370  002376  0E3C               	movlw	60
  5371  002378  6E1B               	movwf	___flmul@a+3,c
  5372  00237A  C098  F014         	movff	___sindf@z,___flmul@b
  5373  00237E  C099  F015         	movff	___sindf@z+1,___flmul@b+1
  5374  002382  C09A  F016         	movff	___sindf@z+2,___flmul@b+2
  5375  002386  C09B  F017         	movff	___sindf@z+3,___flmul@b+3
  5376  00238A  EC61  F00C         	call	___flmul	;wreg free
  5377  00238E  C014  F02D         	movff	?___flmul,___fladd@b
  5378  002392  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  5379  002396  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  5380  00239A  C017  F030         	movff	?___flmul+3,___fladd@b+3
  5381  00239E  ECAD  F00F         	call	___fladd	;wreg free
  5382  0023A2  C02D  F088         	movff	?___fladd,___sindf$1809
  5383  0023A6  C02E  F089         	movff	?___fladd+1,___sindf$1809+1
  5384  0023AA  C02F  F08A         	movff	?___fladd+2,___sindf$1809+2
  5385  0023AE  C030  F08B         	movff	?___fladd+3,___sindf$1809+3
  5386  0023B2  C084  F018         	movff	___sindf@w,___flmul@a
  5387  0023B6  C085  F019         	movff	___sindf@w+1,___flmul@a+1
  5388  0023BA  C086  F01A         	movff	___sindf@w+2,___flmul@a+2
  5389  0023BE  C087  F01B         	movff	___sindf@w+3,___flmul@a+3
  5390  0023C2  C094  F014         	movff	___sindf@s,___flmul@b
  5391  0023C6  C095  F015         	movff	___sindf@s+1,___flmul@b+1
  5392  0023CA  C096  F016         	movff	___sindf@s+2,___flmul@b+2
  5393  0023CE  C097  F017         	movff	___sindf@s+3,___flmul@b+3
  5394  0023D2  EC61  F00C         	call	___flmul	;wreg free
  5395  0023D6  C014  F08C         	movff	?___flmul,___sindf$1810
  5396  0023DA  C015  F08D         	movff	?___flmul+1,___sindf$1810+1
  5397  0023DE  C016  F08E         	movff	?___flmul+2,___sindf$1810+2
  5398  0023E2  C017  F08F         	movff	?___flmul+3,___sindf$1810+3
  5399  0023E6  C07C  F031         	movff	___sindf@x,___fladd@a
  5400  0023EA  C07D  F032         	movff	___sindf@x+1,___fladd@a+1
  5401  0023EE  C07E  F033         	movff	___sindf@x+2,___fladd@a+2
  5402  0023F2  C07F  F034         	movff	___sindf@x+3,___fladd@a+3
  5403  0023F6  C094  F018         	movff	___sindf@s,___flmul@a
  5404  0023FA  C095  F019         	movff	___sindf@s+1,___flmul@a+1
  5405  0023FE  C096  F01A         	movff	___sindf@s+2,___flmul@a+2
  5406  002402  C097  F01B         	movff	___sindf@s+3,___flmul@a+3
  5407  002406  C088  F014         	movff	___sindf$1809,___flmul@b
  5408  00240A  C089  F015         	movff	___sindf$1809+1,___flmul@b+1
  5409  00240E  C08A  F016         	movff	___sindf$1809+2,___flmul@b+2
  5410  002412  C08B  F017         	movff	___sindf$1809+3,___flmul@b+3
  5411  002416  EC61  F00C         	call	___flmul	;wreg free
  5412  00241A  C014  F02D         	movff	?___flmul,___fladd@b
  5413  00241E  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  5414  002422  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  5415  002426  C017  F030         	movff	?___flmul+3,___fladd@b+3
  5416  00242A  ECAD  F00F         	call	___fladd	;wreg free
  5417  00242E  C02D  F090         	movff	?___fladd,___sindf$1811
  5418  002432  C02E  F091         	movff	?___fladd+1,___sindf$1811+1
  5419  002436  C02F  F092         	movff	?___fladd+2,___sindf$1811+2
  5420  00243A  C030  F093         	movff	?___fladd+3,___sindf$1811+3
  5421  00243E  C090  F02D         	movff	___sindf$1811,___fladd@b
  5422  002442  C091  F02E         	movff	___sindf$1811+1,___fladd@b+1
  5423  002446  C092  F02F         	movff	___sindf$1811+2,___fladd@b+2
  5424  00244A  C093  F030         	movff	___sindf$1811+3,___fladd@b+3
  5425  00244E  C080  F018         	movff	___sindf@r,___flmul@a
  5426  002452  C081  F019         	movff	___sindf@r+1,___flmul@a+1
  5427  002456  C082  F01A         	movff	___sindf@r+2,___flmul@a+2
  5428  00245A  C083  F01B         	movff	___sindf@r+3,___flmul@a+3
  5429  00245E  C08C  F014         	movff	___sindf$1810,___flmul@b
  5430  002462  C08D  F015         	movff	___sindf$1810+1,___flmul@b+1
  5431  002466  C08E  F016         	movff	___sindf$1810+2,___flmul@b+2
  5432  00246A  C08F  F017         	movff	___sindf$1810+3,___flmul@b+3
  5433  00246E  EC61  F00C         	call	___flmul	;wreg free
  5434  002472  C014  F031         	movff	?___flmul,___fladd@a
  5435  002476  C015  F032         	movff	?___flmul+1,___fladd@a+1
  5436  00247A  C016  F033         	movff	?___flmul+2,___fladd@a+2
  5437  00247E  C017  F034         	movff	?___flmul+3,___fladd@a+3
  5438  002482  ECAD  F00F         	call	___fladd	;wreg free
  5439  002486  C02D  F07C         	movff	?___fladd,?___sindf
  5440  00248A  C02E  F07D         	movff	?___fladd+1,?___sindf+1
  5441  00248E  C02F  F07E         	movff	?___fladd+2,?___sindf+2
  5442  002492  C030  F07F         	movff	?___fladd+3,?___sindf+3
  5443  002496  0012               	return		;funcret
  5444  002498                     __end_of___sindf:
  5445                           	opt callstack 0
  5446                           
  5447 ;; *************** function ___rem_pio2f *****************
  5448 ;; Defined at:
  5449 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__rem_pio2f.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;  x               4   28[BANK0 ] float 
  5452 ;;  y               2   32[BANK0 ] PTR 
  5453 ;;		 -> sinf@y(4), 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;  n               4   60[BANK0 ] long 
  5456 ;;  t               4   56[BANK0 ] float 
  5457 ;;  fn              4   52[BANK0 ] float 
  5458 ;;  u               4   44[BANK0 ] struct .
  5459 ;;  ix              4   38[BANK0 ] unsigned long 
  5460 ;;  ty              4   34[BANK0 ] [1]
  5461 ;;  tx              4    0        [1]
  5462 ;;  sign            2   42[BANK0 ] int 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  2   28[BANK0 ] int 
  5465 ;; Registers used:
  5466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5472 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5473 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5474 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5475 ;;      Totals:         4      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5476 ;;Total ram usage:       40 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    3
  5479 ;; This function calls:
  5480 ;;		___fladd
  5481 ;;		___flmul
  5482 ;;		___flneg
  5483 ;;		___flsub
  5484 ;;		___fltol
  5485 ;;		___xxtofl
  5486 ;;		_fabsf
  5487 ;; This function is called by:
  5488 ;;		_sinf
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text30
  5493  001484                     __ptext30:
  5494                           	opt callstack 0
  5495  001484                     ___rem_pio2f:
  5496                           	opt callstack 26
  5497                           
  5498                           ;incstack = 0
  5499  001484  C0C2  F08C         	movff	___rem_pio2f@F530,___rem_pio2f@u
  5500  001488  C0C3  F08D         	movff	___rem_pio2f@F530+1,___rem_pio2f@u+1
  5501  00148C  C0C4  F08E         	movff	___rem_pio2f@F530+2,___rem_pio2f@u+2
  5502  001490  C0C5  F08F         	movff	___rem_pio2f@F530+3,___rem_pio2f@u+3
  5503  001494  C07C  F08C         	movff	___rem_pio2f@x,___rem_pio2f@u
  5504  001498  C07D  F08D         	movff	___rem_pio2f@x+1,___rem_pio2f@u+1
  5505  00149C  C07E  F08E         	movff	___rem_pio2f@x+2,___rem_pio2f@u+2
  5506  0014A0  C07F  F08F         	movff	___rem_pio2f@x+3,___rem_pio2f@u+3
  5507  0014A4  C08C  F047         	movff	___rem_pio2f@u,??___rem_pio2f
  5508  0014A8  C08D  F048         	movff	___rem_pio2f@u+1,??___rem_pio2f+1
  5509  0014AC  C08E  F049         	movff	___rem_pio2f@u+2,??___rem_pio2f+2
  5510  0014B0  C08F  F04A         	movff	___rem_pio2f@u+3,??___rem_pio2f+3
  5511  0014B4  0E20               	movlw	32
  5512  0014B6  D005               	goto	u4550
  5513  0014B8                     u4555:
  5514  0014B8  90D8               	bcf	status,0,c
  5515  0014BA  324A               	rrcf	??___rem_pio2f+3,f,c
  5516  0014BC  3249               	rrcf	??___rem_pio2f+2,f,c
  5517  0014BE  3248               	rrcf	??___rem_pio2f+1,f,c
  5518  0014C0  3247               	rrcf	??___rem_pio2f,f,c
  5519  0014C2                     u4550:
  5520  0014C2  2EE8               	decfsz	wreg,f,c
  5521  0014C4  D7F9               	goto	u4555
  5522  0014C6  C047  F08A         	movff	??___rem_pio2f,___rem_pio2f@sign
  5523  0014CA  C048  F08B         	movff	??___rem_pio2f+1,___rem_pio2f@sign+1
  5524  0014CE  0EFF               	movlw	255
  5525  0014D0  0100               	movlb	0	; () banked
  5526  0014D2  158C               	andwf	___rem_pio2f@u& (0+255),w,b
  5527  0014D4  6F86               	movwf	___rem_pio2f@ix& (0+255),b
  5528  0014D6  0EFF               	movlw	255
  5529  0014D8  158D               	andwf	(___rem_pio2f@u+1)& (0+255),w,b
  5530  0014DA  6F87               	movwf	(___rem_pio2f@ix+1)& (0+255),b
  5531  0014DC  0EFF               	movlw	255
  5532  0014DE  158E               	andwf	(___rem_pio2f@u+2)& (0+255),w,b
  5533  0014E0  6F88               	movwf	(___rem_pio2f@ix+2)& (0+255),b
  5534  0014E2  0E7F               	movlw	127
  5535  0014E4  158F               	andwf	(___rem_pio2f@u+3)& (0+255),w,b
  5536  0014E6  6F89               	movwf	(___rem_pio2f@ix+3)& (0+255),b
  5537  0014E8  0E80               	movlw	128
  5538  0014EA  5D88               	subwf	(___rem_pio2f@ix+2)& (0+255),w,b
  5539  0014EC  0E7F               	movlw	127
  5540  0014EE  5989               	subwfb	(___rem_pio2f@ix+3)& (0+255),w,b
  5541  0014F0  A0D8               	btfss	status,0,c
  5542  0014F2  D024               	goto	l4761
  5543                           
  5544                           ; BSR set to: 0
  5545  0014F4  C07C  F03D         	movff	___rem_pio2f@x,___flsub@b
  5546  0014F8  C07D  F03E         	movff	___rem_pio2f@x+1,___flsub@b+1
  5547  0014FC  C07E  F03F         	movff	___rem_pio2f@x+2,___flsub@b+2
  5548  001500  C07F  F040         	movff	___rem_pio2f@x+3,___flsub@b+3
  5549  001504  C07C  F041         	movff	___rem_pio2f@x,___flsub@a
  5550  001508  C07D  F042         	movff	___rem_pio2f@x+1,___flsub@a+1
  5551  00150C  C07E  F043         	movff	___rem_pio2f@x+2,___flsub@a+2
  5552  001510  C07F  F044         	movff	___rem_pio2f@x+3,___flsub@a+3
  5553  001514  ECE5  F019         	call	___flsub	;wreg free
  5554  001518  C080  FFD9         	movff	___rem_pio2f@y,fsr2l
  5555  00151C  C081  FFDA         	movff	___rem_pio2f@y+1,fsr2h
  5556  001520  C03D  FFDE         	movff	?___flsub,postinc2
  5557  001524  C03E  FFDE         	movff	?___flsub+1,postinc2
  5558  001528  C03F  FFDE         	movff	?___flsub+2,postinc2
  5559  00152C  C040  FFDE         	movff	?___flsub+3,postinc2
  5560  001530  0E00               	movlw	0
  5561  001532  0100               	movlb	0	; () banked
  5562  001534  6F7D               	movwf	(?___rem_pio2f+1)& (0+255),b
  5563  001536  0E00               	movlw	0
  5564  001538  6F7C               	movwf	?___rem_pio2f& (0+255),b
  5565  00153A  0012               	return	
  5566  00153C                     l4761:
  5567                           
  5568                           ; BSR set to: 0
  5569  00153C  0EDB               	movlw	219
  5570  00153E  5D86               	subwf	___rem_pio2f@ix& (0+255),w,b
  5571  001540  0E0F               	movlw	15
  5572  001542  5987               	subwfb	(___rem_pio2f@ix+1)& (0+255),w,b
  5573  001544  0EC9               	movlw	201
  5574  001546  5988               	subwfb	(___rem_pio2f@ix+2)& (0+255),w,b
  5575  001548  0E4D               	movlw	77
  5576  00154A  5989               	subwfb	(___rem_pio2f@ix+3)& (0+255),w,b
  5577  00154C  B0D8               	btfsc	status,0,c
  5578  00154E  D0E9               	goto	l4781
  5579                           
  5580                           ; BSR set to: 0
  5581  001550  C07C  F006         	movff	___rem_pio2f@x,fabsf@x
  5582  001554  C07D  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  5583  001558  C07E  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  5584  00155C  C07F  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  5585  001560  EC5D  F01A         	call	_fabsf	;wreg free
  5586  001564  C006  F098         	movff	?_fabsf,___rem_pio2f@t
  5587  001568  C007  F099         	movff	?_fabsf+1,___rem_pio2f@t+1
  5588  00156C  C008  F09A         	movff	?_fabsf+2,___rem_pio2f@t+2
  5589  001570  C009  F09B         	movff	?_fabsf+3,___rem_pio2f@t+3
  5590  001574  0E00               	movlw	0
  5591  001576  6E31               	movwf	___fladd@a,c
  5592  001578  0E00               	movlw	0
  5593  00157A  6E32               	movwf	___fladd@a+1,c
  5594  00157C  0E00               	movlw	0
  5595  00157E  6E33               	movwf	___fladd@a+2,c
  5596  001580  0E3F               	movlw	63
  5597  001582  6E34               	movwf	___fladd@a+3,c
  5598  001584  0E83               	movlw	131
  5599  001586  6E18               	movwf	___flmul@a,c
  5600  001588  0EF9               	movlw	249
  5601  00158A  6E19               	movwf	___flmul@a+1,c
  5602  00158C  0E22               	movlw	34
  5603  00158E  6E1A               	movwf	___flmul@a+2,c
  5604  001590  0E3F               	movlw	63
  5605  001592  6E1B               	movwf	___flmul@a+3,c
  5606  001594  C098  F014         	movff	___rem_pio2f@t,___flmul@b
  5607  001598  C099  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  5608  00159C  C09A  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  5609  0015A0  C09B  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  5610  0015A4  EC61  F00C         	call	___flmul	;wreg free
  5611  0015A8  C014  F02D         	movff	?___flmul,___fladd@b
  5612  0015AC  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  5613  0015B0  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  5614  0015B4  C017  F030         	movff	?___flmul+3,___fladd@b+3
  5615  0015B8  ECAD  F00F         	call	___fladd	;wreg free
  5616  0015BC  C02D  F03D         	movff	?___fladd,___fltol@f1
  5617  0015C0  C02E  F03E         	movff	?___fladd+1,___fltol@f1+1
  5618  0015C4  C02F  F03F         	movff	?___fladd+2,___fltol@f1+2
  5619  0015C8  C030  F040         	movff	?___fladd+3,___fltol@f1+3
  5620  0015CC  ECE1  F016         	call	___fltol	;wreg free
  5621  0015D0  C03D  F09C         	movff	?___fltol,___rem_pio2f@n
  5622  0015D4  C03E  F09D         	movff	?___fltol+1,___rem_pio2f@n+1
  5623  0015D8  C03F  F09E         	movff	?___fltol+2,___rem_pio2f@n+2
  5624  0015DC  C040  F09F         	movff	?___fltol+3,___rem_pio2f@n+3
  5625  0015E0  C09C  F006         	movff	___rem_pio2f@n,___xxtofl@val
  5626  0015E4  C09D  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  5627  0015E8  C09E  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  5628  0015EC  C09F  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  5629  0015F0  0E01               	movlw	1
  5630  0015F2  ECCD  F014         	call	___xxtofl
  5631  0015F6  C006  F094         	movff	?___xxtofl,___rem_pio2f@fn
  5632  0015FA  C007  F095         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  5633  0015FE  C008  F096         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  5634  001602  C009  F097         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  5635  001606  0EDA               	movlw	218
  5636  001608  6E18               	movwf	___flmul@a,c
  5637  00160A  0E0F               	movlw	15
  5638  00160C  6E19               	movwf	___flmul@a+1,c
  5639  00160E  0EC9               	movlw	201
  5640  001610  6E1A               	movwf	___flmul@a+2,c
  5641  001612  0E3F               	movlw	63
  5642  001614  6E1B               	movwf	___flmul@a+3,c
  5643  001616  C094  F014         	movff	___rem_pio2f@fn,___flmul@b
  5644  00161A  C095  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  5645  00161E  C096  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  5646  001622  C097  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  5647  001626  EC61  F00C         	call	___flmul	;wreg free
  5648  00162A  C014  F041         	movff	?___flmul,___flsub@a
  5649  00162E  C015  F042         	movff	?___flmul+1,___flsub@a+1
  5650  001632  C016  F043         	movff	?___flmul+2,___flsub@a+2
  5651  001636  C017  F044         	movff	?___flmul+3,___flsub@a+3
  5652  00163A  C098  F03D         	movff	___rem_pio2f@t,___flsub@b
  5653  00163E  C099  F03E         	movff	___rem_pio2f@t+1,___flsub@b+1
  5654  001642  C09A  F03F         	movff	___rem_pio2f@t+2,___flsub@b+2
  5655  001646  C09B  F040         	movff	___rem_pio2f@t+3,___flsub@b+3
  5656  00164A  ECE5  F019         	call	___flsub	;wreg free
  5657  00164E  C03D  F090         	movff	?___flsub,___rem_pio2f$1808
  5658  001652  C03E  F091         	movff	?___flsub+1,___rem_pio2f$1808+1
  5659  001656  C03F  F092         	movff	?___flsub+2,___rem_pio2f$1808+2
  5660  00165A  C040  F093         	movff	?___flsub+3,___rem_pio2f$1808+3
  5661  00165E  C090  F03D         	movff	___rem_pio2f$1808,___flsub@b
  5662  001662  C091  F03E         	movff	___rem_pio2f$1808+1,___flsub@b+1
  5663  001666  C092  F03F         	movff	___rem_pio2f$1808+2,___flsub@b+2
  5664  00166A  C093  F040         	movff	___rem_pio2f$1808+3,___flsub@b+3
  5665  00166E  0EA3               	movlw	163
  5666  001670  6E18               	movwf	___flmul@a,c
  5667  001672  0E85               	movlw	133
  5668  001674  6E19               	movwf	___flmul@a+1,c
  5669  001676  0E88               	movlw	136
  5670  001678  6E1A               	movwf	___flmul@a+2,c
  5671  00167A  0E32               	movlw	50
  5672  00167C  6E1B               	movwf	___flmul@a+3,c
  5673  00167E  C094  F014         	movff	___rem_pio2f@fn,___flmul@b
  5674  001682  C095  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  5675  001686  C096  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  5676  00168A  C097  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  5677  00168E  EC61  F00C         	call	___flmul	;wreg free
  5678  001692  C014  F041         	movff	?___flmul,___flsub@a
  5679  001696  C015  F042         	movff	?___flmul+1,___flsub@a+1
  5680  00169A  C016  F043         	movff	?___flmul+2,___flsub@a+2
  5681  00169E  C017  F044         	movff	?___flmul+3,___flsub@a+3
  5682  0016A2  ECE5  F019         	call	___flsub	;wreg free
  5683  0016A6  C080  FFD9         	movff	___rem_pio2f@y,fsr2l
  5684  0016AA  C081  FFDA         	movff	___rem_pio2f@y+1,fsr2h
  5685  0016AE  C03D  FFDE         	movff	?___flsub,postinc2
  5686  0016B2  C03E  FFDE         	movff	?___flsub+1,postinc2
  5687  0016B6  C03F  FFDE         	movff	?___flsub+2,postinc2
  5688  0016BA  C040  FFDE         	movff	?___flsub+3,postinc2
  5689  0016BE  0100               	movlb	0	; () banked
  5690  0016C0  518A               	movf	___rem_pio2f@sign& (0+255),w,b
  5691  0016C2  118B               	iorwf	(___rem_pio2f@sign+1)& (0+255),w,b
  5692  0016C4  B4D8               	btfsc	status,2,c
  5693  0016C6  D028               	goto	l1164
  5694                           
  5695                           ; BSR set to: 0
  5696  0016C8  C080  FFD9         	movff	___rem_pio2f@y,fsr2l
  5697  0016CC  C081  FFDA         	movff	___rem_pio2f@y+1,fsr2h
  5698  0016D0  CFDE F078          	movff	postinc2,___flneg@f1
  5699  0016D4  CFDE F079          	movff	postinc2,___flneg@f1+1
  5700  0016D8  CFDE F07A          	movff	postinc2,___flneg@f1+2
  5701  0016DC  CFDE F07B          	movff	postinc2,___flneg@f1+3
  5702  0016E0  EC8F  F01A         	call	___flneg	;wreg free
  5703  0016E4  C080  FFD9         	movff	___rem_pio2f@y,fsr2l
  5704  0016E8  C081  FFDA         	movff	___rem_pio2f@y+1,fsr2h
  5705  0016EC  0100               	movlb	0	; () banked
  5706  0016EE  C078  FFDE         	movff	?___flneg,postinc2
  5707  0016F2  C079  FFDE         	movff	?___flneg+1,postinc2
  5708  0016F6  C07A  FFDE         	movff	?___flneg+2,postinc2
  5709  0016FA  C07B  FFDE         	movff	?___flneg+3,postinc2
  5710                           
  5711                           ; BSR set to: 0
  5712  0016FE  C09C  F047         	movff	___rem_pio2f@n,??___rem_pio2f
  5713  001702  C09D  F048         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  5714  001706  1E47               	comf	??___rem_pio2f,f,c
  5715  001708  1E48               	comf	??___rem_pio2f+1,f,c
  5716  00170A  4A47               	infsnz	??___rem_pio2f,f,c
  5717  00170C  2A48               	incf	??___rem_pio2f+1,f,c
  5718  00170E  C047  F07C         	movff	??___rem_pio2f,?___rem_pio2f
  5719  001712  C048  F07D         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  5720  001716  0012               	return	
  5721  001718                     l1164:
  5722                           
  5723                           ; BSR set to: 0
  5724  001718  C09C  F07C         	movff	___rem_pio2f@n,?___rem_pio2f
  5725  00171C  C09D  F07D         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  5726  001720  0012               	return	
  5727  001722                     l4781:
  5728                           
  5729                           ; BSR set to: 0
  5730  001722  C07C  F006         	movff	___rem_pio2f@x,fabsf@x
  5731  001726  C07D  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  5732  00172A  C07E  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  5733  00172E  C07F  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  5734  001732  EC5D  F01A         	call	_fabsf	;wreg free
  5735  001736  C006  F098         	movff	?_fabsf,___rem_pio2f@t
  5736  00173A  C007  F099         	movff	?_fabsf+1,___rem_pio2f@t+1
  5737  00173E  C008  F09A         	movff	?_fabsf+2,___rem_pio2f@t+2
  5738  001742  C009  F09B         	movff	?_fabsf+3,___rem_pio2f@t+3
  5739  001746  0E00               	movlw	0
  5740  001748  6E31               	movwf	___fladd@a,c
  5741  00174A  0E00               	movlw	0
  5742  00174C  6E32               	movwf	___fladd@a+1,c
  5743  00174E  0E00               	movlw	0
  5744  001750  6E33               	movwf	___fladd@a+2,c
  5745  001752  0E3F               	movlw	63
  5746  001754  6E34               	movwf	___fladd@a+3,c
  5747  001756  0E83               	movlw	131
  5748  001758  6E18               	movwf	___flmul@a,c
  5749  00175A  0EF9               	movlw	249
  5750  00175C  6E19               	movwf	___flmul@a+1,c
  5751  00175E  0E22               	movlw	34
  5752  001760  6E1A               	movwf	___flmul@a+2,c
  5753  001762  0E3F               	movlw	63
  5754  001764  6E1B               	movwf	___flmul@a+3,c
  5755  001766  C098  F014         	movff	___rem_pio2f@t,___flmul@b
  5756  00176A  C099  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  5757  00176E  C09A  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  5758  001772  C09B  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  5759  001776  EC61  F00C         	call	___flmul	;wreg free
  5760  00177A  C014  F02D         	movff	?___flmul,___fladd@b
  5761  00177E  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  5762  001782  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  5763  001786  C017  F030         	movff	?___flmul+3,___fladd@b+3
  5764  00178A  ECAD  F00F         	call	___fladd	;wreg free
  5765  00178E  C02D  F03D         	movff	?___fladd,___fltol@f1
  5766  001792  C02E  F03E         	movff	?___fladd+1,___fltol@f1+1
  5767  001796  C02F  F03F         	movff	?___fladd+2,___fltol@f1+2
  5768  00179A  C030  F040         	movff	?___fladd+3,___fltol@f1+3
  5769  00179E  ECE1  F016         	call	___fltol	;wreg free
  5770  0017A2  C03D  F09C         	movff	?___fltol,___rem_pio2f@n
  5771  0017A6  C03E  F09D         	movff	?___fltol+1,___rem_pio2f@n+1
  5772  0017AA  C03F  F09E         	movff	?___fltol+2,___rem_pio2f@n+2
  5773  0017AE  C040  F09F         	movff	?___fltol+3,___rem_pio2f@n+3
  5774  0017B2  C09C  F006         	movff	___rem_pio2f@n,___xxtofl@val
  5775  0017B6  C09D  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  5776  0017BA  C09E  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  5777  0017BE  C09F  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  5778  0017C2  0E01               	movlw	1
  5779  0017C4  ECCD  F014         	call	___xxtofl
  5780  0017C8  C006  F094         	movff	?___xxtofl,___rem_pio2f@fn
  5781  0017CC  C007  F095         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  5782  0017D0  C008  F096         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  5783  0017D4  C009  F097         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  5784  0017D8  0EDA               	movlw	218
  5785  0017DA  6E18               	movwf	___flmul@a,c
  5786  0017DC  0E0F               	movlw	15
  5787  0017DE  6E19               	movwf	___flmul@a+1,c
  5788  0017E0  0EC9               	movlw	201
  5789  0017E2  6E1A               	movwf	___flmul@a+2,c
  5790  0017E4  0E3F               	movlw	63
  5791  0017E6  6E1B               	movwf	___flmul@a+3,c
  5792  0017E8  C094  F014         	movff	___rem_pio2f@fn,___flmul@b
  5793  0017EC  C095  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  5794  0017F0  C096  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  5795  0017F4  C097  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  5796  0017F8  EC61  F00C         	call	___flmul	;wreg free
  5797  0017FC  C014  F041         	movff	?___flmul,___flsub@a
  5798  001800  C015  F042         	movff	?___flmul+1,___flsub@a+1
  5799  001804  C016  F043         	movff	?___flmul+2,___flsub@a+2
  5800  001808  C017  F044         	movff	?___flmul+3,___flsub@a+3
  5801  00180C  C098  F03D         	movff	___rem_pio2f@t,___flsub@b
  5802  001810  C099  F03E         	movff	___rem_pio2f@t+1,___flsub@b+1
  5803  001814  C09A  F03F         	movff	___rem_pio2f@t+2,___flsub@b+2
  5804  001818  C09B  F040         	movff	___rem_pio2f@t+3,___flsub@b+3
  5805  00181C  ECE5  F019         	call	___flsub	;wreg free
  5806  001820  C03D  F090         	movff	?___flsub,___rem_pio2f$1808
  5807  001824  C03E  F091         	movff	?___flsub+1,___rem_pio2f$1808+1
  5808  001828  C03F  F092         	movff	?___flsub+2,___rem_pio2f$1808+2
  5809  00182C  C040  F093         	movff	?___flsub+3,___rem_pio2f$1808+3
  5810  001830  C090  F03D         	movff	___rem_pio2f$1808,___flsub@b
  5811  001834  C091  F03E         	movff	___rem_pio2f$1808+1,___flsub@b+1
  5812  001838  C092  F03F         	movff	___rem_pio2f$1808+2,___flsub@b+2
  5813  00183C  C093  F040         	movff	___rem_pio2f$1808+3,___flsub@b+3
  5814  001840  0EA3               	movlw	163
  5815  001842  6E18               	movwf	___flmul@a,c
  5816  001844  0E85               	movlw	133
  5817  001846  6E19               	movwf	___flmul@a+1,c
  5818  001848  0E88               	movlw	136
  5819  00184A  6E1A               	movwf	___flmul@a+2,c
  5820  00184C  0E32               	movlw	50
  5821  00184E  6E1B               	movwf	___flmul@a+3,c
  5822  001850  C094  F014         	movff	___rem_pio2f@fn,___flmul@b
  5823  001854  C095  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  5824  001858  C096  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  5825  00185C  C097  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  5826  001860  EC61  F00C         	call	___flmul	;wreg free
  5827  001864  C014  F041         	movff	?___flmul,___flsub@a
  5828  001868  C015  F042         	movff	?___flmul+1,___flsub@a+1
  5829  00186C  C016  F043         	movff	?___flmul+2,___flsub@a+2
  5830  001870  C017  F044         	movff	?___flmul+3,___flsub@a+3
  5831  001874  ECE5  F019         	call	___flsub	;wreg free
  5832  001878  C03D  F082         	movff	?___flsub,___rem_pio2f@ty
  5833  00187C  C03E  F083         	movff	?___flsub+1,___rem_pio2f@ty+1
  5834  001880  C03F  F084         	movff	?___flsub+2,___rem_pio2f@ty+2
  5835  001884  C040  F085         	movff	?___flsub+3,___rem_pio2f@ty+3
  5836  001888  0100               	movlb	0	; () banked
  5837  00188A  518A               	movf	___rem_pio2f@sign& (0+255),w,b
  5838  00188C  118B               	iorwf	(___rem_pio2f@sign+1)& (0+255),w,b
  5839  00188E  B4D8               	btfsc	status,2,c
  5840  001890  D00B               	goto	l4799
  5841                           
  5842                           ; BSR set to: 0
  5843  001892  C082  F078         	movff	___rem_pio2f@ty,___flneg@f1
  5844  001896  C083  F079         	movff	___rem_pio2f@ty+1,___flneg@f1+1
  5845  00189A  C084  F07A         	movff	___rem_pio2f@ty+2,___flneg@f1+2
  5846  00189E  C085  F07B         	movff	___rem_pio2f@ty+3,___flneg@f1+3
  5847  0018A2  EC8F  F01A         	call	___flneg	;wreg free
  5848  0018A6  D71E               	goto	L9
  5849  0018A8                     l4799:
  5850                           
  5851                           ; BSR set to: 0
  5852  0018A8  C080  FFD9         	movff	___rem_pio2f@y,fsr2l
  5853  0018AC  C081  FFDA         	movff	___rem_pio2f@y+1,fsr2h
  5854  0018B0  C082  FFDE         	movff	___rem_pio2f@ty,postinc2
  5855  0018B4  C083  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  5856  0018B8  C084  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  5857  0018BC  C085  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  5858  0018C0  D72B               	goto	l1164
  5859  0018C2                     __end_of___rem_pio2f:
  5860                           	opt callstack 0
  5861                           
  5862 ;; *************** function _fabsf *****************
  5863 ;; Defined at:
  5864 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fabsf.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  x               4    5[COMRAM] float 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  u               4    9[COMRAM] struct .
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  4    5[COMRAM] float 
  5871 ;; Registers used:
  5872 ;;		status,2, status,0
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5879 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5881 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5882 ;;Total ram usage:        8 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:    1
  5885 ;; This function calls:
  5886 ;;		Nothing
  5887 ;; This function is called by:
  5888 ;;		___rem_pio2f
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text31
  5893  0034BA                     __ptext31:
  5894                           	opt callstack 0
  5895  0034BA                     _fabsf:
  5896                           	opt callstack 27
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;incstack = 0
  5900  0034BA  C0BE  F00A         	movff	fabsf@F463,fabsf@u
  5901  0034BE  C0BF  F00B         	movff	fabsf@F463+1,fabsf@u+1
  5902  0034C2  C0C0  F00C         	movff	fabsf@F463+2,fabsf@u+2
  5903  0034C6  C0C1  F00D         	movff	fabsf@F463+3,fabsf@u+3
  5904  0034CA  C006  F00A         	movff	fabsf@x,fabsf@u
  5905  0034CE  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  5906  0034D2  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  5907  0034D6  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  5908  0034DA  9E0D               	bcf	fabsf@u+3,7,c
  5909  0034DC  C00A  F006         	movff	fabsf@u,?_fabsf
  5910  0034E0  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  5911  0034E4  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  5912  0034E8  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  5913  0034EC  0012               	return		;funcret
  5914  0034EE                     __end_of_fabsf:
  5915                           	opt callstack 0
  5916                           
  5917 ;; *************** function ___xxtofl *****************
  5918 ;; Defined at:
  5919 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  sign            1    wreg     unsigned char 
  5922 ;;  val             4    5[COMRAM] long 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  sign            1   13[COMRAM] unsigned char 
  5925 ;;  arg             4   15[COMRAM] unsigned long 
  5926 ;;  exp             1   14[COMRAM] unsigned char 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  4    5[COMRAM] unsigned char 
  5929 ;; Registers used:
  5930 ;;		wreg, status,2, status,0
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5937 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5938 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5939 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5940 ;;Total ram usage:       14 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:    1
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_fijarVelocidad
  5947 ;;		___rem_pio2f
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text32
  5952  00299A                     __ptext32:
  5953                           	opt callstack 0
  5954  00299A                     ___xxtofl:
  5955                           	opt callstack 27
  5956                           
  5957                           ;incstack = 0
  5958                           ;___xxtofl@sign stored from wreg
  5959  00299A  6E0E               	movwf	___xxtofl@sign,c
  5960  00299C  500E               	movf	___xxtofl@sign,w,c
  5961  00299E  A4D8               	btfss	status,2,c
  5962  0029A0  AE09               	btfss	___xxtofl@val+3,7,c
  5963  0029A2  D01A               	goto	l992
  5964  0029A4  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  5965  0029A8  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  5966  0029AC  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  5967  0029B0  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  5968  0029B4  1E0A               	comf	??___xxtofl,f,c
  5969  0029B6  1E0B               	comf	??___xxtofl+1,f,c
  5970  0029B8  1E0C               	comf	??___xxtofl+2,f,c
  5971  0029BA  1E0D               	comf	??___xxtofl+3,f,c
  5972  0029BC  2A0A               	incf	??___xxtofl,f,c
  5973  0029BE  0E00               	movlw	0
  5974  0029C0  220B               	addwfc	??___xxtofl+1,f,c
  5975  0029C2  220C               	addwfc	??___xxtofl+2,f,c
  5976  0029C4  220D               	addwfc	??___xxtofl+3,f,c
  5977  0029C6  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  5978  0029CA  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  5979  0029CE  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  5980  0029D2  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  5981  0029D6  D008               	goto	l4681
  5982  0029D8                     l992:
  5983  0029D8  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  5984  0029DC  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5985  0029E0  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5986  0029E4  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5987  0029E8                     l4681:
  5988  0029E8  5006               	movf	___xxtofl@val,w,c
  5989  0029EA  1007               	iorwf	___xxtofl@val+1,w,c
  5990  0029EC  1008               	iorwf	___xxtofl@val+2,w,c
  5991  0029EE  1009               	iorwf	___xxtofl@val+3,w,c
  5992  0029F0  A4D8               	btfss	status,2,c
  5993  0029F2  D009               	goto	l4687
  5994  0029F4  0E00               	movlw	0
  5995  0029F6  6E06               	movwf	?___xxtofl,c
  5996  0029F8  0E00               	movlw	0
  5997  0029FA  6E07               	movwf	?___xxtofl+1,c
  5998  0029FC  0E00               	movlw	0
  5999  0029FE  6E08               	movwf	?___xxtofl+2,c
  6000  002A00  0E00               	movlw	0
  6001  002A02  6E09               	movwf	?___xxtofl+3,c
  6002  002A04  0012               	return	
  6003  002A06                     l4687:
  6004  002A06  0E96               	movlw	150
  6005  002A08  6E0F               	movwf	___xxtofl@exp,c
  6006  002A0A  D006               	goto	l4691
  6007  002A0C                     l4689:
  6008  002A0C  2A0F               	incf	___xxtofl@exp,f,c
  6009  002A0E  90D8               	bcf	status,0,c
  6010  002A10  3213               	rrcf	___xxtofl@arg+3,f,c
  6011  002A12  3212               	rrcf	___xxtofl@arg+2,f,c
  6012  002A14  3211               	rrcf	___xxtofl@arg+1,f,c
  6013  002A16  3210               	rrcf	___xxtofl@arg,f,c
  6014  002A18                     l4691:
  6015  002A18  0E00               	movlw	0
  6016  002A1A  1410               	andwf	___xxtofl@arg,w,c
  6017  002A1C  6E0A               	movwf	??___xxtofl& (0+255),c
  6018  002A1E  0E00               	movlw	0
  6019  002A20  1411               	andwf	___xxtofl@arg+1,w,c
  6020  002A22  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6021  002A24  0E00               	movlw	0
  6022  002A26  1412               	andwf	___xxtofl@arg+2,w,c
  6023  002A28  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6024  002A2A  0EFE               	movlw	254
  6025  002A2C  1413               	andwf	___xxtofl@arg+3,w,c
  6026  002A2E  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6027  002A30  500A               	movf	??___xxtofl,w,c
  6028  002A32  100B               	iorwf	??___xxtofl+1,w,c
  6029  002A34  100C               	iorwf	??___xxtofl+2,w,c
  6030  002A36  100D               	iorwf	??___xxtofl+3,w,c
  6031  002A38  B4D8               	btfsc	status,2,c
  6032  002A3A  D00D               	goto	l999
  6033  002A3C  D7E7               	goto	l4689
  6034  002A3E                     l4693:
  6035  002A3E  2A0F               	incf	___xxtofl@exp,f,c
  6036  002A40  0E01               	movlw	1
  6037  002A42  2610               	addwf	___xxtofl@arg,f,c
  6038  002A44  0E00               	movlw	0
  6039  002A46  2211               	addwfc	___xxtofl@arg+1,f,c
  6040  002A48  2212               	addwfc	___xxtofl@arg+2,f,c
  6041  002A4A  2213               	addwfc	___xxtofl@arg+3,f,c
  6042  002A4C  90D8               	bcf	status,0,c
  6043  002A4E  3213               	rrcf	___xxtofl@arg+3,f,c
  6044  002A50  3212               	rrcf	___xxtofl@arg+2,f,c
  6045  002A52  3211               	rrcf	___xxtofl@arg+1,f,c
  6046  002A54  3210               	rrcf	___xxtofl@arg,f,c
  6047  002A56                     l999:
  6048  002A56  0E00               	movlw	0
  6049  002A58  1410               	andwf	___xxtofl@arg,w,c
  6050  002A5A  6E0A               	movwf	??___xxtofl& (0+255),c
  6051  002A5C  0E00               	movlw	0
  6052  002A5E  1411               	andwf	___xxtofl@arg+1,w,c
  6053  002A60  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6054  002A62  0E00               	movlw	0
  6055  002A64  1412               	andwf	___xxtofl@arg+2,w,c
  6056  002A66  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6057  002A68  0EFF               	movlw	255
  6058  002A6A  1413               	andwf	___xxtofl@arg+3,w,c
  6059  002A6C  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6060  002A6E  500A               	movf	??___xxtofl,w,c
  6061  002A70  100B               	iorwf	??___xxtofl+1,w,c
  6062  002A72  100C               	iorwf	??___xxtofl+2,w,c
  6063  002A74  100D               	iorwf	??___xxtofl+3,w,c
  6064  002A76  B4D8               	btfsc	status,2,c
  6065  002A78  D007               	goto	l4701
  6066  002A7A  D7E1               	goto	l4693
  6067  002A7C                     l4699:
  6068  002A7C  060F               	decf	___xxtofl@exp,f,c
  6069  002A7E  90D8               	bcf	status,0,c
  6070  002A80  3610               	rlcf	___xxtofl@arg,f,c
  6071  002A82  3611               	rlcf	___xxtofl@arg+1,f,c
  6072  002A84  3612               	rlcf	___xxtofl@arg+2,f,c
  6073  002A86  3613               	rlcf	___xxtofl@arg+3,f,c
  6074  002A88                     l4701:
  6075  002A88  BE12               	btfsc	___xxtofl@arg+2,7,c
  6076  002A8A  D003               	goto	u4510
  6077  002A8C  0E02               	movlw	2
  6078  002A8E  600F               	cpfslt	___xxtofl@exp,c
  6079  002A90  D7F5               	goto	l4699
  6080  002A92                     u4510:
  6081  002A92  A00F               	btfss	___xxtofl@exp,0,c
  6082  002A94  9E12               	bcf	___xxtofl@arg+2,7,c
  6083  002A96  90D8               	bcf	status,0,c
  6084  002A98  320F               	rrcf	___xxtofl@exp,f,c
  6085  002A9A  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6086  002A9E  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  6087  002AA0  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  6088  002AA2  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  6089  002AA4  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6090  002AA8  6A0C               	clrf	??___xxtofl+2,c
  6091  002AAA  6A0B               	clrf	??___xxtofl+1,c
  6092  002AAC  6A0A               	clrf	??___xxtofl,c
  6093  002AAE  500A               	movf	??___xxtofl,w,c
  6094  002AB0  1210               	iorwf	___xxtofl@arg,f,c
  6095  002AB2  500B               	movf	??___xxtofl+1,w,c
  6096  002AB4  1211               	iorwf	___xxtofl@arg+1,f,c
  6097  002AB6  500C               	movf	??___xxtofl+2,w,c
  6098  002AB8  1212               	iorwf	___xxtofl@arg+2,f,c
  6099  002ABA  500D               	movf	??___xxtofl+3,w,c
  6100  002ABC  1213               	iorwf	___xxtofl@arg+3,f,c
  6101  002ABE  500E               	movf	___xxtofl@sign,w,c
  6102  002AC0  A4D8               	btfss	status,2,c
  6103  002AC2  AE09               	btfss	___xxtofl@val+3,7,c
  6104  002AC4  D001               	goto	l4717
  6105  002AC6  8E13               	bsf	___xxtofl@arg+3,7,c
  6106  002AC8                     l4717:
  6107  002AC8  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6108  002ACC  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6109  002AD0  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6110  002AD4  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6111  002AD8  0012               	return		;funcret
  6112  002ADA                     __end_of___xxtofl:
  6113                           	opt callstack 0
  6114                           
  6115 ;; *************** function ___fltol *****************
  6116 ;; Defined at:
  6117 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  f1              4   60[COMRAM] unsigned char 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  exp1            1   69[COMRAM] unsigned char 
  6122 ;;  sign1           1   68[COMRAM] unsigned char 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  4   60[COMRAM] long 
  6125 ;; Registers used:
  6126 ;;		wreg, status,2, status,0
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6132 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6134 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6135 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6136 ;;Total ram usage:       10 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    1
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		_fijarVelocidad
  6143 ;;		___rem_pio2f
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text33
  6148  002DC2                     __ptext33:
  6149                           	opt callstack 0
  6150  002DC2                     ___fltol:
  6151                           	opt callstack 27
  6152                           
  6153                           ;incstack = 0
  6154  002DC2  343F               	rlcf	___fltol@f1+2,w,c
  6155  002DC4  3440               	rlcf	___fltol@f1+3,w,c
  6156  002DC6  6E46               	movwf	___fltol@exp1,c
  6157  002DC8  5046               	movf	___fltol@exp1,w,c
  6158  002DCA  A4D8               	btfss	status,2,c
  6159  002DCC  D009               	goto	l4637
  6160  002DCE                     u4380:
  6161  002DCE  0E00               	movlw	0
  6162  002DD0  6E3D               	movwf	?___fltol,c
  6163  002DD2  0E00               	movlw	0
  6164  002DD4  6E3E               	movwf	?___fltol+1,c
  6165  002DD6  0E00               	movlw	0
  6166  002DD8  6E3F               	movwf	?___fltol+2,c
  6167  002DDA  0E00               	movlw	0
  6168  002DDC  6E40               	movwf	?___fltol+3,c
  6169  002DDE  0012               	return	
  6170  002DE0                     l4637:
  6171  002DE0  C03D  F041         	movff	___fltol@f1,??___fltol
  6172  002DE4  C03E  F042         	movff	___fltol@f1+1,??___fltol+1
  6173  002DE8  C03F  F043         	movff	___fltol@f1+2,??___fltol+2
  6174  002DEC  C040  F044         	movff	___fltol@f1+3,??___fltol+3
  6175  002DF0  0E20               	movlw	32
  6176  002DF2  D005               	goto	u4390
  6177  002DF4                     u4395:
  6178  002DF4  90D8               	bcf	status,0,c
  6179  002DF6  3244               	rrcf	??___fltol+3,f,c
  6180  002DF8  3243               	rrcf	??___fltol+2,f,c
  6181  002DFA  3242               	rrcf	??___fltol+1,f,c
  6182  002DFC  3241               	rrcf	??___fltol,f,c
  6183  002DFE                     u4390:
  6184  002DFE  2EE8               	decfsz	wreg,f,c
  6185  002E00  D7F9               	goto	u4395
  6186  002E02  5041               	movf	??___fltol,w,c
  6187  002E04  6E45               	movwf	___fltol@sign1,c
  6188  002E06  8E3F               	bsf	___fltol@f1+2,7,c
  6189  002E08  0EFF               	movlw	255
  6190  002E0A  163D               	andwf	___fltol@f1,f,c
  6191  002E0C  0EFF               	movlw	255
  6192  002E0E  163E               	andwf	___fltol@f1+1,f,c
  6193  002E10  0EFF               	movlw	255
  6194  002E12  163F               	andwf	___fltol@f1+2,f,c
  6195  002E14  0E00               	movlw	0
  6196  002E16  1640               	andwf	___fltol@f1+3,f,c
  6197  002E18  0E96               	movlw	150
  6198  002E1A  5E46               	subwf	___fltol@exp1,f,c
  6199  002E1C  AE46               	btfss	___fltol@exp1,7,c
  6200  002E1E  D00D               	goto	l4657
  6201  002E20  5046               	movf	___fltol@exp1,w,c
  6202  002E22  0A80               	xorlw	128
  6203  002E24  0F97               	addlw	151
  6204  002E26  A0D8               	btfss	status,0,c
  6205  002E28  D7D2               	goto	u4380
  6206  002E2A                     l4653:
  6207  002E2A  90D8               	bcf	status,0,c
  6208  002E2C  3240               	rrcf	___fltol@f1+3,f,c
  6209  002E2E  323F               	rrcf	___fltol@f1+2,f,c
  6210  002E30  323E               	rrcf	___fltol@f1+1,f,c
  6211  002E32  323D               	rrcf	___fltol@f1,f,c
  6212  002E34  3E46               	incfsz	___fltol@exp1,f,c
  6213  002E36  D7F9               	goto	l4653
  6214  002E38  D00D               	goto	u4430
  6215  002E3A                     l4657:
  6216  002E3A  0E1F               	movlw	31
  6217  002E3C  6446               	cpfsgt	___fltol@exp1,c
  6218  002E3E  D007               	goto	l4665
  6219  002E40  D7C6               	goto	u4380
  6220  002E42                     l4663:
  6221  002E42  90D8               	bcf	status,0,c
  6222  002E44  363D               	rlcf	___fltol@f1,f,c
  6223  002E46  363E               	rlcf	___fltol@f1+1,f,c
  6224  002E48  363F               	rlcf	___fltol@f1+2,f,c
  6225  002E4A  3640               	rlcf	___fltol@f1+3,f,c
  6226  002E4C  0646               	decf	___fltol@exp1,f,c
  6227  002E4E                     l4665:
  6228  002E4E  5046               	movf	___fltol@exp1,w,c
  6229  002E50  A4D8               	btfss	status,2,c
  6230  002E52  D7F7               	goto	l4663
  6231  002E54                     u4430:
  6232  002E54  5045               	movf	___fltol@sign1,w,c
  6233  002E56  B4D8               	btfsc	status,2,c
  6234  002E58  D008               	goto	l4671
  6235  002E5A  1E40               	comf	___fltol@f1+3,f,c
  6236  002E5C  1E3F               	comf	___fltol@f1+2,f,c
  6237  002E5E  1E3E               	comf	___fltol@f1+1,f,c
  6238  002E60  6C3D               	negf	___fltol@f1,c
  6239  002E62  0E00               	movlw	0
  6240  002E64  223E               	addwfc	___fltol@f1+1,f,c
  6241  002E66  223F               	addwfc	___fltol@f1+2,f,c
  6242  002E68  2240               	addwfc	___fltol@f1+3,f,c
  6243  002E6A                     l4671:
  6244  002E6A  C03D  F03D         	movff	___fltol@f1,?___fltol
  6245  002E6E  C03E  F03E         	movff	___fltol@f1+1,?___fltol+1
  6246  002E72  C03F  F03F         	movff	___fltol@f1+2,?___fltol+2
  6247  002E76  C040  F040         	movff	___fltol@f1+3,?___fltol+3
  6248  002E7A  0012               	return		;funcret
  6249  002E7C                     __end_of___fltol:
  6250                           	opt callstack 0
  6251                           
  6252 ;; *************** function ___flsub *****************
  6253 ;; Defined at:
  6254 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  b               4   60[COMRAM] long 
  6257 ;;  a               4   64[COMRAM] long 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  4   60[COMRAM] long 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2, status,0, cstack
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6269 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6272 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;Total ram usage:        8 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:    2
  6276 ;; This function calls:
  6277 ;;		___fladd
  6278 ;; This function is called by:
  6279 ;;		_sinf
  6280 ;;		___rem_pio2f
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           	psect	text34
  6285  0033CA                     __ptext34:
  6286                           	opt callstack 0
  6287  0033CA                     ___flsub:
  6288                           	opt callstack 26
  6289                           
  6290                           ;incstack = 0
  6291  0033CA  0E00               	movlw	0
  6292  0033CC  1A41               	xorwf	___flsub@a,f,c
  6293  0033CE  0E00               	movlw	0
  6294  0033D0  1A42               	xorwf	___flsub@a+1,f,c
  6295  0033D2  0E00               	movlw	0
  6296  0033D4  1A43               	xorwf	___flsub@a+2,f,c
  6297  0033D6  0E80               	movlw	128
  6298  0033D8  1A44               	xorwf	___flsub@a+3,f,c
  6299  0033DA  C03D  F02D         	movff	___flsub@b,___fladd@b
  6300  0033DE  C03E  F02E         	movff	___flsub@b+1,___fladd@b+1
  6301  0033E2  C03F  F02F         	movff	___flsub@b+2,___fladd@b+2
  6302  0033E6  C040  F030         	movff	___flsub@b+3,___fladd@b+3
  6303  0033EA  C041  F031         	movff	___flsub@a,___fladd@a
  6304  0033EE  C042  F032         	movff	___flsub@a+1,___fladd@a+1
  6305  0033F2  C043  F033         	movff	___flsub@a+2,___fladd@a+2
  6306  0033F6  C044  F034         	movff	___flsub@a+3,___fladd@a+3
  6307  0033FA  ECAD  F00F         	call	___fladd	;wreg free
  6308  0033FE  C02D  F03D         	movff	?___fladd,?___flsub
  6309  003402  C02E  F03E         	movff	?___fladd+1,?___flsub+1
  6310  003406  C02F  F03F         	movff	?___fladd+2,?___flsub+2
  6311  00340A  C030  F040         	movff	?___fladd+3,?___flsub+3
  6312  00340E  0012               	return		;funcret
  6313  003410                     __end_of___flsub:
  6314                           	opt callstack 0
  6315                           
  6316 ;; *************** function ___flneg *****************
  6317 ;; Defined at:
  6318 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  f1              4   24[BANK0 ] long 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;		None
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  4   24[BANK0 ] long 
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6332 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6335 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;Total ram usage:        4 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    1
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_sinf
  6343 ;;		___rem_pio2f
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text35
  6348  00351E                     __ptext35:
  6349                           	opt callstack 0
  6350  00351E                     ___flneg:
  6351                           	opt callstack 27
  6352                           
  6353                           ;incstack = 0
  6354  00351E  0100               	movlb	0	; () banked
  6355  003520  5178               	movf	___flneg@f1& (0+255),w,b
  6356  003522  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
  6357  003524  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
  6358  003526  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
  6359  003528  B4D8               	btfsc	status,2,c
  6360  00352A  D008               	goto	l4627
  6361                           
  6362                           ; BSR set to: 0
  6363  00352C  0E00               	movlw	0
  6364  00352E  1B78               	xorwf	___flneg@f1& (0+255),f,b
  6365  003530  0E00               	movlw	0
  6366  003532  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6367  003534  0E00               	movlw	0
  6368  003536  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6369  003538  0E80               	movlw	128
  6370  00353A  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6371  00353C                     l4627:
  6372                           
  6373                           ; BSR set to: 0
  6374  00353C  C078  F078         	movff	___flneg@f1,?___flneg
  6375  003540  C079  F079         	movff	___flneg@f1+1,?___flneg+1
  6376  003544  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
  6377  003548  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
  6378                           
  6379                           ; BSR set to: 0
  6380  00354C  0012               	return		;funcret
  6381  00354E                     __end_of___flneg:
  6382                           	opt callstack 0
  6383                           
  6384 ;; *************** function ___cosdf *****************
  6385 ;; Defined at:
  6386 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__cosdf.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  x               4   60[COMRAM] long 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  z               4   20[BANK0 ] long 
  6391 ;;  w               4   16[BANK0 ] long 
  6392 ;;  r               4    0[BANK0 ] long 
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  4   60[COMRAM] float 
  6395 ;; Registers used:
  6396 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6402 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6403 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6405 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6406 ;;Total ram usage:       28 bytes
  6407 ;; Hardware stack levels used:    1
  6408 ;; Hardware stack levels required when called:    2
  6409 ;; This function calls:
  6410 ;;		___fladd
  6411 ;;		___flmul
  6412 ;; This function is called by:
  6413 ;;		_sinf
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text36
  6418  002498                     __ptext36:
  6419                           	opt callstack 0
  6420  002498                     ___cosdf:
  6421                           	opt callstack 27
  6422                           
  6423                           ; BSR set to: 0
  6424                           ;incstack = 0
  6425  002498  C03D  F014         	movff	___cosdf@x,___flmul@b
  6426  00249C  C03E  F015         	movff	___cosdf@x+1,___flmul@b+1
  6427  0024A0  C03F  F016         	movff	___cosdf@x+2,___flmul@b+2
  6428  0024A4  C040  F017         	movff	___cosdf@x+3,___flmul@b+3
  6429  0024A8  C03D  F018         	movff	___cosdf@x,___flmul@a
  6430  0024AC  C03E  F019         	movff	___cosdf@x+1,___flmul@a+1
  6431  0024B0  C03F  F01A         	movff	___cosdf@x+2,___flmul@a+2
  6432  0024B4  C040  F01B         	movff	___cosdf@x+3,___flmul@a+3
  6433  0024B8  EC61  F00C         	call	___flmul	;wreg free
  6434  0024BC  C014  F074         	movff	?___flmul,___cosdf@z
  6435  0024C0  C015  F075         	movff	?___flmul+1,___cosdf@z+1
  6436  0024C4  C016  F076         	movff	?___flmul+2,___cosdf@z+2
  6437  0024C8  C017  F077         	movff	?___flmul+3,___cosdf@z+3
  6438  0024CC  C074  F014         	movff	___cosdf@z,___flmul@b
  6439  0024D0  C075  F015         	movff	___cosdf@z+1,___flmul@b+1
  6440  0024D4  C076  F016         	movff	___cosdf@z+2,___flmul@b+2
  6441  0024D8  C077  F017         	movff	___cosdf@z+3,___flmul@b+3
  6442  0024DC  C074  F018         	movff	___cosdf@z,___flmul@a
  6443  0024E0  C075  F019         	movff	___cosdf@z+1,___flmul@a+1
  6444  0024E4  C076  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6445  0024E8  C077  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6446  0024EC  EC61  F00C         	call	___flmul	;wreg free
  6447  0024F0  C014  F070         	movff	?___flmul,___cosdf@w
  6448  0024F4  C015  F071         	movff	?___flmul+1,___cosdf@w+1
  6449  0024F8  C016  F072         	movff	?___flmul+2,___cosdf@w+2
  6450  0024FC  C017  F073         	movff	?___flmul+3,___cosdf@w+3
  6451  002500  0E17               	movlw	23
  6452  002502  6E18               	movwf	___flmul@a,c
  6453  002504  0E9A               	movlw	154
  6454  002506  6E19               	movwf	___flmul@a+1,c
  6455  002508  0ECC               	movlw	204
  6456  00250A  6E1A               	movwf	___flmul@a+2,c
  6457  00250C  0E37               	movlw	55
  6458  00250E  6E1B               	movwf	___flmul@a+3,c
  6459  002510  C074  F014         	movff	___cosdf@z,___flmul@b
  6460  002514  C075  F015         	movff	___cosdf@z+1,___flmul@b+1
  6461  002518  C076  F016         	movff	___cosdf@z+2,___flmul@b+2
  6462  00251C  C077  F017         	movff	___cosdf@z+3,___flmul@b+3
  6463  002520  EC61  F00C         	call	___flmul	;wreg free
  6464  002524  C014  F02D         	movff	?___flmul,___fladd@b
  6465  002528  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  6466  00252C  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  6467  002530  C017  F030         	movff	?___flmul+3,___fladd@b+3
  6468  002534  0E3F               	movlw	63
  6469  002536  6E31               	movwf	___fladd@a,c
  6470  002538  0E04               	movlw	4
  6471  00253A  6E32               	movwf	___fladd@a+1,c
  6472  00253C  0EB6               	movlw	182
  6473  00253E  6E33               	movwf	___fladd@a+2,c
  6474  002540  0EBA               	movlw	186
  6475  002542  6E34               	movwf	___fladd@a+3,c
  6476  002544  ECAD  F00F         	call	___fladd	;wreg free
  6477  002548  C02D  F060         	movff	?___fladd,___cosdf@r
  6478  00254C  C02E  F061         	movff	?___fladd+1,___cosdf@r+1
  6479  002550  C02F  F062         	movff	?___fladd+2,___cosdf@r+2
  6480  002554  C030  F063         	movff	?___fladd+3,___cosdf@r+3
  6481  002558  0E00               	movlw	0
  6482  00255A  6E31               	movwf	___fladd@a,c
  6483  00255C  0E00               	movlw	0
  6484  00255E  6E32               	movwf	___fladd@a+1,c
  6485  002560  0E80               	movlw	128
  6486  002562  6E33               	movwf	___fladd@a+2,c
  6487  002564  0E3F               	movlw	63
  6488  002566  6E34               	movwf	___fladd@a+3,c
  6489  002568  0E00               	movlw	0
  6490  00256A  6E18               	movwf	___flmul@a,c
  6491  00256C  0E00               	movlw	0
  6492  00256E  6E19               	movwf	___flmul@a+1,c
  6493  002570  0E00               	movlw	0
  6494  002572  6E1A               	movwf	___flmul@a+2,c
  6495  002574  0EBF               	movlw	191
  6496  002576  6E1B               	movwf	___flmul@a+3,c
  6497  002578  C074  F014         	movff	___cosdf@z,___flmul@b
  6498  00257C  C075  F015         	movff	___cosdf@z+1,___flmul@b+1
  6499  002580  C076  F016         	movff	___cosdf@z+2,___flmul@b+2
  6500  002584  C077  F017         	movff	___cosdf@z+3,___flmul@b+3
  6501  002588  EC61  F00C         	call	___flmul	;wreg free
  6502  00258C  C014  F02D         	movff	?___flmul,___fladd@b
  6503  002590  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  6504  002594  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  6505  002598  C017  F030         	movff	?___flmul+3,___fladd@b+3
  6506  00259C  ECAD  F00F         	call	___fladd	;wreg free
  6507  0025A0  C02D  F064         	movff	?___fladd,___cosdf$1805
  6508  0025A4  C02E  F065         	movff	?___fladd+1,___cosdf$1805+1
  6509  0025A8  C02F  F066         	movff	?___fladd+2,___cosdf$1805+2
  6510  0025AC  C030  F067         	movff	?___fladd+3,___cosdf$1805+3
  6511  0025B0  C074  F018         	movff	___cosdf@z,___flmul@a
  6512  0025B4  C075  F019         	movff	___cosdf@z+1,___flmul@a+1
  6513  0025B8  C076  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6514  0025BC  C077  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6515  0025C0  C070  F014         	movff	___cosdf@w,___flmul@b
  6516  0025C4  C071  F015         	movff	___cosdf@w+1,___flmul@b+1
  6517  0025C8  C072  F016         	movff	___cosdf@w+2,___flmul@b+2
  6518  0025CC  C073  F017         	movff	___cosdf@w+3,___flmul@b+3
  6519  0025D0  EC61  F00C         	call	___flmul	;wreg free
  6520  0025D4  C014  F068         	movff	?___flmul,___cosdf$1806
  6521  0025D8  C015  F069         	movff	?___flmul+1,___cosdf$1806+1
  6522  0025DC  C016  F06A         	movff	?___flmul+2,___cosdf$1806+2
  6523  0025E0  C017  F06B         	movff	?___flmul+3,___cosdf$1806+3
  6524  0025E4  0E9F               	movlw	159
  6525  0025E6  6E18               	movwf	___flmul@a,c
  6526  0025E8  0EAA               	movlw	170
  6527  0025EA  6E19               	movwf	___flmul@a+1,c
  6528  0025EC  0E2A               	movlw	42
  6529  0025EE  6E1A               	movwf	___flmul@a+2,c
  6530  0025F0  0E3D               	movlw	61
  6531  0025F2  6E1B               	movwf	___flmul@a+3,c
  6532  0025F4  C070  F014         	movff	___cosdf@w,___flmul@b
  6533  0025F8  C071  F015         	movff	___cosdf@w+1,___flmul@b+1
  6534  0025FC  C072  F016         	movff	___cosdf@w+2,___flmul@b+2
  6535  002600  C073  F017         	movff	___cosdf@w+3,___flmul@b+3
  6536  002604  EC61  F00C         	call	___flmul	;wreg free
  6537  002608  C014  F031         	movff	?___flmul,___fladd@a
  6538  00260C  C015  F032         	movff	?___flmul+1,___fladd@a+1
  6539  002610  C016  F033         	movff	?___flmul+2,___fladd@a+2
  6540  002614  C017  F034         	movff	?___flmul+3,___fladd@a+3
  6541  002618  C064  F02D         	movff	___cosdf$1805,___fladd@b
  6542  00261C  C065  F02E         	movff	___cosdf$1805+1,___fladd@b+1
  6543  002620  C066  F02F         	movff	___cosdf$1805+2,___fladd@b+2
  6544  002624  C067  F030         	movff	___cosdf$1805+3,___fladd@b+3
  6545  002628  ECAD  F00F         	call	___fladd	;wreg free
  6546  00262C  C02D  F06C         	movff	?___fladd,___cosdf$1807
  6547  002630  C02E  F06D         	movff	?___fladd+1,___cosdf$1807+1
  6548  002634  C02F  F06E         	movff	?___fladd+2,___cosdf$1807+2
  6549  002638  C030  F06F         	movff	?___fladd+3,___cosdf$1807+3
  6550  00263C  C06C  F02D         	movff	___cosdf$1807,___fladd@b
  6551  002640  C06D  F02E         	movff	___cosdf$1807+1,___fladd@b+1
  6552  002644  C06E  F02F         	movff	___cosdf$1807+2,___fladd@b+2
  6553  002648  C06F  F030         	movff	___cosdf$1807+3,___fladd@b+3
  6554  00264C  C060  F018         	movff	___cosdf@r,___flmul@a
  6555  002650  C061  F019         	movff	___cosdf@r+1,___flmul@a+1
  6556  002654  C062  F01A         	movff	___cosdf@r+2,___flmul@a+2
  6557  002658  C063  F01B         	movff	___cosdf@r+3,___flmul@a+3
  6558  00265C  C068  F014         	movff	___cosdf$1806,___flmul@b
  6559  002660  C069  F015         	movff	___cosdf$1806+1,___flmul@b+1
  6560  002664  C06A  F016         	movff	___cosdf$1806+2,___flmul@b+2
  6561  002668  C06B  F017         	movff	___cosdf$1806+3,___flmul@b+3
  6562  00266C  EC61  F00C         	call	___flmul	;wreg free
  6563  002670  C014  F031         	movff	?___flmul,___fladd@a
  6564  002674  C015  F032         	movff	?___flmul+1,___fladd@a+1
  6565  002678  C016  F033         	movff	?___flmul+2,___fladd@a+2
  6566  00267C  C017  F034         	movff	?___flmul+3,___fladd@a+3
  6567  002680  ECAD  F00F         	call	___fladd	;wreg free
  6568  002684  C02D  F03D         	movff	?___fladd,?___cosdf
  6569  002688  C02E  F03E         	movff	?___fladd+1,?___cosdf+1
  6570  00268C  C02F  F03F         	movff	?___fladd+2,?___cosdf+2
  6571  002690  C030  F040         	movff	?___fladd+3,?___cosdf+3
  6572  002694  0012               	return		;funcret
  6573  002696                     __end_of___cosdf:
  6574                           	opt callstack 0
  6575                           
  6576 ;; *************** function ___flmul *****************
  6577 ;; Defined at:
  6578 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;  b               4   19[COMRAM] float 
  6581 ;;  a               4   23[COMRAM] float 
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;  prod            4   38[COMRAM] struct .
  6584 ;;  grs             4   33[COMRAM] unsigned long 
  6585 ;;  temp            2   42[COMRAM] struct .
  6586 ;;  bexp            1   37[COMRAM] unsigned char 
  6587 ;;  aexp            1   32[COMRAM] unsigned char 
  6588 ;;  sign            1   31[COMRAM] unsigned char 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  4   19[COMRAM] unsigned char 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2, status,0, prodl, prodh
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6598 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6599 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6600 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6601 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6602 ;;Total ram usage:       25 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    1
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_fijarVelocidad
  6609 ;;		___cosdf
  6610 ;;		___rem_pio2f
  6611 ;;		___sindf
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text37
  6616  0018C2                     __ptext37:
  6617                           	opt callstack 0
  6618  0018C2                     ___flmul:
  6619                           	opt callstack 27
  6620                           
  6621                           ;incstack = 0
  6622  0018C2  5017               	movf	___flmul@b+3,w,c
  6623  0018C4  0B80               	andlw	128
  6624  0018C6  6E20               	movwf	___flmul@sign,c
  6625  0018C8  5017               	movf	___flmul@b+3,w,c
  6626  0018CA  2417               	addwf	___flmul@b+3,w,c
  6627  0018CC  6E26               	movwf	___flmul@bexp,c
  6628  0018CE  BE16               	btfsc	___flmul@b+2,7,c
  6629  0018D0  8026               	bsf	___flmul@bexp,0,c
  6630  0018D2  5026               	movf	___flmul@bexp,w,c
  6631  0018D4  B4D8               	btfsc	status,2,c
  6632  0018D6  D00D               	goto	l4501
  6633  0018D8  2826               	incf	___flmul@bexp,w,c
  6634  0018DA  A4D8               	btfss	status,2,c
  6635  0018DC  D008               	goto	l4499
  6636  0018DE  0E00               	movlw	0
  6637  0018E0  6E14               	movwf	___flmul@b,c
  6638  0018E2  0E00               	movlw	0
  6639  0018E4  6E15               	movwf	___flmul@b+1,c
  6640  0018E6  0E00               	movlw	0
  6641  0018E8  6E16               	movwf	___flmul@b+2,c
  6642  0018EA  0E00               	movlw	0
  6643  0018EC  6E17               	movwf	___flmul@b+3,c
  6644  0018EE                     l4499:
  6645  0018EE  8E16               	bsf	___flmul@b+2,7,c
  6646  0018F0  D008               	goto	l4503
  6647  0018F2                     l4501:
  6648  0018F2  0E00               	movlw	0
  6649  0018F4  6E14               	movwf	___flmul@b,c
  6650  0018F6  0E00               	movlw	0
  6651  0018F8  6E15               	movwf	___flmul@b+1,c
  6652  0018FA  0E00               	movlw	0
  6653  0018FC  6E16               	movwf	___flmul@b+2,c
  6654  0018FE  0E00               	movlw	0
  6655  001900  6E17               	movwf	___flmul@b+3,c
  6656  001902                     l4503:
  6657  001902  501B               	movf	___flmul@a+3,w,c
  6658  001904  0B80               	andlw	128
  6659  001906  1A20               	xorwf	___flmul@sign,f,c
  6660  001908  501B               	movf	___flmul@a+3,w,c
  6661  00190A  241B               	addwf	___flmul@a+3,w,c
  6662  00190C  6E21               	movwf	___flmul@aexp,c
  6663  00190E  BE1A               	btfsc	___flmul@a+2,7,c
  6664  001910  8021               	bsf	___flmul@aexp,0,c
  6665  001912  5021               	movf	___flmul@aexp,w,c
  6666  001914  B4D8               	btfsc	status,2,c
  6667  001916  D00D               	goto	l4519
  6668  001918  2821               	incf	___flmul@aexp,w,c
  6669  00191A  A4D8               	btfss	status,2,c
  6670  00191C  D008               	goto	l4517
  6671  00191E  0E00               	movlw	0
  6672  001920  6E18               	movwf	___flmul@a,c
  6673  001922  0E00               	movlw	0
  6674  001924  6E19               	movwf	___flmul@a+1,c
  6675  001926  0E00               	movlw	0
  6676  001928  6E1A               	movwf	___flmul@a+2,c
  6677  00192A  0E00               	movlw	0
  6678  00192C  6E1B               	movwf	___flmul@a+3,c
  6679  00192E                     l4517:
  6680  00192E  8E1A               	bsf	___flmul@a+2,7,c
  6681  001930  D008               	goto	l951
  6682  001932                     l4519:
  6683  001932  0E00               	movlw	0
  6684  001934  6E18               	movwf	___flmul@a,c
  6685  001936  0E00               	movlw	0
  6686  001938  6E19               	movwf	___flmul@a+1,c
  6687  00193A  0E00               	movlw	0
  6688  00193C  6E1A               	movwf	___flmul@a+2,c
  6689  00193E  0E00               	movlw	0
  6690  001940  6E1B               	movwf	___flmul@a+3,c
  6691  001942                     l951:
  6692  001942  5021               	movf	___flmul@aexp,w,c
  6693  001944  B4D8               	btfsc	status,2,c
  6694  001946  D003               	goto	u4250
  6695  001948  5026               	movf	___flmul@bexp,w,c
  6696  00194A  A4D8               	btfss	status,2,c
  6697  00194C  D009               	goto	l4527
  6698  00194E                     u4250:
  6699  00194E  0E00               	movlw	0
  6700  001950  6E14               	movwf	?___flmul,c
  6701  001952  0E00               	movlw	0
  6702  001954  6E15               	movwf	?___flmul+1,c
  6703  001956  0E00               	movlw	0
  6704  001958  6E16               	movwf	?___flmul+2,c
  6705  00195A  0E00               	movlw	0
  6706  00195C  6E17               	movwf	?___flmul+3,c
  6707  00195E  0012               	return	
  6708  001960                     l4527:
  6709  001960  501A               	movf	___flmul@a+2,w,c
  6710  001962  0214               	mulwf	___flmul@b,c
  6711  001964  CFF3 F02B          	movff	prodl,___flmul@temp
  6712  001968  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6713  00196C  502B               	movf	___flmul@temp,w,c
  6714  00196E  6E22               	movwf	___flmul@grs,c
  6715  001970  6A23               	clrf	___flmul@grs+1,c
  6716  001972  6A24               	clrf	___flmul@grs+2,c
  6717  001974  6A25               	clrf	___flmul@grs+3,c
  6718  001976  502C               	movf	___flmul@temp+1,w,c
  6719  001978  6E27               	movwf	___flmul@prod,c
  6720  00197A  6A28               	clrf	___flmul@prod+1,c
  6721  00197C  6A29               	clrf	___flmul@prod+2,c
  6722  00197E  6A2A               	clrf	___flmul@prod+3,c
  6723  001980  5019               	movf	___flmul@a+1,w,c
  6724  001982  0215               	mulwf	___flmul@b+1,c
  6725  001984  CFF3 F02B          	movff	prodl,___flmul@temp
  6726  001988  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6727  00198C  502B               	movf	___flmul@temp,w,c
  6728  00198E  2622               	addwf	___flmul@grs,f,c
  6729  001990  0E00               	movlw	0
  6730  001992  2223               	addwfc	___flmul@grs+1,f,c
  6731  001994  2224               	addwfc	___flmul@grs+2,f,c
  6732  001996  2225               	addwfc	___flmul@grs+3,f,c
  6733  001998  502C               	movf	___flmul@temp+1,w,c
  6734  00199A  2627               	addwf	___flmul@prod,f,c
  6735  00199C  0E00               	movlw	0
  6736  00199E  2228               	addwfc	___flmul@prod+1,f,c
  6737  0019A0  2229               	addwfc	___flmul@prod+2,f,c
  6738  0019A2  222A               	addwfc	___flmul@prod+3,f,c
  6739  0019A4  5018               	movf	___flmul@a,w,c
  6740  0019A6  0216               	mulwf	___flmul@b+2,c
  6741  0019A8  CFF3 F02B          	movff	prodl,___flmul@temp
  6742  0019AC  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6743  0019B0  502B               	movf	___flmul@temp,w,c
  6744  0019B2  2622               	addwf	___flmul@grs,f,c
  6745  0019B4  0E00               	movlw	0
  6746  0019B6  2223               	addwfc	___flmul@grs+1,f,c
  6747  0019B8  2224               	addwfc	___flmul@grs+2,f,c
  6748  0019BA  2225               	addwfc	___flmul@grs+3,f,c
  6749  0019BC  502C               	movf	___flmul@temp+1,w,c
  6750  0019BE  2627               	addwf	___flmul@prod,f,c
  6751  0019C0  0E00               	movlw	0
  6752  0019C2  2228               	addwfc	___flmul@prod+1,f,c
  6753  0019C4  2229               	addwfc	___flmul@prod+2,f,c
  6754  0019C6  222A               	addwfc	___flmul@prod+3,f,c
  6755  0019C8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6756  0019CC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6757  0019D0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6758  0019D4  6A22               	clrf	___flmul@grs,c
  6759  0019D6  5018               	movf	___flmul@a,w,c
  6760  0019D8  0215               	mulwf	___flmul@b+1,c
  6761  0019DA  CFF3 F02B          	movff	prodl,___flmul@temp
  6762  0019DE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6763  0019E2  502B               	movf	___flmul@temp,w,c
  6764  0019E4  2622               	addwf	___flmul@grs,f,c
  6765  0019E6  502C               	movf	___flmul@temp+1,w,c
  6766  0019E8  2223               	addwfc	___flmul@grs+1,f,c
  6767  0019EA  0E00               	movlw	0
  6768  0019EC  2224               	addwfc	___flmul@grs+2,f,c
  6769  0019EE  0E00               	movlw	0
  6770  0019F0  2225               	addwfc	___flmul@grs+3,f,c
  6771  0019F2  5019               	movf	___flmul@a+1,w,c
  6772  0019F4  0214               	mulwf	___flmul@b,c
  6773  0019F6  CFF3 F02B          	movff	prodl,___flmul@temp
  6774  0019FA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6775  0019FE  502B               	movf	___flmul@temp,w,c
  6776  001A00  2622               	addwf	___flmul@grs,f,c
  6777  001A02  502C               	movf	___flmul@temp+1,w,c
  6778  001A04  2223               	addwfc	___flmul@grs+1,f,c
  6779  001A06  0E00               	movlw	0
  6780  001A08  2224               	addwfc	___flmul@grs+2,f,c
  6781  001A0A  0E00               	movlw	0
  6782  001A0C  2225               	addwfc	___flmul@grs+3,f,c
  6783  001A0E  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6784  001A12  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6785  001A16  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6786  001A1A  6A22               	clrf	___flmul@grs,c
  6787  001A1C  5018               	movf	___flmul@a,w,c
  6788  001A1E  0214               	mulwf	___flmul@b,c
  6789  001A20  CFF3 F02B          	movff	prodl,___flmul@temp
  6790  001A24  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6791  001A28  502B               	movf	___flmul@temp,w,c
  6792  001A2A  2622               	addwf	___flmul@grs,f,c
  6793  001A2C  502C               	movf	___flmul@temp+1,w,c
  6794  001A2E  2223               	addwfc	___flmul@grs+1,f,c
  6795  001A30  0E00               	movlw	0
  6796  001A32  2224               	addwfc	___flmul@grs+2,f,c
  6797  001A34  0E00               	movlw	0
  6798  001A36  2225               	addwfc	___flmul@grs+3,f,c
  6799  001A38  501A               	movf	___flmul@a+2,w,c
  6800  001A3A  0215               	mulwf	___flmul@b+1,c
  6801  001A3C  CFF3 F02B          	movff	prodl,___flmul@temp
  6802  001A40  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6803  001A44  502B               	movf	___flmul@temp,w,c
  6804  001A46  2627               	addwf	___flmul@prod,f,c
  6805  001A48  502C               	movf	___flmul@temp+1,w,c
  6806  001A4A  2228               	addwfc	___flmul@prod+1,f,c
  6807  001A4C  0E00               	movlw	0
  6808  001A4E  2229               	addwfc	___flmul@prod+2,f,c
  6809  001A50  0E00               	movlw	0
  6810  001A52  222A               	addwfc	___flmul@prod+3,f,c
  6811  001A54  5019               	movf	___flmul@a+1,w,c
  6812  001A56  0216               	mulwf	___flmul@b+2,c
  6813  001A58  CFF3 F02B          	movff	prodl,___flmul@temp
  6814  001A5C  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6815  001A60  502B               	movf	___flmul@temp,w,c
  6816  001A62  2627               	addwf	___flmul@prod,f,c
  6817  001A64  502C               	movf	___flmul@temp+1,w,c
  6818  001A66  2228               	addwfc	___flmul@prod+1,f,c
  6819  001A68  0E00               	movlw	0
  6820  001A6A  2229               	addwfc	___flmul@prod+2,f,c
  6821  001A6C  0E00               	movlw	0
  6822  001A6E  222A               	addwfc	___flmul@prod+3,f,c
  6823  001A70  501A               	movf	___flmul@a+2,w,c
  6824  001A72  0216               	mulwf	___flmul@b+2,c
  6825  001A74  CFF3 F02B          	movff	prodl,___flmul@temp
  6826  001A78  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6827  001A7C  502B               	movf	___flmul@temp,w,c
  6828  001A7E  6E1C               	movwf	??___flmul& (0+255),c
  6829  001A80  502C               	movf	___flmul@temp+1,w,c
  6830  001A82  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6831  001A84  6A1E               	clrf	(??___flmul+2)& (0+255),c
  6832  001A86  6A1F               	clrf	(??___flmul+3)& (0+255),c
  6833  001A88  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  6834  001A8C  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  6835  001A90  C01C  F01D         	movff	??___flmul,??___flmul+1
  6836  001A94  6A1C               	clrf	??___flmul,c
  6837  001A96  501C               	movf	??___flmul,w,c
  6838  001A98  2627               	addwf	___flmul@prod,f,c
  6839  001A9A  501D               	movf	??___flmul+1,w,c
  6840  001A9C  2228               	addwfc	___flmul@prod+1,f,c
  6841  001A9E  501E               	movf	??___flmul+2,w,c
  6842  001AA0  2229               	addwfc	___flmul@prod+2,f,c
  6843  001AA2  501F               	movf	??___flmul+3,w,c
  6844  001AA4  222A               	addwfc	___flmul@prod+3,f,c
  6845  001AA6  C022  F01C         	movff	___flmul@grs,??___flmul
  6846  001AAA  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
  6847  001AAE  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
  6848  001AB2  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
  6849  001AB6  0E19               	movlw	25
  6850  001AB8  D005               	goto	u4260
  6851  001ABA                     u4265:
  6852  001ABA  90D8               	bcf	status,0,c
  6853  001ABC  321F               	rrcf	??___flmul+3,f,c
  6854  001ABE  321E               	rrcf	??___flmul+2,f,c
  6855  001AC0  321D               	rrcf	??___flmul+1,f,c
  6856  001AC2  321C               	rrcf	??___flmul,f,c
  6857  001AC4                     u4260:
  6858  001AC4  2EE8               	decfsz	wreg,f,c
  6859  001AC6  D7F9               	goto	u4265
  6860  001AC8  501C               	movf	??___flmul,w,c
  6861  001ACA  2627               	addwf	___flmul@prod,f,c
  6862  001ACC  501D               	movf	??___flmul+1,w,c
  6863  001ACE  2228               	addwfc	___flmul@prod+1,f,c
  6864  001AD0  501E               	movf	??___flmul+2,w,c
  6865  001AD2  2229               	addwfc	___flmul@prod+2,f,c
  6866  001AD4  501F               	movf	??___flmul+3,w,c
  6867  001AD6  222A               	addwfc	___flmul@prod+3,f,c
  6868  001AD8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6869  001ADC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6870  001AE0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6871  001AE4  6A22               	clrf	___flmul@grs,c
  6872  001AE6  5021               	movf	___flmul@aexp,w,c
  6873  001AE8  C026  F01C         	movff	___flmul@bexp,??___flmul
  6874  001AEC  6A1D               	clrf	(??___flmul+1)& (0+255),c
  6875  001AEE  261C               	addwf	??___flmul,f,c
  6876  001AF0  0E00               	movlw	0
  6877  001AF2  221D               	addwfc	??___flmul+1,f,c
  6878  001AF4  0E82               	movlw	130
  6879  001AF6  241C               	addwf	??___flmul,w,c
  6880  001AF8  6E2B               	movwf	___flmul@temp,c
  6881  001AFA  0EFF               	movlw	255
  6882  001AFC  201D               	addwfc	??___flmul+1,w,c
  6883  001AFE  6E2C               	movwf	___flmul@temp+1,c
  6884  001B00  D00F               	goto	l4575
  6885  001B02                     l4569:
  6886  001B02  90D8               	bcf	status,0,c
  6887  001B04  3627               	rlcf	___flmul@prod,f,c
  6888  001B06  3628               	rlcf	___flmul@prod+1,f,c
  6889  001B08  3629               	rlcf	___flmul@prod+2,f,c
  6890  001B0A  362A               	rlcf	___flmul@prod+3,f,c
  6891  001B0C  BE25               	btfsc	___flmul@grs+3,7,c
  6892  001B0E  8027               	bsf	___flmul@prod,0,c
  6893  001B10  90D8               	bcf	status,0,c
  6894  001B12  3622               	rlcf	___flmul@grs,f,c
  6895  001B14  3623               	rlcf	___flmul@grs+1,f,c
  6896  001B16  3624               	rlcf	___flmul@grs+2,f,c
  6897  001B18  3625               	rlcf	___flmul@grs+3,f,c
  6898  001B1A  062B               	decf	___flmul@temp,f,c
  6899  001B1C  A0D8               	btfss	status,0,c
  6900  001B1E  062C               	decf	___flmul@temp+1,f,c
  6901  001B20                     l4575:
  6902  001B20  AE29               	btfss	___flmul@prod+2,7,c
  6903  001B22  D7EF               	goto	l4569
  6904  001B24  0E00               	movlw	0
  6905  001B26  6E21               	movwf	___flmul@aexp,c
  6906  001B28  AE25               	btfss	___flmul@grs+3,7,c
  6907  001B2A  D017               	goto	l960
  6908  001B2C  0EFF               	movlw	255
  6909  001B2E  1422               	andwf	___flmul@grs,w,c
  6910  001B30  6E1C               	movwf	??___flmul& (0+255),c
  6911  001B32  0EFF               	movlw	255
  6912  001B34  1423               	andwf	___flmul@grs+1,w,c
  6913  001B36  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6914  001B38  0EFF               	movlw	255
  6915  001B3A  1424               	andwf	___flmul@grs+2,w,c
  6916  001B3C  6E1E               	movwf	(??___flmul+2)& (0+255),c
  6917  001B3E  0E7F               	movlw	127
  6918  001B40  1425               	andwf	___flmul@grs+3,w,c
  6919  001B42  6E1F               	movwf	(??___flmul+3)& (0+255),c
  6920  001B44  501C               	movf	??___flmul,w,c
  6921  001B46  101D               	iorwf	??___flmul+1,w,c
  6922  001B48  101E               	iorwf	??___flmul+2,w,c
  6923  001B4A  101F               	iorwf	??___flmul+3,w,c
  6924  001B4C  B4D8               	btfsc	status,2,c
  6925  001B4E  D003               	goto	l961
  6926  001B50                     u4300:
  6927  001B50  0E01               	movlw	1
  6928  001B52  6E21               	movwf	___flmul@aexp,c
  6929  001B54  D002               	goto	l960
  6930  001B56                     l961:
  6931  001B56  B027               	btfsc	___flmul@prod,0,c
  6932  001B58  D7FB               	goto	u4300
  6933  001B5A                     l960:
  6934  001B5A  5021               	movf	___flmul@aexp,w,c
  6935  001B5C  B4D8               	btfsc	status,2,c
  6936  001B5E  D01F               	goto	l4595
  6937  001B60  0E01               	movlw	1
  6938  001B62  2627               	addwf	___flmul@prod,f,c
  6939  001B64  0E00               	movlw	0
  6940  001B66  2228               	addwfc	___flmul@prod+1,f,c
  6941  001B68  2229               	addwfc	___flmul@prod+2,f,c
  6942  001B6A  222A               	addwfc	___flmul@prod+3,f,c
  6943  001B6C  A02A               	btfss	___flmul@prod+3,0,c
  6944  001B6E  D017               	goto	l4595
  6945  001B70  C027  F01C         	movff	___flmul@prod,??___flmul
  6946  001B74  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  6947  001B78  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  6948  001B7C  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  6949  001B80  341F               	rlcf	??___flmul+3,w,c
  6950  001B82  321F               	rrcf	??___flmul+3,f,c
  6951  001B84  321E               	rrcf	??___flmul+2,f,c
  6952  001B86  321D               	rrcf	??___flmul+1,f,c
  6953  001B88  321C               	rrcf	??___flmul,f,c
  6954  001B8A  C01C  F027         	movff	??___flmul,___flmul@prod
  6955  001B8E  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  6956  001B92  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  6957  001B96  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  6958  001B9A  4A2B               	infsnz	___flmul@temp,f,c
  6959  001B9C  2A2C               	incf	___flmul@temp+1,f,c
  6960  001B9E                     l4595:
  6961  001B9E  BE2C               	btfsc	___flmul@temp+1,7,c
  6962  001BA0  D00D               	goto	l4599
  6963  001BA2  502C               	movf	___flmul@temp+1,w,c
  6964  001BA4  E103               	bnz	u4340
  6965  001BA6  282B               	incf	___flmul@temp,w,c
  6966  001BA8  A0D8               	btfss	status,0,c
  6967  001BAA  D008               	goto	l4599
  6968  001BAC                     u4340:
  6969  001BAC  0E00               	movlw	0
  6970  001BAE  6E27               	movwf	___flmul@prod,c
  6971  001BB0  0E00               	movlw	0
  6972  001BB2  6E28               	movwf	___flmul@prod+1,c
  6973  001BB4  0E80               	movlw	128
  6974  001BB6  6E29               	movwf	___flmul@prod+2,c
  6975  001BB8  0E7F               	movlw	127
  6976  001BBA  D020               	goto	L10
  6977  001BBC                     l4599:
  6978  001BBC  BE2C               	btfsc	___flmul@temp+1,7,c
  6979  001BBE  D005               	goto	u4350
  6980  001BC0  502C               	movf	___flmul@temp+1,w,c
  6981  001BC2  E10E               	bnz	l968
  6982  001BC4  042B               	decf	___flmul@temp,w,c
  6983  001BC6  B0D8               	btfsc	status,0,c
  6984  001BC8  D00B               	goto	l968
  6985  001BCA                     u4350:
  6986  001BCA  0E00               	movlw	0
  6987  001BCC  6E27               	movwf	___flmul@prod,c
  6988  001BCE  0E00               	movlw	0
  6989  001BD0  6E28               	movwf	___flmul@prod+1,c
  6990  001BD2  0E00               	movlw	0
  6991  001BD4  6E29               	movwf	___flmul@prod+2,c
  6992  001BD6  0E00               	movlw	0
  6993  001BD8  6E2A               	movwf	___flmul@prod+3,c
  6994  001BDA  0E00               	movlw	0
  6995  001BDC  6E20               	movwf	___flmul@sign,c
  6996  001BDE  D00F               	goto	l4611
  6997  001BE0                     l968:
  6998  001BE0  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  6999  001BE4  0EFF               	movlw	255
  7000  001BE6  1627               	andwf	___flmul@prod,f,c
  7001  001BE8  0EFF               	movlw	255
  7002  001BEA  1628               	andwf	___flmul@prod+1,f,c
  7003  001BEC  0E7F               	movlw	127
  7004  001BEE  1629               	andwf	___flmul@prod+2,f,c
  7005  001BF0  0E00               	movlw	0
  7006  001BF2  162A               	andwf	___flmul@prod+3,f,c
  7007  001BF4  B026               	btfsc	___flmul@bexp,0,c
  7008  001BF6  8E29               	bsf	___flmul@prod+2,7,c
  7009  001BF8  90D8               	bcf	status,0,c
  7010  001BFA  3026               	rrcf	___flmul@bexp,w,c
  7011  001BFC                     L10:
  7012  001BFC  6E2A               	movwf	___flmul@prod+3,c
  7013  001BFE                     l4611:
  7014  001BFE  5020               	movf	___flmul@sign,w,c
  7015  001C00  122A               	iorwf	___flmul@prod+3,f,c
  7016  001C02  C027  F014         	movff	___flmul@prod,?___flmul
  7017  001C06  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  7018  001C0A  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  7019  001C0E  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  7020  001C12  0012               	return		;funcret
  7021  001C14                     __end_of___flmul:
  7022                           	opt callstack 0
  7023                           
  7024 ;; *************** function ___fladd *****************
  7025 ;; Defined at:
  7026 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  b               4   44[COMRAM] unsigned char 
  7029 ;;  a               4   48[COMRAM] unsigned char 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  grs             1   59[COMRAM] unsigned char 
  7032 ;;  bexp            1   58[COMRAM] unsigned char 
  7033 ;;  aexp            1   57[COMRAM] unsigned char 
  7034 ;;  signs           1   56[COMRAM] unsigned char 
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  4   44[COMRAM] unsigned char 
  7037 ;; Registers used:
  7038 ;;		wreg, status,2, status,0
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7044 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7045 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7046 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7047 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7048 ;;Total ram usage:       16 bytes
  7049 ;; Hardware stack levels used:    1
  7050 ;; Hardware stack levels required when called:    1
  7051 ;; This function calls:
  7052 ;;		Nothing
  7053 ;; This function is called by:
  7054 ;;		_fijarVelocidad
  7055 ;;		___flsub
  7056 ;;		_sinf
  7057 ;;		___cosdf
  7058 ;;		___rem_pio2f
  7059 ;;		___sindf
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           	psect	text38
  7064  001F5A                     __ptext38:
  7065                           	opt callstack 0
  7066  001F5A                     ___fladd:
  7067                           	opt callstack 27
  7068                           
  7069                           ;incstack = 0
  7070  001F5A  5030               	movf	___fladd@b+3,w,c
  7071  001F5C  0B80               	andlw	128
  7072  001F5E  6E39               	movwf	___fladd@signs,c
  7073  001F60  5030               	movf	___fladd@b+3,w,c
  7074  001F62  2430               	addwf	___fladd@b+3,w,c
  7075  001F64  6E3B               	movwf	___fladd@bexp,c
  7076  001F66  BE2F               	btfsc	___fladd@b+2,7,c
  7077  001F68  803B               	bsf	___fladd@bexp,0,c
  7078  001F6A  503B               	movf	___fladd@bexp,w,c
  7079  001F6C  B4D8               	btfsc	status,2,c
  7080  001F6E  D00D               	goto	l4293
  7081  001F70  283B               	incf	___fladd@bexp,w,c
  7082  001F72  A4D8               	btfss	status,2,c
  7083  001F74  D008               	goto	l4289
  7084  001F76  0E00               	movlw	0
  7085  001F78  6E2D               	movwf	___fladd@b,c
  7086  001F7A  0E00               	movlw	0
  7087  001F7C  6E2E               	movwf	___fladd@b+1,c
  7088  001F7E  0E00               	movlw	0
  7089  001F80  6E2F               	movwf	___fladd@b+2,c
  7090  001F82  0E00               	movlw	0
  7091  001F84  6E30               	movwf	___fladd@b+3,c
  7092  001F86                     l4289:
  7093  001F86  8E2F               	bsf	___fladd@b+2,7,c
  7094  001F88  D006               	goto	L11
  7095  001F8A                     l4293:
  7096  001F8A  0E00               	movlw	0
  7097  001F8C  6E2D               	movwf	___fladd@b,c
  7098  001F8E  0E00               	movlw	0
  7099  001F90  6E2E               	movwf	___fladd@b+1,c
  7100  001F92  0E00               	movlw	0
  7101  001F94  6E2F               	movwf	___fladd@b+2,c
  7102  001F96                     L11:
  7103  001F96  0E00               	movlw	0
  7104  001F98  6E30               	movwf	___fladd@b+3,c
  7105  001F9A  5034               	movf	___fladd@a+3,w,c
  7106  001F9C  0B80               	andlw	128
  7107  001F9E  6E3A               	movwf	___fladd@aexp,c
  7108  001FA0  5039               	movf	___fladd@signs,w,c
  7109  001FA2  183A               	xorwf	___fladd@aexp,w,c
  7110  001FA4  A4D8               	btfss	status,2,c
  7111  001FA6  8C39               	bsf	___fladd@signs,6,c
  7112  001FA8  5034               	movf	___fladd@a+3,w,c
  7113  001FAA  2434               	addwf	___fladd@a+3,w,c
  7114  001FAC  6E3A               	movwf	___fladd@aexp,c
  7115  001FAE  BE33               	btfsc	___fladd@a+2,7,c
  7116  001FB0  803A               	bsf	___fladd@aexp,0,c
  7117  001FB2  503A               	movf	___fladd@aexp,w,c
  7118  001FB4  B4D8               	btfsc	status,2,c
  7119  001FB6  D00D               	goto	l4317
  7120  001FB8  283A               	incf	___fladd@aexp,w,c
  7121  001FBA  A4D8               	btfss	status,2,c
  7122  001FBC  D008               	goto	l4313
  7123  001FBE  0E00               	movlw	0
  7124  001FC0  6E31               	movwf	___fladd@a,c
  7125  001FC2  0E00               	movlw	0
  7126  001FC4  6E32               	movwf	___fladd@a+1,c
  7127  001FC6  0E00               	movlw	0
  7128  001FC8  6E33               	movwf	___fladd@a+2,c
  7129  001FCA  0E00               	movlw	0
  7130  001FCC  6E34               	movwf	___fladd@a+3,c
  7131  001FCE                     l4313:
  7132  001FCE  8E33               	bsf	___fladd@a+2,7,c
  7133  001FD0  D006               	goto	L12
  7134  001FD2                     l4317:
  7135  001FD2  0E00               	movlw	0
  7136  001FD4  6E31               	movwf	___fladd@a,c
  7137  001FD6  0E00               	movlw	0
  7138  001FD8  6E32               	movwf	___fladd@a+1,c
  7139  001FDA  0E00               	movlw	0
  7140  001FDC  6E33               	movwf	___fladd@a+2,c
  7141  001FDE                     L12:
  7142  001FDE  0E00               	movlw	0
  7143  001FE0  6E34               	movwf	___fladd@a+3,c
  7144  001FE2  503B               	movf	___fladd@bexp,w,c
  7145  001FE4  5C3A               	subwf	___fladd@aexp,w,c
  7146  001FE6  B0D8               	btfsc	status,0,c
  7147  001FE8  D022               	goto	l4355
  7148  001FEA  AC39               	btfss	___fladd@signs,6,c
  7149  001FEC  D002               	goto	l4325
  7150  001FEE  0E80               	movlw	128
  7151  001FF0  1A39               	xorwf	___fladd@signs,f,c
  7152  001FF2                     l4325:
  7153  001FF2  C03B  F03C         	movff	___fladd@bexp,___fladd@grs
  7154  001FF6  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  7155  001FFA  C03C  F03A         	movff	___fladd@grs,___fladd@aexp
  7156  001FFE  C02D  F03C         	movff	___fladd@b,___fladd@grs
  7157  002002  C031  F02D         	movff	___fladd@a,___fladd@b
  7158  002006  C03C  F031         	movff	___fladd@grs,___fladd@a
  7159  00200A  C02E  F03C         	movff	___fladd@b+1,___fladd@grs
  7160  00200E  C032  F02E         	movff	___fladd@a+1,___fladd@b+1
  7161  002012  C03C  F032         	movff	___fladd@grs,___fladd@a+1
  7162  002016  C02F  F03C         	movff	___fladd@b+2,___fladd@grs
  7163  00201A  C033  F02F         	movff	___fladd@a+2,___fladd@b+2
  7164  00201E  C03C  F033         	movff	___fladd@grs,___fladd@a+2
  7165  002022  C030  F03C         	movff	___fladd@b+3,___fladd@grs
  7166  002026  C034  F030         	movff	___fladd@a+3,___fladd@b+3
  7167  00202A  C03C  F034         	movff	___fladd@grs,___fladd@a+3
  7168  00202E                     l4355:
  7169  00202E  0E00               	movlw	0
  7170  002030  6E3C               	movwf	___fladd@grs,c
  7171  002032  503B               	movf	___fladd@bexp,w,c
  7172  002034  C03A  F035         	movff	___fladd@aexp,??___fladd
  7173  002038  6A36               	clrf	(??___fladd+1)& (0+255),c
  7174  00203A  5E35               	subwf	??___fladd,f,c
  7175  00203C  0E00               	movlw	0
  7176  00203E  5A36               	subwfb	??___fladd+1,f,c
  7177  002040  BE36               	btfsc	??___fladd+1,7,c
  7178  002042  D02C               	goto	l866
  7179  002044  5036               	movf	??___fladd+1,w,c
  7180  002046  E104               	bnz	u3870
  7181  002048  0E1A               	movlw	26
  7182  00204A  5C35               	subwf	??___fladd,w,c
  7183  00204C  A0D8               	btfss	status,0,c
  7184  00204E  D026               	goto	l866
  7185  002050                     u3870:
  7186  002050  502D               	movf	___fladd@b,w,c
  7187  002052  102E               	iorwf	___fladd@b+1,w,c
  7188  002054  102F               	iorwf	___fladd@b+2,w,c
  7189  002056  1030               	iorwf	___fladd@b+3,w,c
  7190  002058  B4D8               	btfsc	status,2,c
  7191  00205A  D002               	goto	u3880
  7192  00205C  0E01               	movlw	1
  7193  00205E  D001               	goto	u3890
  7194  002060                     u3880:
  7195  002060  0E00               	movlw	0
  7196  002062                     u3890:
  7197  002062  6E3C               	movwf	___fladd@grs,c
  7198  002064  0E00               	movlw	0
  7199  002066  6E2D               	movwf	___fladd@b,c
  7200  002068  0E00               	movlw	0
  7201  00206A  6E2E               	movwf	___fladd@b+1,c
  7202  00206C  0E00               	movlw	0
  7203  00206E  6E2F               	movwf	___fladd@b+2,c
  7204  002070  0E00               	movlw	0
  7205  002072  6E30               	movwf	___fladd@b+3,c
  7206  002074  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  7207  002078  D015               	goto	u3920
  7208  00207A                     l867:
  7209  00207A  A03C               	btfss	___fladd@grs,0,c
  7210  00207C  D005               	goto	l4367
  7211  00207E  90D8               	bcf	status,0,c
  7212  002080  303C               	rrcf	___fladd@grs,w,c
  7213  002082  0901               	iorlw	1
  7214  002084  6E3C               	movwf	___fladd@grs,c
  7215  002086  D002               	goto	l4369
  7216  002088                     l4367:
  7217  002088  90D8               	bcf	status,0,c
  7218  00208A  323C               	rrcf	___fladd@grs,f,c
  7219  00208C                     l4369:
  7220  00208C  B02D               	btfsc	___fladd@b,0,c
  7221  00208E  8E3C               	bsf	___fladd@grs,7,c
  7222  002090  3430               	rlcf	___fladd@b+3,w,c
  7223  002092  3230               	rrcf	___fladd@b+3,f,c
  7224  002094  322F               	rrcf	___fladd@b+2,f,c
  7225  002096  322E               	rrcf	___fladd@b+1,f,c
  7226  002098  322D               	rrcf	___fladd@b,f,c
  7227  00209A  2A3B               	incf	___fladd@bexp,f,c
  7228  00209C                     l866:
  7229  00209C  503A               	movf	___fladd@aexp,w,c
  7230  00209E  5C3B               	subwf	___fladd@bexp,w,c
  7231  0020A0  A0D8               	btfss	status,0,c
  7232  0020A2  D7EB               	goto	l867
  7233  0020A4                     u3920:
  7234  0020A4  BC39               	btfsc	___fladd@signs,6,c
  7235  0020A6  D028               	goto	l4401
  7236  0020A8  503B               	movf	___fladd@bexp,w,c
  7237  0020AA  A4D8               	btfss	status,2,c
  7238  0020AC  D009               	goto	l4383
  7239  0020AE  0E00               	movlw	0
  7240  0020B0  6E2D               	movwf	?___fladd,c
  7241  0020B2  0E00               	movlw	0
  7242  0020B4  6E2E               	movwf	?___fladd+1,c
  7243  0020B6  0E00               	movlw	0
  7244  0020B8  6E2F               	movwf	?___fladd+2,c
  7245  0020BA  0E00               	movlw	0
  7246  0020BC  6E30               	movwf	?___fladd+3,c
  7247  0020BE  0012               	return	
  7248  0020C0                     l4383:
  7249  0020C0  5031               	movf	___fladd@a,w,c
  7250  0020C2  262D               	addwf	___fladd@b,f,c
  7251  0020C4  5032               	movf	___fladd@a+1,w,c
  7252  0020C6  222E               	addwfc	___fladd@b+1,f,c
  7253  0020C8  5033               	movf	___fladd@a+2,w,c
  7254  0020CA  222F               	addwfc	___fladd@b+2,f,c
  7255  0020CC  5034               	movf	___fladd@a+3,w,c
  7256  0020CE  2230               	addwfc	___fladd@b+3,f,c
  7257  0020D0  A030               	btfss	___fladd@b+3,0,c
  7258  0020D2  D071               	goto	u4050
  7259  0020D4  A03C               	btfss	___fladd@grs,0,c
  7260  0020D6  D005               	goto	l4391
  7261  0020D8  90D8               	bcf	status,0,c
  7262  0020DA  303C               	rrcf	___fladd@grs,w,c
  7263  0020DC  0901               	iorlw	1
  7264  0020DE  6E3C               	movwf	___fladd@grs,c
  7265  0020E0  D002               	goto	l4393
  7266  0020E2                     l4391:
  7267  0020E2  90D8               	bcf	status,0,c
  7268  0020E4  323C               	rrcf	___fladd@grs,f,c
  7269  0020E6                     l4393:
  7270  0020E6  B02D               	btfsc	___fladd@b,0,c
  7271  0020E8  8E3C               	bsf	___fladd@grs,7,c
  7272  0020EA  3430               	rlcf	___fladd@b+3,w,c
  7273  0020EC  3230               	rrcf	___fladd@b+3,f,c
  7274  0020EE  322F               	rrcf	___fladd@b+2,f,c
  7275  0020F0  322E               	rrcf	___fladd@b+1,f,c
  7276  0020F2  322D               	rrcf	___fladd@b,f,c
  7277  0020F4  2A3B               	incf	___fladd@bexp,f,c
  7278  0020F6  D05F               	goto	u4050
  7279  0020F8                     l4401:
  7280  0020F8  5031               	movf	___fladd@a,w,c
  7281  0020FA  5C2D               	subwf	___fladd@b,w,c
  7282  0020FC  5032               	movf	___fladd@a+1,w,c
  7283  0020FE  582E               	subwfb	___fladd@b+1,w,c
  7284  002100  5033               	movf	___fladd@a+2,w,c
  7285  002102  582F               	subwfb	___fladd@b+2,w,c
  7286  002104  5030               	movf	___fladd@b+3,w,c
  7287  002106  0A80               	xorlw	128
  7288  002108  6E35               	movwf	??___fladd& (0+255),c
  7289  00210A  5034               	movf	___fladd@a+3,w,c
  7290  00210C  0A80               	xorlw	128
  7291  00210E  5835               	subwfb	??___fladd& (0+255),w,c
  7292  002110  B0D8               	btfsc	status,0,c
  7293  002112  D025               	goto	l4411
  7294  002114  502D               	movf	___fladd@b,w,c
  7295  002116  5C31               	subwf	___fladd@a,w,c
  7296  002118  6E35               	movwf	??___fladd& (0+255),c
  7297  00211A  502E               	movf	___fladd@b+1,w,c
  7298  00211C  5832               	subwfb	___fladd@a+1,w,c
  7299  00211E  6E36               	movwf	(??___fladd+1)& (0+255),c
  7300  002120  502F               	movf	___fladd@b+2,w,c
  7301  002122  5833               	subwfb	___fladd@a+2,w,c
  7302  002124  6E37               	movwf	(??___fladd+2)& (0+255),c
  7303  002126  5030               	movf	___fladd@b+3,w,c
  7304  002128  5834               	subwfb	___fladd@a+3,w,c
  7305  00212A  6E38               	movwf	(??___fladd+3)& (0+255),c
  7306  00212C  0EFF               	movlw	255
  7307  00212E  2435               	addwf	??___fladd,w,c
  7308  002130  6E2D               	movwf	___fladd@b,c
  7309  002132  0EFF               	movlw	255
  7310  002134  2036               	addwfc	??___fladd+1,w,c
  7311  002136  6E2E               	movwf	___fladd@b+1,c
  7312  002138  0EFF               	movlw	255
  7313  00213A  2037               	addwfc	??___fladd+2,w,c
  7314  00213C  6E2F               	movwf	___fladd@b+2,c
  7315  00213E  0EFF               	movlw	255
  7316  002140  2038               	addwfc	??___fladd+3,w,c
  7317  002142  6E30               	movwf	___fladd@b+3,c
  7318  002144  0E80               	movlw	128
  7319  002146  1A39               	xorwf	___fladd@signs,f,c
  7320  002148  6C3C               	negf	___fladd@grs,c
  7321  00214A  503C               	movf	___fladd@grs,w,c
  7322  00214C  A4D8               	btfss	status,2,c
  7323  00214E  D00F               	goto	l882
  7324  002150  0E01               	movlw	1
  7325  002152  262D               	addwf	___fladd@b,f,c
  7326  002154  0E00               	movlw	0
  7327  002156  222E               	addwfc	___fladd@b+1,f,c
  7328  002158  222F               	addwfc	___fladd@b+2,f,c
  7329  00215A  2230               	addwfc	___fladd@b+3,f,c
  7330  00215C  D008               	goto	l882
  7331  00215E                     l4411:
  7332  00215E  5031               	movf	___fladd@a,w,c
  7333  002160  5E2D               	subwf	___fladd@b,f,c
  7334  002162  5032               	movf	___fladd@a+1,w,c
  7335  002164  5A2E               	subwfb	___fladd@b+1,f,c
  7336  002166  5033               	movf	___fladd@a+2,w,c
  7337  002168  5A2F               	subwfb	___fladd@b+2,f,c
  7338  00216A  5034               	movf	___fladd@a+3,w,c
  7339  00216C  5A30               	subwfb	___fladd@b+3,f,c
  7340  00216E                     l882:
  7341  00216E  502D               	movf	___fladd@b,w,c
  7342  002170  102E               	iorwf	___fladd@b+1,w,c
  7343  002172  102F               	iorwf	___fladd@b+2,w,c
  7344  002174  1030               	iorwf	___fladd@b+3,w,c
  7345  002176  A4D8               	btfss	status,2,c
  7346  002178  D01C               	goto	l4435
  7347  00217A  503C               	movf	___fladd@grs,w,c
  7348  00217C  A4D8               	btfss	status,2,c
  7349  00217E  D019               	goto	l4435
  7350  002180  0E00               	movlw	0
  7351  002182  6E2D               	movwf	?___fladd,c
  7352  002184  0E00               	movlw	0
  7353  002186  6E2E               	movwf	?___fladd+1,c
  7354  002188  0E00               	movlw	0
  7355  00218A  6E2F               	movwf	?___fladd+2,c
  7356  00218C  0E00               	movlw	0
  7357  00218E  6E30               	movwf	?___fladd+3,c
  7358  002190  0012               	return	
  7359  002192                     l4419:
  7360  002192  90D8               	bcf	status,0,c
  7361  002194  362D               	rlcf	___fladd@b,f,c
  7362  002196  362E               	rlcf	___fladd@b+1,f,c
  7363  002198  362F               	rlcf	___fladd@b+2,f,c
  7364  00219A  3630               	rlcf	___fladd@b+3,f,c
  7365  00219C  BE3C               	btfsc	___fladd@grs,7,c
  7366  00219E  802D               	bsf	___fladd@b,0,c
  7367  0021A0  A03C               	btfss	___fladd@grs,0,c
  7368  0021A2  D002               	goto	l4429
  7369  0021A4  80D8               	bsf	status,0,c
  7370  0021A6  D001               	goto	L13
  7371  0021A8                     l4429:
  7372  0021A8  90D8               	bcf	status,0,c
  7373  0021AA                     L13:
  7374  0021AA  363C               	rlcf	___fladd@grs,f,c
  7375  0021AC  503B               	movf	___fladd@bexp,w,c
  7376  0021AE  A4D8               	btfss	status,2,c
  7377  0021B0  063B               	decf	___fladd@bexp,f,c
  7378  0021B2                     l4435:
  7379  0021B2  AE2F               	btfss	___fladd@b+2,7,c
  7380  0021B4  D7EE               	goto	l4419
  7381  0021B6                     u4050:
  7382  0021B6  0E00               	movlw	0
  7383  0021B8  6E3A               	movwf	___fladd@aexp,c
  7384  0021BA  AE3C               	btfss	___fladd@grs,7,c
  7385  0021BC  D00B               	goto	l891
  7386  0021BE  C03C  F035         	movff	___fladd@grs,??___fladd
  7387  0021C2  0E7F               	movlw	127
  7388  0021C4  1635               	andwf	??___fladd,f,c
  7389  0021C6  B4D8               	btfsc	status,2,c
  7390  0021C8  D003               	goto	l892
  7391  0021CA                     u4070:
  7392  0021CA  0E01               	movlw	1
  7393  0021CC  6E3A               	movwf	___fladd@aexp,c
  7394  0021CE  D002               	goto	l891
  7395  0021D0                     l892:
  7396  0021D0  B02D               	btfsc	___fladd@b,0,c
  7397  0021D2  D7FB               	goto	u4070
  7398  0021D4                     l891:
  7399  0021D4  503A               	movf	___fladd@aexp,w,c
  7400  0021D6  B4D8               	btfsc	status,2,c
  7401  0021D8  D020               	goto	l4455
  7402  0021DA  0E01               	movlw	1
  7403  0021DC  262D               	addwf	___fladd@b,f,c
  7404  0021DE  0E00               	movlw	0
  7405  0021E0  222E               	addwfc	___fladd@b+1,f,c
  7406  0021E2  222F               	addwfc	___fladd@b+2,f,c
  7407  0021E4  2230               	addwfc	___fladd@b+3,f,c
  7408  0021E6  A030               	btfss	___fladd@b+3,0,c
  7409  0021E8  D018               	goto	l4455
  7410  0021EA  C02D  F035         	movff	___fladd@b,??___fladd
  7411  0021EE  C02E  F036         	movff	___fladd@b+1,??___fladd+1
  7412  0021F2  C02F  F037         	movff	___fladd@b+2,??___fladd+2
  7413  0021F6  C030  F038         	movff	___fladd@b+3,??___fladd+3
  7414  0021FA  3438               	rlcf	??___fladd+3,w,c
  7415  0021FC  3238               	rrcf	??___fladd+3,f,c
  7416  0021FE  3237               	rrcf	??___fladd+2,f,c
  7417  002200  3236               	rrcf	??___fladd+1,f,c
  7418  002202  3235               	rrcf	??___fladd,f,c
  7419  002204  C035  F02D         	movff	??___fladd,___fladd@b
  7420  002208  C036  F02E         	movff	??___fladd+1,___fladd@b+1
  7421  00220C  C037  F02F         	movff	??___fladd+2,___fladd@b+2
  7422  002210  C038  F030         	movff	??___fladd+3,___fladd@b+3
  7423  002214  283B               	incf	___fladd@bexp,w,c
  7424  002216  A4D8               	btfss	status,2,c
  7425  002218  2A3B               	incf	___fladd@bexp,f,c
  7426  00221A                     l4455:
  7427  00221A  283B               	incf	___fladd@bexp,w,c
  7428  00221C  B4D8               	btfsc	status,2,c
  7429  00221E  D003               	goto	u4130
  7430  002220  503B               	movf	___fladd@bexp,w,c
  7431  002222  A4D8               	btfss	status,2,c
  7432  002224  D00D               	goto	l4463
  7433  002226                     u4130:
  7434  002226  0E00               	movlw	0
  7435  002228  6E2D               	movwf	___fladd@b,c
  7436  00222A  0E00               	movlw	0
  7437  00222C  6E2E               	movwf	___fladd@b+1,c
  7438  00222E  0E00               	movlw	0
  7439  002230  6E2F               	movwf	___fladd@b+2,c
  7440  002232  0E00               	movlw	0
  7441  002234  6E30               	movwf	___fladd@b+3,c
  7442  002236  503B               	movf	___fladd@bexp,w,c
  7443  002238  A4D8               	btfss	status,2,c
  7444  00223A  D002               	goto	l4463
  7445  00223C  0E00               	movlw	0
  7446  00223E  6E39               	movwf	___fladd@signs,c
  7447  002240                     l4463:
  7448  002240  A03B               	btfss	___fladd@bexp,0,c
  7449  002242  D002               	goto	l4467
  7450  002244  8E2F               	bsf	___fladd@b+2,7,c
  7451  002246  D001               	goto	l4469
  7452  002248                     l4467:
  7453  002248  9E2F               	bcf	___fladd@b+2,7,c
  7454  00224A                     l4469:
  7455  00224A  90D8               	bcf	status,0,c
  7456  00224C  303B               	rrcf	___fladd@bexp,w,c
  7457  00224E  6E30               	movwf	___fladd@b+3,c
  7458  002250  BE39               	btfsc	___fladd@signs,7,c
  7459  002252  8E30               	bsf	___fladd@b+3,7,c
  7460  002254  C02D  F02D         	movff	___fladd@b,?___fladd
  7461  002258  C02E  F02E         	movff	___fladd@b+1,?___fladd+1
  7462  00225C  C02F  F02F         	movff	___fladd@b+2,?___fladd+2
  7463  002260  C030  F030         	movff	___fladd@b+3,?___fladd+3
  7464  002264  0012               	return		;funcret
  7465  002266                     __end_of___fladd:
  7466                           	opt callstack 0
  7467                           
  7468 ;; *************** function _configuracionInicial *****************
  7469 ;; Defined at:
  7470 ;;		line 105 in file "auto.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;		None
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;		None
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      void 
  7477 ;; Registers used:
  7478 ;;		wreg, status,2, cstack
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7488 ;;Total ram usage:        0 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:    2
  7491 ;; This function calls:
  7492 ;;		_configurarInterrupciones
  7493 ;;		_configurarPWM7
  7494 ;;		_configurarPuertos
  7495 ;;		_configurarRS232
  7496 ;;		_configurarTMR5
  7497 ;; This function is called by:
  7498 ;;		_main
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text39
  7503  003628                     __ptext39:
  7504                           	opt callstack 0
  7505  003628                     _configuracionInicial:
  7506                           	opt callstack 28
  7507                           
  7508                           ;auto.c: 106:     configurarPuertos();
  7509                           
  7510                           ;incstack = 0
  7511  003628  EC46  F01B         	call	_configurarPuertos	;wreg free
  7512                           
  7513                           ;auto.c: 107:     configurarPWM7();
  7514  00362C  ECF8  F01A         	call	_configurarPWM7	;wreg free
  7515                           
  7516                           ;auto.c: 108:     configurarInterrupciones();
  7517  003630  EC3F  F01B         	call	_configurarInterrupciones	;wreg free
  7518                           
  7519                           ;auto.c: 109:     configurarRS232();
  7520  003634  EC08  F01B         	call	_configurarRS232	;wreg free
  7521                           
  7522                           ;auto.c: 110:     configurarTMR5();
  7523  003638  EC1F  F01B         	call	_configurarTMR5	;wreg free
  7524  00363C  0012               	return		;funcret
  7525  00363E                     __end_of_configuracionInicial:
  7526                           	opt callstack 0
  7527                           
  7528 ;; *************** function _configurarTMR5 *****************
  7529 ;; Defined at:
  7530 ;;		line 41 in file "./../LIBRERIAS/configuracion_auto.h"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;		None
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;		None
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  1    wreg      void 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7548 ;;Total ram usage:        0 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; Hardware stack levels required when called:    1
  7551 ;; This function calls:
  7552 ;;		Nothing
  7553 ;; This function is called by:
  7554 ;;		_configuracionInicial
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           	psect	text40
  7559  00363E                     __ptext40:
  7560                           	opt callstack 0
  7561  00363E                     _configurarTMR5:
  7562                           	opt callstack 28
  7563                           
  7564                           ;./../LIBRERIAS/configuracion_auto.h: 42:     TRISDbits.TRISD4 = 0;
  7565                           
  7566                           ;incstack = 0
  7567  00363E  9895               	bcf	3989,4,c	;volatile
  7568                           
  7569                           ;./../LIBRERIAS/configuracion_auto.h: 43:     PORTDbits.RD4 = 0;
  7570  003640  9883               	bcf	3971,4,c	;volatile
  7571                           
  7572                           ;./../LIBRERIAS/configuracion_auto.h: 44:     T5CON = 0x32;
  7573  003642  0E32               	movlw	50
  7574  003644  010F               	movlb	15	; () banked
  7575  003646  6F22               	movwf	34,b	;volatile
  7576                           
  7577                           ; BSR set to: 15
  7578                           ;./../LIBRERIAS/configuracion_auto.h: 45:     TMR5H = 0xFF;
  7579  003648  6924               	setf	36,b	;volatile
  7580                           
  7581                           ;./../LIBRERIAS/configuracion_auto.h: 46:     TMR5L = 0x6A;
  7582  00364A  0E6A               	movlw	106
  7583  00364C  6F23               	movwf	35,b	;volatile
  7584                           
  7585                           ; BSR set to: 15
  7586                           ;./../LIBRERIAS/configuracion_auto.h: 47:     PIE5bits.TMR5IE = 1;
  7587  00364E  8491               	bsf	3985,2,c	;volatile
  7588                           
  7589                           ; BSR set to: 15
  7590                           ;./../LIBRERIAS/configuracion_auto.h: 48:     PIR5bits.TMR5IF = 0;
  7591  003650  9498               	bcf	3992,2,c	;volatile
  7592                           
  7593                           ; BSR set to: 15
  7594  003652  0012               	return		;funcret
  7595  003654                     __end_of_configurarTMR5:
  7596                           	opt callstack 0
  7597                           
  7598 ;; *************** function _configurarRS232 *****************
  7599 ;; Defined at:
  7600 ;;		line 30 in file "./../LIBRERIAS/configuracion_auto.h"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;		None
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;		None
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1    wreg      void 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7618 ;;Total ram usage:        0 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; Hardware stack levels required when called:    1
  7621 ;; This function calls:
  7622 ;;		Nothing
  7623 ;; This function is called by:
  7624 ;;		_configuracionInicial
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           	psect	text41
  7629  003610                     __ptext41:
  7630                           	opt callstack 0
  7631  003610                     _configurarRS232:
  7632                           	opt callstack 28
  7633                           
  7634                           ;./../LIBRERIAS/configuracion_auto.h: 31:     TRISCbits.TRISC7 = 1;
  7635                           
  7636                           ; BSR set to: 15
  7637                           ;incstack = 0
  7638  003610  8E94               	bsf	3988,7,c	;volatile
  7639                           
  7640                           ;./../LIBRERIAS/configuracion_auto.h: 32:     TRISCbits.TRISC6 = 0;
  7641  003612  9C94               	bcf	3988,6,c	;volatile
  7642                           
  7643                           ;./../LIBRERIAS/configuracion_auto.h: 33:     TXSTA1 = 0x22;
  7644  003614  0E22               	movlw	34
  7645  003616  6EAD               	movwf	4013,c	;volatile
  7646                           
  7647                           ;./../LIBRERIAS/configuracion_auto.h: 34:     RCSTA1 = 0x90;
  7648  003618  0E90               	movlw	144
  7649  00361A  6EAC               	movwf	4012,c	;volatile
  7650                           
  7651                           ;./../LIBRERIAS/configuracion_auto.h: 35:     BAUDCON1bits.BRG16 = 0;
  7652  00361C  967E               	bcf	3966,3,c	;volatile
  7653                           
  7654                           ;./../LIBRERIAS/configuracion_auto.h: 36:     SPBRG1 = 77;
  7655  00361E  0E4D               	movlw	77
  7656  003620  6EB0               	movwf	4016,c	;volatile
  7657                           
  7658                           ;./../LIBRERIAS/configuracion_auto.h: 37:     PIR1bits.RC1IF = 0;
  7659  003622  9A9E               	bcf	3998,5,c	;volatile
  7660                           
  7661                           ;./../LIBRERIAS/configuracion_auto.h: 38:     PIE1bits.RC1IE = 1;
  7662  003624  8A9D               	bsf	3997,5,c	;volatile
  7663  003626  0012               	return		;funcret
  7664  003628                     __end_of_configurarRS232:
  7665                           	opt callstack 0
  7666                           
  7667 ;; *************** function _configurarPuertos *****************
  7668 ;; Defined at:
  7669 ;;		line 3 in file "./../LIBRERIAS/configuracion_auto.h"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;		None
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;		None
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  1    wreg      void 
  7676 ;; Registers used:
  7677 ;;		wreg, status,2
  7678 ;; Tracked objects:
  7679 ;;		On entry : 0/0
  7680 ;;		On exit  : 0/0
  7681 ;;		Unchanged: 0/0
  7682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7687 ;;Total ram usage:        0 bytes
  7688 ;; Hardware stack levels used:    1
  7689 ;; Hardware stack levels required when called:    1
  7690 ;; This function calls:
  7691 ;;		Nothing
  7692 ;; This function is called by:
  7693 ;;		_configuracionInicial
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           	psect	text42
  7698  00368C                     __ptext42:
  7699                           	opt callstack 0
  7700  00368C                     _configurarPuertos:
  7701                           	opt callstack 28
  7702                           
  7703                           ;./../LIBRERIAS/configuracion_auto.h: 4:     ANCON0 = 0x7F;
  7704                           
  7705                           ;incstack = 0
  7706  00368C  0E7F               	movlw	127
  7707  00368E  010F               	movlb	15	; () banked
  7708  003690  6F48               	movwf	72,b	;volatile
  7709                           
  7710                           ;./../LIBRERIAS/configuracion_auto.h: 5:     ANCON1 = 0x1F;
  7711  003692  0E1F               	movlw	31
  7712  003694  6F49               	movwf	73,b	;volatile
  7713                           
  7714                           ; BSR set to: 15
  7715  003696  0012               	return		;funcret
  7716  003698                     __end_of_configurarPuertos:
  7717                           	opt callstack 0
  7718                           
  7719 ;; *************** function _configurarPWM7 *****************
  7720 ;; Defined at:
  7721 ;;		line 18 in file "./../LIBRERIAS/configuracion_auto.h"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;		None
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7739 ;;Total ram usage:        0 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    1
  7742 ;; This function calls:
  7743 ;;		Nothing
  7744 ;; This function is called by:
  7745 ;;		_configuracionInicial
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           	psect	text43
  7750  0035F0                     __ptext43:
  7751                           	opt callstack 0
  7752  0035F0                     _configurarPWM7:
  7753                           	opt callstack 28
  7754                           
  7755                           ;./../LIBRERIAS/configuracion_auto.h: 19:     TRISBbits.TRISB4 = 0;
  7756                           
  7757                           ; BSR set to: 15
  7758                           ;incstack = 0
  7759  0035F0  9893               	bcf	3987,4,c	;volatile
  7760                           
  7761                           ;./../LIBRERIAS/configuracion_auto.h: 20:     TRISBbits.TRISB7 = 0;
  7762  0035F2  9E93               	bcf	3987,7,c	;volatile
  7763                           
  7764                           ;./../LIBRERIAS/configuracion_auto.h: 21:     CCP7CONbits.CCP7M = 0xC;
  7765  0035F4  010F               	movlb	15	; () banked
  7766  0035F6  5109               	movf	9,w,b	;volatile
  7767  0035F8  0BF0               	andlw	-16
  7768  0035FA  090C               	iorlw	12
  7769  0035FC  6F09               	movwf	9,b	;volatile
  7770                           
  7771                           ;./../LIBRERIAS/configuracion_auto.h: 22:     CCPTMRS1bits.C7TSEL = 0b00;
  7772  0035FE  0E3F               	movlw	-193
  7773  003600  1751               	andwf	81,f,b	;volatile
  7774                           
  7775                           ;./../LIBRERIAS/configuracion_auto.h: 24:     T2CON = 0x02;
  7776  003602  0E02               	movlw	2
  7777  003604  6ECA               	movwf	4042,c	;volatile
  7778                           
  7779                           ;./../LIBRERIAS/configuracion_auto.h: 25:     PR2 = 124;
  7780  003606  0E7C               	movlw	124
  7781  003608  6ECB               	movwf	4043,c	;volatile
  7782                           
  7783                           ;./../LIBRERIAS/configuracion_auto.h: 27:     TMR2 = 0x00;
  7784  00360A  0E00               	movlw	0
  7785  00360C  6ECC               	movwf	4044,c	;volatile
  7786                           
  7787                           ; BSR set to: 15
  7788  00360E  0012               	return		;funcret
  7789  003610                     __end_of_configurarPWM7:
  7790                           	opt callstack 0
  7791                           
  7792 ;; *************** function _configurarInterrupciones *****************
  7793 ;; Defined at:
  7794 ;;		line 8 in file "./../LIBRERIAS/configuracion_auto.h"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;		None
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      void 
  7801 ;; Registers used:
  7802 ;;		None
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7812 ;;Total ram usage:        0 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; Hardware stack levels required when called:    1
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_configuracionInicial
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text44
  7823  00367E                     __ptext44:
  7824                           	opt callstack 0
  7825  00367E                     _configurarInterrupciones:
  7826                           	opt callstack 28
  7827                           
  7828                           ;./../LIBRERIAS/configuracion_auto.h: 9:     TRISBbits.TRISB0 = 1;
  7829                           
  7830                           ; BSR set to: 15
  7831                           ;incstack = 0
  7832  00367E  8093               	bsf	3987,0,c	;volatile
  7833                           
  7834                           ;./../LIBRERIAS/configuracion_auto.h: 10:     INTCONbits.GIE = 1;
  7835  003680  8EF2               	bsf	4082,7,c	;volatile
  7836                           
  7837                           ;./../LIBRERIAS/configuracion_auto.h: 11:     INTCONbits.PEIE = 1;
  7838  003682  8CF2               	bsf	4082,6,c	;volatile
  7839                           
  7840                           ;./../LIBRERIAS/configuracion_auto.h: 12:     INTCON2bits.INTEDG0=0;
  7841  003684  9CF1               	bcf	4081,6,c	;volatile
  7842                           
  7843                           ;./../LIBRERIAS/configuracion_auto.h: 13:     INTCONbits.INT0F = 0;
  7844  003686  92F2               	bcf	4082,1,c	;volatile
  7845                           
  7846                           ;./../LIBRERIAS/configuracion_auto.h: 14:     INTCONbits.INT0E = 1;
  7847  003688  88F2               	bsf	4082,4,c	;volatile
  7848  00368A  0012               	return		;funcret
  7849  00368C                     __end_of_configurarInterrupciones:
  7850                           	opt callstack 0
  7851                           
  7852 ;; *************** function _PWMServo *****************
  7853 ;; Defined at:
  7854 ;;		line 204 in file "auto.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;		None
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;		None
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      void 
  7861 ;; Registers used:
  7862 ;;		wreg, status,2, status,0
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7872 ;;Total ram usage:        0 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:    1
  7875 ;; This function calls:
  7876 ;;		Nothing
  7877 ;; This function is called by:
  7878 ;;		_main
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text45
  7883  003578                     __ptext45:
  7884                           	opt callstack 0
  7885  003578                     _PWMServo:
  7886                           	opt callstack 29
  7887                           
  7888                           ;auto.c: 205:     if(PORTDbits.RD4 == 1){
  7889                           
  7890                           ;incstack = 0
  7891  003578  A883               	btfss	3971,4,c	;volatile
  7892  00357A  D00D               	goto	l220
  7893                           
  7894                           ;auto.c: 206:         PORTDbits.RD4 = 0;
  7895  00357C  9883               	bcf	3971,4,c	;volatile
  7896                           
  7897                           ;auto.c: 207:         tiempo_anterior_1 = TIME_MAX;
  7898  00357E  C0E5  F059         	movff	_TIME_MAX,_tiempo_anterior_1
  7899                           
  7900                           ;auto.c: 208:         TIME_MAX = 200 - tiempo_anterior_1;
  7901  003582  5059               	movf	_tiempo_anterior_1,w,c
  7902  003584  08C8               	sublw	200
  7903  003586  0100               	movlb	0	; () banked
  7904  003588  6FE5               	movwf	_TIME_MAX& (0+255),b
  7905  00358A  0E00               	movlw	0
  7906  00358C  A0D8               	btfss	status,0,c
  7907  00358E  2AE8               	incf	wreg,f,c
  7908  003590  0800               	sublw	0
  7909  003592  6FE6               	movwf	(_TIME_MAX+1)& (0+255),b
  7910                           
  7911                           ;auto.c: 209:     }
  7912  003594  0012               	return	
  7913  003596                     l220:
  7914                           
  7915                           ;auto.c: 211:         PORTDbits.RD4 = 1;
  7916  003596  8883               	bsf	3971,4,c	;volatile
  7917                           
  7918                           ;auto.c: 212:         TIME_MAX = tiempo_anterior_1;
  7919  003598  C059  F0E5         	movff	_tiempo_anterior_1,_TIME_MAX
  7920  00359C  0100               	movlb	0	; () banked
  7921  00359E  6BE6               	clrf	(_TIME_MAX+1)& (0+255),b
  7922                           
  7923                           ; BSR set to: 0
  7924  0035A0  0012               	return		;funcret
  7925  0035A2                     __end_of_PWMServo:
  7926                           	opt callstack 0
  7927                           
  7928 ;; *************** function _rutina *****************
  7929 ;; Defined at:
  7930 ;;		line 45 in file "auto.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;		None
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;  dato            1    4[COMRAM] unsigned char 
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1    wreg      void 
  7937 ;; Registers used:
  7938 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7946 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7947 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7948 ;;Total ram usage:        5 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; This function calls:
  7951 ;;		Nothing
  7952 ;; This function is called by:
  7953 ;;		Interrupt level 2
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	intcode
  7958  000008                     __pintcode:
  7959                           	opt callstack 0
  7960  000008                     _rutina:
  7961                           	opt callstack 21
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;incstack = 0
  7965  000008  825A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7966  00000A  CFD9 F003          	movff	fsr2l,??_rutina+2
  7967  00000E  CFDA F004          	movff	fsr2h,??_rutina+3
  7968                           
  7969                           ;auto.c: 46:     if(PIR1bits.RC1IF == 1){
  7970  000012  AA9E               	btfss	3998,5,c	;volatile
  7971  000014  D019               	goto	i2l154
  7972                           
  7973                           ;auto.c: 47:         unsigned char dato = RCREG1;
  7974  000016  CFAF F005          	movff	4015,rutina@dato	;volatile
  7975                           
  7976                           ;auto.c: 48:         if(dato == 'P'){
  7977  00001A  0E50               	movlw	80
  7978  00001C  1805               	xorwf	rutina@dato,w,c
  7979  00001E  A4D8               	btfss	status,2,c
  7980  000020  D006               	goto	i2l155
  7981                           
  7982                           ;auto.c: 49:             bandera = 1;
  7983  000022  0E01               	movlw	1
  7984  000024  0100               	movlb	0	; () banked
  7985  000026  6FD1               	movwf	_bandera& (0+255),b
  7986                           
  7987                           ;auto.c: 50:             indicador = 0;
  7988  000028  0E00               	movlw	0
  7989  00002A  6FD4               	movwf	_indicador& (0+255),b
  7990                           
  7991                           ;auto.c: 51:         }
  7992  00002C  D037               	goto	i2l164
  7993  00002E                     i2l155:
  7994                           
  7995                           ;auto.c: 53:             TXREG1 = dato;
  7996  00002E  C005  FFAE         	movff	rutina@dato,4014	;volatile
  7997                           
  7998                           ;auto.c: 54:             datos[indicador] = dato;
  7999  000032  0ED5               	movlw	low _datos
  8000  000034  0100               	movlb	0	; () banked
  8001  000036  25D4               	addwf	_indicador& (0+255),w,b
  8002  000038  6ED9               	movwf	fsr2l,c
  8003  00003A  6ADA               	clrf	fsr2h,c
  8004  00003C  0E00               	movlw	high _datos
  8005  00003E  22DA               	addwfc	fsr2h,f,c
  8006  000040  C005  FFDF         	movff	rutina@dato,indf2
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;auto.c: 55:             indicador++;
  8010  000044  2BD4               	incf	_indicador& (0+255),f,b
  8011  000046  D02A               	goto	i2l164
  8012  000048                     i2l154:
  8013  000048  AC9E               	btfss	3998,6,c	;volatile
  8014  00004A  D009               	goto	i2l158
  8015                           
  8016                           ;auto.c: 59:         PIR1bits.ADIF = 0;
  8017  00004C  9C9E               	bcf	3998,6,c	;volatile
  8018                           
  8019                           ;auto.c: 60:         medicion_adc = ADRES;
  8020  00004E  CFC3 F0CA          	movff	4035,_medicion_adc	;volatile
  8021  000052  CFC4 F0CB          	movff	4036,_medicion_adc+1	;volatile
  8022                           
  8023                           ;auto.c: 61:         bandera_adc = 1;
  8024  000056  0E01               	movlw	1
  8025  000058  0100               	movlb	0	; () banked
  8026  00005A  6FD0               	movwf	_bandera_adc& (0+255),b
  8027                           
  8028                           ;auto.c: 62:     }
  8029  00005C  D01F               	goto	i2l164
  8030  00005E                     i2l158:
  8031  00005E  A498               	btfss	3992,2,c	;volatile
  8032  000060  D017               	goto	i2l160
  8033                           
  8034                           ;auto.c: 64:         PIR5bits.TMR5IF = 0;
  8035  000062  9498               	bcf	3992,2,c	;volatile
  8036                           
  8037                           ;auto.c: 65:         contador_timer_5++;
  8038  000064  0100               	movlb	0	; () banked
  8039  000066  2BD3               	incf	_contador_timer_5& (0+255),f,b
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;auto.c: 66:         TMR5H = 0xFF;
  8043  000068  010F               	movlb	15	; () banked
  8044  00006A  6924               	setf	36,b	;volatile
  8045                           
  8046                           ; BSR set to: 15
  8047                           ;auto.c: 67:         TMR5L = 0x6A;
  8048  00006C  0E6A               	movlw	106
  8049  00006E  6F23               	movwf	35,b	;volatile
  8050                           
  8051                           ; BSR set to: 15
  8052                           ;auto.c: 68:         if(contador_timer_5 == TIME_MAX){
  8053  000070  0100               	movlb	0	; () banked
  8054  000072  51D3               	movf	_contador_timer_5& (0+255),w,b
  8055  000074  6E01               	movwf	??_rutina& (0+255),c
  8056  000076  6A02               	clrf	(??_rutina+1)& (0+255),c
  8057  000078  51E5               	movf	_TIME_MAX& (0+255),w,b
  8058  00007A  1801               	xorwf	??_rutina,w,c
  8059  00007C  E10F               	bnz	i2l164
  8060  00007E  51E6               	movf	(_TIME_MAX+1)& (0+255),w,b
  8061  000080  1802               	xorwf	??_rutina+1,w,c
  8062  000082  A4D8               	btfss	status,2,c
  8063  000084  D00B               	goto	i2l164
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;auto.c: 69:             contador_timer_5 = 0;
  8067  000086  0E00               	movlw	0
  8068  000088  6FD3               	movwf	_contador_timer_5& (0+255),b
  8069                           
  8070                           ;auto.c: 70:             bandera_servo = 1;
  8071  00008A  0E01               	movlw	1
  8072  00008C  6FCF               	movwf	_bandera_servo& (0+255),b
  8073  00008E  D006               	goto	i2l164
  8074  000090                     i2l160:
  8075  000090  A2F2               	btfss	4082,1,c	;volatile
  8076  000092  D004               	goto	i2l164
  8077                           
  8078                           ;auto.c: 74:         INTCONbits.INT0F = 0;
  8079  000094  92F2               	bcf	4082,1,c	;volatile
  8080                           
  8081                           ;auto.c: 75:         obstaculo = 1;
  8082  000096  0E01               	movlw	1
  8083  000098  0100               	movlb	0	; () banked
  8084  00009A  6FCE               	movwf	_obstaculo& (0+255),b
  8085  00009C                     i2l164:
  8086  00009C  C004  FFDA         	movff	??_rutina+3,fsr2h
  8087  0000A0  C003  FFD9         	movff	??_rutina+2,fsr2l
  8088  0000A4  925A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8089  0000A6  0011               	retfie		f
  8090  0000A8                     __end_of_rutina:
  8091                           	opt callstack 0
  8092                           
  8093                           	psect	rparam
  8094  0000                     
  8095                           	psect	temp
  8096  00005A                     btemp:
  8097                           	opt callstack 0
  8098  00005A                     	ds	1
  8099  0000                     int$flags	set	btemp
  8100  0000                     wtemp8	set	btemp+1
  8101  0000                     ttemp5	set	btemp+1
  8102  0000                     ttemp6	set	btemp+4
  8103  0000                     ttemp7	set	btemp+8
  8104                           tosu	equ	0xFFF
  8105                           tosh	equ	0xFFE
  8106                           tosl	equ	0xFFD
  8107                           stkptr	equ	0xFFC
  8108                           pclatu	equ	0xFFB
  8109                           pclath	equ	0xFFA
  8110                           pcl	equ	0xFF9
  8111                           tblptru	equ	0xFF8
  8112                           tblptrh	equ	0xFF7
  8113                           tblptrl	equ	0xFF6
  8114                           tablat	equ	0xFF5
  8115                           prodh	equ	0xFF4
  8116                           prodl	equ	0xFF3
  8117                           indf0	equ	0xFEF
  8118                           postinc0	equ	0xFEE
  8119                           postdec0	equ	0xFED
  8120                           preinc0	equ	0xFEC
  8121                           plusw0	equ	0xFEB
  8122                           fsr0h	equ	0xFEA
  8123                           fsr0l	equ	0xFE9
  8124                           wreg	equ	0xFE8
  8125                           indf1	equ	0xFE7
  8126                           postinc1	equ	0xFE6
  8127                           postdec1	equ	0xFE5
  8128                           preinc1	equ	0xFE4
  8129                           plusw1	equ	0xFE3
  8130                           fsr1h	equ	0xFE2
  8131                           fsr1l	equ	0xFE1
  8132                           bsr	equ	0xFE0
  8133                           indf2	equ	0xFDF
  8134                           postinc2	equ	0xFDE
  8135                           postdec2	equ	0xFDD
  8136                           preinc2	equ	0xFDC
  8137                           plusw2	equ	0xFDB
  8138                           fsr2h	equ	0xFDA
  8139                           fsr2l	equ	0xFD9
  8140                           status	equ	0xFD8


Data Sizes:
    Strings     106
    Constant    68
    Data        11
    BSS         89
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160     78     141
    BANK1           256     30      62
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    __rem_pio2f@y	PTR  size(2) Largest target is 4
		 -> sinf@y(BANK1[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_3(CODE[28]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1447_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK0[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_3(CODE[28]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_3(CODE[28]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_3(CODE[28]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    terminal@comand	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK0[10]), 

    length@text	PTR unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[18]), STR_4(CODE[19]), STR_2(CODE[21]), STR_1(CODE[20]), 
		 -> terminal@texto(BANK0[20]), main@text(BANK0[6]), 

    enviarRS232@valores	PTR unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[18]), STR_4(CODE[19]), STR_2(CODE[21]), STR_1(CODE[20]), 
		 -> terminal@texto(BANK0[20]), main@text(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_terminal
    _terminal->_fijarVelocidad
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _fijarVelocidad->___fltol
    _encenderMotor->_rutinaArranque
    _atras->_enviarRS232
    _adelante->_enviarRS232
    _enviarRS232->_length
    _sinf->___rem_pio2f
    ___rem_pio2f->___fltol
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf
    ___cosdf->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul

Critical Paths under _rutina in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sinf
    _terminal->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _sinf->___rem_pio2f
    ___sindf->___flneg
    ___rem_pio2f->___flneg
    ___flneg->___cosdf

Critical Paths under _rutina in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sinf

Critical Paths under _rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rutina in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rutina in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rutina in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rutina in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rutina in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rutina in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rutina in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _rutina in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0  103248
                                             68 BANK0     10    10      0
                           _PWMServo
               _configuracionInicial
                        _enviarRS232
                               _sinf
                           _terminal
 ---------------------------------------------------------------------------------
 (1) _terminal                                            30    28      2   32043
                                             79 COMRAM     5     5      0
                                             37 BANK0     25    23      2
                           _adelante
                              _atras
                         _dirreccion
                      _encenderMotor
                        _enviarRS232
                   _estadoDirreccion
                     _fijarVelocidad
                        _frenarMotor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   14374
                                             19 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   13876
                                             74 COMRAM     2     2      0
                                             13 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   13340
                                             64 COMRAM    10     4      6
                                              0 BANK0     13    13      0
                               _atoi
                               _ctoa
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    5099
                                             32 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              5 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              5 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    3966
                                             32 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3687
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1615
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _frenarMotor                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _fijarVelocidad                                       9     9      0   14787
                                             70 COMRAM     9     9      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _estadoDirreccion                                     4     4      0      93
                                              5 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _encenderMotor                                        2     2      0       0
                                              7 COMRAM     2     2      0
                     _rutinaArranque
 ---------------------------------------------------------------------------------
 (3) _rutinaArranque                                       2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _dirreccion                                           4     4      0      70
                                              5 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _atras                                                0     0      0     761
                        _enviarRS232
 ---------------------------------------------------------------------------------
 (2) _adelante                                             0     0      0     761
                        _enviarRS232
 ---------------------------------------------------------------------------------
 (2) _enviarRS232                                          7     5      2     761
                                             13 COMRAM     7     5      2
                             _length
 ---------------------------------------------------------------------------------
 (3) _length                                               8     6      2     192
                                              5 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _sinf                                                38    34      4   70398
                                             74 COMRAM     4     4      0
                                             64 BANK0      4     0      4
                                              0 BANK1     30    30      0
                            ___cosdf
                            ___fladd
                            ___flneg
                            ___flsub
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (2) ___sindf                                             32    28      4   14302
                                             28 BANK0     32    28      4
                            ___fladd
                            ___flmul
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___rem_pio2f                                         44    38      6   24995
                                             70 COMRAM     4     4      0
                                             28 BANK0     36    30      6
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (3) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     746
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     607
                                             60 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    7967
                                             60 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     785
                                             24 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___cosdf                                             28    24      4   14296
                                             60 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    6653
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    6682
                                             44 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuracionInicial                                 0     0      0       0
           _configurarInterrupciones
                     _configurarPWM7
                  _configurarPuertos
                    _configurarRS232
                     _configurarTMR5
 ---------------------------------------------------------------------------------
 (2) _configurarTMR5                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarRS232                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPuertos                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPWM7                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarInterrupciones                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWMServo                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rutina                                              5     5      0      67
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMServo
   _configuracionInicial
     _configurarInterrupciones
     _configurarPWM7
     _configurarPuertos
     _configurarRS232
     _configurarTMR5
   _enviarRS232
     _length
   _sinf
     ___cosdf
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg
       ___cosdf (ARG)
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
     ___flsub
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___rem_pio2f
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___flneg
         ___cosdf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
       _fabsf
     ___sindf
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___cosdf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal
     _adelante
       _enviarRS232
         _length
     _atras
       _enviarRS232
         _length
     _dirreccion
     _encenderMotor
       _rutinaArranque
     _enviarRS232
       _length
     _estadoDirreccion
     _fijarVelocidad
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _frenarMotor
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen

 _rutina (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     1E      3E       8       24.2%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      8D       5       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     124       6        0.0%
DATA                 0      0     124       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jun 21 02:42:18 2019

                               _C0 0F31                                 _C1 0F2D  
                               _C2 0F29                                 _C3 0F25  
                               _S1 0F0D                                 _S2 0F09  
                               _S3 0F05                                 _S4 0F01  
              ___wmul@multiplicand 0008                       __CFG_CP0$OFF 000000  
                    terminal@texto 0087               __size_of___rem_pio2f 043E  
                              l220 3596                                l212 31F6  
                              l272 2FF8                                l291 26BC  
                              l289 26B4                                l951 1942  
                              l775 2DA0                                l960 1B5A  
                              l961 1B56                                l785 2F08  
                              l882 216E                                l866 209C  
                              l891 21D4                                l867 207A  
                              l892 21D0                                l968 1BE0  
                              l992 29D8                                l999 2A56  
                              _PR2 000FCB                    ?_configurarTMR5 0001  
                  ?_configurarPWM7 0001                                _pad 2FCA  
                   terminal@degree 009D                     terminal@comand 0085  
                 ??_fijarVelocidad 0047                                wreg 000FE8  
                     __CFG_IESO$ON 000000                       ___flmul@aexp 0021  
                     ___flmul@bexp 0026                       ___flmul@sign 0020  
                     ___flmul@temp 002B                       ___flmul@prod 0027  
         __end_of_estadoDirreccion 337C                       ___fltol@exp1 0046  
                  ??_encenderMotor 0008                               l1036 2990  
                             l1164 1718                               l3101 316A  
                             l3107 31AA                               l4003 2FF0  
                             l4013 3046                               l4005 3002  
                             l4103 26F4                               l4009 301A  
                             l4033 2D1A                               l4113 27E0  
                             l3411 333C                               l4131 285C  
                             l4035 2D2E                               l4203 1C8A  
                             l3405 3334                               l3421 3354  
                             l4045 2D8A                               l4061 2EF2  
                             l4053 2E96                               l4221 1D6C  
                             l4205 1CD0                               l3415 334C  
                             l3423 3378                               l4151 28F4  
                             l4055 2EAA                               l4401 20F8  
                             l4313 1FCE                               l4073 3446  
                             l4145 28BA                               l4129 2858  
                             l4081 338E                               l4217 1D40  
                             l4411 215E                               l3451 321A  
                             l3435 31C6                               l3443 31D4  
                             l4155 292C                               l4147 28C2  
                             l4139 28AA                               l4083 339A  
                             l4243 1EC0                               l4235 1E22  
                             l4219 1D5E                               l4325 1FF2  
                             l4317 1FD2                               l4501 18F2  
                             l3437 31CA                               l4149 28C8  
                             l4253 1F0A                               l4181 1C60  
                             l4503 1902                               l3447 3206  
                             l3439 31CE                               l4191 1C78  
                             l4183 1C70                               l4249 1F00  
                             l4419 2192                               l4435 21B2  
                             l4355 202E                               l4611 1BFE  
                             l4195 1C7C                               l4187 1C74  
                             l4179 1C5E                               l4259 1F22  
                             l4429 21A8                               l4293 1F8A  
                             l4517 192E                               l4701 2A88  
                             ?_pad 0016                               l4463 2240  
                             l4455 221A                               l4391 20E2  
                             l4383 20C0                               l4367 2088  
                             l4527 1960                               l4519 1932  
                             l4199 1C80                               l4393 20E6  
                             l4369 208C                               l4289 1F86  
                             l5265 145C                               l2785 3140  
                             l4467 2248                               l4627 353C  
                             l5267 147A                               l2779 310A  
                             l4483 3294                               l4469 224A  
                             l4653 2E2A                               l4637 2DE0  
                             l4717 2AC8                               l4485 32BA  
                             l4575 1B20                               l4671 2E6A  
                             l4663 2E42                               l4815 1030  
                             l4569 1B02                               l4665 2E4E  
                             l4657 2E3A                               l4681 29E8  
                             l4761 153C                               l4905 143A  
                             l4833 10F4                               l4595 1B9E  
                             l4499 18EE                               l4691 2A18  
                             l4843 1190                               l4819 1056  
                             l4693 2A3E                               l4781 1722  
                             l4941 2B14                               l4599 1BBC  
                             l4687 2A06                               l4863 1254  
                             l4839 114E                               l3983 346E  
                             l4943 2B26                               l4935 2AFE  
               __CFG_WPFP$PAGE_127 000000                               l4689 2A0C  
                             l4873 12A8                               l4849 11FE  
                             l3969 2F42                               l4945 2B38  
                             l4929 2AE8                               l4699 2A7C  
                             l4891 13A0                               l3979 3458  
                             l3987 3558                               l4947 2B3E  
                             l4971 3098                               l4885 1344  
                             l4869 127A                               l3989 355C  
                             l4957 2BD6                               l4799 18A8  
                             l4895 13C6                               l4887 137A  
                             l4879 1302                               l3999 2FE2  
                             l4983 30C0                               l4977 30B0  
                             l4899 1400                               l4987 30CC  
                             STR_1 0F76                               STR_2 0F61  
                             STR_3 0F45                               STR_4 0F8A  
                             STR_5 0F9D                               u2020 30FA  
                             u2030 3138                               u2027 30F0  
                             u2037 312E                               u3320 2F3A  
                             u4130 2226                               u4050 21B6  
                             u3410 3516                               u4300 1B50  
                             u3420 3518                               u3340 2F82  
                             u4070 21CA                               u2550 3198  
                             u3510 3442                               u3431 2CFA  
                             u4250 194E                               u3610 28A6  
                             u3450 2D32                               u4340 1BAC  
                             u4260 1AC4                               u3540 26AA  
                             u2557 318E                               u4350 1BCA  
                             u4430 2E54                               u4510 2A92  
                             u3630 2960                               u4600 0FEE  
                             u3640 2962                               u3480 2EAE  
                             u3720 1DA8                               u4265 1ABA  
                             u3570 280A                               u3730 1DAA  
                             u3571 2808                               u4380 2DCE  
                             u3580 2818                               u3740 1DB8  
                             u4605 0FE4                               u4390 2DFE  
                             u4550 14C2                               u2950 3342  
                             u3590 281C                               u3920 20A4  
                             u4721 2AE0                               u4395 2DF4  
                             u4555 14B8                               u4731 306A  
                             u3870 2050                               u3880 2060  
                             u4817 35BC                               u3890 2062  
                             u4827 31A0                       ?_frenarMotor 0001  
                             _TMR2 000FCC                   ?_configurarRS232 0001  
                     ?_enviarRS232 000E                      __CFG_FCMEN$ON 000000  
                             _dbuf 0100                               _half 0F1D  
                             _atoi 2846                               _ctoa 337C  
                             _main 3060                               _prec 00C8  
                             _sinf 0FB0                               _nout 00C6  
                             pad@i 001D                               pad@p 001A  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf1 000FE7                               indf2 000FDF  
                             fsr1l 000FE1                               pad@w 001F  
                             fsr2l 000FD9                               btemp 005A  
                             _utoa 2696                               prodh 000FF4  
                             prodl 000FF3                               start 00A8  
                     ___param_bank 000000                              ??_pad 001C  
                    __CFG_PLLDIV$3 000000                       _BAUDCON1bits 000F7E  
                    ___fltol@sign1 0045                              ?_atoi 000D  
                            ?_ctoa 0021                    __end_of___fladd 2266  
                            ?_main 0001                    __end_of___cosdf 2696  
                  __end_of___flneg 354E                              _ADRES 000FC3  
                            ?_sinf 00A0                    __end_of___flmul 1C14  
                  __end_of___flsub 3410                    __end_of___fltol 2E7C  
                            ?_utoa 0021                    __end_of___lodiv 2DC2  
                            _T2CON 000FCA                    __end_of___lomod 2F2A  
                            _T5CON 000F22                    __end_of___sindf 2498  
                            i2l160 0090                              i2l154 0048  
                            i2l155 002E                              i2l164 009C  
                            i2l158 005E                       ___sindf$1810 008C  
                     ___sindf$1811 0090                       ___sindf$1809 0088  
                     vfpfcnvrt@fmt 0043                       vfpfcnvrt@llu 0060  
                            _TMR5H 000F24                              _TMR5L 000F23  
                  __end_of_pio2_1t 0F15                              _fabsf 34BA  
                            _datos 00D5                              _flags 0057  
                            _atras 3662                              _fputc 2F2A  
                            _fputs 344E                    __end_of_isdigit 351E  
                   __CFG_CLKOEC$ON 000000                              atoi@n 001A  
                            pad@fp 0016                              atoi@s 000D  
                            _width 0055                              ctoa@c 0023  
                  __end_of_invpio2 0F1D                              _putch 36A2  
                            _toint 0F21                              ctoa@w 0024  
                  __end_of_isspace 344E                              tablat 000FF5  
                 __end_of_PWMServo 35A2                              sinf@n 0120  
                            sinf@x 00A0                              sinf@y 0136  
                            plusw1 000FE3                              plusw2 000FDB  
                            ttemp5 005B                              ttemp6 005E  
                            ttemp7 0062                              utoa@d 0023  
                            utoa@i 003F                              utoa@n 0037  
                            utoa@p 0033                              utoa@w 0035  
                            status 000FD8                              wtemp8 005B  
                  __end_of_sprintf 332C                   _servo_dirreccion 00D2  
                 ___lodiv@dividend 0006                   terminal@medicion 009B  
        enviarRS232@longitud_texto 0012            __CFG_DSWDTOSC$INTOSCREF 000000  
                  __initialization 3224                       __end_of_half 0F21  
                     __end_of_atoi 299A                       __end_of_ctoa 33CA  
                     __end_of_main 30D8                       __end_of_sinf 1484  
                     __end_of_utoa 2846                     __CFG_OSC$HSPLL 000000  
                           ??_atoi 000F                             ??_ctoa 0024  
                           ??_main 0055                             ??_sinf 004B  
                           ??_utoa 002B                      __activetblptr 000003  
                 dirreccion@degree 0008                   ___lodiv@quotient 0016  
                           ?_fabsf 0006                             ?_atras 0001  
                           ?_fputc 0006                             ?_fputs 000F  
                           _CCPR7L 000F0A                             _ANCON0 000F48  
                           _ANCON1 000F49                             ?_putch 0001  
                   __CFG_WDTEN$OFF 000000                             _RCREG1 000FAF  
                 __end_of_adelante 367E                             _RCSTA1 000FAC  
                    ___rem_pio2f@n 009C                      ___rem_pio2f@t 0098  
                    ___rem_pio2f@u 008C                      ___rem_pio2f@x 007C  
                    ___rem_pio2f@y 0080                      vfpfcnvrt@done 0069  
                           _SPBRG1 000FB0                     __CFG_WPCFG$OFF 000000  
                           _TXREG1 000FAE                   __end_of___xxtofl 2ADA  
                           _TXSTA1 000FAD                     __CFG_WPDIS$OFF 000000  
                 _contador_timer_5 00D3                     __CFG_XINST$OFF 000000  
                     _CCPTMRS1bits 000F51                       vfprintf@cfmt 004B  
                           _s1pio2 0F41                             _s2pio2 0F3D  
                           _s3pio2 0F39                             _s4pio2 0F35  
                        ??___fladd 0035                             ___wmul 35CA  
                _tiempo_anterior_1 0059                          ??___cosdf 0041  
                        ??___flneg 0041                     __CFG_STVREN$ON 000000  
                        ??___flmul 001C                          ??___flsub 0045  
                        ??___fltol 0041      __size_of_configuracionInicial 0016  
                        ??___lodiv 0016                          ??___lomod 0016  
                        ??___sindf 0041                             _pio2_1 0F15  
                           fabsf@u 000A                             fabsf@x 0006  
                           _length 30D8                             clear_0 325C  
                           clear_1 3268                             pad@buf 0018  
                           ctoa@fp 0021                             _rutina 0008  
                           _strlen 354E                  _configurarPuertos 368C  
                           fputc@c 0006                             fputs@c 0013  
                           fputs@i 0014                       __pdataCOMRAM 0059  
                           fputs@s 000F                          ??_isdigit 0008  
               ?_configurarPuertos 0001                       __mediumconst 0000  
                        ??_isspace 0008                             sinf@ix 013A  
                 __end_of_terminal 2C14                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                           putch@c 0001                   __end_of_vfprintf 32DA  
                           utoa@fp 0021                          ??_sprintf 004D  
              ??_configurarPuertos 0006               __CFG_LS48MHZ$SYS48X8 000000  
                     ___xxtofl@arg 0010                       ___xxtofl@exp 000F  
                     ___xxtofl@val 0006                         __accesstop 0060  
          __end_of__initialization 3276                         ___flneg@f1 0078  
             __size_of_frenarMotor 000E           _configurarInterrupciones 367E  
             __size_of_enviarRS232 006E                      ___rparam_used 000001  
                       ___fltol@f1 003D                       enviarRS232@i 0014  
                  __CFG_IOL1WAY$ON 000000               __CFG_WPEND$PAGE_WPFP 000000  
                   __pcstackCOMRAM 0001                       __pidataBANK0 3698  
                    __end_of_fabsf 34EE                      __end_of_atras 3670  
                 ??_configurarTMR5 0006                   ??_configurarPWM7 0006  
                    __end_of_fputc 2FCA                      __end_of_fputs 3486  
                    __end_of_putch 36A4                      __end_of_toint 0F25  
        __end_of_configurarPuertos 3698                    __CFG_DSWDTPS$G2 000000  
                       __end_of_C0 0F35                         __end_of_C1 0F31  
                       __end_of_C2 0F2D                         __end_of_C3 0F29  
                       __end_of_S1 0F11                         __end_of_S2 0F0D  
                       __end_of_S3 0F09                         __end_of_S4 0F05  
                        ?_PWMServo 0001                            ??_fabsf 000A  
                          ??_atras 0015                            ??_fputc 000A  
                          ??_fputs 0013                            ??_putch 0006  
                ?_estadoDirreccion 0001            __size_of_rutinaArranque 0028  
                       __pbssBANK0 00AA                         __pbssBANK1 0100  
               ??_estadoDirreccion 0006                            ?___wmul 0006  
                    ??___rem_pio2f 0047                            ?_length 0006  
                       ??_PWMServo 0006                            ?_rutina 0001  
                          ?_strlen 0006                          ?_adelante 0001  
                        ?___xxtofl 0006                     ___rem_pio2f@fn 0094  
                   ___rem_pio2f@ix 0086                     ___rem_pio2f@ty 0082  
               __size_of_vfpfcnvrt 0346                         _dirreccion 31BE  
                 fijarVelocidad@DC 0047                      _bandera_servo 00CF  
                 ___lomod@dividend 0006              __end_of_encenderMotor 34BA  
                 __CFG_CFGPLLEN$ON 000000                            __Hparam 0000  
                          __Lparam 0000           __size_of_configurarRS232 0018  
                        ?_terminal 0085                            ___fladd 1F5A  
                          ___cosdf 2498                            ___flneg 351E  
                          ___flmul 18C2                            ___flsub 33CA  
                          ___fltol 2DC2                    __size_of___wmul 0026  
                          ___lodiv 2CF4                            ___lomod 2E7C  
                          ___sindf 2266                          ?_vfprintf 006D  
                     __psmallconst 0F00                            _bandera 00D1  
       __size_of_configurarPuertos 000C                            __pcinit 3224  
                  __size_of_length 0078                            __ramtop 0F00  
           estadoDirreccion@angulo 0008                            __ptext0 3060  
                          __ptext1 2ADA                            __ptext2 32DA  
                          __ptext3 3280                            __ptext4 1C14  
                          __ptext5 2696                            __ptext6 2E7C  
                          __ptext7 2CF4                            __ptext8 337C  
                          __ptext9 2FCA                         ??_adelante 0015  
                          _pio2_1t 0F11                    __size_of_rutina 00A0  
                  __size_of_strlen 002A                          _T2CONbits 000FCA  
                     __size_of_pad 0096                            _isdigit 34EE  
                       ??___xxtofl 000A                __end_of___rem_pio2f 18C2  
                          _invpio2 0F19                            _isspace 3410  
                        _T5CONbits 000F22                            atoi@neg 0013  
                   length@longitud 000A                            _sprintf 32DA  
                 ___rem_pio2f$1808 0090               end_of_initialization 3276  
                          length@i 000D                            fputc@fp 0008  
                 ___rem_pio2f@F530 00C2                            fputs@fp 0011  
          __size_of_fijarVelocidad 00E0                   ___rem_pio2f@sign 008A  
                __end_of_vfpfcnvrt 1F5A                         ??_terminal 0050  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                         ??_vfprintf 004B  
                          strlen@a 0008                            strlen@s 0006  
                        _PORTDbits 000F83                   __CFG_DSBOREN$OFF 000000  
                      ___fladd@grs 003C                   __CFG_CPUDIV$OSC1 000000  
                    ___xxtofl@sign 000E                          _TRISBbits 000F93  
                        _TRISCbits 000F94                          _TRISDbits 000F95  
                      ?_dirreccion 0001         ??_configurarInterrupciones 0006  
     __end_of_configuracionInicial 363E                  __CFG_SOSCSEL$HIGH 000000  
                   _rutinaArranque 35A2                        ___flmul@grs 0022  
                      _CCP7CONbits 000F09                __CFG_MSSP7B_EN$MSK7 000000  
                   __end_of_s1pio2 0F45                     __end_of_s2pio2 0F41  
                   __end_of_s3pio2 0F3D                     __end_of_s4pio2 0F39  
                      vfpfcnvrt@ap 0045                        ___rem_pio2f 1484  
                      vfpfcnvrt@fp 0041                     __end_of___wmul 35F0  
                    __pidataCOMRAM 36A4                  ??_configurarRS232 0006  
                   __end_of_pio2_1 0F19                     __end_of_length 3150  
                 __CFG_DSWDTEN$OFF 000000                       _medicion_adc 00CA  
                   __end_of_rutina 00A8                     __end_of_strlen 3578  
              start_initialization 3224                    ___lodiv@divisor 000E  
                __size_of_PWMServo 002A                    ___lodiv@counter 001E  
           __end_of_rutinaArranque 35CA                        __end_of_pad 3060  
                    ??_frenarMotor 0006                      ??_enviarRS232 0010  
                       length@dato 000C                         length@text 0006  
                      _bandera_adc 00D0                        vfprintf@fmt 006F  
              __size_of_dirreccion 0066                           ??___wmul 000A  
        __size_of_estadoDirreccion 0050                  __CFG_ADCSEL$BIT12 000000  
                      __pdataBANK0 00DF                           ??_length 0008  
                         ??_rutina 0001                           ??_strlen 0008  
                        ___fladd@a 0031                          ___fladd@b 002D  
                        ___cosdf@r 0060                          ___cosdf@w 0070  
                        ___cosdf@x 003D                          ___cosdf@z 0074  
                        ___flmul@a 0018                          ___flmul@b 0014  
                      __pbssCOMRAM 0055                          ___flsub@a 0041  
                        ___flsub@b 003D                  __size_of_adelante 000E  
                    __pcstackBANK0 0060                      __pcstackBANK1 0120  
                  ?_rutinaArranque 0001                  __size_of___xxtofl 0140  
                        ___sindf@r 0080                          ___sindf@s 0094  
                        ___sindf@w 0084                          ___sindf@x 007C  
                        ___sindf@z 0098                     _fijarVelocidad 2C14  
                        _atoi$1425 0015                          _atoi$1426 0019  
                        _atoi$1427 0017                __end_of_frenarMotor 3662  
              __end_of_enviarRS232 31BE                 enviarRS232@valores 000E  
                        __pintcode 0008                           ?___fladd 002D  
                         ?___cosdf 003D                           ?___flneg 0078  
                         ?___flmul 0014                           ?___flsub 003D  
                         ?___fltol 003D               _configuracionInicial 3628  
               dirreccion@tiempo_1 0009                           ?___lodiv 0006  
                         ?___lomod 0006                           ?___sindf 007C  
                __size_of_terminal 013A                  __size_of_vfprintf 005A  
                  ___lomod@divisor 000E                          fabsf@F463 00BE  
                      __smallconst 0F00                    ___lomod@counter 0016  
                         ?_isdigit 0006                          _indicador 00D4  
             __CFG_RTCOSC$T1OSCREF 000000                           ?_isspace 0006  
 __end_of_configurarInterrupciones 368C            __size_of_configurarPWM7 0020  
          __size_of_configurarTMR5 0016                     __size_of_fabsf 0034  
                   __size_of_atras 000E                          _sinf$1528 0128  
                        _sinf$1529 012C                           ?_sprintf 0073  
                        _sinf$1804 0132                     __size_of_fputc 00A0  
                   __size_of_fputs 0038             __end_of_fijarVelocidad 2CF4  
                   __size_of_putch 0002              estadoDirreccion@valor 0009  
                        _obstaculo 00CE                     ___wmul@product 000A  
                         _PIE1bits 000F9D                           _PIE5bits 000F91  
                         _PIR1bits 000F9E                           _PIR5bits 000F98  
                 __CFG_WDTPS$32768 000000              ?_configuracionInicial 0001  
                         _TIME_MAX 00E5                          main@F7560 00DF  
                        _velocidad 00CC                          _vfpfcnvrt 1C14  
                       _ADCON0bits 000FC2                  ___wmul@multiplier 0006  
           __size_of_encenderMotor 0034                           _PWMServo 3578  
                     ??_dirreccion 0006                       _isspace$1443 000C  
                       vfpfcnvrt@c 0068                        _INTCON2bits 000FF1  
                        copy_data0 3238                    ?_fijarVelocidad 0001  
                      _frenarMotor 3654                        _enviarRS232 3150  
                  _configurarRS232 3610                           __Hrparam 0000  
                       vfprintf@ap 0071                           __Lrparam 0000  
                       vfprintf@fp 006D                   _estadoDirreccion 332C  
               __end_of_dirreccion 3224                   __size_of___fladd 030C  
                 __size_of___cosdf 01FE                   __size_of___flneg 0030  
                     ?___rem_pio2f 007C                   __size_of___flmul 0352  
                 __size_of___flsub 0046                   __size_of___fltol 00BA  
                 __size_of___lodiv 00CE                   __size_of___lomod 00AE  
                       ?_vfpfcnvrt 0041                   __size_of___sindf 0232  
                         _adelante 3670                _fijarVelocidad$1803 004B  
                       sprintf@fmt 0075                           _cicle_90 00E7  
                         ___xxtofl 299A                   __size_of_isdigit 0030  
                 __size_of_isspace 003E                           __ptext10 354E  
                         __ptext11 344E                           __ptext20 332C  
                         __ptext12 2F2A                           __ptext21 3486  
                         __ptext13 36A2                           __ptext30 1484  
                         __ptext22 35A2                           __ptext14 2846  
                         __ptext31 34BA                           __ptext23 31BE  
                         __ptext15 3410                           __ptext40 363E  
                         __ptext32 299A                           __ptext24 3662  
                         __ptext16 34EE                           __ptext41 3610  
                         __ptext33 2DC2                           __ptext25 3670  
                         __ptext17 35CA                           __ptext42 368C  
                         __ptext34 33CA                           __ptext26 3150  
                         __ptext18 3654                           __ptext43 35F0  
                         __ptext35 351E                           __ptext27 30D8  
                         __ptext19 2C14                           __ptext44 367E  
                         __ptext36 2498                           __ptext28 0FB0  
                         __ptext45 3578                           __ptext37 18C2  
                         __ptext29 2266                           __ptext38 1F5A  
                         __ptext39 3628                         rutina@dato 0005  
                 __size_of_sprintf 0052                      _encenderMotor 3486  
                    __size_of_atoi 0154                      __size_of_ctoa 004E  
                    __size_of_main 0078                      __size_of_sinf 04D4  
                    __size_of_utoa 01B0               sinf@__xc8_float_word 0124  
           ??_configuracionInicial 0006  __size_of_configurarInterrupciones 000E  
        ?_configurarInterrupciones 0001                           _terminal 2ADA  
                         int$flags 005A                           _vfprintf 3280  
                         main@text 00A4                   ??_rutinaArranque 0006  
                       _INTCONbits 000FF2                     _configurarTMR5 363E  
                   _configurarPWM7 35F0                           isdigit@c 0006  
          __end_of_configurarRS232 3628                           intlevel2 0000  
                        sprintf@ap 007D                     ?_encenderMotor 0001  
                         isspace@c 0006                           sinf@sign 0130  
                      ??_vfpfcnvrt 0047                      _vfpfcnvrt$969 006B  
                         sprintf@f 007F                           sprintf@s 0073  
           __end_of_configurarPWM7 3610             __end_of_configurarTMR5 3654  
                    ___fladd@signs 0039                fijarVelocidad@speed 004F  
                     ___fladd@aexp 003A                       ___fladd@bexp 003B  
                     ___cosdf$1805 0064                       ___cosdf$1806 0068  
                     ___cosdf$1807 006C                      terminal@F7568 00AA  
