

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jun 28 15:22:41 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 2.05
    82                           ; Generated 20/12/2018 GMT
    83                           ; 
    84                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F47J53 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataCOMRAM
   117  00455E                     __pidataCOMRAM:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for _tiempo_anterior_1
   121  00455E  0041               	dw	65
   122                           
   123                           ;initializer for _TIME_MAX
   124  004560  03A7               	dw	935
   125                           
   126                           ;initializer for _velocidad
   127  004562  01C2               	dw	450
   128                           
   129                           ;initializer for _cicle_90
   130  004564  01C2               	dw	450
   131                           
   132                           	psect	idataBANK1
   133  004566                     __pidataBANK1:
   134                           	opt callstack 0
   135                           
   136                           ;initializer for main@F7116
   137  004566  48                 	db	72
   138  004567  4F                 	db	79
   139  004568  4C                 	db	76
   140  004569  41                 	db	65
   141  00456A  21                 	db	33
   142  00456B  00                 	db	0
   143  0000                     _RPINR16	set	3831
   144  0000                     _RPOR23	set	3799
   145  0000                     _PPSCON	set	3775
   146  0000                     _T5CONbits	set	3874
   147  0000                     _CCPR7L	set	3850
   148  0000                     _TMR5L	set	3875
   149  0000                     _TMR5H	set	3876
   150  0000                     _T5CON	set	3874
   151  0000                     _CCPTMRS1bits	set	3921
   152  0000                     _CCP7CONbits	set	3849
   153  0000                     _ANCON1	set	3913
   154  0000                     _ANCON0	set	3912
   155  0000                     _PORTBbits	set	3969
   156  0000                     _PORTAbits	set	3968
   157  0000                     _TXREG2	set	4009
   158  0000                     _RCREG1	set	4015
   159  0000                     _TXREG1	set	4014
   160  0000                     _T2CONbits	set	4042
   161  0000                     _PIE3bits	set	4003
   162  0000                     _PIR3bits	set	4004
   163  0000                     _SPBRG2	set	4011
   164  0000                     _BAUDCON2bits	set	3964
   165  0000                     _RCSTA2	set	3996
   166  0000                     _TXSTA2	set	4008
   167  0000                     _PIR5bits	set	3992
   168  0000                     _PIE5bits	set	3985
   169  0000                     _PORTDbits	set	3971
   170  0000                     _TRISDbits	set	3989
   171  0000                     _PIE1bits	set	3997
   172  0000                     _PIR1bits	set	3998
   173  0000                     _SPBRG1	set	4016
   174  0000                     _BAUDCON1bits	set	3966
   175  0000                     _RCSTA1	set	4012
   176  0000                     _TXSTA1	set	4013
   177  0000                     _TRISCbits	set	3988
   178  0000                     _TMR2	set	4044
   179  0000                     _PR2	set	4043
   180  0000                     _T2CON	set	4042
   181  0000                     _INTCON2bits	set	4081
   182  0000                     _INTCONbits	set	4082
   183  0000                     _TRISBbits	set	3987
   184  0000                     _TRISAbits	set	3986
   185  0000                     _RCREG2	set	4010
   186                           
   187                           	psect	smallconst
   188  000F00                     __psmallconst:
   189                           	opt callstack 0
   190  000F00  00                 	db	0
   191  000F01  4E                 	db	78	;'N'
   192  000F02  6F                 	db	111	;'o'
   193  000F03  20                 	db	32
   194  000F04  70                 	db	112	;'p'
   195  000F05  75                 	db	117	;'u'
   196  000F06  65                 	db	101	;'e'
   197  000F07  64                 	db	100	;'d'
   198  000F08  6F                 	db	111	;'o'
   199  000F09  20                 	db	32
   200  000F0A  65                 	db	101	;'e'
   201  000F0B  73                 	db	115	;'s'
   202  000F0C  71                 	db	113	;'q'
   203  000F0D  75                 	db	117	;'u'
   204  000F0E  69                 	db	105	;'i'
   205  000F0F  76                 	db	118	;'v'
   206  000F10  61                 	db	97	;'a'
   207  000F11  72                 	db	114	;'r'
   208  000F12  20                 	db	32
   209  000F13  65                 	db	101	;'e'
   210  000F14  6C                 	db	108	;'l'
   211  000F15  20                 	db	32
   212  000F16  66                 	db	102	;'f'
   213  000F17  75                 	db	117	;'u'
   214  000F18  65                 	db	101	;'e'
   215  000F19  67                 	db	103	;'g'
   216  000F1A  6F                 	db	111	;'o'
   217  000F1B  21                 	db	33
   218  000F1C  20                 	db	32
   219  000F1D  6C                 	db	108	;'l'
   220  000F1E  6C                 	db	108	;'l'
   221  000F1F  61                 	db	97	;'a'
   222  000F20  6D                 	db	109	;'m'
   223  000F21  65                 	db	101	;'e'
   224  000F22  20                 	db	32
   225  000F23  61                 	db	97	;'a'
   226  000F24  20                 	db	32
   227  000F25  6C                 	db	108	;'l'
   228  000F26  6F                 	db	111	;'o'
   229  000F27  73                 	db	115	;'s'
   230  000F28  20                 	db	32
   231  000F29  62                 	db	98	;'b'
   232  000F2A  6F                 	db	111	;'o'
   233  000F2B  6D                 	db	109	;'m'
   234  000F2C  62                 	db	98	;'b'
   235  000F2D  65                 	db	101	;'e'
   236  000F2E  72                 	db	114	;'r'
   237  000F2F  6F                 	db	111	;'o'
   238  000F30  73                 	db	115	;'s'
   239  000F31  00                 	db	0
   240  000F32                     STR_4:
   241  000F32  56                 	db	86	;'V'
   242  000F33  65                 	db	101	;'e'
   243  000F34  6C                 	db	108	;'l'
   244  000F35  6F                 	db	111	;'o'
   245  000F36  63                 	db	99	;'c'
   246  000F37  69                 	db	105	;'i'
   247  000F38  64                 	db	100	;'d'
   248  000F39  61                 	db	97	;'a'
   249  000F3A  64                 	db	100	;'d'
   250  000F3B  20                 	db	32
   251  000F3C  66                 	db	102	;'f'
   252  000F3D  69                 	db	105	;'i'
   253  000F3E  6A                 	db	106	;'j'
   254  000F3F  61                 	db	97	;'a'
   255  000F40  64                 	db	100	;'d'
   256  000F41  61                 	db	97	;'a'
   257  000F42  20                 	db	32
   258  000F43  61                 	db	97	;'a'
   259  000F44  6C                 	db	108	;'l'
   260  000F45  3A                 	db	58	;':'
   261  000F46  20                 	db	32
   262  000F47  25                 	db	37
   263  000F48  30                 	db	48	;'0'
   264  000F49  33                 	db	51	;'3'
   265  000F4A  75                 	db	117	;'u'
   266  000F4B  25                 	db	37
   267  000F4C  63                 	db	99	;'c'
   268  000F4D  00                 	db	0
   269  000F4E                     STR_3:
   270  000F4E  56                 	db	86	;'V'
   271  000F4F  65                 	db	101	;'e'
   272  000F50  68                 	db	104	;'h'
   273  000F51  69                 	db	105	;'i'
   274  000F52  63                 	db	99	;'c'
   275  000F53  75                 	db	117	;'u'
   276  000F54  6C                 	db	108	;'l'
   277  000F55  6F                 	db	111	;'o'
   278  000F56  20                 	db	32
   279  000F57  65                 	db	101	;'e'
   280  000F58  6E                 	db	110	;'n'
   281  000F59  20                 	db	32
   282  000F5A  72                 	db	114	;'r'
   283  000F5B  65                 	db	101	;'e'
   284  000F5C  76                 	db	118	;'v'
   285  000F5D  65                 	db	101	;'e'
   286  000F5E  72                 	db	114	;'r'
   287  000F5F  73                 	db	115	;'s'
   288  000F60  61                 	db	97	;'a'
   289  000F61  21                 	db	33
   290  000F62  00                 	db	0
   291  000F63                     STR_2:
   292  000F63  4D                 	db	77	;'M'
   293  000F64  6F                 	db	111	;'o'
   294  000F65  74                 	db	116	;'t'
   295  000F66  6F                 	db	111	;'o'
   296  000F67  72                 	db	114	;'r'
   297  000F68  65                 	db	101	;'e'
   298  000F69  73                 	db	115	;'s'
   299  000F6A  20                 	db	32
   300  000F6B  65                 	db	101	;'e'
   301  000F6C  6E                 	db	110	;'n'
   302  000F6D  63                 	db	99	;'c'
   303  000F6E  65                 	db	101	;'e'
   304  000F6F  6E                 	db	110	;'n'
   305  000F70  64                 	db	100	;'d'
   306  000F71  69                 	db	105	;'i'
   307  000F72  64                 	db	100	;'d'
   308  000F73  6F                 	db	111	;'o'
   309  000F74  73                 	db	115	;'s'
   310  000F75  21                 	db	33
   311  000F76  00                 	db	0
   312  000F77                     STR_1:
   313  000F77  25                 	db	37
   314  000F78  30                 	db	48	;'0'
   315  000F79  33                 	db	51	;'3'
   316  000F7A  2E                 	db	46
   317  000F7B  31                 	db	49	;'1'
   318  000F7C  66                 	db	102	;'f'
   319  000F7D  20                 	db	32
   320  000F7E  63                 	db	99	;'c'
   321  000F7F  6D                 	db	109	;'m'
   322  000F80  00                 	db	0
   323  000F81                     STR_5:
   324  000F81  47                 	db	71	;'G'
   325  000F82  69                 	db	105	;'i'
   326  000F83  72                 	db	114	;'r'
   327  000F84  61                 	db	97	;'a'
   328  000F85  6E                 	db	110	;'n'
   329  000F86  64                 	db	100	;'d'
   330  000F87  6F                 	db	111	;'o'
   331  000F88  00                 	db	0
   332  000F89                     STR_7:
   333  000F89  49                 	db	73	;'I'
   334  000F8A  4E                 	db	78	;'N'
   335  000F8B  46                 	db	70	;'F'
   336  000F8C  00                 	db	0
   337  000F8D                     STR_11:
   338  000F8D  4E                 	db	78	;'N'
   339  000F8E  41                 	db	65	;'A'
   340  000F8F  4E                 	db	78	;'N'
   341  000F90  00                 	db	0
   342  000F91                     STR_8:
   343  000F91  69                 	db	105	;'i'
   344  000F92  6E                 	db	110	;'n'
   345  000F93  66                 	db	102	;'f'
   346  000F94  00                 	db	0
   347  000F95                     STR_12:
   348  000F95  6E                 	db	110	;'n'
   349  000F96  61                 	db	97	;'a'
   350  000F97  6E                 	db	110	;'n'
   351  000F98  00                 	db	0
   352  000F99                     STR_15:
   353  000F99  6C                 	db	108	;'l'
   354  000F9A  66                 	db	102	;'f'
   355  000F9B  00                 	db	0
   356  0000                     
   357                           ; #config settings
   358  000F9C  00                 	db	0	; dummy byte at the end
   359  0000                     
   360                           	psect	cinit
   361  003FFC                     __pcinit:
   362                           	opt callstack 0
   363  003FFC                     start_initialization:
   364                           	opt callstack 0
   365  003FFC                     __initialization:
   366                           	opt callstack 0
   367                           
   368                           ; Initialize objects allocated to BANK1 (6 bytes)
   369                           ; load TBLPTR registers with __pidataBANK1
   370  003FFC  0E66               	movlw	low __pidataBANK1
   371  003FFE  6EF6               	movwf	tblptrl,c
   372  004000  0E45               	movlw	high __pidataBANK1
   373  004002  6EF7               	movwf	tblptrh,c
   374  004004  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   375  004006  6EF8               	movwf	tblptru,c
   376  004008  EE01  F0C9         	lfsr	0,__pdataBANK1
   377  00400C  EE10 F006          	lfsr	1,6
   378  004010                     copy_data0:
   379  004010  0009               	tblrd		*+
   380  004012  CFF5 FFEE          	movff	tablat,postinc0
   381  004016  50E5               	movf	postdec1,w,c
   382  004018  50E1               	movf	fsr1l,w,c
   383  00401A  E1FA               	bnz	copy_data0
   384                           
   385                           ; Initialize objects allocated to COMRAM (8 bytes)
   386                           ; load TBLPTR registers with __pidataCOMRAM
   387  00401C  0E5E               	movlw	low __pidataCOMRAM
   388  00401E  6EF6               	movwf	tblptrl,c
   389  004020  0E45               	movlw	high __pidataCOMRAM
   390  004022  6EF7               	movwf	tblptrh,c
   391  004024  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   392  004026  6EF8               	movwf	tblptru,c
   393  004028  EE00  F045         	lfsr	0,__pdataCOMRAM
   394  00402C  EE10 F008          	lfsr	1,8
   395  004030                     copy_data1:
   396  004030  0009               	tblrd		*+
   397  004032  CFF5 FFEE          	movff	tablat,postinc0
   398  004036  50E5               	movf	postdec1,w,c
   399  004038  50E1               	movf	fsr1l,w,c
   400  00403A  E1FA               	bnz	copy_data1
   401                           
   402                           ; Clear objects allocated to BANK1 (124 bytes)
   403  00403C  EE01  F000         	lfsr	0,__pbssBANK1
   404  004040  0E7C               	movlw	124
   405  004042                     clear_0:
   406  004042  6AEE               	clrf	postinc0,c
   407  004044  06E8               	decf	wreg,f,c
   408  004046  E1FD               	bnz	clear_0
   409                           
   410                           ; Clear objects allocated to COMRAM (27 bytes)
   411  004048  EE00  F02A         	lfsr	0,__pbssCOMRAM
   412  00404C  0E1B               	movlw	27
   413  00404E                     clear_1:
   414  00404E  6AEE               	clrf	postinc0,c
   415  004050  06E8               	decf	wreg,f,c
   416  004052  E1FD               	bnz	clear_1
   417  004054                     end_of_initialization:
   418                           	opt callstack 0
   419  004054                     __end_of__initialization:
   420                           	opt callstack 0
   421  004054  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   422  004056  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   423  004058  0100               	movlb	0
   424  00405A  EFD0  F01C         	goto	_main	;jump to C main() function
   425                           
   426                           	psect	bssCOMRAM
   427  00002A                     __pbssCOMRAM:
   428                           	opt callstack 0
   429  00002A                     floorf@F524:
   430                           	opt callstack 0
   431  00002A                     	ds	4
   432  00002E                     ___fpclassifyf@F463:
   433                           	opt callstack 0
   434  00002E                     	ds	4
   435  000032                     _distancia:
   436                           	opt callstack 0
   437  000032                     	ds	4
   438  000036                     _width:
   439                           	opt callstack 0
   440  000036                     	ds	2
   441  000038                     _prec:
   442                           	opt callstack 0
   443  000038                     	ds	2
   444  00003A                     _flags:
   445                           	opt callstack 0
   446  00003A                     	ds	2
   447  00003C                     _contador_timer_5:
   448                           	opt callstack 0
   449  00003C                     	ds	2
   450  00003E                     _parar:
   451                           	opt callstack 0
   452  00003E                     	ds	2
   453  000040                     _estadoFuego:
   454                           	opt callstack 0
   455  000040                     	ds	1
   456  000041                     _contador_datos:
   457                           	opt callstack 0
   458  000041                     	ds	1
   459  000042                     _servo_dirreccion:
   460                           	opt callstack 0
   461  000042                     	ds	1
   462  000043                     _indicador:
   463                           	opt callstack 0
   464  000043                     	ds	1
   465  000044                     _motor:
   466                           	opt callstack 0
   467  000044                     	ds	1
   468                           
   469                           	psect	dataCOMRAM
   470  000045                     __pdataCOMRAM:
   471                           	opt callstack 0
   472  000045                     _tiempo_anterior_1:
   473                           	opt callstack 0
   474  000045                     	ds	2
   475  000047                     _TIME_MAX:
   476                           	opt callstack 0
   477  000047                     	ds	2
   478  000049                     _velocidad:
   479                           	opt callstack 0
   480  000049                     	ds	2
   481  00004B                     _cicle_90:
   482                           	opt callstack 0
   483  00004B                     	ds	2
   484                           
   485                           	psect	bssBANK1
   486  000100                     __pbssBANK1:
   487                           	opt callstack 0
   488  000100                     	ds	20
   489  000114                     	ds	8
   490  00011C                     _nout:
   491                           	opt callstack 0
   492  00011C                     	ds	2
   493  00011E                     _bandera_distancia:
   494                           	opt callstack 0
   495  00011E                     	ds	1
   496  00011F                     _obstaculo:
   497                           	opt callstack 0
   498  00011F                     	ds	1
   499  000120                     _bandera_servo:
   500                           	opt callstack 0
   501  000120                     	ds	1
   502  000121                     _bandera:
   503                           	opt callstack 0
   504  000121                     	ds	1
   505  000122                     _dbuf:
   506                           	opt callstack 0
   507  000122                     	ds	80
   508  000172                     _datos:
   509                           	opt callstack 0
   510  000172                     	ds	10
   511                           
   512                           	psect	dataBANK1
   513  0001C9                     __pdataBANK1:
   514                           	opt callstack 0
   515  0001C9                     main@F7116:
   516                           	opt callstack 0
   517  0001C9                     	ds	6
   518                           
   519                           	psect	cstackBANK1
   520  00017C                     __pcstackBANK1:
   521                           	opt callstack 0
   522  00017C                     vfpfcnvrt@llu:
   523                           	opt callstack 0
   524                           
   525                           ; 8 bytes @ 0x0
   526  00017C                     	ds	8
   527  000184                     vfpfcnvrt@done:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x8
   531  000184                     	ds	2
   532  000186                     _vfpfcnvrt$1443:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0xA
   536  000186                     	ds	2
   537  000188                     _vfpfcnvrt$1444:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0xC
   541  000188                     	ds	2
   542  00018A                     _vfpfcnvrt$1449:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0xE
   546  00018A                     	ds	2
   547  00018C                     vfpfcnvrt@f:
   548                           	opt callstack 0
   549                           
   550                           ; 4 bytes @ 0x10
   551  00018C                     	ds	4
   552  000190                     vfpfcnvrt@ct:
   553                           	opt callstack 0
   554                           
   555                           ; 3 bytes @ 0x14
   556  000190                     	ds	3
   557  000193                     vfpfcnvrt@c:
   558                           	opt callstack 0
   559                           
   560                           ; 1 bytes @ 0x17
   561  000193                     	ds	1
   562  000194                     ?_sprintf:
   563                           	opt callstack 0
   564  000194                     sprintf@s:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0x18
   568  000194                     	ds	2
   569  000196                     sprintf@fmt:
   570                           	opt callstack 0
   571                           
   572                           ; 2 bytes @ 0x1A
   573  000196                     	ds	6
   574  00019C                     terminal@comand:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x20
   578  00019C                     	ds	2
   579  00019E                     ??_terminal:
   580                           
   581                           ; 1 bytes @ 0x22
   582  00019E                     	ds	5
   583  0001A3                     terminal@texto:
   584                           	opt callstack 0
   585                           
   586                           ; 20 bytes @ 0x27
   587  0001A3                     	ds	20
   588  0001B7                     terminal@medicion:
   589                           	opt callstack 0
   590                           
   591                           ; 2 bytes @ 0x3B
   592  0001B7                     	ds	2
   593  0001B9                     terminal@degree:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0x3D
   597  0001B9                     	ds	2
   598  0001BB                     main@text:
   599                           	opt callstack 0
   600                           
   601                           ; 6 bytes @ 0x3F
   602  0001BB                     	ds	6
   603  0001C1                     main@texto:
   604                           	opt callstack 0
   605                           
   606                           ; 8 bytes @ 0x45
   607  0001C1                     	ds	8
   608                           
   609                           	psect	cstackBANK0
   610  000060                     __pcstackBANK0:
   611                           	opt callstack 0
   612  000060                     ??_definirVelocidad:
   613  000060                     ??_rutinaArranque:
   614  000060                     ?_length:
   615                           	opt callstack 0
   616  000060                     ?_estadoDirreccion:
   617                           	opt callstack 0
   618  000060                     ?_strlen:
   619                           	opt callstack 0
   620  000060                     ?___fpclassifyf:
   621                           	opt callstack 0
   622  000060                     ?_isupper:
   623                           	opt callstack 0
   624  000060                     ?_isdigit:
   625                           	opt callstack 0
   626  000060                     ?_strncmp:
   627                           	opt callstack 0
   628  000060                     ?_isspace:
   629                           	opt callstack 0
   630  000060                     ?___wmul:
   631                           	opt callstack 0
   632  000060                     ?___awdiv:
   633                           	opt callstack 0
   634  000060                     ?___awmod:
   635                           	opt callstack 0
   636  000060                     ?___fldiv:
   637                           	opt callstack 0
   638  000060                     ?___flneg:
   639                           	opt callstack 0
   640  000060                     ?___xxtofl:
   641                           	opt callstack 0
   642  000060                     ?___lodiv:
   643                           	opt callstack 0
   644  000060                     ?___lomod:
   645                           	opt callstack 0
   646  000060                     length@text:
   647                           	opt callstack 0
   648  000060                     dirreccion@degree:
   649                           	opt callstack 0
   650  000060                     ___wmul@multiplier:
   651                           	opt callstack 0
   652  000060                     ___awdiv@dividend:
   653                           	opt callstack 0
   654  000060                     ___awmod@dividend:
   655                           	opt callstack 0
   656  000060                     isdigit@c:
   657                           	opt callstack 0
   658  000060                     isspace@c:
   659                           	opt callstack 0
   660  000060                     isupper@c:
   661                           	opt callstack 0
   662  000060                     fputc@c:
   663                           	opt callstack 0
   664  000060                     strcpy@dest:
   665                           	opt callstack 0
   666  000060                     strlen@s:
   667                           	opt callstack 0
   668  000060                     strncmp@_l:
   669                           	opt callstack 0
   670  000060                     ___fleq@ff1:
   671                           	opt callstack 0
   672  000060                     ___flneg@f1:
   673                           	opt callstack 0
   674  000060                     ___fldiv@b:
   675                           	opt callstack 0
   676  000060                     ___xxtofl@val:
   677                           	opt callstack 0
   678  000060                     ___fpclassifyf@x:
   679                           	opt callstack 0
   680  000060                     ___lodiv@dividend:
   681                           	opt callstack 0
   682  000060                     ___lomod@dividend:
   683                           	opt callstack 0
   684                           
   685                           ; 8 bytes @ 0x0
   686  000060                     	ds	2
   687  000062                     ??_length:
   688  000062                     ??_estadoDirreccion:
   689  000062                     ??_dirreccion:
   690  000062                     ??_isupper:
   691  000062                     ??_isdigit:
   692  000062                     ??_isspace:
   693  000062                     ___wmul@multiplicand:
   694                           	opt callstack 0
   695  000062                     ___awdiv@divisor:
   696                           	opt callstack 0
   697  000062                     ___awmod@divisor:
   698                           	opt callstack 0
   699  000062                     fputc@fp:
   700                           	opt callstack 0
   701  000062                     strcpy@src:
   702                           	opt callstack 0
   703  000062                     strlen@a:
   704                           	opt callstack 0
   705  000062                     strncmp@_r:
   706                           	opt callstack 0
   707                           
   708                           ; 2 bytes @ 0x2
   709  000062                     	ds	2
   710  000064                     ??_fputc:
   711  000064                     ??___fpclassifyf:
   712  000064                     ??_strcpy:
   713  000064                     ??___xxtofl:
   714  000064                     dirreccion@tiempo_1:
   715                           	opt callstack 0
   716  000064                     ___awdiv@counter:
   717                           	opt callstack 0
   718  000064                     ___awmod@counter:
   719                           	opt callstack 0
   720  000064                     length@longitud:
   721                           	opt callstack 0
   722  000064                     estadoDirreccion@angulo:
   723                           	opt callstack 0
   724  000064                     ___wmul@product:
   725                           	opt callstack 0
   726  000064                     strncmp@n:
   727                           	opt callstack 0
   728  000064                     ___fleq@ff2:
   729                           	opt callstack 0
   730  000064                     ___fldiv@a:
   731                           	opt callstack 0
   732                           
   733                           ; 4 bytes @ 0x4
   734  000064                     	ds	1
   735  000065                     ___awdiv@sign:
   736                           	opt callstack 0
   737  000065                     ___awmod@sign:
   738                           	opt callstack 0
   739                           
   740                           ; 1 bytes @ 0x5
   741  000065                     	ds	1
   742  000066                     ??_strncmp:
   743  000066                     ?_tolower:
   744                           	opt callstack 0
   745  000066                     length@dato:
   746                           	opt callstack 0
   747  000066                     estadoDirreccion@valor:
   748                           	opt callstack 0
   749  000066                     _isspace$1952:
   750                           	opt callstack 0
   751  000066                     ___awdiv@quotient:
   752                           	opt callstack 0
   753  000066                     strcpy@s:
   754                           	opt callstack 0
   755  000066                     tolower@c:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x6
   759  000066                     	ds	1
   760  000067                     ?_atoi:
   761                           	opt callstack 0
   762  000067                     length@i:
   763                           	opt callstack 0
   764  000067                     atoi@s:
   765                           	opt callstack 0
   766  000067                     strncmp@l:
   767                           	opt callstack 0
   768                           
   769                           ; 2 bytes @ 0x7
   770  000067                     	ds	1
   771  000068                     ??_tolower:
   772  000068                     ??___fldiv:
   773  000068                     ??___fleq:
   774  000068                     ___xxtofl@sign:
   775                           	opt callstack 0
   776  000068                     enviarRS232@valores:
   777                           	opt callstack 0
   778  000068                     ___fpclassifyf@e:
   779                           	opt callstack 0
   780  000068                     strcpy@d:
   781                           	opt callstack 0
   782  000068                     ___lodiv@divisor:
   783                           	opt callstack 0
   784  000068                     ___lomod@divisor:
   785                           	opt callstack 0
   786                           
   787                           ; 8 bytes @ 0x8
   788  000068                     	ds	1
   789  000069                     ??_atoi:
   790  000069                     ___xxtofl@exp:
   791                           	opt callstack 0
   792  000069                     fputs@s:
   793                           	opt callstack 0
   794  000069                     strncmp@r:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x9
   798  000069                     	ds	1
   799  00006A                     ??_enviarRS232:
   800  00006A                     ___xxtofl@arg:
   801                           	opt callstack 0
   802  00006A                     ___fpclassifyf@u:
   803                           	opt callstack 0
   804                           
   805                           ; 4 bytes @ 0xA
   806  00006A                     	ds	1
   807  00006B                     fputs@fp:
   808                           	opt callstack 0
   809                           
   810                           ; 2 bytes @ 0xB
   811  00006B                     	ds	1
   812  00006C                     enviarRS232@longitud_texto:
   813                           	opt callstack 0
   814  00006C                     _tolower$2037:
   815                           	opt callstack 0
   816  00006C                     ___fldiv@rem:
   817                           	opt callstack 0
   818                           
   819                           ; 4 bytes @ 0xC
   820  00006C                     	ds	1
   821  00006D                     fputs@c:
   822                           	opt callstack 0
   823  00006D                     atoi@neg:
   824                           	opt callstack 0
   825                           
   826                           ; 2 bytes @ 0xD
   827  00006D                     	ds	1
   828  00006E                     ?___flmul:
   829                           	opt callstack 0
   830  00006E                     enviarRS232@i:
   831                           	opt callstack 0
   832  00006E                     fputs@i:
   833                           	opt callstack 0
   834  00006E                     ___flmul@b:
   835                           	opt callstack 0
   836                           
   837                           ; 4 bytes @ 0xE
   838  00006E                     	ds	1
   839  00006F                     _atoi$1921:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0xF
   843  00006F                     	ds	1
   844  000070                     ?_pad:
   845                           	opt callstack 0
   846  000070                     ___lomod@counter:
   847                           	opt callstack 0
   848  000070                     ___fldiv@sign:
   849                           	opt callstack 0
   850  000070                     pad@fp:
   851                           	opt callstack 0
   852  000070                     ___lodiv@quotient:
   853                           	opt callstack 0
   854                           
   855                           ; 8 bytes @ 0x10
   856  000070                     	ds	1
   857  000071                     ___fldiv@new_exp:
   858                           	opt callstack 0
   859  000071                     _atoi$1923:
   860                           	opt callstack 0
   861                           
   862                           ; 2 bytes @ 0x11
   863  000071                     	ds	1
   864  000072                     pad@buf:
   865                           	opt callstack 0
   866  000072                     ___flmul@a:
   867                           	opt callstack 0
   868                           
   869                           ; 4 bytes @ 0x12
   870  000072                     	ds	1
   871  000073                     _atoi$1922:
   872                           	opt callstack 0
   873  000073                     ___fldiv@grs:
   874                           	opt callstack 0
   875                           
   876                           ; 4 bytes @ 0x13
   877  000073                     	ds	1
   878  000074                     pad@p:
   879                           	opt callstack 0
   880  000074                     atoi@n:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x14
   884  000074                     	ds	2
   885  000076                     ??___flmul:
   886  000076                     ??_pad:
   887                           
   888                           ; 1 bytes @ 0x16
   889  000076                     	ds	1
   890  000077                     ___fldiv@bexp:
   891                           	opt callstack 0
   892  000077                     pad@i:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x17
   896  000077                     	ds	1
   897  000078                     ___lodiv@counter:
   898                           	opt callstack 0
   899  000078                     ___fldiv@aexp:
   900                           	opt callstack 0
   901                           
   902                           ; 1 bytes @ 0x18
   903  000078                     	ds	1
   904  000079                     ?_floorf:
   905                           	opt callstack 0
   906  000079                     pad@w:
   907                           	opt callstack 0
   908  000079                     floorf@x:
   909                           	opt callstack 0
   910                           
   911                           ; 4 bytes @ 0x19
   912  000079                     	ds	1
   913  00007A                     ___flmul@sign:
   914                           	opt callstack 0
   915                           
   916                           ; 1 bytes @ 0x1A
   917  00007A                     	ds	1
   918  00007B                     ?_ctoa:
   919                           	opt callstack 0
   920  00007B                     ?_utoa:
   921                           	opt callstack 0
   922  00007B                     ___flmul@aexp:
   923                           	opt callstack 0
   924  00007B                     ctoa@fp:
   925                           	opt callstack 0
   926  00007B                     utoa@fp:
   927                           	opt callstack 0
   928                           
   929                           ; 2 bytes @ 0x1B
   930  00007B                     	ds	1
   931  00007C                     ___flmul@grs:
   932                           	opt callstack 0
   933                           
   934                           ; 4 bytes @ 0x1C
   935  00007C                     	ds	1
   936  00007D                     ??_floorf:
   937  00007D                     ctoa@c:
   938                           	opt callstack 0
   939  00007D                     utoa@d:
   940                           	opt callstack 0
   941                           
   942                           ; 8 bytes @ 0x1D
   943  00007D                     	ds	1
   944  00007E                     ctoa@w:
   945                           	opt callstack 0
   946                           
   947                           ; 2 bytes @ 0x1E
   948  00007E                     	ds	2
   949  000080                     ___flmul@bexp:
   950                           	opt callstack 0
   951                           
   952                           ; 1 bytes @ 0x20
   953  000080                     	ds	1
   954  000081                     ___flmul@prod:
   955                           	opt callstack 0
   956                           
   957                           ; 4 bytes @ 0x21
   958  000081                     	ds	2
   959  000083                     floorf@m:
   960                           	opt callstack 0
   961                           
   962                           ; 4 bytes @ 0x23
   963  000083                     	ds	2
   964  000085                     ??_utoa:
   965  000085                     ___flmul@temp:
   966                           	opt callstack 0
   967                           
   968                           ; 2 bytes @ 0x25
   969  000085                     	ds	2
   970  000087                     ?___fladd:
   971                           	opt callstack 0
   972  000087                     ?___fltol:
   973                           	opt callstack 0
   974  000087                     floorf@e:
   975                           	opt callstack 0
   976  000087                     ___flge@ff1:
   977                           	opt callstack 0
   978  000087                     ___fltol@f1:
   979                           	opt callstack 0
   980  000087                     ___fladd@b:
   981                           	opt callstack 0
   982                           
   983                           ; 4 bytes @ 0x27
   984  000087                     	ds	2
   985  000089                     floorf@u:
   986                           	opt callstack 0
   987                           
   988                           ; 4 bytes @ 0x29
   989  000089                     	ds	2
   990  00008B                     ??___fltol:
   991  00008B                     ___flge@ff2:
   992                           	opt callstack 0
   993  00008B                     ___fladd@a:
   994                           	opt callstack 0
   995                           
   996                           ; 4 bytes @ 0x2B
   997  00008B                     	ds	2
   998  00008D                     utoa@p:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x2D
  1002  00008D                     	ds	2
  1003  00008F                     ??___fladd:
  1004  00008F                     ??___flge:
  1005  00008F                     ___fltol@sign1:
  1006                           	opt callstack 0
  1007  00008F                     utoa@w:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x2F
  1011  00008F                     	ds	1
  1012  000090                     ___fltol@exp1:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x30
  1016  000090                     	ds	1
  1017  000091                     utoa@n:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 8 bytes @ 0x31
  1021  000091                     	ds	2
  1022  000093                     ___fladd@signs:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 1 bytes @ 0x33
  1026  000093                     	ds	1
  1027  000094                     ___fladd@aexp:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x34
  1031  000094                     	ds	1
  1032  000095                     ___fladd@bexp:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x35
  1036  000095                     	ds	1
  1037  000096                     ___fladd@grs:
  1038                           	opt callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x36
  1041  000096                     	ds	1
  1042  000097                     ?___flsub:
  1043                           	opt callstack 0
  1044  000097                     fijarVelocidad@DC:
  1045                           	opt callstack 0
  1046  000097                     ___flsub@b:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x37
  1050  000097                     	ds	2
  1051  000099                     utoa@i:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x39
  1055  000099                     	ds	2
  1056  00009B                     ___flsub@a:
  1057                           	opt callstack 0
  1058  00009B                     _fijarVelocidad$2262:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x3B
  1062  00009B                     	ds	4
  1063  00009F                     ?_efgtoa:
  1064                           	opt callstack 0
  1065  00009F                     fijarVelocidad@speed:
  1066                           	opt callstack 0
  1067  00009F                     efgtoa@fp:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x3F
  1071  00009F                     	ds	1
  1072  0000A0                     ??_rutinaEscape:
  1073                           
  1074                           ; 1 bytes @ 0x40
  1075  0000A0                     	ds	1
  1076  0000A1                     efgtoa@f:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x41
  1080  0000A1                     	ds	1
  1081  0000A2                     rutinaEscape@type:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x42
  1085  0000A2                     	ds	3
  1086  0000A5                     efgtoa@c:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x45
  1090  0000A5                     	ds	1
  1091  0000A6                     ??_efgtoa:
  1092                           
  1093                           ; 1 bytes @ 0x46
  1094  0000A6                     	ds	5
  1095  0000AB                     efgtoa@ou:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 4 bytes @ 0x4B
  1099  0000AB                     	ds	4
  1100  0000AF                     _efgtoa$1411:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x4F
  1104  0000AF                     	ds	2
  1105  0000B1                     _efgtoa$1412:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x51
  1109  0000B1                     	ds	2
  1110  0000B3                     _efgtoa$1416:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x53
  1114  0000B3                     	ds	2
  1115  0000B5                     _efgtoa$1420:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x55
  1119  0000B5                     	ds	2
  1120  0000B7                     _efgtoa$1421:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x57
  1124  0000B7                     	ds	2
  1125  0000B9                     _efgtoa$1422:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x59
  1129  0000B9                     	ds	2
  1130  0000BB                     efgtoa@t:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x5B
  1134  0000BB                     	ds	2
  1135  0000BD                     efgtoa@pp:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x5D
  1139  0000BD                     	ds	2
  1140  0000BF                     efgtoa@m:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x5F
  1144  0000BF                     	ds	2
  1145  0000C1                     efgtoa@ne:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x61
  1149  0000C1                     	ds	2
  1150  0000C3                     efgtoa@d:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x63
  1154  0000C3                     	ds	2
  1155  0000C5                     efgtoa@sign:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x65
  1159  0000C5                     	ds	2
  1160  0000C7                     efgtoa@p:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x67
  1164  0000C7                     	ds	2
  1165  0000C9                     efgtoa@nmode:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x69
  1169  0000C9                     	ds	1
  1170  0000CA                     efgtoa@w:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x6A
  1174  0000CA                     	ds	2
  1175  0000CC                     efgtoa@mode:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x6C
  1179  0000CC                     	ds	1
  1180  0000CD                     efgtoa@h:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 4 bytes @ 0x6D
  1184  0000CD                     	ds	4
  1185  0000D1                     efgtoa@l:
  1186                           	opt callstack 0
  1187                           
  1188                           ; 4 bytes @ 0x71
  1189  0000D1                     	ds	4
  1190  0000D5                     efgtoa@i:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x75
  1194  0000D5                     	ds	2
  1195  0000D7                     efgtoa@g:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x77
  1199  0000D7                     	ds	4
  1200  0000DB                     efgtoa@e:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x7B
  1204  0000DB                     	ds	2
  1205  0000DD                     efgtoa@n:
  1206                           	opt callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x7D
  1209  0000DD                     	ds	2
  1210  0000DF                     efgtoa@u:
  1211                           	opt callstack 0
  1212                           
  1213                           ; 4 bytes @ 0x7F
  1214  0000DF                     	ds	4
  1215  0000E3                     ?_vfpfcnvrt:
  1216                           	opt callstack 0
  1217  0000E3                     vfpfcnvrt@fp:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x83
  1221  0000E3                     	ds	2
  1222  0000E5                     vfpfcnvrt@fmt:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x85
  1226  0000E5                     	ds	2
  1227  0000E7                     vfpfcnvrt@ap:
  1228                           	opt callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x87
  1231  0000E7                     	ds	2
  1232  0000E9                     ??_vfpfcnvrt:
  1233                           
  1234                           ; 1 bytes @ 0x89
  1235  0000E9                     	ds	4
  1236  0000ED                     ?_vfprintf:
  1237                           	opt callstack 0
  1238  0000ED                     vfprintf@fp:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x8D
  1242  0000ED                     	ds	2
  1243  0000EF                     vfprintf@fmt:
  1244                           	opt callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x8F
  1247  0000EF                     	ds	2
  1248  0000F1                     vfprintf@ap:
  1249                           	opt callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x91
  1252  0000F1                     	ds	2
  1253  0000F3                     vfprintf@cfmt:
  1254                           	opt callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x93
  1257  0000F3                     	ds	2
  1258  0000F5                     
  1259                           ; 1 bytes @ 0x95
  1260  0000F5                     	ds	2
  1261  0000F7                     sprintf@ap:
  1262                           	opt callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x97
  1265  0000F7                     	ds	2
  1266  0000F9                     sprintf@f:
  1267                           	opt callstack 0
  1268                           
  1269                           ; 6 bytes @ 0x99
  1270  0000F9                     	ds	6
  1271  0000FF                     
  1272                           ; 1 bytes @ 0x9F
  1273                           
  1274                           	psect	cstackCOMRAM
  1275  000001                     __pcstackCOMRAM:
  1276                           	opt callstack 0
  1277  000001                     ?i2___awdiv:
  1278                           	opt callstack 0
  1279  000001                     i2___awdiv@dividend:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x0
  1283  000001                     	ds	2
  1284  000003                     i2___awdiv@divisor:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x2
  1288  000003                     	ds	2
  1289  000005                     i2___awdiv@counter:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 1 bytes @ 0x4
  1293  000005                     	ds	1
  1294  000006                     i2___awdiv@sign:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 1 bytes @ 0x5
  1298  000006                     	ds	1
  1299  000007                     i2___awdiv@quotient:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x6
  1303  000007                     	ds	2
  1304  000009                     ?i2___xxtofl:
  1305                           	opt callstack 0
  1306  000009                     i2___xxtofl@val:
  1307                           	opt callstack 0
  1308                           
  1309                           ; 4 bytes @ 0x8
  1310  000009                     	ds	4
  1311  00000D                     ??i2___xxtofl:
  1312                           
  1313                           ; 1 bytes @ 0xC
  1314  00000D                     	ds	4
  1315  000011                     i2___xxtofl@sign:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 1 bytes @ 0x10
  1319  000011                     	ds	1
  1320  000012                     i2___xxtofl@exp:
  1321                           	opt callstack 0
  1322                           
  1323                           ; 1 bytes @ 0x11
  1324  000012                     	ds	1
  1325  000013                     i2___xxtofl@arg:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x12
  1329  000013                     	ds	4
  1330  000017                     ?i2___fladd:
  1331                           	opt callstack 0
  1332  000017                     i2___fladd@b:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 4 bytes @ 0x16
  1336  000017                     	ds	4
  1337  00001B                     i2___fladd@a:
  1338                           	opt callstack 0
  1339                           
  1340                           ; 4 bytes @ 0x1A
  1341  00001B                     	ds	4
  1342  00001F                     ??i2___fladd:
  1343                           
  1344                           ; 1 bytes @ 0x1E
  1345  00001F                     	ds	4
  1346  000023                     i2___fladd@signs:
  1347                           	opt callstack 0
  1348                           
  1349                           ; 1 bytes @ 0x22
  1350  000023                     	ds	1
  1351  000024                     i2___fladd@aexp:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 1 bytes @ 0x23
  1355  000024                     	ds	1
  1356  000025                     i2___fladd@bexp:
  1357                           	opt callstack 0
  1358                           
  1359                           ; 1 bytes @ 0x24
  1360  000025                     	ds	1
  1361  000026                     i2___fladd@grs:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x25
  1365  000026                     	ds	1
  1366  000027                     ??_rutina:
  1367                           
  1368                           ; 1 bytes @ 0x26
  1369  000027                     	ds	2
  1370  000029                     rutina@dato:
  1371                           	opt callstack 0
  1372                           
  1373                           ; 1 bytes @ 0x28
  1374  000029                     	ds	1
  1375                           
  1376 ;;
  1377 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1378 ;;
  1379 ;; *************** function _main *****************
  1380 ;; Defined at:
  1381 ;;		line 91 in file "auto.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  texto           8   69[BANK1 ] unsigned char [8]
  1386 ;;  text            6   63[BANK1 ] unsigned char [6]
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1397 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1399 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1400 ;;Total ram usage:       14 bytes
  1401 ;; Hardware stack levels required when called:   11
  1402 ;; This function calls:
  1403 ;;		_PWMServo
  1404 ;;		_configuracionInicial
  1405 ;;		_enviarRS232
  1406 ;;		_rutinaEscape
  1407 ;;		_sprintf
  1408 ;;		_terminal
  1409 ;; This function is called by:
  1410 ;;		Startup code after reset
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text0
  1415  0039A0                     __ptext0:
  1416                           	opt callstack 0
  1417  0039A0                     _main:
  1418                           	opt callstack 20
  1419                           
  1420                           ;auto.c: 92:     unsigned char text[] = "HOLA!";
  1421                           
  1422                           ;incstack = 0
  1423  0039A0  EE21  F0C9         	lfsr	2,main@F7116
  1424  0039A4  EE11  F0BB         	lfsr	1,main@text
  1425  0039A8  0E05               	movlw	5
  1426  0039AA                     u9601:
  1427  0039AA  CFDB FFE3          	movff	plusw2,plusw1
  1428  0039AE  06E8               	decf	wreg,f,c
  1429  0039B0  E2FC               	bc	u9601
  1430                           
  1431                           ;auto.c: 93:     unsigned char texto[8] = {'\0'};
  1432  0039B2  EE21  F0C1         	lfsr	2,main@texto
  1433  0039B6  0E07               	movlw	7
  1434  0039B8                     u9611:
  1435  0039B8  6ADE               	clrf	postinc2,c
  1436  0039BA  06E8               	decf	wreg,f,c
  1437  0039BC  E2FD               	bc	u9611
  1438                           
  1439                           ;auto.c: 94:     configuracionInicial();
  1440  0039BE  EC5D  F022         	call	_configuracionInicial	;wreg free
  1441                           
  1442                           ;auto.c: 95:     enviarRS232(text);
  1443  0039C2  0EBB               	movlw	low main@text
  1444  0039C4  0100               	movlb	0	; () banked
  1445  0039C6  6F68               	movwf	enviarRS232@valores& (0+255),b
  1446  0039C8  0E01               	movlw	high main@text
  1447  0039CA  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1448  0039CC  EC52  F01F         	call	_enviarRS232	;wreg free
  1449  0039D0                     l7598:
  1450                           
  1451                           ;auto.c: 97:         if(bandera == 1){
  1452  0039D0  0101               	movlb	1	; () banked
  1453  0039D2  0521               	decf	_bandera& (0+255),w,b
  1454  0039D4  A4D8               	btfss	status,2,c
  1455  0039D6  D008               	goto	l7604
  1456                           
  1457                           ; BSR set to: 1
  1458                           ;auto.c: 98:             bandera = 0;
  1459  0039D8  0E00               	movlw	0
  1460  0039DA  6F21               	movwf	_bandera& (0+255),b
  1461                           
  1462                           ; BSR set to: 1
  1463                           ;auto.c: 99:             terminal(datos);
  1464  0039DC  0E72               	movlw	low _datos
  1465  0039DE  6F9C               	movwf	terminal@comand& (0+255),b
  1466  0039E0  0E01               	movlw	high _datos
  1467  0039E2  6F9D               	movwf	(terminal@comand+1)& (0+255),b
  1468  0039E4  EC79  F017         	call	_terminal	;wreg free
  1469  0039E8                     l7604:
  1470                           
  1471                           ;auto.c: 101:         if(bandera_servo == 1){
  1472  0039E8  0101               	movlb	1	; () banked
  1473  0039EA  0520               	decf	_bandera_servo& (0+255),w,b
  1474  0039EC  A4D8               	btfss	status,2,c
  1475  0039EE  D004               	goto	l7610
  1476                           
  1477                           ; BSR set to: 1
  1478                           ;auto.c: 102:             bandera_servo = 0;
  1479  0039F0  0E00               	movlw	0
  1480  0039F2  6F20               	movwf	_bandera_servo& (0+255),b
  1481                           
  1482                           ; BSR set to: 1
  1483                           ;auto.c: 103:             PWMServo();
  1484  0039F4  ECE0  F020         	call	_PWMServo	;wreg free
  1485  0039F8                     l7610:
  1486                           
  1487                           ;auto.c: 105:         if(obstaculo == 1){
  1488  0039F8  0101               	movlb	1	; () banked
  1489  0039FA  051F               	decf	_obstaculo& (0+255),w,b
  1490  0039FC  A4D8               	btfss	status,2,c
  1491  0039FE  D005               	goto	l7616
  1492                           
  1493                           ; BSR set to: 1
  1494                           ;auto.c: 106:             obstaculo = 0;
  1495  003A00  0E00               	movlw	0
  1496  003A02  6F1F               	movwf	_obstaculo& (0+255),b
  1497                           
  1498                           ; BSR set to: 1
  1499                           ;auto.c: 107:             rutinaEscape(2);
  1500  003A04  0E02               	movlw	2
  1501  003A06  ECC6  F01F         	call	_rutinaEscape
  1502  003A0A                     l7616:
  1503                           
  1504                           ;auto.c: 109:         if(bandera_distancia == 1){
  1505  003A0A  0101               	movlb	1	; () banked
  1506  003A0C  051E               	decf	_bandera_distancia& (0+255),w,b
  1507  003A0E  A4D8               	btfss	status,2,c
  1508  003A10  D7DF               	goto	l7598
  1509                           
  1510                           ; BSR set to: 1
  1511                           ;auto.c: 110:             bandera_distancia = 0;
  1512  003A12  0E00               	movlw	0
  1513  003A14  6F1E               	movwf	_bandera_distancia& (0+255),b
  1514                           
  1515                           ; BSR set to: 1
  1516                           ;auto.c: 111:             sprintf(texto,"%03.1f cm",distancia);
  1517  003A16  0EC1               	movlw	low main@texto
  1518  003A18  6F94               	movwf	sprintf@s& (0+255),b
  1519  003A1A  0E01               	movlw	high main@texto
  1520  003A1C  6F95               	movwf	(sprintf@s+1)& (0+255),b
  1521  003A1E  0E77               	movlw	low STR_1
  1522  003A20  6F96               	movwf	sprintf@fmt& (0+255),b
  1523  003A22  0E0F               	movlw	high STR_1
  1524  003A24  6F97               	movwf	(sprintf@fmt+1)& (0+255),b
  1525  003A26  C032  F198         	movff	_distancia,?_sprintf+4
  1526  003A2A  C033  F199         	movff	_distancia+1,?_sprintf+5
  1527  003A2E  C034  F19A         	movff	_distancia+2,?_sprintf+6
  1528  003A32  C035  F19B         	movff	_distancia+3,?_sprintf+7
  1529  003A36  EC60  F020         	call	_sprintf	;wreg free
  1530                           
  1531                           ;auto.c: 112:             enviarRS232(texto);
  1532  003A3A  0EC1               	movlw	low main@texto
  1533  003A3C  0100               	movlb	0	; () banked
  1534  003A3E  6F68               	movwf	enviarRS232@valores& (0+255),b
  1535  003A40  0E01               	movlw	high main@texto
  1536  003A42  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1537  003A44  EC52  F01F         	call	_enviarRS232	;wreg free
  1538  003A48  D7C3               	goto	l7598
  1539  003A4A                     __end_of_main:
  1540                           	opt callstack 0
  1541                           
  1542 ;; *************** function _terminal *****************
  1543 ;; Defined at:
  1544 ;;		line 127 in file "auto.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  comand          2   32[BANK1 ] PTR unsigned char 
  1547 ;;		 -> datos(10), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  texto          20   39[BANK1 ] unsigned char [20]
  1550 ;;  degree          2   61[BANK1 ] unsigned int 
  1551 ;;  medicion        2   59[BANK1 ] unsigned int 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1561 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1564 ;;      Totals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1565 ;;Total ram usage:       31 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:   10
  1568 ;; This function calls:
  1569 ;;		_adelante
  1570 ;;		_atras
  1571 ;;		_cambiarPWM
  1572 ;;		_dirreccion
  1573 ;;		_encenderMotor
  1574 ;;		_enviarRS232
  1575 ;;		_estadoDirreccion
  1576 ;;		_fijarVelocidad
  1577 ;;		_frenarMotor
  1578 ;;		_sprintf
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text1
  1585  002EF2                     __ptext1:
  1586                           	opt callstack 0
  1587  002EF2                     _terminal:
  1588                           	opt callstack 20
  1589                           
  1590                           ;auto.c: 129:     unsigned int degree;;auto.c: 130:     unsigned char texto[20] = {'\0'}
      +                          ;
  1591                           
  1592                           ;incstack = 0
  1593  002EF2  EE21  F0A3         	lfsr	2,terminal@texto
  1594  002EF6  0E13               	movlw	19
  1595  002EF8                     u9571:
  1596  002EF8  6ADE               	clrf	postinc2,c
  1597  002EFA  06E8               	decf	wreg,f,c
  1598  002EFC  E2FD               	bc	u9571
  1599                           
  1600                           ;auto.c: 131:     TXREG2 = 0x55;
  1601  002EFE  0E55               	movlw	85
  1602  002F00  6EA9               	movwf	4009,c	;volatile
  1603                           
  1604                           ;auto.c: 132:     switch (comand[0]){
  1605  002F02  D085               	goto	l7538
  1606  002F04                     l7508:
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;auto.c: 134:             adelante();
  1610  002F04  ECAA  F022         	call	_adelante	;wreg free
  1611                           
  1612                           ;auto.c: 135:             encenderMotor();
  1613  002F08  EC91  F022         	call	_encenderMotor	;wreg free
  1614                           
  1615                           ;auto.c: 136:             enviarRS232("Motores encendidos!");
  1616  002F0C  0E63               	movlw	low STR_2
  1617  002F0E  0100               	movlb	0	; () banked
  1618  002F10  6F68               	movwf	enviarRS232@valores& (0+255),b
  1619  002F12  0E0F               	movlw	high STR_2
  1620  002F14  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1621  002F16  EC52  F01F         	call	_enviarRS232	;wreg free
  1622                           
  1623                           ;auto.c: 137:             break;
  1624  002F1A  0012               	return	
  1625  002F1C                     l7514:
  1626                           
  1627                           ; BSR set to: 1
  1628                           ;auto.c: 139:             atras();
  1629  002F1C  ECA5  F022         	call	_atras	;wreg free
  1630                           
  1631                           ;auto.c: 140:             encenderMotor();
  1632  002F20  EC91  F022         	call	_encenderMotor	;wreg free
  1633                           
  1634                           ;auto.c: 141:             enviarRS232("Vehiculo en reversa!");
  1635  002F24  0E4E               	movlw	low STR_3
  1636  002F26  0100               	movlb	0	; () banked
  1637  002F28  6F68               	movwf	enviarRS232@valores& (0+255),b
  1638  002F2A  0E0F               	movlw	high STR_3
  1639  002F2C  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1640  002F2E  EC52  F01F         	call	_enviarRS232	;wreg free
  1641                           
  1642                           ;auto.c: 142:             break;
  1643  002F32  0012               	return	
  1644  002F34                     l7520:
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;auto.c: 144:             degree = estadoDirreccion(2);
  1648  002F34  0E02               	movlw	2
  1649  002F36  ECD3  F01E         	call	_estadoDirreccion
  1650  002F3A  C060  F1B9         	movff	?_estadoDirreccion,terminal@degree
  1651  002F3E  C061  F1BA         	movff	?_estadoDirreccion+1,terminal@degree+1
  1652                           
  1653                           ;auto.c: 145:             dirreccion(degree);
  1654  002F42  C1B9  F060         	movff	terminal@degree,dirreccion@degree
  1655  002F46  C1BA  F061         	movff	terminal@degree+1,dirreccion@degree+1
  1656  002F4A  EC0A  F01E         	call	_dirreccion	;wreg free
  1657                           
  1658                           ;auto.c: 146:             break;
  1659  002F4E  0012               	return	
  1660  002F50                     l7522:
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;auto.c: 148:             degree = estadoDirreccion(1);
  1664  002F50  0E01               	movlw	1
  1665  002F52  ECD3  F01E         	call	_estadoDirreccion
  1666  002F56  C060  F1B9         	movff	?_estadoDirreccion,terminal@degree
  1667  002F5A  C061  F1BA         	movff	?_estadoDirreccion+1,terminal@degree+1
  1668                           
  1669                           ;auto.c: 149:             dirreccion(degree);
  1670  002F5E  C1B9  F060         	movff	terminal@degree,dirreccion@degree
  1671  002F62  C1BA  F061         	movff	terminal@degree+1,dirreccion@degree+1
  1672  002F66  EC0A  F01E         	call	_dirreccion	;wreg free
  1673                           
  1674                           ;auto.c: 150:             break;
  1675  002F6A  0012               	return	
  1676  002F6C                     l7524:
  1677                           
  1678                           ; BSR set to: 1
  1679                           ;auto.c: 152:             frenarMotor();
  1680  002F6C  EC81  F022         	call	_frenarMotor	;wreg free
  1681                           
  1682                           ;auto.c: 153:             break;
  1683  002F70  0012               	return	
  1684  002F72                     l7526:
  1685                           
  1686                           ; BSR set to: 1
  1687                           ;auto.c: 155:             medicion = (comand[1] - 0x30)*100 + (comand[2] - 0x30)*10 + co
      +                          mand[3] - 0x30;
  1688  002F72  EE20 F001          	lfsr	2,1
  1689  002F76  519C               	movf	terminal@comand& (0+255),w,b
  1690  002F78  26D9               	addwf	fsr2l,f,c
  1691  002F7A  519D               	movf	(terminal@comand+1)& (0+255),w,b
  1692  002F7C  22DA               	addwfc	fsr2h,f,c
  1693  002F7E  50DF               	movf	indf2,w,c
  1694  002F80  6F9E               	movwf	??_terminal& (0+255),b
  1695  002F82  519E               	movf	??_terminal& (0+255),w,b
  1696  002F84  0D64               	mullw	100
  1697  002F86  CFF3 F19F          	movff	prodl,??_terminal+1
  1698  002F8A  CFF4 F1A0          	movff	prodh,??_terminal+2
  1699  002F8E  EE20 F002          	lfsr	2,2
  1700  002F92  519C               	movf	terminal@comand& (0+255),w,b
  1701  002F94  26D9               	addwf	fsr2l,f,c
  1702  002F96  519D               	movf	(terminal@comand+1)& (0+255),w,b
  1703  002F98  22DA               	addwfc	fsr2h,f,c
  1704  002F9A  50DF               	movf	indf2,w,c
  1705  002F9C  6FA1               	movwf	(??_terminal+3)& (0+255),b
  1706  002F9E  51A1               	movf	(??_terminal+3)& (0+255),w,b
  1707  002FA0  0D0A               	mullw	10
  1708  002FA2  50F3               	movf	prodl,w,c
  1709  002FA4  279F               	addwf	(??_terminal+1)& (0+255),f,b
  1710  002FA6  50F4               	movf	prodh,w,c
  1711  002FA8  23A0               	addwfc	(??_terminal+2)& (0+255),f,b
  1712  002FAA  EE20 F003          	lfsr	2,3
  1713  002FAE  519C               	movf	terminal@comand& (0+255),w,b
  1714  002FB0  26D9               	addwf	fsr2l,f,c
  1715  002FB2  519D               	movf	(terminal@comand+1)& (0+255),w,b
  1716  002FB4  22DA               	addwfc	fsr2h,f,c
  1717  002FB6  50DF               	movf	indf2,w,c
  1718  002FB8  6FA2               	movwf	(??_terminal+4)& (0+255),b
  1719  002FBA  51A2               	movf	(??_terminal+4)& (0+255),w,b
  1720  002FBC  279F               	addwf	(??_terminal+1)& (0+255),f,b
  1721  002FBE  0E00               	movlw	0
  1722  002FC0  23A0               	addwfc	(??_terminal+2)& (0+255),f,b
  1723  002FC2  0E30               	movlw	48
  1724  002FC4  259F               	addwf	(??_terminal+1)& (0+255),w,b
  1725  002FC6  6FB7               	movwf	terminal@medicion& (0+255),b
  1726  002FC8  0EEB               	movlw	235
  1727  002FCA  21A0               	addwfc	(??_terminal+2)& (0+255),w,b
  1728  002FCC  6FB8               	movwf	(terminal@medicion+1)& (0+255),b
  1729                           
  1730                           ; BSR set to: 1
  1731                           ;auto.c: 156:             fijarVelocidad(medicion);
  1732  002FCE  51B7               	movf	terminal@medicion& (0+255),w,b
  1733  002FD0  EC15  F01A         	call	_fijarVelocidad
  1734                           
  1735                           ;auto.c: 157:             cambiarPWM();
  1736  002FD4  EC9F  F022         	call	_cambiarPWM	;wreg free
  1737                           
  1738                           ;auto.c: 158:             sprintf(texto, "Velocidad fijada al: %03u%c", medicion, '%');
  1739  002FD8  0EA3               	movlw	low terminal@texto
  1740  002FDA  0101               	movlb	1	; () banked
  1741  002FDC  6F94               	movwf	sprintf@s& (0+255),b
  1742  002FDE  0E01               	movlw	high terminal@texto
  1743  002FE0  6F95               	movwf	(sprintf@s+1)& (0+255),b
  1744  002FE2  0E32               	movlw	low STR_4
  1745  002FE4  6F96               	movwf	sprintf@fmt& (0+255),b
  1746  002FE6  0E0F               	movlw	high STR_4
  1747  002FE8  6F97               	movwf	(sprintf@fmt+1)& (0+255),b
  1748  002FEA  C1B7  F198         	movff	terminal@medicion,?_sprintf+4
  1749  002FEE  C1B8  F199         	movff	terminal@medicion+1,?_sprintf+5
  1750  002FF2  0E00               	movlw	0
  1751  002FF4  6F9B               	movwf	(?_sprintf+7)& (0+255),b
  1752  002FF6  0E25               	movlw	37
  1753  002FF8  6F9A               	movwf	(?_sprintf+6)& (0+255),b
  1754  002FFA  EC60  F020         	call	_sprintf	;wreg free
  1755                           
  1756                           ;auto.c: 159:             enviarRS232(texto);
  1757  002FFE  0EA3               	movlw	low terminal@texto
  1758  003000  0100               	movlb	0	; () banked
  1759  003002  6F68               	movwf	enviarRS232@valores& (0+255),b
  1760  003004  0E01               	movlw	high terminal@texto
  1761  003006  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  1762  003008  EC52  F01F         	call	_enviarRS232	;wreg free
  1763                           
  1764                           ;auto.c: 160:             break;
  1765  00300C  0012               	return	
  1766  00300E                     l7538:
  1767  00300E  C19C  FFD9         	movff	terminal@comand,fsr2l
  1768  003012  C19D  FFDA         	movff	terminal@comand+1,fsr2h
  1769  003016  50DF               	movf	indf2,w,c
  1770  003018  0101               	movlb	1	; () banked
  1771  00301A  6F9E               	movwf	??_terminal& (0+255),b
  1772  00301C  6B9F               	clrf	(??_terminal+1)& (0+255),b
  1773                           
  1774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1775                           ; Switch size 1, requested type "simple"
  1776                           ; Number of cases is 1, Range of values is 0 to 0
  1777                           ; switch strategies available:
  1778                           ; Name         Instructions Cycles
  1779                           ; simple_byte            4     3 (average)
  1780                           ;	Chosen strategy is simple_byte
  1781  00301E  519F               	movf	(??_terminal+1)& (0+255),w,b
  1782  003020  0A00               	xorlw	0	; case 0
  1783  003022  A4D8               	btfss	status,2,c
  1784  003024  0012               	return	
  1785                           
  1786                           ; BSR set to: 1
  1787                           ; Switch size 1, requested type "simple"
  1788                           ; Number of cases is 6, Range of values is 70 to 119
  1789                           ; switch strategies available:
  1790                           ; Name         Instructions Cycles
  1791                           ; simple_byte           19    10 (average)
  1792                           ;	Chosen strategy is simple_byte
  1793  003026  519E               	movf	??_terminal& (0+255),w,b
  1794  003028  0A46               	xorlw	70	; case 70
  1795  00302A  B4D8               	btfsc	status,2,c
  1796  00302C  D7A2               	goto	l7526
  1797  00302E  0A27               	xorlw	39	; case 97
  1798  003030  B4D8               	btfsc	status,2,c
  1799  003032  D780               	goto	l7520
  1800  003034  0A02               	xorlw	2	; case 99
  1801  003036  B4D8               	btfsc	status,2,c
  1802  003038  D799               	goto	l7524
  1803  00303A  0A07               	xorlw	7	; case 100
  1804  00303C  B4D8               	btfsc	status,2,c
  1805  00303E  D788               	goto	l7522
  1806  003040  0A17               	xorlw	23	; case 115
  1807  003042  B4D8               	btfsc	status,2,c
  1808  003044  D76B               	goto	l7514
  1809  003046  0A04               	xorlw	4	; case 119
  1810  003048  A4D8               	btfss	status,2,c
  1811  00304A  0012               	return	
  1812  00304C  D75B               	goto	l7508
  1813  00304E                     __end_of_terminal:
  1814                           	opt callstack 0
  1815                           
  1816 ;; *************** function _sprintf *****************
  1817 ;; Defined at:
  1818 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  s               2   24[BANK1 ] PTR unsigned char 
  1821 ;;		 -> terminal@texto(20), main@texto(8), 
  1822 ;;  fmt             2   26[BANK1 ] PTR const unsigned char 
  1823 ;;		 -> STR_4(28), STR_1(10), 
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  f               6  153[BANK0 ] struct _IO_FILE
  1826 ;;  ap              2  151[BANK0 ] PTR void [1]
  1827 ;;		 -> ?_sprintf(2), 
  1828 ;;  ret             2    0        int 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2   24[BANK1 ] int 
  1831 ;; Registers used:
  1832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1838 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;      Totals:         0      10       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1842 ;;Total ram usage:       18 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    9
  1845 ;; This function calls:
  1846 ;;		_vfprintf
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;;		_terminal
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text2
  1854  0040C0                     __ptext2:
  1855                           	opt callstack 0
  1856  0040C0                     _sprintf:
  1857                           	opt callstack 20
  1858                           
  1859                           ;incstack = 0
  1860  0040C0  0E98               	movlw	low (?_sprintf+4)
  1861  0040C2  0100               	movlb	0	; () banked
  1862  0040C4  6FF7               	movwf	sprintf@ap& (0+255),b
  1863  0040C6  0E01               	movlw	high (?_sprintf+4)
  1864  0040C8  6FF8               	movwf	(sprintf@ap+1)& (0+255),b
  1865  0040CA  C194  F0F9         	movff	sprintf@s,sprintf@f
  1866  0040CE  C195  F0FA         	movff	sprintf@s+1,sprintf@f+1
  1867                           
  1868                           ; BSR set to: 0
  1869  0040D2  0E00               	movlw	0
  1870  0040D4  6FFC               	movwf	(sprintf@f+3)& (0+255),b
  1871  0040D6  0E00               	movlw	0
  1872  0040D8  6FFB               	movwf	(sprintf@f+2)& (0+255),b
  1873                           
  1874                           ; BSR set to: 0
  1875  0040DA  0E00               	movlw	0
  1876  0040DC  6FFE               	movwf	(sprintf@f+5)& (0+255),b
  1877  0040DE  0E00               	movlw	0
  1878  0040E0  6FFD               	movwf	(sprintf@f+4)& (0+255),b
  1879                           
  1880                           ; BSR set to: 0
  1881  0040E2  0EF9               	movlw	low sprintf@f
  1882  0040E4  6FED               	movwf	vfprintf@fp& (0+255),b
  1883  0040E6  0E00               	movlw	high sprintf@f
  1884  0040E8  6FEE               	movwf	(vfprintf@fp+1)& (0+255),b
  1885  0040EA  C196  F0EF         	movff	sprintf@fmt,vfprintf@fmt
  1886  0040EE  C197  F0F0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1887  0040F2  0EF7               	movlw	low sprintf@ap
  1888  0040F4  6FF1               	movwf	vfprintf@ap& (0+255),b
  1889  0040F6  0E00               	movlw	high sprintf@ap
  1890  0040F8  6FF2               	movwf	(vfprintf@ap+1)& (0+255),b
  1891  0040FA  EC2F  F020         	call	_vfprintf	;wreg free
  1892  0040FE  0100               	movlb	0	; () banked
  1893  004100  51FB               	movf	(sprintf@f+2)& (0+255),w,b
  1894  004102  0101               	movlb	1	; () banked
  1895  004104  2594               	addwf	sprintf@s& (0+255),w,b
  1896  004106  6ED9               	movwf	fsr2l,c
  1897  004108  0100               	movlb	0	; () banked
  1898  00410A  51FC               	movf	(sprintf@f+3)& (0+255),w,b
  1899  00410C  0101               	movlb	1	; () banked
  1900  00410E  2195               	addwfc	(sprintf@s+1)& (0+255),w,b
  1901  004110  6EDA               	movwf	fsr2h,c
  1902  004112  0E00               	movlw	0
  1903  004114  6EDF               	movwf	indf2,c
  1904                           
  1905                           ; BSR set to: 1
  1906  004116  0012               	return		;funcret
  1907  004118                     __end_of_sprintf:
  1908                           	opt callstack 0
  1909                           
  1910 ;; *************** function _vfprintf *****************
  1911 ;; Defined at:
  1912 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;  fp              2  141[BANK0 ] PTR struct _IO_FILE
  1915 ;;		 -> sprintf@f(6), 
  1916 ;;  fmt             2  143[BANK0 ] PTR const unsigned char 
  1917 ;;		 -> STR_4(28), STR_1(10), 
  1918 ;;  ap              2  145[BANK0 ] PTR PTR void 
  1919 ;;		 -> sprintf@ap(2), 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  cfmt            2  147[BANK0 ] PTR unsigned char 
  1922 ;;		 -> STR_4(28), STR_1(10), 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  2  141[BANK0 ] int 
  1925 ;; Registers used:
  1926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1932 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1933 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1935 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1936 ;;Total ram usage:        8 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    8
  1939 ;; This function calls:
  1940 ;;		_vfpfcnvrt
  1941 ;; This function is called by:
  1942 ;;		_sprintf
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text3
  1947  00405E                     __ptext3:
  1948                           	opt callstack 0
  1949  00405E                     _vfprintf:
  1950                           	opt callstack 20
  1951                           
  1952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1953                           
  1954                           ; BSR set to: 1
  1955                           ;incstack = 0
  1956  00405E  C0EF  F0F3         	movff	vfprintf@fmt,vfprintf@cfmt
  1957  004062  C0F0  F0F4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1958                           
  1959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1960  004066  0E00               	movlw	0
  1961  004068  0101               	movlb	1	; () banked
  1962  00406A  6F1D               	movwf	(_nout+1)& (0+255),b
  1963  00406C  0E00               	movlw	0
  1964  00406E  6F1C               	movwf	_nout& (0+255),b
  1965                           
  1966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1967  004070  D017               	goto	l7302
  1968  004072                     l7300:
  1969                           
  1970                           ; BSR set to: 1
  1971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1972  004072  C0ED  F0E3         	movff	vfprintf@fp,vfpfcnvrt@fp
  1973  004076  C0EE  F0E4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1974  00407A  0EF3               	movlw	low vfprintf@cfmt
  1975  00407C  0100               	movlb	0	; () banked
  1976  00407E  6FE5               	movwf	vfpfcnvrt@fmt& (0+255),b
  1977  004080  0E00               	movlw	high vfprintf@cfmt
  1978  004082  6FE6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1979  004084  C0F1  F0E7         	movff	vfprintf@ap,vfpfcnvrt@ap
  1980  004088  C0F2  F0E8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1981  00408C  EC91  F00C         	call	_vfpfcnvrt	;wreg free
  1982  004090  0100               	movlb	0	; () banked
  1983  004092  51E3               	movf	?_vfpfcnvrt& (0+255),w,b
  1984  004094  0101               	movlb	1	; () banked
  1985  004096  271C               	addwf	_nout& (0+255),f,b
  1986  004098  0100               	movlb	0	; () banked
  1987  00409A  51E4               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1988  00409C  0101               	movlb	1	; () banked
  1989  00409E  231D               	addwfc	(_nout+1)& (0+255),f,b
  1990  0040A0                     l7302:
  1991                           
  1992                           ; BSR set to: 1
  1993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1994  0040A0  C0F3  FFF6         	movff	vfprintf@cfmt,tblptrl
  1995  0040A4  C0F4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1996  0040A8                     	if	0	;tblptru may be non-zero
  1997  0040A8                     	endif
  1998  0040A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1999  0040A8  0E00               	movlw	low (__mediumconst shr (0+16))
  2000  0040AA  6EF8               	movwf	tblptru,c
  2001  0040AC                     	endif
  2002  0040AC  0008               	tblrd		*
  2003  0040AE  50F5               	movf	tablat,w,c
  2004  0040B0  0900               	iorlw	0
  2005  0040B2  A4D8               	btfss	status,2,c
  2006  0040B4  D7DE               	goto	l7300
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2010  0040B6  C11C  F0ED         	movff	_nout,?_vfprintf
  2011  0040BA  C11D  F0EE         	movff	_nout+1,?_vfprintf+1
  2012                           
  2013                           ; BSR set to: 1
  2014  0040BE  0012               	return		;funcret
  2015  0040C0                     __end_of_vfprintf:
  2016                           	opt callstack 0
  2017                           
  2018 ;; *************** function _vfpfcnvrt *****************
  2019 ;; Defined at:
  2020 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  fp              2  131[BANK0 ] PTR struct _IO_FILE
  2023 ;;		 -> sprintf@f(6), 
  2024 ;;  fmt             2  133[BANK0 ] PTR PTR unsigned char 
  2025 ;;		 -> vfprintf@cfmt(2), 
  2026 ;;  ap              2  135[BANK0 ] PTR PTR void 
  2027 ;;		 -> sprintf@ap(2), 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  llu             8    0[BANK1 ] unsigned long long 
  2030 ;;  ll              8    0        long long 
  2031 ;;  f               4   16[BANK1 ] long long 
  2032 ;;  ct              3   20[BANK1 ] unsigned char [3]
  2033 ;;  vp              3    0        PTR void 
  2034 ;;  cp              3    0        PTR unsigned char 
  2035 ;;  done            2    8[BANK1 ] int 
  2036 ;;  i               2    0        int 
  2037 ;;  c               1   23[BANK1 ] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  2  131[BANK0 ] int 
  2040 ;; Registers used:
  2041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2047 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2048 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2049 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2050 ;;      Totals:         0      10      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2051 ;;Total ram usage:       34 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:    7
  2054 ;; This function calls:
  2055 ;;		_atoi
  2056 ;;		_ctoa
  2057 ;;		_efgtoa
  2058 ;;		_fputc
  2059 ;;		_isdigit
  2060 ;;		_isupper
  2061 ;;		_strncmp
  2062 ;;		_tolower
  2063 ;;		_utoa
  2064 ;; This function is called by:
  2065 ;;		_vfprintf
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text4
  2070  001922                     __ptext4:
  2071                           	opt callstack 0
  2072  001922                     _vfpfcnvrt:
  2073                           	opt callstack 20
  2074                           
  2075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2076                           
  2077                           ; BSR set to: 1
  2078                           ;incstack = 0
  2079  001922  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2080  001926  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2081  00192A  CFDE FFF6          	movff	postinc2,tblptrl
  2082  00192E  CFDD FFF7          	movff	postdec2,tblptrh
  2083  001932                     	if	0	;tblptru may be non-zero
  2084  001932                     	endif
  2085  001932                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2086  001932  0E00               	movlw	low (__mediumconst shr (0+16))
  2087  001934  6EF8               	movwf	tblptru,c
  2088  001936                     	endif
  2089  001936  0008               	tblrd		*
  2090  001938  50F5               	movf	tablat,w,c
  2091  00193A  0A25               	xorlw	37
  2092  00193C  A4D8               	btfss	status,2,c
  2093  00193E  D308               	goto	l7258
  2094                           
  2095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2096  001940  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2097  001944  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2098  001948  2ADE               	incf	postinc2,f,c
  2099  00194A  0E00               	movlw	0
  2100  00194C  22DD               	addwfc	postdec2,f,c
  2101                           
  2102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2103  00194E  0E00               	movlw	0
  2104  001950  6E37               	movwf	_width+1,c
  2105  001952  0E00               	movlw	0
  2106  001954  6E36               	movwf	_width,c
  2107  001956  C036  F03A         	movff	_width,_flags
  2108  00195A  C037  F03B         	movff	_width+1,_flags+1
  2109                           
  2110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2111  00195E  6838               	setf	_prec,c
  2112  001960  6839               	setf	_prec+1,c
  2113                           
  2114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2115  001962  0E00               	movlw	0
  2116  001964  0101               	movlb	1	; () banked
  2117  001966  6F85               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2118  001968  0E00               	movlw	0
  2119  00196A  D015               	goto	L1
  2120  00196C                     l7120:
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2124  00196C  803A               	bsf	_flags,0,c
  2125  00196E                     l7122:
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2129  00196E  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2130  001972  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2131  001976  2ADE               	incf	postinc2,f,c
  2132  001978  0E00               	movlw	0
  2133  00197A  22DD               	addwfc	postdec2,f,c
  2134                           
  2135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2136  00197C  D032               	goto	l7146
  2137  00197E                     l7124:
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2141  00197E  823A               	bsf	_flags,1,c
  2142  001980  D7F6               	goto	l7122
  2143  001982                     l7128:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2147  001982  843A               	bsf	_flags,2,c
  2148  001984  D7F4               	goto	l7122
  2149  001986                     l7132:
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2153  001986  863A               	bsf	_flags,3,c
  2154  001988  D7F2               	goto	l7122
  2155  00198A                     l7136:
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2159  00198A  883A               	bsf	_flags,4,c
  2160  00198C  D7F0               	goto	l7122
  2161  00198E                     l7140:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2165  00198E  0E00               	movlw	0
  2166  001990  0101               	movlb	1	; () banked
  2167  001992  6F85               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2168  001994  0E01               	movlw	1
  2169  001996                     L1:
  2170  001996  6F84               	movwf	vfpfcnvrt@done& (0+255),b
  2171                           
  2172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2173  001998  D024               	goto	l7146
  2174  00199A                     l7144:
  2175                           
  2176                           ; BSR set to: 1
  2177  00199A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2178  00199E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2179  0019A2  CFDE FFF6          	movff	postinc2,tblptrl
  2180  0019A6  CFDD FFF7          	movff	postdec2,tblptrh
  2181  0019AA                     	if	0	;tblptru may be non-zero
  2182  0019AA                     	endif
  2183  0019AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2184  0019AA  0E00               	movlw	low (__mediumconst shr (0+16))
  2185  0019AC  6EF8               	movwf	tblptru,c
  2186  0019AE                     	endif
  2187  0019AE  0008               	tblrd		*
  2188  0019B0  50F5               	movf	tablat,w,c
  2189  0019B2  0100               	movlb	0	; () banked
  2190  0019B4  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2191  0019B6  6BEA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2192                           
  2193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2194                           ; Switch size 1, requested type "simple"
  2195                           ; Number of cases is 1, Range of values is 0 to 0
  2196                           ; switch strategies available:
  2197                           ; Name         Instructions Cycles
  2198                           ; simple_byte            4     3 (average)
  2199                           ;	Chosen strategy is simple_byte
  2200  0019B8  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2201  0019BA  0A00               	xorlw	0	; case 0
  2202  0019BC  A4D8               	btfss	status,2,c
  2203  0019BE  D7E7               	goto	l7140
  2204                           
  2205                           ; BSR set to: 0
  2206                           ; Switch size 1, requested type "simple"
  2207                           ; Number of cases is 5, Range of values is 32 to 48
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte           16     9 (average)
  2211                           ;	Chosen strategy is simple_byte
  2212  0019C0  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2213  0019C2  0A20               	xorlw	32	; case 32
  2214  0019C4  B4D8               	btfsc	status,2,c
  2215  0019C6  D7DF               	goto	l7132
  2216  0019C8  0A03               	xorlw	3	; case 35
  2217  0019CA  B4D8               	btfsc	status,2,c
  2218  0019CC  D7DE               	goto	l7136
  2219  0019CE  0A08               	xorlw	8	; case 43
  2220  0019D0  B4D8               	btfsc	status,2,c
  2221  0019D2  D7D7               	goto	l7128
  2222  0019D4  0A06               	xorlw	6	; case 45
  2223  0019D6  B4D8               	btfsc	status,2,c
  2224  0019D8  D7C9               	goto	l7120
  2225  0019DA  0A1D               	xorlw	29	; case 48
  2226  0019DC  B4D8               	btfsc	status,2,c
  2227  0019DE  D7CF               	goto	l7124
  2228  0019E0  D7D6               	goto	l7140
  2229  0019E2                     l7146:
  2230                           
  2231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2232  0019E2  0101               	movlb	1	; () banked
  2233  0019E4  5184               	movf	vfpfcnvrt@done& (0+255),w,b
  2234  0019E6  1185               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2235  0019E8  B4D8               	btfsc	status,2,c
  2236  0019EA  D7D7               	goto	l7144
  2237                           
  2238                           ; BSR set to: 1
  2239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2240  0019EC  B03A               	btfsc	_flags,0,c
  2241                           
  2242                           ; BSR set to: 1
  2243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2244  0019EE  923A               	bcf	_flags,1,c
  2245                           
  2246                           ; BSR set to: 1
  2247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2248  0019F0  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2249  0019F4  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2250  0019F8  CFDE FFF6          	movff	postinc2,tblptrl
  2251  0019FC  CFDD FFF7          	movff	postdec2,tblptrh
  2252  001A00                     	if	0	;tblptru may be non-zero
  2253  001A00                     	endif
  2254  001A00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2255  001A00  0E00               	movlw	low (__mediumconst shr (0+16))
  2256  001A02  6EF8               	movwf	tblptru,c
  2257  001A04                     	endif
  2258  001A04  0008               	tblrd		*
  2259  001A06  50F5               	movf	tablat,w,c
  2260  001A08  0A2A               	xorlw	42
  2261  001A0A  A4D8               	btfss	status,2,c
  2262  001A0C  D023               	goto	l7158
  2263                           
  2264                           ; BSR set to: 1
  2265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2266  001A0E  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2267  001A12  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2268  001A16  2ADE               	incf	postinc2,f,c
  2269  001A18  0E00               	movlw	0
  2270  001A1A  22DD               	addwfc	postdec2,f,c
  2271                           
  2272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2273  001A1C  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2274  001A20  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2275  001A24  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2276  001A28  0E02               	movlw	2
  2277  001A2A  26DE               	addwf	postinc2,f,c
  2278  001A2C  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2279  001A30  0E00               	movlw	0
  2280  001A32  22DD               	addwfc	postdec2,f,c
  2281  001A34  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2282  001A38  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2283  001A3C  CFDE F036          	movff	postinc2,_width
  2284  001A40  CFDD F037          	movff	postdec2,_width+1
  2285                           
  2286                           ; BSR set to: 1
  2287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2288  001A44  AE37               	btfss	_width+1,7,c
  2289  001A46  D043               	goto	u9200
  2290                           
  2291                           ; BSR set to: 1
  2292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2293  001A48  803A               	bsf	_flags,0,c
  2294                           
  2295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2296  001A4A  6C36               	negf	_width,c
  2297  001A4C  1E37               	comf	_width+1,f,c
  2298  001A4E  B0D8               	btfsc	status,0,c
  2299  001A50  2A37               	incf	_width+1,f,c
  2300  001A52  D03D               	goto	u9200
  2301  001A54                     l7158:
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2305  001A54  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2306  001A58  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2307  001A5C  CFDE F067          	movff	postinc2,atoi@s
  2308  001A60  CFDD F068          	movff	postdec2,atoi@s+1
  2309  001A64  EC27  F018         	call	_atoi	;wreg free
  2310  001A68  C067  F036         	movff	?_atoi,_width
  2311  001A6C  C068  F037         	movff	?_atoi+1,_width+1
  2312                           
  2313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2314  001A70  D007               	goto	l7162
  2315  001A72                     l7160:
  2316                           
  2317                           ; BSR set to: 1
  2318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2319  001A72  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2320  001A76  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2321  001A7A  2ADE               	incf	postinc2,f,c
  2322  001A7C  0E00               	movlw	0
  2323  001A7E  22DD               	addwfc	postdec2,f,c
  2324  001A80                     l7162:
  2325  001A80  0ED0               	movlw	208
  2326  001A82  0100               	movlb	0	; () banked
  2327  001A84  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2328  001A86  0EFF               	movlw	255
  2329  001A88  6FEA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2330  001A8A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2331  001A8E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2332  001A92  CFDE FFF6          	movff	postinc2,tblptrl
  2333  001A96  CFDD FFF7          	movff	postdec2,tblptrh
  2334  001A9A                     	if	0	;tblptru may be non-zero
  2335  001A9A                     	endif
  2336  001A9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2337  001A9A  0E00               	movlw	low (__mediumconst shr (0+16))
  2338  001A9C  6EF8               	movwf	tblptru,c
  2339  001A9E                     	endif
  2340  001A9E  0008               	tblrd		*
  2341  001AA0  50F5               	movf	tablat,w,c
  2342  001AA2  6FEB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2343  001AA4  6BEC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2344  001AA6  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2345  001AA8  27EB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2346  001AAA  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2347  001AAC  23EC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2348  001AAE  51EC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2349  001AB0  E106               	bnz	u9180
  2350  001AB2  0E0A               	movlw	10
  2351  001AB4  5DEB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2352  001AB6  B0D8               	btfsc	status,0,c
  2353  001AB8  D002               	goto	u9180
  2354  001ABA  0E01               	movlw	1
  2355  001ABC  D001               	goto	u9190
  2356  001ABE                     u9180:
  2357  001ABE  0E00               	movlw	0
  2358  001AC0                     u9190:
  2359  001AC0  0101               	movlb	1	; () banked
  2360  001AC2  6F86               	movwf	_vfpfcnvrt$1443& (0+255),b
  2361  001AC4  6B87               	clrf	(_vfpfcnvrt$1443+1)& (0+255),b
  2362                           
  2363                           ; BSR set to: 1
  2364  001AC6  5186               	movf	_vfpfcnvrt$1443& (0+255),w,b
  2365  001AC8  1187               	iorwf	(_vfpfcnvrt$1443+1)& (0+255),w,b
  2366  001ACA  A4D8               	btfss	status,2,c
  2367  001ACC  D7D2               	goto	l7160
  2368  001ACE                     u9200:
  2369                           
  2370                           ; BSR set to: 1
  2371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2372  001ACE  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2373  001AD2  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2374  001AD6  CFDE FFF6          	movff	postinc2,tblptrl
  2375  001ADA  CFDD FFF7          	movff	postdec2,tblptrh
  2376  001ADE                     	if	0	;tblptru may be non-zero
  2377  001ADE                     	endif
  2378  001ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2379  001ADE  0E00               	movlw	low (__mediumconst shr (0+16))
  2380  001AE0  6EF8               	movwf	tblptru,c
  2381  001AE2                     	endif
  2382  001AE2  0008               	tblrd		*
  2383  001AE4  50F5               	movf	tablat,w,c
  2384  001AE6  0A2E               	xorlw	46
  2385  001AE8  A4D8               	btfss	status,2,c
  2386  001AEA  D073               	goto	u9250
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2390  001AEC  0E00               	movlw	0
  2391  001AEE  6E39               	movwf	_prec+1,c
  2392  001AF0  0E00               	movlw	0
  2393  001AF2  6E38               	movwf	_prec,c
  2394                           
  2395                           ; BSR set to: 1
  2396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2397  001AF4  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2398  001AF8  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2399  001AFC  2ADE               	incf	postinc2,f,c
  2400  001AFE  0E00               	movlw	0
  2401  001B00  22DD               	addwfc	postdec2,f,c
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2405  001B02  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2406  001B06  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2407  001B0A  CFDE FFF6          	movff	postinc2,tblptrl
  2408  001B0E  CFDD FFF7          	movff	postdec2,tblptrh
  2409  001B12                     	if	0	;tblptru may be non-zero
  2410  001B12                     	endif
  2411  001B12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2412  001B12  0E00               	movlw	low (__mediumconst shr (0+16))
  2413  001B14  6EF8               	movwf	tblptru,c
  2414  001B16                     	endif
  2415  001B16  0008               	tblrd		*
  2416  001B18  50F5               	movf	tablat,w,c
  2417  001B1A  0A2A               	xorlw	42
  2418  001B1C  A4D8               	btfss	status,2,c
  2419  001B1E  D01C               	goto	l7178
  2420                           
  2421                           ; BSR set to: 1
  2422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2423  001B20  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2424  001B24  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2425  001B28  2ADE               	incf	postinc2,f,c
  2426  001B2A  0E00               	movlw	0
  2427  001B2C  22DD               	addwfc	postdec2,f,c
  2428                           
  2429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2430  001B2E  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2431  001B32  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2432  001B36  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2433  001B3A  0E02               	movlw	2
  2434  001B3C  26DE               	addwf	postinc2,f,c
  2435  001B3E  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2436  001B42  0E00               	movlw	0
  2437  001B44  22DD               	addwfc	postdec2,f,c
  2438  001B46  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2439  001B4A  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2440  001B4E  CFDE F038          	movff	postinc2,_prec
  2441  001B52  CFDD F039          	movff	postdec2,_prec+1
  2442                           
  2443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2444  001B56  D03D               	goto	u9250
  2445  001B58                     l7178:
  2446                           
  2447                           ; BSR set to: 1
  2448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2449  001B58  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2450  001B5C  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2451  001B60  CFDE F067          	movff	postinc2,atoi@s
  2452  001B64  CFDD F068          	movff	postdec2,atoi@s+1
  2453  001B68  EC27  F018         	call	_atoi	;wreg free
  2454  001B6C  C067  F038         	movff	?_atoi,_prec
  2455  001B70  C068  F039         	movff	?_atoi+1,_prec+1
  2456                           
  2457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2458  001B74  D007               	goto	l7182
  2459  001B76                     l7180:
  2460                           
  2461                           ; BSR set to: 1
  2462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2463  001B76  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2464  001B7A  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2465  001B7E  2ADE               	incf	postinc2,f,c
  2466  001B80  0E00               	movlw	0
  2467  001B82  22DD               	addwfc	postdec2,f,c
  2468  001B84                     l7182:
  2469  001B84  0ED0               	movlw	208
  2470  001B86  0100               	movlb	0	; () banked
  2471  001B88  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2472  001B8A  0EFF               	movlw	255
  2473  001B8C  6FEA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2474  001B8E  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2475  001B92  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2476  001B96  CFDE FFF6          	movff	postinc2,tblptrl
  2477  001B9A  CFDD FFF7          	movff	postdec2,tblptrh
  2478  001B9E                     	if	0	;tblptru may be non-zero
  2479  001B9E                     	endif
  2480  001B9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2481  001B9E  0E00               	movlw	low (__mediumconst shr (0+16))
  2482  001BA0  6EF8               	movwf	tblptru,c
  2483  001BA2                     	endif
  2484  001BA2  0008               	tblrd		*
  2485  001BA4  50F5               	movf	tablat,w,c
  2486  001BA6  6FEB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2487  001BA8  6BEC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2488  001BAA  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2489  001BAC  27EB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2490  001BAE  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2491  001BB0  23EC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2492  001BB2  51EC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2493  001BB4  E106               	bnz	u9230
  2494  001BB6  0E0A               	movlw	10
  2495  001BB8  5DEB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2496  001BBA  B0D8               	btfsc	status,0,c
  2497  001BBC  D002               	goto	u9230
  2498  001BBE  0E01               	movlw	1
  2499  001BC0  D001               	goto	u9240
  2500  001BC2                     u9230:
  2501  001BC2  0E00               	movlw	0
  2502  001BC4                     u9240:
  2503  001BC4  0101               	movlb	1	; () banked
  2504  001BC6  6F88               	movwf	_vfpfcnvrt$1444& (0+255),b
  2505  001BC8  6B89               	clrf	(_vfpfcnvrt$1444+1)& (0+255),b
  2506                           
  2507                           ; BSR set to: 1
  2508  001BCA  5188               	movf	_vfpfcnvrt$1444& (0+255),w,b
  2509  001BCC  1189               	iorwf	(_vfpfcnvrt$1444+1)& (0+255),w,b
  2510  001BCE  A4D8               	btfss	status,2,c
  2511  001BD0  D7D2               	goto	l7180
  2512  001BD2                     u9250:
  2513                           
  2514                           ; BSR set to: 1
  2515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2516  001BD2  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2517  001BD6  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2518  001BDA  CFDE FFF6          	movff	postinc2,tblptrl
  2519  001BDE  CFDD FFF7          	movff	postdec2,tblptrh
  2520  001BE2                     	if	0	;tblptru may be non-zero
  2521  001BE2                     	endif
  2522  001BE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2523  001BE2  0E00               	movlw	low (__mediumconst shr (0+16))
  2524  001BE4  6EF8               	movwf	tblptru,c
  2525  001BE6                     	endif
  2526  001BE6  0008               	tblrd		*
  2527  001BE8  50F5               	movf	tablat,w,c
  2528  001BEA  0100               	movlb	0	; () banked
  2529  001BEC  6F66               	movwf	tolower@c& (0+255),b
  2530  001BEE  6B67               	clrf	(tolower@c+1)& (0+255),b
  2531  001BF0  EC09  F021         	call	_tolower	;wreg free
  2532  001BF4  0100               	movlb	0	; () banked
  2533  001BF6  5166               	movf	?_tolower& (0+255),w,b
  2534  001BF8  0101               	movlb	1	; () banked
  2535  001BFA  6F90               	movwf	vfpfcnvrt@ct& (0+255),b
  2536                           
  2537                           ; BSR set to: 1
  2538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2539  001BFC  5190               	movf	vfpfcnvrt@ct& (0+255),w,b
  2540  001BFE  B4D8               	btfsc	status,2,c
  2541  001C00  D03D               	goto	l7198
  2542                           
  2543                           ; BSR set to: 1
  2544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2545  001C02  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2546  001C06  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2547  001C0A  CFDE F0E9          	movff	postinc2,??_vfpfcnvrt
  2548  001C0E  CFDD F0EA          	movff	postdec2,??_vfpfcnvrt+1
  2549  001C12  0E01               	movlw	1
  2550  001C14  0100               	movlb	0	; () banked
  2551  001C16  27E9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2552  001C18  0E00               	movlw	0
  2553  001C1A  23EA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2554  001C1C  C0E9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2555  001C20  C0EA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2556  001C24                     	if	0	;tblptru may be non-zero
  2557  001C24                     	endif
  2558  001C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2559  001C24  0E00               	movlw	low (__mediumconst shr (0+16))
  2560  001C26  6EF8               	movwf	tblptru,c
  2561  001C28                     	endif
  2562  001C28  0008               	tblrd		*
  2563  001C2A  50F5               	movf	tablat,w,c
  2564  001C2C  6F66               	movwf	tolower@c& (0+255),b
  2565  001C2E  6B67               	clrf	(tolower@c+1)& (0+255),b
  2566  001C30  EC09  F021         	call	_tolower	;wreg free
  2567  001C34  0100               	movlb	0	; () banked
  2568  001C36  5166               	movf	?_tolower& (0+255),w,b
  2569  001C38  0101               	movlb	1	; () banked
  2570  001C3A  6F91               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2571                           
  2572                           ; BSR set to: 1
  2573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2574  001C3C  5191               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2575  001C3E  B4D8               	btfsc	status,2,c
  2576  001C40  D01D               	goto	l7198
  2577                           
  2578                           ; BSR set to: 1
  2579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2580  001C42  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2581  001C46  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2582  001C4A  CFDE F0E9          	movff	postinc2,??_vfpfcnvrt
  2583  001C4E  CFDD F0EA          	movff	postdec2,??_vfpfcnvrt+1
  2584  001C52  0E02               	movlw	2
  2585  001C54  0100               	movlb	0	; () banked
  2586  001C56  27E9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2587  001C58  0E00               	movlw	0
  2588  001C5A  23EA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2589  001C5C  C0E9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2590  001C60  C0EA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2591  001C64                     	if	0	;tblptru may be non-zero
  2592  001C64                     	endif
  2593  001C64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2594  001C64  0E00               	movlw	low (__mediumconst shr (0+16))
  2595  001C66  6EF8               	movwf	tblptru,c
  2596  001C68                     	endif
  2597  001C68  0008               	tblrd		*
  2598  001C6A  50F5               	movf	tablat,w,c
  2599  001C6C  6F66               	movwf	tolower@c& (0+255),b
  2600  001C6E  6B67               	clrf	(tolower@c+1)& (0+255),b
  2601  001C70  EC09  F021         	call	_tolower	;wreg free
  2602  001C74  0100               	movlb	0	; () banked
  2603  001C76  5166               	movf	?_tolower& (0+255),w,b
  2604  001C78  0101               	movlb	1	; () banked
  2605  001C7A  6F92               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2606  001C7C                     l7198:
  2607                           
  2608                           ; BSR set to: 1
  2609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  2610  001C7C  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2611  001C80  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2612  001C84  CFDE FFF6          	movff	postinc2,tblptrl
  2613  001C88  CFDD FFF7          	movff	postdec2,tblptrh
  2614  001C8C                     	if	0	;tblptru may be non-zero
  2615  001C8C                     	endif
  2616  001C8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2617  001C8C  0E00               	movlw	low (__mediumconst shr (0+16))
  2618  001C8E  6EF8               	movwf	tblptru,c
  2619  001C90                     	endif
  2620  001C90  0008               	tblrd		*
  2621  001C92  50F5               	movf	tablat,w,c
  2622  001C94  0A63               	xorlw	99
  2623  001C96  A4D8               	btfss	status,2,c
  2624  001C98  D026               	goto	l7206
  2625                           
  2626                           ; BSR set to: 1
  2627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  2628  001C9A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2629  001C9E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2630  001CA2  2ADE               	incf	postinc2,f,c
  2631  001CA4  0E00               	movlw	0
  2632  001CA6  22DD               	addwfc	postdec2,f,c
  2633                           
  2634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2635  001CA8  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2636  001CAC  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2637  001CB0  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2638  001CB4  0E02               	movlw	2
  2639  001CB6  26DE               	addwf	postinc2,f,c
  2640  001CB8  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2641  001CBC  0E00               	movlw	0
  2642  001CBE  22DD               	addwfc	postdec2,f,c
  2643  001CC0  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2644  001CC4  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2645  001CC8  50DF               	movf	indf2,w,c
  2646  001CCA  6F93               	movwf	vfpfcnvrt@c& (0+255),b
  2647                           
  2648                           ; BSR set to: 1
  2649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  2650  001CCC  C0E3  F07B         	movff	vfpfcnvrt@fp,ctoa@fp
  2651  001CD0  C0E4  F07C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2652  001CD4  C193  F07D         	movff	vfpfcnvrt@c,ctoa@c
  2653  001CD8  ECB7  F020         	call	_ctoa	;wreg free
  2654  001CDC  C07B  F0E3         	movff	?_ctoa,?_vfpfcnvrt
  2655  001CE0  C07C  F0E4         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2656  001CE4  0012               	return	
  2657  001CE6                     l7206:
  2658                           
  2659                           ; BSR set to: 1
  2660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2661  001CE6  0E66               	movlw	102
  2662  001CE8  1990               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2663  001CEA  A4D8               	btfss	status,2,c
  2664  001CEC  D041               	goto	l7218
  2665                           
  2666                           ; BSR set to: 1
  2667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2668  001CEE  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2669  001CF2  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2670  001CF6  CFDE FFF6          	movff	postinc2,tblptrl
  2671  001CFA  CFDD FFF7          	movff	postdec2,tblptrh
  2672  001CFE                     	if	0	;tblptru may be non-zero
  2673  001CFE                     	endif
  2674  001CFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2675  001CFE  0E00               	movlw	low (__mediumconst shr (0+16))
  2676  001D00  6EF8               	movwf	tblptru,c
  2677  001D02                     	endif
  2678  001D02  0008               	tblrd		*
  2679  001D04  CFF5 F193          	movff	tablat,vfpfcnvrt@c
  2680                           
  2681                           ; BSR set to: 1
  2682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2683  001D08  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2684  001D0C  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2685  001D10  2ADE               	incf	postinc2,f,c
  2686  001D12  0E00               	movlw	0
  2687  001D14  22DD               	addwfc	postdec2,f,c
  2688                           
  2689                           ; BSR set to: 1
  2690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2691  001D16  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2692  001D1A  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2693  001D1E  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2694  001D22  0E04               	movlw	4
  2695  001D24  26DE               	addwf	postinc2,f,c
  2696  001D26  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2697  001D2A  0E00               	movlw	0
  2698  001D2C  22DD               	addwfc	postdec2,f,c
  2699  001D2E  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2700  001D32  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2701  001D36  CFDE F18C          	movff	postinc2,vfpfcnvrt@f
  2702  001D3A  CFDE F18D          	movff	postinc2,vfpfcnvrt@f+1
  2703  001D3E  CFDE F18E          	movff	postinc2,vfpfcnvrt@f+2
  2704  001D42  CFDE F18F          	movff	postinc2,vfpfcnvrt@f+3
  2705  001D46                     l7214:
  2706                           
  2707                           ; BSR set to: 1
  2708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2709  001D46  C0E3  F09F         	movff	vfpfcnvrt@fp,efgtoa@fp
  2710  001D4A  C0E4  F0A0         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2711  001D4E  C18C  F0A1         	movff	vfpfcnvrt@f,efgtoa@f
  2712  001D52  C18D  F0A2         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2713  001D56  C18E  F0A3         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2714  001D5A  C18F  F0A4         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2715  001D5E  C193  F0A5         	movff	vfpfcnvrt@c,efgtoa@c
  2716  001D62  ECCF  F007         	call	_efgtoa	;wreg free
  2717  001D66  C09F  F0E3         	movff	?_efgtoa,?_vfpfcnvrt
  2718  001D6A  C0A0  F0E4         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2719  001D6E  0012               	return	
  2720  001D70                     l7218:
  2721                           
  2722                           ; BSR set to: 1
  2723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2724  001D70  0E90               	movlw	low vfpfcnvrt@ct
  2725  001D72  0100               	movlb	0	; () banked
  2726  001D74  6F60               	movwf	strncmp@_l& (0+255),b
  2727  001D76  0E01               	movlw	high vfpfcnvrt@ct
  2728  001D78  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2729  001D7A  0E99               	movlw	low STR_15
  2730  001D7C  6F62               	movwf	strncmp@_r& (0+255),b
  2731  001D7E  0E0F               	movlw	high STR_15
  2732  001D80  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2733  001D82  0E00               	movlw	0
  2734  001D84  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2735  001D86  0E02               	movlw	2
  2736  001D88  6F64               	movwf	strncmp@n& (0+255),b
  2737  001D8A  EC78  F01C         	call	_strncmp	;wreg free
  2738  001D8E  0100               	movlb	0	; () banked
  2739  001D90  5160               	movf	?_strncmp& (0+255),w,b
  2740  001D92  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2741  001D94  A4D8               	btfss	status,2,c
  2742  001D96  D05A               	goto	l7234
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2746  001D98  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2747  001D9C  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2748  001DA0  CFDE F0E9          	movff	postinc2,??_vfpfcnvrt
  2749  001DA4  CFDD F0EA          	movff	postdec2,??_vfpfcnvrt+1
  2750  001DA8  0E01               	movlw	1
  2751  001DAA  27E9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2752  001DAC  0E00               	movlw	0
  2753  001DAE  23EA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2754  001DB0  C0E9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2755  001DB4  C0EA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2756  001DB8                     	if	0	;tblptru may be non-zero
  2757  001DB8                     	endif
  2758  001DB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2759  001DB8  0E00               	movlw	low (__mediumconst shr (0+16))
  2760  001DBA  6EF8               	movwf	tblptru,c
  2761  001DBC                     	endif
  2762  001DBC  0008               	tblrd		*
  2763  001DBE  CFF5 F193          	movff	tablat,vfpfcnvrt@c
  2764  001DC2  0EBF               	movlw	191
  2765  001DC4  6FE9               	movwf	??_vfpfcnvrt& (0+255),b
  2766  001DC6  0EFF               	movlw	255
  2767  001DC8  6FEA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2768  001DCA  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2769  001DCE  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2770  001DD2  CFDE FFF6          	movff	postinc2,tblptrl
  2771  001DD6  CFDD FFF7          	movff	postdec2,tblptrh
  2772  001DDA                     	if	0	;tblptru may be non-zero
  2773  001DDA                     	endif
  2774  001DDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2775  001DDA  0E00               	movlw	low (__mediumconst shr (0+16))
  2776  001DDC  6EF8               	movwf	tblptru,c
  2777  001DDE                     	endif
  2778  001DDE  0008               	tblrd		*
  2779  001DE0  50F5               	movf	tablat,w,c
  2780  001DE2  6FEB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2781  001DE4  6BEC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2782  001DE6  51E9               	movf	??_vfpfcnvrt& (0+255),w,b
  2783  001DE8  27EB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2784  001DEA  51EA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2785  001DEC  23EC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2786  001DEE  51EC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2787  001DF0  E106               	bnz	u9310
  2788  001DF2  0E1A               	movlw	26
  2789  001DF4  5DEB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2790  001DF6  B0D8               	btfsc	status,0,c
  2791  001DF8  D002               	goto	u9310
  2792  001DFA  0E01               	movlw	1
  2793  001DFC  D001               	goto	u9320
  2794  001DFE                     u9310:
  2795  001DFE  0E00               	movlw	0
  2796  001E00                     u9320:
  2797  001E00  0101               	movlb	1	; () banked
  2798  001E02  6F8A               	movwf	_vfpfcnvrt$1449& (0+255),b
  2799  001E04  6B8B               	clrf	(_vfpfcnvrt$1449+1)& (0+255),b
  2800                           
  2801                           ; BSR set to: 1
  2802  001E06  518A               	movf	_vfpfcnvrt$1449& (0+255),w,b
  2803  001E08  118B               	iorwf	(_vfpfcnvrt$1449+1)& (0+255),w,b
  2804                           
  2805                           ; BSR set to: 1
  2806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2807                           
  2808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2809                           
  2810                           ; BSR set to: 1
  2811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2812  001E0A  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2813  001E0E  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2814  001E12  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2815  001E16  0E04               	movlw	4
  2816  001E18  26DE               	addwf	postinc2,f,c
  2817  001E1A  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2818  001E1E  0E00               	movlw	0
  2819  001E20  22DD               	addwfc	postdec2,f,c
  2820  001E22  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2821  001E26  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2822  001E2A  CFDE F18C          	movff	postinc2,vfpfcnvrt@f
  2823  001E2E  CFDE F18D          	movff	postinc2,vfpfcnvrt@f+1
  2824  001E32  CFDE F18E          	movff	postinc2,vfpfcnvrt@f+2
  2825  001E36  CFDE F18F          	movff	postinc2,vfpfcnvrt@f+3
  2826                           
  2827                           ; BSR set to: 1
  2828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2829                           
  2830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  2831  001E3A  0E02               	movlw	2
  2832  001E3C  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2833  001E40  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2834  001E44  26DE               	addwf	postinc2,f,c
  2835  001E46  0E00               	movlw	0
  2836  001E48  22DD               	addwfc	postdec2,f,c
  2837  001E4A  D77D               	goto	l7214
  2838  001E4C                     l7234:
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  2842  001E4C  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2843  001E50  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2844  001E54  CFDE FFF6          	movff	postinc2,tblptrl
  2845  001E58  CFDD FFF7          	movff	postdec2,tblptrh
  2846  001E5C                     	if	0	;tblptru may be non-zero
  2847  001E5C                     	endif
  2848  001E5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2849  001E5C  0E00               	movlw	low (__mediumconst shr (0+16))
  2850  001E5E  6EF8               	movwf	tblptru,c
  2851  001E60                     	endif
  2852  001E60  0008               	tblrd		*
  2853  001E62  50F5               	movf	tablat,w,c
  2854  001E64  0A75               	xorlw	117
  2855  001E66  A4D8               	btfss	status,2,c
  2856  001E68  D041               	goto	l7242
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  2860  001E6A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2861  001E6E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2862  001E72  2ADE               	incf	postinc2,f,c
  2863  001E74  0E00               	movlw	0
  2864  001E76  22DD               	addwfc	postdec2,f,c
  2865                           
  2866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2867  001E78  C0E7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2868  001E7C  C0E8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2869  001E80  CFDF F0E9          	movff	indf2,??_vfpfcnvrt
  2870  001E84  0E02               	movlw	2
  2871  001E86  26DE               	addwf	postinc2,f,c
  2872  001E88  CFDF F0EA          	movff	indf2,??_vfpfcnvrt+1
  2873  001E8C  0E00               	movlw	0
  2874  001E8E  22DD               	addwfc	postdec2,f,c
  2875  001E90  C0E9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2876  001E94  C0EA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2877  001E98  CFDE F0EB          	movff	postinc2,??_vfpfcnvrt+2
  2878  001E9C  CFDD F0EC          	movff	postdec2,??_vfpfcnvrt+3
  2879  001EA0  C0EB  F17C         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2880  001EA4  C0EC  F17D         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2881  001EA8  0101               	movlb	1	; () banked
  2882  001EAA  6B7E               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2883  001EAC  6B7F               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2884  001EAE  6B80               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2885  001EB0  6B81               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2886  001EB2  6B82               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2887  001EB4  6B83               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2888                           
  2889                           ; BSR set to: 1
  2890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  2891  001EB6  C0E3  F07B         	movff	vfpfcnvrt@fp,utoa@fp
  2892  001EBA  C0E4  F07C         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2893  001EBE  C17C  F07D         	movff	vfpfcnvrt@llu,utoa@d
  2894  001EC2  C17D  F07E         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2895  001EC6  C17E  F07F         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2896  001ECA  C17F  F080         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2897  001ECE  C180  F081         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2898  001ED2  C181  F082         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2899  001ED6  C182  F083         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2900  001EDA  C183  F084         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2901  001EDE  EC9E  F016         	call	_utoa	;wreg free
  2902  001EE2  C07B  F0E3         	movff	?_utoa,?_vfpfcnvrt
  2903  001EE6  C07C  F0E4         	movff	?_utoa+1,?_vfpfcnvrt+1
  2904  001EEA  0012               	return	
  2905  001EEC                     l7242:
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2909  001EEC  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2910  001EF0  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2911  001EF4  CFDE FFF6          	movff	postinc2,tblptrl
  2912  001EF8  CFDD FFF7          	movff	postdec2,tblptrh
  2913  001EFC                     	if	0	;tblptru may be non-zero
  2914  001EFC                     	endif
  2915  001EFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2916  001EFC  0E00               	movlw	low (__mediumconst shr (0+16))
  2917  001EFE  6EF8               	movwf	tblptru,c
  2918  001F00                     	endif
  2919  001F00  0008               	tblrd		*
  2920  001F02  50F5               	movf	tablat,w,c
  2921  001F04  0A25               	xorlw	37
  2922  001F06  A4D8               	btfss	status,2,c
  2923  001F08  D017               	goto	l7252
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2927  001F0A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2928  001F0E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2929  001F12  2ADE               	incf	postinc2,f,c
  2930  001F14  0E00               	movlw	0
  2931  001F16  22DD               	addwfc	postdec2,f,c
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2935  001F18  0E00               	movlw	0
  2936  001F1A  6F61               	movwf	(fputc@c+1)& (0+255),b
  2937  001F1C  0E25               	movlw	37
  2938  001F1E  6F60               	movwf	fputc@c& (0+255),b
  2939  001F20  C0E3  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2940  001F24  C0E4  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2941  001F28  EC25  F01D         	call	_fputc	;wreg free
  2942  001F2C                     l7248:
  2943                           
  2944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2945  001F2C  0E00               	movlw	0
  2946  001F2E  0100               	movlb	0	; () banked
  2947  001F30  6FE4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2948  001F32  0E01               	movlw	1
  2949  001F34  6FE3               	movwf	?_vfpfcnvrt& (0+255),b
  2950  001F36  0012               	return	
  2951  001F38                     l7252:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2955  001F38  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2956  001F3C  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2957  001F40  2ADE               	incf	postinc2,f,c
  2958  001F42  0E00               	movlw	0
  2959  001F44  22DD               	addwfc	postdec2,f,c
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2963  001F46  0E00               	movlw	0
  2964  001F48  6FE4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2965  001F4A  0E00               	movlw	0
  2966  001F4C  6FE3               	movwf	?_vfpfcnvrt& (0+255),b
  2967  001F4E  0012               	return	
  2968  001F50                     l7258:
  2969                           
  2970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2971  001F50  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2972  001F54  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2973  001F58  CFDE FFF6          	movff	postinc2,tblptrl
  2974  001F5C  CFDD FFF7          	movff	postdec2,tblptrh
  2975  001F60                     	if	0	;tblptru may be non-zero
  2976  001F60                     	endif
  2977  001F60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2978  001F60  0E00               	movlw	low (__mediumconst shr (0+16))
  2979  001F62  6EF8               	movwf	tblptru,c
  2980  001F64                     	endif
  2981  001F64  0008               	tblrd		*
  2982  001F66  50F5               	movf	tablat,w,c
  2983  001F68  0100               	movlb	0	; () banked
  2984  001F6A  6F60               	movwf	fputc@c& (0+255),b
  2985  001F6C  6B61               	clrf	(fputc@c+1)& (0+255),b
  2986  001F6E  C0E3  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2987  001F72  C0E4  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2988  001F76  EC25  F01D         	call	_fputc	;wreg free
  2989                           
  2990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2991  001F7A  C0E5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2992  001F7E  C0E6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2993  001F82  2ADE               	incf	postinc2,f,c
  2994  001F84  0E00               	movlw	0
  2995  001F86  22DD               	addwfc	postdec2,f,c
  2996  001F88  D7D1               	goto	l7248
  2997  001F8A                     __end_of_vfpfcnvrt:
  2998                           	opt callstack 0
  2999                           
  3000 ;; *************** function _utoa *****************
  3001 ;; Defined at:
  3002 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  3005 ;;		 -> sprintf@f(6), 
  3006 ;;  d               8   29[BANK0 ] unsigned long long 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  n               8   49[BANK0 ] unsigned long long 
  3009 ;;  i               2   57[BANK0 ] int 
  3010 ;;  w               2   47[BANK0 ] int 
  3011 ;;  p               2   45[BANK0 ] int 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  2   27[BANK0 ] int 
  3014 ;; Registers used:
  3015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3021 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3022 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3023 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3024 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3025 ;;Total ram usage:       32 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    6
  3028 ;; This function calls:
  3029 ;;		___lodiv
  3030 ;;		___lomod
  3031 ;;		_pad
  3032 ;; This function is called by:
  3033 ;;		_vfpfcnvrt
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text5
  3038  002D3C                     __ptext5:
  3039                           	opt callstack 0
  3040  002D3C                     _utoa:
  3041                           	opt callstack 20
  3042                           
  3043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  3044                           
  3045                           ;incstack = 0
  3046  002D3C  AE39               	btfss	_prec+1,7,c
  3047                           
  3048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  3049  002D3E  923A               	bcf	_flags,1,c
  3050                           
  3051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  3052  002D40  BE39               	btfsc	_prec+1,7,c
  3053  002D42  D005               	goto	u8950
  3054  002D44  5039               	movf	_prec+1,w,c
  3055  002D46  E109               	bnz	l452
  3056  002D48  0438               	decf	_prec,w,c
  3057  002D4A  B0D8               	btfsc	status,0,c
  3058  002D4C  D006               	goto	l452
  3059  002D4E                     u8950:
  3060  002D4E  0E00               	movlw	0
  3061  002D50  0100               	movlb	0	; () banked
  3062  002D52  6F8E               	movwf	(utoa@p+1)& (0+255),b
  3063  002D54  0E01               	movlw	1
  3064  002D56  6F8D               	movwf	utoa@p& (0+255),b
  3065  002D58  D004               	goto	l454
  3066  002D5A                     l452:
  3067  002D5A  C038  F08D         	movff	_prec,utoa@p
  3068  002D5E  C039  F08E         	movff	_prec+1,utoa@p+1
  3069  002D62                     l454:
  3070                           
  3071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  3072  002D62  C036  F08F         	movff	_width,utoa@w
  3073  002D66  C037  F090         	movff	_width+1,utoa@w+1
  3074                           
  3075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  3076  002D6A  C07D  F091         	movff	utoa@d,utoa@n
  3077  002D6E  C07E  F092         	movff	utoa@d+1,utoa@n+1
  3078  002D72  C07F  F093         	movff	utoa@d+2,utoa@n+2
  3079  002D76  C080  F094         	movff	utoa@d+3,utoa@n+3
  3080  002D7A  C081  F095         	movff	utoa@d+4,utoa@n+4
  3081  002D7E  C082  F096         	movff	utoa@d+5,utoa@n+5
  3082  002D82  C083  F097         	movff	utoa@d+6,utoa@n+6
  3083  002D86  C084  F098         	movff	utoa@d+7,utoa@n+7
  3084                           
  3085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  3086  002D8A  0E00               	movlw	0
  3087  002D8C  0100               	movlb	0	; () banked
  3088  002D8E  6F9A               	movwf	(utoa@i+1)& (0+255),b
  3089  002D90  0E4F               	movlw	79
  3090  002D92  6F99               	movwf	utoa@i& (0+255),b
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  3094  002D94  0E00               	movlw	0
  3095  002D96  0101               	movlb	1	; () banked
  3096  002D98  6F71               	movwf	(_dbuf+79)& (0+255),b
  3097                           
  3098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3099  002D9A  D077               	goto	l7034
  3100  002D9C                     l7024:
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  3104  002D9C  0799               	decf	utoa@i& (0+255),f,b
  3105  002D9E  A0D8               	btfss	status,0,c
  3106  002DA0  079A               	decf	(utoa@i+1)& (0+255),f,b
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  3110  002DA2  0E22               	movlw	low _dbuf
  3111  002DA4  2599               	addwf	utoa@i& (0+255),w,b
  3112  002DA6  6ED9               	movwf	fsr2l,c
  3113  002DA8  0E01               	movlw	high _dbuf
  3114  002DAA  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  3115  002DAC  6EDA               	movwf	fsr2h,c
  3116  002DAE  C091  F060         	movff	utoa@n,___lomod@dividend
  3117  002DB2  C092  F061         	movff	utoa@n+1,___lomod@dividend+1
  3118  002DB6  C093  F062         	movff	utoa@n+2,___lomod@dividend+2
  3119  002DBA  C094  F063         	movff	utoa@n+3,___lomod@dividend+3
  3120  002DBE  C095  F064         	movff	utoa@n+4,___lomod@dividend+4
  3121  002DC2  C096  F065         	movff	utoa@n+5,___lomod@dividend+5
  3122  002DC6  C097  F066         	movff	utoa@n+6,___lomod@dividend+6
  3123  002DCA  C098  F067         	movff	utoa@n+7,___lomod@dividend+7
  3124  002DCE  0E0A               	movlw	10
  3125  002DD0  6F68               	movwf	___lomod@divisor& (0+255),b
  3126  002DD2  0E00               	movlw	0
  3127  002DD4  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  3128  002DD6  0E00               	movlw	0
  3129  002DD8  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  3130  002DDA  0E00               	movlw	0
  3131  002DDC  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  3132  002DDE  0E00               	movlw	0
  3133  002DE0  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  3134  002DE2  0E00               	movlw	0
  3135  002DE4  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  3136  002DE6  0E00               	movlw	0
  3137  002DE8  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  3138  002DEA  0E00               	movlw	0
  3139  002DEC  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  3140  002DEE  EC20  F01C         	call	___lomod	;wreg free
  3141  002DF2  C060  F085         	movff	?___lomod,??_utoa
  3142  002DF6  C061  F086         	movff	?___lomod+1,??_utoa+1
  3143  002DFA  C062  F087         	movff	?___lomod+2,??_utoa+2
  3144  002DFE  C063  F088         	movff	?___lomod+3,??_utoa+3
  3145  002E02  C064  F089         	movff	?___lomod+4,??_utoa+4
  3146  002E06  C065  F08A         	movff	?___lomod+5,??_utoa+5
  3147  002E0A  C066  F08B         	movff	?___lomod+6,??_utoa+6
  3148  002E0E  C067  F08C         	movff	?___lomod+7,??_utoa+7
  3149  002E12  0100               	movlb	0	; () banked
  3150  002E14  5185               	movf	??_utoa& (0+255),w,b
  3151  002E16  0F30               	addlw	48
  3152  002E18  6EDF               	movwf	indf2,c
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  3156  002E1A  078D               	decf	utoa@p& (0+255),f,b
  3157  002E1C  A0D8               	btfss	status,0,c
  3158  002E1E  078E               	decf	(utoa@p+1)& (0+255),f,b
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  3162  002E20  078F               	decf	utoa@w& (0+255),f,b
  3163  002E22  A0D8               	btfss	status,0,c
  3164  002E24  0790               	decf	(utoa@w+1)& (0+255),f,b
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  3168  002E26  C091  F060         	movff	utoa@n,___lodiv@dividend
  3169  002E2A  C092  F061         	movff	utoa@n+1,___lodiv@dividend+1
  3170  002E2E  C093  F062         	movff	utoa@n+2,___lodiv@dividend+2
  3171  002E32  C094  F063         	movff	utoa@n+3,___lodiv@dividend+3
  3172  002E36  C095  F064         	movff	utoa@n+4,___lodiv@dividend+4
  3173  002E3A  C096  F065         	movff	utoa@n+5,___lodiv@dividend+5
  3174  002E3E  C097  F066         	movff	utoa@n+6,___lodiv@dividend+6
  3175  002E42  C098  F067         	movff	utoa@n+7,___lodiv@dividend+7
  3176  002E46  0E0A               	movlw	10
  3177  002E48  6F68               	movwf	___lodiv@divisor& (0+255),b
  3178  002E4A  0E00               	movlw	0
  3179  002E4C  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  3180  002E4E  0E00               	movlw	0
  3181  002E50  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  3182  002E52  0E00               	movlw	0
  3183  002E54  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  3184  002E56  0E00               	movlw	0
  3185  002E58  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  3186  002E5A  0E00               	movlw	0
  3187  002E5C  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  3188  002E5E  0E00               	movlw	0
  3189  002E60  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  3190  002E62  0E00               	movlw	0
  3191  002E64  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  3192  002E66  ECF3  F01A         	call	___lodiv	;wreg free
  3193  002E6A  C060  F091         	movff	?___lodiv,utoa@n
  3194  002E6E  C061  F092         	movff	?___lodiv+1,utoa@n+1
  3195  002E72  C062  F093         	movff	?___lodiv+2,utoa@n+2
  3196  002E76  C063  F094         	movff	?___lodiv+3,utoa@n+3
  3197  002E7A  C064  F095         	movff	?___lodiv+4,utoa@n+4
  3198  002E7E  C065  F096         	movff	?___lodiv+5,utoa@n+5
  3199  002E82  C066  F097         	movff	?___lodiv+6,utoa@n+6
  3200  002E86  C067  F098         	movff	?___lodiv+7,utoa@n+7
  3201  002E8A                     l7034:
  3202                           
  3203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3204  002E8A  0100               	movlb	0	; () banked
  3205  002E8C  5199               	movf	utoa@i& (0+255),w,b
  3206  002E8E  119A               	iorwf	(utoa@i+1)& (0+255),w,b
  3207  002E90  B4D8               	btfsc	status,2,c
  3208  002E92  D01A               	goto	u9000
  3209                           
  3210                           ; BSR set to: 0
  3211  002E94  5191               	movf	utoa@n& (0+255),w,b
  3212  002E96  1192               	iorwf	(utoa@n+1)& (0+255),w,b
  3213  002E98  1193               	iorwf	(utoa@n+2)& (0+255),w,b
  3214  002E9A  1194               	iorwf	(utoa@n+3)& (0+255),w,b
  3215  002E9C  1195               	iorwf	(utoa@n+4)& (0+255),w,b
  3216  002E9E  1196               	iorwf	(utoa@n+5)& (0+255),w,b
  3217  002EA0  1197               	iorwf	(utoa@n+6)& (0+255),w,b
  3218  002EA2  1198               	iorwf	(utoa@n+7)& (0+255),w,b
  3219  002EA4  A4D8               	btfss	status,2,c
  3220  002EA6  D77A               	goto	l7024
  3221                           
  3222                           ; BSR set to: 0
  3223  002EA8  BF8E               	btfsc	(utoa@p+1)& (0+255),7,b
  3224  002EAA  D005               	goto	u8980
  3225  002EAC  518E               	movf	(utoa@p+1)& (0+255),w,b
  3226  002EAE  E102               	bnz	u8981
  3227  002EB0  058D               	decf	utoa@p& (0+255),w,b
  3228  002EB2  B0D8               	btfsc	status,0,c
  3229  002EB4                     u8981:
  3230  002EB4  D773               	goto	l7024
  3231  002EB6                     u8980:
  3232                           
  3233                           ; BSR set to: 0
  3234  002EB6  BF90               	btfsc	(utoa@w+1)& (0+255),7,b
  3235  002EB8  D007               	goto	u9000
  3236  002EBA  5190               	movf	(utoa@w+1)& (0+255),w,b
  3237  002EBC  E103               	bnz	u8990
  3238  002EBE  058F               	decf	utoa@w& (0+255),w,b
  3239  002EC0  A0D8               	btfss	status,0,c
  3240  002EC2  D002               	goto	u9000
  3241  002EC4                     u8990:
  3242                           
  3243                           ; BSR set to: 0
  3244  002EC4  B23A               	btfsc	_flags,1,c
  3245  002EC6  D76A               	goto	l7024
  3246  002EC8                     u9000:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  3250  002EC8  C07B  F070         	movff	utoa@fp,pad@fp
  3251  002ECC  C07C  F071         	movff	utoa@fp+1,pad@fp+1
  3252  002ED0  0E22               	movlw	low _dbuf
  3253  002ED2  2599               	addwf	utoa@i& (0+255),w,b
  3254  002ED4  6F72               	movwf	pad@buf& (0+255),b
  3255  002ED6  0E01               	movlw	high _dbuf
  3256  002ED8  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  3257  002EDA  6F73               	movwf	(pad@buf+1)& (0+255),b
  3258  002EDC  C08F  F074         	movff	utoa@w,pad@p
  3259  002EE0  C090  F075         	movff	utoa@w+1,pad@p+1
  3260  002EE4  EC76  F01D         	call	_pad	;wreg free
  3261  002EE8  C070  F07B         	movff	?_pad,?_utoa
  3262  002EEC  C071  F07C         	movff	?_pad+1,?_utoa+1
  3263  002EF0  0012               	return		;funcret
  3264  002EF2                     __end_of_utoa:
  3265                           	opt callstack 0
  3266                           
  3267 ;; *************** function ___lomod *****************
  3268 ;; Defined at:
  3269 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3272 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  counter         1   16[BANK0 ] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  8    0[BANK0 ] unsigned long long 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2, status,0
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3284 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3287 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3288 ;;Total ram usage:       17 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    2
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_utoa
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text6
  3299  003840                     __ptext6:
  3300                           	opt callstack 0
  3301  003840                     ___lomod:
  3302                           	opt callstack 23
  3303                           
  3304                           ;incstack = 0
  3305  003840  0100               	movlb	0	; () banked
  3306  003842  5168               	movf	___lomod@divisor& (0+255),w,b
  3307  003844  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  3308  003846  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  3309  003848  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  3310  00384A  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  3311  00384C  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  3312  00384E  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  3313  003850  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  3314  003852  B4D8               	btfsc	status,2,c
  3315  003854  D03C               	goto	l968
  3316                           
  3317                           ; BSR set to: 0
  3318  003856  0E01               	movlw	1
  3319  003858  6F70               	movwf	___lomod@counter& (0+255),b
  3320  00385A  D00A               	goto	l6678
  3321  00385C                     l6676:
  3322                           
  3323                           ; BSR set to: 0
  3324  00385C  90D8               	bcf	status,0,c
  3325  00385E  3768               	rlcf	___lomod@divisor& (0+255),f,b
  3326  003860  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  3327  003862  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  3328  003864  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  3329  003866  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  3330  003868  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  3331  00386A  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  3332  00386C  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  3333  00386E  2B70               	incf	___lomod@counter& (0+255),f,b
  3334  003870                     l6678:
  3335                           
  3336                           ; BSR set to: 0
  3337  003870  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  3338  003872  D7F4               	goto	l6676
  3339  003874                     u8370:
  3340                           
  3341                           ; BSR set to: 0
  3342  003874  5168               	movf	___lomod@divisor& (0+255),w,b
  3343  003876  5D60               	subwf	___lomod@dividend& (0+255),w,b
  3344  003878  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3345  00387A  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  3346  00387C  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3347  00387E  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  3348  003880  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3349  003882  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  3350  003884  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3351  003886  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  3352  003888  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3353  00388A  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  3354  00388C  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3355  00388E  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  3356  003890  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3357  003892  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  3358  003894  A0D8               	btfss	status,0,c
  3359  003896  D010               	goto	l6684
  3360                           
  3361                           ; BSR set to: 0
  3362  003898  5168               	movf	___lomod@divisor& (0+255),w,b
  3363  00389A  5F60               	subwf	___lomod@dividend& (0+255),f,b
  3364  00389C  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3365  00389E  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  3366  0038A0  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3367  0038A2  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  3368  0038A4  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3369  0038A6  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  3370  0038A8  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3371  0038AA  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  3372  0038AC  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3373  0038AE  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  3374  0038B0  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3375  0038B2  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  3376  0038B4  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3377  0038B6  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  3378  0038B8                     l6684:
  3379                           
  3380                           ; BSR set to: 0
  3381  0038B8  90D8               	bcf	status,0,c
  3382  0038BA  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  3383  0038BC  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  3384  0038BE  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  3385  0038C0  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  3386  0038C2  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  3387  0038C4  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  3388  0038C6  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  3389  0038C8  3368               	rrcf	___lomod@divisor& (0+255),f,b
  3390                           
  3391                           ; BSR set to: 0
  3392  0038CA  2F70               	decfsz	___lomod@counter& (0+255),f,b
  3393  0038CC  D7D3               	goto	u8370
  3394  0038CE                     l968:
  3395                           
  3396                           ; BSR set to: 0
  3397  0038CE  C060  F060         	movff	___lomod@dividend,?___lomod
  3398  0038D2  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  3399  0038D6  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  3400  0038DA  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  3401  0038DE  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  3402  0038E2  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  3403  0038E6  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  3404  0038EA  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  3405                           
  3406                           ; BSR set to: 0
  3407  0038EE  0012               	return		;funcret
  3408  0038F0                     __end_of___lomod:
  3409                           	opt callstack 0
  3410                           
  3411 ;; *************** function ___lodiv *****************
  3412 ;; Defined at:
  3413 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3416 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  quotient        8   16[BANK0 ] unsigned long long 
  3419 ;;  counter         1   24[BANK0 ] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  8    0[BANK0 ] unsigned long long 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3429 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3430 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3432 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3433 ;;Total ram usage:       25 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    2
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_utoa
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text7
  3444  0035E6                     __ptext7:
  3445                           	opt callstack 0
  3446  0035E6                     ___lodiv:
  3447                           	opt callstack 23
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;incstack = 0
  3451  0035E6  EE20  F070         	lfsr	2,___lodiv@quotient
  3452  0035EA  0E07               	movlw	7
  3453  0035EC                     u8321:
  3454  0035EC  6ADE               	clrf	postinc2,c
  3455  0035EE  06E8               	decf	wreg,f,c
  3456  0035F0  E2FD               	bc	u8321
  3457  0035F2  0100               	movlb	0	; () banked
  3458  0035F4  5168               	movf	___lodiv@divisor& (0+255),w,b
  3459  0035F6  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  3460  0035F8  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  3461  0035FA  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  3462  0035FC  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  3463  0035FE  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  3464  003600  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  3465  003602  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  3466  003604  B4D8               	btfsc	status,2,c
  3467  003606  D046               	goto	l958
  3468                           
  3469                           ; BSR set to: 0
  3470  003608  0E01               	movlw	1
  3471  00360A  6F78               	movwf	___lodiv@counter& (0+255),b
  3472  00360C  D00A               	goto	l6658
  3473  00360E                     l6656:
  3474                           
  3475                           ; BSR set to: 0
  3476  00360E  90D8               	bcf	status,0,c
  3477  003610  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  3478  003612  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  3479  003614  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  3480  003616  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  3481  003618  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  3482  00361A  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  3483  00361C  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  3484  00361E  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  3485  003620  2B78               	incf	___lodiv@counter& (0+255),f,b
  3486  003622                     l6658:
  3487                           
  3488                           ; BSR set to: 0
  3489  003622  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  3490  003624  D7F4               	goto	l6656
  3491  003626                     u8340:
  3492                           
  3493                           ; BSR set to: 0
  3494  003626  90D8               	bcf	status,0,c
  3495  003628  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  3496  00362A  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  3497  00362C  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  3498  00362E  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  3499  003630  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  3500  003632  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  3501  003634  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  3502  003636  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  3503                           
  3504                           ; BSR set to: 0
  3505  003638  5168               	movf	___lodiv@divisor& (0+255),w,b
  3506  00363A  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  3507  00363C  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3508  00363E  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  3509  003640  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3510  003642  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  3511  003644  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3512  003646  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  3513  003648  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3514  00364A  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  3515  00364C  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3516  00364E  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  3517  003650  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3518  003652  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  3519  003654  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3520  003656  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  3521  003658  A0D8               	btfss	status,0,c
  3522  00365A  D011               	goto	l6668
  3523                           
  3524                           ; BSR set to: 0
  3525  00365C  5168               	movf	___lodiv@divisor& (0+255),w,b
  3526  00365E  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  3527  003660  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3528  003662  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  3529  003664  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3530  003666  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  3531  003668  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3532  00366A  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  3533  00366C  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3534  00366E  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  3535  003670  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3536  003672  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  3537  003674  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3538  003676  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  3539  003678  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3540  00367A  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  3541                           
  3542                           ; BSR set to: 0
  3543  00367C  8170               	bsf	___lodiv@quotient& (0+255),0,b
  3544  00367E                     l6668:
  3545                           
  3546                           ; BSR set to: 0
  3547  00367E  90D8               	bcf	status,0,c
  3548  003680  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  3549  003682  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  3550  003684  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  3551  003686  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  3552  003688  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  3553  00368A  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  3554  00368C  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  3555  00368E  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  3556                           
  3557                           ; BSR set to: 0
  3558  003690  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  3559  003692  D7C9               	goto	u8340
  3560  003694                     l958:
  3561                           
  3562                           ; BSR set to: 0
  3563  003694  C070  F060         	movff	___lodiv@quotient,?___lodiv
  3564  003698  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  3565  00369C  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  3566  0036A0  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  3567  0036A4  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  3568  0036A8  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  3569  0036AC  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  3570  0036B0  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  3571                           
  3572                           ; BSR set to: 0
  3573  0036B4  0012               	return		;funcret
  3574  0036B6                     __end_of___lodiv:
  3575                           	opt callstack 0
  3576                           
  3577 ;; *************** function _strncmp *****************
  3578 ;; Defined at:
  3579 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  3582 ;;		 -> vfpfcnvrt@ct(3), 
  3583 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  3584 ;;		 -> STR_17(3), 
  3585 ;;  n               2    4[BANK0 ] unsigned int 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  3588 ;;		 -> STR_17(3), 
  3589 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  3590 ;;		 -> vfpfcnvrt@ct(3), 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  2    0[BANK0 ] int 
  3593 ;; Registers used:
  3594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3600 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3601 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3602 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3604 ;;Total ram usage:       11 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    2
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_vfpfcnvrt
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text8
  3615  0038F0                     __ptext8:
  3616                           	opt callstack 0
  3617  0038F0                     _strncmp:
  3618                           	opt callstack 24
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;incstack = 0
  3622  0038F0  C060  F067         	movff	strncmp@_l,strncmp@l
  3623  0038F4  C061  F068         	movff	strncmp@_l+1,strncmp@l+1
  3624  0038F8  C062  F069         	movff	strncmp@_r,strncmp@r
  3625  0038FC  C063  F06A         	movff	strncmp@_r+1,strncmp@r+1
  3626  003900  0100               	movlb	0	; () banked
  3627  003902  0764               	decf	strncmp@n& (0+255),f,b
  3628  003904  A0D8               	btfss	status,0,c
  3629  003906  0765               	decf	(strncmp@n+1)& (0+255),f,b
  3630  003908  2964               	incf	strncmp@n& (0+255),w,b
  3631  00390A  E10F               	bnz	l7098
  3632  00390C  2965               	incf	(strncmp@n+1)& (0+255),w,b
  3633  00390E  A4D8               	btfss	status,2,c
  3634  003910  D00C               	goto	l7098
  3635                           
  3636                           ; BSR set to: 0
  3637  003912  0E00               	movlw	0
  3638  003914  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3639  003916  0E00               	movlw	0
  3640  003918  6F60               	movwf	?_strncmp& (0+255),b
  3641  00391A  0012               	return	
  3642  00391C                     l7096:
  3643                           
  3644                           ; BSR set to: 0
  3645  00391C  4B67               	infsnz	strncmp@l& (0+255),f,b
  3646  00391E  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  3647  003920  4B69               	infsnz	strncmp@r& (0+255),f,b
  3648  003922  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  3649  003924  0764               	decf	strncmp@n& (0+255),f,b
  3650  003926  A0D8               	btfss	status,0,c
  3651  003928  0765               	decf	(strncmp@n+1)& (0+255),f,b
  3652  00392A                     l7098:
  3653                           
  3654                           ; BSR set to: 0
  3655  00392A  C067  FFD9         	movff	strncmp@l,fsr2l
  3656  00392E  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3657  003932  50DF               	movf	indf2,w,c
  3658  003934  B4D8               	btfsc	status,2,c
  3659  003936  D020               	goto	u9120
  3660                           
  3661                           ; BSR set to: 0
  3662  003938  C069  FFF6         	movff	strncmp@r,tblptrl
  3663  00393C  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3664  003940                     	if	0	;tblptru may be non-zero
  3665  003940                     	endif
  3666  003940                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3667  003940  0E00               	movlw	low (__mediumconst shr (0+16))
  3668  003942  6EF8               	movwf	tblptru,c
  3669  003944                     	endif
  3670  003944  0008               	tblrd		*
  3671  003946  50F5               	movf	tablat,w,c
  3672  003948  0900               	iorlw	0
  3673  00394A  B4D8               	btfsc	status,2,c
  3674  00394C  D015               	goto	u9120
  3675                           
  3676                           ; BSR set to: 0
  3677  00394E  5164               	movf	strncmp@n& (0+255),w,b
  3678  003950  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  3679  003952  B4D8               	btfsc	status,2,c
  3680  003954  D011               	goto	u9120
  3681                           
  3682                           ; BSR set to: 0
  3683  003956  C067  FFD9         	movff	strncmp@l,fsr2l
  3684  00395A  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3685  00395E  50DF               	movf	indf2,w,c
  3686  003960  6F66               	movwf	??_strncmp& (0+255),b
  3687  003962  C069  FFF6         	movff	strncmp@r,tblptrl
  3688  003966  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3689  00396A                     	if	0	;tblptru may be non-zero
  3690  00396A                     	endif
  3691  00396A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3692  00396A  0E00               	movlw	low (__mediumconst shr (0+16))
  3693  00396C  6EF8               	movwf	tblptru,c
  3694  00396E                     	endif
  3695  00396E  0008               	tblrd		*
  3696  003970  50F5               	movf	tablat,w,c
  3697  003972  1966               	xorwf	??_strncmp& (0+255),w,b
  3698  003974  B4D8               	btfsc	status,2,c
  3699  003976  D7D2               	goto	l7096
  3700  003978                     u9120:
  3701                           
  3702                           ; BSR set to: 0
  3703  003978  C067  FFD9         	movff	strncmp@l,fsr2l
  3704  00397C  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3705  003980  50DF               	movf	indf2,w,c
  3706  003982  6F66               	movwf	??_strncmp& (0+255),b
  3707  003984  C069  FFF6         	movff	strncmp@r,tblptrl
  3708  003988  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3709  00398C                     	if	0	;tblptru may be non-zero
  3710  00398C                     	endif
  3711  00398C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3712  00398C  0E00               	movlw	low (__mediumconst shr (0+16))
  3713  00398E  6EF8               	movwf	tblptru,c
  3714  003990                     	endif
  3715  003990  0008               	tblrd		*
  3716  003992  50F5               	movf	tablat,w,c
  3717  003994  5D66               	subwf	??_strncmp& (0+255),w,b
  3718  003996  6F60               	movwf	?_strncmp& (0+255),b
  3719  003998  6B61               	clrf	(?_strncmp+1)& (0+255),b
  3720  00399A  A0D8               	btfss	status,0,c
  3721  00399C  0761               	decf	(?_strncmp+1)& (0+255),f,b
  3722                           
  3723                           ; BSR set to: 0
  3724  00399E  0012               	return		;funcret
  3725  0039A0                     __end_of_strncmp:
  3726                           	opt callstack 0
  3727                           
  3728 ;; *************** function _efgtoa *****************
  3729 ;; Defined at:
  3730 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  3733 ;;		 -> sprintf@f(6), 
  3734 ;;  f               4   65[BANK0 ] PTR struct _IO_FILE
  3735 ;;  c               1   69[BANK0 ] unsigned char 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  u               4  127[BANK0 ] unsigned char 
  3738 ;;  g               4  119[BANK0 ] unsigned char 
  3739 ;;  l               4  113[BANK0 ] unsigned char 
  3740 ;;  h               4  109[BANK0 ] unsigned char 
  3741 ;;  ou              4   75[BANK0 ] unsigned char 
  3742 ;;  n               2  125[BANK0 ] int 
  3743 ;;  e               2  123[BANK0 ] int 
  3744 ;;  i               2  117[BANK0 ] int 
  3745 ;;  w               2  106[BANK0 ] int 
  3746 ;;  p               2  103[BANK0 ] int 
  3747 ;;  sign            2  101[BANK0 ] int 
  3748 ;;  d               2   99[BANK0 ] int 
  3749 ;;  ne              2   97[BANK0 ] int 
  3750 ;;  m               2   95[BANK0 ] int 
  3751 ;;  pp              2   93[BANK0 ] int 
  3752 ;;  t               2   91[BANK0 ] int 
  3753 ;;  mode            1  108[BANK0 ] unsigned char 
  3754 ;;  nmode           1  105[BANK0 ] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  2   63[BANK0 ] int 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3764 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3765 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3767 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3768 ;;Total ram usage:       68 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    6
  3771 ;; This function calls:
  3772 ;;		___awdiv
  3773 ;;		___awmod
  3774 ;;		___fladd
  3775 ;;		___fldiv
  3776 ;;		___fleq
  3777 ;;		___flge
  3778 ;;		___flmul
  3779 ;;		___flneg
  3780 ;;		___flsub
  3781 ;;		___fltol
  3782 ;;		___fpclassifyf
  3783 ;;		_floorf
  3784 ;;		_isupper
  3785 ;;		_pad
  3786 ;;		_strcpy
  3787 ;;		_tolower
  3788 ;; This function is called by:
  3789 ;;		_vfpfcnvrt
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text9
  3794  000F9E                     __ptext9:
  3795                           	opt callstack 0
  3796  000F9E                     _efgtoa:
  3797                           	opt callstack 20
  3798                           
  3799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;incstack = 0
  3803  000F9E  0E00               	movlw	0
  3804  000FA0  0100               	movlb	0	; () banked
  3805  000FA2  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  3806  000FA4  0E00               	movlw	0
  3807  000FA6  6FC5               	movwf	efgtoa@sign& (0+255),b
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3811  000FA8  C0A1  F0D7         	movff	efgtoa@f,efgtoa@g
  3812  000FAC  C0A2  F0D8         	movff	efgtoa@f+1,efgtoa@g+1
  3813  000FB0  C0A3  F0D9         	movff	efgtoa@f+2,efgtoa@g+2
  3814  000FB4  C0A4  F0DA         	movff	efgtoa@f+3,efgtoa@g+3
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3818  000FB8  AFDA               	btfss	(efgtoa@g+3)& (0+255),7,b
  3819  000FBA  D016               	goto	l6724
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3823  000FBC  0E00               	movlw	0
  3824  000FBE  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  3825  000FC0  0E01               	movlw	1
  3826  000FC2  6FC5               	movwf	efgtoa@sign& (0+255),b
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3830  000FC4  C0D7  F060         	movff	efgtoa@g,___flneg@f1
  3831  000FC8  C0D8  F061         	movff	efgtoa@g+1,___flneg@f1+1
  3832  000FCC  C0D9  F062         	movff	efgtoa@g+2,___flneg@f1+2
  3833  000FD0  C0DA  F063         	movff	efgtoa@g+3,___flneg@f1+3
  3834  000FD4  ECE1  F021         	call	___flneg	;wreg free
  3835  000FD8  C060  F0D7         	movff	?___flneg,efgtoa@g
  3836  000FDC  C061  F0D8         	movff	?___flneg+1,efgtoa@g+1
  3837  000FE0  C062  F0D9         	movff	?___flneg+2,efgtoa@g+2
  3838  000FE4  C063  F0DA         	movff	?___flneg+3,efgtoa@g+3
  3839  000FE8                     l6724:
  3840                           
  3841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3842  000FE8  0E00               	movlw	0
  3843  000FEA  0100               	movlb	0	; () banked
  3844  000FEC  6FDE               	movwf	(efgtoa@n+1)& (0+255),b
  3845  000FEE  0E00               	movlw	0
  3846  000FF0  6FDD               	movwf	efgtoa@n& (0+255),b
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3850  000FF2  C036  F0CA         	movff	_width,efgtoa@w
  3851  000FF6  C037  F0CB         	movff	_width+1,efgtoa@w+1
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3855  000FFA  51C5               	movf	efgtoa@sign& (0+255),w,b
  3856  000FFC  11C6               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3857  000FFE  A4D8               	btfss	status,2,c
  3858  001000  D002               	goto	u8440
  3859                           
  3860                           ; BSR set to: 0
  3861  001002  A43A               	btfss	_flags,2,c
  3862  001004  D013               	goto	l6744
  3863  001006                     u8440:
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3867  001006  51C5               	movf	efgtoa@sign& (0+255),w,b
  3868  001008  11C6               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3869  00100A  A4D8               	btfss	status,2,c
  3870  00100C  D004               	goto	l6736
  3871                           
  3872                           ; BSR set to: 0
  3873  00100E  0E00               	movlw	0
  3874  001010  6FB0               	movwf	(_efgtoa$1411+1)& (0+255),b
  3875  001012  0E2B               	movlw	43
  3876  001014  D003               	goto	L2
  3877  001016                     l6736:
  3878                           
  3879                           ; BSR set to: 0
  3880  001016  0E00               	movlw	0
  3881  001018  6FB0               	movwf	(_efgtoa$1411+1)& (0+255),b
  3882  00101A  0E2D               	movlw	45
  3883  00101C                     L2:
  3884  00101C  6FAF               	movwf	_efgtoa$1411& (0+255),b
  3885                           
  3886                           ; BSR set to: 0
  3887  00101E  C0AF  F122         	movff	_efgtoa$1411,_dbuf
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3891  001022  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  3892  001024  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3896  001026  07CA               	decf	efgtoa@w& (0+255),f,b
  3897  001028  A0D8               	btfss	status,0,c
  3898  00102A  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  3899  00102C                     l6744:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3903  00102C  C0D7  F060         	movff	efgtoa@g,___fpclassifyf@x
  3904  001030  C0D8  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3905  001034  C0D9  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3906  001038  C0DA  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3907  00103C  EC5B  F01B         	call	___fpclassifyf	;wreg free
  3908  001040  0100               	movlb	0	; () banked
  3909  001042  0560               	decf	?___fpclassifyf& (0+255),w,b
  3910  001044  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3911  001046  A4D8               	btfss	status,2,c
  3912  001048  D04C               	goto	l6762
  3913                           
  3914                           ; BSR set to: 0
  3915  00104A  0EBF               	movlw	191
  3916  00104C  6FA6               	movwf	??_efgtoa& (0+255),b
  3917  00104E  0EFF               	movlw	255
  3918  001050  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  3919  001052  51A5               	movf	efgtoa@c& (0+255),w,b
  3920  001054  6FA8               	movwf	(??_efgtoa+2)& (0+255),b
  3921  001056  6BA9               	clrf	(??_efgtoa+3)& (0+255),b
  3922  001058  51A6               	movf	??_efgtoa& (0+255),w,b
  3923  00105A  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  3924  00105C  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  3925  00105E  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3926  001060  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  3927  001062  E106               	bnz	u8470
  3928  001064  0E1A               	movlw	26
  3929  001066  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  3930  001068  B0D8               	btfsc	status,0,c
  3931  00106A  D002               	goto	u8470
  3932  00106C  0E01               	movlw	1
  3933  00106E  D001               	goto	u8480
  3934  001070                     u8470:
  3935  001070  0E00               	movlw	0
  3936  001072                     u8480:
  3937  001072  6FB1               	movwf	_efgtoa$1412& (0+255),b
  3938  001074  6BB2               	clrf	(_efgtoa$1412+1)& (0+255),b
  3939                           
  3940                           ; BSR set to: 0
  3941  001076  51B1               	movf	_efgtoa$1412& (0+255),w,b
  3942  001078  11B2               	iorwf	(_efgtoa$1412+1)& (0+255),w,b
  3943  00107A  B4D8               	btfsc	status,2,c
  3944  00107C  D00D               	goto	l6754
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3948  00107E  0E22               	movlw	low _dbuf
  3949  001080  25DD               	addwf	efgtoa@n& (0+255),w,b
  3950  001082  6F60               	movwf	strcpy@dest& (0+255),b
  3951  001084  0E01               	movlw	high _dbuf
  3952  001086  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3953  001088  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3954  00108A  0E89               	movlw	low STR_7
  3955  00108C  6F62               	movwf	strcpy@src& (0+255),b
  3956  00108E  0E0F               	movlw	high STR_7
  3957  001090  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3958  001092  EC8C  F020         	call	_strcpy	;wreg free
  3959                           
  3960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3961  001096  D00C               	goto	l6756
  3962  001098                     l6754:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3966  001098  0E22               	movlw	low _dbuf
  3967  00109A  25DD               	addwf	efgtoa@n& (0+255),w,b
  3968  00109C  6F60               	movwf	strcpy@dest& (0+255),b
  3969  00109E  0E01               	movlw	high _dbuf
  3970  0010A0  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3971  0010A2  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3972  0010A4  0E91               	movlw	low STR_8
  3973  0010A6  6F62               	movwf	strcpy@src& (0+255),b
  3974  0010A8  0E0F               	movlw	high STR_8
  3975  0010AA  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3976  0010AC  EC8C  F020         	call	_strcpy	;wreg free
  3977  0010B0                     l6756:
  3978                           
  3979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3980  0010B0  0100               	movlb	0	; () banked
  3981  0010B2  0EFD               	movlw	253
  3982  0010B4  27CA               	addwf	efgtoa@w& (0+255),f,b
  3983  0010B6  0EFF               	movlw	255
  3984  0010B8  23CB               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3985  0010BA                     l6758:
  3986                           
  3987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3988  0010BA  C09F  F070         	movff	efgtoa@fp,pad@fp
  3989  0010BE  C0A0  F071         	movff	efgtoa@fp+1,pad@fp+1
  3990  0010C2  0E22               	movlw	low _dbuf
  3991  0010C4  0100               	movlb	0	; () banked
  3992  0010C6  6F72               	movwf	pad@buf& (0+255),b
  3993  0010C8  0E01               	movlw	high _dbuf
  3994  0010CA  6F73               	movwf	(pad@buf+1)& (0+255),b
  3995  0010CC  C0CA  F074         	movff	efgtoa@w,pad@p
  3996  0010D0  C0CB  F075         	movff	efgtoa@w+1,pad@p+1
  3997  0010D4  EC76  F01D         	call	_pad	;wreg free
  3998  0010D8  C070  F09F         	movff	?_pad,?_efgtoa
  3999  0010DC  C071  F0A0         	movff	?_pad+1,?_efgtoa+1
  4000  0010E0  0012               	return	
  4001  0010E2                     l6762:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4005  0010E2  C0D7  F060         	movff	efgtoa@g,___fpclassifyf@x
  4006  0010E6  C0D8  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4007  0010EA  C0D9  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4008  0010EE  C0DA  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4009  0010F2  EC5B  F01B         	call	___fpclassifyf	;wreg free
  4010  0010F6  0100               	movlb	0	; () banked
  4011  0010F8  5160               	movf	?___fpclassifyf& (0+255),w,b
  4012  0010FA  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  4013  0010FC  A4D8               	btfss	status,2,c
  4014  0010FE  D034               	goto	l6780
  4015                           
  4016                           ; BSR set to: 0
  4017  001100  0EBF               	movlw	191
  4018  001102  6FA6               	movwf	??_efgtoa& (0+255),b
  4019  001104  0EFF               	movlw	255
  4020  001106  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  4021  001108  51A5               	movf	efgtoa@c& (0+255),w,b
  4022  00110A  6FA8               	movwf	(??_efgtoa+2)& (0+255),b
  4023  00110C  6BA9               	clrf	(??_efgtoa+3)& (0+255),b
  4024  00110E  51A6               	movf	??_efgtoa& (0+255),w,b
  4025  001110  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  4026  001112  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  4027  001114  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4028  001116  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  4029  001118  E106               	bnz	u8510
  4030  00111A  0E1A               	movlw	26
  4031  00111C  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  4032  00111E  B0D8               	btfsc	status,0,c
  4033  001120  D002               	goto	u8510
  4034  001122  0E01               	movlw	1
  4035  001124  D001               	goto	u8520
  4036  001126                     u8510:
  4037  001126  0E00               	movlw	0
  4038  001128                     u8520:
  4039  001128  6FB3               	movwf	_efgtoa$1416& (0+255),b
  4040  00112A  6BB4               	clrf	(_efgtoa$1416+1)& (0+255),b
  4041                           
  4042                           ; BSR set to: 0
  4043  00112C  51B3               	movf	_efgtoa$1416& (0+255),w,b
  4044  00112E  11B4               	iorwf	(_efgtoa$1416+1)& (0+255),w,b
  4045  001130  B4D8               	btfsc	status,2,c
  4046  001132  D00D               	goto	l6772
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4050  001134  0E22               	movlw	low _dbuf
  4051  001136  25DD               	addwf	efgtoa@n& (0+255),w,b
  4052  001138  6F60               	movwf	strcpy@dest& (0+255),b
  4053  00113A  0E01               	movlw	high _dbuf
  4054  00113C  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4055  00113E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4056  001140  0E8D               	movlw	low STR_11
  4057  001142  6F62               	movwf	strcpy@src& (0+255),b
  4058  001144  0E0F               	movlw	high STR_11
  4059  001146  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4060  001148  EC8C  F020         	call	_strcpy	;wreg free
  4061                           
  4062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4063  00114C  D7B1               	goto	l6756
  4064  00114E                     l6772:
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4068  00114E  0E22               	movlw	low _dbuf
  4069  001150  25DD               	addwf	efgtoa@n& (0+255),w,b
  4070  001152  6F60               	movwf	strcpy@dest& (0+255),b
  4071  001154  0E01               	movlw	high _dbuf
  4072  001156  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4073  001158  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4074  00115A  0E95               	movlw	low STR_12
  4075  00115C  6F62               	movwf	strcpy@src& (0+255),b
  4076  00115E  0E0F               	movlw	high STR_12
  4077  001160  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4078  001162  EC8C  F020         	call	_strcpy	;wreg free
  4079  001166  D7A4               	goto	l6756
  4080  001168                     l6780:
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4084  001168  0E00               	movlw	0
  4085  00116A  6FDF               	movwf	efgtoa@u& (0+255),b
  4086  00116C  0E00               	movlw	0
  4087  00116E  6FE0               	movwf	(efgtoa@u+1)& (0+255),b
  4088  001170  0E80               	movlw	128
  4089  001172  6FE1               	movwf	(efgtoa@u+2)& (0+255),b
  4090  001174  0E3F               	movlw	63
  4091  001176  6FE2               	movwf	(efgtoa@u+3)& (0+255),b
  4092                           
  4093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4094  001178  0E00               	movlw	0
  4095  00117A  6FDC               	movwf	(efgtoa@e+1)& (0+255),b
  4096  00117C  0E00               	movlw	0
  4097  00117E  6FDB               	movwf	efgtoa@e& (0+255),b
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4101  001180  C0D7  F060         	movff	efgtoa@g,___fleq@ff1
  4102  001184  C0D8  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  4103  001188  C0D9  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  4104  00118C  C0DA  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  4105  001190  0E00               	movlw	0
  4106  001192  6F64               	movwf	___fleq@ff2& (0+255),b
  4107  001194  0E00               	movlw	0
  4108  001196  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4109  001198  0E00               	movlw	0
  4110  00119A  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4111  00119C  0E00               	movlw	0
  4112  00119E  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4113  0011A0  ECC4  F01D         	call	___fleq	;wreg free
  4114  0011A4  0100               	movlb	0	; () banked
  4115  0011A6  A0D8               	btfss	status,0,c
  4116  0011A8  D01E               	goto	l6790
  4117  0011AA  D078               	goto	u8560
  4118  0011AC                     l6786:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4122  0011AC  C0DF  F06E         	movff	efgtoa@u,___flmul@b
  4123  0011B0  C0E0  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4124  0011B4  C0E1  F070         	movff	efgtoa@u+2,___flmul@b+2
  4125  0011B8  C0E2  F071         	movff	efgtoa@u+3,___flmul@b+3
  4126  0011BC  0E00               	movlw	0
  4127  0011BE  6F72               	movwf	___flmul@a& (0+255),b
  4128  0011C0  0E00               	movlw	0
  4129  0011C2  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4130  0011C4  0E20               	movlw	32
  4131  0011C6  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4132  0011C8  0E41               	movlw	65
  4133  0011CA  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4134  0011CC  ECC5  F00F         	call	___flmul	;wreg free
  4135  0011D0  C06E  F0DF         	movff	?___flmul,efgtoa@u
  4136  0011D4  C06F  F0E0         	movff	?___flmul+1,efgtoa@u+1
  4137  0011D8  C070  F0E1         	movff	?___flmul+2,efgtoa@u+2
  4138  0011DC  C071  F0E2         	movff	?___flmul+3,efgtoa@u+3
  4139                           
  4140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4141  0011E0  0100               	movlb	0	; () banked
  4142  0011E2  4BDB               	infsnz	efgtoa@e& (0+255),f,b
  4143  0011E4  2BDC               	incf	(efgtoa@e+1)& (0+255),f,b
  4144  0011E6                     l6790:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4148  0011E6  C0D7  F087         	movff	efgtoa@g,___flge@ff1
  4149  0011EA  C0D8  F088         	movff	efgtoa@g+1,___flge@ff1+1
  4150  0011EE  C0D9  F089         	movff	efgtoa@g+2,___flge@ff1+2
  4151  0011F2  C0DA  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  4152  0011F6  0E00               	movlw	0
  4153  0011F8  6F72               	movwf	___flmul@a& (0+255),b
  4154  0011FA  0E00               	movlw	0
  4155  0011FC  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4156  0011FE  0E20               	movlw	32
  4157  001200  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4158  001202  0E41               	movlw	65
  4159  001204  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4160  001206  C0DF  F06E         	movff	efgtoa@u,___flmul@b
  4161  00120A  C0E0  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4162  00120E  C0E1  F070         	movff	efgtoa@u+2,___flmul@b+2
  4163  001212  C0E2  F071         	movff	efgtoa@u+3,___flmul@b+3
  4164  001216  ECC5  F00F         	call	___flmul	;wreg free
  4165  00121A  C06E  F08B         	movff	?___flmul,___flge@ff2
  4166  00121E  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  4167  001222  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  4168  001226  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  4169  00122A  EC8A  F01A         	call	___flge	;wreg free
  4170  00122E  0100               	movlb	0	; () banked
  4171  001230  A0D8               	btfss	status,0,c
  4172  001232  D01F               	goto	l6796
  4173  001234  D7BB               	goto	l6786
  4174  001236                     l6792:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4178  001236  C0DF  F060         	movff	efgtoa@u,___fldiv@b
  4179  00123A  C0E0  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4180  00123E  C0E1  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4181  001242  C0E2  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4182  001246  0E00               	movlw	0
  4183  001248  6F64               	movwf	___fldiv@a& (0+255),b
  4184  00124A  0E00               	movlw	0
  4185  00124C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4186  00124E  0E20               	movlw	32
  4187  001250  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4188  001252  0E41               	movlw	65
  4189  001254  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4190  001256  EC7C  F014         	call	___fldiv	;wreg free
  4191  00125A  C060  F0DF         	movff	?___fldiv,efgtoa@u
  4192  00125E  C061  F0E0         	movff	?___fldiv+1,efgtoa@u+1
  4193  001262  C062  F0E1         	movff	?___fldiv+2,efgtoa@u+2
  4194  001266  C063  F0E2         	movff	?___fldiv+3,efgtoa@u+3
  4195                           
  4196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4197  00126A  0100               	movlb	0	; () banked
  4198  00126C  07DB               	decf	efgtoa@e& (0+255),f,b
  4199  00126E  A0D8               	btfss	status,0,c
  4200  001270  07DC               	decf	(efgtoa@e+1)& (0+255),f,b
  4201  001272                     l6796:
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4205  001272  C0D7  F087         	movff	efgtoa@g,___flge@ff1
  4206  001276  C0D8  F088         	movff	efgtoa@g+1,___flge@ff1+1
  4207  00127A  C0D9  F089         	movff	efgtoa@g+2,___flge@ff1+2
  4208  00127E  C0DA  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  4209  001282  C0DF  F08B         	movff	efgtoa@u,___flge@ff2
  4210  001286  C0E0  F08C         	movff	efgtoa@u+1,___flge@ff2+1
  4211  00128A  C0E1  F08D         	movff	efgtoa@u+2,___flge@ff2+2
  4212  00128E  C0E2  F08E         	movff	efgtoa@u+3,___flge@ff2+3
  4213  001292  EC8A  F01A         	call	___flge	;wreg free
  4214  001296  0100               	movlb	0	; () banked
  4215  001298  A0D8               	btfss	status,0,c
  4216  00129A  D7CD               	goto	l6792
  4217  00129C                     u8560:
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4221  00129C  C0A5  F066         	movff	efgtoa@c,tolower@c
  4222  0012A0  6B67               	clrf	(tolower@c+1)& (0+255),b
  4223  0012A2  EC09  F021         	call	_tolower	;wreg free
  4224  0012A6  0100               	movlb	0	; () banked
  4225  0012A8  5166               	movf	?_tolower& (0+255),w,b
  4226  0012AA  6FCC               	movwf	efgtoa@mode& (0+255),b
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4230  0012AC  C0CC  F0C9         	movff	efgtoa@mode,efgtoa@nmode
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4234  0012B0  0E67               	movlw	103
  4235  0012B2  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4236  0012B4  A4D8               	btfss	status,2,c
  4237  0012B6  D019               	goto	l6812
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4241  0012B8  5038               	movf	_prec,w,c
  4242  0012BA  1039               	iorwf	_prec+1,w,c
  4243  0012BC  A4D8               	btfss	status,2,c
  4244  0012BE  D004               	goto	l6808
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4248  0012C0  0E00               	movlw	0
  4249  0012C2  6E39               	movwf	_prec+1,c
  4250  0012C4  0E01               	movlw	1
  4251  0012C6  6E38               	movwf	_prec,c
  4252  0012C8                     l6808:
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4256  0012C8  BE39               	btfsc	_prec+1,7,c
  4257  0012CA  D005               	goto	u8590
  4258  0012CC  5039               	movf	_prec+1,w,c
  4259  0012CE  E108               	bnz	l392
  4260  0012D0  0438               	decf	_prec,w,c
  4261  0012D2  B0D8               	btfsc	status,0,c
  4262  0012D4  D005               	goto	l392
  4263  0012D6                     u8590:
  4264                           
  4265                           ; BSR set to: 0
  4266  0012D6  0E00               	movlw	0
  4267  0012D8  6FC8               	movwf	(efgtoa@p+1)& (0+255),b
  4268  0012DA  0E06               	movlw	6
  4269  0012DC  6FC7               	movwf	efgtoa@p& (0+255),b
  4270  0012DE  D008               	goto	l6818
  4271  0012E0                     l392:
  4272                           
  4273                           ; BSR set to: 0
  4274  0012E0  C038  F0C7         	movff	_prec,efgtoa@p
  4275  0012E4  C039  F0C8         	movff	_prec+1,efgtoa@p+1
  4276  0012E8  D003               	goto	l6818
  4277  0012EA                     l6812:
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4281  0012EA  AE39               	btfss	_prec+1,7,c
  4282  0012EC  D7F9               	goto	l392
  4283  0012EE  D7F3               	goto	u8590
  4284  0012F0                     l6818:
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4288  0012F0  0E67               	movlw	103
  4289  0012F2  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4290  0012F4  A4D8               	btfss	status,2,c
  4291  0012F6  D022               	goto	l6828
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4295  0012F8  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4296  0012FA  D006               	goto	u8620
  4297  0012FC  0EFC               	movlw	252
  4298  0012FE  5DDB               	subwf	efgtoa@e& (0+255),w,b
  4299  001300  0EFF               	movlw	255
  4300  001302  59DC               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4301  001304  A0D8               	btfss	status,0,c
  4302  001306  D018               	goto	l6826
  4303  001308                     u8620:
  4304                           
  4305                           ; BSR set to: 0
  4306  001308  0EFF               	movlw	255
  4307  00130A  6FA6               	movwf	??_efgtoa& (0+255),b
  4308  00130C  0EFF               	movlw	255
  4309  00130E  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  4310  001310  C0C7  F0A8         	movff	efgtoa@p,??_efgtoa+2
  4311  001314  C0C8  F0A9         	movff	efgtoa@p+1,??_efgtoa+3
  4312  001318  51A6               	movf	??_efgtoa& (0+255),w,b
  4313  00131A  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  4314  00131C  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  4315  00131E  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4316  001320  51DB               	movf	efgtoa@e& (0+255),w,b
  4317  001322  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  4318  001324  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  4319  001326  0A80               	xorlw	128
  4320  001328  6FAA               	movwf	(??_efgtoa+4)& (0+255),b
  4321  00132A  51DC               	movf	(efgtoa@e+1)& (0+255),w,b
  4322  00132C  0A80               	xorlw	128
  4323  00132E  59AA               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4324  001330  A0D8               	btfss	status,0,c
  4325  001332  D002               	goto	l6826
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4329  001334  0E66               	movlw	102
  4330  001336  D001               	goto	L3
  4331  001338                     l6826:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4335  001338  0E65               	movlw	101
  4336  00133A                     L3:
  4337  00133A  6FC9               	movwf	efgtoa@nmode& (0+255),b
  4338  00133C                     l6828:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4342  00133C  C0C7  F0BF         	movff	efgtoa@p,efgtoa@m
  4343  001340  C0C8  F0C0         	movff	efgtoa@p+1,efgtoa@m+1
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4347  001344  0E67               	movlw	103
  4348  001346  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4349  001348  A4D8               	btfss	status,2,c
  4350  00134A  D005               	goto	u8660
  4351                           
  4352                           ; BSR set to: 0
  4353  00134C  0E66               	movlw	102
  4354  00134E  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4355  001350  B4D8               	btfsc	status,2,c
  4356                           
  4357                           ; BSR set to: 0
  4358  001352  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4359  001354  D002               	goto	l6838
  4360  001356                     u8660:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4364  001356  4BBF               	infsnz	efgtoa@m& (0+255),f,b
  4365  001358  2BC0               	incf	(efgtoa@m+1)& (0+255),f,b
  4366  00135A                     l6838:
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4370  00135A  0E66               	movlw	102
  4371  00135C  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4372  00135E  A4D8               	btfss	status,2,c
  4373  001360  D016               	goto	l6848
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4377  001362  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4378  001364  D00C               	goto	l6844
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4382  001366  0E00               	movlw	0
  4383  001368  6FDF               	movwf	efgtoa@u& (0+255),b
  4384  00136A  0E00               	movlw	0
  4385  00136C  6FE0               	movwf	(efgtoa@u+1)& (0+255),b
  4386  00136E  0E80               	movlw	128
  4387  001370  6FE1               	movwf	(efgtoa@u+2)& (0+255),b
  4388  001372  0E3F               	movlw	63
  4389  001374  6FE2               	movwf	(efgtoa@u+3)& (0+255),b
  4390                           
  4391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4392  001376  0E00               	movlw	0
  4393  001378  6FDC               	movwf	(efgtoa@e+1)& (0+255),b
  4394  00137A  0E00               	movlw	0
  4395  00137C  6FDB               	movwf	efgtoa@e& (0+255),b
  4396  00137E                     l6844:
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4400  00137E  0E67               	movlw	103
  4401  001380  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4402  001382  B4D8               	btfsc	status,2,c
  4403  001384  D004               	goto	l6848
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4407  001386  51DB               	movf	efgtoa@e& (0+255),w,b
  4408  001388  27BF               	addwf	efgtoa@m& (0+255),f,b
  4409  00138A  51DC               	movf	(efgtoa@e+1)& (0+255),w,b
  4410  00138C  23C0               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4411  00138E                     l6848:
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4415  00138E  0E00               	movlw	0
  4416  001390  6FD6               	movwf	(efgtoa@i+1)& (0+255),b
  4417  001392  0E00               	movlw	0
  4418  001394  6FD5               	movwf	efgtoa@i& (0+255),b
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4422  001396  C0D7  F0CD         	movff	efgtoa@g,efgtoa@h
  4423  00139A  C0D8  F0CE         	movff	efgtoa@g+1,efgtoa@h+1
  4424  00139E  C0D9  F0CF         	movff	efgtoa@g+2,efgtoa@h+2
  4425  0013A2  C0DA  F0D0         	movff	efgtoa@g+3,efgtoa@h+3
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4429  0013A6  C0DF  F0AB         	movff	efgtoa@u,efgtoa@ou
  4430  0013AA  C0E0  F0AC         	movff	efgtoa@u+1,efgtoa@ou+1
  4431  0013AE  C0E1  F0AD         	movff	efgtoa@u+2,efgtoa@ou+2
  4432  0013B2  C0E2  F0AE         	movff	efgtoa@u+3,efgtoa@ou+3
  4433                           
  4434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4435  0013B6  D07C               	goto	l6862
  4436  0013B8                     l6854:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4440  0013B8  C0CD  F060         	movff	efgtoa@h,___fldiv@b
  4441  0013BC  C0CE  F061         	movff	efgtoa@h+1,___fldiv@b+1
  4442  0013C0  C0CF  F062         	movff	efgtoa@h+2,___fldiv@b+2
  4443  0013C4  C0D0  F063         	movff	efgtoa@h+3,___fldiv@b+3
  4444  0013C8  C0DF  F064         	movff	efgtoa@u,___fldiv@a
  4445  0013CC  C0E0  F065         	movff	efgtoa@u+1,___fldiv@a+1
  4446  0013D0  C0E1  F066         	movff	efgtoa@u+2,___fldiv@a+2
  4447  0013D4  C0E2  F067         	movff	efgtoa@u+3,___fldiv@a+3
  4448  0013D8  EC7C  F014         	call	___fldiv	;wreg free
  4449  0013DC  C060  F079         	movff	?___fldiv,floorf@x
  4450  0013E0  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  4451  0013E4  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  4452  0013E8  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  4453  0013EC  ECC1  F015         	call	_floorf	;wreg free
  4454  0013F0  C079  F0D1         	movff	?_floorf,efgtoa@l
  4455  0013F4  C07A  F0D2         	movff	?_floorf+1,efgtoa@l+1
  4456  0013F8  C07B  F0D3         	movff	?_floorf+2,efgtoa@l+2
  4457  0013FC  C07C  F0D4         	movff	?_floorf+3,efgtoa@l+3
  4458                           
  4459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4460  001400  C0D1  F087         	movff	efgtoa@l,___fltol@f1
  4461  001404  C0D2  F088         	movff	efgtoa@l+1,___fltol@f1+1
  4462  001408  C0D3  F089         	movff	efgtoa@l+2,___fltol@f1+2
  4463  00140C  C0D4  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  4464  001410  ECC2  F01B         	call	___fltol	;wreg free
  4465  001414  C087  F0C3         	movff	?___fltol,efgtoa@d
  4466  001418  C088  F0C4         	movff	?___fltol+1,efgtoa@d+1
  4467                           
  4468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4469  00141C  C0CD  F097         	movff	efgtoa@h,___flsub@b
  4470  001420  C0CE  F098         	movff	efgtoa@h+1,___flsub@b+1
  4471  001424  C0CF  F099         	movff	efgtoa@h+2,___flsub@b+2
  4472  001428  C0D0  F09A         	movff	efgtoa@h+3,___flsub@b+3
  4473  00142C  C0DF  F072         	movff	efgtoa@u,___flmul@a
  4474  001430  C0E0  F073         	movff	efgtoa@u+1,___flmul@a+1
  4475  001434  C0E1  F074         	movff	efgtoa@u+2,___flmul@a+2
  4476  001438  C0E2  F075         	movff	efgtoa@u+3,___flmul@a+3
  4477  00143C  C0D1  F06E         	movff	efgtoa@l,___flmul@b
  4478  001440  C0D2  F06F         	movff	efgtoa@l+1,___flmul@b+1
  4479  001444  C0D3  F070         	movff	efgtoa@l+2,___flmul@b+2
  4480  001448  C0D4  F071         	movff	efgtoa@l+3,___flmul@b+3
  4481  00144C  ECC5  F00F         	call	___flmul	;wreg free
  4482  001450  C06E  F09B         	movff	?___flmul,___flsub@a
  4483  001454  C06F  F09C         	movff	?___flmul+1,___flsub@a+1
  4484  001458  C070  F09D         	movff	?___flmul+2,___flsub@a+2
  4485  00145C  C071  F09E         	movff	?___flmul+3,___flsub@a+3
  4486  001460  EC30  F021         	call	___flsub	;wreg free
  4487  001464  C097  F0CD         	movff	?___flsub,efgtoa@h
  4488  001468  C098  F0CE         	movff	?___flsub+1,efgtoa@h+1
  4489  00146C  C099  F0CF         	movff	?___flsub+2,efgtoa@h+2
  4490  001470  C09A  F0D0         	movff	?___flsub+3,efgtoa@h+3
  4491                           
  4492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4493  001474  C0DF  F060         	movff	efgtoa@u,___fldiv@b
  4494  001478  C0E0  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4495  00147C  C0E1  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4496  001480  C0E2  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4497  001484  0E00               	movlw	0
  4498  001486  0100               	movlb	0	; () banked
  4499  001488  6F64               	movwf	___fldiv@a& (0+255),b
  4500  00148A  0E00               	movlw	0
  4501  00148C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4502  00148E  0E20               	movlw	32
  4503  001490  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4504  001492  0E41               	movlw	65
  4505  001494  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4506  001496  EC7C  F014         	call	___fldiv	;wreg free
  4507  00149A  C060  F0DF         	movff	?___fldiv,efgtoa@u
  4508  00149E  C061  F0E0         	movff	?___fldiv+1,efgtoa@u+1
  4509  0014A2  C062  F0E1         	movff	?___fldiv+2,efgtoa@u+2
  4510  0014A6  C063  F0E2         	movff	?___fldiv+3,efgtoa@u+3
  4511                           
  4512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4513  0014AA  0100               	movlb	0	; () banked
  4514  0014AC  4BD5               	infsnz	efgtoa@i& (0+255),f,b
  4515  0014AE  2BD6               	incf	(efgtoa@i+1)& (0+255),f,b
  4516  0014B0                     l6862:
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4520  0014B0  51BF               	movf	efgtoa@m& (0+255),w,b
  4521  0014B2  5DD5               	subwf	efgtoa@i& (0+255),w,b
  4522  0014B4  51D6               	movf	(efgtoa@i+1)& (0+255),w,b
  4523  0014B6  0A80               	xorlw	128
  4524  0014B8  6FA6               	movwf	??_efgtoa& (0+255),b
  4525  0014BA  51C0               	movf	(efgtoa@m+1)& (0+255),w,b
  4526  0014BC  0A80               	xorlw	128
  4527  0014BE  59A6               	subwfb	??_efgtoa& (0+255),w,b
  4528  0014C0  A0D8               	btfss	status,0,c
  4529  0014C2  D77A               	goto	l6854
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4533  0014C4  C0DF  F06E         	movff	efgtoa@u,___flmul@b
  4534  0014C8  C0E0  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4535  0014CC  C0E1  F070         	movff	efgtoa@u+2,___flmul@b+2
  4536  0014D0  C0E2  F071         	movff	efgtoa@u+3,___flmul@b+3
  4537  0014D4  0E00               	movlw	0
  4538  0014D6  6F72               	movwf	___flmul@a& (0+255),b
  4539  0014D8  0E00               	movlw	0
  4540  0014DA  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4541  0014DC  0EA0               	movlw	160
  4542  0014DE  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4543  0014E0  0E40               	movlw	64
  4544  0014E2  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4545  0014E4  ECC5  F00F         	call	___flmul	;wreg free
  4546  0014E8  C06E  F0D1         	movff	?___flmul,efgtoa@l
  4547  0014EC  C06F  F0D2         	movff	?___flmul+1,efgtoa@l+1
  4548  0014F0  C070  F0D3         	movff	?___flmul+2,efgtoa@l+2
  4549  0014F4  C071  F0D4         	movff	?___flmul+3,efgtoa@l+3
  4550                           
  4551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4552  0014F8  C0CD  F087         	movff	efgtoa@h,___flge@ff1
  4553  0014FC  C0CE  F088         	movff	efgtoa@h+1,___flge@ff1+1
  4554  001500  C0CF  F089         	movff	efgtoa@h+2,___flge@ff1+2
  4555  001504  C0D0  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  4556  001508  C0D1  F08B         	movff	efgtoa@l,___flge@ff2
  4557  00150C  C0D2  F08C         	movff	efgtoa@l+1,___flge@ff2+1
  4558  001510  C0D3  F08D         	movff	efgtoa@l+2,___flge@ff2+2
  4559  001514  C0D4  F08E         	movff	efgtoa@l+3,___flge@ff2+3
  4560  001518  EC8A  F01A         	call	___flge	;wreg free
  4561  00151C  0100               	movlb	0	; () banked
  4562  00151E  A0D8               	btfss	status,0,c
  4563  001520  D016               	goto	u8730
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4567                           
  4568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4572  001522  C0CD  F060         	movff	efgtoa@h,___fleq@ff1
  4573  001526  C0CE  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  4574  00152A  C0CF  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  4575  00152E  C0D0  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  4576  001532  C0D1  F064         	movff	efgtoa@l,___fleq@ff2
  4577  001536  C0D2  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  4578  00153A  C0D3  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  4579  00153E  C0D4  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  4580  001542  ECC4  F01D         	call	___fleq	;wreg free
  4581  001546  0100               	movlb	0	; () banked
  4582  001548  B0D8               	btfsc	status,0,c
  4583                           
  4584                           ; BSR set to: 0
  4585  00154A  B1C3               	btfsc	efgtoa@d& (0+255),0,b
  4586  00154C  D008               	goto	l6876
  4587  00154E                     u8730:
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4591  00154E  0E00               	movlw	0
  4592  001550  6FD1               	movwf	efgtoa@l& (0+255),b
  4593  001552  0E00               	movlw	0
  4594  001554  6FD2               	movwf	(efgtoa@l+1)& (0+255),b
  4595  001556  0E00               	movlw	0
  4596  001558  6FD3               	movwf	(efgtoa@l+2)& (0+255),b
  4597  00155A  0E00               	movlw	0
  4598  00155C  6FD4               	movwf	(efgtoa@l+3)& (0+255),b
  4599  00155E                     l6876:
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4603  00155E  C0D7  F087         	movff	efgtoa@g,___fladd@b
  4604  001562  C0D8  F088         	movff	efgtoa@g+1,___fladd@b+1
  4605  001566  C0D9  F089         	movff	efgtoa@g+2,___fladd@b+2
  4606  00156A  C0DA  F08A         	movff	efgtoa@g+3,___fladd@b+3
  4607  00156E  C0D1  F08B         	movff	efgtoa@l,___fladd@a
  4608  001572  C0D2  F08C         	movff	efgtoa@l+1,___fladd@a+1
  4609  001576  C0D3  F08D         	movff	efgtoa@l+2,___fladd@a+2
  4610  00157A  C0D4  F08E         	movff	efgtoa@l+3,___fladd@a+3
  4611  00157E  EC6F  F011         	call	___fladd	;wreg free
  4612  001582  C087  F0CD         	movff	?___fladd,efgtoa@h
  4613  001586  C088  F0CE         	movff	?___fladd+1,efgtoa@h+1
  4614  00158A  C089  F0CF         	movff	?___fladd+2,efgtoa@h+2
  4615  00158E  C08A  F0D0         	movff	?___fladd+3,efgtoa@h+3
  4616                           
  4617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4618  001592  C0AB  F0DF         	movff	efgtoa@ou,efgtoa@u
  4619  001596  C0AC  F0E0         	movff	efgtoa@ou+1,efgtoa@u+1
  4620  00159A  C0AD  F0E1         	movff	efgtoa@ou+2,efgtoa@u+2
  4621  00159E  C0AE  F0E2         	movff	efgtoa@ou+3,efgtoa@u+3
  4622                           
  4623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4624  0015A2  0E65               	movlw	101
  4625  0015A4  0100               	movlb	0	; () banked
  4626  0015A6  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4627  0015A8  B4D8               	btfsc	status,2,c
  4628  0015AA  D005               	goto	l6884
  4629                           
  4630                           ; BSR set to: 0
  4631  0015AC  C0DB  F0C1         	movff	efgtoa@e,efgtoa@ne
  4632  0015B0  C0DC  F0C2         	movff	efgtoa@e+1,efgtoa@ne+1
  4633  0015B4  D004               	goto	l418
  4634  0015B6                     l6884:
  4635                           
  4636                           ; BSR set to: 0
  4637  0015B6  0E00               	movlw	0
  4638  0015B8  6FC2               	movwf	(efgtoa@ne+1)& (0+255),b
  4639  0015BA  0E00               	movlw	0
  4640  0015BC  6FC1               	movwf	efgtoa@ne& (0+255),b
  4641  0015BE                     l418:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4645  0015BE  0E00               	movlw	0
  4646  0015C0  6FBE               	movwf	(efgtoa@pp+1)& (0+255),b
  4647  0015C2  0E00               	movlw	0
  4648  0015C4  6FBD               	movwf	efgtoa@pp& (0+255),b
  4649                           
  4650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4651  0015C6  0E00               	movlw	0
  4652  0015C8  6FBC               	movwf	(efgtoa@t+1)& (0+255),b
  4653  0015CA  0E00               	movlw	0
  4654  0015CC  6FBB               	movwf	efgtoa@t& (0+255),b
  4655                           
  4656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4657  0015CE  0E00               	movlw	0
  4658  0015D0  6FD6               	movwf	(efgtoa@i+1)& (0+255),b
  4659  0015D2  0E00               	movlw	0
  4660  0015D4  6FD5               	movwf	efgtoa@i& (0+255),b
  4661                           
  4662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4663  0015D6  D0C8               	goto	l6934
  4664  0015D8                     l6886:
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4668  0015D8  C0CD  F060         	movff	efgtoa@h,___fldiv@b
  4669  0015DC  C0CE  F061         	movff	efgtoa@h+1,___fldiv@b+1
  4670  0015E0  C0CF  F062         	movff	efgtoa@h+2,___fldiv@b+2
  4671  0015E4  C0D0  F063         	movff	efgtoa@h+3,___fldiv@b+3
  4672  0015E8  C0DF  F064         	movff	efgtoa@u,___fldiv@a
  4673  0015EC  C0E0  F065         	movff	efgtoa@u+1,___fldiv@a+1
  4674  0015F0  C0E1  F066         	movff	efgtoa@u+2,___fldiv@a+2
  4675  0015F4  C0E2  F067         	movff	efgtoa@u+3,___fldiv@a+3
  4676  0015F8  EC7C  F014         	call	___fldiv	;wreg free
  4677  0015FC  C060  F079         	movff	?___fldiv,floorf@x
  4678  001600  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  4679  001604  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  4680  001608  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  4681  00160C  ECC1  F015         	call	_floorf	;wreg free
  4682  001610  C079  F0D1         	movff	?_floorf,efgtoa@l
  4683  001614  C07A  F0D2         	movff	?_floorf+1,efgtoa@l+1
  4684  001618  C07B  F0D3         	movff	?_floorf+2,efgtoa@l+2
  4685  00161C  C07C  F0D4         	movff	?_floorf+3,efgtoa@l+3
  4686                           
  4687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4688  001620  C0D1  F087         	movff	efgtoa@l,___fltol@f1
  4689  001624  C0D2  F088         	movff	efgtoa@l+1,___fltol@f1+1
  4690  001628  C0D3  F089         	movff	efgtoa@l+2,___fltol@f1+2
  4691  00162C  C0D4  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  4692  001630  ECC2  F01B         	call	___fltol	;wreg free
  4693  001634  C087  F0C3         	movff	?___fltol,efgtoa@d
  4694  001638  C088  F0C4         	movff	?___fltol+1,efgtoa@d+1
  4695                           
  4696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4697  00163C  B83A               	btfsc	_flags,4,c
  4698  00163E  D00D               	goto	l6898
  4699  001640  0100               	movlb	0	; () banked
  4700  001642  51C3               	movf	efgtoa@d& (0+255),w,b
  4701  001644  11C4               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4702  001646  A4D8               	btfss	status,2,c
  4703  001648  D008               	goto	l6898
  4704                           
  4705                           ; BSR set to: 0
  4706  00164A  0E67               	movlw	103
  4707  00164C  19CC               	xorwf	efgtoa@mode& (0+255),w,b
  4708  00164E  B4D8               	btfsc	status,2,c
  4709                           
  4710                           ; BSR set to: 0
  4711  001650  AFC2               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4712  001652  D003               	goto	l6898
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4716  001654  4BBB               	infsnz	efgtoa@t& (0+255),f,b
  4717  001656  2BBC               	incf	(efgtoa@t+1)& (0+255),f,b
  4718                           
  4719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4720  001658  D03A               	goto	l6926
  4721  00165A                     l6898:
  4722                           
  4723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4724  00165A  0100               	movlb	0	; () banked
  4725  00165C  51BD               	movf	efgtoa@pp& (0+255),w,b
  4726  00165E  11BE               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4727  001660  B4D8               	btfsc	status,2,c
  4728                           
  4729                           ; BSR set to: 0
  4730  001662  AFC2               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4731  001664  D022               	goto	l6918
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4735  001666  0E22               	movlw	low _dbuf
  4736  001668  25DD               	addwf	efgtoa@n& (0+255),w,b
  4737  00166A  6ED9               	movwf	fsr2l,c
  4738  00166C  0E01               	movlw	high _dbuf
  4739  00166E  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4740  001670  6EDA               	movwf	fsr2h,c
  4741  001672  0E2E               	movlw	46
  4742  001674  6EDF               	movwf	indf2,c
  4743                           
  4744                           ; BSR set to: 0
  4745  001676  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4746  001678  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4750  00167A  07CA               	decf	efgtoa@w& (0+255),f,b
  4751  00167C  A0D8               	btfss	status,0,c
  4752  00167E  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4756  001680  0E00               	movlw	0
  4757  001682  6FBE               	movwf	(efgtoa@pp+1)& (0+255),b
  4758  001684  0E01               	movlw	1
  4759  001686  6FBD               	movwf	efgtoa@pp& (0+255),b
  4760  001688  D010               	goto	l6918
  4761  00168A                     l6910:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4765  00168A  0E22               	movlw	low _dbuf
  4766  00168C  25DD               	addwf	efgtoa@n& (0+255),w,b
  4767  00168E  6ED9               	movwf	fsr2l,c
  4768  001690  0E01               	movlw	high _dbuf
  4769  001692  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4770  001694  6EDA               	movwf	fsr2h,c
  4771  001696  0E30               	movlw	48
  4772  001698  6EDF               	movwf	indf2,c
  4773                           
  4774                           ; BSR set to: 0
  4775  00169A  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4776  00169C  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4780  00169E  07CA               	decf	efgtoa@w& (0+255),f,b
  4781  0016A0  A0D8               	btfss	status,0,c
  4782  0016A2  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4786  0016A4  07BB               	decf	efgtoa@t& (0+255),f,b
  4787  0016A6  A0D8               	btfss	status,0,c
  4788  0016A8  07BC               	decf	(efgtoa@t+1)& (0+255),f,b
  4789  0016AA                     l6918:
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4793  0016AA  51BB               	movf	efgtoa@t& (0+255),w,b
  4794  0016AC  11BC               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4795  0016AE  A4D8               	btfss	status,2,c
  4796  0016B0  D7EC               	goto	l6910
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4800  0016B2  0E22               	movlw	low _dbuf
  4801  0016B4  25DD               	addwf	efgtoa@n& (0+255),w,b
  4802  0016B6  6ED9               	movwf	fsr2l,c
  4803  0016B8  0E01               	movlw	high _dbuf
  4804  0016BA  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4805  0016BC  6EDA               	movwf	fsr2h,c
  4806  0016BE  51C3               	movf	efgtoa@d& (0+255),w,b
  4807  0016C0  0F30               	addlw	48
  4808  0016C2  6EDF               	movwf	indf2,c
  4809                           
  4810                           ; BSR set to: 0
  4811  0016C4  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4812  0016C6  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4816  0016C8  07CA               	decf	efgtoa@w& (0+255),f,b
  4817  0016CA  A0D8               	btfss	status,0,c
  4818  0016CC  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  4819  0016CE                     l6926:
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4823  0016CE  C0CD  F097         	movff	efgtoa@h,___flsub@b
  4824  0016D2  C0CE  F098         	movff	efgtoa@h+1,___flsub@b+1
  4825  0016D6  C0CF  F099         	movff	efgtoa@h+2,___flsub@b+2
  4826  0016DA  C0D0  F09A         	movff	efgtoa@h+3,___flsub@b+3
  4827  0016DE  C0DF  F072         	movff	efgtoa@u,___flmul@a
  4828  0016E2  C0E0  F073         	movff	efgtoa@u+1,___flmul@a+1
  4829  0016E6  C0E1  F074         	movff	efgtoa@u+2,___flmul@a+2
  4830  0016EA  C0E2  F075         	movff	efgtoa@u+3,___flmul@a+3
  4831  0016EE  C0D1  F06E         	movff	efgtoa@l,___flmul@b
  4832  0016F2  C0D2  F06F         	movff	efgtoa@l+1,___flmul@b+1
  4833  0016F6  C0D3  F070         	movff	efgtoa@l+2,___flmul@b+2
  4834  0016FA  C0D4  F071         	movff	efgtoa@l+3,___flmul@b+3
  4835  0016FE  ECC5  F00F         	call	___flmul	;wreg free
  4836  001702  C06E  F09B         	movff	?___flmul,___flsub@a
  4837  001706  C06F  F09C         	movff	?___flmul+1,___flsub@a+1
  4838  00170A  C070  F09D         	movff	?___flmul+2,___flsub@a+2
  4839  00170E  C071  F09E         	movff	?___flmul+3,___flsub@a+3
  4840  001712  EC30  F021         	call	___flsub	;wreg free
  4841  001716  C097  F0CD         	movff	?___flsub,efgtoa@h
  4842  00171A  C098  F0CE         	movff	?___flsub+1,efgtoa@h+1
  4843  00171E  C099  F0CF         	movff	?___flsub+2,efgtoa@h+2
  4844  001722  C09A  F0D0         	movff	?___flsub+3,efgtoa@h+3
  4845                           
  4846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4847  001726  C0DF  F060         	movff	efgtoa@u,___fldiv@b
  4848  00172A  C0E0  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4849  00172E  C0E1  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4850  001732  C0E2  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4851  001736  0E00               	movlw	0
  4852  001738  0100               	movlb	0	; () banked
  4853  00173A  6F64               	movwf	___fldiv@a& (0+255),b
  4854  00173C  0E00               	movlw	0
  4855  00173E  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4856  001740  0E20               	movlw	32
  4857  001742  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4858  001744  0E41               	movlw	65
  4859  001746  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4860  001748  EC7C  F014         	call	___fldiv	;wreg free
  4861  00174C  C060  F0DF         	movff	?___fldiv,efgtoa@u
  4862  001750  C061  F0E0         	movff	?___fldiv+1,efgtoa@u+1
  4863  001754  C062  F0E1         	movff	?___fldiv+2,efgtoa@u+2
  4864  001758  C063  F0E2         	movff	?___fldiv+3,efgtoa@u+3
  4865                           
  4866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4867  00175C  0100               	movlb	0	; () banked
  4868  00175E  07C1               	decf	efgtoa@ne& (0+255),f,b
  4869  001760  A0D8               	btfss	status,0,c
  4870  001762  07C2               	decf	(efgtoa@ne+1)& (0+255),f,b
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4874  001764  4BD5               	infsnz	efgtoa@i& (0+255),f,b
  4875  001766  2BD6               	incf	(efgtoa@i+1)& (0+255),f,b
  4876  001768                     l6934:
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4880  001768  51BF               	movf	efgtoa@m& (0+255),w,b
  4881  00176A  5DD5               	subwf	efgtoa@i& (0+255),w,b
  4882  00176C  51D6               	movf	(efgtoa@i+1)& (0+255),w,b
  4883  00176E  0A80               	xorlw	128
  4884  001770  6FA6               	movwf	??_efgtoa& (0+255),b
  4885  001772  51C0               	movf	(efgtoa@m+1)& (0+255),w,b
  4886  001774  0A80               	xorlw	128
  4887  001776  59A6               	subwfb	??_efgtoa& (0+255),w,b
  4888  001778  B0D8               	btfsc	status,0,c
  4889  00177A  D008               	goto	u8830
  4890                           
  4891                           ; BSR set to: 0
  4892  00177C  BFDE               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4893  00177E  D72C               	goto	l6886
  4894  001780  51DE               	movf	(efgtoa@n+1)& (0+255),w,b
  4895  001782  E104               	bnz	u8830
  4896  001784  0E4B               	movlw	75
  4897  001786  5DDD               	subwf	efgtoa@n& (0+255),w,b
  4898  001788  A0D8               	btfss	status,0,c
  4899  00178A  D726               	goto	l6886
  4900  00178C                     u8830:
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4904  00178C  51BD               	movf	efgtoa@pp& (0+255),w,b
  4905  00178E  11BE               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4906  001790  B4D8               	btfsc	status,2,c
  4907                           
  4908                           ; BSR set to: 0
  4909  001792  A83A               	btfss	_flags,4,c
  4910  001794  D00A               	goto	l6946
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4914  001796  0E22               	movlw	low _dbuf
  4915  001798  25DD               	addwf	efgtoa@n& (0+255),w,b
  4916  00179A  6ED9               	movwf	fsr2l,c
  4917  00179C  0E01               	movlw	high _dbuf
  4918  00179E  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4919  0017A0  6EDA               	movwf	fsr2h,c
  4920  0017A2  0E2E               	movlw	46
  4921  0017A4  6EDF               	movwf	indf2,c
  4922                           
  4923                           ; BSR set to: 0
  4924  0017A6  4BDD               	infsnz	efgtoa@n& (0+255),f,b
  4925  0017A8  2BDE               	incf	(efgtoa@n+1)& (0+255),f,b
  4926  0017AA                     l6946:
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4930  0017AA  0E22               	movlw	low _dbuf
  4931  0017AC  25DD               	addwf	efgtoa@n& (0+255),w,b
  4932  0017AE  6ED9               	movwf	fsr2l,c
  4933  0017B0  0E01               	movlw	high _dbuf
  4934  0017B2  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4935  0017B4  6EDA               	movwf	fsr2h,c
  4936  0017B6  0E00               	movlw	0
  4937  0017B8  6EDF               	movwf	indf2,c
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4941  0017BA  0E65               	movlw	101
  4942  0017BC  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  4943  0017BE  A4D8               	btfss	status,2,c
  4944  0017C0  D47C               	goto	l6758
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4948  0017C2  0E00               	movlw	0
  4949  0017C4  6FD6               	movwf	(efgtoa@i+1)& (0+255),b
  4950  0017C6  0E4F               	movlw	79
  4951  0017C8  6FD5               	movwf	efgtoa@i& (0+255),b
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4955  0017CA  0E22               	movlw	low _dbuf
  4956  0017CC  25D5               	addwf	efgtoa@i& (0+255),w,b
  4957  0017CE  6ED9               	movwf	fsr2l,c
  4958  0017D0  0E01               	movlw	high _dbuf
  4959  0017D2  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4960  0017D4  6EDA               	movwf	fsr2h,c
  4961  0017D6  0E00               	movlw	0
  4962  0017D8  6EDF               	movwf	indf2,c
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4966  0017DA  0E00               	movlw	0
  4967  0017DC  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  4968  0017DE  0E00               	movlw	0
  4969  0017E0  6FC5               	movwf	efgtoa@sign& (0+255),b
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4973  0017E2  AFDC               	btfss	(efgtoa@e+1)& (0+255),7,b
  4974  0017E4  D008               	goto	l6962
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4978  0017E6  0E00               	movlw	0
  4979  0017E8  6FC6               	movwf	(efgtoa@sign+1)& (0+255),b
  4980  0017EA  0E01               	movlw	1
  4981  0017EC  6FC5               	movwf	efgtoa@sign& (0+255),b
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4985  0017EE  6DDB               	negf	efgtoa@e& (0+255),b
  4986  0017F0  1FDC               	comf	(efgtoa@e+1)& (0+255),f,b
  4987  0017F2  B0D8               	btfsc	status,0,c
  4988  0017F4  2BDC               	incf	(efgtoa@e+1)& (0+255),f,b
  4989  0017F6                     l6962:
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4993  0017F6  0E00               	movlw	0
  4994  0017F8  6FC8               	movwf	(efgtoa@p+1)& (0+255),b
  4995  0017FA  0E02               	movlw	2
  4996  0017FC  6FC7               	movwf	efgtoa@p& (0+255),b
  4997                           
  4998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4999  0017FE  D02C               	goto	l6974
  5000  001800                     l6964:
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  5004  001800  07D5               	decf	efgtoa@i& (0+255),f,b
  5005  001802  A0D8               	btfss	status,0,c
  5006  001804  07D6               	decf	(efgtoa@i+1)& (0+255),f,b
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  5010  001806  0E22               	movlw	low _dbuf
  5011  001808  25D5               	addwf	efgtoa@i& (0+255),w,b
  5012  00180A  6ED9               	movwf	fsr2l,c
  5013  00180C  0E01               	movlw	high _dbuf
  5014  00180E  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5015  001810  6EDA               	movwf	fsr2h,c
  5016  001812  C0DB  F060         	movff	efgtoa@e,___awmod@dividend
  5017  001816  C0DC  F061         	movff	efgtoa@e+1,___awmod@dividend+1
  5018  00181A  0E00               	movlw	0
  5019  00181C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5020  00181E  0E0A               	movlw	10
  5021  001820  6F62               	movwf	___awmod@divisor& (0+255),b
  5022  001822  EC8D  F01F         	call	___awmod	;wreg free
  5023  001826  0100               	movlb	0	; () banked
  5024  001828  5160               	movf	?___awmod& (0+255),w,b
  5025  00182A  0F30               	addlw	48
  5026  00182C  6EDF               	movwf	indf2,c
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  5030  00182E  C0DB  F060         	movff	efgtoa@e,___awdiv@dividend
  5031  001832  C0DC  F061         	movff	efgtoa@e+1,___awdiv@dividend+1
  5032  001836  0E00               	movlw	0
  5033  001838  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5034  00183A  0E0A               	movlw	10
  5035  00183C  6F62               	movwf	___awdiv@divisor& (0+255),b
  5036  00183E  EC4E  F01E         	call	___awdiv	;wreg free
  5037  001842  C060  F0DB         	movff	?___awdiv,efgtoa@e
  5038  001846  C061  F0DC         	movff	?___awdiv+1,efgtoa@e+1
  5039                           
  5040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  5041  00184A  0100               	movlb	0	; () banked
  5042  00184C  07C7               	decf	efgtoa@p& (0+255),f,b
  5043  00184E  A0D8               	btfss	status,0,c
  5044  001850  07C8               	decf	(efgtoa@p+1)& (0+255),f,b
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  5048  001852  07CA               	decf	efgtoa@w& (0+255),f,b
  5049  001854  A0D8               	btfss	status,0,c
  5050  001856  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  5051  001858                     l6974:
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5055  001858  51DB               	movf	efgtoa@e& (0+255),w,b
  5056  00185A  11DC               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5057  00185C  A4D8               	btfss	status,2,c
  5058  00185E  D7D0               	goto	l6964
  5059                           
  5060                           ; BSR set to: 0
  5061  001860  BFC8               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5062  001862  D005               	goto	u8890
  5063  001864  51C8               	movf	(efgtoa@p+1)& (0+255),w,b
  5064  001866  E1CC               	bnz	l6964
  5065  001868  05C7               	decf	efgtoa@p& (0+255),w,b
  5066  00186A  B0D8               	btfsc	status,0,c
  5067  00186C  D7C9               	goto	l6964
  5068  00186E                     u8890:
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  5072  00186E  07D5               	decf	efgtoa@i& (0+255),f,b
  5073  001870  A0D8               	btfss	status,0,c
  5074  001872  07D6               	decf	(efgtoa@i+1)& (0+255),f,b
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  5078  001874  51C5               	movf	efgtoa@sign& (0+255),w,b
  5079  001876  11C6               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5080  001878  A4D8               	btfss	status,2,c
  5081  00187A  D004               	goto	l6984
  5082                           
  5083                           ; BSR set to: 0
  5084  00187C  0E00               	movlw	0
  5085  00187E  6FB6               	movwf	(_efgtoa$1420+1)& (0+255),b
  5086  001880  0E2B               	movlw	43
  5087  001882  D003               	goto	L4
  5088  001884                     l6984:
  5089                           
  5090                           ; BSR set to: 0
  5091  001884  0E00               	movlw	0
  5092  001886  6FB6               	movwf	(_efgtoa$1420+1)& (0+255),b
  5093  001888  0E2D               	movlw	45
  5094  00188A                     L4:
  5095  00188A  6FB5               	movwf	_efgtoa$1420& (0+255),b
  5096                           
  5097                           ; BSR set to: 0
  5098  00188C  0E22               	movlw	low _dbuf
  5099  00188E  25D5               	addwf	efgtoa@i& (0+255),w,b
  5100  001890  6ED9               	movwf	fsr2l,c
  5101  001892  0E01               	movlw	high _dbuf
  5102  001894  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5103  001896  6EDA               	movwf	fsr2h,c
  5104  001898  C0B5  FFDF         	movff	_efgtoa$1420,indf2
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  5108  00189C  07CA               	decf	efgtoa@w& (0+255),f,b
  5109  00189E  A0D8               	btfss	status,0,c
  5110  0018A0  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5114  0018A2  07D5               	decf	efgtoa@i& (0+255),f,b
  5115  0018A4  A0D8               	btfss	status,0,c
  5116  0018A6  07D6               	decf	(efgtoa@i+1)& (0+255),f,b
  5117                           
  5118                           ; BSR set to: 0
  5119  0018A8  0EBF               	movlw	191
  5120  0018AA  6FA6               	movwf	??_efgtoa& (0+255),b
  5121  0018AC  0EFF               	movlw	255
  5122  0018AE  6FA7               	movwf	(??_efgtoa+1)& (0+255),b
  5123  0018B0  51A5               	movf	efgtoa@c& (0+255),w,b
  5124  0018B2  6FA8               	movwf	(??_efgtoa+2)& (0+255),b
  5125  0018B4  6BA9               	clrf	(??_efgtoa+3)& (0+255),b
  5126  0018B6  51A6               	movf	??_efgtoa& (0+255),w,b
  5127  0018B8  27A8               	addwf	(??_efgtoa+2)& (0+255),f,b
  5128  0018BA  51A7               	movf	(??_efgtoa+1)& (0+255),w,b
  5129  0018BC  23A9               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5130  0018BE  51A9               	movf	(??_efgtoa+3)& (0+255),w,b
  5131  0018C0  E106               	bnz	u8910
  5132  0018C2  0E1A               	movlw	26
  5133  0018C4  5DA8               	subwf	(??_efgtoa+2)& (0+255),w,b
  5134  0018C6  B0D8               	btfsc	status,0,c
  5135  0018C8  D002               	goto	u8910
  5136  0018CA  0E01               	movlw	1
  5137  0018CC  D001               	goto	u8920
  5138  0018CE                     u8910:
  5139  0018CE  0E00               	movlw	0
  5140  0018D0                     u8920:
  5141  0018D0  6FB9               	movwf	_efgtoa$1422& (0+255),b
  5142  0018D2  6BBA               	clrf	(_efgtoa$1422+1)& (0+255),b
  5143                           
  5144                           ; BSR set to: 0
  5145  0018D4  51B9               	movf	_efgtoa$1422& (0+255),w,b
  5146  0018D6  11BA               	iorwf	(_efgtoa$1422+1)& (0+255),w,b
  5147  0018D8  A4D8               	btfss	status,2,c
  5148  0018DA  D004               	goto	l7000
  5149                           
  5150                           ; BSR set to: 0
  5151  0018DC  0E00               	movlw	0
  5152  0018DE  6FB8               	movwf	(_efgtoa$1421+1)& (0+255),b
  5153  0018E0  0E65               	movlw	101
  5154  0018E2  D003               	goto	L5
  5155  0018E4                     l7000:
  5156                           
  5157                           ; BSR set to: 0
  5158  0018E4  0E00               	movlw	0
  5159  0018E6  6FB8               	movwf	(_efgtoa$1421+1)& (0+255),b
  5160  0018E8  0E45               	movlw	69
  5161  0018EA                     L5:
  5162  0018EA  6FB7               	movwf	_efgtoa$1421& (0+255),b
  5163                           
  5164                           ; BSR set to: 0
  5165  0018EC  0E22               	movlw	low _dbuf
  5166  0018EE  25D5               	addwf	efgtoa@i& (0+255),w,b
  5167  0018F0  6ED9               	movwf	fsr2l,c
  5168  0018F2  0E01               	movlw	high _dbuf
  5169  0018F4  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5170  0018F6  6EDA               	movwf	fsr2h,c
  5171  0018F8  C0B7  FFDF         	movff	_efgtoa$1421,indf2
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  5175  0018FC  07CA               	decf	efgtoa@w& (0+255),f,b
  5176  0018FE  A0D8               	btfss	status,0,c
  5177  001900  07CB               	decf	(efgtoa@w+1)& (0+255),f,b
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  5181  001902  0E22               	movlw	low _dbuf
  5182  001904  25DD               	addwf	efgtoa@n& (0+255),w,b
  5183  001906  6F60               	movwf	strcpy@dest& (0+255),b
  5184  001908  0E01               	movlw	high _dbuf
  5185  00190A  21DE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5186  00190C  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  5187  00190E  0E22               	movlw	low _dbuf
  5188  001910  25D5               	addwf	efgtoa@i& (0+255),w,b
  5189  001912  6F62               	movwf	strcpy@src& (0+255),b
  5190  001914  0E01               	movlw	high _dbuf
  5191  001916  21D6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5192  001918  6F63               	movwf	(strcpy@src+1)& (0+255),b
  5193  00191A  EC8C  F020         	call	_strcpy	;wreg free
  5194  00191E  EF5D  F008         	goto	l6758
  5195  001922                     __end_of_efgtoa:
  5196                           	opt callstack 0
  5197                           
  5198 ;; *************** function _tolower *****************
  5199 ;; Defined at:
  5200 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  c               2    6[BANK0 ] int 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  2    6[BANK0 ] int 
  5207 ;; Registers used:
  5208 ;;		wreg, status,2, status,0
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5214 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5215 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5216 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5217 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5218 ;;Total ram usage:        8 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    3
  5221 ;; This function calls:
  5222 ;;		_isupper
  5223 ;; This function is called by:
  5224 ;;		_efgtoa
  5225 ;;		_vfpfcnvrt
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text10
  5230  004212                     __ptext10:
  5231                           	opt callstack 0
  5232  004212                     _tolower:
  5233                           	opt callstack 23
  5234                           
  5235                           ;incstack = 0
  5236  004212  0EBF               	movlw	191
  5237  004214  0100               	movlb	0	; () banked
  5238  004216  6F68               	movwf	??_tolower& (0+255),b
  5239  004218  0EFF               	movlw	255
  5240  00421A  6F69               	movwf	(??_tolower+1)& (0+255),b
  5241  00421C  C066  F06A         	movff	tolower@c,??_tolower+2
  5242  004220  C067  F06B         	movff	tolower@c+1,??_tolower+3
  5243  004224  5168               	movf	??_tolower& (0+255),w,b
  5244  004226  276A               	addwf	(??_tolower+2)& (0+255),f,b
  5245  004228  5169               	movf	(??_tolower+1)& (0+255),w,b
  5246  00422A  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  5247  00422C  516B               	movf	(??_tolower+3)& (0+255),w,b
  5248  00422E  E106               	bnz	u7470
  5249  004230  0E1A               	movlw	26
  5250  004232  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  5251  004234  B0D8               	btfsc	status,0,c
  5252  004236  D002               	goto	u7470
  5253  004238  0E01               	movlw	1
  5254  00423A  D001               	goto	u7480
  5255  00423C                     u7470:
  5256  00423C  0E00               	movlw	0
  5257  00423E                     u7480:
  5258  00423E  6F6C               	movwf	_tolower$2037& (0+255),b
  5259  004240  6B6D               	clrf	(_tolower$2037+1)& (0+255),b
  5260                           
  5261                           ; BSR set to: 0
  5262  004242  516C               	movf	_tolower$2037& (0+255),w,b
  5263  004244  116D               	iorwf	(_tolower$2037+1)& (0+255),w,b
  5264  004246  B4D8               	btfsc	status,2,c
  5265  004248  D006               	goto	l1322
  5266                           
  5267                           ; BSR set to: 0
  5268  00424A  0E20               	movlw	32
  5269  00424C  1166               	iorwf	tolower@c& (0+255),w,b
  5270  00424E  6F66               	movwf	?_tolower& (0+255),b
  5271  004250  5167               	movf	(tolower@c+1)& (0+255),w,b
  5272  004252  6F67               	movwf	(?_tolower+1)& (0+255),b
  5273  004254  0012               	return	
  5274  004256                     l1322:
  5275                           
  5276                           ; BSR set to: 0
  5277  004256  C066  F066         	movff	tolower@c,?_tolower
  5278  00425A  C067  F067         	movff	tolower@c+1,?_tolower+1
  5279                           
  5280                           ; BSR set to: 0
  5281  00425E  0012               	return		;funcret
  5282  004260                     __end_of_tolower:
  5283                           	opt callstack 0
  5284                           
  5285 ;; *************** function _isupper *****************
  5286 ;; Defined at:
  5287 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  c               2    0[BANK0 ] int 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;		None
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  2    0[BANK0 ] int 
  5294 ;; Registers used:
  5295 ;;		wreg, status,2, status,0
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5301 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5303 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5304 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5305 ;;Total ram usage:        6 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    2
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_efgtoa
  5312 ;;		_vfpfcnvrt
  5313 ;;		_tolower
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text11
  5318  00435E                     __ptext11:
  5319                           	opt callstack 0
  5320  00435E                     _isupper:
  5321                           	opt callstack 23
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;incstack = 0
  5325  00435E  0EBF               	movlw	191
  5326  004360  0100               	movlb	0	; () banked
  5327  004362  6F62               	movwf	??_isupper& (0+255),b
  5328  004364  0EFF               	movlw	255
  5329  004366  6F63               	movwf	(??_isupper+1)& (0+255),b
  5330  004368  C060  F064         	movff	isupper@c,??_isupper+2
  5331  00436C  C061  F065         	movff	isupper@c+1,??_isupper+3
  5332  004370  5162               	movf	??_isupper& (0+255),w,b
  5333  004372  2764               	addwf	(??_isupper+2)& (0+255),f,b
  5334  004374  5163               	movf	(??_isupper+1)& (0+255),w,b
  5335  004376  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  5336  004378  5165               	movf	(??_isupper+3)& (0+255),w,b
  5337  00437A  E106               	bnz	u6930
  5338  00437C  0E1A               	movlw	26
  5339  00437E  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  5340  004380  B0D8               	btfsc	status,0,c
  5341  004382  D002               	goto	u6930
  5342  004384  0E01               	movlw	1
  5343  004386  D001               	goto	u6940
  5344  004388                     u6930:
  5345  004388  0E00               	movlw	0
  5346  00438A                     u6940:
  5347  00438A  6F60               	movwf	?_isupper& (0+255),b
  5348  00438C  6B61               	clrf	(?_isupper+1)& (0+255),b
  5349                           
  5350                           ; BSR set to: 0
  5351  00438E  0012               	return		;funcret
  5352  004390                     __end_of_isupper:
  5353                           	opt callstack 0
  5354                           
  5355 ;; *************** function _strcpy *****************
  5356 ;; Defined at:
  5357 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  5360 ;;		 -> dbuf(80), 
  5361 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  5362 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  5363 ;;		 -> dbuf(80), 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  d               2    8[BANK0 ] PTR unsigned char 
  5366 ;;		 -> dbuf(80), 
  5367 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5368 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  5369 ;;		 -> dbuf(80), 
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  2    0[BANK0 ] PTR unsigned char 
  5372 ;; Registers used:
  5373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5379 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5380 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5381 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5382 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5383 ;;Total ram usage:       10 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:    2
  5386 ;; This function calls:
  5387 ;;		Nothing
  5388 ;; This function is called by:
  5389 ;;		_efgtoa
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text12
  5394  004118                     __ptext12:
  5395                           	opt callstack 0
  5396  004118                     _strcpy:
  5397                           	opt callstack 23
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;incstack = 0
  5401  004118  C062  F066         	movff	strcpy@src,strcpy@s
  5402  00411C  C063  F067         	movff	strcpy@src+1,strcpy@s+1
  5403  004120  C060  F068         	movff	strcpy@dest,strcpy@d
  5404  004124  C061  F069         	movff	strcpy@dest+1,strcpy@d+1
  5405  004128                     l6156:
  5406  004128  0100               	movlb	0	; () banked
  5407  00412A  5166               	movf	strcpy@s& (0+255),w,b
  5408  00412C  6F64               	movwf	??_strcpy& (0+255),b
  5409  00412E  5167               	movf	(strcpy@s+1)& (0+255),w,b
  5410  004130  6F65               	movwf	(??_strcpy+1)& (0+255),b
  5411  004132  4B66               	infsnz	strcpy@s& (0+255),f,b
  5412  004134  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  5413  004136  C064  FFF6         	movff	??_strcpy,tblptrl
  5414  00413A  C065  FFF7         	movff	??_strcpy+1,tblptrh
  5415  00413E  0E00               	movlw	low (__smallconst shr (0+16))
  5416  004140  6EF8               	movwf	tblptru,c
  5417  004142  C068  FFD9         	movff	strcpy@d,fsr2l
  5418  004146  C069  FFDA         	movff	strcpy@d+1,fsr2h
  5419  00414A  4B68               	infsnz	strcpy@d& (0+255),f,b
  5420  00414C  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  5421  00414E  0E0E               	movlw	(high __ramtop+-1)
  5422  004150  64F7               	cpfsgt	tblptrh,c
  5423  004152  D003               	bra	u7457
  5424  004154  0008               	tblrd		*
  5425  004156  50F5               	movf	tablat,w,c
  5426  004158  D005               	bra	u7450
  5427  00415A                     u7457:
  5428  00415A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5429  00415E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5430  004162  50E7               	movf	indf1,w,c
  5431  004164                     u7450:
  5432  004164  6EDF               	movwf	indf2,c
  5433  004166  50DF               	movf	indf2,w,c
  5434  004168  B4D8               	btfsc	status,2,c
  5435  00416A  0012               	return	
  5436  00416C  D7DD               	goto	l6156
  5437  00416E                     __end_of_strcpy:
  5438                           	opt callstack 0
  5439                           
  5440 ;; *************** function _floorf *****************
  5441 ;; Defined at:
  5442 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  x               4   25[BANK0 ] float 
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;  u               4   41[BANK0 ] struct .
  5447 ;;  m               4   35[BANK0 ] unsigned long 
  5448 ;;  e               2   39[BANK0 ] int 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  4   25[BANK0 ] float 
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5458 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5461 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5462 ;;Total ram usage:       20 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    2
  5465 ;; This function calls:
  5466 ;;		Nothing
  5467 ;; This function is called by:
  5468 ;;		_efgtoa
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           	psect	text13
  5473  002B82                     __ptext13:
  5474                           	opt callstack 0
  5475  002B82                     _floorf:
  5476                           	opt callstack 23
  5477                           
  5478                           ;incstack = 0
  5479  002B82  C02A  F089         	movff	floorf@F524,floorf@u
  5480  002B86  C02B  F08A         	movff	floorf@F524+1,floorf@u+1
  5481  002B8A  C02C  F08B         	movff	floorf@F524+2,floorf@u+2
  5482  002B8E  C02D  F08C         	movff	floorf@F524+3,floorf@u+3
  5483  002B92  C079  F089         	movff	floorf@x,floorf@u
  5484  002B96  C07A  F08A         	movff	floorf@x+1,floorf@u+1
  5485  002B9A  C07B  F08B         	movff	floorf@x+2,floorf@u+2
  5486  002B9E  C07C  F08C         	movff	floorf@x+3,floorf@u+3
  5487  002BA2  0E81               	movlw	129
  5488  002BA4  0100               	movlb	0	; () banked
  5489  002BA6  6F7D               	movwf	??_floorf& (0+255),b
  5490  002BA8  0EFF               	movlw	255
  5491  002BAA  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5492  002BAC  C089  F07F         	movff	floorf@u,??_floorf+2
  5493  002BB0  C08A  F080         	movff	floorf@u+1,??_floorf+3
  5494  002BB4  C08B  F081         	movff	floorf@u+2,??_floorf+4
  5495  002BB8  C08C  F082         	movff	floorf@u+3,??_floorf+5
  5496  002BBC  0E18               	movlw	24
  5497  002BBE  D005               	goto	u7500
  5498  002BC0                     u7505:
  5499  002BC0  90D8               	bcf	status,0,c
  5500  002BC2  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  5501  002BC4  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  5502  002BC6  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5503  002BC8  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5504  002BCA                     u7500:
  5505  002BCA  2EE8               	decfsz	wreg,f,c
  5506  002BCC  D7F9               	goto	u7505
  5507  002BCE  517F               	movf	(??_floorf+2)& (0+255),w,b
  5508  002BD0  257D               	addwf	??_floorf& (0+255),w,b
  5509  002BD2  6F87               	movwf	floorf@e& (0+255),b
  5510  002BD4  0E00               	movlw	0
  5511  002BD6  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  5512  002BD8  6F88               	movwf	(floorf@e+1)& (0+255),b
  5513  002BDA  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  5514  002BDC  D00F               	goto	l6174
  5515  002BDE  5188               	movf	(floorf@e+1)& (0+255),w,b
  5516  002BE0  E104               	bnz	u7510
  5517  002BE2  0E17               	movlw	23
  5518  002BE4  5D87               	subwf	floorf@e& (0+255),w,b
  5519  002BE6  A0D8               	btfss	status,0,c
  5520  002BE8  D009               	goto	l6174
  5521  002BEA                     u7510:
  5522                           
  5523                           ; BSR set to: 0
  5524  002BEA  C079  F079         	movff	floorf@x,?_floorf
  5525  002BEE  C07A  F07A         	movff	floorf@x+1,?_floorf+1
  5526  002BF2  C07B  F07B         	movff	floorf@x+2,?_floorf+2
  5527  002BF6  C07C  F07C         	movff	floorf@x+3,?_floorf+3
  5528  002BFA  0012               	return	
  5529  002BFC                     l6174:
  5530                           
  5531                           ; BSR set to: 0
  5532  002BFC  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  5533  002BFE  D05F               	goto	l6184
  5534                           
  5535                           ; BSR set to: 0
  5536  002C00  C087  F07D         	movff	floorf@e,??_floorf
  5537  002C04  0EFF               	movlw	255
  5538  002C06  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5539  002C08  0EFF               	movlw	255
  5540  002C0A  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5541  002C0C  0E7F               	movlw	127
  5542  002C0E  6F80               	movwf	(??_floorf+3)& (0+255),b
  5543  002C10  0E00               	movlw	0
  5544  002C12  6F81               	movwf	(??_floorf+4)& (0+255),b
  5545  002C14                     u7535:
  5546  002C14  677D               	tstfsz	??_floorf& (0+255),b
  5547  002C16  D001               	goto	u7536
  5548  002C18  D007               	goto	u7537
  5549  002C1A                     u7536:
  5550  002C1A  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  5551  002C1C  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  5552  002C1E  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5553  002C20  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5554  002C22  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5555  002C24  2F7D               	decfsz	??_floorf& (0+255),f,b
  5556  002C26  D7F6               	goto	u7535
  5557  002C28                     u7537:
  5558  002C28  C07E  F083         	movff	??_floorf+1,floorf@m
  5559  002C2C  C07F  F084         	movff	??_floorf+2,floorf@m+1
  5560  002C30  C080  F085         	movff	??_floorf+3,floorf@m+2
  5561  002C34  C081  F086         	movff	??_floorf+4,floorf@m+3
  5562  002C38  0100               	movlb	0	; () banked
  5563  002C3A  5183               	movf	floorf@m& (0+255),w,b
  5564  002C3C  1589               	andwf	floorf@u& (0+255),w,b
  5565  002C3E  6F7D               	movwf	??_floorf& (0+255),b
  5566  002C40  5184               	movf	(floorf@m+1)& (0+255),w,b
  5567  002C42  158A               	andwf	(floorf@u+1)& (0+255),w,b
  5568  002C44  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5569  002C46  5185               	movf	(floorf@m+2)& (0+255),w,b
  5570  002C48  158B               	andwf	(floorf@u+2)& (0+255),w,b
  5571  002C4A  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5572  002C4C  5186               	movf	(floorf@m+3)& (0+255),w,b
  5573  002C4E  158C               	andwf	(floorf@u+3)& (0+255),w,b
  5574  002C50  6F80               	movwf	(??_floorf+3)& (0+255),b
  5575  002C52  517D               	movf	??_floorf& (0+255),w,b
  5576  002C54  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5577  002C56  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5578  002C58  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5579  002C5A  B4D8               	btfsc	status,2,c
  5580  002C5C  D7C6               	goto	u7510
  5581                           
  5582                           ; BSR set to: 0
  5583  002C5E  C089  F07D         	movff	floorf@u,??_floorf
  5584  002C62  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  5585  002C66  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  5586  002C6A  C08C  F080         	movff	floorf@u+3,??_floorf+3
  5587  002C6E  0E20               	movlw	32
  5588  002C70  D005               	goto	u7550
  5589  002C72                     u7555:
  5590  002C72  90D8               	bcf	status,0,c
  5591  002C74  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5592  002C76  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5593  002C78  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5594  002C7A  337D               	rrcf	??_floorf& (0+255),f,b
  5595  002C7C                     u7550:
  5596  002C7C  2EE8               	decfsz	wreg,f,c
  5597  002C7E  D7F9               	goto	u7555
  5598  002C80  517D               	movf	??_floorf& (0+255),w,b
  5599  002C82  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5600  002C84  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5601  002C86  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5602  002C88  B4D8               	btfsc	status,2,c
  5603  002C8A  D008               	goto	l1242
  5604                           
  5605                           ; BSR set to: 0
  5606  002C8C  5183               	movf	floorf@m& (0+255),w,b
  5607  002C8E  2789               	addwf	floorf@u& (0+255),f,b
  5608  002C90  5184               	movf	(floorf@m+1)& (0+255),w,b
  5609  002C92  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  5610  002C94  5185               	movf	(floorf@m+2)& (0+255),w,b
  5611  002C96  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  5612  002C98  5186               	movf	(floorf@m+3)& (0+255),w,b
  5613  002C9A  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  5614  002C9C                     l1242:
  5615                           
  5616                           ; BSR set to: 0
  5617  002C9C  1D83               	comf	floorf@m& (0+255),w,b
  5618  002C9E  6F7D               	movwf	??_floorf& (0+255),b
  5619  002CA0  1D84               	comf	(floorf@m+1)& (0+255),w,b
  5620  002CA2  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5621  002CA4  1D85               	comf	(floorf@m+2)& (0+255),w,b
  5622  002CA6  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5623  002CA8  1D86               	comf	(floorf@m+3)& (0+255),w,b
  5624  002CAA  6F80               	movwf	(??_floorf+3)& (0+255),b
  5625  002CAC  517D               	movf	??_floorf& (0+255),w,b
  5626  002CAE  1789               	andwf	floorf@u& (0+255),f,b
  5627  002CB0  517E               	movf	(??_floorf+1)& (0+255),w,b
  5628  002CB2  178A               	andwf	(floorf@u+1)& (0+255),f,b
  5629  002CB4  517F               	movf	(??_floorf+2)& (0+255),w,b
  5630  002CB6  178B               	andwf	(floorf@u+2)& (0+255),f,b
  5631  002CB8  5180               	movf	(??_floorf+3)& (0+255),w,b
  5632  002CBA  178C               	andwf	(floorf@u+3)& (0+255),f,b
  5633  002CBC  D036               	goto	l6192
  5634  002CBE                     l6184:
  5635                           
  5636                           ; BSR set to: 0
  5637  002CBE  C089  F07D         	movff	floorf@u,??_floorf
  5638  002CC2  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  5639  002CC6  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  5640  002CCA  C08C  F080         	movff	floorf@u+3,??_floorf+3
  5641  002CCE  0E20               	movlw	32
  5642  002CD0  D005               	goto	u7570
  5643  002CD2                     u7575:
  5644  002CD2  90D8               	bcf	status,0,c
  5645  002CD4  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5646  002CD6  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5647  002CD8  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5648  002CDA  337D               	rrcf	??_floorf& (0+255),f,b
  5649  002CDC                     u7570:
  5650  002CDC  2EE8               	decfsz	wreg,f,c
  5651  002CDE  D7F9               	goto	u7575
  5652  002CE0  517D               	movf	??_floorf& (0+255),w,b
  5653  002CE2  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5654  002CE4  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5655  002CE6  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5656  002CE8  A4D8               	btfss	status,2,c
  5657  002CEA  D008               	goto	l6188
  5658                           
  5659                           ; BSR set to: 0
  5660  002CEC  0E00               	movlw	0
  5661  002CEE  6F89               	movwf	floorf@u& (0+255),b
  5662  002CF0  0E00               	movlw	0
  5663  002CF2  6F8A               	movwf	(floorf@u+1)& (0+255),b
  5664  002CF4  0E00               	movlw	0
  5665  002CF6  6F8B               	movwf	(floorf@u+2)& (0+255),b
  5666  002CF8  0E00               	movlw	0
  5667  002CFA  D016               	goto	L6
  5668  002CFC                     l6188:
  5669                           
  5670                           ; BSR set to: 0
  5671  002CFC  90D8               	bcf	status,0,c
  5672  002CFE  3589               	rlcf	floorf@u& (0+255),w,b
  5673  002D00  6F7D               	movwf	??_floorf& (0+255),b
  5674  002D02  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  5675  002D04  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5676  002D06  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  5677  002D08  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5678  002D0A  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  5679  002D0C  6F80               	movwf	(??_floorf+3)& (0+255),b
  5680  002D0E  517D               	movf	??_floorf& (0+255),w,b
  5681  002D10  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5682  002D12  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5683  002D14  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5684  002D16  B4D8               	btfsc	status,2,c
  5685  002D18  D008               	goto	l6192
  5686                           
  5687                           ; BSR set to: 0
  5688  002D1A  0E00               	movlw	0
  5689  002D1C  6F89               	movwf	floorf@u& (0+255),b
  5690  002D1E  0E00               	movlw	0
  5691  002D20  6F8A               	movwf	(floorf@u+1)& (0+255),b
  5692  002D22  0E80               	movlw	128
  5693  002D24  6F8B               	movwf	(floorf@u+2)& (0+255),b
  5694  002D26  0EBF               	movlw	191
  5695  002D28                     L6:
  5696  002D28  6F8C               	movwf	(floorf@u+3)& (0+255),b
  5697  002D2A                     l6192:
  5698                           
  5699                           ; BSR set to: 0
  5700  002D2A  C089  F079         	movff	floorf@u,?_floorf
  5701  002D2E  C08A  F07A         	movff	floorf@u+1,?_floorf+1
  5702  002D32  C08B  F07B         	movff	floorf@u+2,?_floorf+2
  5703  002D36  C08C  F07C         	movff	floorf@u+3,?_floorf+3
  5704                           
  5705                           ; BSR set to: 0
  5706  002D3A  0012               	return		;funcret
  5707  002D3C                     __end_of_floorf:
  5708                           	opt callstack 0
  5709                           
  5710 ;; *************** function ___fpclassifyf *****************
  5711 ;; Defined at:
  5712 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;  x               4    0[BANK0 ] float 
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;  u               4   10[BANK0 ] struct .
  5717 ;;  e               2    8[BANK0 ] int 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  2    0[BANK0 ] int 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5727 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5728 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5729 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5730 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5731 ;;Total ram usage:       14 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    2
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_efgtoa
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text14
  5742  0036B6                     __ptext14:
  5743                           	opt callstack 0
  5744  0036B6                     ___fpclassifyf:
  5745                           	opt callstack 23
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;incstack = 0
  5749  0036B6  C02E  F06A         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5750  0036BA  C02F  F06B         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5751  0036BE  C030  F06C         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5752  0036C2  C031  F06D         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5753  0036C6  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  5754  0036CA  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5755  0036CE  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5756  0036D2  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5757  0036D6  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5758  0036DA  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5759  0036DE  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5760  0036E2  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5761  0036E6  0E18               	movlw	24
  5762  0036E8  D006               	goto	u7380
  5763  0036EA                     u7385:
  5764  0036EA  0100               	movlb	0	; () banked
  5765  0036EC  90D8               	bcf	status,0,c
  5766  0036EE  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5767  0036F0  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5768  0036F2  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5769  0036F4  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5770  0036F6                     u7380:
  5771  0036F6  2EE8               	decfsz	wreg,f,c
  5772  0036F8  D7F8               	goto	u7385
  5773  0036FA  5164               	movf	??___fpclassifyf& (0+255),w,b
  5774  0036FC  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5775  0036FE  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5776  003700  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5777  003702  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5778  003704  A4D8               	btfss	status,2,c
  5779  003706  D019               	goto	l6144
  5780                           
  5781                           ; BSR set to: 0
  5782  003708  90D8               	bcf	status,0,c
  5783  00370A  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5784  00370C  6F64               	movwf	??___fpclassifyf& (0+255),b
  5785  00370E  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5786  003710  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5787  003712  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5788  003714  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5789  003716  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5790  003718  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5791  00371A  5164               	movf	??___fpclassifyf& (0+255),w,b
  5792  00371C  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5793  00371E  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5794  003720  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5795  003722  A4D8               	btfss	status,2,c
  5796  003724  D005               	goto	l6140
  5797                           
  5798                           ; BSR set to: 0
  5799  003726  0E00               	movlw	0
  5800  003728  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5801  00372A  0E02               	movlw	2
  5802  00372C  6F60               	movwf	?___fpclassifyf& (0+255),b
  5803  00372E  0012               	return	
  5804  003730                     l6140:
  5805                           
  5806                           ; BSR set to: 0
  5807  003730  0E00               	movlw	0
  5808  003732  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5809  003734  0E03               	movlw	3
  5810  003736  6F60               	movwf	?___fpclassifyf& (0+255),b
  5811  003738  0012               	return	
  5812  00373A                     l6144:
  5813                           
  5814                           ; BSR set to: 0
  5815  00373A  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5816  00373C  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5817  00373E  A4D8               	btfss	status,2,c
  5818  003740  D01C               	goto	l6150
  5819                           
  5820                           ; BSR set to: 0
  5821  003742  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5822  003746  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5823  00374A  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5824  00374E  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5825  003752  0E09               	movlw	9
  5826  003754                     u7425:
  5827  003754  90D8               	bcf	status,0,c
  5828  003756  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5829  003758  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5830  00375A  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5831  00375C  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5832  00375E  2EE8               	decfsz	wreg,f,c
  5833  003760  D7F9               	goto	u7425
  5834  003762  5164               	movf	??___fpclassifyf& (0+255),w,b
  5835  003764  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5836  003766  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5837  003768  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5838  00376A  A4D8               	btfss	status,2,c
  5839  00376C  D002               	goto	u7430
  5840  00376E  0E01               	movlw	1
  5841  003770  D001               	goto	u7440
  5842  003772                     u7430:
  5843  003772  0E00               	movlw	0
  5844  003774                     u7440:
  5845  003774  6F60               	movwf	?___fpclassifyf& (0+255),b
  5846  003776  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5847  003778  0012               	return	
  5848  00377A                     l6150:
  5849                           
  5850                           ; BSR set to: 0
  5851  00377A  0E00               	movlw	0
  5852  00377C  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5853  00377E  0E04               	movlw	4
  5854  003780  6F60               	movwf	?___fpclassifyf& (0+255),b
  5855                           
  5856                           ; BSR set to: 0
  5857  003782  0012               	return		;funcret
  5858  003784                     __end_of___fpclassifyf:
  5859                           	opt callstack 0
  5860                           
  5861 ;; *************** function ___flsub *****************
  5862 ;; Defined at:
  5863 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  b               4   55[BANK0 ] int 
  5866 ;;  a               4   59[BANK0 ] int 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  4   55[BANK0 ] int 
  5871 ;; Registers used:
  5872 ;;		wreg, status,2, status,0, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5878 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5881 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5882 ;;Total ram usage:        8 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:    3
  5885 ;; This function calls:
  5886 ;;		___fladd
  5887 ;; This function is called by:
  5888 ;;		_efgtoa
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text15
  5893  004260                     __ptext15:
  5894                           	opt callstack 0
  5895  004260                     ___flsub:
  5896                           	opt callstack 22
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;incstack = 0
  5900  004260  0E00               	movlw	0
  5901  004262  0100               	movlb	0	; () banked
  5902  004264  1B9B               	xorwf	___flsub@a& (0+255),f,b
  5903  004266  0E00               	movlw	0
  5904  004268  1B9C               	xorwf	(___flsub@a+1)& (0+255),f,b
  5905  00426A  0E00               	movlw	0
  5906  00426C  1B9D               	xorwf	(___flsub@a+2)& (0+255),f,b
  5907  00426E  0E80               	movlw	128
  5908  004270  1B9E               	xorwf	(___flsub@a+3)& (0+255),f,b
  5909                           
  5910                           ; BSR set to: 0
  5911  004272  C097  F087         	movff	___flsub@b,___fladd@b
  5912  004276  C098  F088         	movff	___flsub@b+1,___fladd@b+1
  5913  00427A  C099  F089         	movff	___flsub@b+2,___fladd@b+2
  5914  00427E  C09A  F08A         	movff	___flsub@b+3,___fladd@b+3
  5915  004282  C09B  F08B         	movff	___flsub@a,___fladd@a
  5916  004286  C09C  F08C         	movff	___flsub@a+1,___fladd@a+1
  5917  00428A  C09D  F08D         	movff	___flsub@a+2,___fladd@a+2
  5918  00428E  C09E  F08E         	movff	___flsub@a+3,___fladd@a+3
  5919  004292  EC6F  F011         	call	___fladd	;wreg free
  5920  004296  C087  F097         	movff	?___fladd,?___flsub
  5921  00429A  C088  F098         	movff	?___fladd+1,?___flsub+1
  5922  00429E  C089  F099         	movff	?___fladd+2,?___flsub+2
  5923  0042A2  C08A  F09A         	movff	?___fladd+3,?___flsub+3
  5924  0042A6  0012               	return		;funcret
  5925  0042A8                     __end_of___flsub:
  5926                           	opt callstack 0
  5927                           
  5928 ;; *************** function ___flneg *****************
  5929 ;; Defined at:
  5930 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  f1              4    0[BANK0 ] int 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;		None
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  4    0[BANK0 ] int 
  5937 ;; Registers used:
  5938 ;;		wreg, status,2, status,0
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5944 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5947 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5948 ;;Total ram usage:        4 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    2
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_efgtoa
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text16
  5959  0043C2                     __ptext16:
  5960                           	opt callstack 0
  5961  0043C2                     ___flneg:
  5962                           	opt callstack 23
  5963                           
  5964                           ;incstack = 0
  5965  0043C2  0100               	movlb	0	; () banked
  5966  0043C4  5160               	movf	___flneg@f1& (0+255),w,b
  5967  0043C6  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5968  0043C8  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5969  0043CA  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5970  0043CC  B4D8               	btfsc	status,2,c
  5971  0043CE  D008               	goto	l6602
  5972                           
  5973                           ; BSR set to: 0
  5974  0043D0  0E00               	movlw	0
  5975  0043D2  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5976  0043D4  0E00               	movlw	0
  5977  0043D6  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5978  0043D8  0E00               	movlw	0
  5979  0043DA  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5980  0043DC  0E80               	movlw	128
  5981  0043DE  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5982  0043E0                     l6602:
  5983                           
  5984                           ; BSR set to: 0
  5985  0043E0  C060  F060         	movff	___flneg@f1,?___flneg
  5986  0043E4  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  5987  0043E8  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  5988  0043EC  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  5989                           
  5990                           ; BSR set to: 0
  5991  0043F0  0012               	return		;funcret
  5992  0043F2                     __end_of___flneg:
  5993                           	opt callstack 0
  5994                           
  5995 ;; *************** function ___flge *****************
  5996 ;; Defined at:
  5997 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  ff1             4   39[BANK0 ] int 
  6000 ;;  ff2             4   43[BANK0 ] int 
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;		None
  6003 ;; Return value:  Size  Location     Type
  6004 ;;		None               void
  6005 ;; Registers used:
  6006 ;;		wreg, status,2, status,0
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6012 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6014 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6015 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6016 ;;Total ram usage:       12 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; Hardware stack levels required when called:    2
  6019 ;; This function calls:
  6020 ;;		Nothing
  6021 ;; This function is called by:
  6022 ;;		_efgtoa
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           	psect	text17
  6027  003514                     __ptext17:
  6028                           	opt callstack 0
  6029  003514                     ___flge:
  6030                           	opt callstack 23
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;incstack = 0
  6034  003514  0E00               	movlw	0
  6035  003516  0100               	movlb	0	; () banked
  6036  003518  1587               	andwf	___flge@ff1& (0+255),w,b
  6037  00351A  6F8F               	movwf	??___flge& (0+255),b
  6038  00351C  0E00               	movlw	0
  6039  00351E  1588               	andwf	(___flge@ff1+1)& (0+255),w,b
  6040  003520  6F90               	movwf	(??___flge+1)& (0+255),b
  6041  003522  0E80               	movlw	128
  6042  003524  1589               	andwf	(___flge@ff1+2)& (0+255),w,b
  6043  003526  6F91               	movwf	(??___flge+2)& (0+255),b
  6044  003528  0E7F               	movlw	127
  6045  00352A  158A               	andwf	(___flge@ff1+3)& (0+255),w,b
  6046  00352C  6F92               	movwf	(??___flge+3)& (0+255),b
  6047  00352E  518F               	movf	??___flge& (0+255),w,b
  6048  003530  1190               	iorwf	(??___flge+1)& (0+255),w,b
  6049  003532  1191               	iorwf	(??___flge+2)& (0+255),w,b
  6050  003534  1192               	iorwf	(??___flge+3)& (0+255),w,b
  6051  003536  A4D8               	btfss	status,2,c
  6052  003538  D008               	goto	l6580
  6053                           
  6054                           ; BSR set to: 0
  6055  00353A  0E00               	movlw	0
  6056  00353C  6F87               	movwf	___flge@ff1& (0+255),b
  6057  00353E  0E00               	movlw	0
  6058  003540  6F88               	movwf	(___flge@ff1+1)& (0+255),b
  6059  003542  0E00               	movlw	0
  6060  003544  6F89               	movwf	(___flge@ff1+2)& (0+255),b
  6061  003546  0E00               	movlw	0
  6062  003548  6F8A               	movwf	(___flge@ff1+3)& (0+255),b
  6063  00354A                     l6580:
  6064                           
  6065                           ; BSR set to: 0
  6066  00354A  0E00               	movlw	0
  6067  00354C  158B               	andwf	___flge@ff2& (0+255),w,b
  6068  00354E  6F8F               	movwf	??___flge& (0+255),b
  6069  003550  0E00               	movlw	0
  6070  003552  158C               	andwf	(___flge@ff2+1)& (0+255),w,b
  6071  003554  6F90               	movwf	(??___flge+1)& (0+255),b
  6072  003556  0E80               	movlw	128
  6073  003558  158D               	andwf	(___flge@ff2+2)& (0+255),w,b
  6074  00355A  6F91               	movwf	(??___flge+2)& (0+255),b
  6075  00355C  0E7F               	movlw	127
  6076  00355E  158E               	andwf	(___flge@ff2+3)& (0+255),w,b
  6077  003560  6F92               	movwf	(??___flge+3)& (0+255),b
  6078  003562  518F               	movf	??___flge& (0+255),w,b
  6079  003564  1190               	iorwf	(??___flge+1)& (0+255),w,b
  6080  003566  1191               	iorwf	(??___flge+2)& (0+255),w,b
  6081  003568  1192               	iorwf	(??___flge+3)& (0+255),w,b
  6082  00356A  A4D8               	btfss	status,2,c
  6083  00356C  D008               	goto	l6584
  6084                           
  6085                           ; BSR set to: 0
  6086  00356E  0E00               	movlw	0
  6087  003570  6F8B               	movwf	___flge@ff2& (0+255),b
  6088  003572  0E00               	movlw	0
  6089  003574  6F8C               	movwf	(___flge@ff2+1)& (0+255),b
  6090  003576  0E00               	movlw	0
  6091  003578  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
  6092  00357A  0E00               	movlw	0
  6093  00357C  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
  6094  00357E                     l6584:
  6095                           
  6096                           ; BSR set to: 0
  6097  00357E  AF8A               	btfss	(___flge@ff1+3)& (0+255),7,b
  6098  003580  D009               	goto	l6588
  6099                           
  6100                           ; BSR set to: 0
  6101  003582  6D87               	negf	___flge@ff1& (0+255),b
  6102  003584  1F88               	comf	(___flge@ff1+1)& (0+255),f,b
  6103  003586  B0D8               	btfsc	status,0,c
  6104  003588  2B88               	incf	(___flge@ff1+1)& (0+255),f,b
  6105  00358A  1F89               	comf	(___flge@ff1+2)& (0+255),f,b
  6106  00358C  B0D8               	btfsc	status,0,c
  6107  00358E  2B89               	incf	(___flge@ff1+2)& (0+255),f,b
  6108  003590  0E80               	movlw	128
  6109  003592  578A               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6110  003594                     l6588:
  6111                           
  6112                           ; BSR set to: 0
  6113  003594  AF8E               	btfss	(___flge@ff2+3)& (0+255),7,b
  6114  003596  D009               	goto	l785
  6115                           
  6116                           ; BSR set to: 0
  6117  003598  6D8B               	negf	___flge@ff2& (0+255),b
  6118  00359A  1F8C               	comf	(___flge@ff2+1)& (0+255),f,b
  6119  00359C  B0D8               	btfsc	status,0,c
  6120  00359E  2B8C               	incf	(___flge@ff2+1)& (0+255),f,b
  6121  0035A0  1F8D               	comf	(___flge@ff2+2)& (0+255),f,b
  6122  0035A2  B0D8               	btfsc	status,0,c
  6123  0035A4  2B8D               	incf	(___flge@ff2+2)& (0+255),f,b
  6124  0035A6  0E80               	movlw	128
  6125  0035A8  578E               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6126  0035AA                     l785:
  6127                           
  6128                           ; BSR set to: 0
  6129  0035AA  0E00               	movlw	0
  6130  0035AC  1B87               	xorwf	___flge@ff1& (0+255),f,b
  6131  0035AE  0E00               	movlw	0
  6132  0035B0  1B88               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6133  0035B2  0E00               	movlw	0
  6134  0035B4  1B89               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6135  0035B6  0E80               	movlw	128
  6136  0035B8  1B8A               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6137  0035BA  0E00               	movlw	0
  6138  0035BC  1B8B               	xorwf	___flge@ff2& (0+255),f,b
  6139  0035BE  0E00               	movlw	0
  6140  0035C0  1B8C               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6141  0035C2  0E00               	movlw	0
  6142  0035C4  1B8D               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6143  0035C6  0E80               	movlw	128
  6144  0035C8  1B8E               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6145  0035CA  518B               	movf	___flge@ff2& (0+255),w,b
  6146  0035CC  5D87               	subwf	___flge@ff1& (0+255),w,b
  6147  0035CE  518C               	movf	(___flge@ff2+1)& (0+255),w,b
  6148  0035D0  5988               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6149  0035D2  518D               	movf	(___flge@ff2+2)& (0+255),w,b
  6150  0035D4  5989               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6151  0035D6  518E               	movf	(___flge@ff2+3)& (0+255),w,b
  6152  0035D8  598A               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6153  0035DA  B0D8               	btfsc	status,0,c
  6154  0035DC  D002               	goto	l6594
  6155                           
  6156                           ; BSR set to: 0
  6157  0035DE  90D8               	bcf	status,0,c
  6158  0035E0  0012               	return	
  6159  0035E2                     l6594:
  6160                           
  6161                           ; BSR set to: 0
  6162  0035E2  80D8               	bsf	status,0,c
  6163                           
  6164                           ; BSR set to: 0
  6165  0035E4  0012               	return		;funcret
  6166  0035E6                     __end_of___flge:
  6167                           	opt callstack 0
  6168                           
  6169 ;; *************** function ___fleq *****************
  6170 ;; Defined at:
  6171 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  ff1             4    0[BANK0 ] int 
  6174 ;;  ff2             4    4[BANK0 ] int 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;		None               void
  6179 ;; Registers used:
  6180 ;;		wreg, status,2, status,0
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6186 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6188 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6189 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6190 ;;Total ram usage:       12 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:    2
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_efgtoa
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text18
  6201  003B88                     __ptext18:
  6202                           	opt callstack 0
  6203  003B88                     ___fleq:
  6204                           	opt callstack 23
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;incstack = 0
  6208  003B88  0E00               	movlw	0
  6209  003B8A  0100               	movlb	0	; () banked
  6210  003B8C  1560               	andwf	___fleq@ff1& (0+255),w,b
  6211  003B8E  6F68               	movwf	??___fleq& (0+255),b
  6212  003B90  0E00               	movlw	0
  6213  003B92  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6214  003B94  6F69               	movwf	(??___fleq+1)& (0+255),b
  6215  003B96  0E80               	movlw	128
  6216  003B98  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6217  003B9A  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6218  003B9C  0E7F               	movlw	127
  6219  003B9E  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6220  003BA0  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6221  003BA2  5168               	movf	??___fleq& (0+255),w,b
  6222  003BA4  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6223  003BA6  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6224  003BA8  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6225  003BAA  A4D8               	btfss	status,2,c
  6226  003BAC  D008               	goto	l6564
  6227                           
  6228                           ; BSR set to: 0
  6229  003BAE  0E00               	movlw	0
  6230  003BB0  6F60               	movwf	___fleq@ff1& (0+255),b
  6231  003BB2  0E00               	movlw	0
  6232  003BB4  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6233  003BB6  0E00               	movlw	0
  6234  003BB8  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6235  003BBA  0E00               	movlw	0
  6236  003BBC  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6237  003BBE                     l6564:
  6238                           
  6239                           ; BSR set to: 0
  6240  003BBE  0E00               	movlw	0
  6241  003BC0  1564               	andwf	___fleq@ff2& (0+255),w,b
  6242  003BC2  6F68               	movwf	??___fleq& (0+255),b
  6243  003BC4  0E00               	movlw	0
  6244  003BC6  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6245  003BC8  6F69               	movwf	(??___fleq+1)& (0+255),b
  6246  003BCA  0E80               	movlw	128
  6247  003BCC  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6248  003BCE  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6249  003BD0  0E7F               	movlw	127
  6250  003BD2  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6251  003BD4  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6252  003BD6  5168               	movf	??___fleq& (0+255),w,b
  6253  003BD8  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6254  003BDA  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6255  003BDC  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6256  003BDE  A4D8               	btfss	status,2,c
  6257  003BE0  D008               	goto	l6568
  6258                           
  6259                           ; BSR set to: 0
  6260  003BE2  0E00               	movlw	0
  6261  003BE4  6F64               	movwf	___fleq@ff2& (0+255),b
  6262  003BE6  0E00               	movlw	0
  6263  003BE8  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6264  003BEA  0E00               	movlw	0
  6265  003BEC  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6266  003BEE  0E00               	movlw	0
  6267  003BF0  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6268  003BF2                     l6568:
  6269                           
  6270                           ; BSR set to: 0
  6271  003BF2  5164               	movf	___fleq@ff2& (0+255),w,b
  6272  003BF4  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6273  003BF6  E10A               	bnz	u8180
  6274  003BF8  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6275  003BFA  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6276  003BFC  E107               	bnz	u8180
  6277  003BFE  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6278  003C00  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6279  003C02  E104               	bnz	u8180
  6280  003C04  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6281  003C06  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6282  003C08  B4D8               	btfsc	status,2,c
  6283  003C0A  D002               	goto	l6572
  6284  003C0C                     u8180:
  6285                           
  6286                           ; BSR set to: 0
  6287  003C0C  90D8               	bcf	status,0,c
  6288  003C0E  0012               	return	
  6289  003C10                     l6572:
  6290                           
  6291                           ; BSR set to: 0
  6292  003C10  80D8               	bsf	status,0,c
  6293                           
  6294                           ; BSR set to: 0
  6295  003C12  0012               	return		;funcret
  6296  003C14                     __end_of___fleq:
  6297                           	opt callstack 0
  6298                           
  6299 ;; *************** function ___fldiv *****************
  6300 ;; Defined at:
  6301 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  b               4    0[BANK0 ] int 
  6304 ;;  a               4    4[BANK0 ] int 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  grs             4   19[BANK0 ] unsigned long 
  6307 ;;  rem             4   12[BANK0 ] unsigned long 
  6308 ;;  new_exp         2   17[BANK0 ] short 
  6309 ;;  aexp            1   24[BANK0 ] unsigned char 
  6310 ;;  bexp            1   23[BANK0 ] unsigned char 
  6311 ;;  sign            1   16[BANK0 ] unsigned char 
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  4    0[BANK0 ] unsigned char 
  6314 ;; Registers used:
  6315 ;;		wreg, status,2, status,0
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6321 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6324 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6325 ;;Total ram usage:       25 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; Hardware stack levels required when called:    2
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_efgtoa
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text19
  6336  0028F8                     __ptext19:
  6337                           	opt callstack 0
  6338  0028F8                     ___fldiv:
  6339                           	opt callstack 23
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;incstack = 0
  6343  0028F8  0100               	movlb	0	; () banked
  6344  0028FA  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6345  0028FC  0B80               	andlw	128
  6346  0028FE  6F70               	movwf	___fldiv@sign& (0+255),b
  6347  002900  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6348  002902  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  6349  002904  6F77               	movwf	___fldiv@bexp& (0+255),b
  6350                           
  6351                           ; BSR set to: 0
  6352  002906  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
  6353                           
  6354                           ; BSR set to: 0
  6355  002908  8177               	bsf	___fldiv@bexp& (0+255),0,b
  6356                           
  6357                           ; BSR set to: 0
  6358  00290A  5177               	movf	___fldiv@bexp& (0+255),w,b
  6359  00290C  B4D8               	btfsc	status,2,c
  6360  00290E  D00D               	goto	l6222
  6361                           
  6362                           ; BSR set to: 0
  6363  002910  2977               	incf	___fldiv@bexp& (0+255),w,b
  6364  002912  A4D8               	btfss	status,2,c
  6365  002914  D008               	goto	l6218
  6366                           
  6367                           ; BSR set to: 0
  6368  002916  0E00               	movlw	0
  6369  002918  6F60               	movwf	___fldiv@b& (0+255),b
  6370  00291A  0E00               	movlw	0
  6371  00291C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6372  00291E  0E00               	movlw	0
  6373  002920  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6374  002922  0E00               	movlw	0
  6375  002924  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6376  002926                     l6218:
  6377                           
  6378                           ; BSR set to: 0
  6379  002926  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6380  002928  D006               	goto	L7
  6381  00292A                     l6222:
  6382                           
  6383                           ; BSR set to: 0
  6384  00292A  0E00               	movlw	0
  6385  00292C  6F60               	movwf	___fldiv@b& (0+255),b
  6386  00292E  0E00               	movlw	0
  6387  002930  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6388  002932  0E00               	movlw	0
  6389  002934  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6390  002936                     L7:
  6391  002936  0E00               	movlw	0
  6392  002938  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6393                           
  6394                           ; BSR set to: 0
  6395  00293A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6396  00293C  0B80               	andlw	128
  6397  00293E  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  6398                           
  6399                           ; BSR set to: 0
  6400  002940  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6401  002942  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  6402  002944  6F78               	movwf	___fldiv@aexp& (0+255),b
  6403                           
  6404                           ; BSR set to: 0
  6405  002946  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
  6406                           
  6407                           ; BSR set to: 0
  6408  002948  8178               	bsf	___fldiv@aexp& (0+255),0,b
  6409                           
  6410                           ; BSR set to: 0
  6411  00294A  5178               	movf	___fldiv@aexp& (0+255),w,b
  6412  00294C  B4D8               	btfsc	status,2,c
  6413  00294E  D00D               	goto	l6242
  6414                           
  6415                           ; BSR set to: 0
  6416  002950  2978               	incf	___fldiv@aexp& (0+255),w,b
  6417  002952  A4D8               	btfss	status,2,c
  6418  002954  D008               	goto	l6238
  6419                           
  6420                           ; BSR set to: 0
  6421  002956  0E00               	movlw	0
  6422  002958  6F64               	movwf	___fldiv@a& (0+255),b
  6423  00295A  0E00               	movlw	0
  6424  00295C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6425  00295E  0E00               	movlw	0
  6426  002960  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6427  002962  0E00               	movlw	0
  6428  002964  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6429  002966                     l6238:
  6430                           
  6431                           ; BSR set to: 0
  6432  002966  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  6433  002968  D006               	goto	L8
  6434  00296A                     l6242:
  6435                           
  6436                           ; BSR set to: 0
  6437  00296A  0E00               	movlw	0
  6438  00296C  6F64               	movwf	___fldiv@a& (0+255),b
  6439  00296E  0E00               	movlw	0
  6440  002970  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6441  002972  0E00               	movlw	0
  6442  002974  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6443  002976                     L8:
  6444  002976  0E00               	movlw	0
  6445  002978  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6446                           
  6447                           ; BSR set to: 0
  6448  00297A  5164               	movf	___fldiv@a& (0+255),w,b
  6449  00297C  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6450  00297E  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6451  002980  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6452  002982  A4D8               	btfss	status,2,c
  6453  002984  D017               	goto	l6256
  6454                           
  6455                           ; BSR set to: 0
  6456  002986  0E00               	movlw	0
  6457  002988  6F60               	movwf	___fldiv@b& (0+255),b
  6458  00298A  0E00               	movlw	0
  6459  00298C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6460  00298E  0E00               	movlw	0
  6461  002990  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6462  002992  0E00               	movlw	0
  6463  002994  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6464                           
  6465                           ; BSR set to: 0
  6466  002996  0E80               	movlw	128
  6467  002998  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6468  00299A  0E7F               	movlw	127
  6469  00299C  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6470  00299E                     l6250:
  6471                           
  6472                           ; BSR set to: 0
  6473  00299E  5170               	movf	___fldiv@sign& (0+255),w,b
  6474  0029A0  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6475                           
  6476                           ; BSR set to: 0
  6477  0029A2  C060  F060         	movff	___fldiv@b,?___fldiv
  6478  0029A6  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  6479  0029AA  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  6480  0029AE  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  6481  0029B2  0012               	return	
  6482  0029B4                     l6256:
  6483                           
  6484                           ; BSR set to: 0
  6485  0029B4  5177               	movf	___fldiv@bexp& (0+255),w,b
  6486  0029B6  A4D8               	btfss	status,2,c
  6487  0029B8  D009               	goto	l6264
  6488                           
  6489                           ; BSR set to: 0
  6490                           
  6491                           ; BSR set to: 0
  6492  0029BA  0E00               	movlw	0
  6493  0029BC  6F60               	movwf	?___fldiv& (0+255),b
  6494  0029BE  0E00               	movlw	0
  6495  0029C0  6F61               	movwf	(?___fldiv+1)& (0+255),b
  6496  0029C2  0E00               	movlw	0
  6497  0029C4  6F62               	movwf	(?___fldiv+2)& (0+255),b
  6498  0029C6  0E00               	movlw	0
  6499  0029C8  6F63               	movwf	(?___fldiv+3)& (0+255),b
  6500  0029CA  0012               	return	
  6501  0029CC                     l6264:
  6502                           
  6503                           ; BSR set to: 0
  6504  0029CC  5178               	movf	___fldiv@aexp& (0+255),w,b
  6505  0029CE  C077  F068         	movff	___fldiv@bexp,??___fldiv
  6506  0029D2  6B69               	clrf	(??___fldiv+1)& (0+255),b
  6507  0029D4  5F68               	subwf	??___fldiv& (0+255),f,b
  6508  0029D6  0E00               	movlw	0
  6509  0029D8  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  6510  0029DA  0E7F               	movlw	127
  6511  0029DC  2568               	addwf	??___fldiv& (0+255),w,b
  6512  0029DE  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6513  0029E0  0E00               	movlw	0
  6514  0029E2  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  6515  0029E4  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6516                           
  6517                           ; BSR set to: 0
  6518  0029E6  C060  F06C         	movff	___fldiv@b,___fldiv@rem
  6519  0029EA  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
  6520  0029EE  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
  6521  0029F2  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
  6522                           
  6523                           ; BSR set to: 0
  6524  0029F6  0E00               	movlw	0
  6525  0029F8  6F60               	movwf	___fldiv@b& (0+255),b
  6526  0029FA  0E00               	movlw	0
  6527  0029FC  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6528  0029FE  0E00               	movlw	0
  6529  002A00  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6530  002A02  0E00               	movlw	0
  6531  002A04  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6532                           
  6533                           ; BSR set to: 0
  6534  002A06  0E00               	movlw	0
  6535  002A08  6F73               	movwf	___fldiv@grs& (0+255),b
  6536  002A0A  0E00               	movlw	0
  6537  002A0C  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  6538  002A0E  0E00               	movlw	0
  6539  002A10  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  6540  002A12  0E00               	movlw	0
  6541  002A14  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  6542                           
  6543                           ; BSR set to: 0
  6544  002A16  0E00               	movlw	0
  6545  002A18  6F78               	movwf	___fldiv@aexp& (0+255),b
  6546  002A1A  D028               	goto	l1104
  6547  002A1C                     l6274:
  6548                           
  6549                           ; BSR set to: 0
  6550  002A1C  5178               	movf	___fldiv@aexp& (0+255),w,b
  6551  002A1E  B4D8               	btfsc	status,2,c
  6552  002A20  D011               	goto	l6282
  6553                           
  6554                           ; BSR set to: 0
  6555  002A22  90D8               	bcf	status,0,c
  6556  002A24  376C               	rlcf	___fldiv@rem& (0+255),f,b
  6557  002A26  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6558  002A28  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6559  002A2A  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6560  002A2C  90D8               	bcf	status,0,c
  6561  002A2E  3760               	rlcf	___fldiv@b& (0+255),f,b
  6562  002A30  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6563  002A32  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6564  002A34  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6565                           
  6566                           ; BSR set to: 0
  6567  002A36  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6568                           
  6569                           ; BSR set to: 0
  6570  002A38  8160               	bsf	___fldiv@b& (0+255),0,b
  6571                           
  6572                           ; BSR set to: 0
  6573  002A3A  90D8               	bcf	status,0,c
  6574  002A3C  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6575  002A3E  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6576  002A40  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6577  002A42  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6578  002A44                     l6282:
  6579                           
  6580                           ; BSR set to: 0
  6581  002A44  5164               	movf	___fldiv@a& (0+255),w,b
  6582  002A46  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  6583  002A48  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6584  002A4A  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6585  002A4C  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6586  002A4E  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6587  002A50  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6588  002A52  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6589  002A54  A0D8               	btfss	status,0,c
  6590  002A56  D009               	goto	l6288
  6591                           
  6592                           ; BSR set to: 0
  6593  002A58  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6594                           
  6595                           ; BSR set to: 0
  6596  002A5A  5164               	movf	___fldiv@a& (0+255),w,b
  6597  002A5C  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  6598  002A5E  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6599  002A60  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6600  002A62  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6601  002A64  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6602  002A66  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6603  002A68  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6604  002A6A                     l6288:
  6605                           
  6606                           ; BSR set to: 0
  6607  002A6A  2B78               	incf	___fldiv@aexp& (0+255),f,b
  6608  002A6C                     l1104:
  6609                           
  6610                           ; BSR set to: 0
  6611  002A6C  0E19               	movlw	25
  6612  002A6E  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  6613  002A70  D7D5               	goto	l6274
  6614                           
  6615                           ; BSR set to: 0
  6616  002A72  516C               	movf	___fldiv@rem& (0+255),w,b
  6617  002A74  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6618  002A76  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6619  002A78  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6620  002A7A  B4D8               	btfsc	status,2,c
  6621  002A7C  D011               	goto	l6300
  6622                           
  6623                           ; BSR set to: 0
  6624  002A7E  8173               	bsf	___fldiv@grs& (0+255),0,b
  6625  002A80  D00F               	goto	l6300
  6626  002A82                     l6294:
  6627                           
  6628                           ; BSR set to: 0
  6629  002A82  90D8               	bcf	status,0,c
  6630  002A84  3760               	rlcf	___fldiv@b& (0+255),f,b
  6631  002A86  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6632  002A88  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6633  002A8A  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6634                           
  6635                           ; BSR set to: 0
  6636  002A8C  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6637                           
  6638                           ; BSR set to: 0
  6639  002A8E  8160               	bsf	___fldiv@b& (0+255),0,b
  6640                           
  6641                           ; BSR set to: 0
  6642  002A90  90D8               	bcf	status,0,c
  6643  002A92  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6644  002A94  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6645  002A96  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6646  002A98  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6647  002A9A  0771               	decf	___fldiv@new_exp& (0+255),f,b
  6648  002A9C  A0D8               	btfss	status,0,c
  6649  002A9E  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6650  002AA0                     l6300:
  6651                           
  6652                           ; BSR set to: 0
  6653  002AA0  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6654  002AA2  D7EF               	goto	l6294
  6655                           
  6656                           ; BSR set to: 0
  6657  002AA4  0E00               	movlw	0
  6658  002AA6  6F78               	movwf	___fldiv@aexp& (0+255),b
  6659                           
  6660                           ; BSR set to: 0
  6661  002AA8  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6662  002AAA  D017               	goto	l1115
  6663                           
  6664                           ; BSR set to: 0
  6665  002AAC  0EFF               	movlw	255
  6666  002AAE  1573               	andwf	___fldiv@grs& (0+255),w,b
  6667  002AB0  6F68               	movwf	??___fldiv& (0+255),b
  6668  002AB2  0EFF               	movlw	255
  6669  002AB4  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6670  002AB6  6F69               	movwf	(??___fldiv+1)& (0+255),b
  6671  002AB8  0EFF               	movlw	255
  6672  002ABA  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6673  002ABC  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  6674  002ABE  0E7F               	movlw	127
  6675  002AC0  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6676  002AC2  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  6677  002AC4  5168               	movf	??___fldiv& (0+255),w,b
  6678  002AC6  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  6679  002AC8  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  6680  002ACA  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  6681  002ACC  B4D8               	btfsc	status,2,c
  6682  002ACE  D003               	goto	l1116
  6683  002AD0                     u7780:
  6684                           
  6685                           ; BSR set to: 0
  6686  002AD0  0E01               	movlw	1
  6687  002AD2  6F78               	movwf	___fldiv@aexp& (0+255),b
  6688  002AD4  D002               	goto	l1115
  6689  002AD6                     l1116:
  6690                           
  6691                           ; BSR set to: 0
  6692  002AD6  B160               	btfsc	___fldiv@b& (0+255),0,b
  6693  002AD8  D7FB               	goto	u7780
  6694  002ADA                     l1115:
  6695                           
  6696                           ; BSR set to: 0
  6697  002ADA  5178               	movf	___fldiv@aexp& (0+255),w,b
  6698  002ADC  B4D8               	btfsc	status,2,c
  6699  002ADE  D01F               	goto	l6320
  6700                           
  6701                           ; BSR set to: 0
  6702  002AE0  0E01               	movlw	1
  6703  002AE2  2760               	addwf	___fldiv@b& (0+255),f,b
  6704  002AE4  0E00               	movlw	0
  6705  002AE6  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6706  002AE8  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6707  002AEA  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6708                           
  6709                           ; BSR set to: 0
  6710  002AEC  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  6711  002AEE  D017               	goto	l6320
  6712                           
  6713                           ; BSR set to: 0
  6714  002AF0  C060  F068         	movff	___fldiv@b,??___fldiv
  6715  002AF4  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
  6716  002AF8  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
  6717  002AFC  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
  6718  002B00  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  6719  002B02  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  6720  002B04  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  6721  002B06  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  6722  002B08  3368               	rrcf	??___fldiv& (0+255),f,b
  6723  002B0A  C068  F060         	movff	??___fldiv,___fldiv@b
  6724  002B0E  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
  6725  002B12  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
  6726  002B16  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
  6727                           
  6728                           ; BSR set to: 0
  6729  002B1A  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  6730  002B1C  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6731  002B1E                     l6320:
  6732                           
  6733                           ; BSR set to: 0
  6734  002B1E  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6735  002B20  D010               	goto	l6324
  6736  002B22  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6737  002B24  E103               	bnz	u7820
  6738  002B26  2971               	incf	___fldiv@new_exp& (0+255),w,b
  6739  002B28  A0D8               	btfss	status,0,c
  6740  002B2A  D00B               	goto	l6324
  6741  002B2C                     u7820:
  6742                           
  6743                           ; BSR set to: 0
  6744  002B2C  0E00               	movlw	0
  6745  002B2E  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6746  002B30  6971               	setf	___fldiv@new_exp& (0+255),b
  6747  002B32  0E00               	movlw	0
  6748  002B34  6F60               	movwf	___fldiv@b& (0+255),b
  6749  002B36  0E00               	movlw	0
  6750  002B38  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6751  002B3A  0E00               	movlw	0
  6752  002B3C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6753  002B3E  0E00               	movlw	0
  6754  002B40  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6755  002B42                     l6324:
  6756                           
  6757                           ; BSR set to: 0
  6758  002B42  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6759  002B44  D005               	goto	u7830
  6760  002B46  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6761  002B48  E111               	bnz	l6328
  6762  002B4A  0571               	decf	___fldiv@new_exp& (0+255),w,b
  6763  002B4C  B0D8               	btfsc	status,0,c
  6764  002B4E  D00E               	goto	l6328
  6765  002B50                     u7830:
  6766                           
  6767                           ; BSR set to: 0
  6768  002B50  0E00               	movlw	0
  6769  002B52  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6770  002B54  0E00               	movlw	0
  6771  002B56  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6772  002B58  0E00               	movlw	0
  6773  002B5A  6F60               	movwf	___fldiv@b& (0+255),b
  6774  002B5C  0E00               	movlw	0
  6775  002B5E  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6776  002B60  0E00               	movlw	0
  6777  002B62  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6778  002B64  0E00               	movlw	0
  6779  002B66  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6780  002B68  0E00               	movlw	0
  6781  002B6A  6F70               	movwf	___fldiv@sign& (0+255),b
  6782  002B6C                     l6328:
  6783                           
  6784                           ; BSR set to: 0
  6785  002B6C  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
  6786                           
  6787                           ; BSR set to: 0
  6788  002B70  A177               	btfss	___fldiv@bexp& (0+255),0,b
  6789  002B72  D002               	goto	l6334
  6790                           
  6791                           ; BSR set to: 0
  6792  002B74  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6793  002B76  D001               	goto	l6336
  6794  002B78                     l6334:
  6795                           
  6796                           ; BSR set to: 0
  6797  002B78  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  6798  002B7A                     l6336:
  6799                           
  6800                           ; BSR set to: 0
  6801  002B7A  90D8               	bcf	status,0,c
  6802  002B7C  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  6803  002B7E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6804  002B80  D70E               	goto	l6250
  6805  002B82                     __end_of___fldiv:
  6806                           	opt callstack 0
  6807                           
  6808 ;; *************** function ___awmod *****************
  6809 ;; Defined at:
  6810 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;  dividend        2    0[BANK0 ] int 
  6813 ;;  divisor         2    2[BANK0 ] int 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  sign            1    5[BANK0 ] unsigned char 
  6816 ;;  counter         1    4[BANK0 ] unsigned char 
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  2    0[BANK0 ] int 
  6819 ;; Registers used:
  6820 ;;		wreg, status,2, status,0
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6826 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6829 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6830 ;;Total ram usage:        6 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; Hardware stack levels required when called:    2
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_efgtoa
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text20
  6841  003F1A                     __ptext20:
  6842                           	opt callstack 0
  6843  003F1A                     ___awmod:
  6844                           	opt callstack 23
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;incstack = 0
  6848  003F1A  0E00               	movlw	0
  6849  003F1C  0100               	movlb	0	; () banked
  6850  003F1E  6F65               	movwf	___awmod@sign& (0+255),b
  6851                           
  6852                           ; BSR set to: 0
  6853  003F20  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6854  003F22  D006               	goto	l6532
  6855                           
  6856                           ; BSR set to: 0
  6857  003F24  6D60               	negf	___awmod@dividend& (0+255),b
  6858  003F26  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6859  003F28  B0D8               	btfsc	status,0,c
  6860  003F2A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6861                           
  6862                           ; BSR set to: 0
  6863  003F2C  0E01               	movlw	1
  6864  003F2E  6F65               	movwf	___awmod@sign& (0+255),b
  6865  003F30                     l6532:
  6866                           
  6867                           ; BSR set to: 0
  6868  003F30  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6869  003F32  D004               	goto	l6536
  6870                           
  6871                           ; BSR set to: 0
  6872  003F34  6D62               	negf	___awmod@divisor& (0+255),b
  6873  003F36  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  6874  003F38  B0D8               	btfsc	status,0,c
  6875  003F3A  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  6876  003F3C                     l6536:
  6877                           
  6878                           ; BSR set to: 0
  6879  003F3C  5162               	movf	___awmod@divisor& (0+255),w,b
  6880  003F3E  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6881  003F40  B4D8               	btfsc	status,2,c
  6882  003F42  D018               	goto	l6552
  6883                           
  6884                           ; BSR set to: 0
  6885  003F44  0E01               	movlw	1
  6886  003F46  6F64               	movwf	___awmod@counter& (0+255),b
  6887  003F48  D004               	goto	l6542
  6888  003F4A                     l6540:
  6889                           
  6890                           ; BSR set to: 0
  6891  003F4A  90D8               	bcf	status,0,c
  6892  003F4C  3762               	rlcf	___awmod@divisor& (0+255),f,b
  6893  003F4E  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6894  003F50  2B64               	incf	___awmod@counter& (0+255),f,b
  6895  003F52                     l6542:
  6896                           
  6897                           ; BSR set to: 0
  6898  003F52  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6899  003F54  D7FA               	goto	l6540
  6900  003F56                     u8130:
  6901                           
  6902                           ; BSR set to: 0
  6903  003F56  5162               	movf	___awmod@divisor& (0+255),w,b
  6904  003F58  5D60               	subwf	___awmod@dividend& (0+255),w,b
  6905  003F5A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6906  003F5C  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6907  003F5E  A0D8               	btfss	status,0,c
  6908  003F60  D004               	goto	l6548
  6909                           
  6910                           ; BSR set to: 0
  6911  003F62  5162               	movf	___awmod@divisor& (0+255),w,b
  6912  003F64  5F60               	subwf	___awmod@dividend& (0+255),f,b
  6913  003F66  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6914  003F68  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6915  003F6A                     l6548:
  6916                           
  6917                           ; BSR set to: 0
  6918  003F6A  90D8               	bcf	status,0,c
  6919  003F6C  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6920  003F6E  3362               	rrcf	___awmod@divisor& (0+255),f,b
  6921                           
  6922                           ; BSR set to: 0
  6923  003F70  2F64               	decfsz	___awmod@counter& (0+255),f,b
  6924  003F72  D7F1               	goto	u8130
  6925  003F74                     l6552:
  6926                           
  6927                           ; BSR set to: 0
  6928  003F74  5165               	movf	___awmod@sign& (0+255),w,b
  6929  003F76  B4D8               	btfsc	status,2,c
  6930  003F78  D004               	goto	l6556
  6931                           
  6932                           ; BSR set to: 0
  6933  003F7A  6D60               	negf	___awmod@dividend& (0+255),b
  6934  003F7C  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6935  003F7E  B0D8               	btfsc	status,0,c
  6936  003F80  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6937  003F82                     l6556:
  6938                           
  6939                           ; BSR set to: 0
  6940  003F82  C060  F060         	movff	___awmod@dividend,?___awmod
  6941  003F86  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  6942                           
  6943                           ; BSR set to: 0
  6944  003F8A  0012               	return		;funcret
  6945  003F8C                     __end_of___awmod:
  6946                           	opt callstack 0
  6947                           
  6948 ;; *************** function ___awdiv *****************
  6949 ;; Defined at:
  6950 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  dividend        2    0[BANK0 ] int 
  6953 ;;  divisor         2    2[BANK0 ] int 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;  quotient        2    6[BANK0 ] int 
  6956 ;;  sign            1    5[BANK0 ] unsigned char 
  6957 ;;  counter         1    4[BANK0 ] unsigned char 
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  2    0[BANK0 ] int 
  6960 ;; Registers used:
  6961 ;;		wreg, status,2, status,0
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6967 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6968 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;Total ram usage:        8 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; Hardware stack levels required when called:    2
  6974 ;; This function calls:
  6975 ;;		Nothing
  6976 ;; This function is called by:
  6977 ;;		_efgtoa
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text21
  6982  003C9C                     __ptext21:
  6983                           	opt callstack 0
  6984  003C9C                     ___awdiv:
  6985                           	opt callstack 23
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;incstack = 0
  6989  003C9C  0E00               	movlw	0
  6990  003C9E  0100               	movlb	0	; () banked
  6991  003CA0  6F65               	movwf	___awdiv@sign& (0+255),b
  6992                           
  6993                           ; BSR set to: 0
  6994  003CA2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6995  003CA4  D006               	goto	l6488
  6996                           
  6997                           ; BSR set to: 0
  6998  003CA6  6D62               	negf	___awdiv@divisor& (0+255),b
  6999  003CA8  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7000  003CAA  B0D8               	btfsc	status,0,c
  7001  003CAC  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7002                           
  7003                           ; BSR set to: 0
  7004  003CAE  0E01               	movlw	1
  7005  003CB0  6F65               	movwf	___awdiv@sign& (0+255),b
  7006  003CB2                     l6488:
  7007                           
  7008                           ; BSR set to: 0
  7009  003CB2  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7010  003CB4  D006               	goto	l6494
  7011                           
  7012                           ; BSR set to: 0
  7013  003CB6  6D60               	negf	___awdiv@dividend& (0+255),b
  7014  003CB8  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7015  003CBA  B0D8               	btfsc	status,0,c
  7016  003CBC  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7017                           
  7018                           ; BSR set to: 0
  7019  003CBE  0E01               	movlw	1
  7020  003CC0  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7021  003CC2                     l6494:
  7022                           
  7023                           ; BSR set to: 0
  7024  003CC2  0E00               	movlw	0
  7025  003CC4  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7026  003CC6  0E00               	movlw	0
  7027  003CC8  6F66               	movwf	___awdiv@quotient& (0+255),b
  7028                           
  7029                           ; BSR set to: 0
  7030  003CCA  5162               	movf	___awdiv@divisor& (0+255),w,b
  7031  003CCC  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7032  003CCE  B4D8               	btfsc	status,2,c
  7033  003CD0  D01C               	goto	l6516
  7034                           
  7035                           ; BSR set to: 0
  7036  003CD2  0E01               	movlw	1
  7037  003CD4  6F64               	movwf	___awdiv@counter& (0+255),b
  7038  003CD6  D004               	goto	l6502
  7039  003CD8                     l6500:
  7040                           
  7041                           ; BSR set to: 0
  7042  003CD8  90D8               	bcf	status,0,c
  7043  003CDA  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7044  003CDC  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7045  003CDE  2B64               	incf	___awdiv@counter& (0+255),f,b
  7046  003CE0                     l6502:
  7047                           
  7048                           ; BSR set to: 0
  7049  003CE0  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7050  003CE2  D7FA               	goto	l6500
  7051  003CE4                     u8070:
  7052                           
  7053                           ; BSR set to: 0
  7054  003CE4  90D8               	bcf	status,0,c
  7055  003CE6  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7056  003CE8  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7057                           
  7058                           ; BSR set to: 0
  7059  003CEA  5162               	movf	___awdiv@divisor& (0+255),w,b
  7060  003CEC  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7061  003CEE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7062  003CF0  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7063  003CF2  A0D8               	btfss	status,0,c
  7064  003CF4  D005               	goto	l6512
  7065                           
  7066                           ; BSR set to: 0
  7067  003CF6  5162               	movf	___awdiv@divisor& (0+255),w,b
  7068  003CF8  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7069  003CFA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7070  003CFC  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7071                           
  7072                           ; BSR set to: 0
  7073  003CFE  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7074  003D00                     l6512:
  7075                           
  7076                           ; BSR set to: 0
  7077  003D00  90D8               	bcf	status,0,c
  7078  003D02  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7079  003D04  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7080                           
  7081                           ; BSR set to: 0
  7082  003D06  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7083  003D08  D7ED               	goto	u8070
  7084  003D0A                     l6516:
  7085                           
  7086                           ; BSR set to: 0
  7087  003D0A  5165               	movf	___awdiv@sign& (0+255),w,b
  7088  003D0C  B4D8               	btfsc	status,2,c
  7089  003D0E  D004               	goto	l6520
  7090                           
  7091                           ; BSR set to: 0
  7092  003D10  6D66               	negf	___awdiv@quotient& (0+255),b
  7093  003D12  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7094  003D14  B0D8               	btfsc	status,0,c
  7095  003D16  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7096  003D18                     l6520:
  7097                           
  7098                           ; BSR set to: 0
  7099  003D18  C066  F060         	movff	___awdiv@quotient,?___awdiv
  7100  003D1C  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  7101                           
  7102                           ; BSR set to: 0
  7103  003D20  0012               	return		;funcret
  7104  003D22                     __end_of___awdiv:
  7105                           	opt callstack 0
  7106                           
  7107 ;; *************** function _ctoa *****************
  7108 ;; Defined at:
  7109 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  7112 ;;		 -> sprintf@f(6), 
  7113 ;;  c               1   29[BANK0 ] unsigned char 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  w               2   30[BANK0 ] int 
  7116 ;;  l               2    0        int 
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  2   27[BANK0 ] int 
  7119 ;; Registers used:
  7120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7126 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7127 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7129 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7130 ;;Total ram usage:        5 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    6
  7133 ;; This function calls:
  7134 ;;		_pad
  7135 ;; This function is called by:
  7136 ;;		_vfpfcnvrt
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           	psect	text22
  7141  00416E                     __ptext22:
  7142                           	opt callstack 0
  7143  00416E                     _ctoa:
  7144                           	opt callstack 20
  7145                           
  7146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;incstack = 0
  7150  00416E  5036               	movf	_width,w,c
  7151  004170  1037               	iorwf	_width+1,w,c
  7152  004172  A4D8               	btfss	status,2,c
  7153  004174  D005               	goto	l6704
  7154  004176  C036  F07E         	movff	_width,ctoa@w
  7155  00417A  C037  F07F         	movff	_width+1,ctoa@w+1
  7156  00417E  D007               	goto	l6706
  7157  004180                     l6704:
  7158  004180  0EFF               	movlw	255
  7159  004182  2436               	addwf	_width,w,c
  7160  004184  0100               	movlb	0	; () banked
  7161  004186  6F7E               	movwf	ctoa@w& (0+255),b
  7162  004188  0EFF               	movlw	255
  7163  00418A  2037               	addwfc	_width+1,w,c
  7164  00418C  6F7F               	movwf	(ctoa@w+1)& (0+255),b
  7165  00418E                     l6706:
  7166                           
  7167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  7168  00418E  C07D  F122         	movff	ctoa@c,_dbuf
  7169                           
  7170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  7171  004192  0E00               	movlw	0
  7172  004194  0101               	movlb	1	; () banked
  7173  004196  6F23               	movwf	(_dbuf+1)& (0+255),b
  7174                           
  7175                           ; BSR set to: 1
  7176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  7177  004198  C07B  F070         	movff	ctoa@fp,pad@fp
  7178  00419C  C07C  F071         	movff	ctoa@fp+1,pad@fp+1
  7179  0041A0  0E22               	movlw	low _dbuf
  7180  0041A2  0100               	movlb	0	; () banked
  7181  0041A4  6F72               	movwf	pad@buf& (0+255),b
  7182  0041A6  0E01               	movlw	high _dbuf
  7183  0041A8  6F73               	movwf	(pad@buf+1)& (0+255),b
  7184  0041AA  C07E  F074         	movff	ctoa@w,pad@p
  7185  0041AE  C07F  F075         	movff	ctoa@w+1,pad@p+1
  7186  0041B2  EC76  F01D         	call	_pad	;wreg free
  7187  0041B6  C070  F07B         	movff	?_pad,?_ctoa
  7188  0041BA  C071  F07C         	movff	?_pad+1,?_ctoa+1
  7189  0041BE  0012               	return		;funcret
  7190  0041C0                     __end_of_ctoa:
  7191                           	opt callstack 0
  7192                           
  7193 ;; *************** function _pad *****************
  7194 ;; Defined at:
  7195 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7198 ;;		 -> sprintf@f(6), 
  7199 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  7200 ;;		 -> dbuf(80), 
  7201 ;;  p               2   20[BANK0 ] int 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  w               2   25[BANK0 ] int 
  7204 ;;  i               2   23[BANK0 ] int 
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  2   16[BANK0 ] int 
  7207 ;; Registers used:
  7208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7214 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7215 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7216 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7217 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7218 ;;Total ram usage:       11 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; Hardware stack levels required when called:    5
  7221 ;; This function calls:
  7222 ;;		_fputc
  7223 ;;		_fputs
  7224 ;;		_strlen
  7225 ;; This function is called by:
  7226 ;;		_ctoa
  7227 ;;		_efgtoa
  7228 ;;		_utoa
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text23
  7233  003AEC                     __ptext23:
  7234                           	opt callstack 0
  7235  003AEC                     _pad:
  7236                           	opt callstack 20
  7237                           
  7238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7239                           
  7240                           ;incstack = 0
  7241  003AEC  A03A               	btfss	_flags,0,c
  7242  003AEE  D00A               	goto	l6114
  7243                           
  7244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7245  003AF0  C072  F069         	movff	pad@buf,fputs@s
  7246  003AF4  C073  F06A         	movff	pad@buf+1,fputs@s+1
  7247  003AF8  C070  F06B         	movff	pad@fp,fputs@fp
  7248  003AFC  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  7249  003B00  EC74  F021         	call	_fputs	;wreg free
  7250  003B04                     l6114:
  7251                           
  7252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7253  003B04  0100               	movlb	0	; () banked
  7254  003B06  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  7255  003B08  D005               	goto	l6118
  7256                           
  7257                           ; BSR set to: 0
  7258  003B0A  C074  F079         	movff	pad@p,pad@w
  7259  003B0E  C075  F07A         	movff	pad@p+1,pad@w+1
  7260  003B12  D004               	goto	l344
  7261  003B14                     l6118:
  7262                           
  7263                           ; BSR set to: 0
  7264  003B14  0E00               	movlw	0
  7265  003B16  6F7A               	movwf	(pad@w+1)& (0+255),b
  7266  003B18  0E00               	movlw	0
  7267  003B1A  6F79               	movwf	pad@w& (0+255),b
  7268  003B1C                     l344:
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7272  003B1C  0E00               	movlw	0
  7273  003B1E  6F78               	movwf	(pad@i+1)& (0+255),b
  7274  003B20  0E00               	movlw	0
  7275  003B22  6F77               	movwf	pad@i& (0+255),b
  7276                           
  7277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7278  003B24  D00D               	goto	l6124
  7279  003B26                     l6120:
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7283  003B26  0E00               	movlw	0
  7284  003B28  6F61               	movwf	(fputc@c+1)& (0+255),b
  7285  003B2A  0E20               	movlw	32
  7286  003B2C  6F60               	movwf	fputc@c& (0+255),b
  7287  003B2E  C070  F062         	movff	pad@fp,fputc@fp
  7288  003B32  C071  F063         	movff	pad@fp+1,fputc@fp+1
  7289  003B36  EC25  F01D         	call	_fputc	;wreg free
  7290                           
  7291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  7292  003B3A  0100               	movlb	0	; () banked
  7293  003B3C  4B77               	infsnz	pad@i& (0+255),f,b
  7294  003B3E  2B78               	incf	(pad@i+1)& (0+255),f,b
  7295  003B40                     l6124:
  7296                           
  7297                           ; BSR set to: 0
  7298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7299  003B40  5179               	movf	pad@w& (0+255),w,b
  7300  003B42  5D77               	subwf	pad@i& (0+255),w,b
  7301  003B44  5178               	movf	(pad@i+1)& (0+255),w,b
  7302  003B46  0A80               	xorlw	128
  7303  003B48  6F76               	movwf	??_pad& (0+255),b
  7304  003B4A  517A               	movf	(pad@w+1)& (0+255),w,b
  7305  003B4C  0A80               	xorlw	128
  7306  003B4E  5976               	subwfb	??_pad& (0+255),w,b
  7307  003B50  A0D8               	btfss	status,0,c
  7308  003B52  D7E9               	goto	l6120
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7312  003B54  B03A               	btfsc	_flags,0,c
  7313  003B56  D00A               	goto	l6128
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7317  003B58  C072  F069         	movff	pad@buf,fputs@s
  7318  003B5C  C073  F06A         	movff	pad@buf+1,fputs@s+1
  7319  003B60  C070  F06B         	movff	pad@fp,fputs@fp
  7320  003B64  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  7321  003B68  EC74  F021         	call	_fputs	;wreg free
  7322  003B6C                     l6128:
  7323                           
  7324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7325  003B6C  C072  F060         	movff	pad@buf,strlen@s
  7326  003B70  C073  F061         	movff	pad@buf+1,strlen@s+1
  7327  003B74  ECF9  F021         	call	_strlen	;wreg free
  7328  003B78  0100               	movlb	0	; () banked
  7329  003B7A  5179               	movf	pad@w& (0+255),w,b
  7330  003B7C  2560               	addwf	?_strlen& (0+255),w,b
  7331  003B7E  6F70               	movwf	?_pad& (0+255),b
  7332  003B80  517A               	movf	(pad@w+1)& (0+255),w,b
  7333  003B82  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  7334  003B84  6F71               	movwf	(?_pad+1)& (0+255),b
  7335                           
  7336                           ; BSR set to: 0
  7337  003B86  0012               	return		;funcret
  7338  003B88                     __end_of_pad:
  7339                           	opt callstack 0
  7340                           
  7341 ;; *************** function _strlen *****************
  7342 ;; Defined at:
  7343 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  7346 ;;		 -> dbuf(80), 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  7349 ;;		 -> dbuf(80), 
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  2    0[BANK0 ] unsigned int 
  7352 ;; Registers used:
  7353 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7359 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7360 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7362 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7363 ;;Total ram usage:        4 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    2
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_pad
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           	psect	text24
  7374  0043F2                     __ptext24:
  7375                           	opt callstack 0
  7376  0043F2                     _strlen:
  7377                           	opt callstack 22
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;incstack = 0
  7381  0043F2  C060  F062         	movff	strlen@s,strlen@a
  7382  0043F6  C061  F063         	movff	strlen@s+1,strlen@a+1
  7383  0043FA  D003               	goto	l5898
  7384  0043FC                     l5896:
  7385  0043FC  0100               	movlb	0	; () banked
  7386  0043FE  4B60               	infsnz	strlen@s& (0+255),f,b
  7387  004400  2B61               	incf	(strlen@s+1)& (0+255),f,b
  7388  004402                     l5898:
  7389  004402  C060  FFD9         	movff	strlen@s,fsr2l
  7390  004406  C061  FFDA         	movff	strlen@s+1,fsr2h
  7391  00440A  50DF               	movf	indf2,w,c
  7392  00440C  A4D8               	btfss	status,2,c
  7393  00440E  D7F6               	goto	l5896
  7394  004410  0100               	movlb	0	; () banked
  7395  004412  5162               	movf	strlen@a& (0+255),w,b
  7396  004414  5D60               	subwf	strlen@s& (0+255),w,b
  7397  004416  6F60               	movwf	?_strlen& (0+255),b
  7398  004418  5163               	movf	(strlen@a+1)& (0+255),w,b
  7399  00441A  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  7400  00441C  6F61               	movwf	(?_strlen+1)& (0+255),b
  7401                           
  7402                           ; BSR set to: 0
  7403  00441E  0012               	return		;funcret
  7404  004420                     __end_of_strlen:
  7405                           	opt callstack 0
  7406                           
  7407 ;; *************** function _fputs *****************
  7408 ;; Defined at:
  7409 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  7412 ;;		 -> dbuf(80), 
  7413 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  7414 ;;		 -> sprintf@f(6), 
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;  i               2   14[BANK0 ] int 
  7417 ;;  c               1   13[BANK0 ] unsigned char 
  7418 ;; Return value:  Size  Location     Type
  7419 ;;                  2    9[BANK0 ] int 
  7420 ;; Registers used:
  7421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7427 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7428 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7430 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7431 ;;Total ram usage:        7 bytes
  7432 ;; Hardware stack levels used:    1
  7433 ;; Hardware stack levels required when called:    4
  7434 ;; This function calls:
  7435 ;;		_fputc
  7436 ;; This function is called by:
  7437 ;;		_pad
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           	psect	text25
  7442  0042E8                     __ptext25:
  7443                           	opt callstack 0
  7444  0042E8                     _fputs:
  7445                           	opt callstack 20
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;incstack = 0
  7449  0042E8  0E00               	movlw	0
  7450  0042EA  0100               	movlb	0	; () banked
  7451  0042EC  6F6F               	movwf	(fputs@i+1)& (0+255),b
  7452  0042EE  0E00               	movlw	0
  7453  0042F0  6F6E               	movwf	fputs@i& (0+255),b
  7454  0042F2  D00C               	goto	l5892
  7455  0042F4                     l5888:
  7456                           
  7457                           ; BSR set to: 0
  7458  0042F4  C06D  F060         	movff	fputs@c,fputc@c
  7459  0042F8  6B61               	clrf	(fputc@c+1)& (0+255),b
  7460  0042FA  C06B  F062         	movff	fputs@fp,fputc@fp
  7461  0042FE  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  7462  004302  EC25  F01D         	call	_fputc	;wreg free
  7463  004306  0100               	movlb	0	; () banked
  7464  004308  4B6E               	infsnz	fputs@i& (0+255),f,b
  7465  00430A  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  7466  00430C                     l5892:
  7467                           
  7468                           ; BSR set to: 0
  7469  00430C  516E               	movf	fputs@i& (0+255),w,b
  7470  00430E  2569               	addwf	fputs@s& (0+255),w,b
  7471  004310  6ED9               	movwf	fsr2l,c
  7472  004312  516F               	movf	(fputs@i+1)& (0+255),w,b
  7473  004314  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  7474  004316  6EDA               	movwf	fsr2h,c
  7475  004318  50DF               	movf	indf2,w,c
  7476  00431A  6F6D               	movwf	fputs@c& (0+255),b
  7477  00431C  516D               	movf	fputs@c& (0+255),w,b
  7478  00431E  B4D8               	btfsc	status,2,c
  7479  004320  0012               	return	
  7480  004322  D7E8               	goto	l5888
  7481  004324                     __end_of_fputs:
  7482                           	opt callstack 0
  7483                           
  7484 ;; *************** function _fputc *****************
  7485 ;; Defined at:
  7486 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;  c               2    0[BANK0 ] int 
  7489 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  7490 ;;		 -> sprintf@f(6), 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;		None
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  2    0[BANK0 ] int 
  7495 ;; Registers used:
  7496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7504 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7505 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;Total ram usage:        9 bytes
  7507 ;; Hardware stack levels used:    1
  7508 ;; Hardware stack levels required when called:    3
  7509 ;; This function calls:
  7510 ;;		_putch
  7511 ;; This function is called by:
  7512 ;;		_pad
  7513 ;;		_vfpfcnvrt
  7514 ;;		_fputs
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           	psect	text26
  7519  003A4A                     __ptext26:
  7520                           	opt callstack 0
  7521  003A4A                     _fputc:
  7522                           	opt callstack 20
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;incstack = 0
  7526  003A4A  0100               	movlb	0	; () banked
  7527  003A4C  5162               	movf	fputc@fp& (0+255),w,b
  7528  003A4E  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  7529  003A50  B4D8               	btfsc	status,2,c
  7530  003A52  D004               	goto	u6880
  7531                           
  7532                           ; BSR set to: 0
  7533  003A54  5162               	movf	fputc@fp& (0+255),w,b
  7534  003A56  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  7535  003A58  A4D8               	btfss	status,2,c
  7536  003A5A  D004               	goto	l5878
  7537  003A5C                     u6880:
  7538                           
  7539                           ; BSR set to: 0
  7540  003A5C  5160               	movf	fputc@c& (0+255),w,b
  7541  003A5E  ECB6  F022         	call	_putch
  7542  003A62  0012               	return	
  7543  003A64                     l5878:
  7544                           
  7545                           ; BSR set to: 0
  7546  003A64  EE20 F004          	lfsr	2,4
  7547  003A68  5162               	movf	fputc@fp& (0+255),w,b
  7548  003A6A  26D9               	addwf	fsr2l,f,c
  7549  003A6C  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7550  003A6E  22DA               	addwfc	fsr2h,f,c
  7551  003A70  50DE               	movf	postinc2,w,c
  7552  003A72  10DE               	iorwf	postinc2,w,c
  7553  003A74  B4D8               	btfsc	status,2,c
  7554  003A76  D016               	goto	u6900
  7555                           
  7556                           ; BSR set to: 0
  7557  003A78  EE20 F004          	lfsr	2,4
  7558  003A7C  5162               	movf	fputc@fp& (0+255),w,b
  7559  003A7E  26D9               	addwf	fsr2l,f,c
  7560  003A80  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7561  003A82  22DA               	addwfc	fsr2h,f,c
  7562  003A84  EE10 F002          	lfsr	1,2
  7563  003A88  5162               	movf	fputc@fp& (0+255),w,b
  7564  003A8A  26E1               	addwf	fsr1l,f,c
  7565  003A8C  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7566  003A8E  22E2               	addwfc	fsr1h,f,c
  7567  003A90  50DE               	movf	postinc2,w,c
  7568  003A92  5CE6               	subwf	postinc1,w,c
  7569  003A94  50E6               	movf	postinc1,w,c
  7570  003A96  0A80               	xorlw	128
  7571  003A98  6F68               	movwf	(??_fputc+4)& (0+255),b
  7572  003A9A  50DE               	movf	postinc2,w,c
  7573  003A9C  0A80               	xorlw	128
  7574  003A9E  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  7575  003AA0  B0D8               	btfsc	status,0,c
  7576  003AA2  0012               	return	
  7577  003AA4                     u6900:
  7578                           
  7579                           ; BSR set to: 0
  7580  003AA4  EE20 F002          	lfsr	2,2
  7581  003AA8  5162               	movf	fputc@fp& (0+255),w,b
  7582  003AAA  26D9               	addwf	fsr2l,f,c
  7583  003AAC  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7584  003AAE  22DA               	addwfc	fsr2h,f,c
  7585  003AB0  CFDE F064          	movff	postinc2,??_fputc
  7586  003AB4  CFDD F065          	movff	postdec2,??_fputc+1
  7587  003AB8  C062  FFD9         	movff	fputc@fp,fsr2l
  7588  003ABC  C063  FFDA         	movff	fputc@fp+1,fsr2h
  7589  003AC0  CFDE F066          	movff	postinc2,??_fputc+2
  7590  003AC4  CFDD F067          	movff	postdec2,??_fputc+3
  7591  003AC8  5164               	movf	??_fputc& (0+255),w,b
  7592  003ACA  2566               	addwf	(??_fputc+2)& (0+255),w,b
  7593  003ACC  6ED9               	movwf	fsr2l,c
  7594  003ACE  5165               	movf	(??_fputc+1)& (0+255),w,b
  7595  003AD0  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  7596  003AD2  6EDA               	movwf	fsr2h,c
  7597  003AD4  C060  FFDF         	movff	fputc@c,indf2
  7598  003AD8  EE20 F002          	lfsr	2,2
  7599  003ADC  5162               	movf	fputc@fp& (0+255),w,b
  7600  003ADE  26D9               	addwf	fsr2l,f,c
  7601  003AE0  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7602  003AE2  22DA               	addwfc	fsr2h,f,c
  7603  003AE4  2ADE               	incf	postinc2,f,c
  7604  003AE6  0E00               	movlw	0
  7605  003AE8  22DD               	addwfc	postdec2,f,c
  7606  003AEA  0012               	return		;funcret
  7607  003AEC                     __end_of_fputc:
  7608                           	opt callstack 0
  7609                           
  7610 ;; *************** function _putch *****************
  7611 ;; Defined at:
  7612 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;  c               1    wreg     unsigned char 
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;  c               1    0[COMRAM] unsigned char 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      void 
  7619 ;; Registers used:
  7620 ;;		wreg
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7630 ;;Total ram usage:        0 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:    2
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_fputc
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text27
  7641  00456C                     __ptext27:
  7642                           	opt callstack 0
  7643  00456C                     _putch:
  7644                           	opt callstack 20
  7645                           
  7646                           ;incstack = 0
  7647  00456C  0012               	return		;funcret
  7648  00456E                     __end_of_putch:
  7649                           	opt callstack 0
  7650                           
  7651 ;; *************** function _atoi *****************
  7652 ;; Defined at:
  7653 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  7656 ;;		 -> STR_4(28), STR_1(10), 
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;  n               2   20[BANK0 ] int 
  7659 ;;  neg             2   13[BANK0 ] int 
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  2    7[BANK0 ] int 
  7662 ;; Registers used:
  7663 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7669 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7670 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7671 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7672 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7673 ;;Total ram usage:       15 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:    3
  7676 ;; This function calls:
  7677 ;;		___wmul
  7678 ;;		_isdigit
  7679 ;;		_isspace
  7680 ;; This function is called by:
  7681 ;;		_vfpfcnvrt
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text28
  7686  00304E                     __ptext28:
  7687                           	opt callstack 0
  7688  00304E                     _atoi:
  7689                           	opt callstack 23
  7690                           
  7691                           ;incstack = 0
  7692  00304E  0E00               	movlw	0
  7693  003050  0100               	movlb	0	; () banked
  7694  003052  6F75               	movwf	(atoi@n+1)& (0+255),b
  7695  003054  0E00               	movlw	0
  7696  003056  6F74               	movwf	atoi@n& (0+255),b
  7697  003058  0E00               	movlw	0
  7698  00305A  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  7699  00305C  0E00               	movlw	0
  7700  00305E  6F6D               	movwf	atoi@neg& (0+255),b
  7701  003060  D002               	goto	l7052
  7702  003062                     l7050:
  7703                           
  7704                           ; BSR set to: 0
  7705  003062  4B67               	infsnz	atoi@s& (0+255),f,b
  7706  003064  2B68               	incf	(atoi@s+1)& (0+255),f,b
  7707  003066                     l7052:
  7708                           
  7709                           ; BSR set to: 0
  7710  003066  0E01               	movlw	1
  7711  003068  6F73               	movwf	_atoi$1922& (0+255),b
  7712                           
  7713                           ; BSR set to: 0
  7714  00306A  C067  FFF6         	movff	atoi@s,tblptrl
  7715  00306E  C068  FFF7         	movff	atoi@s+1,tblptrh
  7716  003072                     	if	0	;tblptru may be non-zero
  7717  003072                     	endif
  7718  003072                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7719  003072  0E00               	movlw	low (__mediumconst shr (0+16))
  7720  003074  6EF8               	movwf	tblptru,c
  7721  003076                     	endif
  7722  003076  0008               	tblrd		*
  7723  003078  50F5               	movf	tablat,w,c
  7724  00307A  0A20               	xorlw	32
  7725  00307C  B4D8               	btfsc	status,2,c
  7726  00307E  D01A               	goto	l7060
  7727                           
  7728                           ; BSR set to: 0
  7729  003080  0EF7               	movlw	247
  7730  003082  6F69               	movwf	??_atoi& (0+255),b
  7731  003084  0EFF               	movlw	255
  7732  003086  6F6A               	movwf	(??_atoi+1)& (0+255),b
  7733  003088  C067  FFF6         	movff	atoi@s,tblptrl
  7734  00308C  C068  FFF7         	movff	atoi@s+1,tblptrh
  7735  003090                     	if	0	;tblptru may be non-zero
  7736  003090                     	endif
  7737  003090                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7738  003090  0E00               	movlw	low (__mediumconst shr (0+16))
  7739  003092  6EF8               	movwf	tblptru,c
  7740  003094                     	endif
  7741  003094  0008               	tblrd		*
  7742  003096  50F5               	movf	tablat,w,c
  7743  003098  6F6B               	movwf	(??_atoi+2)& (0+255),b
  7744  00309A  6B6C               	clrf	(??_atoi+3)& (0+255),b
  7745  00309C  5169               	movf	??_atoi& (0+255),w,b
  7746  00309E  276B               	addwf	(??_atoi+2)& (0+255),f,b
  7747  0030A0  516A               	movf	(??_atoi+1)& (0+255),w,b
  7748  0030A2  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  7749  0030A4  516C               	movf	(??_atoi+3)& (0+255),w,b
  7750  0030A6  E104               	bnz	u9020
  7751  0030A8  0E05               	movlw	5
  7752  0030AA  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  7753  0030AC  A0D8               	btfss	status,0,c
  7754  0030AE  D002               	goto	l7060
  7755  0030B0                     u9020:
  7756                           
  7757                           ; BSR set to: 0
  7758  0030B0  0E00               	movlw	0
  7759  0030B2  6F73               	movwf	_atoi$1922& (0+255),b
  7760  0030B4                     l7060:
  7761                           
  7762                           ; BSR set to: 0
  7763  0030B4  C073  F06F         	movff	_atoi$1922,_atoi$1921
  7764  0030B8  6B70               	clrf	(_atoi$1921+1)& (0+255),b
  7765                           
  7766                           ; BSR set to: 0
  7767  0030BA  516F               	movf	_atoi$1921& (0+255),w,b
  7768  0030BC  1170               	iorwf	(_atoi$1921+1)& (0+255),w,b
  7769  0030BE  B4D8               	btfsc	status,2,c
  7770  0030C0  D008               	goto	l7070
  7771  0030C2  D7CF               	goto	l7050
  7772  0030C4                     l7066:
  7773                           
  7774                           ; BSR set to: 0
  7775  0030C4  0E00               	movlw	0
  7776  0030C6  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  7777  0030C8  0E01               	movlw	1
  7778  0030CA  6F6D               	movwf	atoi@neg& (0+255),b
  7779  0030CC                     l7068:
  7780                           
  7781                           ; BSR set to: 0
  7782  0030CC  4B67               	infsnz	atoi@s& (0+255),f,b
  7783  0030CE  2B68               	incf	(atoi@s+1)& (0+255),f,b
  7784  0030D0  D033               	goto	l7076
  7785  0030D2                     l7070:
  7786                           
  7787                           ; BSR set to: 0
  7788  0030D2  C067  FFF6         	movff	atoi@s,tblptrl
  7789  0030D6  C068  FFF7         	movff	atoi@s+1,tblptrh
  7790  0030DA                     	if	0	;tblptru may be non-zero
  7791  0030DA                     	endif
  7792  0030DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7793  0030DA  0E00               	movlw	low (__mediumconst shr (0+16))
  7794  0030DC  6EF8               	movwf	tblptru,c
  7795  0030DE                     	endif
  7796  0030DE  0008               	tblrd		*
  7797  0030E0  50F5               	movf	tablat,w,c
  7798  0030E2  6F69               	movwf	??_atoi& (0+255),b
  7799  0030E4  6B6A               	clrf	(??_atoi+1)& (0+255),b
  7800                           
  7801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7802                           ; Switch size 1, requested type "simple"
  7803                           ; Number of cases is 1, Range of values is 0 to 0
  7804                           ; switch strategies available:
  7805                           ; Name         Instructions Cycles
  7806                           ; simple_byte            4     3 (average)
  7807                           ;	Chosen strategy is simple_byte
  7808  0030E6  516A               	movf	(??_atoi+1)& (0+255),w,b
  7809  0030E8  0A00               	xorlw	0	; case 0
  7810  0030EA  A4D8               	btfss	status,2,c
  7811  0030EC  D025               	goto	l7076
  7812                           
  7813                           ; BSR set to: 0
  7814                           ; Switch size 1, requested type "simple"
  7815                           ; Number of cases is 2, Range of values is 43 to 45
  7816                           ; switch strategies available:
  7817                           ; Name         Instructions Cycles
  7818                           ; simple_byte            7     4 (average)
  7819                           ;	Chosen strategy is simple_byte
  7820  0030EE  5169               	movf	??_atoi& (0+255),w,b
  7821  0030F0  0A2B               	xorlw	43	; case 43
  7822  0030F2  B4D8               	btfsc	status,2,c
  7823  0030F4  D7EB               	goto	l7068
  7824  0030F6  0A06               	xorlw	6	; case 45
  7825  0030F8  B4D8               	btfsc	status,2,c
  7826  0030FA  D7E4               	goto	l7066
  7827  0030FC  D01D               	goto	l7076
  7828  0030FE                     l7072:
  7829                           
  7830                           ; BSR set to: 0
  7831  0030FE  C074  F060         	movff	atoi@n,___wmul@multiplier
  7832  003102  C075  F061         	movff	atoi@n+1,___wmul@multiplier+1
  7833  003106  0E00               	movlw	0
  7834  003108  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7835  00310A  0E0A               	movlw	10
  7836  00310C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  7837  00310E  EC26  F022         	call	___wmul	;wreg free
  7838  003112  C067  FFF6         	movff	atoi@s,tblptrl
  7839  003116  C068  FFF7         	movff	atoi@s+1,tblptrh
  7840  00311A                     	if	0	;tblptru may be non-zero
  7841  00311A                     	endif
  7842  00311A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7843  00311A  0E00               	movlw	low (__mediumconst shr (0+16))
  7844  00311C  6EF8               	movwf	tblptru,c
  7845  00311E                     	endif
  7846  00311E  0008               	tblrd		*
  7847  003120  50F5               	movf	tablat,w,c
  7848  003122  0100               	movlb	0	; () banked
  7849  003124  5F60               	subwf	?___wmul& (0+255),f,b
  7850  003126  0E00               	movlw	0
  7851  003128  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
  7852  00312A  0E30               	movlw	48
  7853  00312C  2560               	addwf	?___wmul& (0+255),w,b
  7854  00312E  6F74               	movwf	atoi@n& (0+255),b
  7855  003130  0E00               	movlw	0
  7856  003132  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  7857  003134  6F75               	movwf	(atoi@n+1)& (0+255),b
  7858  003136  D7CA               	goto	l7068
  7859  003138                     l7076:
  7860                           
  7861                           ; BSR set to: 0
  7862  003138  0ED0               	movlw	208
  7863  00313A  6F69               	movwf	??_atoi& (0+255),b
  7864  00313C  0EFF               	movlw	255
  7865  00313E  6F6A               	movwf	(??_atoi+1)& (0+255),b
  7866  003140  C067  FFF6         	movff	atoi@s,tblptrl
  7867  003144  C068  FFF7         	movff	atoi@s+1,tblptrh
  7868  003148                     	if	0	;tblptru may be non-zero
  7869  003148                     	endif
  7870  003148                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7871  003148  0E00               	movlw	low (__mediumconst shr (0+16))
  7872  00314A  6EF8               	movwf	tblptru,c
  7873  00314C                     	endif
  7874  00314C  0008               	tblrd		*
  7875  00314E  50F5               	movf	tablat,w,c
  7876  003150  6F6B               	movwf	(??_atoi+2)& (0+255),b
  7877  003152  6B6C               	clrf	(??_atoi+3)& (0+255),b
  7878  003154  5169               	movf	??_atoi& (0+255),w,b
  7879  003156  276B               	addwf	(??_atoi+2)& (0+255),f,b
  7880  003158  516A               	movf	(??_atoi+1)& (0+255),w,b
  7881  00315A  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  7882  00315C  516C               	movf	(??_atoi+3)& (0+255),w,b
  7883  00315E  E106               	bnz	u9040
  7884  003160  0E0A               	movlw	10
  7885  003162  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  7886  003164  B0D8               	btfsc	status,0,c
  7887  003166  D002               	goto	u9040
  7888  003168  0E01               	movlw	1
  7889  00316A  D001               	goto	u9050
  7890  00316C                     u9040:
  7891  00316C  0E00               	movlw	0
  7892  00316E                     u9050:
  7893  00316E  6F71               	movwf	_atoi$1923& (0+255),b
  7894  003170  6B72               	clrf	(_atoi$1923+1)& (0+255),b
  7895                           
  7896                           ; BSR set to: 0
  7897  003172  5171               	movf	_atoi$1923& (0+255),w,b
  7898  003174  1172               	iorwf	(_atoi$1923+1)& (0+255),w,b
  7899  003176  A4D8               	btfss	status,2,c
  7900  003178  D7C2               	goto	l7072
  7901                           
  7902                           ; BSR set to: 0
  7903  00317A  516D               	movf	atoi@neg& (0+255),w,b
  7904  00317C  116E               	iorwf	(atoi@neg+1)& (0+255),w,b
  7905  00317E  A4D8               	btfss	status,2,c
  7906  003180  D00D               	goto	l1230
  7907                           
  7908                           ; BSR set to: 0
  7909  003182  C074  F069         	movff	atoi@n,??_atoi
  7910  003186  C075  F06A         	movff	atoi@n+1,??_atoi+1
  7911  00318A  1F69               	comf	??_atoi& (0+255),f,b
  7912  00318C  1F6A               	comf	(??_atoi+1)& (0+255),f,b
  7913  00318E  4B69               	infsnz	??_atoi& (0+255),f,b
  7914  003190  2B6A               	incf	(??_atoi+1)& (0+255),f,b
  7915  003192  C069  F067         	movff	??_atoi,?_atoi
  7916  003196  C06A  F068         	movff	??_atoi+1,?_atoi+1
  7917  00319A  0012               	return	
  7918  00319C                     l1230:
  7919                           
  7920                           ; BSR set to: 0
  7921  00319C  C074  F067         	movff	atoi@n,?_atoi
  7922  0031A0  C075  F068         	movff	atoi@n+1,?_atoi+1
  7923                           
  7924                           ; BSR set to: 0
  7925  0031A4  0012               	return		;funcret
  7926  0031A6                     __end_of_atoi:
  7927                           	opt callstack 0
  7928                           
  7929 ;; *************** function _isspace *****************
  7930 ;; Defined at:
  7931 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  c               2    0[BANK0 ] int 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;		None
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  2    0[BANK0 ] int 
  7938 ;; Registers used:
  7939 ;;		wreg, status,2, status,0
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7947 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7948 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7949 ;;Total ram usage:        7 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; Hardware stack levels required when called:    2
  7952 ;; This function calls:
  7953 ;;		Nothing
  7954 ;; This function is called by:
  7955 ;;		_atoi
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           	psect	text29
  7960  0042A8                     __ptext29:
  7961                           	opt callstack 0
  7962  0042A8                     _isspace:
  7963                           	opt callstack 23
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;incstack = 0
  7967  0042A8  0E01               	movlw	1
  7968  0042AA  0100               	movlb	0	; () banked
  7969  0042AC  6F66               	movwf	_isspace$1952& (0+255),b
  7970                           
  7971                           ; BSR set to: 0
  7972  0042AE  0E20               	movlw	32
  7973  0042B0  1960               	xorwf	isspace@c& (0+255),w,b
  7974  0042B2  1161               	iorwf	(isspace@c+1)& (0+255),w,b
  7975  0042B4  B4D8               	btfsc	status,2,c
  7976  0042B6  D014               	goto	l6696
  7977                           
  7978                           ; BSR set to: 0
  7979  0042B8  0EF7               	movlw	247
  7980  0042BA  6F62               	movwf	??_isspace& (0+255),b
  7981  0042BC  0EFF               	movlw	255
  7982  0042BE  6F63               	movwf	(??_isspace+1)& (0+255),b
  7983  0042C0  C060  F064         	movff	isspace@c,??_isspace+2
  7984  0042C4  C061  F065         	movff	isspace@c+1,??_isspace+3
  7985  0042C8  5162               	movf	??_isspace& (0+255),w,b
  7986  0042CA  2764               	addwf	(??_isspace+2)& (0+255),f,b
  7987  0042CC  5163               	movf	(??_isspace+1)& (0+255),w,b
  7988  0042CE  2365               	addwfc	(??_isspace+3)& (0+255),f,b
  7989  0042D0  5165               	movf	(??_isspace+3)& (0+255),w,b
  7990  0042D2  E104               	bnz	u8400
  7991  0042D4  0E05               	movlw	5
  7992  0042D6  5D64               	subwf	(??_isspace+2)& (0+255),w,b
  7993  0042D8  A0D8               	btfss	status,0,c
  7994  0042DA  D002               	goto	l6696
  7995  0042DC                     u8400:
  7996                           
  7997                           ; BSR set to: 0
  7998  0042DC  0E00               	movlw	0
  7999  0042DE  6F66               	movwf	_isspace$1952& (0+255),b
  8000  0042E0                     l6696:
  8001                           
  8002                           ; BSR set to: 0
  8003  0042E0  C066  F060         	movff	_isspace$1952,?_isspace
  8004  0042E4  6B61               	clrf	(?_isspace+1)& (0+255),b
  8005                           
  8006                           ; BSR set to: 0
  8007  0042E6  0012               	return		;funcret
  8008  0042E8                     __end_of_isspace:
  8009                           	opt callstack 0
  8010                           
  8011 ;; *************** function _isdigit *****************
  8012 ;; Defined at:
  8013 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  c               2    0[BANK0 ] int 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;		None
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  2    0[BANK0 ] int 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8027 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8029 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8030 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8031 ;;Total ram usage:        6 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; Hardware stack levels required when called:    2
  8034 ;; This function calls:
  8035 ;;		Nothing
  8036 ;; This function is called by:
  8037 ;;		_vfpfcnvrt
  8038 ;;		_atoi
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text30
  8043  004390                     __ptext30:
  8044                           	opt callstack 0
  8045  004390                     _isdigit:
  8046                           	opt callstack 24
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;incstack = 0
  8050  004390  0ED0               	movlw	208
  8051  004392  0100               	movlb	0	; () banked
  8052  004394  6F62               	movwf	??_isdigit& (0+255),b
  8053  004396  0EFF               	movlw	255
  8054  004398  6F63               	movwf	(??_isdigit+1)& (0+255),b
  8055  00439A  C060  F064         	movff	isdigit@c,??_isdigit+2
  8056  00439E  C061  F065         	movff	isdigit@c+1,??_isdigit+3
  8057  0043A2  5162               	movf	??_isdigit& (0+255),w,b
  8058  0043A4  2764               	addwf	(??_isdigit+2)& (0+255),f,b
  8059  0043A6  5163               	movf	(??_isdigit+1)& (0+255),w,b
  8060  0043A8  2365               	addwfc	(??_isdigit+3)& (0+255),f,b
  8061  0043AA  5165               	movf	(??_isdigit+3)& (0+255),w,b
  8062  0043AC  E106               	bnz	u7600
  8063  0043AE  0E0A               	movlw	10
  8064  0043B0  5D64               	subwf	(??_isdigit+2)& (0+255),w,b
  8065  0043B2  B0D8               	btfsc	status,0,c
  8066  0043B4  D002               	goto	u7600
  8067  0043B6  0E01               	movlw	1
  8068  0043B8  D001               	goto	u7610
  8069  0043BA                     u7600:
  8070  0043BA  0E00               	movlw	0
  8071  0043BC                     u7610:
  8072  0043BC  6F60               	movwf	?_isdigit& (0+255),b
  8073  0043BE  6B61               	clrf	(?_isdigit+1)& (0+255),b
  8074                           
  8075                           ; BSR set to: 0
  8076  0043C0  0012               	return		;funcret
  8077  0043C2                     __end_of_isdigit:
  8078                           	opt callstack 0
  8079                           
  8080 ;; *************** function ___wmul *****************
  8081 ;; Defined at:
  8082 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8085 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  product         2    4[BANK0 ] unsigned int 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  2    0[BANK0 ] unsigned int 
  8090 ;; Registers used:
  8091 ;;		wreg, status,2, status,0, prodl, prodh
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8097 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8098 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8100 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8101 ;;Total ram usage:        6 bytes
  8102 ;; Hardware stack levels used:    1
  8103 ;; Hardware stack levels required when called:    2
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_atoi
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text31
  8112  00444C                     __ptext31:
  8113                           	opt callstack 0
  8114  00444C                     ___wmul:
  8115                           	opt callstack 23
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;incstack = 0
  8119  00444C  0100               	movlb	0	; () banked
  8120  00444E  5160               	movf	___wmul@multiplier& (0+255),w,b
  8121  004450  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8122  004452  CFF3 F064          	movff	prodl,___wmul@product
  8123  004456  CFF4 F065          	movff	prodh,___wmul@product+1
  8124  00445A  5160               	movf	___wmul@multiplier& (0+255),w,b
  8125  00445C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8126  00445E  50F3               	movf	prodl,w,c
  8127  004460  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8128  004462  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8129  004464  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8130  004466  50F3               	movf	prodl,w,c
  8131  004468  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8132                           
  8133                           ; BSR set to: 0
  8134  00446A  C064  F060         	movff	___wmul@product,?___wmul
  8135  00446E  C065  F061         	movff	___wmul@product+1,?___wmul+1
  8136                           
  8137                           ; BSR set to: 0
  8138  004472  0012               	return		;funcret
  8139  004474                     __end_of___wmul:
  8140                           	opt callstack 0
  8141                           
  8142 ;; *************** function _estadoDirreccion *****************
  8143 ;; Defined at:
  8144 ;;		line 172 in file "auto.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;  valor           1    wreg     unsigned char 
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;  valor           1    6[BANK0 ] unsigned char 
  8149 ;;  angulo          2    4[BANK0 ] unsigned int 
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  2    0[BANK0 ] unsigned int 
  8152 ;; Registers used:
  8153 ;;		wreg, status,2, status,0
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8159 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8160 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8161 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8162 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8163 ;;Total ram usage:        7 bytes
  8164 ;; Hardware stack levels used:    1
  8165 ;; Hardware stack levels required when called:    2
  8166 ;; This function calls:
  8167 ;;		Nothing
  8168 ;; This function is called by:
  8169 ;;		_terminal
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text32
  8174  003DA6                     __ptext32:
  8175                           	opt callstack 0
  8176  003DA6                     _estadoDirreccion:
  8177                           	opt callstack 27
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;incstack = 0
  8181                           ;estadoDirreccion@valor stored from wreg
  8182  003DA6  0100               	movlb	0	; () banked
  8183  003DA8  6F66               	movwf	estadoDirreccion@valor& (0+255),b
  8184                           
  8185                           ;auto.c: 173:     unsigned int angulo = 90;
  8186  003DAA  0E00               	movlw	0
  8187  003DAC  0100               	movlb	0	; () banked
  8188  003DAE  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
  8189  003DB0  0E5A               	movlw	90
  8190  003DB2  6F64               	movwf	estadoDirreccion@angulo& (0+255),b
  8191                           
  8192                           ;auto.c: 174:     switch(servo_dirreccion){
  8193  003DB4  D023               	goto	l7452
  8194  003DB6                     l7432:
  8195                           
  8196                           ; BSR set to: 0
  8197                           ;auto.c: 176:             if(valor == 1){
  8198  003DB6  0566               	decf	estadoDirreccion@valor& (0+255),w,b
  8199  003DB8  A4D8               	btfss	status,2,c
  8200  003DBA  D006               	goto	l7436
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;auto.c: 177:                 servo_dirreccion = 1;
  8204  003DBC  0E01               	movlw	1
  8205  003DBE  6E42               	movwf	_servo_dirreccion,c
  8206  003DC0                     
  8207                           ;auto.c: 178:                 angulo = 0;
  8208  003DC0  0E00               	movlw	0
  8209  003DC2  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
  8210  003DC4  0E00               	movlw	0
  8211  003DC6  D018               	goto	L13
  8212  003DC8                     l7436:
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;auto.c: 181:                 servo_dirreccion = 2;
  8216  003DC8  0E02               	movlw	2
  8217  003DCA  6E42               	movwf	_servo_dirreccion,c
  8218  003DCC  D012               	goto	l7448
  8219  003DCE                     l7438:
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;auto.c: 186:             if(valor != 1){
  8223  003DCE  0566               	decf	estadoDirreccion@valor& (0+255),w,b
  8224  003DD0  B4D8               	btfsc	status,2,c
  8225  003DD2  D7F6               	goto	L14
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;auto.c: 187:                 servo_dirreccion = 0;
  8229  003DD4  0E00               	movlw	0
  8230  003DD6  6E42               	movwf	_servo_dirreccion,c
  8231                           
  8232                           ;auto.c: 188:                 angulo = 90;
  8233  003DD8  0E00               	movlw	0
  8234  003DDA  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
  8235  003DDC  0E5A               	movlw	90
  8236  003DDE  D00C               	goto	L13
  8237  003DE0                     l7444:
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;auto.c: 195:             if(valor == 1){
  8241  003DE0  0566               	decf	estadoDirreccion@valor& (0+255),w,b
  8242  003DE2  A4D8               	btfss	status,2,c
  8243  003DE4  D006               	goto	l7448
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;auto.c: 196:                 servo_dirreccion = 0;
  8247  003DE6  0E00               	movlw	0
  8248  003DE8  6E42               	movwf	_servo_dirreccion,c
  8249                           
  8250                           ;auto.c: 197:                 angulo = 85;
  8251  003DEA  0E00               	movlw	0
  8252  003DEC  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
  8253  003DEE  0E55               	movlw	85
  8254  003DF0  D003               	goto	L13
  8255  003DF2                     l7448:
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;auto.c: 200:                 angulo = 180;
  8259  003DF2  0E00               	movlw	0
  8260  003DF4  6F65               	movwf	(estadoDirreccion@angulo+1)& (0+255),b
  8261  003DF6  0EB4               	movlw	180
  8262  003DF8                     L13:
  8263  003DF8  6F64               	movwf	estadoDirreccion@angulo& (0+255),b
  8264  003DFA  D011               	goto	l252
  8265  003DFC                     l7452:
  8266                           
  8267                           ; BSR set to: 0
  8268  003DFC  5042               	movf	_servo_dirreccion,w,c
  8269  003DFE  6F62               	movwf	??_estadoDirreccion& (0+255),b
  8270  003E00  6B63               	clrf	(??_estadoDirreccion+1)& (0+255),b
  8271                           
  8272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8273                           ; Switch size 1, requested type "simple"
  8274                           ; Number of cases is 1, Range of values is 0 to 0
  8275                           ; switch strategies available:
  8276                           ; Name         Instructions Cycles
  8277                           ; simple_byte            4     3 (average)
  8278                           ;	Chosen strategy is simple_byte
  8279  003E02  5163               	movf	(??_estadoDirreccion+1)& (0+255),w,b
  8280  003E04  0A00               	xorlw	0	; case 0
  8281  003E06  A4D8               	btfss	status,2,c
  8282  003E08  D00A               	goto	l252
  8283                           
  8284                           ; BSR set to: 0
  8285                           ; Switch size 1, requested type "simple"
  8286                           ; Number of cases is 3, Range of values is 0 to 2
  8287                           ; switch strategies available:
  8288                           ; Name         Instructions Cycles
  8289                           ; simple_byte           10     6 (average)
  8290                           ;	Chosen strategy is simple_byte
  8291  003E0A  5162               	movf	??_estadoDirreccion& (0+255),w,b
  8292  003E0C  0A00               	xorlw	0	; case 0
  8293  003E0E  B4D8               	btfsc	status,2,c
  8294  003E10  D7D2               	goto	l7432
  8295  003E12  0A01               	xorlw	1	; case 1
  8296  003E14  B4D8               	btfsc	status,2,c
  8297  003E16  D7DB               	goto	l7438
  8298  003E18  0A03               	xorlw	3	; case 2
  8299  003E1A  B4D8               	btfsc	status,2,c
  8300  003E1C  D7E1               	goto	l7444
  8301  003E1E                     l252:
  8302                           
  8303                           ; BSR set to: 0
  8304                           ;auto.c: 212:     return angulo;
  8305  003E1E  C064  F060         	movff	estadoDirreccion@angulo,?_estadoDirreccion
  8306  003E22  C065  F061         	movff	estadoDirreccion@angulo+1,?_estadoDirreccion+1
  8307                           
  8308                           ; BSR set to: 0
  8309  003E26  0012               	return		;funcret
  8310  003E28                     __end_of_estadoDirreccion:
  8311                           	opt callstack 0
  8312                           
  8313 ;; *************** function _dirreccion *****************
  8314 ;; Defined at:
  8315 ;;		line 215 in file "auto.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  degree          2    0[BANK0 ] unsigned int 
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  tiempo_1        1    4[BANK0 ] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2, status,0
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8333 ;;Total ram usage:        5 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:    2
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_terminal
  8340 ;;		_cambiarEstadoEscapeFuego
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	text33
  8345  003C14                     __ptext33:
  8346                           	opt callstack 0
  8347  003C14                     _dirreccion:
  8348                           	opt callstack 27
  8349                           
  8350                           ;auto.c: 216:     unsigned char tiempo_1 = 61;
  8351                           
  8352                           ; BSR set to: 0
  8353                           ;incstack = 0
  8354  003C14  0E3D               	movlw	61
  8355  003C16  0100               	movlb	0	; () banked
  8356  003C18  6F64               	movwf	dirreccion@tiempo_1& (0+255),b
  8357                           
  8358                           ;auto.c: 217:     contador_timer_5 = 0;
  8359  003C1A  0E00               	movlw	0
  8360  003C1C  6E3D               	movwf	_contador_timer_5+1,c
  8361  003C1E  0E00               	movlw	0
  8362  003C20  6E3C               	movwf	_contador_timer_5,c
  8363                           
  8364                           ;auto.c: 218:     parar = 0;
  8365  003C22  0E00               	movlw	0
  8366  003C24  6E3F               	movwf	_parar+1,c
  8367  003C26  0E00               	movlw	0
  8368  003C28  6E3E               	movwf	_parar,c
  8369                           
  8370                           ;auto.c: 219:     switch(degree){
  8371  003C2A  D009               	goto	l7470
  8372  003C2C                     l7460:
  8373                           
  8374                           ; BSR set to: 0
  8375                           ;auto.c: 221:             tiempo_1 = 60;
  8376  003C2C  0E3C               	movlw	60
  8377  003C2E  D005               	goto	L17
  8378  003C30                     l7462:
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;auto.c: 224:             tiempo_1 = 57;
  8382  003C30  0E39               	movlw	57
  8383  003C32  D003               	goto	L17
  8384  003C34                     l7464:
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;auto.c: 227:             tiempo_1 = 67;
  8388  003C34  0E43               	movlw	67
  8389  003C36  D001               	goto	L17
  8390  003C38                     l7466:
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;auto.c: 230:             tiempo_1 = 50;
  8394  003C38  0E32               	movlw	50
  8395  003C3A                     L17:
  8396  003C3A  6F64               	movwf	dirreccion@tiempo_1& (0+255),b
  8397                           
  8398                           ;auto.c: 231:             break;
  8399  003C3C  D015               	goto	l264
  8400  003C3E                     l7470:
  8401                           
  8402                           ; BSR set to: 0
  8403  003C3E  C060  F062         	movff	dirreccion@degree,??_dirreccion
  8404  003C42  C061  F063         	movff	dirreccion@degree+1,??_dirreccion+1
  8405                           
  8406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8407                           ; Switch size 1, requested type "simple"
  8408                           ; Number of cases is 1, Range of values is 0 to 0
  8409                           ; switch strategies available:
  8410                           ; Name         Instructions Cycles
  8411                           ; simple_byte            4     3 (average)
  8412                           ;	Chosen strategy is simple_byte
  8413  003C46  5163               	movf	(??_dirreccion+1)& (0+255),w,b
  8414  003C48  0A00               	xorlw	0	; case 0
  8415  003C4A  A4D8               	btfss	status,2,c
  8416  003C4C  D00D               	goto	l264
  8417                           
  8418                           ; BSR set to: 0
  8419                           ; Switch size 1, requested type "simple"
  8420                           ; Number of cases is 4, Range of values is 0 to 180
  8421                           ; switch strategies available:
  8422                           ; Name         Instructions Cycles
  8423                           ; simple_byte           13     7 (average)
  8424                           ;	Chosen strategy is simple_byte
  8425  003C4E  5162               	movf	??_dirreccion& (0+255),w,b
  8426  003C50  0A00               	xorlw	0	; case 0
  8427  003C52  B4D8               	btfsc	status,2,c
  8428  003C54  D7EF               	goto	l7464
  8429  003C56  0A55               	xorlw	85	; case 85
  8430  003C58  B4D8               	btfsc	status,2,c
  8431  003C5A  D7E8               	goto	l7460
  8432  003C5C  0A0F               	xorlw	15	; case 90
  8433  003C5E  B4D8               	btfsc	status,2,c
  8434  003C60  D7E7               	goto	l7462
  8435  003C62  0AEE               	xorlw	238	; case 180
  8436  003C64  B4D8               	btfsc	status,2,c
  8437  003C66  D7E8               	goto	l7466
  8438  003C68                     l264:
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;auto.c: 233:     if(PORTDbits.RD4 != 1){
  8442  003C68  B883               	btfsc	3971,4,c	;volatile
  8443  003C6A  D005               	goto	l7474
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;auto.c: 234:         TIME_MAX = tiempo_1;
  8447  003C6C  C064  F047         	movff	dirreccion@tiempo_1,_TIME_MAX
  8448  003C70  6A48               	clrf	_TIME_MAX+1,c
  8449                           
  8450                           ;auto.c: 235:         PORTDbits.RD4 = 1;
  8451  003C72  8883               	bsf	3971,4,c	;volatile
  8452                           
  8453                           ;auto.c: 236:     }
  8454  003C74  D009               	goto	l7478
  8455  003C76                     l7474:
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;auto.c: 238:         TIME_MAX = 1000 - tiempo_1;
  8459  003C76  5164               	movf	dirreccion@tiempo_1& (0+255),w,b
  8460  003C78  08E8               	sublw	232
  8461  003C7A  6E47               	movwf	_TIME_MAX,c
  8462  003C7C  0E00               	movlw	0
  8463  003C7E  A0D8               	btfss	status,0,c
  8464  003C80  2AE8               	incf	wreg,f,c
  8465  003C82  0803               	sublw	3
  8466  003C84  6E48               	movwf	_TIME_MAX+1,c
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;auto.c: 239:         PORTDbits.RD4 = 0;
  8470  003C86  9883               	bcf	3971,4,c	;volatile
  8471  003C88                     l7478:
  8472                           
  8473                           ; BSR set to: 0
  8474                           ;auto.c: 241:     contador_timer_5 = 0;
  8475  003C88  0E00               	movlw	0
  8476  003C8A  6E3D               	movwf	_contador_timer_5+1,c
  8477  003C8C  0E00               	movlw	0
  8478  003C8E  6E3C               	movwf	_contador_timer_5,c
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;auto.c: 242:     bandera_servo = 0;
  8482  003C90  0E00               	movlw	0
  8483  003C92  0101               	movlb	1	; () banked
  8484  003C94  6F20               	movwf	_bandera_servo& (0+255),b
  8485                           
  8486                           ; BSR set to: 1
  8487                           ;auto.c: 243:     T5CONbits.TMR5ON = 1;
  8488  003C96  010F               	movlb	15	; () banked
  8489  003C98  8122               	bsf	34,0,b	;volatile
  8490                           
  8491                           ; BSR set to: 15
  8492  003C9A  0012               	return		;funcret
  8493  003C9C                     __end_of_dirreccion:
  8494                           	opt callstack 0
  8495                           
  8496 ;; *************** function _cambiarPWM *****************
  8497 ;; Defined at:
  8498 ;;		line 166 in file "auto.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;		None
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;		None
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  1    wreg      void 
  8505 ;; Registers used:
  8506 ;;		wreg, status,2, status,0, cstack
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8516 ;;Total ram usage:        0 bytes
  8517 ;; Hardware stack levels used:    1
  8518 ;; Hardware stack levels required when called:    3
  8519 ;; This function calls:
  8520 ;;		_definirVelocidad
  8521 ;; This function is called by:
  8522 ;;		_terminal
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526                           	psect	text34
  8527  00453E                     __ptext34:
  8528                           	opt callstack 0
  8529  00453E                     _cambiarPWM:
  8530                           	opt callstack 26
  8531                           
  8532                           ;auto.c: 167:     if(motor == 1){
  8533                           
  8534                           ; BSR set to: 15
  8535                           ;incstack = 0
  8536  00453E  0444               	decf	_motor,w,c
  8537  004540  A4D8               	btfss	status,2,c
  8538  004542  0012               	return	
  8539                           
  8540                           ;auto.c: 168:         definirVelocidad();
  8541  004544  EC92  F021         	call	_definirVelocidad	;wreg free
  8542  004548  0012               	return		;funcret
  8543  00454A                     __end_of_cambiarPWM:
  8544                           	opt callstack 0
  8545                           
  8546 ;; *************** function _rutinaEscape *****************
  8547 ;; Defined at:
  8548 ;;		line 279 in file "auto.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;  type            1    wreg     unsigned char 
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;  type            1   66[BANK0 ] unsigned char 
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1    wreg      void 
  8555 ;; Registers used:
  8556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8563 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8564 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8565 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8566 ;;Total ram usage:        3 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; Hardware stack levels required when called:    4
  8569 ;; This function calls:
  8570 ;;		_adelante
  8571 ;;		_atras
  8572 ;;		_definirVelocidad
  8573 ;;		_encenderMotor
  8574 ;;		_enviarRS232
  8575 ;;		_fijarVelocidad
  8576 ;;		_frenarMotor
  8577 ;; This function is called by:
  8578 ;;		_main
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           	psect	text35
  8583  003F8C                     __ptext35:
  8584                           	opt callstack 0
  8585  003F8C                     _rutinaEscape:
  8586                           	opt callstack 26
  8587                           
  8588                           ;incstack = 0
  8589                           ;rutinaEscape@type stored from wreg
  8590  003F8C  0100               	movlb	0	; () banked
  8591  003F8E  6FA2               	movwf	rutinaEscape@type& (0+255),b
  8592                           
  8593                           ;auto.c: 280:     frenarMotor();
  8594  003F90  EC81  F022         	call	_frenarMotor	;wreg free
  8595                           
  8596                           ;auto.c: 281:     switch(type){
  8597  003F94  D023               	goto	l7584
  8598  003F96                     l7566:
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;auto.c: 287:             fijarVelocidad(0);
  8602  003F96  0E00               	movlw	0
  8603  003F98  EC15  F01A         	call	_fijarVelocidad
  8604                           
  8605                           ;auto.c: 288:             atras();
  8606  003F9C  ECA5  F022         	call	_atras	;wreg free
  8607                           
  8608                           ;auto.c: 289:             encenderMotor();
  8609  003FA0  EC91  F022         	call	_encenderMotor	;wreg free
  8610                           
  8611                           ;auto.c: 290:             _delay((unsigned long)((1000)*(48000000/4000.0)));
  8612  003FA4  0E3D               	movlw	61
  8613  003FA6  0100               	movlb	0	; () banked
  8614  003FA8  6FA1               	movwf	(??_rutinaEscape+1)& (0+255),b
  8615  003FAA  0EE1               	movlw	225
  8616  003FAC  6FA0               	movwf	??_rutinaEscape& (0+255),b
  8617  003FAE  0E3F               	movlw	63
  8618  003FB0                     u9687:
  8619  003FB0  2EE8               	decfsz	wreg,f,c
  8620  003FB2  D7FE               	bra	u9687
  8621  003FB4  2FA0               	decfsz	??_rutinaEscape& (0+255),f,b
  8622  003FB6  D7FC               	bra	u9687
  8623  003FB8  2FA1               	decfsz	(??_rutinaEscape+1)& (0+255),f,b
  8624  003FBA  D7FA               	bra	u9687
  8625  003FBC  D000               	nop2	
  8626                           
  8627                           ;auto.c: 291:             adelante();
  8628  003FBE  ECAA  F022         	call	_adelante	;wreg free
  8629                           
  8630                           ;auto.c: 292:             enviarRS232("Girando");
  8631  003FC2  0E81               	movlw	low STR_5
  8632  003FC4  0100               	movlb	0	; () banked
  8633  003FC6  6F68               	movwf	enviarRS232@valores& (0+255),b
  8634  003FC8  0E0F               	movlw	high STR_5
  8635  003FCA  6F69               	movwf	(enviarRS232@valores+1)& (0+255),b
  8636  003FCC  EC52  F01F         	call	_enviarRS232	;wreg free
  8637                           
  8638                           ;auto.c: 293:             fijarVelocidad(50);
  8639  003FD0  0E32               	movlw	50
  8640  003FD2  EC15  F01A         	call	_fijarVelocidad
  8641                           
  8642                           ;auto.c: 294:             definirVelocidad();
  8643  003FD6  EC92  F021         	call	_definirVelocidad	;wreg free
  8644                           
  8645                           ;auto.c: 295:             break;
  8646  003FDA  0012               	return	
  8647  003FDC                     l7584:
  8648  003FDC  0100               	movlb	0	; () banked
  8649  003FDE  51A2               	movf	rutinaEscape@type& (0+255),w,b
  8650  003FE0  6FA0               	movwf	??_rutinaEscape& (0+255),b
  8651  003FE2  6BA1               	clrf	(??_rutinaEscape+1)& (0+255),b
  8652                           
  8653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8654                           ; Switch size 1, requested type "simple"
  8655                           ; Number of cases is 1, Range of values is 0 to 0
  8656                           ; switch strategies available:
  8657                           ; Name         Instructions Cycles
  8658                           ; simple_byte            4     3 (average)
  8659                           ;	Chosen strategy is simple_byte
  8660  003FE4  51A1               	movf	(??_rutinaEscape+1)& (0+255),w,b
  8661  003FE6  0A00               	xorlw	0	; case 0
  8662  003FE8  A4D8               	btfss	status,2,c
  8663  003FEA  0012               	return	
  8664                           
  8665                           ; BSR set to: 0
  8666                           ; Switch size 1, requested type "simple"
  8667                           ; Number of cases is 2, Range of values is 1 to 2
  8668                           ; switch strategies available:
  8669                           ; Name         Instructions Cycles
  8670                           ; simple_byte            7     4 (average)
  8671                           ;	Chosen strategy is simple_byte
  8672  003FEC  51A0               	movf	??_rutinaEscape& (0+255),w,b
  8673  003FEE  0A01               	xorlw	1	; case 1
  8674  003FF0  B4D8               	btfsc	status,2,c
  8675  003FF2  0012               	return	
  8676  003FF4  0A03               	xorlw	3	; case 2
  8677  003FF6  A4D8               	btfss	status,2,c
  8678  003FF8  0012               	return	
  8679  003FFA  D7CD               	goto	l7566
  8680  003FFC                     __end_of_rutinaEscape:
  8681                           	opt callstack 0
  8682                           
  8683 ;; *************** function _frenarMotor *****************
  8684 ;; Defined at:
  8685 ;;		line 46 in file "./../LIBRERIAS/funciones_auto.h"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg, status,2
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8703 ;;Total ram usage:        0 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:    2
  8706 ;; This function calls:
  8707 ;;		Nothing
  8708 ;; This function is called by:
  8709 ;;		_terminal
  8710 ;;		_rutinaEscape
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text36
  8715  004502                     __ptext36:
  8716                           	opt callstack 0
  8717  004502                     _frenarMotor:
  8718                           	opt callstack 27
  8719                           
  8720                           ;./../LIBRERIAS/funciones_auto.h: 47:     CCP7CONbits.DC7B = 0b00;
  8721                           
  8722                           ;incstack = 0
  8723  004502  0ECF               	movlw	-49
  8724  004504  010F               	movlb	15	; () banked
  8725  004506  1709               	andwf	9,f,b	;volatile
  8726                           
  8727                           ;./../LIBRERIAS/funciones_auto.h: 48:     CCPR7L = 0x00;
  8728  004508  0E00               	movlw	0
  8729  00450A  6F0A               	movwf	10,b	;volatile
  8730                           
  8731                           ;./../LIBRERIAS/funciones_auto.h: 49:     motor = 0;
  8732  00450C  0E00               	movlw	0
  8733  00450E  6E44               	movwf	_motor,c
  8734                           
  8735                           ; BSR set to: 15
  8736  004510  0012               	return		;funcret
  8737  004512                     __end_of_frenarMotor:
  8738                           	opt callstack 0
  8739                           
  8740 ;; *************** function _fijarVelocidad *****************
  8741 ;; Defined at:
  8742 ;;		line 30 in file "./../LIBRERIAS/funciones_auto.h"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;  speed           1    wreg     unsigned char 
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;  speed           1   63[BANK0 ] unsigned char 
  8747 ;;  DC              4   55[BANK0 ] float 
  8748 ;; Return value:  Size  Location     Type
  8749 ;;                  1    wreg      void 
  8750 ;; Registers used:
  8751 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8758 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8760 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8761 ;;Total ram usage:        9 bytes
  8762 ;; Hardware stack levels used:    1
  8763 ;; Hardware stack levels required when called:    3
  8764 ;; This function calls:
  8765 ;;		___fladd
  8766 ;;		___flmul
  8767 ;;		___fltol
  8768 ;;		___xxtofl
  8769 ;; This function is called by:
  8770 ;;		_terminal
  8771 ;;		_rutinaEscape
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           	psect	text37
  8776  00342A                     __ptext37:
  8777                           	opt callstack 0
  8778  00342A                     _fijarVelocidad:
  8779                           	opt callstack 26
  8780                           
  8781                           ; BSR set to: 15
  8782                           ;incstack = 0
  8783                           ;fijarVelocidad@speed stored from wreg
  8784  00342A  0100               	movlb	0	; () banked
  8785  00342C  6F9F               	movwf	fijarVelocidad@speed& (0+255),b
  8786                           
  8787                           ;./../LIBRERIAS/funciones_auto.h: 31:     float DC = 0.006 * speed + 0.6;
  8788  00342E  0EA6               	movlw	166
  8789  003430  0100               	movlb	0	; () banked
  8790  003432  6F72               	movwf	___flmul@a& (0+255),b
  8791  003434  0E9B               	movlw	155
  8792  003436  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8793  003438  0EC4               	movlw	196
  8794  00343A  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8795  00343C  0E3B               	movlw	59
  8796  00343E  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8797  003440  519F               	movf	fijarVelocidad@speed& (0+255),w,b
  8798  003442  6F60               	movwf	___xxtofl@val& (0+255),b
  8799  003444  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
  8800  003446  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  8801  003448  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  8802  00344A  0E01               	movlw	1
  8803  00344C  ECD3  F018         	call	___xxtofl
  8804  003450  C060  F06E         	movff	?___xxtofl,___flmul@b
  8805  003454  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  8806  003458  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  8807  00345C  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  8808  003460  ECC5  F00F         	call	___flmul	;wreg free
  8809  003464  C06E  F087         	movff	?___flmul,___fladd@b
  8810  003468  C06F  F088         	movff	?___flmul+1,___fladd@b+1
  8811  00346C  C070  F089         	movff	?___flmul+2,___fladd@b+2
  8812  003470  C071  F08A         	movff	?___flmul+3,___fladd@b+3
  8813  003474  0E9A               	movlw	154
  8814  003476  0100               	movlb	0	; () banked
  8815  003478  6F8B               	movwf	___fladd@a& (0+255),b
  8816  00347A  0E99               	movlw	153
  8817  00347C  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  8818  00347E  0E19               	movlw	25
  8819  003480  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  8820  003482  0E3F               	movlw	63
  8821  003484  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  8822  003486  EC6F  F011         	call	___fladd	;wreg free
  8823  00348A  C087  F097         	movff	?___fladd,fijarVelocidad@DC
  8824  00348E  C088  F098         	movff	?___fladd+1,fijarVelocidad@DC+1
  8825  003492  C089  F099         	movff	?___fladd+2,fijarVelocidad@DC+2
  8826  003496  C08A  F09A         	movff	?___fladd+3,fijarVelocidad@DC+3
  8827                           
  8828                           ;./../LIBRERIAS/funciones_auto.h: 32:     velocidad = 4 * DC * 125;
  8829  00349A  0E00               	movlw	0
  8830  00349C  0100               	movlb	0	; () banked
  8831  00349E  6F72               	movwf	___flmul@a& (0+255),b
  8832  0034A0  0E00               	movlw	0
  8833  0034A2  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8834  0034A4  0E80               	movlw	128
  8835  0034A6  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8836  0034A8  0E40               	movlw	64
  8837  0034AA  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8838  0034AC  C097  F06E         	movff	fijarVelocidad@DC,___flmul@b
  8839  0034B0  C098  F06F         	movff	fijarVelocidad@DC+1,___flmul@b+1
  8840  0034B4  C099  F070         	movff	fijarVelocidad@DC+2,___flmul@b+2
  8841  0034B8  C09A  F071         	movff	fijarVelocidad@DC+3,___flmul@b+3
  8842  0034BC  ECC5  F00F         	call	___flmul	;wreg free
  8843  0034C0  C06E  F09B         	movff	?___flmul,_fijarVelocidad$2262
  8844  0034C4  C06F  F09C         	movff	?___flmul+1,_fijarVelocidad$2262+1
  8845  0034C8  C070  F09D         	movff	?___flmul+2,_fijarVelocidad$2262+2
  8846  0034CC  C071  F09E         	movff	?___flmul+3,_fijarVelocidad$2262+3
  8847                           
  8848                           ;./../LIBRERIAS/funciones_auto.h: 32:     velocidad = 4 * DC * 125;
  8849  0034D0  0E00               	movlw	0
  8850  0034D2  0100               	movlb	0	; () banked
  8851  0034D4  6F72               	movwf	___flmul@a& (0+255),b
  8852  0034D6  0E00               	movlw	0
  8853  0034D8  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8854  0034DA  0EFA               	movlw	250
  8855  0034DC  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8856  0034DE  0E42               	movlw	66
  8857  0034E0  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8858  0034E2  C09B  F06E         	movff	_fijarVelocidad$2262,___flmul@b
  8859  0034E6  C09C  F06F         	movff	_fijarVelocidad$2262+1,___flmul@b+1
  8860  0034EA  C09D  F070         	movff	_fijarVelocidad$2262+2,___flmul@b+2
  8861  0034EE  C09E  F071         	movff	_fijarVelocidad$2262+3,___flmul@b+3
  8862  0034F2  ECC5  F00F         	call	___flmul	;wreg free
  8863  0034F6  C06E  F087         	movff	?___flmul,___fltol@f1
  8864  0034FA  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  8865  0034FE  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  8866  003502  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  8867  003506  ECC2  F01B         	call	___fltol	;wreg free
  8868  00350A  C087  F049         	movff	?___fltol,_velocidad
  8869  00350E  C088  F04A         	movff	?___fltol+1,_velocidad+1
  8870  003512  0012               	return		;funcret
  8871  003514                     __end_of_fijarVelocidad:
  8872                           	opt callstack 0
  8873                           
  8874 ;; *************** function ___xxtofl *****************
  8875 ;; Defined at:
  8876 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;  sign            1    wreg     unsigned char 
  8879 ;;  val             4    0[BANK0 ] long 
  8880 ;; Auto vars:     Size  Location     Type
  8881 ;;  sign            1    8[BANK0 ] unsigned char 
  8882 ;;  arg             4   10[BANK0 ] unsigned long 
  8883 ;;  exp             1    9[BANK0 ] unsigned char 
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  4    0[BANK0 ] unsigned char 
  8886 ;; Registers used:
  8887 ;;		wreg, status,2, status,0
  8888 ;; Tracked objects:
  8889 ;;		On entry : 0/0
  8890 ;;		On exit  : 0/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8893 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8894 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8896 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8897 ;;Total ram usage:       14 bytes
  8898 ;; Hardware stack levels used:    1
  8899 ;; Hardware stack levels required when called:    2
  8900 ;; This function calls:
  8901 ;;		Nothing
  8902 ;; This function is called by:
  8903 ;;		_fijarVelocidad
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907                           	psect	text38
  8908  0031A6                     __ptext38:
  8909                           	opt callstack 0
  8910  0031A6                     ___xxtofl:
  8911                           	opt callstack 26
  8912                           
  8913                           ;incstack = 0
  8914                           ;___xxtofl@sign stored from wreg
  8915  0031A6  0100               	movlb	0	; () banked
  8916  0031A8  6F68               	movwf	___xxtofl@sign& (0+255),b
  8917  0031AA  0100               	movlb	0	; () banked
  8918  0031AC  5168               	movf	___xxtofl@sign& (0+255),w,b
  8919  0031AE  A4D8               	btfss	status,2,c
  8920                           
  8921                           ; BSR set to: 0
  8922  0031B0  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8923  0031B2  D01A               	goto	l1175
  8924                           
  8925                           ; BSR set to: 0
  8926  0031B4  C060  F064         	movff	___xxtofl@val,??___xxtofl
  8927  0031B8  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  8928  0031BC  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  8929  0031C0  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  8930  0031C4  1F64               	comf	??___xxtofl& (0+255),f,b
  8931  0031C6  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  8932  0031C8  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  8933  0031CA  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  8934  0031CC  2B64               	incf	??___xxtofl& (0+255),f,b
  8935  0031CE  0E00               	movlw	0
  8936  0031D0  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  8937  0031D2  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  8938  0031D4  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  8939  0031D6  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  8940  0031DA  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  8941  0031DE  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  8942  0031E2  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  8943  0031E6  D008               	goto	l7310
  8944  0031E8                     l1175:
  8945                           
  8946                           ; BSR set to: 0
  8947  0031E8  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  8948  0031EC  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8949  0031F0  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8950  0031F4  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8951  0031F8                     l7310:
  8952                           
  8953                           ; BSR set to: 0
  8954  0031F8  5160               	movf	___xxtofl@val& (0+255),w,b
  8955  0031FA  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  8956  0031FC  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  8957  0031FE  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  8958  003200  A4D8               	btfss	status,2,c
  8959  003202  D009               	goto	l7316
  8960                           
  8961                           ; BSR set to: 0
  8962  003204  0E00               	movlw	0
  8963  003206  6F60               	movwf	?___xxtofl& (0+255),b
  8964  003208  0E00               	movlw	0
  8965  00320A  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  8966  00320C  0E00               	movlw	0
  8967  00320E  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  8968  003210  0E00               	movlw	0
  8969  003212  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  8970  003214  0012               	return	
  8971  003216                     l7316:
  8972                           
  8973                           ; BSR set to: 0
  8974  003216  0E96               	movlw	150
  8975  003218  6F69               	movwf	___xxtofl@exp& (0+255),b
  8976  00321A  D006               	goto	l7320
  8977  00321C                     l7318:
  8978                           
  8979                           ; BSR set to: 0
  8980  00321C  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8981  00321E  90D8               	bcf	status,0,c
  8982  003220  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8983  003222  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8984  003224  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8985  003226  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  8986  003228                     l7320:
  8987                           
  8988                           ; BSR set to: 0
  8989  003228  0E00               	movlw	0
  8990  00322A  156A               	andwf	___xxtofl@arg& (0+255),w,b
  8991  00322C  6F64               	movwf	??___xxtofl& (0+255),b
  8992  00322E  0E00               	movlw	0
  8993  003230  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8994  003232  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  8995  003234  0E00               	movlw	0
  8996  003236  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8997  003238  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  8998  00323A  0EFE               	movlw	254
  8999  00323C  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9000  00323E  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  9001  003240  5164               	movf	??___xxtofl& (0+255),w,b
  9002  003242  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9003  003244  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9004  003246  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9005  003248  B4D8               	btfsc	status,2,c
  9006  00324A  D00D               	goto	l1182
  9007  00324C  D7E7               	goto	l7318
  9008  00324E                     l7322:
  9009                           
  9010                           ; BSR set to: 0
  9011  00324E  2B69               	incf	___xxtofl@exp& (0+255),f,b
  9012                           
  9013                           ; BSR set to: 0
  9014  003250  0E01               	movlw	1
  9015  003252  276A               	addwf	___xxtofl@arg& (0+255),f,b
  9016  003254  0E00               	movlw	0
  9017  003256  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  9018  003258  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9019  00325A  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9020                           
  9021                           ; BSR set to: 0
  9022  00325C  90D8               	bcf	status,0,c
  9023  00325E  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9024  003260  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9025  003262  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9026  003264  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  9027  003266                     l1182:
  9028                           
  9029                           ; BSR set to: 0
  9030  003266  0E00               	movlw	0
  9031  003268  156A               	andwf	___xxtofl@arg& (0+255),w,b
  9032  00326A  6F64               	movwf	??___xxtofl& (0+255),b
  9033  00326C  0E00               	movlw	0
  9034  00326E  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9035  003270  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  9036  003272  0E00               	movlw	0
  9037  003274  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9038  003276  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  9039  003278  0EFF               	movlw	255
  9040  00327A  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9041  00327C  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  9042  00327E  5164               	movf	??___xxtofl& (0+255),w,b
  9043  003280  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9044  003282  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9045  003284  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9046  003286  B4D8               	btfsc	status,2,c
  9047  003288  D007               	goto	l7330
  9048  00328A  D7E1               	goto	l7322
  9049  00328C                     l7328:
  9050                           
  9051                           ; BSR set to: 0
  9052  00328C  0769               	decf	___xxtofl@exp& (0+255),f,b
  9053  00328E  90D8               	bcf	status,0,c
  9054  003290  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  9055  003292  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9056  003294  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9057  003296  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9058  003298                     l7330:
  9059                           
  9060                           ; BSR set to: 0
  9061  003298  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9062  00329A  D003               	goto	u9460
  9063                           
  9064                           ; BSR set to: 0
  9065  00329C  0E02               	movlw	2
  9066  00329E  6169               	cpfslt	___xxtofl@exp& (0+255),b
  9067  0032A0  D7F5               	goto	l7328
  9068  0032A2                     u9460:
  9069                           
  9070                           ; BSR set to: 0
  9071  0032A2  A169               	btfss	___xxtofl@exp& (0+255),0,b
  9072                           
  9073                           ; BSR set to: 0
  9074  0032A4  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  9075                           
  9076                           ; BSR set to: 0
  9077  0032A6  90D8               	bcf	status,0,c
  9078  0032A8  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  9079                           
  9080                           ; BSR set to: 0
  9081  0032AA  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  9082  0032AE  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  9083  0032B0  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  9084  0032B2  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  9085  0032B4  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  9086  0032B8  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  9087  0032BA  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  9088  0032BC  6B64               	clrf	??___xxtofl& (0+255),b
  9089  0032BE  5164               	movf	??___xxtofl& (0+255),w,b
  9090  0032C0  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  9091  0032C2  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  9092  0032C4  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  9093  0032C6  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  9094  0032C8  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  9095  0032CA  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  9096  0032CC  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  9097                           
  9098                           ; BSR set to: 0
  9099  0032CE  5168               	movf	___xxtofl@sign& (0+255),w,b
  9100  0032D0  A4D8               	btfss	status,2,c
  9101                           
  9102                           ; BSR set to: 0
  9103  0032D2  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9104  0032D4  D001               	goto	l7346
  9105                           
  9106                           ; BSR set to: 0
  9107  0032D6  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  9108  0032D8                     l7346:
  9109                           
  9110                           ; BSR set to: 0
  9111  0032D8  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  9112  0032DC  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  9113  0032E0  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  9114  0032E4  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  9115                           
  9116                           ; BSR set to: 0
  9117  0032E8  0012               	return		;funcret
  9118  0032EA                     __end_of___xxtofl:
  9119                           	opt callstack 0
  9120                           
  9121 ;; *************** function ___fltol *****************
  9122 ;; Defined at:
  9123 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  f1              4   39[BANK0 ] unsigned char 
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;  exp1            1   48[BANK0 ] unsigned char 
  9128 ;;  sign1           1   47[BANK0 ] unsigned char 
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  4   39[BANK0 ] long 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2, status,0
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9139 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9141 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9142 ;;Total ram usage:       10 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; Hardware stack levels required when called:    2
  9145 ;; This function calls:
  9146 ;;		Nothing
  9147 ;; This function is called by:
  9148 ;;		_fijarVelocidad
  9149 ;;		_efgtoa
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153                           	psect	text39
  9154  003784                     __ptext39:
  9155                           	opt callstack 0
  9156  003784                     ___fltol:
  9157                           	opt callstack 23
  9158                           
  9159                           ; BSR set to: 0
  9160                           ;incstack = 0
  9161  003784  0100               	movlb	0	; () banked
  9162  003786  3589               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9163  003788  358A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9164  00378A  6F90               	movwf	___fltol@exp1& (0+255),b
  9165  00378C  5190               	movf	___fltol@exp1& (0+255),w,b
  9166  00378E  A4D8               	btfss	status,2,c
  9167  003790  D009               	goto	l6612
  9168  003792                     u8250:
  9169                           
  9170                           ; BSR set to: 0
  9171  003792  0E00               	movlw	0
  9172  003794  6F87               	movwf	?___fltol& (0+255),b
  9173  003796  0E00               	movlw	0
  9174  003798  6F88               	movwf	(?___fltol+1)& (0+255),b
  9175  00379A  0E00               	movlw	0
  9176  00379C  6F89               	movwf	(?___fltol+2)& (0+255),b
  9177  00379E  0E00               	movlw	0
  9178  0037A0  6F8A               	movwf	(?___fltol+3)& (0+255),b
  9179  0037A2  0012               	return	
  9180  0037A4                     l6612:
  9181                           
  9182                           ; BSR set to: 0
  9183  0037A4  C087  F08B         	movff	___fltol@f1,??___fltol
  9184  0037A8  C088  F08C         	movff	___fltol@f1+1,??___fltol+1
  9185  0037AC  C089  F08D         	movff	___fltol@f1+2,??___fltol+2
  9186  0037B0  C08A  F08E         	movff	___fltol@f1+3,??___fltol+3
  9187  0037B4  0E20               	movlw	32
  9188  0037B6  D005               	goto	u8260
  9189  0037B8                     u8265:
  9190  0037B8  90D8               	bcf	status,0,c
  9191  0037BA  338E               	rrcf	(??___fltol+3)& (0+255),f,b
  9192  0037BC  338D               	rrcf	(??___fltol+2)& (0+255),f,b
  9193  0037BE  338C               	rrcf	(??___fltol+1)& (0+255),f,b
  9194  0037C0  338B               	rrcf	??___fltol& (0+255),f,b
  9195  0037C2                     u8260:
  9196  0037C2  2EE8               	decfsz	wreg,f,c
  9197  0037C4  D7F9               	goto	u8265
  9198  0037C6  518B               	movf	??___fltol& (0+255),w,b
  9199  0037C8  6F8F               	movwf	___fltol@sign1& (0+255),b
  9200                           
  9201                           ; BSR set to: 0
  9202  0037CA  8F89               	bsf	(___fltol@f1+2)& (0+255),7,b
  9203                           
  9204                           ; BSR set to: 0
  9205  0037CC  0EFF               	movlw	255
  9206  0037CE  1787               	andwf	___fltol@f1& (0+255),f,b
  9207  0037D0  0EFF               	movlw	255
  9208  0037D2  1788               	andwf	(___fltol@f1+1)& (0+255),f,b
  9209  0037D4  0EFF               	movlw	255
  9210  0037D6  1789               	andwf	(___fltol@f1+2)& (0+255),f,b
  9211  0037D8  0E00               	movlw	0
  9212  0037DA  178A               	andwf	(___fltol@f1+3)& (0+255),f,b
  9213                           
  9214                           ; BSR set to: 0
  9215  0037DC  0E96               	movlw	150
  9216  0037DE  5F90               	subwf	___fltol@exp1& (0+255),f,b
  9217                           
  9218                           ; BSR set to: 0
  9219  0037E0  AF90               	btfss	___fltol@exp1& (0+255),7,b
  9220  0037E2  D00D               	goto	l6632
  9221                           
  9222                           ; BSR set to: 0
  9223  0037E4  5190               	movf	___fltol@exp1& (0+255),w,b
  9224  0037E6  0A80               	xorlw	128
  9225  0037E8  0F97               	addlw	151
  9226  0037EA  A0D8               	btfss	status,0,c
  9227  0037EC  D7D2               	goto	u8250
  9228  0037EE                     l6628:
  9229                           
  9230                           ; BSR set to: 0
  9231  0037EE  90D8               	bcf	status,0,c
  9232  0037F0  338A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9233  0037F2  3389               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9234  0037F4  3388               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9235  0037F6  3387               	rrcf	___fltol@f1& (0+255),f,b
  9236                           
  9237                           ; BSR set to: 0
  9238  0037F8  3F90               	incfsz	___fltol@exp1& (0+255),f,b
  9239  0037FA  D7F9               	goto	l6628
  9240  0037FC  D00D               	goto	u8300
  9241  0037FE                     l6632:
  9242                           
  9243                           ; BSR set to: 0
  9244  0037FE  0E1F               	movlw	31
  9245  003800  6590               	cpfsgt	___fltol@exp1& (0+255),b
  9246  003802  D007               	goto	l6640
  9247  003804  D7C6               	goto	u8250
  9248  003806                     l6638:
  9249                           
  9250                           ; BSR set to: 0
  9251  003806  90D8               	bcf	status,0,c
  9252  003808  3787               	rlcf	___fltol@f1& (0+255),f,b
  9253  00380A  3788               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9254  00380C  3789               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9255  00380E  378A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9256  003810  0790               	decf	___fltol@exp1& (0+255),f,b
  9257  003812                     l6640:
  9258                           
  9259                           ; BSR set to: 0
  9260  003812  5190               	movf	___fltol@exp1& (0+255),w,b
  9261  003814  A4D8               	btfss	status,2,c
  9262  003816  D7F7               	goto	l6638
  9263  003818                     u8300:
  9264                           
  9265                           ; BSR set to: 0
  9266  003818  518F               	movf	___fltol@sign1& (0+255),w,b
  9267  00381A  B4D8               	btfsc	status,2,c
  9268  00381C  D008               	goto	l6646
  9269                           
  9270                           ; BSR set to: 0
  9271  00381E  1F8A               	comf	(___fltol@f1+3)& (0+255),f,b
  9272  003820  1F89               	comf	(___fltol@f1+2)& (0+255),f,b
  9273  003822  1F88               	comf	(___fltol@f1+1)& (0+255),f,b
  9274  003824  6D87               	negf	___fltol@f1& (0+255),b
  9275  003826  0E00               	movlw	0
  9276  003828  2388               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9277  00382A  2389               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9278  00382C  238A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9279  00382E                     l6646:
  9280                           
  9281                           ; BSR set to: 0
  9282  00382E  C087  F087         	movff	___fltol@f1,?___fltol
  9283  003832  C088  F088         	movff	___fltol@f1+1,?___fltol+1
  9284  003836  C089  F089         	movff	___fltol@f1+2,?___fltol+2
  9285  00383A  C08A  F08A         	movff	___fltol@f1+3,?___fltol+3
  9286                           
  9287                           ; BSR set to: 0
  9288  00383E  0012               	return		;funcret
  9289  003840                     __end_of___fltol:
  9290                           	opt callstack 0
  9291                           
  9292 ;; *************** function ___flmul *****************
  9293 ;; Defined at:
  9294 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  9295 ;; Parameters:    Size  Location     Type
  9296 ;;  b               4   14[BANK0 ] long 
  9297 ;;  a               4   18[BANK0 ] long 
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;  prod            4   33[BANK0 ] struct .
  9300 ;;  grs             4   28[BANK0 ] unsigned long 
  9301 ;;  temp            2   37[BANK0 ] struct .
  9302 ;;  bexp            1   32[BANK0 ] unsigned char 
  9303 ;;  aexp            1   27[BANK0 ] unsigned char 
  9304 ;;  sign            1   26[BANK0 ] unsigned char 
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  4   14[BANK0 ] unsigned char 
  9307 ;; Registers used:
  9308 ;;		wreg, status,2, status,0, prodl, prodh
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9314 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9315 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9316 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9317 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9318 ;;Total ram usage:       25 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; Hardware stack levels required when called:    2
  9321 ;; This function calls:
  9322 ;;		Nothing
  9323 ;; This function is called by:
  9324 ;;		_fijarVelocidad
  9325 ;;		_efgtoa
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           	psect	text40
  9330  001F8A                     __ptext40:
  9331                           	opt callstack 0
  9332  001F8A                     ___flmul:
  9333                           	opt callstack 23
  9334                           
  9335                           ; BSR set to: 0
  9336                           ;incstack = 0
  9337  001F8A  0100               	movlb	0	; () banked
  9338  001F8C  5171               	movf	(___flmul@b+3)& (0+255),w,b
  9339  001F8E  0B80               	andlw	128
  9340  001F90  6F7A               	movwf	___flmul@sign& (0+255),b
  9341  001F92  5171               	movf	(___flmul@b+3)& (0+255),w,b
  9342  001F94  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  9343  001F96  6F80               	movwf	___flmul@bexp& (0+255),b
  9344                           
  9345                           ; BSR set to: 0
  9346  001F98  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
  9347                           
  9348                           ; BSR set to: 0
  9349  001F9A  8180               	bsf	___flmul@bexp& (0+255),0,b
  9350                           
  9351                           ; BSR set to: 0
  9352  001F9C  5180               	movf	___flmul@bexp& (0+255),w,b
  9353  001F9E  B4D8               	btfsc	status,2,c
  9354  001FA0  D00D               	goto	l6358
  9355                           
  9356                           ; BSR set to: 0
  9357  001FA2  2980               	incf	___flmul@bexp& (0+255),w,b
  9358  001FA4  A4D8               	btfss	status,2,c
  9359  001FA6  D008               	goto	l6356
  9360                           
  9361                           ; BSR set to: 0
  9362  001FA8  0E00               	movlw	0
  9363  001FAA  6F6E               	movwf	___flmul@b& (0+255),b
  9364  001FAC  0E00               	movlw	0
  9365  001FAE  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  9366  001FB0  0E00               	movlw	0
  9367  001FB2  6F70               	movwf	(___flmul@b+2)& (0+255),b
  9368  001FB4  0E00               	movlw	0
  9369  001FB6  6F71               	movwf	(___flmul@b+3)& (0+255),b
  9370  001FB8                     l6356:
  9371                           
  9372                           ; BSR set to: 0
  9373  001FB8  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  9374  001FBA  D008               	goto	l6360
  9375  001FBC                     l6358:
  9376                           
  9377                           ; BSR set to: 0
  9378  001FBC  0E00               	movlw	0
  9379  001FBE  6F6E               	movwf	___flmul@b& (0+255),b
  9380  001FC0  0E00               	movlw	0
  9381  001FC2  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  9382  001FC4  0E00               	movlw	0
  9383  001FC6  6F70               	movwf	(___flmul@b+2)& (0+255),b
  9384  001FC8  0E00               	movlw	0
  9385  001FCA  6F71               	movwf	(___flmul@b+3)& (0+255),b
  9386  001FCC                     l6360:
  9387                           
  9388                           ; BSR set to: 0
  9389  001FCC  5175               	movf	(___flmul@a+3)& (0+255),w,b
  9390  001FCE  0B80               	andlw	128
  9391  001FD0  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  9392                           
  9393                           ; BSR set to: 0
  9394  001FD2  5175               	movf	(___flmul@a+3)& (0+255),w,b
  9395  001FD4  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  9396  001FD6  6F7B               	movwf	___flmul@aexp& (0+255),b
  9397                           
  9398                           ; BSR set to: 0
  9399  001FD8  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
  9400                           
  9401                           ; BSR set to: 0
  9402  001FDA  817B               	bsf	___flmul@aexp& (0+255),0,b
  9403                           
  9404                           ; BSR set to: 0
  9405  001FDC  517B               	movf	___flmul@aexp& (0+255),w,b
  9406  001FDE  B4D8               	btfsc	status,2,c
  9407  001FE0  D00D               	goto	l6376
  9408                           
  9409                           ; BSR set to: 0
  9410  001FE2  297B               	incf	___flmul@aexp& (0+255),w,b
  9411  001FE4  A4D8               	btfss	status,2,c
  9412  001FE6  D008               	goto	l6374
  9413                           
  9414                           ; BSR set to: 0
  9415  001FE8  0E00               	movlw	0
  9416  001FEA  6F72               	movwf	___flmul@a& (0+255),b
  9417  001FEC  0E00               	movlw	0
  9418  001FEE  6F73               	movwf	(___flmul@a+1)& (0+255),b
  9419  001FF0  0E00               	movlw	0
  9420  001FF2  6F74               	movwf	(___flmul@a+2)& (0+255),b
  9421  001FF4  0E00               	movlw	0
  9422  001FF6  6F75               	movwf	(___flmul@a+3)& (0+255),b
  9423  001FF8                     l6374:
  9424                           
  9425                           ; BSR set to: 0
  9426  001FF8  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  9427  001FFA  D008               	goto	l1134
  9428  001FFC                     l6376:
  9429                           
  9430                           ; BSR set to: 0
  9431  001FFC  0E00               	movlw	0
  9432  001FFE  6F72               	movwf	___flmul@a& (0+255),b
  9433  002000  0E00               	movlw	0
  9434  002002  6F73               	movwf	(___flmul@a+1)& (0+255),b
  9435  002004  0E00               	movlw	0
  9436  002006  6F74               	movwf	(___flmul@a+2)& (0+255),b
  9437  002008  0E00               	movlw	0
  9438  00200A  6F75               	movwf	(___flmul@a+3)& (0+255),b
  9439  00200C                     l1134:
  9440                           
  9441                           ; BSR set to: 0
  9442  00200C  517B               	movf	___flmul@aexp& (0+255),w,b
  9443  00200E  B4D8               	btfsc	status,2,c
  9444  002010  D003               	goto	u7920
  9445                           
  9446                           ; BSR set to: 0
  9447  002012  5180               	movf	___flmul@bexp& (0+255),w,b
  9448  002014  A4D8               	btfss	status,2,c
  9449  002016  D009               	goto	l6384
  9450  002018                     u7920:
  9451                           
  9452                           ; BSR set to: 0
  9453  002018  0E00               	movlw	0
  9454  00201A  6F6E               	movwf	?___flmul& (0+255),b
  9455  00201C  0E00               	movlw	0
  9456  00201E  6F6F               	movwf	(?___flmul+1)& (0+255),b
  9457  002020  0E00               	movlw	0
  9458  002022  6F70               	movwf	(?___flmul+2)& (0+255),b
  9459  002024  0E00               	movlw	0
  9460  002026  6F71               	movwf	(?___flmul+3)& (0+255),b
  9461  002028  0012               	return	
  9462  00202A                     l6384:
  9463                           
  9464                           ; BSR set to: 0
  9465  00202A  5174               	movf	(___flmul@a+2)& (0+255),w,b
  9466  00202C  036E               	mulwf	___flmul@b& (0+255),b
  9467  00202E  CFF3 F085          	movff	prodl,___flmul@temp
  9468  002032  CFF4 F086          	movff	prodh,___flmul@temp+1
  9469                           
  9470                           ; BSR set to: 0
  9471  002036  5185               	movf	___flmul@temp& (0+255),w,b
  9472  002038  6F7C               	movwf	___flmul@grs& (0+255),b
  9473  00203A  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
  9474  00203C  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
  9475  00203E  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
  9476                           
  9477                           ; BSR set to: 0
  9478  002040  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9479  002042  6F81               	movwf	___flmul@prod& (0+255),b
  9480  002044  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  9481  002046  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  9482  002048  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  9483  00204A  5173               	movf	(___flmul@a+1)& (0+255),w,b
  9484  00204C  036F               	mulwf	(___flmul@b+1)& (0+255),b
  9485  00204E  CFF3 F085          	movff	prodl,___flmul@temp
  9486  002052  CFF4 F086          	movff	prodh,___flmul@temp+1
  9487                           
  9488                           ; BSR set to: 0
  9489  002056  5185               	movf	___flmul@temp& (0+255),w,b
  9490  002058  277C               	addwf	___flmul@grs& (0+255),f,b
  9491  00205A  0E00               	movlw	0
  9492  00205C  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9493  00205E  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9494  002060  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9495                           
  9496                           ; BSR set to: 0
  9497  002062  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9498  002064  2781               	addwf	___flmul@prod& (0+255),f,b
  9499  002066  0E00               	movlw	0
  9500  002068  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9501  00206A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9502  00206C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9503  00206E  5172               	movf	___flmul@a& (0+255),w,b
  9504  002070  0370               	mulwf	(___flmul@b+2)& (0+255),b
  9505  002072  CFF3 F085          	movff	prodl,___flmul@temp
  9506  002076  CFF4 F086          	movff	prodh,___flmul@temp+1
  9507                           
  9508                           ; BSR set to: 0
  9509  00207A  5185               	movf	___flmul@temp& (0+255),w,b
  9510  00207C  277C               	addwf	___flmul@grs& (0+255),f,b
  9511  00207E  0E00               	movlw	0
  9512  002080  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9513  002082  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9514  002084  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9515                           
  9516                           ; BSR set to: 0
  9517  002086  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9518  002088  2781               	addwf	___flmul@prod& (0+255),f,b
  9519  00208A  0E00               	movlw	0
  9520  00208C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9521  00208E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9522  002090  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9523                           
  9524                           ; BSR set to: 0
  9525  002092  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  9526  002096  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  9527  00209A  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  9528  00209E  6B7C               	clrf	___flmul@grs& (0+255),b
  9529                           
  9530                           ; BSR set to: 0
  9531  0020A0  5172               	movf	___flmul@a& (0+255),w,b
  9532  0020A2  036F               	mulwf	(___flmul@b+1)& (0+255),b
  9533  0020A4  CFF3 F085          	movff	prodl,___flmul@temp
  9534  0020A8  CFF4 F086          	movff	prodh,___flmul@temp+1
  9535                           
  9536                           ; BSR set to: 0
  9537  0020AC  5185               	movf	___flmul@temp& (0+255),w,b
  9538  0020AE  277C               	addwf	___flmul@grs& (0+255),f,b
  9539  0020B0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9540  0020B2  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9541  0020B4  0E00               	movlw	0
  9542  0020B6  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9543  0020B8  0E00               	movlw	0
  9544  0020BA  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9545                           
  9546                           ; BSR set to: 0
  9547  0020BC  5173               	movf	(___flmul@a+1)& (0+255),w,b
  9548  0020BE  036E               	mulwf	___flmul@b& (0+255),b
  9549  0020C0  CFF3 F085          	movff	prodl,___flmul@temp
  9550  0020C4  CFF4 F086          	movff	prodh,___flmul@temp+1
  9551                           
  9552                           ; BSR set to: 0
  9553  0020C8  5185               	movf	___flmul@temp& (0+255),w,b
  9554  0020CA  277C               	addwf	___flmul@grs& (0+255),f,b
  9555  0020CC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9556  0020CE  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9557  0020D0  0E00               	movlw	0
  9558  0020D2  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9559  0020D4  0E00               	movlw	0
  9560  0020D6  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9561                           
  9562                           ; BSR set to: 0
  9563  0020D8  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  9564  0020DC  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  9565  0020E0  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  9566  0020E4  6B7C               	clrf	___flmul@grs& (0+255),b
  9567  0020E6  5172               	movf	___flmul@a& (0+255),w,b
  9568  0020E8  036E               	mulwf	___flmul@b& (0+255),b
  9569  0020EA  CFF3 F085          	movff	prodl,___flmul@temp
  9570  0020EE  CFF4 F086          	movff	prodh,___flmul@temp+1
  9571                           
  9572                           ; BSR set to: 0
  9573  0020F2  5185               	movf	___flmul@temp& (0+255),w,b
  9574  0020F4  277C               	addwf	___flmul@grs& (0+255),f,b
  9575  0020F6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9576  0020F8  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9577  0020FA  0E00               	movlw	0
  9578  0020FC  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9579  0020FE  0E00               	movlw	0
  9580  002100  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9581                           
  9582                           ; BSR set to: 0
  9583  002102  5174               	movf	(___flmul@a+2)& (0+255),w,b
  9584  002104  036F               	mulwf	(___flmul@b+1)& (0+255),b
  9585  002106  CFF3 F085          	movff	prodl,___flmul@temp
  9586  00210A  CFF4 F086          	movff	prodh,___flmul@temp+1
  9587  00210E  5185               	movf	___flmul@temp& (0+255),w,b
  9588  002110  2781               	addwf	___flmul@prod& (0+255),f,b
  9589  002112  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9590  002114  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9591  002116  0E00               	movlw	0
  9592  002118  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9593  00211A  0E00               	movlw	0
  9594  00211C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9595                           
  9596                           ; BSR set to: 0
  9597  00211E  5173               	movf	(___flmul@a+1)& (0+255),w,b
  9598  002120  0370               	mulwf	(___flmul@b+2)& (0+255),b
  9599  002122  CFF3 F085          	movff	prodl,___flmul@temp
  9600  002126  CFF4 F086          	movff	prodh,___flmul@temp+1
  9601                           
  9602                           ; BSR set to: 0
  9603  00212A  5185               	movf	___flmul@temp& (0+255),w,b
  9604  00212C  2781               	addwf	___flmul@prod& (0+255),f,b
  9605  00212E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9606  002130  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9607  002132  0E00               	movlw	0
  9608  002134  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9609  002136  0E00               	movlw	0
  9610  002138  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9611  00213A  5174               	movf	(___flmul@a+2)& (0+255),w,b
  9612  00213C  0370               	mulwf	(___flmul@b+2)& (0+255),b
  9613  00213E  CFF3 F085          	movff	prodl,___flmul@temp
  9614  002142  CFF4 F086          	movff	prodh,___flmul@temp+1
  9615                           
  9616                           ; BSR set to: 0
  9617  002146  5185               	movf	___flmul@temp& (0+255),w,b
  9618  002148  6F76               	movwf	??___flmul& (0+255),b
  9619  00214A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9620  00214C  6F77               	movwf	(??___flmul+1)& (0+255),b
  9621  00214E  6B78               	clrf	(??___flmul+2)& (0+255),b
  9622  002150  6B79               	clrf	(??___flmul+3)& (0+255),b
  9623  002152  C078  F079         	movff	??___flmul+2,??___flmul+3
  9624  002156  C077  F078         	movff	??___flmul+1,??___flmul+2
  9625  00215A  C076  F077         	movff	??___flmul,??___flmul+1
  9626  00215E  6B76               	clrf	??___flmul& (0+255),b
  9627  002160  5176               	movf	??___flmul& (0+255),w,b
  9628  002162  2781               	addwf	___flmul@prod& (0+255),f,b
  9629  002164  5177               	movf	(??___flmul+1)& (0+255),w,b
  9630  002166  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9631  002168  5178               	movf	(??___flmul+2)& (0+255),w,b
  9632  00216A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9633  00216C  5179               	movf	(??___flmul+3)& (0+255),w,b
  9634  00216E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9635                           
  9636                           ; BSR set to: 0
  9637  002170  C07C  F076         	movff	___flmul@grs,??___flmul
  9638  002174  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
  9639  002178  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
  9640  00217C  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
  9641  002180  0E19               	movlw	25
  9642  002182  D005               	goto	u7930
  9643  002184                     u7935:
  9644  002184  90D8               	bcf	status,0,c
  9645  002186  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  9646  002188  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  9647  00218A  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  9648  00218C  3376               	rrcf	??___flmul& (0+255),f,b
  9649  00218E                     u7930:
  9650  00218E  2EE8               	decfsz	wreg,f,c
  9651  002190  D7F9               	goto	u7935
  9652  002192  5176               	movf	??___flmul& (0+255),w,b
  9653  002194  2781               	addwf	___flmul@prod& (0+255),f,b
  9654  002196  5177               	movf	(??___flmul+1)& (0+255),w,b
  9655  002198  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9656  00219A  5178               	movf	(??___flmul+2)& (0+255),w,b
  9657  00219C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9658  00219E  5179               	movf	(??___flmul+3)& (0+255),w,b
  9659  0021A0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9660                           
  9661                           ; BSR set to: 0
  9662  0021A2  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  9663  0021A6  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  9664  0021AA  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  9665  0021AE  6B7C               	clrf	___flmul@grs& (0+255),b
  9666                           
  9667                           ; BSR set to: 0
  9668  0021B0  517B               	movf	___flmul@aexp& (0+255),w,b
  9669  0021B2  C080  F076         	movff	___flmul@bexp,??___flmul
  9670  0021B6  6B77               	clrf	(??___flmul+1)& (0+255),b
  9671  0021B8  2776               	addwf	??___flmul& (0+255),f,b
  9672  0021BA  0E00               	movlw	0
  9673  0021BC  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  9674  0021BE  0E82               	movlw	130
  9675  0021C0  2576               	addwf	??___flmul& (0+255),w,b
  9676  0021C2  6F85               	movwf	___flmul@temp& (0+255),b
  9677  0021C4  0EFF               	movlw	255
  9678  0021C6  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  9679  0021C8  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  9680  0021CA  D00F               	goto	l6432
  9681  0021CC                     l6426:
  9682                           
  9683                           ; BSR set to: 0
  9684  0021CC  90D8               	bcf	status,0,c
  9685  0021CE  3781               	rlcf	___flmul@prod& (0+255),f,b
  9686  0021D0  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9687  0021D2  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9688  0021D4  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9689                           
  9690                           ; BSR set to: 0
  9691  0021D6  BF7F               	btfsc	(___flmul@grs+3)& (0+255),7,b
  9692                           
  9693                           ; BSR set to: 0
  9694  0021D8  8181               	bsf	___flmul@prod& (0+255),0,b
  9695                           
  9696                           ; BSR set to: 0
  9697  0021DA  90D8               	bcf	status,0,c
  9698  0021DC  377C               	rlcf	___flmul@grs& (0+255),f,b
  9699  0021DE  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9700  0021E0  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9701  0021E2  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9702  0021E4  0785               	decf	___flmul@temp& (0+255),f,b
  9703  0021E6  A0D8               	btfss	status,0,c
  9704  0021E8  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  9705  0021EA                     l6432:
  9706                           
  9707                           ; BSR set to: 0
  9708  0021EA  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  9709  0021EC  D7EF               	goto	l6426
  9710                           
  9711                           ; BSR set to: 0
  9712  0021EE  0E00               	movlw	0
  9713  0021F0  6F7B               	movwf	___flmul@aexp& (0+255),b
  9714                           
  9715                           ; BSR set to: 0
  9716  0021F2  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  9717  0021F4  D017               	goto	l1143
  9718                           
  9719                           ; BSR set to: 0
  9720  0021F6  0EFF               	movlw	255
  9721  0021F8  157C               	andwf	___flmul@grs& (0+255),w,b
  9722  0021FA  6F76               	movwf	??___flmul& (0+255),b
  9723  0021FC  0EFF               	movlw	255
  9724  0021FE  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
  9725  002200  6F77               	movwf	(??___flmul+1)& (0+255),b
  9726  002202  0EFF               	movlw	255
  9727  002204  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
  9728  002206  6F78               	movwf	(??___flmul+2)& (0+255),b
  9729  002208  0E7F               	movlw	127
  9730  00220A  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
  9731  00220C  6F79               	movwf	(??___flmul+3)& (0+255),b
  9732  00220E  5176               	movf	??___flmul& (0+255),w,b
  9733  002210  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  9734  002212  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  9735  002214  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  9736  002216  B4D8               	btfsc	status,2,c
  9737  002218  D003               	goto	l1144
  9738  00221A                     u7970:
  9739                           
  9740                           ; BSR set to: 0
  9741  00221A  0E01               	movlw	1
  9742  00221C  6F7B               	movwf	___flmul@aexp& (0+255),b
  9743  00221E  D002               	goto	l1143
  9744  002220                     l1144:
  9745                           
  9746                           ; BSR set to: 0
  9747  002220  B181               	btfsc	___flmul@prod& (0+255),0,b
  9748  002222  D7FB               	goto	u7970
  9749  002224                     l1143:
  9750                           
  9751                           ; BSR set to: 0
  9752  002224  517B               	movf	___flmul@aexp& (0+255),w,b
  9753  002226  B4D8               	btfsc	status,2,c
  9754  002228  D01F               	goto	l6452
  9755                           
  9756                           ; BSR set to: 0
  9757  00222A  0E01               	movlw	1
  9758  00222C  2781               	addwf	___flmul@prod& (0+255),f,b
  9759  00222E  0E00               	movlw	0
  9760  002230  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9761  002232  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9762  002234  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9763                           
  9764                           ; BSR set to: 0
  9765  002236  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  9766  002238  D017               	goto	l6452
  9767                           
  9768                           ; BSR set to: 0
  9769  00223A  C081  F076         	movff	___flmul@prod,??___flmul
  9770  00223E  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  9771  002242  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  9772  002246  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  9773  00224A  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  9774  00224C  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  9775  00224E  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  9776  002250  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  9777  002252  3376               	rrcf	??___flmul& (0+255),f,b
  9778  002254  C076  F081         	movff	??___flmul,___flmul@prod
  9779  002258  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  9780  00225C  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  9781  002260  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  9782                           
  9783                           ; BSR set to: 0
  9784  002264  4B85               	infsnz	___flmul@temp& (0+255),f,b
  9785  002266  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  9786  002268                     l6452:
  9787                           
  9788                           ; BSR set to: 0
  9789  002268  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9790  00226A  D00D               	goto	l6456
  9791  00226C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9792  00226E  E103               	bnz	u8010
  9793  002270  2985               	incf	___flmul@temp& (0+255),w,b
  9794  002272  A0D8               	btfss	status,0,c
  9795  002274  D008               	goto	l6456
  9796  002276                     u8010:
  9797                           
  9798                           ; BSR set to: 0
  9799  002276  0E00               	movlw	0
  9800  002278  6F81               	movwf	___flmul@prod& (0+255),b
  9801  00227A  0E00               	movlw	0
  9802  00227C  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  9803  00227E  0E80               	movlw	128
  9804  002280  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  9805  002282  0E7F               	movlw	127
  9806  002284  D020               	goto	L18
  9807  002286                     l6456:
  9808                           
  9809                           ; BSR set to: 0
  9810  002286  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9811  002288  D005               	goto	u8020
  9812  00228A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9813  00228C  E10E               	bnz	l1151
  9814  00228E  0585               	decf	___flmul@temp& (0+255),w,b
  9815  002290  B0D8               	btfsc	status,0,c
  9816  002292  D00B               	goto	l1151
  9817  002294                     u8020:
  9818                           
  9819                           ; BSR set to: 0
  9820  002294  0E00               	movlw	0
  9821  002296  6F81               	movwf	___flmul@prod& (0+255),b
  9822  002298  0E00               	movlw	0
  9823  00229A  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  9824  00229C  0E00               	movlw	0
  9825  00229E  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  9826  0022A0  0E00               	movlw	0
  9827  0022A2  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9828  0022A4  0E00               	movlw	0
  9829  0022A6  6F7A               	movwf	___flmul@sign& (0+255),b
  9830  0022A8  D00F               	goto	l6468
  9831  0022AA                     l1151:
  9832                           
  9833                           ; BSR set to: 0
  9834  0022AA  C085  F080         	movff	___flmul@temp,___flmul@bexp
  9835                           
  9836                           ; BSR set to: 0
  9837  0022AE  0EFF               	movlw	255
  9838  0022B0  1781               	andwf	___flmul@prod& (0+255),f,b
  9839  0022B2  0EFF               	movlw	255
  9840  0022B4  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  9841  0022B6  0E7F               	movlw	127
  9842  0022B8  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  9843  0022BA  0E00               	movlw	0
  9844  0022BC  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  9845                           
  9846                           ; BSR set to: 0
  9847  0022BE  B180               	btfsc	___flmul@bexp& (0+255),0,b
  9848                           
  9849                           ; BSR set to: 0
  9850  0022C0  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  9851                           
  9852                           ; BSR set to: 0
  9853  0022C2  90D8               	bcf	status,0,c
  9854  0022C4  3180               	rrcf	___flmul@bexp& (0+255),w,b
  9855  0022C6                     L18:
  9856  0022C6  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9857  0022C8                     l6468:
  9858                           
  9859                           ; BSR set to: 0
  9860  0022C8  517A               	movf	___flmul@sign& (0+255),w,b
  9861  0022CA  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9862                           
  9863                           ; BSR set to: 0
  9864  0022CC  C081  F06E         	movff	___flmul@prod,?___flmul
  9865  0022D0  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  9866  0022D4  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  9867  0022D8  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  9868                           
  9869                           ; BSR set to: 0
  9870  0022DC  0012               	return		;funcret
  9871  0022DE                     __end_of___flmul:
  9872                           	opt callstack 0
  9873                           
  9874 ;; *************** function ___fladd *****************
  9875 ;; Defined at:
  9876 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  b               4   39[BANK0 ] unsigned char 
  9879 ;;  a               4   43[BANK0 ] unsigned char 
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;  grs             1   54[BANK0 ] unsigned char 
  9882 ;;  bexp            1   53[BANK0 ] unsigned char 
  9883 ;;  aexp            1   52[BANK0 ] unsigned char 
  9884 ;;  signs           1   51[BANK0 ] unsigned char 
  9885 ;; Return value:  Size  Location     Type
  9886 ;;                  4   39[BANK0 ] unsigned char 
  9887 ;; Registers used:
  9888 ;;		wreg, status,2, status,0
  9889 ;; Tracked objects:
  9890 ;;		On entry : 0/0
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9894 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9895 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9896 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9897 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9898 ;;Total ram usage:       16 bytes
  9899 ;; Hardware stack levels used:    1
  9900 ;; Hardware stack levels required when called:    2
  9901 ;; This function calls:
  9902 ;;		Nothing
  9903 ;; This function is called by:
  9904 ;;		_fijarVelocidad
  9905 ;;		_efgtoa
  9906 ;;		___flsub
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910                           	psect	text41
  9911  0022DE                     __ptext41:
  9912                           	opt callstack 0
  9913  0022DE                     ___fladd:
  9914                           	opt callstack 22
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;incstack = 0
  9918  0022DE  0100               	movlb	0	; () banked
  9919  0022E0  518A               	movf	(___fladd@b+3)& (0+255),w,b
  9920  0022E2  0B80               	andlw	128
  9921  0022E4  6F93               	movwf	___fladd@signs& (0+255),b
  9922  0022E6  518A               	movf	(___fladd@b+3)& (0+255),w,b
  9923  0022E8  258A               	addwf	(___fladd@b+3)& (0+255),w,b
  9924  0022EA  6F95               	movwf	___fladd@bexp& (0+255),b
  9925                           
  9926                           ; BSR set to: 0
  9927  0022EC  BF89               	btfsc	(___fladd@b+2)& (0+255),7,b
  9928                           
  9929                           ; BSR set to: 0
  9930  0022EE  8195               	bsf	___fladd@bexp& (0+255),0,b
  9931                           
  9932                           ; BSR set to: 0
  9933  0022F0  5195               	movf	___fladd@bexp& (0+255),w,b
  9934  0022F2  B4D8               	btfsc	status,2,c
  9935  0022F4  D00D               	goto	l5924
  9936                           
  9937                           ; BSR set to: 0
  9938  0022F6  2995               	incf	___fladd@bexp& (0+255),w,b
  9939  0022F8  A4D8               	btfss	status,2,c
  9940  0022FA  D008               	goto	l5920
  9941                           
  9942                           ; BSR set to: 0
  9943  0022FC  0E00               	movlw	0
  9944  0022FE  6F87               	movwf	___fladd@b& (0+255),b
  9945  002300  0E00               	movlw	0
  9946  002302  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9947  002304  0E00               	movlw	0
  9948  002306  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9949  002308  0E00               	movlw	0
  9950  00230A  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9951  00230C                     l5920:
  9952                           
  9953                           ; BSR set to: 0
  9954  00230C  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  9955  00230E  D006               	goto	L19
  9956  002310                     l5924:
  9957                           
  9958                           ; BSR set to: 0
  9959  002310  0E00               	movlw	0
  9960  002312  6F87               	movwf	___fladd@b& (0+255),b
  9961  002314  0E00               	movlw	0
  9962  002316  6F88               	movwf	(___fladd@b+1)& (0+255),b
  9963  002318  0E00               	movlw	0
  9964  00231A  6F89               	movwf	(___fladd@b+2)& (0+255),b
  9965  00231C                     L19:
  9966  00231C  0E00               	movlw	0
  9967  00231E  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  9968                           
  9969                           ; BSR set to: 0
  9970  002320  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9971  002322  0B80               	andlw	128
  9972  002324  6F94               	movwf	___fladd@aexp& (0+255),b
  9973                           
  9974                           ; BSR set to: 0
  9975  002326  5193               	movf	___fladd@signs& (0+255),w,b
  9976  002328  1994               	xorwf	___fladd@aexp& (0+255),w,b
  9977  00232A  A4D8               	btfss	status,2,c
  9978                           
  9979                           ; BSR set to: 0
  9980  00232C  8D93               	bsf	___fladd@signs& (0+255),6,b
  9981                           
  9982                           ; BSR set to: 0
  9983  00232E  518E               	movf	(___fladd@a+3)& (0+255),w,b
  9984  002330  258E               	addwf	(___fladd@a+3)& (0+255),w,b
  9985  002332  6F94               	movwf	___fladd@aexp& (0+255),b
  9986                           
  9987                           ; BSR set to: 0
  9988  002334  BF8D               	btfsc	(___fladd@a+2)& (0+255),7,b
  9989                           
  9990                           ; BSR set to: 0
  9991  002336  8194               	bsf	___fladd@aexp& (0+255),0,b
  9992                           
  9993                           ; BSR set to: 0
  9994  002338  5194               	movf	___fladd@aexp& (0+255),w,b
  9995  00233A  B4D8               	btfsc	status,2,c
  9996  00233C  D00D               	goto	l5948
  9997                           
  9998                           ; BSR set to: 0
  9999  00233E  2994               	incf	___fladd@aexp& (0+255),w,b
 10000  002340  A4D8               	btfss	status,2,c
 10001  002342  D008               	goto	l5944
 10002                           
 10003                           ; BSR set to: 0
 10004  002344  0E00               	movlw	0
 10005  002346  6F8B               	movwf	___fladd@a& (0+255),b
 10006  002348  0E00               	movlw	0
 10007  00234A  6F8C               	movwf	(___fladd@a+1)& (0+255),b
 10008  00234C  0E00               	movlw	0
 10009  00234E  6F8D               	movwf	(___fladd@a+2)& (0+255),b
 10010  002350  0E00               	movlw	0
 10011  002352  6F8E               	movwf	(___fladd@a+3)& (0+255),b
 10012  002354                     l5944:
 10013                           
 10014                           ; BSR set to: 0
 10015  002354  8F8D               	bsf	(___fladd@a+2)& (0+255),7,b
 10016  002356  D006               	goto	L20
 10017  002358                     l5948:
 10018                           
 10019                           ; BSR set to: 0
 10020  002358  0E00               	movlw	0
 10021  00235A  6F8B               	movwf	___fladd@a& (0+255),b
 10022  00235C  0E00               	movlw	0
 10023  00235E  6F8C               	movwf	(___fladd@a+1)& (0+255),b
 10024  002360  0E00               	movlw	0
 10025  002362  6F8D               	movwf	(___fladd@a+2)& (0+255),b
 10026  002364                     L20:
 10027  002364  0E00               	movlw	0
 10028  002366  6F8E               	movwf	(___fladd@a+3)& (0+255),b
 10029                           
 10030                           ; BSR set to: 0
 10031  002368  5195               	movf	___fladd@bexp& (0+255),w,b
 10032  00236A  5D94               	subwf	___fladd@aexp& (0+255),w,b
 10033  00236C  B0D8               	btfsc	status,0,c
 10034  00236E  D022               	goto	l5986
 10035                           
 10036                           ; BSR set to: 0
 10037  002370  AD93               	btfss	___fladd@signs& (0+255),6,b
 10038  002372  D002               	goto	l5956
 10039                           
 10040                           ; BSR set to: 0
 10041  002374  0E80               	movlw	128
 10042  002376  1B93               	xorwf	___fladd@signs& (0+255),f,b
 10043  002378                     l5956:
 10044                           
 10045                           ; BSR set to: 0
 10046  002378  C095  F096         	movff	___fladd@bexp,___fladd@grs
 10047                           
 10048                           ; BSR set to: 0
 10049  00237C  C094  F095         	movff	___fladd@aexp,___fladd@bexp
 10050                           
 10051                           ; BSR set to: 0
 10052  002380  C096  F094         	movff	___fladd@grs,___fladd@aexp
 10053                           
 10054                           ; BSR set to: 0
 10055  002384  C087  F096         	movff	___fladd@b,___fladd@grs
 10056                           
 10057                           ; BSR set to: 0
 10058  002388  C08B  F087         	movff	___fladd@a,___fladd@b
 10059                           
 10060                           ; BSR set to: 0
 10061  00238C  C096  F08B         	movff	___fladd@grs,___fladd@a
 10062                           
 10063                           ; BSR set to: 0
 10064  002390  C088  F096         	movff	___fladd@b+1,___fladd@grs
 10065                           
 10066                           ; BSR set to: 0
 10067  002394  C08C  F088         	movff	___fladd@a+1,___fladd@b+1
 10068                           
 10069                           ; BSR set to: 0
 10070  002398  C096  F08C         	movff	___fladd@grs,___fladd@a+1
 10071                           
 10072                           ; BSR set to: 0
 10073  00239C  C089  F096         	movff	___fladd@b+2,___fladd@grs
 10074                           
 10075                           ; BSR set to: 0
 10076  0023A0  C08D  F089         	movff	___fladd@a+2,___fladd@b+2
 10077                           
 10078                           ; BSR set to: 0
 10079  0023A4  C096  F08D         	movff	___fladd@grs,___fladd@a+2
 10080                           
 10081                           ; BSR set to: 0
 10082  0023A8  C08A  F096         	movff	___fladd@b+3,___fladd@grs
 10083                           
 10084                           ; BSR set to: 0
 10085  0023AC  C08E  F08A         	movff	___fladd@a+3,___fladd@b+3
 10086                           
 10087                           ; BSR set to: 0
 10088  0023B0  C096  F08E         	movff	___fladd@grs,___fladd@a+3
 10089  0023B4                     l5986:
 10090                           
 10091                           ; BSR set to: 0
 10092  0023B4  0E00               	movlw	0
 10093  0023B6  6F96               	movwf	___fladd@grs& (0+255),b
 10094                           
 10095                           ; BSR set to: 0
 10096  0023B8  5195               	movf	___fladd@bexp& (0+255),w,b
 10097  0023BA  C094  F08F         	movff	___fladd@aexp,??___fladd
 10098  0023BE  6B90               	clrf	(??___fladd+1)& (0+255),b
 10099  0023C0  5F8F               	subwf	??___fladd& (0+255),f,b
 10100  0023C2  0E00               	movlw	0
 10101  0023C4  5B90               	subwfb	(??___fladd+1)& (0+255),f,b
 10102  0023C6  BF90               	btfsc	(??___fladd+1)& (0+255),7,b
 10103  0023C8  D02C               	goto	l1049
 10104  0023CA  5190               	movf	(??___fladd+1)& (0+255),w,b
 10105  0023CC  E104               	bnz	u7040
 10106  0023CE  0E1A               	movlw	26
 10107  0023D0  5D8F               	subwf	??___fladd& (0+255),w,b
 10108  0023D2  A0D8               	btfss	status,0,c
 10109  0023D4  D026               	goto	l1049
 10110  0023D6                     u7040:
 10111                           
 10112                           ; BSR set to: 0
 10113  0023D6  5187               	movf	___fladd@b& (0+255),w,b
 10114  0023D8  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
 10115  0023DA  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
 10116  0023DC  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
 10117  0023DE  B4D8               	btfsc	status,2,c
 10118  0023E0  D002               	goto	u7050
 10119  0023E2  0E01               	movlw	1
 10120  0023E4  D001               	goto	u7060
 10121  0023E6                     u7050:
 10122  0023E6  0E00               	movlw	0
 10123  0023E8                     u7060:
 10124  0023E8  6F96               	movwf	___fladd@grs& (0+255),b
 10125                           
 10126                           ; BSR set to: 0
 10127  0023EA  0E00               	movlw	0
 10128  0023EC  6F87               	movwf	___fladd@b& (0+255),b
 10129  0023EE  0E00               	movlw	0
 10130  0023F0  6F88               	movwf	(___fladd@b+1)& (0+255),b
 10131  0023F2  0E00               	movlw	0
 10132  0023F4  6F89               	movwf	(___fladd@b+2)& (0+255),b
 10133  0023F6  0E00               	movlw	0
 10134  0023F8  6F8A               	movwf	(___fladd@b+3)& (0+255),b
 10135                           
 10136                           ; BSR set to: 0
 10137  0023FA  C094  F095         	movff	___fladd@aexp,___fladd@bexp
 10138  0023FE  D015               	goto	u7090
 10139  002400                     l1050:
 10140                           
 10141                           ; BSR set to: 0
 10142  002400  A196               	btfss	___fladd@grs& (0+255),0,b
 10143  002402  D005               	goto	l5998
 10144                           
 10145                           ; BSR set to: 0
 10146  002404  90D8               	bcf	status,0,c
 10147  002406  3196               	rrcf	___fladd@grs& (0+255),w,b
 10148  002408  0901               	iorlw	1
 10149  00240A  6F96               	movwf	___fladd@grs& (0+255),b
 10150  00240C  D002               	goto	l6000
 10151  00240E                     l5998:
 10152                           
 10153                           ; BSR set to: 0
 10154  00240E  90D8               	bcf	status,0,c
 10155  002410  3396               	rrcf	___fladd@grs& (0+255),f,b
 10156  002412                     l6000:
 10157                           
 10158                           ; BSR set to: 0
 10159  002412  B187               	btfsc	___fladd@b& (0+255),0,b
 10160                           
 10161                           ; BSR set to: 0
 10162  002414  8F96               	bsf	___fladd@grs& (0+255),7,b
 10163                           
 10164                           ; BSR set to: 0
 10165  002416  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
 10166  002418  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
 10167  00241A  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
 10168  00241C  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
 10169  00241E  3387               	rrcf	___fladd@b& (0+255),f,b
 10170                           
 10171                           ; BSR set to: 0
 10172  002420  2B95               	incf	___fladd@bexp& (0+255),f,b
 10173  002422                     l1049:
 10174                           
 10175                           ; BSR set to: 0
 10176  002422  5194               	movf	___fladd@aexp& (0+255),w,b
 10177  002424  5D95               	subwf	___fladd@bexp& (0+255),w,b
 10178  002426  A0D8               	btfss	status,0,c
 10179  002428  D7EB               	goto	l1050
 10180  00242A                     u7090:
 10181                           
 10182                           ; BSR set to: 0
 10183  00242A  BD93               	btfsc	___fladd@signs& (0+255),6,b
 10184  00242C  D028               	goto	l6032
 10185                           
 10186                           ; BSR set to: 0
 10187  00242E  5195               	movf	___fladd@bexp& (0+255),w,b
 10188  002430  A4D8               	btfss	status,2,c
 10189  002432  D009               	goto	l6014
 10190                           
 10191                           ; BSR set to: 0
 10192  002434  0E00               	movlw	0
 10193  002436  6F87               	movwf	?___fladd& (0+255),b
 10194  002438  0E00               	movlw	0
 10195  00243A  6F88               	movwf	(?___fladd+1)& (0+255),b
 10196  00243C  0E00               	movlw	0
 10197  00243E  6F89               	movwf	(?___fladd+2)& (0+255),b
 10198  002440  0E00               	movlw	0
 10199  002442  6F8A               	movwf	(?___fladd+3)& (0+255),b
 10200  002444  0012               	return	
 10201  002446                     l6014:
 10202                           
 10203                           ; BSR set to: 0
 10204  002446  518B               	movf	___fladd@a& (0+255),w,b
 10205  002448  2787               	addwf	___fladd@b& (0+255),f,b
 10206  00244A  518C               	movf	(___fladd@a+1)& (0+255),w,b
 10207  00244C  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
 10208  00244E  518D               	movf	(___fladd@a+2)& (0+255),w,b
 10209  002450  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
 10210  002452  518E               	movf	(___fladd@a+3)& (0+255),w,b
 10211  002454  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
 10212                           
 10213                           ; BSR set to: 0
 10214  002456  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
 10215  002458  D071               	goto	u7220
 10216                           
 10217                           ; BSR set to: 0
 10218  00245A  A196               	btfss	___fladd@grs& (0+255),0,b
 10219  00245C  D005               	goto	l6022
 10220                           
 10221                           ; BSR set to: 0
 10222  00245E  90D8               	bcf	status,0,c
 10223  002460  3196               	rrcf	___fladd@grs& (0+255),w,b
 10224  002462  0901               	iorlw	1
 10225  002464  6F96               	movwf	___fladd@grs& (0+255),b
 10226  002466  D002               	goto	l6024
 10227  002468                     l6022:
 10228                           
 10229                           ; BSR set to: 0
 10230  002468  90D8               	bcf	status,0,c
 10231  00246A  3396               	rrcf	___fladd@grs& (0+255),f,b
 10232  00246C                     l6024:
 10233                           
 10234                           ; BSR set to: 0
 10235  00246C  B187               	btfsc	___fladd@b& (0+255),0,b
 10236                           
 10237                           ; BSR set to: 0
 10238  00246E  8F96               	bsf	___fladd@grs& (0+255),7,b
 10239                           
 10240                           ; BSR set to: 0
 10241  002470  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
 10242  002472  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
 10243  002474  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
 10244  002476  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
 10245  002478  3387               	rrcf	___fladd@b& (0+255),f,b
 10246                           
 10247                           ; BSR set to: 0
 10248  00247A  2B95               	incf	___fladd@bexp& (0+255),f,b
 10249  00247C  D05F               	goto	u7220
 10250  00247E                     l6032:
 10251                           
 10252                           ; BSR set to: 0
 10253  00247E  518B               	movf	___fladd@a& (0+255),w,b
 10254  002480  5D87               	subwf	___fladd@b& (0+255),w,b
 10255  002482  518C               	movf	(___fladd@a+1)& (0+255),w,b
 10256  002484  5988               	subwfb	(___fladd@b+1)& (0+255),w,b
 10257  002486  518D               	movf	(___fladd@a+2)& (0+255),w,b
 10258  002488  5989               	subwfb	(___fladd@b+2)& (0+255),w,b
 10259  00248A  518A               	movf	(___fladd@b+3)& (0+255),w,b
 10260  00248C  0A80               	xorlw	128
 10261  00248E  6F8F               	movwf	??___fladd& (0+255),b
 10262  002490  518E               	movf	(___fladd@a+3)& (0+255),w,b
 10263  002492  0A80               	xorlw	128
 10264  002494  598F               	subwfb	??___fladd& (0+255),w,b
 10265  002496  B0D8               	btfsc	status,0,c
 10266  002498  D025               	goto	l6042
 10267                           
 10268                           ; BSR set to: 0
 10269  00249A  5187               	movf	___fladd@b& (0+255),w,b
 10270  00249C  5D8B               	subwf	___fladd@a& (0+255),w,b
 10271  00249E  6F8F               	movwf	??___fladd& (0+255),b
 10272  0024A0  5188               	movf	(___fladd@b+1)& (0+255),w,b
 10273  0024A2  598C               	subwfb	(___fladd@a+1)& (0+255),w,b
 10274  0024A4  6F90               	movwf	(??___fladd+1)& (0+255),b
 10275  0024A6  5189               	movf	(___fladd@b+2)& (0+255),w,b
 10276  0024A8  598D               	subwfb	(___fladd@a+2)& (0+255),w,b
 10277  0024AA  6F91               	movwf	(??___fladd+2)& (0+255),b
 10278  0024AC  518A               	movf	(___fladd@b+3)& (0+255),w,b
 10279  0024AE  598E               	subwfb	(___fladd@a+3)& (0+255),w,b
 10280  0024B0  6F92               	movwf	(??___fladd+3)& (0+255),b
 10281  0024B2  0EFF               	movlw	255
 10282  0024B4  258F               	addwf	??___fladd& (0+255),w,b
 10283  0024B6  6F87               	movwf	___fladd@b& (0+255),b
 10284  0024B8  0EFF               	movlw	255
 10285  0024BA  2190               	addwfc	(??___fladd+1)& (0+255),w,b
 10286  0024BC  6F88               	movwf	(___fladd@b+1)& (0+255),b
 10287  0024BE  0EFF               	movlw	255
 10288  0024C0  2191               	addwfc	(??___fladd+2)& (0+255),w,b
 10289  0024C2  6F89               	movwf	(___fladd@b+2)& (0+255),b
 10290  0024C4  0EFF               	movlw	255
 10291  0024C6  2192               	addwfc	(??___fladd+3)& (0+255),w,b
 10292  0024C8  6F8A               	movwf	(___fladd@b+3)& (0+255),b
 10293  0024CA  0E80               	movlw	128
 10294  0024CC  1B93               	xorwf	___fladd@signs& (0+255),f,b
 10295                           
 10296                           ; BSR set to: 0
 10297  0024CE  6D96               	negf	___fladd@grs& (0+255),b
 10298                           
 10299                           ; BSR set to: 0
 10300  0024D0  5196               	movf	___fladd@grs& (0+255),w,b
 10301  0024D2  A4D8               	btfss	status,2,c
 10302  0024D4  D00F               	goto	l1065
 10303                           
 10304                           ; BSR set to: 0
 10305  0024D6  0E01               	movlw	1
 10306  0024D8  2787               	addwf	___fladd@b& (0+255),f,b
 10307  0024DA  0E00               	movlw	0
 10308  0024DC  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
 10309  0024DE  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
 10310  0024E0  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
 10311  0024E2  D008               	goto	l1065
 10312  0024E4                     l6042:
 10313                           
 10314                           ; BSR set to: 0
 10315  0024E4  518B               	movf	___fladd@a& (0+255),w,b
 10316  0024E6  5F87               	subwf	___fladd@b& (0+255),f,b
 10317  0024E8  518C               	movf	(___fladd@a+1)& (0+255),w,b
 10318  0024EA  5B88               	subwfb	(___fladd@b+1)& (0+255),f,b
 10319  0024EC  518D               	movf	(___fladd@a+2)& (0+255),w,b
 10320  0024EE  5B89               	subwfb	(___fladd@b+2)& (0+255),f,b
 10321  0024F0  518E               	movf	(___fladd@a+3)& (0+255),w,b
 10322  0024F2  5B8A               	subwfb	(___fladd@b+3)& (0+255),f,b
 10323  0024F4                     l1065:
 10324                           
 10325                           ; BSR set to: 0
 10326  0024F4  5187               	movf	___fladd@b& (0+255),w,b
 10327  0024F6  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
 10328  0024F8  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
 10329  0024FA  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
 10330  0024FC  A4D8               	btfss	status,2,c
 10331  0024FE  D01C               	goto	l6066
 10332                           
 10333                           ; BSR set to: 0
 10334  002500  5196               	movf	___fladd@grs& (0+255),w,b
 10335  002502  A4D8               	btfss	status,2,c
 10336  002504  D019               	goto	l6066
 10337                           
 10338                           ; BSR set to: 0
 10339  002506  0E00               	movlw	0
 10340  002508  6F87               	movwf	?___fladd& (0+255),b
 10341  00250A  0E00               	movlw	0
 10342  00250C  6F88               	movwf	(?___fladd+1)& (0+255),b
 10343  00250E  0E00               	movlw	0
 10344  002510  6F89               	movwf	(?___fladd+2)& (0+255),b
 10345  002512  0E00               	movlw	0
 10346  002514  6F8A               	movwf	(?___fladd+3)& (0+255),b
 10347  002516  0012               	return	
 10348  002518                     l6050:
 10349                           
 10350                           ; BSR set to: 0
 10351  002518  90D8               	bcf	status,0,c
 10352  00251A  3787               	rlcf	___fladd@b& (0+255),f,b
 10353  00251C  3788               	rlcf	(___fladd@b+1)& (0+255),f,b
 10354  00251E  3789               	rlcf	(___fladd@b+2)& (0+255),f,b
 10355  002520  378A               	rlcf	(___fladd@b+3)& (0+255),f,b
 10356                           
 10357                           ; BSR set to: 0
 10358  002522  BF96               	btfsc	___fladd@grs& (0+255),7,b
 10359                           
 10360                           ; BSR set to: 0
 10361  002524  8187               	bsf	___fladd@b& (0+255),0,b
 10362                           
 10363                           ; BSR set to: 0
 10364  002526  A196               	btfss	___fladd@grs& (0+255),0,b
 10365  002528  D002               	goto	l6060
 10366                           
 10367                           ; BSR set to: 0
 10368  00252A  80D8               	bsf	status,0,c
 10369  00252C  D001               	goto	L21
 10370  00252E                     l6060:
 10371                           
 10372                           ; BSR set to: 0
 10373  00252E  90D8               	bcf	status,0,c
 10374  002530                     L21:
 10375  002530  3796               	rlcf	___fladd@grs& (0+255),f,b
 10376                           
 10377                           ; BSR set to: 0
 10378  002532  5195               	movf	___fladd@bexp& (0+255),w,b
 10379  002534  A4D8               	btfss	status,2,c
 10380                           
 10381                           ; BSR set to: 0
 10382  002536  0795               	decf	___fladd@bexp& (0+255),f,b
 10383  002538                     l6066:
 10384                           
 10385                           ; BSR set to: 0
 10386  002538  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
 10387  00253A  D7EE               	goto	l6050
 10388  00253C                     u7220:
 10389                           
 10390                           ; BSR set to: 0
 10391  00253C  0E00               	movlw	0
 10392  00253E  6F94               	movwf	___fladd@aexp& (0+255),b
 10393                           
 10394                           ; BSR set to: 0
 10395  002540  AF96               	btfss	___fladd@grs& (0+255),7,b
 10396  002542  D00B               	goto	l1074
 10397                           
 10398                           ; BSR set to: 0
 10399  002544  C096  F08F         	movff	___fladd@grs,??___fladd
 10400  002548  0E7F               	movlw	127
 10401  00254A  178F               	andwf	??___fladd& (0+255),f,b
 10402  00254C  B4D8               	btfsc	status,2,c
 10403  00254E  D003               	goto	l1075
 10404  002550                     u7240:
 10405                           
 10406                           ; BSR set to: 0
 10407  002550  0E01               	movlw	1
 10408  002552  6F94               	movwf	___fladd@aexp& (0+255),b
 10409  002554  D002               	goto	l1074
 10410  002556                     l1075:
 10411                           
 10412                           ; BSR set to: 0
 10413  002556  B187               	btfsc	___fladd@b& (0+255),0,b
 10414  002558  D7FB               	goto	u7240
 10415  00255A                     l1074:
 10416                           
 10417                           ; BSR set to: 0
 10418  00255A  5194               	movf	___fladd@aexp& (0+255),w,b
 10419  00255C  B4D8               	btfsc	status,2,c
 10420  00255E  D020               	goto	l6086
 10421                           
 10422                           ; BSR set to: 0
 10423  002560  0E01               	movlw	1
 10424  002562  2787               	addwf	___fladd@b& (0+255),f,b
 10425  002564  0E00               	movlw	0
 10426  002566  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
 10427  002568  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
 10428  00256A  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
 10429                           
 10430                           ; BSR set to: 0
 10431  00256C  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
 10432  00256E  D018               	goto	l6086
 10433                           
 10434                           ; BSR set to: 0
 10435  002570  C087  F08F         	movff	___fladd@b,??___fladd
 10436  002574  C088  F090         	movff	___fladd@b+1,??___fladd+1
 10437  002578  C089  F091         	movff	___fladd@b+2,??___fladd+2
 10438  00257C  C08A  F092         	movff	___fladd@b+3,??___fladd+3
 10439  002580  3592               	rlcf	(??___fladd+3)& (0+255),w,b
 10440  002582  3392               	rrcf	(??___fladd+3)& (0+255),f,b
 10441  002584  3391               	rrcf	(??___fladd+2)& (0+255),f,b
 10442  002586  3390               	rrcf	(??___fladd+1)& (0+255),f,b
 10443  002588  338F               	rrcf	??___fladd& (0+255),f,b
 10444  00258A  C08F  F087         	movff	??___fladd,___fladd@b
 10445  00258E  C090  F088         	movff	??___fladd+1,___fladd@b+1
 10446  002592  C091  F089         	movff	??___fladd+2,___fladd@b+2
 10447  002596  C092  F08A         	movff	??___fladd+3,___fladd@b+3
 10448  00259A  2995               	incf	___fladd@bexp& (0+255),w,b
 10449  00259C  A4D8               	btfss	status,2,c
 10450                           
 10451                           ; BSR set to: 0
 10452  00259E  2B95               	incf	___fladd@bexp& (0+255),f,b
 10453  0025A0                     l6086:
 10454                           
 10455                           ; BSR set to: 0
 10456  0025A0  2995               	incf	___fladd@bexp& (0+255),w,b
 10457  0025A2  B4D8               	btfsc	status,2,c
 10458  0025A4  D003               	goto	u7300
 10459                           
 10460                           ; BSR set to: 0
 10461  0025A6  5195               	movf	___fladd@bexp& (0+255),w,b
 10462  0025A8  A4D8               	btfss	status,2,c
 10463  0025AA  D00D               	goto	l6094
 10464  0025AC                     u7300:
 10465                           
 10466                           ; BSR set to: 0
 10467  0025AC  0E00               	movlw	0
 10468  0025AE  6F87               	movwf	___fladd@b& (0+255),b
 10469  0025B0  0E00               	movlw	0
 10470  0025B2  6F88               	movwf	(___fladd@b+1)& (0+255),b
 10471  0025B4  0E00               	movlw	0
 10472  0025B6  6F89               	movwf	(___fladd@b+2)& (0+255),b
 10473  0025B8  0E00               	movlw	0
 10474  0025BA  6F8A               	movwf	(___fladd@b+3)& (0+255),b
 10475  0025BC  5195               	movf	___fladd@bexp& (0+255),w,b
 10476  0025BE  A4D8               	btfss	status,2,c
 10477  0025C0  D002               	goto	l6094
 10478                           
 10479                           ; BSR set to: 0
 10480  0025C2  0E00               	movlw	0
 10481  0025C4  6F93               	movwf	___fladd@signs& (0+255),b
 10482  0025C6                     l6094:
 10483                           
 10484                           ; BSR set to: 0
 10485  0025C6  A195               	btfss	___fladd@bexp& (0+255),0,b
 10486  0025C8  D002               	goto	l6098
 10487                           
 10488                           ; BSR set to: 0
 10489  0025CA  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
 10490  0025CC  D001               	goto	l6100
 10491  0025CE                     l6098:
 10492                           
 10493                           ; BSR set to: 0
 10494  0025CE  9F89               	bcf	(___fladd@b+2)& (0+255),7,b
 10495  0025D0                     l6100:
 10496                           
 10497                           ; BSR set to: 0
 10498  0025D0  90D8               	bcf	status,0,c
 10499  0025D2  3195               	rrcf	___fladd@bexp& (0+255),w,b
 10500  0025D4  6F8A               	movwf	(___fladd@b+3)& (0+255),b
 10501                           
 10502                           ; BSR set to: 0
 10503  0025D6  BF93               	btfsc	___fladd@signs& (0+255),7,b
 10504                           
 10505                           ; BSR set to: 0
 10506  0025D8  8F8A               	bsf	(___fladd@b+3)& (0+255),7,b
 10507                           
 10508                           ; BSR set to: 0
 10509  0025DA  C087  F087         	movff	___fladd@b,?___fladd
 10510  0025DE  C088  F088         	movff	___fladd@b+1,?___fladd+1
 10511  0025E2  C089  F089         	movff	___fladd@b+2,?___fladd+2
 10512  0025E6  C08A  F08A         	movff	___fladd@b+3,?___fladd+3
 10513                           
 10514                           ; BSR set to: 0
 10515  0025EA  0012               	return		;funcret
 10516  0025EC                     __end_of___fladd:
 10517                           	opt callstack 0
 10518                           
 10519 ;; *************** function _enviarRS232 *****************
 10520 ;; Defined at:
 10521 ;;		line 52 in file "./../LIBRERIAS/funciones_auto.h"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;  valores         2    8[BANK0 ] PTR unsigned char 
 10524 ;;		 -> STR_6(49), STR_5(8), STR_3(21), STR_2(20), 
 10525 ;;		 -> terminal@texto(20), main@texto(8), main@text(6), 
 10526 ;; Auto vars:     Size  Location     Type
 10527 ;;  i               1   14[BANK0 ] unsigned char 
 10528 ;;  longitud_tex    2   12[BANK0 ] unsigned int 
 10529 ;; Return value:  Size  Location     Type
 10530 ;;                  1    wreg      void 
 10531 ;; Registers used:
 10532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/0
 10535 ;;		On exit  : 0/0
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10538 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10539 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10540 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10541 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10542 ;;Total ram usage:        7 bytes
 10543 ;; Hardware stack levels used:    1
 10544 ;; Hardware stack levels required when called:    3
 10545 ;; This function calls:
 10546 ;;		_length
 10547 ;; This function is called by:
 10548 ;;		_main
 10549 ;;		_terminal
 10550 ;;		_rutinaEscape
 10551 ;;		_cambiarEstadoEscapeFuego
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555                           	psect	text42
 10556  003EA4                     __ptext42:
 10557                           	opt callstack 0
 10558  003EA4                     _enviarRS232:
 10559                           	opt callstack 26
 10560                           
 10561                           ;./../LIBRERIAS/funciones_auto.h: 53:     unsigned int longitud_texto = length(valores);
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;incstack = 0
 10565  003EA4  C068  F060         	movff	enviarRS232@valores,length@text
 10566  003EA8  C069  F061         	movff	enviarRS232@valores+1,length@text+1
 10567  003EAC  EC14  F01F         	call	_length	;wreg free
 10568  003EB0  C060  F06C         	movff	?_length,enviarRS232@longitud_texto
 10569  003EB4  C061  F06D         	movff	?_length+1,enviarRS232@longitud_texto+1
 10570                           
 10571                           ;./../LIBRERIAS/funciones_auto.h: 54:     for(unsigned char i = 0; i<longitud_texto; i++
      +                          ){
 10572  003EB8  0E00               	movlw	0
 10573  003EBA  0100               	movlb	0	; () banked
 10574  003EBC  6F6E               	movwf	enviarRS232@i& (0+255),b
 10575  003EBE  D023               	goto	l7412
 10576  003EC0                     l7406:
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;./../LIBRERIAS/funciones_auto.h: 55:         TXREG1 = valores[i];
 10580  003EC0  516E               	movf	enviarRS232@i& (0+255),w,b
 10581  003EC2  2568               	addwf	enviarRS232@valores& (0+255),w,b
 10582  003EC4  6F6A               	movwf	??_enviarRS232& (0+255),b
 10583  003EC6  0E00               	movlw	0
 10584  003EC8  2169               	addwfc	(enviarRS232@valores+1)& (0+255),w,b
 10585  003ECA  6F6B               	movwf	(??_enviarRS232+1)& (0+255),b
 10586  003ECC  C06A  FFF6         	movff	??_enviarRS232,tblptrl
 10587  003ED0  C06B  FFF7         	movff	??_enviarRS232+1,tblptrh
 10588  003ED4  0E00               	movlw	low (__smallconst shr (0+16))
 10589  003ED6  6EF8               	movwf	tblptru,c
 10590  003ED8  0E0E               	movlw	(high __ramtop+-1)
 10591  003EDA  64F7               	cpfsgt	tblptrh,c
 10592  003EDC  D003               	bra	u9507
 10593  003EDE  0008               	tblrd		*
 10594  003EE0  50F5               	movf	tablat,w,c
 10595  003EE2  D005               	bra	u9500
 10596  003EE4                     u9507:
 10597  003EE4  CFF6 FFE1          	movff	tblptrl,fsr1l
 10598  003EE8  CFF7 FFE2          	movff	tblptrh,fsr1h
 10599  003EEC  50E7               	movf	indf1,w,c
 10600  003EEE                     u9500:
 10601  003EEE  6EAE               	movwf	4014,c	;volatile
 10602                           
 10603                           ;./../LIBRERIAS/funciones_auto.h: 56:         _delay((unsigned long)((3)*(48000000/4000.
      +                          0)));
 10604  003EF0  0E2F               	movlw	47
 10605  003EF2  0100               	movlb	0	; () banked
 10606  003EF4  6F6A               	movwf	??_enviarRS232& (0+255),b
 10607  003EF6  0EBF               	movlw	191
 10608  003EF8                     u9697:
 10609  003EF8  2EE8               	decfsz	wreg,f,c
 10610  003EFA  D7FE               	bra	u9697
 10611  003EFC  2F6A               	decfsz	??_enviarRS232& (0+255),f,b
 10612  003EFE  D7FC               	bra	u9697
 10613  003F00  D000               	nop2	
 10614                           
 10615                           ;./../LIBRERIAS/funciones_auto.h: 57:     }
 10616  003F02  0100               	movlb	0	; () banked
 10617  003F04  2B6E               	incf	enviarRS232@i& (0+255),f,b
 10618  003F06                     l7412:
 10619                           
 10620                           ; BSR set to: 0
 10621  003F06  516E               	movf	enviarRS232@i& (0+255),w,b
 10622  003F08  6F6A               	movwf	??_enviarRS232& (0+255),b
 10623  003F0A  6B6B               	clrf	(??_enviarRS232+1)& (0+255),b
 10624  003F0C  516C               	movf	enviarRS232@longitud_texto& (0+255),w,b
 10625  003F0E  5D6A               	subwf	??_enviarRS232& (0+255),w,b
 10626  003F10  516D               	movf	(enviarRS232@longitud_texto+1)& (0+255),w,b
 10627  003F12  596B               	subwfb	(??_enviarRS232+1)& (0+255),w,b
 10628  003F14  B0D8               	btfsc	status,0,c
 10629  003F16  0012               	return	
 10630  003F18  D7D3               	goto	l7406
 10631  003F1A                     __end_of_enviarRS232:
 10632                           	opt callstack 0
 10633                           
 10634 ;; *************** function _length *****************
 10635 ;; Defined at:
 10636 ;;		line 60 in file "./../LIBRERIAS/funciones_auto.h"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  text            2    0[BANK0 ] PTR unsigned char 
 10639 ;;		 -> STR_6(49), STR_5(8), STR_3(21), STR_2(20), 
 10640 ;;		 -> terminal@texto(20), main@texto(8), main@text(6), 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;  longitud        2    4[BANK0 ] int 
 10643 ;;  i               1    7[BANK0 ] unsigned char 
 10644 ;;  dato            1    6[BANK0 ] unsigned char 
 10645 ;; Return value:  Size  Location     Type
 10646 ;;                  2    0[BANK0 ] int 
 10647 ;; Registers used:
 10648 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10649 ;; Tracked objects:
 10650 ;;		On entry : 0/0
 10651 ;;		On exit  : 0/0
 10652 ;;		Unchanged: 0/0
 10653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10654 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10655 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10657 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10658 ;;Total ram usage:        8 bytes
 10659 ;; Hardware stack levels used:    1
 10660 ;; Hardware stack levels required when called:    2
 10661 ;; This function calls:
 10662 ;;		Nothing
 10663 ;; This function is called by:
 10664 ;;		_enviarRS232
 10665 ;; This function uses a non-reentrant model
 10666 ;;
 10667                           
 10668                           	psect	text43
 10669  003E28                     __ptext43:
 10670                           	opt callstack 0
 10671  003E28                     _length:
 10672                           	opt callstack 26
 10673                           
 10674                           ;./../LIBRERIAS/funciones_auto.h: 61:     unsigned char dato = text[0], i = 1;
 10675                           
 10676                           ; BSR set to: 0
 10677                           ;incstack = 0
 10678  003E28  C060  FFF6         	movff	length@text,tblptrl
 10679  003E2C  C061  FFF7         	movff	length@text+1,tblptrh
 10680  003E30  0E00               	movlw	low (__smallconst shr (0+16))
 10681  003E32  6EF8               	movwf	tblptru,c
 10682  003E34  0E0E               	movlw	(high __ramtop+-1)
 10683  003E36  64F7               	cpfsgt	tblptrh,c
 10684  003E38  D003               	bra	u9367
 10685  003E3A  0008               	tblrd		*
 10686  003E3C  50F5               	movf	tablat,w,c
 10687  003E3E  D005               	bra	u9360
 10688  003E40                     u9367:
 10689  003E40  CFF6 FFE1          	movff	tblptrl,fsr1l
 10690  003E44  CFF7 FFE2          	movff	tblptrh,fsr1h
 10691  003E48  50E7               	movf	indf1,w,c
 10692  003E4A                     u9360:
 10693  003E4A  0100               	movlb	0	; () banked
 10694  003E4C  6F66               	movwf	length@dato& (0+255),b
 10695                           
 10696                           ; BSR set to: 0
 10697  003E4E  0E01               	movlw	1
 10698  003E50  6F67               	movwf	length@i& (0+255),b
 10699                           
 10700                           ; BSR set to: 0
 10701                           ;./../LIBRERIAS/funciones_auto.h: 62:     int longitud = 0;
 10702  003E52  0E00               	movlw	0
 10703  003E54  6F65               	movwf	(length@longitud+1)& (0+255),b
 10704  003E56  0E00               	movlw	0
 10705  003E58  6F64               	movwf	length@longitud& (0+255),b
 10706                           
 10707                           ;./../LIBRERIAS/funciones_auto.h: 63:     while(dato != '\0'){
 10708  003E5A  D01C               	goto	l7294
 10709  003E5C                     l7288:
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;./../LIBRERIAS/funciones_auto.h: 64:         dato = text[i];
 10713  003E5C  5167               	movf	length@i& (0+255),w,b
 10714  003E5E  2560               	addwf	length@text& (0+255),w,b
 10715  003E60  6F62               	movwf	??_length& (0+255),b
 10716  003E62  0E00               	movlw	0
 10717  003E64  2161               	addwfc	(length@text+1)& (0+255),w,b
 10718  003E66  6F63               	movwf	(??_length+1)& (0+255),b
 10719  003E68  C062  FFF6         	movff	??_length,tblptrl
 10720  003E6C  C063  FFF7         	movff	??_length+1,tblptrh
 10721  003E70  0E00               	movlw	low (__smallconst shr (0+16))
 10722  003E72  6EF8               	movwf	tblptru,c
 10723  003E74  0E0E               	movlw	(high __ramtop+-1)
 10724  003E76  64F7               	cpfsgt	tblptrh,c
 10725  003E78  D003               	bra	u9377
 10726  003E7A  0008               	tblrd		*
 10727  003E7C  50F5               	movf	tablat,w,c
 10728  003E7E  D005               	bra	u9370
 10729  003E80                     u9377:
 10730  003E80  CFF6 FFE1          	movff	tblptrl,fsr1l
 10731  003E84  CFF7 FFE2          	movff	tblptrh,fsr1h
 10732  003E88  50E7               	movf	indf1,w,c
 10733  003E8A                     u9370:
 10734  003E8A  0100               	movlb	0	; () banked
 10735  003E8C  6F66               	movwf	length@dato& (0+255),b
 10736                           
 10737                           ; BSR set to: 0
 10738                           ;./../LIBRERIAS/funciones_auto.h: 65:         i++;
 10739  003E8E  2B67               	incf	length@i& (0+255),f,b
 10740                           
 10741                           ; BSR set to: 0
 10742                           ;./../LIBRERIAS/funciones_auto.h: 66:         longitud++;
 10743  003E90  4B64               	infsnz	length@longitud& (0+255),f,b
 10744  003E92  2B65               	incf	(length@longitud+1)& (0+255),f,b
 10745  003E94                     l7294:
 10746                           
 10747                           ; BSR set to: 0
 10748                           ;./../LIBRERIAS/funciones_auto.h: 63:     while(dato != '\0'){
 10749  003E94  5166               	movf	length@dato& (0+255),w,b
 10750  003E96  A4D8               	btfss	status,2,c
 10751  003E98  D7E1               	goto	l7288
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;./../LIBRERIAS/funciones_auto.h: 68:     return longitud;
 10755  003E9A  C064  F060         	movff	length@longitud,?_length
 10756  003E9E  C065  F061         	movff	length@longitud+1,?_length+1
 10757                           
 10758                           ; BSR set to: 0
 10759  003EA2  0012               	return		;funcret
 10760  003EA4                     __end_of_length:
 10761                           	opt callstack 0
 10762                           
 10763 ;; *************** function _encenderMotor *****************
 10764 ;; Defined at:
 10765 ;;		line 35 in file "./../LIBRERIAS/funciones_auto.h"
 10766 ;; Parameters:    Size  Location     Type
 10767 ;;		None
 10768 ;; Auto vars:     Size  Location     Type
 10769 ;;		None
 10770 ;; Return value:  Size  Location     Type
 10771 ;;                  1    wreg      void 
 10772 ;; Registers used:
 10773 ;;		wreg, status,2, status,0, cstack
 10774 ;; Tracked objects:
 10775 ;;		On entry : 0/0
 10776 ;;		On exit  : 0/0
 10777 ;;		Unchanged: 0/0
 10778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10783 ;;Total ram usage:        0 bytes
 10784 ;; Hardware stack levels used:    1
 10785 ;; Hardware stack levels required when called:    3
 10786 ;; This function calls:
 10787 ;;		_definirVelocidad
 10788 ;;		_rutinaArranque
 10789 ;; This function is called by:
 10790 ;;		_terminal
 10791 ;;		_rutinaEscape
 10792 ;; This function uses a non-reentrant model
 10793 ;;
 10794                           
 10795                           	psect	text44
 10796  004522                     __ptext44:
 10797                           	opt callstack 0
 10798  004522                     _encenderMotor:
 10799                           	opt callstack 26
 10800                           
 10801                           ;./../LIBRERIAS/funciones_auto.h: 36:     rutinaArranque();
 10802                           
 10803                           ; BSR set to: 0
 10804                           ;incstack = 0
 10805  004522  EC10  F022         	call	_rutinaArranque	;wreg free
 10806                           
 10807                           ;./../LIBRERIAS/funciones_auto.h: 37:     definirVelocidad();
 10808  004526  EC92  F021         	call	_definirVelocidad	;wreg free
 10809                           
 10810                           ;./../LIBRERIAS/funciones_auto.h: 38:     motor = 1;
 10811  00452A  0E01               	movlw	1
 10812  00452C  6E44               	movwf	_motor,c
 10813  00452E  0012               	return		;funcret
 10814  004530                     __end_of_encenderMotor:
 10815                           	opt callstack 0
 10816                           
 10817 ;; *************** function _rutinaArranque *****************
 10818 ;; Defined at:
 10819 ;;		line 23 in file "./../LIBRERIAS/funciones_auto.h"
 10820 ;; Parameters:    Size  Location     Type
 10821 ;;		None
 10822 ;; Auto vars:     Size  Location     Type
 10823 ;;		None
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  1    wreg      void 
 10826 ;; Registers used:
 10827 ;;		wreg, status,2
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10835 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10836 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10837 ;;Total ram usage:        2 bytes
 10838 ;; Hardware stack levels used:    1
 10839 ;; Hardware stack levels required when called:    2
 10840 ;; This function calls:
 10841 ;;		Nothing
 10842 ;; This function is called by:
 10843 ;;		_encenderMotor
 10844 ;; This function uses a non-reentrant model
 10845 ;;
 10846                           
 10847                           	psect	text45
 10848  004420                     __ptext45:
 10849                           	opt callstack 0
 10850  004420                     _rutinaArranque:
 10851                           	opt callstack 26
 10852                           
 10853                           ;./../LIBRERIAS/funciones_auto.h: 24:     CCP7CONbits.DC7B = cicle_90 & 0x0003;
 10854                           
 10855                           ;incstack = 0
 10856  004420  010F               	movlb	15	; () banked
 10857  004422  5109               	movf	9,w,b	;volatile
 10858  004424  0BCF               	andlw	-49
 10859  004426  0920               	iorlw	32
 10860  004428  6F09               	movwf	9,b	;volatile
 10861                           
 10862                           ;./../LIBRERIAS/funciones_auto.h: 25:     CCPR7L = cicle_90>>2;
 10863  00442A  0E70               	movlw	112
 10864  00442C  6F0A               	movwf	10,b	;volatile
 10865                           
 10866                           ; BSR set to: 15
 10867                           ;./../LIBRERIAS/funciones_auto.h: 26:     T2CONbits.TMR2ON = 1;
 10868  00442E  84CA               	bsf	4042,2,c	;volatile
 10869                           
 10870                           ; BSR set to: 15
 10871                           ;./../LIBRERIAS/funciones_auto.h: 27:     _delay((unsigned long)((50)*(48000000/4000.0))
      +                          );
 10872  004430  0E04               	movlw	4
 10873  004432  0100               	movlb	0	; () banked
 10874  004434  6F61               	movwf	(??_rutinaArranque+1)& (0+255),b
 10875  004436  0E0C               	movlw	12
 10876  004438  6F60               	movwf	??_rutinaArranque& (0+255),b
 10877  00443A  0E33               	movlw	51
 10878  00443C                     u9707:
 10879  00443C  2EE8               	decfsz	wreg,f,c
 10880  00443E  D7FE               	bra	u9707
 10881  004440  2F60               	decfsz	??_rutinaArranque& (0+255),f,b
 10882  004442  D7FC               	bra	u9707
 10883  004444  2F61               	decfsz	(??_rutinaArranque+1)& (0+255),f,b
 10884  004446  D7FA               	bra	u9707
 10885  004448  D000               	nop2	
 10886  00444A  0012               	return		;funcret
 10887  00444C                     __end_of_rutinaArranque:
 10888                           	opt callstack 0
 10889                           
 10890 ;; *************** function _definirVelocidad *****************
 10891 ;; Defined at:
 10892 ;;		line 41 in file "./../LIBRERIAS/funciones_auto.h"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;		None
 10895 ;; Auto vars:     Size  Location     Type
 10896 ;;		None
 10897 ;; Return value:  Size  Location     Type
 10898 ;;                  1    wreg      void 
 10899 ;; Registers used:
 10900 ;;		wreg, status,2, status,0
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10908 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10909 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10910 ;;Total ram usage:        2 bytes
 10911 ;; Hardware stack levels used:    1
 10912 ;; Hardware stack levels required when called:    2
 10913 ;; This function calls:
 10914 ;;		Nothing
 10915 ;; This function is called by:
 10916 ;;		_encenderMotor
 10917 ;;		_cambiarPWM
 10918 ;;		_rutinaEscape
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           	psect	text46
 10923  004324                     __ptext46:
 10924                           	opt callstack 0
 10925  004324                     _definirVelocidad:
 10926                           	opt callstack 26
 10927                           
 10928                           ;./../LIBRERIAS/funciones_auto.h: 42:     CCP7CONbits.DC7B = velocidad & 0x0003;
 10929                           
 10930                           ;incstack = 0
 10931  004324  C049  F060         	movff	_velocidad,??_definirVelocidad
 10932  004328  0E03               	movlw	3
 10933  00432A  0100               	movlb	0	; () banked
 10934  00432C  1760               	andwf	??_definirVelocidad& (0+255),f,b
 10935  00432E  3B60               	swapf	??_definirVelocidad& (0+255),f,b
 10936  004330  010F               	movlb	15	; () banked
 10937  004332  5109               	movf	9,w,b	;volatile
 10938  004334  0100               	movlb	0	; () banked
 10939  004336  1960               	xorwf	??_definirVelocidad& (0+255),w,b
 10940  004338  0BCF               	andlw	-49
 10941  00433A  1960               	xorwf	??_definirVelocidad& (0+255),w,b
 10942  00433C  010F               	movlb	15	; () banked
 10943  00433E  6F09               	movwf	9,b	;volatile
 10944                           
 10945                           ;./../LIBRERIAS/funciones_auto.h: 43:     CCPR7L = velocidad>>2;
 10946  004340  C049  F060         	movff	_velocidad,??_definirVelocidad
 10947  004344  C04A  F061         	movff	_velocidad+1,??_definirVelocidad+1
 10948  004348  0100               	movlb	0	; () banked
 10949  00434A  90D8               	bcf	status,0,c
 10950  00434C  3361               	rrcf	(??_definirVelocidad+1)& (0+255),f,b
 10951  00434E  3360               	rrcf	??_definirVelocidad& (0+255),f,b
 10952  004350  90D8               	bcf	status,0,c
 10953  004352  3361               	rrcf	(??_definirVelocidad+1)& (0+255),f,b
 10954  004354  3360               	rrcf	??_definirVelocidad& (0+255),f,b
 10955  004356  5160               	movf	??_definirVelocidad& (0+255),w,b
 10956  004358  010F               	movlb	15	; () banked
 10957  00435A  6F0A               	movwf	10,b	;volatile
 10958                           
 10959                           ; BSR set to: 15
 10960  00435C  0012               	return		;funcret
 10961  00435E                     __end_of_definirVelocidad:
 10962                           	opt callstack 0
 10963                           
 10964 ;; *************** function _atras *****************
 10965 ;; Defined at:
 10966 ;;		line 272 in file "auto.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;		None
 10969 ;; Auto vars:     Size  Location     Type
 10970 ;;		None
 10971 ;; Return value:  Size  Location     Type
 10972 ;;                  1    wreg      void 
 10973 ;; Registers used:
 10974 ;;		None
 10975 ;; Tracked objects:
 10976 ;;		On entry : 0/0
 10977 ;;		On exit  : 0/0
 10978 ;;		Unchanged: 0/0
 10979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10984 ;;Total ram usage:        0 bytes
 10985 ;; Hardware stack levels used:    1
 10986 ;; Hardware stack levels required when called:    2
 10987 ;; This function calls:
 10988 ;;		Nothing
 10989 ;; This function is called by:
 10990 ;;		_terminal
 10991 ;;		_rutinaEscape
 10992 ;; This function uses a non-reentrant model
 10993 ;;
 10994                           
 10995                           	psect	text47
 10996  00454A                     __ptext47:
 10997                           	opt callstack 0
 10998  00454A                     _atras:
 10999                           	opt callstack 27
 11000                           
 11001                           ;auto.c: 273:     PORTAbits.RA0 = 0;
 11002                           
 11003                           ; BSR set to: 15
 11004                           ;incstack = 0
 11005  00454A  9080               	bcf	3968,0,c	;volatile
 11006                           
 11007                           ;auto.c: 274:     PORTAbits.RA1 = 0;
 11008  00454C  9280               	bcf	3968,1,c	;volatile
 11009                           
 11010                           ;auto.c: 275:     PORTAbits.RA0 = 0;
 11011  00454E  9080               	bcf	3968,0,c	;volatile
 11012                           
 11013                           ;auto.c: 276:     PORTAbits.RA1 = 1;
 11014  004550  8280               	bsf	3968,1,c	;volatile
 11015  004552  0012               	return		;funcret
 11016  004554                     __end_of_atras:
 11017                           	opt callstack 0
 11018                           
 11019 ;; *************** function _adelante *****************
 11020 ;; Defined at:
 11021 ;;		line 265 in file "auto.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;		None
 11024 ;; Auto vars:     Size  Location     Type
 11025 ;;		None
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  1    wreg      void 
 11028 ;; Registers used:
 11029 ;;		None
 11030 ;; Tracked objects:
 11031 ;;		On entry : 0/0
 11032 ;;		On exit  : 0/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11039 ;;Total ram usage:        0 bytes
 11040 ;; Hardware stack levels used:    1
 11041 ;; Hardware stack levels required when called:    2
 11042 ;; This function calls:
 11043 ;;		Nothing
 11044 ;; This function is called by:
 11045 ;;		_terminal
 11046 ;;		_rutinaEscape
 11047 ;; This function uses a non-reentrant model
 11048 ;;
 11049                           
 11050                           	psect	text48
 11051  004554                     __ptext48:
 11052                           	opt callstack 0
 11053  004554                     _adelante:
 11054                           	opt callstack 27
 11055                           
 11056                           ;auto.c: 266:     PORTAbits.RA0 = 0;
 11057                           
 11058                           ;incstack = 0
 11059  004554  9080               	bcf	3968,0,c	;volatile
 11060                           
 11061                           ;auto.c: 267:     PORTAbits.RA1 = 0;
 11062  004556  9280               	bcf	3968,1,c	;volatile
 11063                           
 11064                           ;auto.c: 268:     PORTAbits.RA0 = 1;
 11065  004558  8080               	bsf	3968,0,c	;volatile
 11066                           
 11067                           ;auto.c: 269:     PORTAbits.RA1 = 0;
 11068  00455A  9280               	bcf	3968,1,c	;volatile
 11069  00455C  0012               	return		;funcret
 11070  00455E                     __end_of_adelante:
 11071                           	opt callstack 0
 11072                           
 11073 ;; *************** function _configuracionInicial *****************
 11074 ;; Defined at:
 11075 ;;		line 118 in file "auto.c"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;		None
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;		None
 11080 ;; Return value:  Size  Location     Type
 11081 ;;                  1    wreg      void 
 11082 ;; Registers used:
 11083 ;;		wreg, status,2, cstack
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : 0/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11093 ;;Total ram usage:        0 bytes
 11094 ;; Hardware stack levels used:    1
 11095 ;; Hardware stack levels required when called:    3
 11096 ;; This function calls:
 11097 ;;		_configurarInterrupciones
 11098 ;;		_configurarPWM7
 11099 ;;		_configurarPuertos
 11100 ;;		_configurarRS232
 11101 ;;		_configurarRS232US100
 11102 ;;		_configurarTMR5
 11103 ;; This function is called by:
 11104 ;;		_main
 11105 ;; This function uses a non-reentrant model
 11106 ;;
 11107                           
 11108                           	psect	text49
 11109  0044BA                     __ptext49:
 11110                           	opt callstack 0
 11111  0044BA                     _configuracionInicial:
 11112                           	opt callstack 27
 11113                           
 11114                           ;auto.c: 119:     configurarPuertos();
 11115                           
 11116                           ;incstack = 0
 11117  0044BA  EC89  F022         	call	_configurarPuertos	;wreg free
 11118                           
 11119                           ;auto.c: 120:     configurarPWM7();
 11120  0044BE  EC4D  F022         	call	_configurarPWM7	;wreg free
 11121                           
 11122                           ;auto.c: 121:     configurarInterrupciones();
 11123  0044C2  EC98  F022         	call	_configurarInterrupciones	;wreg free
 11124                           
 11125                           ;auto.c: 122:     configurarRS232();
 11126  0044C6  EC6A  F022         	call	_configurarRS232	;wreg free
 11127                           
 11128                           ;auto.c: 123:     configurarTMR5();
 11129  0044CA  EC76  F022         	call	_configurarTMR5	;wreg free
 11130                           
 11131                           ;auto.c: 124:     configurarRS232US100();
 11132  0044CE  EC3A  F022         	call	_configurarRS232US100	;wreg free
 11133  0044D2  0012               	return		;funcret
 11134  0044D4                     __end_of_configuracionInicial:
 11135                           	opt callstack 0
 11136                           
 11137 ;; *************** function _configurarTMR5 *****************
 11138 ;; Defined at:
 11139 ;;		line 43 in file "./../LIBRERIAS/configuracion_auto.h"
 11140 ;; Parameters:    Size  Location     Type
 11141 ;;		None
 11142 ;; Auto vars:     Size  Location     Type
 11143 ;;		None
 11144 ;; Return value:  Size  Location     Type
 11145 ;;                  1    wreg      void 
 11146 ;; Registers used:
 11147 ;;		wreg, status,2
 11148 ;; Tracked objects:
 11149 ;;		On entry : 0/0
 11150 ;;		On exit  : 0/0
 11151 ;;		Unchanged: 0/0
 11152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11157 ;;Total ram usage:        0 bytes
 11158 ;; Hardware stack levels used:    1
 11159 ;; Hardware stack levels required when called:    2
 11160 ;; This function calls:
 11161 ;;		Nothing
 11162 ;; This function is called by:
 11163 ;;		_configuracionInicial
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text50
 11168  0044EC                     __ptext50:
 11169                           	opt callstack 0
 11170  0044EC                     _configurarTMR5:
 11171                           	opt callstack 27
 11172                           
 11173                           ;./../LIBRERIAS/configuracion_auto.h: 44:     TRISDbits.TRISD4 = 0;
 11174                           
 11175                           ;incstack = 0
 11176  0044EC  9895               	bcf	3989,4,c	;volatile
 11177                           
 11178                           ;./../LIBRERIAS/configuracion_auto.h: 45:     PORTDbits.RD4 = 0;
 11179  0044EE  9883               	bcf	3971,4,c	;volatile
 11180                           
 11181                           ;./../LIBRERIAS/configuracion_auto.h: 46:     T5CON = 0x32;
 11182  0044F0  0E32               	movlw	50
 11183  0044F2  010F               	movlb	15	; () banked
 11184  0044F4  6F22               	movwf	34,b	;volatile
 11185                           
 11186                           ; BSR set to: 15
 11187                           ;./../LIBRERIAS/configuracion_auto.h: 47:     TMR5H = 0xFF;
 11188  0044F6  6924               	setf	36,b	;volatile
 11189                           
 11190                           ;./../LIBRERIAS/configuracion_auto.h: 48:     TMR5L = 0xE2;
 11191  0044F8  0EE2               	movlw	226
 11192  0044FA  6F23               	movwf	35,b	;volatile
 11193                           
 11194                           ; BSR set to: 15
 11195                           ;./../LIBRERIAS/configuracion_auto.h: 49:     PIE5bits.TMR5IE = 1;
 11196  0044FC  8491               	bsf	3985,2,c	;volatile
 11197                           
 11198                           ; BSR set to: 15
 11199                           ;./../LIBRERIAS/configuracion_auto.h: 50:     PIR5bits.TMR5IF = 0;
 11200  0044FE  9498               	bcf	3992,2,c	;volatile
 11201                           
 11202                           ; BSR set to: 15
 11203  004500  0012               	return		;funcret
 11204  004502                     __end_of_configurarTMR5:
 11205                           	opt callstack 0
 11206                           
 11207 ;; *************** function _configurarRS232US100 *****************
 11208 ;; Defined at:
 11209 ;;		line 54 in file "./../LIBRERIAS/configuracion_auto.h"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;		None
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;		None
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      void 
 11216 ;; Registers used:
 11217 ;;		wreg, status,2
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11227 ;;Total ram usage:        0 bytes
 11228 ;; Hardware stack levels used:    1
 11229 ;; Hardware stack levels required when called:    2
 11230 ;; This function calls:
 11231 ;;		Nothing
 11232 ;; This function is called by:
 11233 ;;		_configuracionInicial
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237                           	psect	text51
 11238  004474                     __ptext51:
 11239                           	opt callstack 0
 11240  004474                     _configurarRS232US100:
 11241                           	opt callstack 27
 11242                           
 11243                           ;./../LIBRERIAS/configuracion_auto.h: 55:     TRISDbits.TRISD6 = 0;
 11244                           
 11245                           ; BSR set to: 15
 11246                           ;incstack = 0
 11247  004474  9C95               	bcf	3989,6,c	;volatile
 11248                           
 11249                           ;./../LIBRERIAS/configuracion_auto.h: 56:     TRISDbits.TRISD7 = 1;
 11250  004476  8E95               	bsf	3989,7,c	;volatile
 11251                           
 11252                           ;./../LIBRERIAS/configuracion_auto.h: 57:     PPSCON = 0;
 11253  004478  0E00               	movlw	0
 11254  00447A  010E               	movlb	14	; () banked
 11255  00447C  6FBF               	movwf	191,b	;volatile
 11256                           
 11257                           ;./../LIBRERIAS/configuracion_auto.h: 58:     RPOR23 = 6;
 11258  00447E  0E06               	movlw	6
 11259  004480  6FD7               	movwf	215,b	;volatile
 11260                           
 11261                           ;./../LIBRERIAS/configuracion_auto.h: 59:     RPINR16 = 24;
 11262  004482  0E18               	movlw	24
 11263  004484  6FF7               	movwf	247,b	;volatile
 11264                           
 11265                           ;./../LIBRERIAS/configuracion_auto.h: 60:     TXSTA2 = 0x22;
 11266  004486  0E22               	movlw	34
 11267  004488  6EA8               	movwf	4008,c	;volatile
 11268                           
 11269                           ;./../LIBRERIAS/configuracion_auto.h: 61:     RCSTA2 = 0x90;
 11270  00448A  0E90               	movlw	144
 11271  00448C  6E9C               	movwf	3996,c	;volatile
 11272                           
 11273                           ; BSR set to: 14
 11274                           ;./../LIBRERIAS/configuracion_auto.h: 62:     BAUDCON2bits.BRG16 = 0;
 11275  00448E  967C               	bcf	3964,3,c	;volatile
 11276                           
 11277                           ;./../LIBRERIAS/configuracion_auto.h: 63:     SPBRG2 = 77;
 11278  004490  0E4D               	movlw	77
 11279  004492  6EAB               	movwf	4011,c	;volatile
 11280                           
 11281                           ; BSR set to: 14
 11282                           ;./../LIBRERIAS/configuracion_auto.h: 64:     PIR3bits.RC2IF = 0;
 11283  004494  9AA4               	bcf	4004,5,c	;volatile
 11284                           
 11285                           ; BSR set to: 14
 11286                           ;./../LIBRERIAS/configuracion_auto.h: 65:     PIE3bits.RC2IE = 1;
 11287  004496  8AA3               	bsf	4003,5,c	;volatile
 11288                           
 11289                           ; BSR set to: 14
 11290  004498  0012               	return		;funcret
 11291  00449A                     __end_of_configurarRS232US100:
 11292                           	opt callstack 0
 11293                           
 11294 ;; *************** function _configurarRS232 *****************
 11295 ;; Defined at:
 11296 ;;		line 32 in file "./../LIBRERIAS/configuracion_auto.h"
 11297 ;; Parameters:    Size  Location     Type
 11298 ;;		None
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;		None
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  1    wreg      void 
 11303 ;; Registers used:
 11304 ;;		wreg, status,2
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11314 ;;Total ram usage:        0 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; Hardware stack levels required when called:    2
 11317 ;; This function calls:
 11318 ;;		Nothing
 11319 ;; This function is called by:
 11320 ;;		_configuracionInicial
 11321 ;; This function uses a non-reentrant model
 11322 ;;
 11323                           
 11324                           	psect	text52
 11325  0044D4                     __ptext52:
 11326                           	opt callstack 0
 11327  0044D4                     _configurarRS232:
 11328                           	opt callstack 27
 11329                           
 11330                           ;./../LIBRERIAS/configuracion_auto.h: 33:     TRISCbits.TRISC7 = 1;
 11331                           
 11332                           ; BSR set to: 14
 11333                           ;incstack = 0
 11334  0044D4  8E94               	bsf	3988,7,c	;volatile
 11335                           
 11336                           ;./../LIBRERIAS/configuracion_auto.h: 34:     TRISCbits.TRISC6 = 0;
 11337  0044D6  9C94               	bcf	3988,6,c	;volatile
 11338                           
 11339                           ;./../LIBRERIAS/configuracion_auto.h: 35:     TXSTA1 = 0x22;
 11340  0044D8  0E22               	movlw	34
 11341  0044DA  6EAD               	movwf	4013,c	;volatile
 11342                           
 11343                           ;./../LIBRERIAS/configuracion_auto.h: 36:     RCSTA1 = 0x90;
 11344  0044DC  0E90               	movlw	144
 11345  0044DE  6EAC               	movwf	4012,c	;volatile
 11346                           
 11347                           ;./../LIBRERIAS/configuracion_auto.h: 37:     BAUDCON1bits.BRG16 = 0;
 11348  0044E0  967E               	bcf	3966,3,c	;volatile
 11349                           
 11350                           ;./../LIBRERIAS/configuracion_auto.h: 38:     SPBRG1 = 77;
 11351  0044E2  0E4D               	movlw	77
 11352  0044E4  6EB0               	movwf	4016,c	;volatile
 11353                           
 11354                           ;./../LIBRERIAS/configuracion_auto.h: 39:     PIR1bits.RC1IF = 0;
 11355  0044E6  9A9E               	bcf	3998,5,c	;volatile
 11356                           
 11357                           ;./../LIBRERIAS/configuracion_auto.h: 40:     PIE1bits.RC1IE = 1;
 11358  0044E8  8A9D               	bsf	3997,5,c	;volatile
 11359  0044EA  0012               	return		;funcret
 11360  0044EC                     __end_of_configurarRS232:
 11361                           	opt callstack 0
 11362                           
 11363 ;; *************** function _configurarPuertos *****************
 11364 ;; Defined at:
 11365 ;;		line 3 in file "./../LIBRERIAS/configuracion_auto.h"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;		None
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;		None
 11370 ;; Return value:  Size  Location     Type
 11371 ;;                  1    wreg      void 
 11372 ;; Registers used:
 11373 ;;		wreg, status,2
 11374 ;; Tracked objects:
 11375 ;;		On entry : 0/0
 11376 ;;		On exit  : 0/0
 11377 ;;		Unchanged: 0/0
 11378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11383 ;;Total ram usage:        0 bytes
 11384 ;; Hardware stack levels used:    1
 11385 ;; Hardware stack levels required when called:    2
 11386 ;; This function calls:
 11387 ;;		Nothing
 11388 ;; This function is called by:
 11389 ;;		_configuracionInicial
 11390 ;; This function uses a non-reentrant model
 11391 ;;
 11392                           
 11393                           	psect	text53
 11394  004512                     __ptext53:
 11395                           	opt callstack 0
 11396  004512                     _configurarPuertos:
 11397                           	opt callstack 27
 11398                           
 11399                           ;./../LIBRERIAS/configuracion_auto.h: 4:     ANCON0 = 0x7F;
 11400                           
 11401                           ;incstack = 0
 11402  004512  0E7F               	movlw	127
 11403  004514  010F               	movlb	15	; () banked
 11404  004516  6F48               	movwf	72,b	;volatile
 11405                           
 11406                           ;./../LIBRERIAS/configuracion_auto.h: 5:     ANCON1 = 0x1F;
 11407  004518  0E1F               	movlw	31
 11408  00451A  6F49               	movwf	73,b	;volatile
 11409                           
 11410                           ; BSR set to: 15
 11411                           ;./../LIBRERIAS/configuracion_auto.h: 6:     TRISAbits.TRISA0 = 0;
 11412  00451C  9092               	bcf	3986,0,c	;volatile
 11413                           
 11414                           ; BSR set to: 15
 11415                           ;./../LIBRERIAS/configuracion_auto.h: 7:     TRISAbits.TRISA1 = 0;
 11416  00451E  9292               	bcf	3986,1,c	;volatile
 11417                           
 11418                           ; BSR set to: 15
 11419  004520  0012               	return		;funcret
 11420  004522                     __end_of_configurarPuertos:
 11421                           	opt callstack 0
 11422                           
 11423 ;; *************** function _configurarPWM7 *****************
 11424 ;; Defined at:
 11425 ;;		line 20 in file "./../LIBRERIAS/configuracion_auto.h"
 11426 ;; Parameters:    Size  Location     Type
 11427 ;;		None
 11428 ;; Auto vars:     Size  Location     Type
 11429 ;;		None
 11430 ;; Return value:  Size  Location     Type
 11431 ;;                  1    wreg      void 
 11432 ;; Registers used:
 11433 ;;		wreg, status,2
 11434 ;; Tracked objects:
 11435 ;;		On entry : 0/0
 11436 ;;		On exit  : 0/0
 11437 ;;		Unchanged: 0/0
 11438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11443 ;;Total ram usage:        0 bytes
 11444 ;; Hardware stack levels used:    1
 11445 ;; Hardware stack levels required when called:    2
 11446 ;; This function calls:
 11447 ;;		Nothing
 11448 ;; This function is called by:
 11449 ;;		_configuracionInicial
 11450 ;; This function uses a non-reentrant model
 11451 ;;
 11452                           
 11453                           	psect	text54
 11454  00449A                     __ptext54:
 11455                           	opt callstack 0
 11456  00449A                     _configurarPWM7:
 11457                           	opt callstack 27
 11458                           
 11459                           ;./../LIBRERIAS/configuracion_auto.h: 21:     TRISBbits.TRISB4 = 0;
 11460                           
 11461                           ; BSR set to: 15
 11462                           ;incstack = 0
 11463  00449A  9893               	bcf	3987,4,c	;volatile
 11464                           
 11465                           ;./../LIBRERIAS/configuracion_auto.h: 22:     TRISBbits.TRISB7 = 0;
 11466  00449C  9E93               	bcf	3987,7,c	;volatile
 11467                           
 11468                           ;./../LIBRERIAS/configuracion_auto.h: 23:     CCP7CONbits.CCP7M = 0xC;
 11469  00449E  010F               	movlb	15	; () banked
 11470  0044A0  5109               	movf	9,w,b	;volatile
 11471  0044A2  0BF0               	andlw	-16
 11472  0044A4  090C               	iorlw	12
 11473  0044A6  6F09               	movwf	9,b	;volatile
 11474                           
 11475                           ;./../LIBRERIAS/configuracion_auto.h: 24:     CCPTMRS1bits.C7TSEL = 0b00;
 11476  0044A8  0E3F               	movlw	-193
 11477  0044AA  1751               	andwf	81,f,b	;volatile
 11478                           
 11479                           ;./../LIBRERIAS/configuracion_auto.h: 26:     T2CON = 0x02;
 11480  0044AC  0E02               	movlw	2
 11481  0044AE  6ECA               	movwf	4042,c	;volatile
 11482                           
 11483                           ;./../LIBRERIAS/configuracion_auto.h: 27:     PR2 = 124;
 11484  0044B0  0E7C               	movlw	124
 11485  0044B2  6ECB               	movwf	4043,c	;volatile
 11486                           
 11487                           ;./../LIBRERIAS/configuracion_auto.h: 29:     TMR2 = 0x00;
 11488  0044B4  0E00               	movlw	0
 11489  0044B6  6ECC               	movwf	4044,c	;volatile
 11490                           
 11491                           ; BSR set to: 15
 11492  0044B8  0012               	return		;funcret
 11493  0044BA                     __end_of_configurarPWM7:
 11494                           	opt callstack 0
 11495                           
 11496 ;; *************** function _configurarInterrupciones *****************
 11497 ;; Defined at:
 11498 ;;		line 10 in file "./../LIBRERIAS/configuracion_auto.h"
 11499 ;; Parameters:    Size  Location     Type
 11500 ;;		None
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;		None
 11503 ;; Return value:  Size  Location     Type
 11504 ;;                  1    wreg      void 
 11505 ;; Registers used:
 11506 ;;		None
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11516 ;;Total ram usage:        0 bytes
 11517 ;; Hardware stack levels used:    1
 11518 ;; Hardware stack levels required when called:    2
 11519 ;; This function calls:
 11520 ;;		Nothing
 11521 ;; This function is called by:
 11522 ;;		_configuracionInicial
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526                           	psect	text55
 11527  004530                     __ptext55:
 11528                           	opt callstack 0
 11529  004530                     _configurarInterrupciones:
 11530                           	opt callstack 27
 11531                           
 11532                           ;./../LIBRERIAS/configuracion_auto.h: 11:     TRISBbits.TRISB0 = 1;
 11533                           
 11534                           ; BSR set to: 15
 11535                           ;incstack = 0
 11536  004530  8093               	bsf	3987,0,c	;volatile
 11537                           
 11538                           ;./../LIBRERIAS/configuracion_auto.h: 12:     INTCONbits.GIE = 1;
 11539  004532  8EF2               	bsf	4082,7,c	;volatile
 11540                           
 11541                           ;./../LIBRERIAS/configuracion_auto.h: 13:     INTCONbits.PEIE = 1;
 11542  004534  8CF2               	bsf	4082,6,c	;volatile
 11543                           
 11544                           ;./../LIBRERIAS/configuracion_auto.h: 14:     INTCON2bits.INTEDG0=0;
 11545  004536  9CF1               	bcf	4081,6,c	;volatile
 11546                           
 11547                           ;./../LIBRERIAS/configuracion_auto.h: 15:     INTCONbits.INT0F = 0;
 11548  004538  92F2               	bcf	4082,1,c	;volatile
 11549                           
 11550                           ;./../LIBRERIAS/configuracion_auto.h: 16:     INTCONbits.INT0E = 1;
 11551  00453A  88F2               	bsf	4082,4,c	;volatile
 11552  00453C  0012               	return		;funcret
 11553  00453E                     __end_of_configurarInterrupciones:
 11554                           	opt callstack 0
 11555                           
 11556 ;; *************** function _PWMServo *****************
 11557 ;; Defined at:
 11558 ;;		line 246 in file "auto.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;		None
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;		None
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  1    wreg      void 
 11565 ;; Registers used:
 11566 ;;		wreg, status,2, status,0
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11576 ;;Total ram usage:        0 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:    2
 11579 ;; This function calls:
 11580 ;;		Nothing
 11581 ;; This function is called by:
 11582 ;;		_main
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           	psect	text56
 11587  0041C0                     __ptext56:
 11588                           	opt callstack 0
 11589  0041C0                     _PWMServo:
 11590                           	opt callstack 28
 11591                           
 11592                           ;auto.c: 247:     contador_timer_5 = 0;
 11593                           
 11594                           ;incstack = 0
 11595  0041C0  0E00               	movlw	0
 11596  0041C2  6E3D               	movwf	_contador_timer_5+1,c
 11597  0041C4  0E00               	movlw	0
 11598  0041C6  6E3C               	movwf	_contador_timer_5,c
 11599                           
 11600                           ;auto.c: 248:     if(PORTDbits.RD4 == 1){
 11601  0041C8  A883               	btfss	3971,4,c	;volatile
 11602  0041CA  D010               	goto	l273
 11603                           
 11604                           ;auto.c: 249:         parar++;
 11605  0041CC  4A3E               	infsnz	_parar,f,c
 11606  0041CE  2A3F               	incf	_parar+1,f,c
 11607                           
 11608                           ;auto.c: 250:         PORTDbits.RD4 = 0;
 11609  0041D0  9883               	bcf	3971,4,c	;volatile
 11610                           
 11611                           ;auto.c: 251:         tiempo_anterior_1 = TIME_MAX;
 11612  0041D2  C047  F045         	movff	_TIME_MAX,_tiempo_anterior_1
 11613  0041D6  C048  F046         	movff	_TIME_MAX+1,_tiempo_anterior_1+1
 11614                           
 11615                           ;auto.c: 252:         TIME_MAX = 1000 - tiempo_anterior_1;
 11616  0041DA  5045               	movf	_tiempo_anterior_1,w,c
 11617  0041DC  08E8               	sublw	232
 11618  0041DE  6E47               	movwf	_TIME_MAX,c
 11619  0041E0  5046               	movf	_tiempo_anterior_1+1,w,c
 11620  0041E2  A0D8               	btfss	status,0,c
 11621  0041E4  2AE8               	incf	wreg,f,c
 11622  0041E6  0803               	sublw	3
 11623  0041E8  6E48               	movwf	_TIME_MAX+1,c
 11624                           
 11625                           ;auto.c: 253:     }
 11626  0041EA  D005               	goto	l7558
 11627  0041EC                     l273:
 11628                           
 11629                           ;auto.c: 255:         PORTDbits.RD4 = 1;
 11630  0041EC  8883               	bsf	3971,4,c	;volatile
 11631                           
 11632                           ;auto.c: 256:         TIME_MAX = tiempo_anterior_1;
 11633  0041EE  C045  F047         	movff	_tiempo_anterior_1,_TIME_MAX
 11634  0041F2  C046  F048         	movff	_tiempo_anterior_1+1,_TIME_MAX+1
 11635  0041F6                     l7558:
 11636                           
 11637                           ;auto.c: 258:     if(parar == 300){
 11638  0041F6  0E2C               	movlw	44
 11639  0041F8  183E               	xorwf	_parar,w,c
 11640  0041FA  E10A               	bnz	l276
 11641  0041FC  043F               	decf	_parar+1,w,c
 11642  0041FE  A4D8               	btfss	status,2,c
 11643  004200  0012               	return	
 11644                           
 11645                           ;auto.c: 259:         T5CONbits.TMR5ON = 0;
 11646  004202  010F               	movlb	15	; () banked
 11647  004204  9122               	bcf	34,0,b	;volatile
 11648                           
 11649                           ;auto.c: 260:         PORTDbits.RD4 = 0;
 11650  004206  9883               	bcf	3971,4,c	;volatile
 11651                           
 11652                           ; BSR set to: 15
 11653                           ;auto.c: 261:         parar = 0;
 11654  004208  0E00               	movlw	0
 11655  00420A  6E3F               	movwf	_parar+1,c
 11656  00420C  0E00               	movlw	0
 11657  00420E  6E3E               	movwf	_parar,c
 11658  004210                     l276:
 11659  004210  0012               	return		;funcret
 11660  004212                     __end_of_PWMServo:
 11661                           	opt callstack 0
 11662                           
 11663 ;; *************** function _rutina *****************
 11664 ;; Defined at:
 11665 ;;		line 52 in file "auto.c"
 11666 ;; Parameters:    Size  Location     Type
 11667 ;;		None
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;  dato            1   40[COMRAM] unsigned char 
 11670 ;; Return value:  Size  Location     Type
 11671 ;;                  1    wreg      void 
 11672 ;; Registers used:
 11673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11674 ;; Tracked objects:
 11675 ;;		On entry : 0/0
 11676 ;;		On exit  : 0/0
 11677 ;;		Unchanged: 0/0
 11678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11682 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11683 ;;Total ram usage:        3 bytes
 11684 ;; Hardware stack levels used:    1
 11685 ;; Hardware stack levels required when called:    1
 11686 ;; This function calls:
 11687 ;;		i2___awdiv
 11688 ;;		i2___fladd
 11689 ;;		i2___xxtofl
 11690 ;; This function is called by:
 11691 ;;		Interrupt level 2
 11692 ;; This function uses a non-reentrant model
 11693 ;;
 11694                           
 11695                           	psect	intcode
 11696  000008                     __pintcode:
 11697                           	opt callstack 0
 11698  000008                     _rutina:
 11699                           	opt callstack 20
 11700                           
 11701                           ;incstack = 0
 11702  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11703  00000A  CFD9 F027          	movff	fsr2l,??_rutina
 11704  00000E  CFDA F028          	movff	fsr2h,??_rutina+1
 11705                           
 11706                           ;auto.c: 53:     if(PIR1bits.RC1IF == 1){
 11707  000012  AA9E               	btfss	3998,5,c	;volatile
 11708  000014  D016               	goto	i2l196
 11709                           
 11710                           ;auto.c: 54:         unsigned char dato = RCREG1;
 11711  000016  CFAF F029          	movff	4015,rutina@dato	;volatile
 11712                           
 11713                           ;auto.c: 55:         if(dato == 'P'){
 11714  00001A  0E50               	movlw	80
 11715  00001C  1829               	xorwf	rutina@dato,w,c
 11716  00001E  A4D8               	btfss	status,2,c
 11717  000020  D006               	goto	i2l5616
 11718                           
 11719                           ;auto.c: 56:             bandera = 1;
 11720  000022  0E01               	movlw	1
 11721  000024  0101               	movlb	1	; () banked
 11722  000026  6F21               	movwf	_bandera& (0+255),b
 11723                           
 11724                           ;auto.c: 57:             indicador = 0;
 11725  000028  0E00               	movlw	0
 11726  00002A  6E43               	movwf	_indicador,c
 11727                           
 11728                           ;auto.c: 58:         }
 11729  00002C  D081               	goto	i2l208
 11730  00002E                     i2l5616:
 11731                           
 11732                           ;auto.c: 60:             datos[indicador] = dato;
 11733  00002E  0E72               	movlw	low _datos
 11734  000030  2443               	addwf	_indicador,w,c
 11735  000032  6ED9               	movwf	fsr2l,c
 11736  000034  6ADA               	clrf	fsr2h,c
 11737  000036  0E01               	movlw	high _datos
 11738  000038  22DA               	addwfc	fsr2h,f,c
 11739  00003A  C029  FFDF         	movff	rutina@dato,indf2
 11740                           
 11741                           ;auto.c: 61:             indicador++;
 11742  00003E  2A43               	incf	_indicador,f,c
 11743  000040  D077               	goto	i2l208
 11744  000042                     i2l196:
 11745  000042  A498               	btfss	3992,2,c	;volatile
 11746  000044  D016               	goto	i2l200
 11747                           
 11748                           ;auto.c: 65:         PIR5bits.TMR5IF = 0;
 11749  000046  9498               	bcf	3992,2,c	;volatile
 11750                           
 11751                           ;auto.c: 66:         contador_timer_5++;
 11752  000048  4A3C               	infsnz	_contador_timer_5,f,c
 11753  00004A  2A3D               	incf	_contador_timer_5+1,f,c
 11754                           
 11755                           ;auto.c: 67:         TMR5H = 0xFF;
 11756  00004C  010F               	movlb	15	; () banked
 11757  00004E  6924               	setf	36,b	;volatile
 11758                           
 11759                           ; BSR set to: 15
 11760                           ;auto.c: 68:         TMR5L = 0xE2;
 11761  000050  0EE2               	movlw	226
 11762  000052  6F23               	movwf	35,b	;volatile
 11763                           
 11764                           ; BSR set to: 15
 11765                           ;auto.c: 69:         if(contador_timer_5 == TIME_MAX){
 11766  000054  5047               	movf	_TIME_MAX,w,c
 11767  000056  183C               	xorwf	_contador_timer_5,w,c
 11768  000058  E16B               	bnz	i2l208
 11769  00005A  5048               	movf	_TIME_MAX+1,w,c
 11770  00005C  183D               	xorwf	_contador_timer_5+1,w,c
 11771  00005E  A4D8               	btfss	status,2,c
 11772  000060  D067               	goto	i2l208
 11773                           
 11774                           ; BSR set to: 15
 11775                           ;auto.c: 70:             contador_timer_5 = 0;
 11776  000062  0E00               	movlw	0
 11777  000064  6E3D               	movwf	_contador_timer_5+1,c
 11778  000066  0E00               	movlw	0
 11779  000068  6E3C               	movwf	_contador_timer_5,c
 11780                           
 11781                           ;auto.c: 71:             bandera_servo = 1;
 11782  00006A  0E01               	movlw	1
 11783  00006C  0101               	movlb	1	; () banked
 11784  00006E  6F20               	movwf	_bandera_servo& (0+255),b
 11785  000070  D05F               	goto	i2l208
 11786  000072                     i2l200:
 11787  000072  A2F2               	btfss	4082,1,c	;volatile
 11788  000074  D005               	goto	i2l203
 11789                           
 11790                           ;auto.c: 75:         INTCONbits.INT0F = 0;
 11791  000076  92F2               	bcf	4082,1,c	;volatile
 11792                           
 11793                           ;auto.c: 76:         obstaculo = 1;
 11794  000078  0E01               	movlw	1
 11795  00007A  0101               	movlb	1	; () banked
 11796  00007C  6F1F               	movwf	_obstaculo& (0+255),b
 11797                           
 11798                           ;auto.c: 77:     }
 11799  00007E  D058               	goto	i2l208
 11800  000080                     i2l203:
 11801  000080  AAA4               	btfss	4004,5,c	;volatile
 11802  000082  D056               	goto	i2l208
 11803                           
 11804                           ;auto.c: 79:         if(contador_datos == 1){
 11805  000084  0441               	decf	_contador_datos,w,c
 11806  000086  A4D8               	btfss	status,2,c
 11807  000088  D035               	goto	i2l5644
 11808                           
 11809                           ;auto.c: 80:             bandera_distancia = 1;
 11810  00008A  0E01               	movlw	1
 11811  00008C  0101               	movlb	1	; () banked
 11812  00008E  6F1E               	movwf	_bandera_distancia& (0+255),b
 11813                           
 11814                           ; BSR set to: 1
 11815                           ;auto.c: 81:             distancia += (RCREG2)/10;
 11816  000090  C032  F017         	movff	_distancia,i2___fladd@b
 11817  000094  C033  F018         	movff	_distancia+1,i2___fladd@b+1
 11818  000098  C034  F019         	movff	_distancia+2,i2___fladd@b+2
 11819  00009C  C035  F01A         	movff	_distancia+3,i2___fladd@b+3
 11820  0000A0  0E00               	movlw	0
 11821  0000A2  6E04               	movwf	i2___awdiv@divisor+1,c
 11822  0000A4  0E0A               	movlw	10
 11823  0000A6  6E03               	movwf	i2___awdiv@divisor,c
 11824  0000A8  CFAA F001          	movff	4010,i2___awdiv@dividend	;volatile
 11825  0000AC  6A02               	clrf	i2___awdiv@dividend+1,c
 11826  0000AE  EC91  F01E         	call	i2___awdiv	;wreg free
 11827  0000B2  C001  F009         	movff	?i2___awdiv,i2___xxtofl@val
 11828  0000B6  C002  F00A         	movff	?i2___awdiv+1,i2___xxtofl@val+1
 11829  0000BA  0E00               	movlw	0
 11830  0000BC  BE0A               	btfsc	i2___xxtofl@val+1,7,c
 11831  0000BE  0EFF               	movlw	-1
 11832  0000C0  6E0B               	movwf	i2___xxtofl@val+2,c
 11833  0000C2  6E0C               	movwf	i2___xxtofl@val+3,c
 11834  0000C4  0E01               	movlw	1
 11835  0000C6  EC75  F019         	call	i2___xxtofl
 11836  0000CA  C009  F01B         	movff	?i2___xxtofl,i2___fladd@a
 11837  0000CE  C00A  F01C         	movff	?i2___xxtofl+1,i2___fladd@a+1
 11838  0000D2  C00B  F01D         	movff	?i2___xxtofl+2,i2___fladd@a+2
 11839  0000D6  C00C  F01E         	movff	?i2___xxtofl+3,i2___fladd@a+3
 11840  0000DA  ECF6  F012         	call	i2___fladd	;wreg free
 11841  0000DE  C017  F032         	movff	?i2___fladd,_distancia
 11842  0000E2  C018  F033         	movff	?i2___fladd+1,_distancia+1
 11843  0000E6  C019  F034         	movff	?i2___fladd+2,_distancia+2
 11844  0000EA  C01A  F035         	movff	?i2___fladd+3,_distancia+3
 11845                           
 11846                           ;auto.c: 82:             contador_datos = 0;
 11847  0000EE  0E00               	movlw	0
 11848  0000F0  6E41               	movwf	_contador_datos,c
 11849                           
 11850                           ;auto.c: 83:         }
 11851  0000F2  D01E               	goto	i2l208
 11852  0000F4                     i2l5644:
 11853                           
 11854                           ;auto.c: 85:             distancia = 256*(RCREG2)/10;
 11855  0000F4  0E00               	movlw	0
 11856  0000F6  6E04               	movwf	i2___awdiv@divisor+1,c
 11857  0000F8  0E0A               	movlw	10
 11858  0000FA  6E03               	movwf	i2___awdiv@divisor,c
 11859  0000FC  50AA               	movf	4010,w,c	;volatile
 11860  0000FE  6E02               	movwf	i2___awdiv@dividend+1,c
 11861  000100  6A01               	clrf	i2___awdiv@dividend,c
 11862  000102  EC91  F01E         	call	i2___awdiv	;wreg free
 11863  000106  C001  F009         	movff	?i2___awdiv,i2___xxtofl@val
 11864  00010A  C002  F00A         	movff	?i2___awdiv+1,i2___xxtofl@val+1
 11865  00010E  0E00               	movlw	0
 11866  000110  BE0A               	btfsc	i2___xxtofl@val+1,7,c
 11867  000112  0EFF               	movlw	-1
 11868  000114  6E0B               	movwf	i2___xxtofl@val+2,c
 11869  000116  6E0C               	movwf	i2___xxtofl@val+3,c
 11870  000118  0E01               	movlw	1
 11871  00011A  EC75  F019         	call	i2___xxtofl
 11872  00011E  C009  F032         	movff	?i2___xxtofl,_distancia
 11873  000122  C00A  F033         	movff	?i2___xxtofl+1,_distancia+1
 11874  000126  C00B  F034         	movff	?i2___xxtofl+2,_distancia+2
 11875  00012A  C00C  F035         	movff	?i2___xxtofl+3,_distancia+3
 11876                           
 11877                           ;auto.c: 86:             contador_datos ++;
 11878  00012E  2A41               	incf	_contador_datos,f,c
 11879  000130                     i2l208:
 11880  000130  C028  FFDA         	movff	??_rutina+1,fsr2h
 11881  000134  C027  FFD9         	movff	??_rutina,fsr2l
 11882  000138  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11883  00013A  0011               	retfie		f
 11884  00013C                     __end_of_rutina:
 11885                           	opt callstack 0
 11886                           
 11887 ;; *************** function i2___xxtofl *****************
 11888 ;; Defined at:
 11889 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 11890 ;; Parameters:    Size  Location     Type
 11891 ;;  sign            1    wreg     unsigned char 
 11892 ;;  val             4    8[COMRAM] long 
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;  sign            1   16[COMRAM] unsigned char 
 11895 ;;  __xxtofl        4   18[COMRAM] unsigned long 
 11896 ;;  __xxtofl        1   17[COMRAM] unsigned char 
 11897 ;; Return value:  Size  Location     Type
 11898 ;;                  4    8[COMRAM] unsigned char 
 11899 ;; Registers used:
 11900 ;;		wreg, status,2, status,0
 11901 ;; Tracked objects:
 11902 ;;		On entry : 0/0
 11903 ;;		On exit  : 0/0
 11904 ;;		Unchanged: 0/0
 11905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11907 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11909 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11910 ;;Total ram usage:       14 bytes
 11911 ;; Hardware stack levels used:    1
 11912 ;; This function calls:
 11913 ;;		Nothing
 11914 ;; This function is called by:
 11915 ;;		_rutina
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919                           	psect	text58
 11920  0032EA                     __ptext58:
 11921                           	opt callstack 0
 11922  0032EA                     i2___xxtofl:
 11923                           	opt callstack 20
 11924                           
 11925                           ;incstack = 0
 11926                           ;i2___xxtofl@sign stored from wreg
 11927  0032EA  6E11               	movwf	i2___xxtofl@sign,c
 11928  0032EC  5011               	movf	i2___xxtofl@sign,w,c
 11929  0032EE  A4D8               	btfss	status,2,c
 11930  0032F0  AE0C               	btfss	i2___xxtofl@val+3,7,c
 11931  0032F2  D01A               	goto	i2l1175
 11932  0032F4  C009  F00D         	movff	i2___xxtofl@val,??i2___xxtofl
 11933  0032F8  C00A  F00E         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 11934  0032FC  C00B  F00F         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 11935  003300  C00C  F010         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 11936  003304  1E0D               	comf	??i2___xxtofl,f,c
 11937  003306  1E0E               	comf	??i2___xxtofl+1,f,c
 11938  003308  1E0F               	comf	??i2___xxtofl+2,f,c
 11939  00330A  1E10               	comf	??i2___xxtofl+3,f,c
 11940  00330C  2A0D               	incf	??i2___xxtofl,f,c
 11941  00330E  0E00               	movlw	0
 11942  003310  220E               	addwfc	??i2___xxtofl+1,f,c
 11943  003312  220F               	addwfc	??i2___xxtofl+2,f,c
 11944  003314  2210               	addwfc	??i2___xxtofl+3,f,c
 11945  003316  C00D  F013         	movff	??i2___xxtofl,i2___xxtofl@arg
 11946  00331A  C00E  F014         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 11947  00331E  C00F  F015         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 11948  003322  C010  F016         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 11949  003326  D008               	goto	i2l5568
 11950  003328                     i2l1175:
 11951  003328  C009  F013         	movff	i2___xxtofl@val,i2___xxtofl@arg
 11952  00332C  C00A  F014         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 11953  003330  C00B  F015         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 11954  003334  C00C  F016         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 11955  003338                     i2l5568:
 11956  003338  5009               	movf	i2___xxtofl@val,w,c
 11957  00333A  100A               	iorwf	i2___xxtofl@val+1,w,c
 11958  00333C  100B               	iorwf	i2___xxtofl@val+2,w,c
 11959  00333E  100C               	iorwf	i2___xxtofl@val+3,w,c
 11960  003340  A4D8               	btfss	status,2,c
 11961  003342  D009               	goto	i2l5574
 11962  003344  0E00               	movlw	0
 11963  003346  6E09               	movwf	?i2___xxtofl,c
 11964  003348  0E00               	movlw	0
 11965  00334A  6E0A               	movwf	?i2___xxtofl+1,c
 11966  00334C  0E00               	movlw	0
 11967  00334E  6E0B               	movwf	?i2___xxtofl+2,c
 11968  003350  0E00               	movlw	0
 11969  003352  6E0C               	movwf	?i2___xxtofl+3,c
 11970  003354  0012               	return	
 11971  003356                     i2l5574:
 11972  003356  0E96               	movlw	150
 11973  003358  6E12               	movwf	i2___xxtofl@exp,c
 11974  00335A  D006               	goto	i2l5578
 11975  00335C                     i2l5576:
 11976  00335C  2A12               	incf	i2___xxtofl@exp,f,c
 11977  00335E  90D8               	bcf	status,0,c
 11978  003360  3216               	rrcf	i2___xxtofl@arg+3,f,c
 11979  003362  3215               	rrcf	i2___xxtofl@arg+2,f,c
 11980  003364  3214               	rrcf	i2___xxtofl@arg+1,f,c
 11981  003366  3213               	rrcf	i2___xxtofl@arg,f,c
 11982  003368                     i2l5578:
 11983  003368  0E00               	movlw	0
 11984  00336A  1413               	andwf	i2___xxtofl@arg,w,c
 11985  00336C  6E0D               	movwf	??i2___xxtofl& (0+255),c
 11986  00336E  0E00               	movlw	0
 11987  003370  1414               	andwf	i2___xxtofl@arg+1,w,c
 11988  003372  6E0E               	movwf	(??i2___xxtofl+1)& (0+255),c
 11989  003374  0E00               	movlw	0
 11990  003376  1415               	andwf	i2___xxtofl@arg+2,w,c
 11991  003378  6E0F               	movwf	(??i2___xxtofl+2)& (0+255),c
 11992  00337A  0EFE               	movlw	254
 11993  00337C  1416               	andwf	i2___xxtofl@arg+3,w,c
 11994  00337E  6E10               	movwf	(??i2___xxtofl+3)& (0+255),c
 11995  003380  500D               	movf	??i2___xxtofl,w,c
 11996  003382  100E               	iorwf	??i2___xxtofl+1,w,c
 11997  003384  100F               	iorwf	??i2___xxtofl+2,w,c
 11998  003386  1010               	iorwf	??i2___xxtofl+3,w,c
 11999  003388  B4D8               	btfsc	status,2,c
 12000  00338A  D00D               	goto	i2l1182
 12001  00338C  D7E7               	goto	i2l5576
 12002  00338E                     i2l5580:
 12003  00338E  2A12               	incf	i2___xxtofl@exp,f,c
 12004  003390  0E01               	movlw	1
 12005  003392  2613               	addwf	i2___xxtofl@arg,f,c
 12006  003394  0E00               	movlw	0
 12007  003396  2214               	addwfc	i2___xxtofl@arg+1,f,c
 12008  003398  2215               	addwfc	i2___xxtofl@arg+2,f,c
 12009  00339A  2216               	addwfc	i2___xxtofl@arg+3,f,c
 12010  00339C  90D8               	bcf	status,0,c
 12011  00339E  3216               	rrcf	i2___xxtofl@arg+3,f,c
 12012  0033A0  3215               	rrcf	i2___xxtofl@arg+2,f,c
 12013  0033A2  3214               	rrcf	i2___xxtofl@arg+1,f,c
 12014  0033A4  3213               	rrcf	i2___xxtofl@arg,f,c
 12015  0033A6                     i2l1182:
 12016  0033A6  0E00               	movlw	0
 12017  0033A8  1413               	andwf	i2___xxtofl@arg,w,c
 12018  0033AA  6E0D               	movwf	??i2___xxtofl& (0+255),c
 12019  0033AC  0E00               	movlw	0
 12020  0033AE  1414               	andwf	i2___xxtofl@arg+1,w,c
 12021  0033B0  6E0E               	movwf	(??i2___xxtofl+1)& (0+255),c
 12022  0033B2  0E00               	movlw	0
 12023  0033B4  1415               	andwf	i2___xxtofl@arg+2,w,c
 12024  0033B6  6E0F               	movwf	(??i2___xxtofl+2)& (0+255),c
 12025  0033B8  0EFF               	movlw	255
 12026  0033BA  1416               	andwf	i2___xxtofl@arg+3,w,c
 12027  0033BC  6E10               	movwf	(??i2___xxtofl+3)& (0+255),c
 12028  0033BE  500D               	movf	??i2___xxtofl,w,c
 12029  0033C0  100E               	iorwf	??i2___xxtofl+1,w,c
 12030  0033C2  100F               	iorwf	??i2___xxtofl+2,w,c
 12031  0033C4  1010               	iorwf	??i2___xxtofl+3,w,c
 12032  0033C6  B4D8               	btfsc	status,2,c
 12033  0033C8  D007               	goto	i2l5588
 12034  0033CA  D7E1               	goto	i2l5580
 12035  0033CC                     i2l5586:
 12036  0033CC  0612               	decf	i2___xxtofl@exp,f,c
 12037  0033CE  90D8               	bcf	status,0,c
 12038  0033D0  3613               	rlcf	i2___xxtofl@arg,f,c
 12039  0033D2  3614               	rlcf	i2___xxtofl@arg+1,f,c
 12040  0033D4  3615               	rlcf	i2___xxtofl@arg+2,f,c
 12041  0033D6  3616               	rlcf	i2___xxtofl@arg+3,f,c
 12042  0033D8                     i2l5588:
 12043  0033D8  BE15               	btfsc	i2___xxtofl@arg+2,7,c
 12044  0033DA  D003               	goto	i2u668_40
 12045  0033DC  0E02               	movlw	2
 12046  0033DE  6012               	cpfslt	i2___xxtofl@exp,c
 12047  0033E0  D7F5               	goto	i2l5586
 12048  0033E2                     i2u668_40:
 12049  0033E2  A012               	btfss	i2___xxtofl@exp,0,c
 12050  0033E4  9E15               	bcf	i2___xxtofl@arg+2,7,c
 12051  0033E6  90D8               	bcf	status,0,c
 12052  0033E8  3212               	rrcf	i2___xxtofl@exp,f,c
 12053  0033EA  C012  F00D         	movff	i2___xxtofl@exp,??i2___xxtofl
 12054  0033EE  6A0E               	clrf	(??i2___xxtofl+1)& (0+255),c
 12055  0033F0  6A0F               	clrf	(??i2___xxtofl+2)& (0+255),c
 12056  0033F2  6A10               	clrf	(??i2___xxtofl+3)& (0+255),c
 12057  0033F4  C00D  F010         	movff	??i2___xxtofl,??i2___xxtofl+3
 12058  0033F8  6A0F               	clrf	??i2___xxtofl+2,c
 12059  0033FA  6A0E               	clrf	??i2___xxtofl+1,c
 12060  0033FC  6A0D               	clrf	??i2___xxtofl,c
 12061  0033FE  500D               	movf	??i2___xxtofl,w,c
 12062  003400  1213               	iorwf	i2___xxtofl@arg,f,c
 12063  003402  500E               	movf	??i2___xxtofl+1,w,c
 12064  003404  1214               	iorwf	i2___xxtofl@arg+1,f,c
 12065  003406  500F               	movf	??i2___xxtofl+2,w,c
 12066  003408  1215               	iorwf	i2___xxtofl@arg+2,f,c
 12067  00340A  5010               	movf	??i2___xxtofl+3,w,c
 12068  00340C  1216               	iorwf	i2___xxtofl@arg+3,f,c
 12069  00340E  5011               	movf	i2___xxtofl@sign,w,c
 12070  003410  A4D8               	btfss	status,2,c
 12071  003412  AE0C               	btfss	i2___xxtofl@val+3,7,c
 12072  003414  D001               	goto	i2l5604
 12073  003416  8E16               	bsf	i2___xxtofl@arg+3,7,c
 12074  003418                     i2l5604:
 12075  003418  C013  F009         	movff	i2___xxtofl@arg,?i2___xxtofl
 12076  00341C  C014  F00A         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 12077  003420  C015  F00B         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 12078  003424  C016  F00C         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 12079  003428  0012               	return		;funcret
 12080  00342A                     __end_ofi2___xxtofl:
 12081                           	opt callstack 0
 12082                           
 12083 ;; *************** function i2___fladd *****************
 12084 ;; Defined at:
 12085 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12086 ;; Parameters:    Size  Location     Type
 12087 ;;  b               4   22[COMRAM] unsigned char 
 12088 ;;  a               4   26[COMRAM] unsigned char 
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;  __fladd         1   37[COMRAM] unsigned char 
 12091 ;;  __fladd         1   36[COMRAM] unsigned char 
 12092 ;;  __fladd         1   35[COMRAM] unsigned char 
 12093 ;;  __fladd         1   34[COMRAM] unsigned char 
 12094 ;; Return value:  Size  Location     Type
 12095 ;;                  4   22[COMRAM] unsigned char 
 12096 ;; Registers used:
 12097 ;;		wreg, status,2, status,0
 12098 ;; Tracked objects:
 12099 ;;		On entry : 0/0
 12100 ;;		On exit  : 0/0
 12101 ;;		Unchanged: 0/0
 12102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12103 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12104 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12105 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12106 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12107 ;;Total ram usage:       16 bytes
 12108 ;; Hardware stack levels used:    1
 12109 ;; This function calls:
 12110 ;;		Nothing
 12111 ;; This function is called by:
 12112 ;;		_rutina
 12113 ;; This function uses a non-reentrant model
 12114 ;;
 12115                           
 12116                           	psect	text59
 12117  0025EC                     __ptext59:
 12118                           	opt callstack 0
 12119  0025EC                     i2___fladd:
 12120                           	opt callstack 20
 12121                           
 12122                           ;incstack = 0
 12123  0025EC  501A               	movf	i2___fladd@b+3,w,c
 12124  0025EE  0B80               	andlw	128
 12125  0025F0  6E23               	movwf	i2___fladd@signs,c
 12126  0025F2  501A               	movf	i2___fladd@b+3,w,c
 12127  0025F4  241A               	addwf	i2___fladd@b+3,w,c
 12128  0025F6  6E25               	movwf	i2___fladd@bexp,c
 12129  0025F8  BE19               	btfsc	i2___fladd@b+2,7,c
 12130  0025FA  8025               	bsf	i2___fladd@bexp,0,c
 12131  0025FC  5025               	movf	i2___fladd@bexp,w,c
 12132  0025FE  B4D8               	btfsc	status,2,c
 12133  002600  D00D               	goto	i2l5376
 12134  002602  2825               	incf	i2___fladd@bexp,w,c
 12135  002604  A4D8               	btfss	status,2,c
 12136  002606  D008               	goto	i2l5372
 12137  002608  0E00               	movlw	0
 12138  00260A  6E17               	movwf	i2___fladd@b,c
 12139  00260C  0E00               	movlw	0
 12140  00260E  6E18               	movwf	i2___fladd@b+1,c
 12141  002610  0E00               	movlw	0
 12142  002612  6E19               	movwf	i2___fladd@b+2,c
 12143  002614  0E00               	movlw	0
 12144  002616  6E1A               	movwf	i2___fladd@b+3,c
 12145  002618                     i2l5372:
 12146  002618  8E19               	bsf	i2___fladd@b+2,7,c
 12147  00261A  D006               	goto	L22
 12148  00261C                     i2l5376:
 12149  00261C  0E00               	movlw	0
 12150  00261E  6E17               	movwf	i2___fladd@b,c
 12151  002620  0E00               	movlw	0
 12152  002622  6E18               	movwf	i2___fladd@b+1,c
 12153  002624  0E00               	movlw	0
 12154  002626  6E19               	movwf	i2___fladd@b+2,c
 12155  002628                     L22:
 12156  002628  0E00               	movlw	0
 12157  00262A  6E1A               	movwf	i2___fladd@b+3,c
 12158  00262C  501E               	movf	i2___fladd@a+3,w,c
 12159  00262E  0B80               	andlw	128
 12160  002630  6E24               	movwf	i2___fladd@aexp,c
 12161  002632  5023               	movf	i2___fladd@signs,w,c
 12162  002634  1824               	xorwf	i2___fladd@aexp,w,c
 12163  002636  A4D8               	btfss	status,2,c
 12164  002638  8C23               	bsf	i2___fladd@signs,6,c
 12165  00263A  501E               	movf	i2___fladd@a+3,w,c
 12166  00263C  241E               	addwf	i2___fladd@a+3,w,c
 12167  00263E  6E24               	movwf	i2___fladd@aexp,c
 12168  002640  BE1D               	btfsc	i2___fladd@a+2,7,c
 12169  002642  8024               	bsf	i2___fladd@aexp,0,c
 12170  002644  5024               	movf	i2___fladd@aexp,w,c
 12171  002646  B4D8               	btfsc	status,2,c
 12172  002648  D00D               	goto	i2l5400
 12173  00264A  2824               	incf	i2___fladd@aexp,w,c
 12174  00264C  A4D8               	btfss	status,2,c
 12175  00264E  D008               	goto	i2l5396
 12176  002650  0E00               	movlw	0
 12177  002652  6E1B               	movwf	i2___fladd@a,c
 12178  002654  0E00               	movlw	0
 12179  002656  6E1C               	movwf	i2___fladd@a+1,c
 12180  002658  0E00               	movlw	0
 12181  00265A  6E1D               	movwf	i2___fladd@a+2,c
 12182  00265C  0E00               	movlw	0
 12183  00265E  6E1E               	movwf	i2___fladd@a+3,c
 12184  002660                     i2l5396:
 12185  002660  8E1D               	bsf	i2___fladd@a+2,7,c
 12186  002662  D006               	goto	L23
 12187  002664                     i2l5400:
 12188  002664  0E00               	movlw	0
 12189  002666  6E1B               	movwf	i2___fladd@a,c
 12190  002668  0E00               	movlw	0
 12191  00266A  6E1C               	movwf	i2___fladd@a+1,c
 12192  00266C  0E00               	movlw	0
 12193  00266E  6E1D               	movwf	i2___fladd@a+2,c
 12194  002670                     L23:
 12195  002670  0E00               	movlw	0
 12196  002672  6E1E               	movwf	i2___fladd@a+3,c
 12197  002674  5025               	movf	i2___fladd@bexp,w,c
 12198  002676  5C24               	subwf	i2___fladd@aexp,w,c
 12199  002678  B0D8               	btfsc	status,0,c
 12200  00267A  D022               	goto	i2l5438
 12201  00267C  AC23               	btfss	i2___fladd@signs,6,c
 12202  00267E  D002               	goto	i2l5408
 12203  002680  0E80               	movlw	128
 12204  002682  1A23               	xorwf	i2___fladd@signs,f,c
 12205  002684                     i2l5408:
 12206  002684  C025  F026         	movff	i2___fladd@bexp,i2___fladd@grs
 12207  002688  C024  F025         	movff	i2___fladd@aexp,i2___fladd@bexp
 12208  00268C  C026  F024         	movff	i2___fladd@grs,i2___fladd@aexp
 12209  002690  C017  F026         	movff	i2___fladd@b,i2___fladd@grs
 12210  002694  C01B  F017         	movff	i2___fladd@a,i2___fladd@b
 12211  002698  C026  F01B         	movff	i2___fladd@grs,i2___fladd@a
 12212  00269C  C018  F026         	movff	i2___fladd@b+1,i2___fladd@grs
 12213  0026A0  C01C  F018         	movff	i2___fladd@a+1,i2___fladd@b+1
 12214  0026A4  C026  F01C         	movff	i2___fladd@grs,i2___fladd@a+1
 12215  0026A8  C019  F026         	movff	i2___fladd@b+2,i2___fladd@grs
 12216  0026AC  C01D  F019         	movff	i2___fladd@a+2,i2___fladd@b+2
 12217  0026B0  C026  F01D         	movff	i2___fladd@grs,i2___fladd@a+2
 12218  0026B4  C01A  F026         	movff	i2___fladd@b+3,i2___fladd@grs
 12219  0026B8  C01E  F01A         	movff	i2___fladd@a+3,i2___fladd@b+3
 12220  0026BC  C026  F01E         	movff	i2___fladd@grs,i2___fladd@a+3
 12221  0026C0                     i2l5438:
 12222  0026C0  0E00               	movlw	0
 12223  0026C2  6E26               	movwf	i2___fladd@grs,c
 12224  0026C4  5025               	movf	i2___fladd@bexp,w,c
 12225  0026C6  C024  F01F         	movff	i2___fladd@aexp,??i2___fladd
 12226  0026CA  6A20               	clrf	(??i2___fladd+1)& (0+255),c
 12227  0026CC  5E1F               	subwf	??i2___fladd,f,c
 12228  0026CE  0E00               	movlw	0
 12229  0026D0  5A20               	subwfb	??i2___fladd+1,f,c
 12230  0026D2  BE20               	btfsc	??i2___fladd+1,7,c
 12231  0026D4  D02C               	goto	i2l1049
 12232  0026D6  5020               	movf	??i2___fladd+1,w,c
 12233  0026D8  E104               	bnz	i2u632_40
 12234  0026DA  0E1A               	movlw	26
 12235  0026DC  5C1F               	subwf	??i2___fladd,w,c
 12236  0026DE  A0D8               	btfss	status,0,c
 12237  0026E0  D026               	goto	i2l1049
 12238  0026E2                     i2u632_40:
 12239  0026E2  5017               	movf	i2___fladd@b,w,c
 12240  0026E4  1018               	iorwf	i2___fladd@b+1,w,c
 12241  0026E6  1019               	iorwf	i2___fladd@b+2,w,c
 12242  0026E8  101A               	iorwf	i2___fladd@b+3,w,c
 12243  0026EA  B4D8               	btfsc	status,2,c
 12244  0026EC  D002               	goto	i2u633_40
 12245  0026EE  0E01               	movlw	1
 12246  0026F0  D001               	goto	i2u634_40
 12247  0026F2                     i2u633_40:
 12248  0026F2  0E00               	movlw	0
 12249  0026F4                     i2u634_40:
 12250  0026F4  6E26               	movwf	i2___fladd@grs,c
 12251  0026F6  0E00               	movlw	0
 12252  0026F8  6E17               	movwf	i2___fladd@b,c
 12253  0026FA  0E00               	movlw	0
 12254  0026FC  6E18               	movwf	i2___fladd@b+1,c
 12255  0026FE  0E00               	movlw	0
 12256  002700  6E19               	movwf	i2___fladd@b+2,c
 12257  002702  0E00               	movlw	0
 12258  002704  6E1A               	movwf	i2___fladd@b+3,c
 12259  002706  C024  F025         	movff	i2___fladd@aexp,i2___fladd@bexp
 12260  00270A  D015               	goto	i2u637_40
 12261  00270C                     i2l1050:
 12262  00270C  A026               	btfss	i2___fladd@grs,0,c
 12263  00270E  D005               	goto	i2l5450
 12264  002710  90D8               	bcf	status,0,c
 12265  002712  3026               	rrcf	i2___fladd@grs,w,c
 12266  002714  0901               	iorlw	1
 12267  002716  6E26               	movwf	i2___fladd@grs,c
 12268  002718  D002               	goto	i2l5452
 12269  00271A                     i2l5450:
 12270  00271A  90D8               	bcf	status,0,c
 12271  00271C  3226               	rrcf	i2___fladd@grs,f,c
 12272  00271E                     i2l5452:
 12273  00271E  B017               	btfsc	i2___fladd@b,0,c
 12274  002720  8E26               	bsf	i2___fladd@grs,7,c
 12275  002722  341A               	rlcf	i2___fladd@b+3,w,c
 12276  002724  321A               	rrcf	i2___fladd@b+3,f,c
 12277  002726  3219               	rrcf	i2___fladd@b+2,f,c
 12278  002728  3218               	rrcf	i2___fladd@b+1,f,c
 12279  00272A  3217               	rrcf	i2___fladd@b,f,c
 12280  00272C  2A25               	incf	i2___fladd@bexp,f,c
 12281  00272E                     i2l1049:
 12282  00272E  5024               	movf	i2___fladd@aexp,w,c
 12283  002730  5C25               	subwf	i2___fladd@bexp,w,c
 12284  002732  A0D8               	btfss	status,0,c
 12285  002734  D7EB               	goto	i2l1050
 12286  002736                     i2u637_40:
 12287  002736  BC23               	btfsc	i2___fladd@signs,6,c
 12288  002738  D028               	goto	i2l5484
 12289  00273A  5025               	movf	i2___fladd@bexp,w,c
 12290  00273C  A4D8               	btfss	status,2,c
 12291  00273E  D009               	goto	i2l5466
 12292  002740  0E00               	movlw	0
 12293  002742  6E17               	movwf	?i2___fladd,c
 12294  002744  0E00               	movlw	0
 12295  002746  6E18               	movwf	?i2___fladd+1,c
 12296  002748  0E00               	movlw	0
 12297  00274A  6E19               	movwf	?i2___fladd+2,c
 12298  00274C  0E00               	movlw	0
 12299  00274E  6E1A               	movwf	?i2___fladd+3,c
 12300  002750  0012               	return	
 12301  002752                     i2l5466:
 12302  002752  501B               	movf	i2___fladd@a,w,c
 12303  002754  2617               	addwf	i2___fladd@b,f,c
 12304  002756  501C               	movf	i2___fladd@a+1,w,c
 12305  002758  2218               	addwfc	i2___fladd@b+1,f,c
 12306  00275A  501D               	movf	i2___fladd@a+2,w,c
 12307  00275C  2219               	addwfc	i2___fladd@b+2,f,c
 12308  00275E  501E               	movf	i2___fladd@a+3,w,c
 12309  002760  221A               	addwfc	i2___fladd@b+3,f,c
 12310  002762  A01A               	btfss	i2___fladd@b+3,0,c
 12311  002764  D071               	goto	i2u650_40
 12312  002766  A026               	btfss	i2___fladd@grs,0,c
 12313  002768  D005               	goto	i2l5474
 12314  00276A  90D8               	bcf	status,0,c
 12315  00276C  3026               	rrcf	i2___fladd@grs,w,c
 12316  00276E  0901               	iorlw	1
 12317  002770  6E26               	movwf	i2___fladd@grs,c
 12318  002772  D002               	goto	i2l5476
 12319  002774                     i2l5474:
 12320  002774  90D8               	bcf	status,0,c
 12321  002776  3226               	rrcf	i2___fladd@grs,f,c
 12322  002778                     i2l5476:
 12323  002778  B017               	btfsc	i2___fladd@b,0,c
 12324  00277A  8E26               	bsf	i2___fladd@grs,7,c
 12325  00277C  341A               	rlcf	i2___fladd@b+3,w,c
 12326  00277E  321A               	rrcf	i2___fladd@b+3,f,c
 12327  002780  3219               	rrcf	i2___fladd@b+2,f,c
 12328  002782  3218               	rrcf	i2___fladd@b+1,f,c
 12329  002784  3217               	rrcf	i2___fladd@b,f,c
 12330  002786  2A25               	incf	i2___fladd@bexp,f,c
 12331  002788  D05F               	goto	i2u650_40
 12332  00278A                     i2l5484:
 12333  00278A  501B               	movf	i2___fladd@a,w,c
 12334  00278C  5C17               	subwf	i2___fladd@b,w,c
 12335  00278E  501C               	movf	i2___fladd@a+1,w,c
 12336  002790  5818               	subwfb	i2___fladd@b+1,w,c
 12337  002792  501D               	movf	i2___fladd@a+2,w,c
 12338  002794  5819               	subwfb	i2___fladd@b+2,w,c
 12339  002796  501A               	movf	i2___fladd@b+3,w,c
 12340  002798  0A80               	xorlw	128
 12341  00279A  6E1F               	movwf	??i2___fladd& (0+255),c
 12342  00279C  501E               	movf	i2___fladd@a+3,w,c
 12343  00279E  0A80               	xorlw	128
 12344  0027A0  581F               	subwfb	??i2___fladd& (0+255),w,c
 12345  0027A2  B0D8               	btfsc	status,0,c
 12346  0027A4  D025               	goto	i2l5494
 12347  0027A6  5017               	movf	i2___fladd@b,w,c
 12348  0027A8  5C1B               	subwf	i2___fladd@a,w,c
 12349  0027AA  6E1F               	movwf	??i2___fladd& (0+255),c
 12350  0027AC  5018               	movf	i2___fladd@b+1,w,c
 12351  0027AE  581C               	subwfb	i2___fladd@a+1,w,c
 12352  0027B0  6E20               	movwf	(??i2___fladd+1)& (0+255),c
 12353  0027B2  5019               	movf	i2___fladd@b+2,w,c
 12354  0027B4  581D               	subwfb	i2___fladd@a+2,w,c
 12355  0027B6  6E21               	movwf	(??i2___fladd+2)& (0+255),c
 12356  0027B8  501A               	movf	i2___fladd@b+3,w,c
 12357  0027BA  581E               	subwfb	i2___fladd@a+3,w,c
 12358  0027BC  6E22               	movwf	(??i2___fladd+3)& (0+255),c
 12359  0027BE  0EFF               	movlw	255
 12360  0027C0  241F               	addwf	??i2___fladd,w,c
 12361  0027C2  6E17               	movwf	i2___fladd@b,c
 12362  0027C4  0EFF               	movlw	255
 12363  0027C6  2020               	addwfc	??i2___fladd+1,w,c
 12364  0027C8  6E18               	movwf	i2___fladd@b+1,c
 12365  0027CA  0EFF               	movlw	255
 12366  0027CC  2021               	addwfc	??i2___fladd+2,w,c
 12367  0027CE  6E19               	movwf	i2___fladd@b+2,c
 12368  0027D0  0EFF               	movlw	255
 12369  0027D2  2022               	addwfc	??i2___fladd+3,w,c
 12370  0027D4  6E1A               	movwf	i2___fladd@b+3,c
 12371  0027D6  0E80               	movlw	128
 12372  0027D8  1A23               	xorwf	i2___fladd@signs,f,c
 12373  0027DA  6C26               	negf	i2___fladd@grs,c
 12374  0027DC  5026               	movf	i2___fladd@grs,w,c
 12375  0027DE  A4D8               	btfss	status,2,c
 12376  0027E0  D00F               	goto	i2l1065
 12377  0027E2  0E01               	movlw	1
 12378  0027E4  2617               	addwf	i2___fladd@b,f,c
 12379  0027E6  0E00               	movlw	0
 12380  0027E8  2218               	addwfc	i2___fladd@b+1,f,c
 12381  0027EA  2219               	addwfc	i2___fladd@b+2,f,c
 12382  0027EC  221A               	addwfc	i2___fladd@b+3,f,c
 12383  0027EE  D008               	goto	i2l1065
 12384  0027F0                     i2l5494:
 12385  0027F0  501B               	movf	i2___fladd@a,w,c
 12386  0027F2  5E17               	subwf	i2___fladd@b,f,c
 12387  0027F4  501C               	movf	i2___fladd@a+1,w,c
 12388  0027F6  5A18               	subwfb	i2___fladd@b+1,f,c
 12389  0027F8  501D               	movf	i2___fladd@a+2,w,c
 12390  0027FA  5A19               	subwfb	i2___fladd@b+2,f,c
 12391  0027FC  501E               	movf	i2___fladd@a+3,w,c
 12392  0027FE  5A1A               	subwfb	i2___fladd@b+3,f,c
 12393  002800                     i2l1065:
 12394  002800  5017               	movf	i2___fladd@b,w,c
 12395  002802  1018               	iorwf	i2___fladd@b+1,w,c
 12396  002804  1019               	iorwf	i2___fladd@b+2,w,c
 12397  002806  101A               	iorwf	i2___fladd@b+3,w,c
 12398  002808  A4D8               	btfss	status,2,c
 12399  00280A  D01C               	goto	i2l5518
 12400  00280C  5026               	movf	i2___fladd@grs,w,c
 12401  00280E  A4D8               	btfss	status,2,c
 12402  002810  D019               	goto	i2l5518
 12403  002812  0E00               	movlw	0
 12404  002814  6E17               	movwf	?i2___fladd,c
 12405  002816  0E00               	movlw	0
 12406  002818  6E18               	movwf	?i2___fladd+1,c
 12407  00281A  0E00               	movlw	0
 12408  00281C  6E19               	movwf	?i2___fladd+2,c
 12409  00281E  0E00               	movlw	0
 12410  002820  6E1A               	movwf	?i2___fladd+3,c
 12411  002822  0012               	return	
 12412  002824                     i2l5502:
 12413  002824  90D8               	bcf	status,0,c
 12414  002826  3617               	rlcf	i2___fladd@b,f,c
 12415  002828  3618               	rlcf	i2___fladd@b+1,f,c
 12416  00282A  3619               	rlcf	i2___fladd@b+2,f,c
 12417  00282C  361A               	rlcf	i2___fladd@b+3,f,c
 12418  00282E  BE26               	btfsc	i2___fladd@grs,7,c
 12419  002830  8017               	bsf	i2___fladd@b,0,c
 12420  002832  A026               	btfss	i2___fladd@grs,0,c
 12421  002834  D002               	goto	i2l5512
 12422  002836  80D8               	bsf	status,0,c
 12423  002838  D001               	goto	L24
 12424  00283A                     i2l5512:
 12425  00283A  90D8               	bcf	status,0,c
 12426  00283C                     L24:
 12427  00283C  3626               	rlcf	i2___fladd@grs,f,c
 12428  00283E  5025               	movf	i2___fladd@bexp,w,c
 12429  002840  A4D8               	btfss	status,2,c
 12430  002842  0625               	decf	i2___fladd@bexp,f,c
 12431  002844                     i2l5518:
 12432  002844  AE19               	btfss	i2___fladd@b+2,7,c
 12433  002846  D7EE               	goto	i2l5502
 12434  002848                     i2u650_40:
 12435  002848  0E00               	movlw	0
 12436  00284A  6E24               	movwf	i2___fladd@aexp,c
 12437  00284C  AE26               	btfss	i2___fladd@grs,7,c
 12438  00284E  D00B               	goto	i2l1074
 12439  002850  C026  F01F         	movff	i2___fladd@grs,??i2___fladd
 12440  002854  0E7F               	movlw	127
 12441  002856  161F               	andwf	??i2___fladd,f,c
 12442  002858  B4D8               	btfsc	status,2,c
 12443  00285A  D003               	goto	i2l1075
 12444  00285C                     i2u652_40:
 12445  00285C  0E01               	movlw	1
 12446  00285E  6E24               	movwf	i2___fladd@aexp,c
 12447  002860  D002               	goto	i2l1074
 12448  002862                     i2l1075:
 12449  002862  B017               	btfsc	i2___fladd@b,0,c
 12450  002864  D7FB               	goto	i2u652_40
 12451  002866                     i2l1074:
 12452  002866  5024               	movf	i2___fladd@aexp,w,c
 12453  002868  B4D8               	btfsc	status,2,c
 12454  00286A  D020               	goto	i2l5538
 12455  00286C  0E01               	movlw	1
 12456  00286E  2617               	addwf	i2___fladd@b,f,c
 12457  002870  0E00               	movlw	0
 12458  002872  2218               	addwfc	i2___fladd@b+1,f,c
 12459  002874  2219               	addwfc	i2___fladd@b+2,f,c
 12460  002876  221A               	addwfc	i2___fladd@b+3,f,c
 12461  002878  A01A               	btfss	i2___fladd@b+3,0,c
 12462  00287A  D018               	goto	i2l5538
 12463  00287C  C017  F01F         	movff	i2___fladd@b,??i2___fladd
 12464  002880  C018  F020         	movff	i2___fladd@b+1,??i2___fladd+1
 12465  002884  C019  F021         	movff	i2___fladd@b+2,??i2___fladd+2
 12466  002888  C01A  F022         	movff	i2___fladd@b+3,??i2___fladd+3
 12467  00288C  3422               	rlcf	??i2___fladd+3,w,c
 12468  00288E  3222               	rrcf	??i2___fladd+3,f,c
 12469  002890  3221               	rrcf	??i2___fladd+2,f,c
 12470  002892  3220               	rrcf	??i2___fladd+1,f,c
 12471  002894  321F               	rrcf	??i2___fladd,f,c
 12472  002896  C01F  F017         	movff	??i2___fladd,i2___fladd@b
 12473  00289A  C020  F018         	movff	??i2___fladd+1,i2___fladd@b+1
 12474  00289E  C021  F019         	movff	??i2___fladd+2,i2___fladd@b+2
 12475  0028A2  C022  F01A         	movff	??i2___fladd+3,i2___fladd@b+3
 12476  0028A6  2825               	incf	i2___fladd@bexp,w,c
 12477  0028A8  A4D8               	btfss	status,2,c
 12478  0028AA  2A25               	incf	i2___fladd@bexp,f,c
 12479  0028AC                     i2l5538:
 12480  0028AC  2825               	incf	i2___fladd@bexp,w,c
 12481  0028AE  B4D8               	btfsc	status,2,c
 12482  0028B0  D003               	goto	i2u658_40
 12483  0028B2  5025               	movf	i2___fladd@bexp,w,c
 12484  0028B4  A4D8               	btfss	status,2,c
 12485  0028B6  D00D               	goto	i2l5546
 12486  0028B8                     i2u658_40:
 12487  0028B8  0E00               	movlw	0
 12488  0028BA  6E17               	movwf	i2___fladd@b,c
 12489  0028BC  0E00               	movlw	0
 12490  0028BE  6E18               	movwf	i2___fladd@b+1,c
 12491  0028C0  0E00               	movlw	0
 12492  0028C2  6E19               	movwf	i2___fladd@b+2,c
 12493  0028C4  0E00               	movlw	0
 12494  0028C6  6E1A               	movwf	i2___fladd@b+3,c
 12495  0028C8  5025               	movf	i2___fladd@bexp,w,c
 12496  0028CA  A4D8               	btfss	status,2,c
 12497  0028CC  D002               	goto	i2l5546
 12498  0028CE  0E00               	movlw	0
 12499  0028D0  6E23               	movwf	i2___fladd@signs,c
 12500  0028D2                     i2l5546:
 12501  0028D2  A025               	btfss	i2___fladd@bexp,0,c
 12502  0028D4  D002               	goto	i2l5550
 12503  0028D6  8E19               	bsf	i2___fladd@b+2,7,c
 12504  0028D8  D001               	goto	i2l5552
 12505  0028DA                     i2l5550:
 12506  0028DA  9E19               	bcf	i2___fladd@b+2,7,c
 12507  0028DC                     i2l5552:
 12508  0028DC  90D8               	bcf	status,0,c
 12509  0028DE  3025               	rrcf	i2___fladd@bexp,w,c
 12510  0028E0  6E1A               	movwf	i2___fladd@b+3,c
 12511  0028E2  BE23               	btfsc	i2___fladd@signs,7,c
 12512  0028E4  8E1A               	bsf	i2___fladd@b+3,7,c
 12513  0028E6  C017  F017         	movff	i2___fladd@b,?i2___fladd
 12514  0028EA  C018  F018         	movff	i2___fladd@b+1,?i2___fladd+1
 12515  0028EE  C019  F019         	movff	i2___fladd@b+2,?i2___fladd+2
 12516  0028F2  C01A  F01A         	movff	i2___fladd@b+3,?i2___fladd+3
 12517  0028F6  0012               	return		;funcret
 12518  0028F8                     __end_ofi2___fladd:
 12519                           	opt callstack 0
 12520                           
 12521 ;; *************** function i2___awdiv *****************
 12522 ;; Defined at:
 12523 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12524 ;; Parameters:    Size  Location     Type
 12525 ;;  dividend        2    0[COMRAM] int 
 12526 ;;  divisor         2    2[COMRAM] int 
 12527 ;; Auto vars:     Size  Location     Type
 12528 ;;  __awdiv         2    6[COMRAM] int 
 12529 ;;  __awdiv         1    5[COMRAM] unsigned char 
 12530 ;;  __awdiv         1    4[COMRAM] unsigned char 
 12531 ;; Return value:  Size  Location     Type
 12532 ;;                  2    0[COMRAM] int 
 12533 ;; Registers used:
 12534 ;;		wreg, status,2, status,0
 12535 ;; Tracked objects:
 12536 ;;		On entry : 0/0
 12537 ;;		On exit  : 0/0
 12538 ;;		Unchanged: 0/0
 12539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12541 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12543 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12544 ;;Total ram usage:        8 bytes
 12545 ;; Hardware stack levels used:    1
 12546 ;; This function calls:
 12547 ;;		Nothing
 12548 ;; This function is called by:
 12549 ;;		_rutina
 12550 ;; This function uses a non-reentrant model
 12551 ;;
 12552                           
 12553                           	psect	text60
 12554  003D22                     __ptext60:
 12555                           	opt callstack 0
 12556  003D22                     i2___awdiv:
 12557                           	opt callstack 20
 12558                           
 12559                           ;incstack = 0
 12560  003D22  0E00               	movlw	0
 12561  003D24  6E06               	movwf	i2___awdiv@sign,c
 12562  003D26  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12563  003D28  D006               	goto	i2l5324
 12564  003D2A  6C03               	negf	i2___awdiv@divisor,c
 12565  003D2C  1E04               	comf	i2___awdiv@divisor+1,f,c
 12566  003D2E  B0D8               	btfsc	status,0,c
 12567  003D30  2A04               	incf	i2___awdiv@divisor+1,f,c
 12568  003D32  0E01               	movlw	1
 12569  003D34  6E06               	movwf	i2___awdiv@sign,c
 12570  003D36                     i2l5324:
 12571  003D36  AE02               	btfss	i2___awdiv@dividend+1,7,c
 12572  003D38  D006               	goto	i2l5330
 12573  003D3A  6C01               	negf	i2___awdiv@dividend,c
 12574  003D3C  1E02               	comf	i2___awdiv@dividend+1,f,c
 12575  003D3E  B0D8               	btfsc	status,0,c
 12576  003D40  2A02               	incf	i2___awdiv@dividend+1,f,c
 12577  003D42  0E01               	movlw	1
 12578  003D44  1A06               	xorwf	i2___awdiv@sign,f,c
 12579  003D46                     i2l5330:
 12580  003D46  0E00               	movlw	0
 12581  003D48  6E08               	movwf	i2___awdiv@quotient+1,c
 12582  003D4A  0E00               	movlw	0
 12583  003D4C  6E07               	movwf	i2___awdiv@quotient,c
 12584  003D4E  5003               	movf	i2___awdiv@divisor,w,c
 12585  003D50  1004               	iorwf	i2___awdiv@divisor+1,w,c
 12586  003D52  B4D8               	btfsc	status,2,c
 12587  003D54  D01C               	goto	i2l5352
 12588  003D56  0E01               	movlw	1
 12589  003D58  6E05               	movwf	i2___awdiv@counter,c
 12590  003D5A  D004               	goto	i2l5338
 12591  003D5C                     i2l5336:
 12592  003D5C  90D8               	bcf	status,0,c
 12593  003D5E  3603               	rlcf	i2___awdiv@divisor,f,c
 12594  003D60  3604               	rlcf	i2___awdiv@divisor+1,f,c
 12595  003D62  2A05               	incf	i2___awdiv@counter,f,c
 12596  003D64                     i2l5338:
 12597  003D64  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12598  003D66  D7FA               	goto	i2l5336
 12599  003D68                     i2u620_40:
 12600  003D68  90D8               	bcf	status,0,c
 12601  003D6A  3607               	rlcf	i2___awdiv@quotient,f,c
 12602  003D6C  3608               	rlcf	i2___awdiv@quotient+1,f,c
 12603  003D6E  5003               	movf	i2___awdiv@divisor,w,c
 12604  003D70  5C01               	subwf	i2___awdiv@dividend,w,c
 12605  003D72  5004               	movf	i2___awdiv@divisor+1,w,c
 12606  003D74  5802               	subwfb	i2___awdiv@dividend+1,w,c
 12607  003D76  A0D8               	btfss	status,0,c
 12608  003D78  D005               	goto	i2l5348
 12609  003D7A  5003               	movf	i2___awdiv@divisor,w,c
 12610  003D7C  5E01               	subwf	i2___awdiv@dividend,f,c
 12611  003D7E  5004               	movf	i2___awdiv@divisor+1,w,c
 12612  003D80  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 12613  003D82  8007               	bsf	i2___awdiv@quotient,0,c
 12614  003D84                     i2l5348:
 12615  003D84  90D8               	bcf	status,0,c
 12616  003D86  3204               	rrcf	i2___awdiv@divisor+1,f,c
 12617  003D88  3203               	rrcf	i2___awdiv@divisor,f,c
 12618  003D8A  2E05               	decfsz	i2___awdiv@counter,f,c
 12619  003D8C  D7ED               	goto	i2u620_40
 12620  003D8E                     i2l5352:
 12621  003D8E  5006               	movf	i2___awdiv@sign,w,c
 12622  003D90  B4D8               	btfsc	status,2,c
 12623  003D92  D004               	goto	i2l5356
 12624  003D94  6C07               	negf	i2___awdiv@quotient,c
 12625  003D96  1E08               	comf	i2___awdiv@quotient+1,f,c
 12626  003D98  B0D8               	btfsc	status,0,c
 12627  003D9A  2A08               	incf	i2___awdiv@quotient+1,f,c
 12628  003D9C                     i2l5356:
 12629  003D9C  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 12630  003DA0  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 12631  003DA4  0012               	return		;funcret
 12632  003DA6                     __end_ofi2___awdiv:
 12633                           	opt callstack 0
 12634                           
 12635                           	psect	rparam
 12636  0000                     
 12637                           	psect	temp
 12638  00004D                     btemp:
 12639                           	opt callstack 0
 12640  00004D                     	ds	1
 12641  0000                     int$flags	set	btemp
 12642  0000                     wtemp8	set	btemp+1
 12643  0000                     ttemp5	set	btemp+1
 12644  0000                     ttemp6	set	btemp+4
 12645  0000                     ttemp7	set	btemp+8
 12646                           tosu	equ	0xFFF
 12647                           tosh	equ	0xFFE
 12648                           tosl	equ	0xFFD
 12649                           stkptr	equ	0xFFC
 12650                           pclatu	equ	0xFFB
 12651                           pclath	equ	0xFFA
 12652                           pcl	equ	0xFF9
 12653                           tblptru	equ	0xFF8
 12654                           tblptrh	equ	0xFF7
 12655                           tblptrl	equ	0xFF6
 12656                           tablat	equ	0xFF5
 12657                           prodh	equ	0xFF4
 12658                           prodl	equ	0xFF3
 12659                           indf0	equ	0xFEF
 12660                           postinc0	equ	0xFEE
 12661                           postdec0	equ	0xFED
 12662                           preinc0	equ	0xFEC
 12663                           plusw0	equ	0xFEB
 12664                           fsr0h	equ	0xFEA
 12665                           fsr0l	equ	0xFE9
 12666                           wreg	equ	0xFE8
 12667                           indf1	equ	0xFE7
 12668                           postinc1	equ	0xFE6
 12669                           postdec1	equ	0xFE5
 12670                           preinc1	equ	0xFE4
 12671                           plusw1	equ	0xFE3
 12672                           fsr1h	equ	0xFE2
 12673                           fsr1l	equ	0xFE1
 12674                           bsr	equ	0xFE0
 12675                           indf2	equ	0xFDF
 12676                           postinc2	equ	0xFDE
 12677                           postdec2	equ	0xFDD
 12678                           preinc2	equ	0xFDC
 12679                           plusw2	equ	0xFDB
 12680                           fsr2h	equ	0xFDA
 12681                           fsr2l	equ	0xFD9
 12682                           status	equ	0xFD8


Data Sizes:
    Strings     155
    Constant    0
    Data        14
    BSS         151
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      76
    BANK0           160    159     159
    BANK1           256     77     207
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_4(CODE[28]), STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1965_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_4(CODE[28]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_4(CODE[28]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_4(CODE[28]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    terminal@comand	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK1[10]), 

    length@text	PTR unsigned char  size(2) Largest target is 49
		 -> STR_6(CODE[49]), STR_5(CODE[8]), STR_3(CODE[21]), STR_2(CODE[20]), 
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), main@text(BANK1[6]), 

    enviarRS232@valores	PTR unsigned char  size(2) Largest target is 49
		 -> STR_6(CODE[49]), STR_5(CODE[8]), STR_3(CODE[21]), STR_2(CODE[20]), 
		 -> terminal@texto(BANK1[20]), main@texto(BANK1[8]), main@text(BANK1[6]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _rutina in COMRAM

    _rutina->i2___fladd
    i2___xxtofl->i2___awdiv
    i2___fladd->i2___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _terminal->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _cambiarPWM->_definirVelocidad
    _rutinaEscape->_fijarVelocidad
    _fijarVelocidad->___fladd
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fladd->___flmul
    _enviarRS232->_length
    _encenderMotor->_definirVelocidad
    _encenderMotor->_rutinaArranque

Critical Paths under _rutina in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal
    _terminal->_sprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rutina in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rutina in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rutina in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rutina in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rutina in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rutina in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rutina in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _rutina in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  123930
                                             63 BANK1     14    14      0
                           _PWMServo
               _configuracionInicial
                        _enviarRS232
                       _rutinaEscape
                            _sprintf
                           _terminal
 ---------------------------------------------------------------------------------
 (1) _terminal                                            31    29      2   61971
                                             32 BANK1     31    29      2
                           _adelante
                              _atras
                         _cambiarPWM
                         _dirreccion
                      _encenderMotor
                        _enviarRS232
                   _estadoDirreccion
                     _fijarVelocidad
                        _frenarMotor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   50798
                                            149 BANK0     10    10      0
                                             24 BANK1      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   50096
                                            141 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           50    44      6   49494
                                            131 BANK0     10     4      6
                                              0 BANK1     24    24      0
                               _atoi
                               _ctoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    5909
                                             27 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   30837
                                             63 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4297
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             39 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     845
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4776
                                             27 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4497
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1795
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _estadoDirreccion                                     7     5      2     145
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _dirreccion                                           5     3      2     648
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _cambiarPWM                                           0     0      0       0
                   _definirVelocidad
 ---------------------------------------------------------------------------------
 (1) _rutinaEscape                                         3     3      0    9975
                                             64 BANK0      3     3      0
                           _adelante
                              _atras
                   _definirVelocidad
                      _encenderMotor
                        _enviarRS232
                     _fijarVelocidad
                        _frenarMotor
 ---------------------------------------------------------------------------------
 (2) _frenarMotor                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _fijarVelocidad                                       9     9      0    8887
                                             55 BANK0      9     9      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     676
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                             39 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3773
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3732
                                             39 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _enviarRS232                                          7     5      2    1057
                                              8 BANK0      7     5      2
                             _length
 ---------------------------------------------------------------------------------
 (3) _length                                               8     6      2     263
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _encenderMotor                                        0     0      0       0
                   _definirVelocidad
                     _rutinaArranque
 ---------------------------------------------------------------------------------
 (3) _rutinaArranque                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _definirVelocidad                                     2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atras                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adelante                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configuracionInicial                                 0     0      0       0
           _configurarInterrupciones
                     _configurarPWM7
                  _configurarPuertos
                    _configurarRS232
               _configurarRS232US100
                     _configurarTMR5
 ---------------------------------------------------------------------------------
 (2) _configurarTMR5                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarRS232US100                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarRS232                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPuertos                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPWM7                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarInterrupciones                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWMServo                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rutina                                              3     3      0    2859
                                             38 COMRAM     3     3      0
                          i2___awdiv
                          i2___fladd
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (11) i2___xxtofl                                         14    10      4     374
                                              8 COMRAM    14    10      4
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___fladd                                          16     8      8    2036
                                             22 COMRAM    16     8      8
                          i2___awdiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMServo
   _configuracionInicial
     _configurarInterrupciones
     _configurarPWM7
     _configurarPuertos
     _configurarRS232
     _configurarRS232US100
     _configurarTMR5
   _enviarRS232
     _length
   _rutinaEscape
     _adelante
     _atras
     _definirVelocidad
     _encenderMotor
       _definirVelocidad
       _rutinaArranque
     _enviarRS232
       _length
     _fijarVelocidad
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _frenarMotor
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
   _terminal
     _adelante
     _atras
     _cambiarPWM
       _definirVelocidad
     _dirreccion
     _encenderMotor
       _definirVelocidad
       _rutinaArranque
     _enviarRS232
       _length
     _estadoDirreccion
     _fijarVelocidad
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _frenarMotor
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen

 _rutina (ROOT)
   i2___awdiv
   i2___fladd
     i2___awdiv (ARG)
     i2___xxtofl (ARG)
       i2___awdiv (ARG)
   i2___xxtofl
     i2___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     4D      CF       8       80.9%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      4C       1       80.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BA       6        0.0%
DATA                 0      0     1BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jun 28 15:22:41 2019

                     ___fldiv@aexp 0078                       ___fldiv@bexp 0077  
                     ___fldiv@sign 0070                       ___awdiv@sign 0065  
              ___wmul@multiplicand 0062                       __CFG_CP0$OFF 000000  
                    terminal@texto 01A3                                l252 3E1E  
                              l264 3C68                                l344 3B1C  
                              l273 41EC                                l418 15BE  
                              l276 4210                                l452 2D5A  
                              l454 2D62                                l392 12E0  
                              l785 35AA                                l958 3694  
                              l968 38CE                                _PR2 000FCB  
                      i2___fladd@a 001B                        i2___fladd@b 0017  
                  ?_configurarTMR5 0001                    ?_configurarPWM7 0001  
                              _pad 3AEC                     terminal@degree 01B9  
                     ___awmod@sign 0065                         i2___xxtofl 32EA  
                   terminal@comand 019C                   ??_fijarVelocidad 0097  
                              wreg 000FE8                       __CFG_IESO$ON 000000  
                     ___flmul@aexp 007B                       ___flmul@bexp 0080  
                     ___flmul@sign 007A                       ___flmul@temp 0085  
                     ___flmul@prod 0081           __end_of_estadoDirreccion 3E28  
                     ___fltol@exp1 0090                    ??_encenderMotor 0062  
                             l1104 2A6C                               l1050 2400  
                             l1115 2ADA                               l1116 2AD6  
                             l1134 200C                               l1230 319C  
                             l1151 22AA                               l1143 2224  
                             l1144 2220                               l1065 24F4  
                             l1049 2422                               l1074 255A  
                             l1242 2C9C                               l1322 4256  
                             l1075 2556                               l1182 3266  
                             l1175 31E8                               l6000 2412  
                             l6100 25D0                               l6022 2468  
                             l6014 2446                               l6024 246C  
                             l6032 247E                               l6120 3B26  
                             l7000 18E4                               l6050 2518  
                             l6042 24E4                               l6114 3B04  
                             l6060 252E                               l6124 3B40  
                             l6300 2AA0                               l6140 3730  
                             l6118 3B14                               l6222 292A  
                             l6150 377A                               ?_pad 0070  
                             l6128 3B6C                               l6320 2B1E  
                             l6144 373A                               l7024 2D9C  
                             l7120 196C                               l6066 2538  
                             l7050 3062                               l6250 299E  
                             l6242 296A                               l6218 2926  
                             l7034 2E8A                               l7122 196E  
                             l7060 30B4                               l7052 3066  
                             l6500 3CD8                               l6324 2B42  
                             l6156 4128                               l7140 198E  
                             l7132 1986                               l7124 197E  
                             l7300 4072                               l6094 25C6  
                             l6086 25A0                               l7310 31F8  
                             l7070 30D2                               l6502 3CE0  
                             l6334 2B78                               l6238 2966  
                             l6174 2BFC                               l7214 1D46  
                             l7206 1CE6                               l7302 40A0  
                             l6432 21EA                               l6360 1FCC  
                             l7320 3228                               l7072 30FE  
                             l6520 3D18                               l6512 3D00  
                             l6336 2B7A                               l6328 2B6C  
                             l6264 29CC                               l6256 29B4  
                             l6192 2D2A                               l6184 2CBE  
                             l7160 1A72                               l7144 199A  
                             l7136 198A                               l7128 1982  
                             l6098 25CE                               l6426 21CC  
                             l7330 3298                               l7322 324E  
                             l7066 30C4                               l6282 2A44  
                             l6274 2A1C                               l6602 43E0  
                             l7242 1EEC                               l7234 1E4C  
                             l7218 1D70                               l7162 1A80  
                             l7146 19E2                               l7412 3F06  
                             l6452 2268                               l6356 1FB8  
                             l6612 37A4                               l7316 3216  
                             l7076 3138                               l7068 30CC  
                             l6516 3D0A                               l6540 3F4A  
                             l6532 3F30                               l6188 2CFC  
                             l7252 1F38                               l7180 1B76  
                             l7406 3EC0                               l6374 1FF8  
                             l6358 1FBC                               l7318 321C  
                             l6542 3F52                               l6294 2A82  
                             l7182 1B84                               l7158 1A54  
                             l5920 230C                               l6456 2286  
                             l6384 202A                               l6376 1FFC  
                             l6640 3812                               l6632 37FE  
                             l7328 328C                               l7432 3DB6  
                             l6704 4180                               l6552 3F74  
                             l6536 3F3C                               l6288 2A6A  
                             l7096 391C                               l7248 1F2C  
                             l7520 2F34                 __CFG_WPFP$PAGE_127 000000  
                             l7346 32D8                               l6706 418E  
                             l7098 392A                               l7178 1B58  
                             l7258 1F50                               l7522 2F50  
                             l7514 2F1C                               l7610 39F8  
                             l5924 2310                               l6468 22C8  
                             l6628 37EE                               l7460 3C2C  
                             l7444 3DE0                               l7436 3DC8  
                             l7452 3DFC                               l6556 3F82  
                             l6548 3F6A                               l6572 3C10  
                             l6564 3BBE                               l6580 354A  
                             l6812 12EA                               l6724 0FE8  
                             l7524 2F6C                               l7508 2F04  
                             l7604 39E8                               l7294 3E94  
                             l6646 382E                               l6638 3806  
                             l7462 3C30                               l7470 3C3E  
                             l7438 3DCE                               l6494 3CC2  
                             l6910 168A                               l7198 1C7C  
                             l7526 2F72                               l7288 3E5C  
                             l5944 2354                               l7464 3C34  
                             l7448 3DF2                               l6488 3CB2  
                             l6568 3BF2                               l6584 357E  
                             l6808 12C8                               l6736 1016  
                             l6744 102C                               l6656 360E  
                             l7616 3A0A                               l7474 3C76  
                             l7466 3C38                               l6594 35E2  
                             l6826 1338                               l6818 12F0  
                             l6754 1098                               l6762 10E2  
                             l6658 3622                               l7538 300E  
                             l5956 2378                               l5948 2358  
                             l5892 430C                               l6588 3594  
                             l6844 137E                               l6828 133C  
                             l6772 114E                               l6780 1168  
                             l6756 10B0                               l6668 367E  
                             l6684 38B8                               l6676 385C  
                             l7558 41F6                               l7566 3F96  
                             l7478 3C88                               l5878 3A64  
                             l6918 16AA                               l6926 16CE  
                             l6934 1768                               l6854 13B8  
                             l6862 14B0                               l6838 135A  
                             l6790 11E6                               l6758 10BA  
                             l6678 3870                               l7584 3FDC  
                             l6696 42E0                               l5888 42F4  
                             l5896 43FC                               l6848 138E  
                             l6792 1236                               l5986 23B4  
                             l5898 4402                               l6962 17F6  
                             l6946 17AA                               l6786 11AC  
                             l6964 1800                               l6884 15B6  
                             l6876 155E                               l6796 1272  
                             l5998 240E                               l6974 1858  
                             l6886 15D8                               l7598 39D0  
                             l6984 1884                               l6898 165A  
                             STR_1 0F77                               STR_2 0F63  
                             STR_3 0F4E                               STR_4 0F32  
                             STR_5 0F81                     _contador_datos 0041  
                             STR_6 0F01                               STR_7 0F89  
                             STR_8 0F91                               u7040 23D6  
                             u7050 23E6                               u8010 2276  
                             u7300 25AC                               u7220 253C  
                             u7060 23E8                               u8020 2294  
                             u7240 2550                               u9000 2EC8  
                             u7090 242A                               u8130 3F56  
                             u8300 3818                               u9020 30B0  
                             u7500 2BCA                               u8070 3CE4  
                             u7430 3772                               u7510 2BEA  
                             u7600 43BA                               u8400 42DC  
                             u9040 316C                               u7440 3774  
                             u9120 3978                               u9200 1ACE  
                             u7425 3754                               u7505 2BC0  
                             u8321 35EC                               u8250 3792  
                             u7610 43BC                               u9050 316E  
                             u7450 4164                               u8260 37C2  
                             u6900 3AA4                               u8180 3C0C  
                             u7380 36F6                               u8340 3626  
                             u7550 2C7C                               u7470 423C  
                             u8510 1126                               u9310 1DFE  
                             u9230 1BC2                               u7535 2C14  
                             u7536 2C1A                               u7480 423E  
                             u8520 1128                               u8440 1006  
                             u9320 1E00                               u9240 1BC4  
                             u8265 37B8                               u7385 36EA  
                             u7537 2C28                               u7457 415A  
                             u7570 2CDC                               u6930 4388  
                             u8370 3874                               u9250 1BD2  
                             u7555 2C72                               u9500 3EEE  
                             u7820 2B2C                               u6940 438A  
                             u8620 1308                               u9180 1ABE  
                             u7830 2B50                               u8470 1070  
                             u9190 1AC0                               u7575 2CD2  
                             u9360 3E4A                               u7920 2018  
                             u6880 3A5C                               u8560 129C  
                             u8480 1072                               u9601 39AA  
                             u9370 3E8A                               u7930 218E  
                             u8730 154E                               u9507 3EE4  
                             u9611 39B8                               u9460 32A2  
                             u7780 2AD0                               u8660 1356  
                             u8910 18CE                               u8830 178C  
                             u8590 12D6                               u9367 3E40  
                             u7935 2184                               u8920 18D0  
                             u9377 3E80                               u7970 221A  
                             u9707 443C                               u9571 2EF8  
                             u8950 2D4E                               u8890 186E  
                             u8980 2EB6                               u8981 2EB4  
                             u8990 2EC4                               u9687 3FB0  
                             u9697 3EF8                       ?_frenarMotor 0001  
                             _TMR2 000FCC                   ?_configurarRS232 0001  
                     ?_enviarRS232 0068                      __CFG_FCMEN$ON 000000  
                             _dbuf 0122                               _atoi 304E  
                             _ctoa 416E                               _main 39A0  
                             _prec 0038                               _nout 011C  
                             pad@i 0077                               pad@p 0074  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf1 000FE7                               indf2 000FDF  
                             fsr1l 000FE1                               pad@w 0079  
                             fsr2l 000FD9                               btemp 004D  
                             _utoa 2D3C                      ___fpclassifyf 36B6  
                             prodh 000FF4                               prodl 000FF3  
                             start 013C                    ___fldiv@new_exp 0071  
                     _tolower$2037 006C                       ___param_bank 000000  
                            ??_pad 0076              __size_of_rutinaEscape 0070  
                    __CFG_PLLDIV$3 000000                       _BAUDCON1bits 000F7E  
                     _BAUDCON2bits 000F7C                      ___fltol@sign1 008F  
                            ?_atoi 0067                              ?_ctoa 007B  
                  __end_of___fladd 25EC                              ?_main 0001  
                  __end_of___fldiv 2B82                    __end_of___awdiv 3D22  
                  __end_of___flneg 43F2                              STR_11 0F8D  
                            STR_12 0F95                              STR_15 0F99  
                            STR_17 0F99                    __end_of___awmod 3F8C  
                  __end_of___flmul 22DE                    __end_of___flsub 42A8  
                  __end_of___fltol 3840                              ?_utoa 007B  
                  __end_of___lodiv 36B6                    ___awdiv@divisor 0062  
                            _T2CON 000FCA                    __end_of___lomod 38F0  
                            _T5CON 000F22                              i2l200 0072  
                            i2l203 0080                              i2l208 0130  
                            i2l196 0042                    ___awdiv@counter 0064  
                     vfpfcnvrt@fmt 00E5                       vfpfcnvrt@llu 017C  
                            _TMR5H 000F24                              _TMR5L 000F23  
                    i2___fladd@grs 0026                              _datos 0172  
                            _flags 003A                              _atras 454A  
                            _fputc 3A4A                              _parar 003E  
                            _fputs 42E8                    __end_of_isdigit 43C2  
                   __CFG_CLKOEC$ON 000000                              _motor 0044  
                            atoi@n 0074                              pad@fp 0070  
                            atoi@s 0067                              _width 0036  
                            ctoa@c 007D                              _putch 456C  
                            ctoa@w 007E                    __end_of_isspace 42E8  
                  __end_of_isupper 4390                              tablat 000FF5  
                 __end_of_PWMServo 4212                              plusw1 000FE3  
                            plusw2 000FDB                              ttemp5 004E  
                            ttemp6 0051                              ttemp7 0055  
                            utoa@d 007D                              utoa@i 0099  
                            utoa@n 0091                              utoa@p 008D  
                            utoa@w 008F                              status 000FD8  
                            wtemp8 004E                    __end_of_sprintf 4118  
                   ?___fpclassifyf 0060                    __end_of_tolower 4260  
                 _servo_dirreccion 0042                    __end_of_strncmp 39A0  
                 ___lodiv@dividend 0060                   terminal@medicion 01B7  
        enviarRS232@longitud_texto 006C                 __size_ofi2___fladd 030C  
               __size_ofi2___awdiv 0084                       _rutinaEscape 3F8C  
          __CFG_DSWDTOSC$INTOSCREF 000000                    __initialization 3FFC  
                     __end_of_atoi 31A6                       __end_of_ctoa 41C0  
                     __end_of_main 3A4A                  ?_definirVelocidad 0001  
                     __end_of_utoa 2EF2                 ??_definirVelocidad 0060  
                   __CFG_OSC$HSPLL 000000                             ??_atoi 0069  
                           ??_ctoa 007E                             ??_main 00FF  
                           ??_utoa 0085                      __activetblptr 000003  
                 dirreccion@degree 0060                        ?i2___xxtofl 0009  
                 ___lodiv@quotient 0070                             ?_atras 0001  
                           ?_fputc 0060                             ?_fputs 0069  
                           _CCPR7L 000F0A                             _ANCON0 000F48  
                           _ANCON1 000F49                   ___awdiv@dividend 0060  
                           ?_putch 0001                             i2l1050 270C  
                           i2l1065 2800                             i2l1049 272E  
                           i2l1074 2866                             i2l1075 2862  
                           i2l1182 33A6                             i2l1175 3328  
                   __CFG_WDTEN$OFF 000000                             i2l5400 2664  
                           i2l5330 3D46                             i2l5324 3D36  
                           i2l5502 2824                             i2l5336 3D5C  
                           i2l5352 3D8E                             i2l5512 283A  
                           i2l5408 2684                             i2l5338 3D64  
                           i2l5450 271A                             i2l5356 3D9C  
                           i2l5348 3D84                             i2l5452 271E  
                           i2l5372 2618                             i2l5604 3418  
                           i2l5550 28DA                             i2l5518 2844  
                           i2l5438 26C0                             i2l5552 28DC  
                           i2l5376 261C                             i2l5616 002E  
                           i2l5546 28D2                             i2l5538 28AC  
                           i2l5474 2774                             i2l5466 2752  
                           i2l5476 2778                             i2l5484 278A  
                           i2l5396 2660                             i2l5580 338E  
                           i2l5644 00F4                             i2l5494 27F0  
                           i2l5574 3356                             i2l5576 335C  
                           i2l5568 3338                             i2l5586 33CC  
                           i2l5578 3368                             i2l5588 33D8  
                           _RCREG1 000FAF                             _RCREG2 000FAA  
                 __end_of_adelante 455E                             _RCSTA1 000FAC  
                           _RCSTA2 000F9C                      vfpfcnvrt@done 0184  
                           _SPBRG1 000FB0                             _SPBRG2 000FAB  
                           _PPSCON 000EBF                             _RPOR23 000ED7  
                   __CFG_WPCFG$OFF 000000                             _TXREG1 000FAE  
                           _TXREG2 000FA9                   __end_of___xxtofl 32EA  
                           _TXSTA1 000FAD                             _TXSTA2 000FA8  
                   __CFG_WPDIS$OFF 000000                   _contador_timer_5 003C  
                   i2___fladd@aexp 0024                     i2___fladd@bexp 0025  
                   __CFG_XINST$OFF 000000                       _CCPTMRS1bits 000F51  
                     vfprintf@cfmt 00F3                             ___flge 3514  
                           ___fleq 3B88                          ??___fladd 008F  
                           ___wmul 444C                  _tiempo_anterior_1 0045  
                        ??___fldiv 0068                          ??___awdiv 0064  
                        ??___flneg 0064                     __CFG_STVREN$ON 000000  
                        ??___awmod 0064                          ??___flmul 0076  
                        ??___flsub 009F                          ??___fltol 008B  
    __size_of_configuracionInicial 001A                          ??___lodiv 0070  
                        ??___lomod 0070                             _efgtoa 0F9E  
                           _floorf 2B82                             _length 3E28  
                           clear_0 4042                             clear_1 404E  
                 ___awdiv@quotient 0066                    ___awmod@divisor 0062  
                  ___awmod@counter 0064                             pad@buf 0072  
                           ctoa@fp 007B                             _rutina 0008  
                           _strcpy 4118                             _strlen 43F2  
                _configurarPuertos 4512                     i2___awdiv@sign 0006  
                           fputc@c 0060                             fputs@c 006D  
                           fputs@i 006E                       __pdataCOMRAM 0045  
                           fputs@s 0069                  __end_ofi2___fladd 28F8  
                        ??_isdigit 0062                  __end_ofi2___awdiv 3DA6  
                  ___fpclassifyf@e 0068                    ___fpclassifyf@u 006A  
                  ___fpclassifyf@x 0060                 ?_configurarPuertos 0001  
                     __mediumconst 0000                          ??_isspace 0062  
                 __end_of_terminal 304E                             tblptrh 000FF7  
                        ??_isupper 0062                             tblptrl 000FF6  
                           tblptru 000FF8                   rutinaEscape@type 00A2  
                           putch@c 0001                   __end_of_vfprintf 40C0  
                           utoa@fp 007B                          ??_sprintf 00F5  
                        ??_tolower 0068                          ??_strncmp 0066  
              ??_configurarPuertos 0060                         ___flge@ff1 0087  
                       ___flge@ff2 008B                    ??___fpclassifyf 0064  
             __CFG_LS48MHZ$SYS48X8 000000                       ___xxtofl@arg 006A  
                     ___xxtofl@exp 0069                       ___xxtofl@val 0060  
                       ___fleq@ff1 0060                         ___fleq@ff2 0064  
     __end_of_configurarRS232US100 449A                         __accesstop 0060  
          __end_of__initialization 4054                         ___flneg@f1 0060  
             __size_of_frenarMotor 0010           _configurarInterrupciones 4530  
             __size_of_enviarRS232 0076                      ___rparam_used 000001  
                       ___fltol@f1 0087                       enviarRS232@i 006E  
                  __CFG_IOL1WAY$ON 000000               __CFG_WPEND$PAGE_WPFP 000000  
              __size_ofi2___xxtofl 0140                     __pcstackCOMRAM 0001  
                     __pidataBANK1 4566                      __end_of_atras 4554  
                 ??_configurarTMR5 0060                   ??_configurarPWM7 0060  
                    __end_of_fputc 3AEC                      __end_of_fputs 4324  
                    __end_of_putch 456E          __end_of_configurarPuertos 4522  
                  __CFG_DSWDTPS$G2 000000                          ?_PWMServo 0001  
                       _cambiarPWM 453E                            ??_atras 0060  
                          ??_fputc 0064                            ??_fputs 006D  
                          ??_putch 0060                  ?_estadoDirreccion 0060  
          __size_of_rutinaArranque 002C                         __pbssBANK1 0100  
               ??_estadoDirreccion 0062                            ?___flge 0087  
                          ?___fleq 0060                            ?___wmul 0060  
                          ?_efgtoa 009F                            ?_floorf 0079  
                          ?_length 0060                         ??_PWMServo 0060  
                          ?_rutina 0001                            ?_strcpy 0060  
                          ?_strlen 0060                          ?_adelante 0001  
                        ?___xxtofl 0060                 __size_of_vfpfcnvrt 0668  
                       _dirreccion 3C14                            _RPINR16 000EF7  
                 fijarVelocidad@DC 0097                      _bandera_servo 0120  
                 ___lomod@dividend 0060              __end_of_encenderMotor 4530  
                 __CFG_CFGPLLEN$ON 000000                    i2___fladd@signs 0023  
                          __Hparam 0000                            __Lparam 0000  
         __size_of_configurarRS232 0018                          ?_terminal 019C  
                  __size_of___flge 00D2                    __size_of___fleq 008C  
                          ___fladd 22DE                            ___fldiv 28F8  
                          ___awdiv 3C9C                            ___flneg 43C2  
                          ___awmod 3F1A                            ___flmul 1F8A  
                          ___flsub 4260                            ___fltol 3784  
                  __size_of___wmul 0028                            ___lodiv 35E6  
                          ___lomod 3840                          ?_vfprintf 00ED  
                     __psmallconst 0F00                    __size_of_efgtoa 0984  
                          _bandera 0121         __size_of_configurarPuertos 0010  
                  __size_of_floorf 01BA                            __pcinit 3FFC  
                  __size_of_length 007C                            __ramtop 0F00  
           estadoDirreccion@angulo 0064                            __ptext0 39A0  
                          __ptext1 2EF2                            __ptext2 40C0  
                          __ptext3 405E                            __ptext4 1922  
                          __ptext5 2D3C                            __ptext6 3840  
                          __ptext7 35E6                            __ptext8 38F0  
                          __ptext9 0F9E               _configurarRS232US100 4474  
                       ??_adelante 0060                    __size_of_rutina 0134  
                  __size_of_strcpy 0056                    __size_of_strlen 002E  
                        _T2CONbits 000FCA                       __size_of_pad 009C  
                          _isdigit 4390                       ??i2___xxtofl 000D  
                       ??___xxtofl 0064                   ___awmod@dividend 0060  
                      ?_cambiarPWM 0001                            _isspace 42A8  
                        _T5CONbits 000F22                            _isupper 435E  
                          efgtoa@c 00A5                            efgtoa@d 00C3  
                          efgtoa@e 00DB                            efgtoa@f 00A1  
                          efgtoa@g 00D7                            efgtoa@h 00CD  
                          efgtoa@i 00D5                            efgtoa@l 00D1  
                          efgtoa@m 00BF                            efgtoa@n 00DD  
                          efgtoa@p 00C7                            efgtoa@t 00BB  
                          efgtoa@u 00DF                            efgtoa@w 00CA  
        __size_of_definirVelocidad 003A                            atoi@neg 006D  
                   length@longitud 0064                            _sprintf 40C0  
                          _tolower 4212                            _strncmp 38F0  
             end_of_initialization 4054                            floorf@e 0087  
                          floorf@m 0083                            floorf@u 0089  
                          floorf@x 0079                            length@i 0067  
                          fputc@fp 0062                            fputs@fp 006B  
          __size_of_fijarVelocidad 00EA                     i2___xxtofl@arg 0013  
                   i2___xxtofl@exp 0012                     i2___xxtofl@val 0009  
                __end_of_vfpfcnvrt 1F8A                         efgtoa@mode 00CC  
                       efgtoa@sign 00C5                 __end_ofi2___xxtofl 342A  
                       ??_terminal 019E                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                       ??_vfprintf 00F3                            strcpy@d 0068  
                          strlen@a 0062                            strcpy@s 0066  
                          strlen@s 0060              ?_configurarRS232US100 0001  
                        _PORTAbits 000F80                          _PORTBbits 000F81  
                        _PORTDbits 000F83                   __CFG_DSBOREN$OFF 000000  
                      ___fladd@grs 0096                   __CFG_CPUDIV$OSC1 000000  
                    ___xxtofl@sign 0068                          _TRISAbits 000F92  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                        _TRISDbits 000F95                        ?_dirreccion 0060  
       ??_configurarInterrupciones 0060                        ___fldiv@grs 0073  
     __end_of_configuracionInicial 44D4                        ___fldiv@rem 006C  
                        i2___fladd 25EC                          i2___awdiv 3D22  
                __CFG_SOSCSEL$HIGH 000000                     _rutinaArranque 4420  
                      ___flmul@grs 007C                 i2___awdiv@dividend 0001  
                      _CCP7CONbits 000F09                __CFG_MSSP7B_EN$MSK7 000000  
              __size_of_cambiarPWM 000C                     __end_of___flge 35E6  
                   __end_of___fleq 3C14                        vfpfcnvrt@ap 00E7  
                      vfpfcnvrt@ct 0190                        vfpfcnvrt@fp 00E3  
                   __end_of___wmul 4474                      __pidataCOMRAM 455E  
                   __end_of_efgtoa 1922                  ??_configurarRS232 0060  
                   __end_of_floorf 2D3C                     __end_of_length 3EA4  
                       floorf@F524 002A                   __CFG_DSWDTEN$OFF 000000  
                   __end_of_rutina 013C                     __end_of_strcpy 416E  
                   __end_of_strlen 4420                start_initialization 3FFC  
                  ___lodiv@divisor 0068                  __size_of_PWMServo 0052  
                  ___lodiv@counter 0078                 i2___awdiv@quotient 0007  
           __end_of_rutinaArranque 444C                        __end_of_pad 3B88  
                       ?i2___fladd 0017                         ?i2___awdiv 0001  
                    ??_frenarMotor 0060                      ??_enviarRS232 006A  
            __end_of___fpclassifyf 3784                         length@dato 0066  
                       length@text 0060                        vfprintf@fmt 00EF  
                         ??___flge 008F                           ??___fleq 0068  
              __size_of_dirreccion 0088                           ??___wmul 0064  
        __size_of_estadoDirreccion 0082                           ??_efgtoa 00A6  
                __CFG_ADCSEL$BIT12 000000                        __pdataBANK1 01C9  
           ??_configurarRS232US100 0060                           ??_floorf 007D  
                         ??_length 0062                           ??_rutina 0027  
                         ??_strcpy 0064                           ??_strlen 0062  
                        ___fladd@a 008B                          ___fladd@b 0087  
                        ___fldiv@a 0064                          ___fldiv@b 0060  
                        ___flmul@a 0072                          ___flmul@b 006E  
                      __pbssCOMRAM 002A                          ___flsub@a 009B  
                        ___flsub@b 0097                  __size_of_adelante 000A  
                    __pcstackBANK0 0060                      __pcstackBANK1 017C  
                  ?_rutinaArranque 0001                   _definirVelocidad 4324  
                __size_of___xxtofl 0144                     _fijarVelocidad 342A  
                        _atoi$1921 006F                          _atoi$1922 0073  
                        _atoi$1923 0071                      ?_rutinaEscape 0001  
                      _efgtoa$1411 00AF                        _efgtoa$1420 00B5  
                      _efgtoa$1412 00B1                        _efgtoa$1421 00B7  
                      _efgtoa$1422 00B9                        _efgtoa$1416 00B3  
              __end_of_frenarMotor 4512                __end_of_enviarRS232 3F1A  
               enviarRS232@valores 0068                          __pintcode 0008  
                         ?___fladd 0087                           ?___fldiv 0060  
                         ?___awdiv 0060                           ?___flneg 0060  
                         ?___awmod 0060                           ?___flmul 006E  
                         ?___flsub 0097                           ?___fltol 0087  
             _configuracionInicial 44BA                 dirreccion@tiempo_1 0064  
                         ?___lodiv 0060                           ?___lomod 0060  
                __size_of_terminal 015C                          _distancia 0032  
                __size_of_vfprintf 0062                    ___lomod@divisor 0068  
                      __smallconst 0F00                    ___lomod@counter 0070  
                         ?_isdigit 0060                          _indicador 0043  
             __CFG_RTCOSC$T1OSCREF 000000                       ??_cambiarPWM 0062  
                         ?_isspace 0060   __end_of_configurarInterrupciones 453E  
                         ?_isupper 0060            __size_of_configurarPWM7 0020  
          __size_of_configurarTMR5 0016                        ??i2___fladd 001F  
                      ??i2___awdiv 0005                     __size_of_atras 000A  
                         ?_sprintf 0194                           ?_tolower 0066  
                   __size_of_fputc 00A2                     __size_of_fputs 003C  
                         ?_strncmp 0060             __end_of_fijarVelocidad 3514  
                   __size_of_putch 0002              estadoDirreccion@valor 0066  
                        _obstaculo 011F                     ___wmul@product 0064  
                   ??_rutinaEscape 00A0                           _PIE1bits 000F9D  
                         _PIE3bits 000FA3                           _PIE5bits 000F91  
                         _PIR1bits 000F9E                           i2u620_40 3D68  
                         _PIR3bits 000FA4                           i2u632_40 26E2  
                         i2u633_40 26F2                           _PIR5bits 000F98  
                         i2u650_40 2848                           i2u634_40 26F4  
                         i2u652_40 285C                           i2u637_40 2736  
                         i2u658_40 28B8                           i2u668_40 33E2  
                 __CFG_WDTPS$32768 000000                          main@F7116 01C9  
                        main@F7118 0114              ?_configuracionInicial 0001  
                         _TIME_MAX 0047                 __end_of_cambiarPWM 454A  
                        _velocidad 0049                          _vfpfcnvrt 1922  
                ___wmul@multiplier 0060             __size_of_encenderMotor 000E  
                         _PWMServo 41C0                  i2___awdiv@divisor 0003  
                        main@texto 01C1                  i2___awdiv@counter 0005  
                     ??_dirreccion 0062                       _isspace$1952 0066  
                       vfpfcnvrt@c 0193                         vfpfcnvrt@f 018C  
                      _INTCON2bits 000FF1                          copy_data0 4010  
                        copy_data1 4030                    ?_fijarVelocidad 0001  
                      _frenarMotor 4502                        _enviarRS232 3EA4  
                  _configurarRS232 44D4                           __Hrparam 0000  
                       vfprintf@ap 00F1                           __Lrparam 0000  
                       vfprintf@fp 00ED                   _estadoDirreccion 3DA6  
                      _estadoFuego 0040                 __end_of_dirreccion 3C9C  
                 __size_of___fladd 030E                   __size_of___fldiv 028A  
                 __size_of___awdiv 0086                   __size_of___flneg 0030  
                 __size_of___awmod 0072                   __size_of___flmul 0354  
                 __size_of___flsub 0048                   __size_of___fltol 00BC  
                 __size_of___lodiv 00D0                   __size_of___lomod 00B0  
                       ?_vfpfcnvrt 00E3                           _adelante 4554  
               ___fpclassifyf@F463 002E                _fijarVelocidad$2262 009B  
                       sprintf@fmt 0196                           _cicle_90 004B  
                         ___xxtofl 31A6                   __size_of_isdigit 0032  
                 __size_of_isspace 0040                           __ptext10 4212  
                         __ptext11 435E                           __ptext20 3F1A  
                         __ptext12 4118                           __ptext21 3C9C  
                         __ptext13 2B82                           __ptext30 4390  
                         __ptext22 416E                           __ptext14 36B6  
                         __ptext31 444C                           __ptext23 3AEC  
                         __ptext15 4260                           __ptext40 1F8A  
                         __ptext32 3DA6                           __ptext24 43F2  
                         __ptext16 43C2                           __ptext41 22DE  
                         __ptext33 3C14                           __ptext25 42E8  
                         __ptext17 3514                           __ptext50 44EC  
                         __ptext42 3EA4                           __ptext34 453E  
                         __ptext26 3A4A                           __ptext18 3B88  
                         __ptext51 4474                           __ptext43 3E28  
                         __ptext35 3F8C                           __ptext27 456C  
                         __ptext19 28F8                           __ptext60 3D22  
                         __ptext52 44D4                           __ptext44 4522  
                         __ptext36 4502                           __ptext28 304E  
                         __ptext53 4512                           __ptext45 4420  
                         __ptext37 342A                           __ptext29 42A8  
                         __ptext54 449A                           __ptext46 4324  
                         __ptext38 31A6                           __ptext55 4530  
                         __ptext47 454A                           __ptext39 3784  
                         __ptext56 41C0                           __ptext48 4554  
                         __ptext49 44BA                           __ptext58 32EA  
                         __ptext59 25EC                   __size_of_isupper 0032  
                       rutina@dato 0029                   __size_of_sprintf 0058  
                 __size_of_tolower 004E                         strcpy@dest 0060  
                 __size_of_strncmp 00B0                      _encenderMotor 4522  
                    __size_of_atoi 0158                      __size_of_ctoa 0052  
                    __size_of_main 00AA                      __size_of_utoa 01B6  
           ??_configuracionInicial 0060                           efgtoa@fp 009F  
                         efgtoa@ne 00C1                           efgtoa@pp 00BD  
__size_of_configurarInterrupciones 000E                           efgtoa@ou 00AB  
        ?_configurarInterrupciones 0001           __end_of_definirVelocidad 435E  
                         _terminal 2EF2                           int$flags 004D  
                         _vfprintf 405E                           main@text 01BB  
                 ??_rutinaArranque 0060               __end_of_rutinaEscape 3FFC  
                   _vfpfcnvrt$1443 0186                     _vfpfcnvrt$1444 0188  
                   _vfpfcnvrt$1449 018A                         _INTCONbits 000FF2  
                   _configurarTMR5 44EC                     _configurarPWM7 449A  
                         isdigit@c 0060            __end_of_configurarRS232 44EC  
                         intlevel2 0000                          sprintf@ap 00F7  
                _bandera_distancia 011E                     ?_encenderMotor 0001  
                  i2___xxtofl@sign 0011                           isspace@c 0060  
                        strcpy@src 0062                           isupper@c 0060  
                        strncmp@_l 0060                          strncmp@_r 0062  
                      efgtoa@nmode 00C9                        ??_vfpfcnvrt 00E9  
    __size_of_configurarRS232US100 0026                           sprintf@f 00F9  
                         tolower@c 0066                           sprintf@s 0194  
           __end_of_configurarPWM7 44BA             __end_of_configurarTMR5 4502  
           __size_of___fpclassifyf 00CE                           strncmp@l 0067  
                         strncmp@n 0064                           strncmp@r 0069  
                    ___fladd@signs 0093                fijarVelocidad@speed 009F  
                     ___fladd@aexp 0094                       ___fladd@bexp 0095  
                    terminal@F7125 0100  
