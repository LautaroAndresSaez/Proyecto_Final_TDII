

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jun 14 19:30:27 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 2.05
    54                           ; Generated 20/12/2018 GMT
    55                           ; 
    56                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F47J53 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataBANK0
    89  0026DC                     __pidataBANK0:
    90                           	opt callstack 0
    91                           
    92                           ;initializer for _TIME_MAX
    93  0026DC  00B9               	dw	185
    94                           
    95                           ;initializer for _cicle_90
    96  0026DE  01C2               	dw	450
    97  0000                     _ANCON0bits	set	3912
    98  0000                     _T5CONbits	set	3874
    99  0000                     _CCPR7L	set	3850
   100  0000                     _TMR5L	set	3875
   101  0000                     _TMR5H	set	3876
   102  0000                     _T5CON	set	3874
   103  0000                     _CCPTMRS1bits	set	3921
   104  0000                     _CCP7CONbits	set	3849
   105  0000                     _ANCON1	set	3913
   106  0000                     _ANCON0	set	3912
   107  0000                     _ADRES	set	4035
   108  0000                     _ADCON1	set	4033
   109  0000                     _ADCON0	set	4034
   110  0000                     _TRISEbits	set	3990
   111  0000                     _ADCON0bits	set	4034
   112  0000                     _TXREG	set	4014
   113  0000                     _RCREG1	set	4015
   114  0000                     _TXREG1	set	4014
   115  0000                     _T2CONbits	set	4042
   116  0000                     _PIR5bits	set	3992
   117  0000                     _PIE5bits	set	3985
   118  0000                     _PORTDbits	set	3971
   119  0000                     _TRISDbits	set	3989
   120  0000                     _PIE1bits	set	3997
   121  0000                     _PIR1bits	set	3998
   122  0000                     _SPBRG1	set	4016
   123  0000                     _BAUDCON1bits	set	3966
   124  0000                     _RCSTA1	set	4012
   125  0000                     _TXSTA1	set	4013
   126  0000                     _TRISCbits	set	3988
   127  0000                     _TMR2	set	4044
   128  0000                     _PR2	set	4043
   129  0000                     _T2CON	set	4042
   130  0000                     _TRISBbits	set	3987
   131  0000                     _INTCONbits	set	4082
   132                           
   133                           	psect	smallconst
   134  000F00                     __psmallconst:
   135                           	opt callstack 0
   136  000F00  00                 	db	0
   137  000F01                     STR_2:
   138  000F01  53                 	db	83	;'S'
   139  000F02  54                 	db	84	;'T'
   140  000F03  4F                 	db	79	;'O'
   141  000F04  50                 	db	80	;'P'
   142  000F05  20                 	db	32
   143  000F06  2B                 	db	43
   144  000F07  2B                 	db	43
   145  000F08  00                 	db	0
   146  000F09                     STR_1:
   147  000F09  25                 	db	37
   148  000F0A  30                 	db	48	;'0'
   149  000F0B  34                 	db	52	;'4'
   150  000F0C  75                 	db	117	;'u'
   151  000F0D  25                 	db	37
   152  000F0E  63                 	db	99	;'c'
   153  000F0F  00                 	db	0
   154                           
   155                           ; #config settings
   156  000F10  00                 	db	0	; dummy byte at the end
   157  0000                     
   158                           	psect	cinit
   159  002484                     __pcinit:
   160                           	opt callstack 0
   161  002484                     start_initialization:
   162                           	opt callstack 0
   163  002484                     __initialization:
   164                           	opt callstack 0
   165                           
   166                           ; Initialize objects allocated to BANK0 (4 bytes)
   167                           ; load TBLPTR registers with __pidataBANK0
   168  002484  0EDC               	movlw	low __pidataBANK0
   169  002486  6EF6               	movwf	tblptrl,c
   170  002488  0E26               	movlw	high __pidataBANK0
   171  00248A  6EF7               	movwf	tblptrh,c
   172  00248C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   173  00248E  6EF8               	movwf	tblptru,c
   174  002490  EE00  F0FB         	lfsr	0,__pdataBANK0
   175  002494  EE10 F004          	lfsr	1,4
   176  002498                     copy_data0:
   177  002498  0009               	tblrd		*+
   178  00249A  CFF5 FFEE          	movff	tablat,postinc0
   179  00249E  50E5               	movf	postdec1,w,c
   180  0024A0  50E1               	movf	fsr1l,w,c
   181  0024A2  E1FA               	bnz	copy_data0
   182                           
   183                           ; Clear objects allocated to BANK1 (20 bytes)
   184  0024A4  EE01  F000         	lfsr	0,__pbssBANK1
   185  0024A8  0E14               	movlw	20
   186  0024AA                     clear_0:
   187  0024AA  6AEE               	clrf	postinc0,c
   188  0024AC  06E8               	decf	wreg,f,c
   189  0024AE  E1FD               	bnz	clear_0
   190                           
   191                           ; Clear objects allocated to BANK0 (79 bytes)
   192  0024B0  EE00  F060         	lfsr	0,__pbssBANK0
   193  0024B4  0E4F               	movlw	79
   194  0024B6                     clear_1:
   195  0024B6  6AEE               	clrf	postinc0,c
   196  0024B8  06E8               	decf	wreg,f,c
   197  0024BA  E1FD               	bnz	clear_1
   198                           
   199                           ; Clear objects allocated to COMRAM (3 bytes)
   200  0024BC  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   201  0024BE  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   202  0024C0  6A58               	clrf	__pbssCOMRAM& (0+255),c
   203  0024C2                     end_of_initialization:
   204                           	opt callstack 0
   205  0024C2                     __end_of__initialization:
   206                           	opt callstack 0
   207  0024C2  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   208  0024C4  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   209  0024C6  0100               	movlb	0
   210  0024C8  EF70  F00F         	goto	_main	;jump to C main() function
   211                           
   212                           	psect	bssCOMRAM
   213  000058                     __pbssCOMRAM:
   214                           	opt callstack 0
   215  000058                     _width:
   216                           	opt callstack 0
   217  000058                     	ds	2
   218  00005A                     _indicador:
   219                           	opt callstack 0
   220  00005A                     	ds	1
   221                           
   222                           	psect	bssBANK0
   223  000060                     __pbssBANK0:
   224                           	opt callstack 0
   225  000060                     	ds	20
   226  000074                     _nout:
   227                           	opt callstack 0
   228  000074                     	ds	2
   229  000076                     _prec:
   230                           	opt callstack 0
   231  000076                     	ds	2
   232  000078                     _flags:
   233                           	opt callstack 0
   234  000078                     	ds	2
   235  00007A                     _bandera_servo:
   236                           	opt callstack 0
   237  00007A                     	ds	2
   238  00007C                     _contador_timer_5:
   239                           	opt callstack 0
   240  00007C                     	ds	2
   241  00007E                     _bandera_adc:
   242                           	opt callstack 0
   243  00007E                     	ds	2
   244  000080                     _medicion_adc:
   245                           	opt callstack 0
   246  000080                     	ds	2
   247  000082                     _velocidad:
   248                           	opt callstack 0
   249  000082                     	ds	2
   250  000084                     _bandera:
   251                           	opt callstack 0
   252  000084                     	ds	1
   253  000085                     _dbuf:
   254                           	opt callstack 0
   255  000085                     	ds	32
   256  0000A5                     _datos:
   257                           	opt callstack 0
   258  0000A5                     	ds	10
   259                           
   260                           	psect	dataBANK0
   261  0000FB                     __pdataBANK0:
   262                           	opt callstack 0
   263  0000FB                     _TIME_MAX:
   264                           	opt callstack 0
   265  0000FB                     	ds	2
   266  0000FD                     _cicle_90:
   267                           	opt callstack 0
   268  0000FD                     	ds	2
   269                           
   270                           	psect	bssBANK1
   271  000100                     __pbssBANK1:
   272                           	opt callstack 0
   273  000100                     	ds	20
   274                           
   275                           	psect	cstackBANK0
   276  0000AF                     __pcstackBANK0:
   277                           	opt callstack 0
   278  0000AF                     ?_vfprintf:
   279                           	opt callstack 0
   280  0000AF                     vfprintf@fp:
   281                           	opt callstack 0
   282                           
   283                           ; 2 bytes @ 0x0
   284  0000AF                     	ds	2
   285  0000B1                     vfprintf@fmt:
   286                           	opt callstack 0
   287                           
   288                           ; 2 bytes @ 0x2
   289  0000B1                     	ds	2
   290  0000B3                     vfprintf@ap:
   291                           	opt callstack 0
   292                           
   293                           ; 2 bytes @ 0x4
   294  0000B3                     	ds	2
   295  0000B5                     ?_sprintf:
   296                           	opt callstack 0
   297  0000B5                     sprintf@s:
   298                           	opt callstack 0
   299                           
   300                           ; 2 bytes @ 0x6
   301  0000B5                     	ds	2
   302  0000B7                     sprintf@fmt:
   303                           	opt callstack 0
   304                           
   305                           ; 2 bytes @ 0x8
   306  0000B7                     	ds	8
   307  0000BF                     sprintf@ap:
   308                           	opt callstack 0
   309                           
   310                           ; 2 bytes @ 0x10
   311  0000BF                     	ds	2
   312  0000C1                     sprintf@f:
   313                           	opt callstack 0
   314                           
   315                           ; 6 bytes @ 0x12
   316  0000C1                     	ds	6
   317  0000C7                     logicaEstadoSiguiente@comand:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0x18
   321  0000C7                     	ds	2
   322  0000C9                     ??_logicaEstadoSiguiente:
   323                           
   324                           ; 1 bytes @ 0x1A
   325  0000C9                     	ds	5
   326  0000CE                     logicaEstadoSiguiente@texto:
   327                           	opt callstack 0
   328                           
   329                           ; 20 bytes @ 0x1F
   330  0000CE                     	ds	20
   331  0000E2                     logicaEstadoSiguiente@medicion:
   332                           	opt callstack 0
   333                           
   334                           ; 2 bytes @ 0x33
   335  0000E2                     	ds	2
   336  0000E4                     ??_main:
   337                           
   338                           ; 1 bytes @ 0x35
   339  0000E4                     	ds	2
   340  0000E6                     main@text_adc:
   341                           	opt callstack 0
   342                           
   343                           ; 20 bytes @ 0x37
   344  0000E6                     	ds	20
   345  0000FA                     main@tiempo_anterior_1:
   346                           	opt callstack 0
   347                           
   348                           ; 1 bytes @ 0x4B
   349  0000FA                     	ds	1
   350                           
   351                           	psect	cstackCOMRAM
   352  000001                     __pcstackCOMRAM:
   353                           	opt callstack 0
   354  000001                     ??_rutina:
   355  000001                     
   356                           ; 1 bytes @ 0x0
   357  000001                     	ds	2
   358  000003                     rutina@dato:
   359                           	opt callstack 0
   360                           
   361                           ; 1 bytes @ 0x2
   362  000003                     	ds	1
   363  000004                     ??_dirreccion:
   364  000004                     ??_rutinaArranque:
   365  000004                     ?_strlen:
   366                           	opt callstack 0
   367  000004                     ?_isdigit:
   368                           	opt callstack 0
   369  000004                     ?_isspace:
   370                           	opt callstack 0
   371  000004                     ?___wmul:
   372                           	opt callstack 0
   373  000004                     ?___xxtofl:
   374                           	opt callstack 0
   375  000004                     ?___lodiv:
   376                           	opt callstack 0
   377  000004                     ?___lomod:
   378                           	opt callstack 0
   379  000004                     enviarRS232@valores:
   380                           	opt callstack 0
   381  000004                     ___wmul@multiplier:
   382                           	opt callstack 0
   383  000004                     isdigit@c:
   384                           	opt callstack 0
   385  000004                     isspace@c:
   386                           	opt callstack 0
   387  000004                     fputc@c:
   388                           	opt callstack 0
   389  000004                     strlen@s:
   390                           	opt callstack 0
   391  000004                     ___xxtofl@val:
   392                           	opt callstack 0
   393  000004                     ___lodiv@dividend:
   394                           	opt callstack 0
   395  000004                     ___lomod@dividend:
   396                           	opt callstack 0
   397                           
   398                           ; 8 bytes @ 0x3
   399  000004                     	ds	2
   400  000006                     ??_isdigit:
   401  000006                     ??_isspace:
   402  000006                     ??_encenderMotor:
   403  000006                     enviarRS232@numero_valores:
   404                           	opt callstack 0
   405  000006                     dirreccion@degree:
   406                           	opt callstack 0
   407  000006                     ___wmul@multiplicand:
   408                           	opt callstack 0
   409  000006                     fputc@fp:
   410                           	opt callstack 0
   411  000006                     strlen@a:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x5
   415  000006                     	ds	1
   416  000007                     ??_enviarRS232:
   417  000007                     dirreccion@tiempo_1:
   418                           	opt callstack 0
   419                           
   420                           ; 1 bytes @ 0x6
   421  000007                     	ds	1
   422  000008                     ??_fputc:
   423  000008                     ??___xxtofl:
   424  000008                     enviarRS232@i:
   425                           	opt callstack 0
   426  000008                     ___wmul@product:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0x7
   430  000008                     	ds	2
   431  00000A                     _isspace$1407:
   432                           	opt callstack 0
   433                           
   434                           ; 1 bytes @ 0x9
   435  00000A                     	ds	1
   436  00000B                     ?_atoi:
   437                           	opt callstack 0
   438  00000B                     atoi@s:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0xA
   442  00000B                     	ds	1
   443  00000C                     ___xxtofl@sign:
   444                           	opt callstack 0
   445  00000C                     ___lodiv@divisor:
   446                           	opt callstack 0
   447  00000C                     ___lomod@divisor:
   448                           	opt callstack 0
   449                           
   450                           ; 8 bytes @ 0xB
   451  00000C                     	ds	1
   452  00000D                     ??_atoi:
   453  00000D                     ___xxtofl@exp:
   454                           	opt callstack 0
   455  00000D                     fputs@s:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0xC
   459  00000D                     	ds	1
   460  00000E                     ___xxtofl@arg:
   461                           	opt callstack 0
   462                           
   463                           ; 4 bytes @ 0xD
   464  00000E                     	ds	1
   465  00000F                     fputs@fp:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0xE
   469  00000F                     	ds	2
   470  000011                     fputs@c:
   471                           	opt callstack 0
   472  000011                     atoi@neg:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x10
   476  000011                     	ds	1
   477  000012                     ?___flmul:
   478                           	opt callstack 0
   479  000012                     fputs@i:
   480                           	opt callstack 0
   481  000012                     ___flmul@b:
   482                           	opt callstack 0
   483                           
   484                           ; 4 bytes @ 0x11
   485  000012                     	ds	1
   486  000013                     _atoi$1389:
   487                           	opt callstack 0
   488                           
   489                           ; 2 bytes @ 0x12
   490  000013                     	ds	1
   491  000014                     ?_pad:
   492                           	opt callstack 0
   493  000014                     ___lomod@counter:
   494                           	opt callstack 0
   495  000014                     pad@fp:
   496                           	opt callstack 0
   497  000014                     ___lodiv@quotient:
   498                           	opt callstack 0
   499                           
   500                           ; 8 bytes @ 0x13
   501  000014                     	ds	1
   502  000015                     _atoi$1391:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x14
   506  000015                     	ds	1
   507  000016                     pad@buf:
   508                           	opt callstack 0
   509  000016                     ___flmul@a:
   510                           	opt callstack 0
   511                           
   512                           ; 4 bytes @ 0x15
   513  000016                     	ds	1
   514  000017                     _atoi$1390:
   515                           	opt callstack 0
   516                           
   517                           ; 1 bytes @ 0x16
   518  000017                     	ds	1
   519  000018                     pad@p:
   520                           	opt callstack 0
   521  000018                     atoi@n:
   522                           	opt callstack 0
   523                           
   524                           ; 2 bytes @ 0x17
   525  000018                     	ds	2
   526  00001A                     ??___flmul:
   527  00001A                     ??_pad:
   528                           
   529                           ; 1 bytes @ 0x19
   530  00001A                     	ds	1
   531  00001B                     pad@i:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x1A
   535  00001B                     	ds	1
   536  00001C                     ___lodiv@counter:
   537                           	opt callstack 0
   538                           
   539                           ; 1 bytes @ 0x1B
   540  00001C                     	ds	1
   541  00001D                     pad@w:
   542                           	opt callstack 0
   543                           
   544                           ; 2 bytes @ 0x1C
   545  00001D                     	ds	1
   546  00001E                     ___flmul@sign:
   547                           	opt callstack 0
   548                           
   549                           ; 1 bytes @ 0x1D
   550  00001E                     	ds	1
   551  00001F                     ?_ctoa:
   552                           	opt callstack 0
   553  00001F                     ?_utoa:
   554                           	opt callstack 0
   555  00001F                     ctoa@fp:
   556                           	opt callstack 0
   557  00001F                     utoa@fp:
   558                           	opt callstack 0
   559  00001F                     ___flmul@grs:
   560                           	opt callstack 0
   561                           
   562                           ; 4 bytes @ 0x1E
   563  00001F                     	ds	2
   564  000021                     ctoa@c:
   565                           	opt callstack 0
   566  000021                     utoa@d:
   567                           	opt callstack 0
   568                           
   569                           ; 8 bytes @ 0x20
   570  000021                     	ds	1
   571  000022                     ctoa@w:
   572                           	opt callstack 0
   573                           
   574                           ; 2 bytes @ 0x21
   575  000022                     	ds	1
   576  000023                     ___flmul@aexp:
   577                           	opt callstack 0
   578                           
   579                           ; 1 bytes @ 0x22
   580  000023                     	ds	1
   581  000024                     ___flmul@bexp:
   582                           	opt callstack 0
   583                           
   584                           ; 1 bytes @ 0x23
   585  000024                     	ds	1
   586  000025                     ___flmul@prod:
   587                           	opt callstack 0
   588                           
   589                           ; 4 bytes @ 0x24
   590  000025                     	ds	4
   591  000029                     ??_utoa:
   592  000029                     ___flmul@temp:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x28
   596  000029                     	ds	2
   597  00002B                     ?___fladd:
   598                           	opt callstack 0
   599  00002B                     ?___fltol:
   600                           	opt callstack 0
   601  00002B                     ___fltol@f1:
   602                           	opt callstack 0
   603  00002B                     ___fladd@b:
   604                           	opt callstack 0
   605                           
   606                           ; 4 bytes @ 0x2A
   607  00002B                     	ds	4
   608  00002F                     ??___fltol:
   609  00002F                     ___fladd@a:
   610                           	opt callstack 0
   611                           
   612                           ; 4 bytes @ 0x2E
   613  00002F                     	ds	2
   614  000031                     utoa@p:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x30
   618  000031                     	ds	2
   619  000033                     ??___fladd:
   620  000033                     ___fltol@sign1:
   621                           	opt callstack 0
   622  000033                     utoa@w:
   623                           	opt callstack 0
   624                           
   625                           ; 2 bytes @ 0x32
   626  000033                     	ds	1
   627  000034                     ___fltol@exp1:
   628                           	opt callstack 0
   629                           
   630                           ; 1 bytes @ 0x33
   631  000034                     	ds	1
   632  000035                     utoa@n:
   633                           	opt callstack 0
   634                           
   635                           ; 8 bytes @ 0x34
   636  000035                     	ds	2
   637  000037                     ___fladd@signs:
   638                           	opt callstack 0
   639                           
   640                           ; 1 bytes @ 0x36
   641  000037                     	ds	1
   642  000038                     ___fladd@aexp:
   643                           	opt callstack 0
   644                           
   645                           ; 1 bytes @ 0x37
   646  000038                     	ds	1
   647  000039                     ___fladd@bexp:
   648                           	opt callstack 0
   649                           
   650                           ; 1 bytes @ 0x38
   651  000039                     	ds	1
   652  00003A                     ___fladd@grs:
   653                           	opt callstack 0
   654                           
   655                           ; 1 bytes @ 0x39
   656  00003A                     	ds	1
   657  00003B                     fijarVelocidad@DC:
   658                           	opt callstack 0
   659                           
   660                           ; 4 bytes @ 0x3A
   661  00003B                     	ds	2
   662  00003D                     utoa@i:
   663                           	opt callstack 0
   664                           
   665                           ; 2 bytes @ 0x3C
   666  00003D                     	ds	2
   667  00003F                     ?_vfpfcnvrt:
   668                           	opt callstack 0
   669  00003F                     vfpfcnvrt@fp:
   670                           	opt callstack 0
   671  00003F                     _fijarVelocidad$1672:
   672                           	opt callstack 0
   673                           
   674                           ; 4 bytes @ 0x3E
   675  00003F                     	ds	2
   676  000041                     vfpfcnvrt@fmt:
   677                           	opt callstack 0
   678                           
   679                           ; 2 bytes @ 0x40
   680  000041                     	ds	2
   681  000043                     fijarVelocidad@speed:
   682                           	opt callstack 0
   683  000043                     vfpfcnvrt@ap:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0x42
   687  000043                     	ds	2
   688  000045                     ??_vfpfcnvrt:
   689                           
   690                           ; 1 bytes @ 0x44
   691  000045                     	ds	4
   692  000049                     vfpfcnvrt@llu:
   693                           	opt callstack 0
   694                           
   695                           ; 8 bytes @ 0x48
   696  000049                     	ds	8
   697  000051                     vfpfcnvrt@c:
   698                           	opt callstack 0
   699                           
   700                           ; 1 bytes @ 0x50
   701  000051                     	ds	1
   702  000052                     vfpfcnvrt@done:
   703                           	opt callstack 0
   704                           
   705                           ; 2 bytes @ 0x51
   706  000052                     	ds	2
   707  000054                     _vfpfcnvrt$933:
   708                           	opt callstack 0
   709                           
   710                           ; 2 bytes @ 0x53
   711  000054                     	ds	2
   712  000056                     vfprintf@cfmt:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x55
   716  000056                     	ds	2
   717  000058                     
   718                           ; 1 bytes @ 0x57
   719 ;;
   720 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   721 ;;
   722 ;; *************** function _main *****************
   723 ;; Defined at:
   724 ;;		line 68 in file "sensores.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;  text_adc       20   55[BANK0 ] unsigned char [20]
   729 ;;  tiempo_anter    1   75[BANK0 ] unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   740 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   741 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   742 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   743 ;;Total ram usage:       23 bytes
   744 ;; Hardware stack levels required when called:   10
   745 ;; This function calls:
   746 ;;		_configuracionInicial
   747 ;;		_enviarRS232
   748 ;;		_logicaEstadoSiguiente
   749 ;;		_sprintf
   750 ;; This function is called by:
   751 ;;		Startup code after reset
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text0
   756  001EE0                     __ptext0:
   757                           	opt callstack 0
   758  001EE0                     _main:
   759                           	opt callstack 21
   760                           
   761                           ;sensores.c: 69:     unsigned char text_adc[20] = {'\0'}, tiempo_anterior_1 = 15;
   762                           
   763                           ;incstack = 0
   764  001EE0  EE20  F0E6         	lfsr	2,main@text_adc
   765  001EE4  0E13               	movlw	19
   766  001EE6                     u3231:
   767  001EE6  6ADE               	clrf	postinc2,c
   768  001EE8  06E8               	decf	wreg,f,c
   769  001EEA  E2FD               	bc	u3231
   770  001EEC  0E0F               	movlw	15
   771  001EEE  0100               	movlb	0	; () banked
   772  001EF0  6FFA               	movwf	main@tiempo_anterior_1& (0+255),b
   773                           
   774                           ; BSR set to: 0
   775                           ;sensores.c: 70:     configuracionInicial();
   776  001EF2  EC37  F013         	call	_configuracionInicial	;wreg free
   777                           
   778                           ;sensores.c: 71:     TXREG = 'H';
   779  001EF6  0E48               	movlw	72
   780  001EF8  6EAE               	movwf	4014,c	;volatile
   781                           
   782                           ;sensores.c: 72:     T5CONbits.TMR5ON = 1;
   783  001EFA  010F               	movlb	15	; () banked
   784  001EFC  8122               	bsf	34,0,b	;volatile
   785  001EFE                     l3498:
   786                           
   787                           ;sensores.c: 74:         if(bandera == 1){
   788  001EFE  0100               	movlb	0	; () banked
   789  001F00  0584               	decf	_bandera& (0+255),w,b
   790  001F02  A4D8               	btfss	status,2,c
   791  001F04  D008               	goto	l3504
   792                           
   793                           ; BSR set to: 0
   794                           ;sensores.c: 75:             bandera = 0;
   795  001F06  0E00               	movlw	0
   796  001F08  6F84               	movwf	_bandera& (0+255),b
   797                           
   798                           ; BSR set to: 0
   799                           ;sensores.c: 76:             logicaEstadoSiguiente(datos);
   800  001F0A  0EA5               	movlw	low _datos
   801  001F0C  6FC7               	movwf	logicaEstadoSiguiente@comand& (0+255),b
   802  001F0E  0E00               	movlw	high _datos
   803  001F10  6FC8               	movwf	(logicaEstadoSiguiente@comand+1)& (0+255),b
   804  001F12  EC82  F00E         	call	_logicaEstadoSiguiente	;wreg free
   805  001F16                     l3504:
   806                           
   807                           ;sensores.c: 78:         if(bandera_adc == 1){
   808  001F16  0100               	movlb	0	; () banked
   809  001F18  057E               	decf	_bandera_adc& (0+255),w,b
   810  001F1A  117F               	iorwf	(_bandera_adc+1)& (0+255),w,b
   811  001F1C  A4D8               	btfss	status,2,c
   812  001F1E  D02C               	goto	l3516
   813                           
   814                           ; BSR set to: 0
   815                           ;sensores.c: 79:             bandera_adc = 0;
   816  001F20  0E00               	movlw	0
   817  001F22  6F7F               	movwf	(_bandera_adc+1)& (0+255),b
   818  001F24  0E00               	movlw	0
   819  001F26  6F7E               	movwf	_bandera_adc& (0+255),b
   820                           
   821                           ; BSR set to: 0
   822                           ;sensores.c: 80:             sprintf(text_adc, "%04u%c", medicion_adc,0x0D);
   823  001F28  0EE6               	movlw	low main@text_adc
   824  001F2A  6FB5               	movwf	sprintf@s& (0+255),b
   825  001F2C  0E00               	movlw	high main@text_adc
   826  001F2E  6FB6               	movwf	(sprintf@s+1)& (0+255),b
   827  001F30  0E09               	movlw	low STR_1
   828  001F32  6FB7               	movwf	sprintf@fmt& (0+255),b
   829  001F34  0E0F               	movlw	high STR_1
   830  001F36  6FB8               	movwf	(sprintf@fmt+1)& (0+255),b
   831  001F38  C080  F0B9         	movff	_medicion_adc,?_sprintf+4
   832  001F3C  C081  F0BA         	movff	_medicion_adc+1,?_sprintf+5
   833  001F40  0E00               	movlw	0
   834  001F42  6FBC               	movwf	(?_sprintf+7)& (0+255),b
   835  001F44  0E0D               	movlw	13
   836  001F46  6FBB               	movwf	(?_sprintf+6)& (0+255),b
   837  001F48  ECF2  F011         	call	_sprintf	;wreg free
   838                           
   839                           ;sensores.c: 81:             enviarRS232(text_adc, 4);
   840  001F4C  0EE6               	movlw	low main@text_adc
   841  001F4E  6E04               	movwf	enviarRS232@valores,c
   842  001F50  0E00               	movlw	high main@text_adc
   843  001F52  6E05               	movwf	enviarRS232@valores+1,c
   844  001F54  0E04               	movlw	4
   845  001F56  6E06               	movwf	enviarRS232@numero_valores,c
   846  001F58  ECD3  F012         	call	_enviarRS232	;wreg free
   847                           
   848                           ;sensores.c: 82:             _delay((unsigned long)((500)*(48000000/4000.0)));
   849  001F5C  0E1F               	movlw	31
   850  001F5E  0100               	movlb	0	; () banked
   851  001F60  6FE5               	movwf	(??_main+1)& (0+255),b
   852  001F62  0E71               	movlw	113
   853  001F64  6FE4               	movwf	??_main& (0+255),b
   854  001F66  0E1E               	movlw	30
   855  001F68                     u3287:
   856  001F68  2EE8               	decfsz	wreg,f,c
   857  001F6A  D7FE               	bra	u3287
   858  001F6C  2FE4               	decfsz	??_main& (0+255),f,b
   859  001F6E  D7FC               	bra	u3287
   860  001F70  2FE5               	decfsz	(??_main+1)& (0+255),f,b
   861  001F72  D7FA               	bra	u3287
   862  001F74  F000               	nop	
   863                           
   864                           ;sensores.c: 83:             ADCON0bits.GO_DONE = 1;
   865  001F76  82C2               	bsf	4034,1,c	;volatile
   866  001F78                     l3516:
   867                           
   868                           ;sensores.c: 85:         if(bandera_servo == 1){
   869  001F78  0100               	movlb	0	; () banked
   870  001F7A  057A               	decf	_bandera_servo& (0+255),w,b
   871  001F7C  117B               	iorwf	(_bandera_servo+1)& (0+255),w,b
   872  001F7E  A4D8               	btfss	status,2,c
   873  001F80  D7BE               	goto	l3498
   874                           
   875                           ; BSR set to: 0
   876                           ;sensores.c: 86:             bandera_servo = 0;
   877  001F82  0E00               	movlw	0
   878  001F84  6F7B               	movwf	(_bandera_servo+1)& (0+255),b
   879  001F86  0E00               	movlw	0
   880  001F88  6F7A               	movwf	_bandera_servo& (0+255),b
   881                           
   882                           ; BSR set to: 0
   883                           ;sensores.c: 87:             if(PORTDbits.RD4 == 1){
   884  001F8A  A883               	btfss	3971,4,c	;volatile
   885  001F8C  D00C               	goto	l160
   886                           
   887                           ; BSR set to: 0
   888                           ;sensores.c: 88:                 PORTDbits.RD4 = 0;
   889  001F8E  9883               	bcf	3971,4,c	;volatile
   890                           
   891                           ;sensores.c: 89:                 tiempo_anterior_1 = TIME_MAX;
   892  001F90  C0FB  F0FA         	movff	_TIME_MAX,main@tiempo_anterior_1
   893                           
   894                           ; BSR set to: 0
   895                           ;sensores.c: 90:                 TIME_MAX = 200 - tiempo_anterior_1;
   896  001F94  51FA               	movf	main@tiempo_anterior_1& (0+255),w,b
   897  001F96  08C8               	sublw	200
   898  001F98  6FFB               	movwf	_TIME_MAX& (0+255),b
   899  001F9A  0E00               	movlw	0
   900  001F9C  A0D8               	btfss	status,0,c
   901  001F9E  2AE8               	incf	wreg,f,c
   902  001FA0  0800               	sublw	0
   903  001FA2  6FFC               	movwf	(_TIME_MAX+1)& (0+255),b
   904                           
   905                           ;sensores.c: 91:             }
   906  001FA4  D7AC               	goto	l3498
   907  001FA6                     l160:
   908                           
   909                           ; BSR set to: 0
   910                           ;sensores.c: 93:                 PORTDbits.RD4 = 1;
   911  001FA6  8883               	bsf	3971,4,c	;volatile
   912                           
   913                           ;sensores.c: 94:                 TIME_MAX = tiempo_anterior_1;
   914  001FA8  C0FA  F0FB         	movff	main@tiempo_anterior_1,_TIME_MAX
   915  001FAC  6BFC               	clrf	(_TIME_MAX+1)& (0+255),b
   916  001FAE  D7A7               	goto	l3498
   917  001FB0                     __end_of_main:
   918                           	opt callstack 0
   919                           
   920 ;; *************** function _logicaEstadoSiguiente *****************
   921 ;; Defined at:
   922 ;;		line 121 in file "sensores.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  comand          2   24[BANK0 ] PTR unsigned char 
   925 ;;		 -> datos(10), 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  texto          20   31[BANK0 ] unsigned char [20]
   928 ;;  medicion        2   51[BANK0 ] unsigned int 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   938 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   940 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   941 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   942 ;;Total ram usage:       29 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    9
   945 ;; This function calls:
   946 ;;		_dirreccion
   947 ;;		_encenderMotor
   948 ;;		_enviarRS232
   949 ;;		_fijarVelocidad
   950 ;;		_sprintf
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text1
   957  001D04                     __ptext1:
   958                           	opt callstack 0
   959  001D04                     _logicaEstadoSiguiente:
   960                           	opt callstack 21
   961                           
   962                           ;sensores.c: 123:     unsigned char texto[20] = {'\0'};
   963                           
   964                           ; BSR set to: 0
   965                           ;incstack = 0
   966  001D04  EE20  F0CE         	lfsr	2,logicaEstadoSiguiente@texto
   967  001D08  0E13               	movlw	19
   968  001D0A                     u3221:
   969  001D0A  6ADE               	clrf	postinc2,c
   970  001D0C  06E8               	decf	wreg,f,c
   971  001D0E  E2FD               	bc	u3221
   972                           
   973                           ;sensores.c: 124:     switch (comand[0]){
   974  001D10  D057               	goto	l3482
   975  001D12                     l3458:
   976                           
   977                           ; BSR set to: 0
   978                           ;sensores.c: 126:             fijarVelocidad(0);
   979  001D12  0E00               	movlw	0
   980  001D14  EC00  F00F         	call	_fijarVelocidad
   981  001D18                     l3460:
   982                           
   983                           ;sensores.c: 127:             encenderMotor();
   984  001D18  ECA1  F012         	call	_encenderMotor	;wreg free
   985                           
   986                           ;sensores.c: 128:             break;
   987  001D1C  0012               	return	
   988  001D1E                     l3462:
   989                           
   990                           ; BSR set to: 0
   991                           ;sensores.c: 130:             fijarVelocidad(50);
   992  001D1E  0E32               	movlw	50
   993  001D20  EC00  F00F         	call	_fijarVelocidad
   994  001D24  D7F9               	goto	l3460
   995  001D26                     l3466:
   996                           
   997                           ; BSR set to: 0
   998                           ;sensores.c: 134:             dirreccion(180);
   999  001D26  0EB4               	movlw	180
  1000  001D28  EC90  F011         	call	_dirreccion
  1001                           
  1002                           ;sensores.c: 135:             break;
  1003  001D2C  0012               	return	
  1004  001D2E                     l3468:
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;sensores.c: 137:             dirreccion(0);
  1008  001D2E  0E00               	movlw	0
  1009  001D30  EC90  F011         	call	_dirreccion
  1010                           
  1011                           ;sensores.c: 138:             break;
  1012  001D34  0012               	return	
  1013  001D36                     l3470:
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;sensores.c: 140:             sprintf(texto, "STOP ++");
  1017  001D36  0ECE               	movlw	low logicaEstadoSiguiente@texto
  1018  001D38  6FB5               	movwf	sprintf@s& (0+255),b
  1019  001D3A  0E00               	movlw	high logicaEstadoSiguiente@texto
  1020  001D3C  6FB6               	movwf	(sprintf@s+1)& (0+255),b
  1021  001D3E  0E01               	movlw	low STR_2
  1022  001D40  6FB7               	movwf	sprintf@fmt& (0+255),b
  1023  001D42  0E0F               	movlw	high STR_2
  1024  001D44  6FB8               	movwf	(sprintf@fmt+1)& (0+255),b
  1025  001D46  ECF2  F011         	call	_sprintf	;wreg free
  1026                           
  1027                           ;sensores.c: 141:             enviarRS232(texto, 7);
  1028  001D4A  0ECE               	movlw	low logicaEstadoSiguiente@texto
  1029  001D4C  6E04               	movwf	enviarRS232@valores,c
  1030  001D4E  0E00               	movlw	high logicaEstadoSiguiente@texto
  1031  001D50  6E05               	movwf	enviarRS232@valores+1,c
  1032  001D52  0E07               	movlw	7
  1033  001D54  6E06               	movwf	enviarRS232@numero_valores,c
  1034  001D56  ECD3  F012         	call	_enviarRS232	;wreg free
  1035                           
  1036                           ;sensores.c: 142:             break;
  1037  001D5A  0012               	return	
  1038  001D5C                     l3474:
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;sensores.c: 144:             medicion = (comand[1] - 0x30)*100 + (comand[2] - 0x30)*10 
      +                          + comand[3] - 0x30;
  1042  001D5C  EE20 F001          	lfsr	2,1
  1043  001D60  51C7               	movf	logicaEstadoSiguiente@comand& (0+255),w,b
  1044  001D62  26D9               	addwf	fsr2l,f,c
  1045  001D64  51C8               	movf	(logicaEstadoSiguiente@comand+1)& (0+255),w,b
  1046  001D66  22DA               	addwfc	fsr2h,f,c
  1047  001D68  50DF               	movf	indf2,w,c
  1048  001D6A  6FC9               	movwf	??_logicaEstadoSiguiente& (0+255),b
  1049  001D6C  51C9               	movf	??_logicaEstadoSiguiente& (0+255),w,b
  1050  001D6E  0D64               	mullw	100
  1051  001D70  CFF3 F0CA          	movff	prodl,??_logicaEstadoSiguiente+1
  1052  001D74  CFF4 F0CB          	movff	prodh,??_logicaEstadoSiguiente+2
  1053  001D78  EE20 F002          	lfsr	2,2
  1054  001D7C  51C7               	movf	logicaEstadoSiguiente@comand& (0+255),w,b
  1055  001D7E  26D9               	addwf	fsr2l,f,c
  1056  001D80  51C8               	movf	(logicaEstadoSiguiente@comand+1)& (0+255),w,b
  1057  001D82  22DA               	addwfc	fsr2h,f,c
  1058  001D84  50DF               	movf	indf2,w,c
  1059  001D86  6FCC               	movwf	(??_logicaEstadoSiguiente+3)& (0+255),b
  1060  001D88  51CC               	movf	(??_logicaEstadoSiguiente+3)& (0+255),w,b
  1061  001D8A  0D0A               	mullw	10
  1062  001D8C  50F3               	movf	prodl,w,c
  1063  001D8E  27CA               	addwf	(??_logicaEstadoSiguiente+1)& (0+255),f,b
  1064  001D90  50F4               	movf	prodh,w,c
  1065  001D92  23CB               	addwfc	(??_logicaEstadoSiguiente+2)& (0+255),f,b
  1066  001D94  EE20 F003          	lfsr	2,3
  1067  001D98  51C7               	movf	logicaEstadoSiguiente@comand& (0+255),w,b
  1068  001D9A  26D9               	addwf	fsr2l,f,c
  1069  001D9C  51C8               	movf	(logicaEstadoSiguiente@comand+1)& (0+255),w,b
  1070  001D9E  22DA               	addwfc	fsr2h,f,c
  1071  001DA0  50DF               	movf	indf2,w,c
  1072  001DA2  6FCD               	movwf	(??_logicaEstadoSiguiente+4)& (0+255),b
  1073  001DA4  51CD               	movf	(??_logicaEstadoSiguiente+4)& (0+255),w,b
  1074  001DA6  27CA               	addwf	(??_logicaEstadoSiguiente+1)& (0+255),f,b
  1075  001DA8  0E00               	movlw	0
  1076  001DAA  23CB               	addwfc	(??_logicaEstadoSiguiente+2)& (0+255),f,b
  1077  001DAC  0E30               	movlw	48
  1078  001DAE  25CA               	addwf	(??_logicaEstadoSiguiente+1)& (0+255),w,b
  1079  001DB0  6FE2               	movwf	logicaEstadoSiguiente@medicion& (0+255),b
  1080  001DB2  0EEB               	movlw	235
  1081  001DB4  21CB               	addwfc	(??_logicaEstadoSiguiente+2)& (0+255),w,b
  1082  001DB6  6FE3               	movwf	(logicaEstadoSiguiente@medicion+1)& (0+255),b
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;sensores.c: 145:             fijarVelocidad(medicion);
  1086  001DB8  51E2               	movf	logicaEstadoSiguiente@medicion& (0+255),w,b
  1087  001DBA  EC00  F00F         	call	_fijarVelocidad
  1088  001DBE  D7AC               	goto	l3460
  1089  001DC0                     l3482:
  1090  001DC0  C0C7  FFD9         	movff	logicaEstadoSiguiente@comand,fsr2l
  1091  001DC4  C0C8  FFDA         	movff	logicaEstadoSiguiente@comand+1,fsr2h
  1092  001DC8  50DF               	movf	indf2,w,c
  1093  001DCA  0100               	movlb	0	; () banked
  1094  001DCC  6FC9               	movwf	??_logicaEstadoSiguiente& (0+255),b
  1095  001DCE  6BCA               	clrf	(??_logicaEstadoSiguiente+1)& (0+255),b
  1096                           
  1097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1098                           ; Switch size 1, requested type "simple"
  1099                           ; Number of cases is 1, Range of values is 0 to 0
  1100                           ; switch strategies available:
  1101                           ; Name         Instructions Cycles
  1102                           ; simple_byte            4     3 (average)
  1103                           ;	Chosen strategy is simple_byte
  1104  001DD0  51CA               	movf	(??_logicaEstadoSiguiente+1)& (0+255),w,b
  1105  001DD2  0A00               	xorlw	0	; case 0
  1106  001DD4  A4D8               	btfss	status,2,c
  1107  001DD6  0012               	return	
  1108                           
  1109                           ; BSR set to: 0
  1110                           ; Switch size 1, requested type "simple"
  1111                           ; Number of cases is 6, Range of values is 70 to 119
  1112                           ; switch strategies available:
  1113                           ; Name         Instructions Cycles
  1114                           ; simple_byte           19    10 (average)
  1115                           ;	Chosen strategy is simple_byte
  1116  001DD8  51C9               	movf	??_logicaEstadoSiguiente& (0+255),w,b
  1117  001DDA  0A46               	xorlw	70	; case 70
  1118  001DDC  B4D8               	btfsc	status,2,c
  1119  001DDE  D7BE               	goto	l3474
  1120  001DE0  0A27               	xorlw	39	; case 97
  1121  001DE2  B4D8               	btfsc	status,2,c
  1122  001DE4  D7A0               	goto	l3466
  1123  001DE6  0A02               	xorlw	2	; case 99
  1124  001DE8  B4D8               	btfsc	status,2,c
  1125  001DEA  D7A5               	goto	l3470
  1126  001DEC  0A07               	xorlw	7	; case 100
  1127  001DEE  B4D8               	btfsc	status,2,c
  1128  001DF0  D79E               	goto	l3468
  1129  001DF2  0A17               	xorlw	23	; case 115
  1130  001DF4  B4D8               	btfsc	status,2,c
  1131  001DF6  D793               	goto	l3462
  1132  001DF8  0A04               	xorlw	4	; case 119
  1133  001DFA  A4D8               	btfss	status,2,c
  1134  001DFC  0012               	return	
  1135  001DFE  D789               	goto	l3458
  1136  001E00                     __end_of_logicaEstadoSiguiente:
  1137                           	opt callstack 0
  1138                           
  1139 ;; *************** function _sprintf *****************
  1140 ;; Defined at:
  1141 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  s               2    6[BANK0 ] PTR unsigned char 
  1144 ;;		 -> logicaEstadoSiguiente@texto(20), main@text_adc(20), 
  1145 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  1146 ;;		 -> STR_2(8), STR_1(7), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  f               6   18[BANK0 ] struct _IO_FILE
  1149 ;;  ap              2   16[BANK0 ] PTR void [1]
  1150 ;;		 -> ?_sprintf(2), 
  1151 ;;  ret             2    0        int 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  2    6[BANK0 ] int 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1161 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1162 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1164 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1165 ;;Total ram usage:       18 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    8
  1168 ;; This function calls:
  1169 ;;		_vfprintf
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;;		_logicaEstadoSiguiente
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text2
  1177  0023E4                     __ptext2:
  1178                           	opt callstack 0
  1179  0023E4                     _sprintf:
  1180                           	opt callstack 22
  1181                           
  1182                           ;incstack = 0
  1183  0023E4  0EB9               	movlw	low (?_sprintf+4)
  1184  0023E6  0100               	movlb	0	; () banked
  1185  0023E8  6FBF               	movwf	sprintf@ap& (0+255),b
  1186  0023EA  0E00               	movlw	high (?_sprintf+4)
  1187  0023EC  6FC0               	movwf	(sprintf@ap+1)& (0+255),b
  1188  0023EE  C0B5  F0C1         	movff	sprintf@s,sprintf@f
  1189  0023F2  C0B6  F0C2         	movff	sprintf@s+1,sprintf@f+1
  1190                           
  1191                           ; BSR set to: 0
  1192  0023F6  0E00               	movlw	0
  1193  0023F8  6FC4               	movwf	(sprintf@f+3)& (0+255),b
  1194  0023FA  0E00               	movlw	0
  1195  0023FC  6FC3               	movwf	(sprintf@f+2)& (0+255),b
  1196                           
  1197                           ; BSR set to: 0
  1198  0023FE  0E00               	movlw	0
  1199  002400  6FC6               	movwf	(sprintf@f+5)& (0+255),b
  1200  002402  0E00               	movlw	0
  1201  002404  6FC5               	movwf	(sprintf@f+4)& (0+255),b
  1202                           
  1203                           ; BSR set to: 0
  1204  002406  0EC1               	movlw	low sprintf@f
  1205  002408  6FAF               	movwf	vfprintf@fp& (0+255),b
  1206  00240A  0E00               	movlw	high sprintf@f
  1207  00240C  6FB0               	movwf	(vfprintf@fp+1)& (0+255),b
  1208  00240E  C0B7  F0B1         	movff	sprintf@fmt,vfprintf@fmt
  1209  002412  C0B8  F0B2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1210  002416  0EBF               	movlw	low sprintf@ap
  1211  002418  6FB3               	movwf	vfprintf@ap& (0+255),b
  1212  00241A  0E00               	movlw	high sprintf@ap
  1213  00241C  6FB4               	movwf	(vfprintf@ap+1)& (0+255),b
  1214  00241E  ECC5  F011         	call	_vfprintf	;wreg free
  1215  002422  0100               	movlb	0	; () banked
  1216  002424  51C3               	movf	(sprintf@f+2)& (0+255),w,b
  1217  002426  25B5               	addwf	sprintf@s& (0+255),w,b
  1218  002428  6ED9               	movwf	fsr2l,c
  1219  00242A  51C4               	movf	(sprintf@f+3)& (0+255),w,b
  1220  00242C  21B6               	addwfc	(sprintf@s+1)& (0+255),w,b
  1221  00242E  6EDA               	movwf	fsr2h,c
  1222  002430  0E00               	movlw	0
  1223  002432  6EDF               	movwf	indf2,c
  1224                           
  1225                           ; BSR set to: 0
  1226  002434  0012               	return		;funcret
  1227  002436                     __end_of_sprintf:
  1228                           	opt callstack 0
  1229                           
  1230 ;; *************** function _vfprintf *****************
  1231 ;; Defined at:
  1232 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1235 ;;		 -> sprintf@f(6), 
  1236 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1237 ;;		 -> STR_2(8), STR_1(7), 
  1238 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1239 ;;		 -> sprintf@ap(2), 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1242 ;;		 -> STR_2(8), STR_1(7), 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  2    0[BANK0 ] int 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1252 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1253 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1255 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1256 ;;Total ram usage:        8 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    7
  1259 ;; This function calls:
  1260 ;;		_vfpfcnvrt
  1261 ;; This function is called by:
  1262 ;;		_sprintf
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text3
  1267  00238A                     __ptext3:
  1268                           	opt callstack 0
  1269  00238A                     _vfprintf:
  1270                           	opt callstack 22
  1271                           
  1272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;incstack = 0
  1276  00238A  C0B1  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1277  00238E  C0B2  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1278                           
  1279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1280  002392  0E00               	movlw	0
  1281  002394  0100               	movlb	0	; () banked
  1282  002396  6F75               	movwf	(_nout+1)& (0+255),b
  1283  002398  0E00               	movlw	0
  1284  00239A  6F74               	movwf	_nout& (0+255),b
  1285                           
  1286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1287  00239C  D013               	goto	l3440
  1288  00239E                     l3438:
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1292  00239E  C0AF  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1293  0023A2  C0B0  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1294  0023A6  0E56               	movlw	low vfprintf@cfmt
  1295  0023A8  6E41               	movwf	vfpfcnvrt@fmt,c
  1296  0023AA  0E00               	movlw	high vfprintf@cfmt
  1297  0023AC  6E42               	movwf	vfpfcnvrt@fmt+1,c
  1298  0023AE  C0B3  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1299  0023B2  C0B4  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1300  0023B6  EC32  F009         	call	_vfpfcnvrt	;wreg free
  1301  0023BA  503F               	movf	?_vfpfcnvrt,w,c
  1302  0023BC  0100               	movlb	0	; () banked
  1303  0023BE  2774               	addwf	_nout& (0+255),f,b
  1304  0023C0  5040               	movf	?_vfpfcnvrt+1,w,c
  1305  0023C2  2375               	addwfc	(_nout+1)& (0+255),f,b
  1306  0023C4                     l3440:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1310  0023C4  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1311  0023C8  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1312  0023CC                     	if	0	;tblptru may be non-zero
  1313  0023CC                     	endif
  1314  0023CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1315  0023CC  0E00               	movlw	low (__mediumconst shr (0+16))
  1316  0023CE  6EF8               	movwf	tblptru,c
  1317  0023D0                     	endif
  1318  0023D0  0008               	tblrd		*
  1319  0023D2  50F5               	movf	tablat,w,c
  1320  0023D4  0900               	iorlw	0
  1321  0023D6  A4D8               	btfss	status,2,c
  1322  0023D8  D7E2               	goto	l3438
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1326  0023DA  C074  F0AF         	movff	_nout,?_vfprintf
  1327  0023DE  C075  F0B0         	movff	_nout+1,?_vfprintf+1
  1328                           
  1329                           ; BSR set to: 0
  1330  0023E2  0012               	return		;funcret
  1331  0023E4                     __end_of_vfprintf:
  1332                           	opt callstack 0
  1333                           
  1334 ;; *************** function _vfpfcnvrt *****************
  1335 ;; Defined at:
  1336 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1339 ;;		 -> sprintf@f(6), 
  1340 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1341 ;;		 -> vfprintf@cfmt(2), 
  1342 ;;  ap              2   66[COMRAM] PTR PTR void 
  1343 ;;		 -> sprintf@ap(2), 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  llu             8   72[COMRAM] unsigned long long 
  1346 ;;  ll              8    0        long long 
  1347 ;;  f               4    0        long long 
  1348 ;;  vp              3    0        PTR void 
  1349 ;;  ct              3    0        unsigned char [3]
  1350 ;;  cp              3    0        PTR unsigned char 
  1351 ;;  done            2   81[COMRAM] int 
  1352 ;;  i               2    0        int 
  1353 ;;  c               1   80[COMRAM] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  2   62[COMRAM] int 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1363 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1364 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1365 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1366 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;Total ram usage:       23 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    6
  1370 ;; This function calls:
  1371 ;;		_atoi
  1372 ;;		_ctoa
  1373 ;;		_fputc
  1374 ;;		_isdigit
  1375 ;;		_utoa
  1376 ;; This function is called by:
  1377 ;;		_vfprintf
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text4
  1382  001264                     __ptext4:
  1383                           	opt callstack 0
  1384  001264                     _vfpfcnvrt:
  1385                           	opt callstack 22
  1386                           
  1387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;incstack = 0
  1391  001264  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1392  001268  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1393  00126C  CFDE FFF6          	movff	postinc2,tblptrl
  1394  001270  CFDD FFF7          	movff	postdec2,tblptrh
  1395  001274                     	if	0	;tblptru may be non-zero
  1396  001274                     	endif
  1397  001274                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1398  001274  0E00               	movlw	low (__mediumconst shr (0+16))
  1399  001276  6EF8               	movwf	tblptru,c
  1400  001278                     	endif
  1401  001278  0008               	tblrd		*
  1402  00127A  50F5               	movf	tablat,w,c
  1403  00127C  0A25               	xorlw	37
  1404  00127E  A4D8               	btfss	status,2,c
  1405  001280  D17D               	goto	l3420
  1406                           
  1407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1408  001282  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1409  001286  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1410  00128A  2ADE               	incf	postinc2,f,c
  1411  00128C  0E00               	movlw	0
  1412  00128E  22DD               	addwfc	postdec2,f,c
  1413                           
  1414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1415  001290  0E00               	movlw	0
  1416  001292  6E59               	movwf	_width+1,c
  1417  001294  0E00               	movlw	0
  1418  001296  6E58               	movwf	_width,c
  1419  001298  C058  F078         	movff	_width,_flags
  1420  00129C  C059  F079         	movff	_width+1,_flags+1
  1421                           
  1422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1423  0012A0  0100               	movlb	0	; () banked
  1424  0012A2  6976               	setf	_prec& (0+255),b
  1425  0012A4  6977               	setf	(_prec+1)& (0+255),b
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1429  0012A6  0E00               	movlw	0
  1430  0012A8  6E53               	movwf	vfpfcnvrt@done+1,c
  1431  0012AA  0E00               	movlw	0
  1432  0012AC  D019               	goto	L1
  1433  0012AE                     l3340:
  1434                           
  1435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1436  0012AE  0100               	movlb	0	; () banked
  1437  0012B0  8178               	bsf	_flags& (0+255),0,b
  1438  0012B2                     l3342:
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1442  0012B2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1443  0012B6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1444  0012BA  2ADE               	incf	postinc2,f,c
  1445  0012BC  0E00               	movlw	0
  1446  0012BE  22DD               	addwfc	postdec2,f,c
  1447                           
  1448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1449  0012C0  D034               	goto	l3366
  1450  0012C2                     l3344:
  1451                           
  1452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1453  0012C2  0100               	movlb	0	; () banked
  1454  0012C4  8378               	bsf	_flags& (0+255),1,b
  1455  0012C6  D7F5               	goto	l3342
  1456  0012C8                     l3348:
  1457                           
  1458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1459  0012C8  0100               	movlb	0	; () banked
  1460  0012CA  8578               	bsf	_flags& (0+255),2,b
  1461  0012CC  D7F2               	goto	l3342
  1462  0012CE                     l3352:
  1463                           
  1464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1465  0012CE  0100               	movlb	0	; () banked
  1466  0012D0  8778               	bsf	_flags& (0+255),3,b
  1467  0012D2  D7EF               	goto	l3342
  1468  0012D4                     l3356:
  1469                           
  1470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1471  0012D4  0100               	movlb	0	; () banked
  1472  0012D6  8978               	bsf	_flags& (0+255),4,b
  1473  0012D8  D7EC               	goto	l3342
  1474  0012DA                     l3360:
  1475                           
  1476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1477  0012DA  0E00               	movlw	0
  1478  0012DC  6E53               	movwf	vfpfcnvrt@done+1,c
  1479  0012DE  0E01               	movlw	1
  1480  0012E0                     L1:
  1481  0012E0  6E52               	movwf	vfpfcnvrt@done,c
  1482                           
  1483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1484  0012E2  D023               	goto	l3366
  1485  0012E4                     l3364:
  1486  0012E4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1487  0012E8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1488  0012EC  CFDE FFF6          	movff	postinc2,tblptrl
  1489  0012F0  CFDD FFF7          	movff	postdec2,tblptrh
  1490  0012F4                     	if	0	;tblptru may be non-zero
  1491  0012F4                     	endif
  1492  0012F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1493  0012F4  0E00               	movlw	low (__mediumconst shr (0+16))
  1494  0012F6  6EF8               	movwf	tblptru,c
  1495  0012F8                     	endif
  1496  0012F8  0008               	tblrd		*
  1497  0012FA  50F5               	movf	tablat,w,c
  1498  0012FC  6E45               	movwf	??_vfpfcnvrt& (0+255),c
  1499  0012FE  6A46               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1500                           
  1501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1502                           ; Switch size 1, requested type "simple"
  1503                           ; Number of cases is 1, Range of values is 0 to 0
  1504                           ; switch strategies available:
  1505                           ; Name         Instructions Cycles
  1506                           ; simple_byte            4     3 (average)
  1507                           ;	Chosen strategy is simple_byte
  1508  001300  5046               	movf	??_vfpfcnvrt+1,w,c
  1509  001302  0A00               	xorlw	0	; case 0
  1510  001304  A4D8               	btfss	status,2,c
  1511  001306  D7E9               	goto	l3360
  1512                           
  1513                           ; Switch size 1, requested type "simple"
  1514                           ; Number of cases is 5, Range of values is 32 to 48
  1515                           ; switch strategies available:
  1516                           ; Name         Instructions Cycles
  1517                           ; simple_byte           16     9 (average)
  1518                           ;	Chosen strategy is simple_byte
  1519  001308  5045               	movf	??_vfpfcnvrt,w,c
  1520  00130A  0A20               	xorlw	32	; case 32
  1521  00130C  B4D8               	btfsc	status,2,c
  1522  00130E  D7DF               	goto	l3352
  1523  001310  0A03               	xorlw	3	; case 35
  1524  001312  B4D8               	btfsc	status,2,c
  1525  001314  D7DF               	goto	l3356
  1526  001316  0A08               	xorlw	8	; case 43
  1527  001318  B4D8               	btfsc	status,2,c
  1528  00131A  D7D6               	goto	l3348
  1529  00131C  0A06               	xorlw	6	; case 45
  1530  00131E  B4D8               	btfsc	status,2,c
  1531  001320  D7C6               	goto	l3340
  1532  001322  0A1D               	xorlw	29	; case 48
  1533  001324  B4D8               	btfsc	status,2,c
  1534  001326  D7CD               	goto	l3344
  1535  001328  D7D8               	goto	l3360
  1536  00132A                     l3366:
  1537                           
  1538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1539  00132A  5052               	movf	vfpfcnvrt@done,w,c
  1540  00132C  1053               	iorwf	vfpfcnvrt@done+1,w,c
  1541  00132E  B4D8               	btfsc	status,2,c
  1542  001330  D7D9               	goto	l3364
  1543                           
  1544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1545  001332  0100               	movlb	0	; () banked
  1546  001334  B178               	btfsc	_flags& (0+255),0,b
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1550  001336  9378               	bcf	_flags& (0+255),1,b
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1554  001338  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1555  00133C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1556  001340  CFDE FFF6          	movff	postinc2,tblptrl
  1557  001344  CFDD FFF7          	movff	postdec2,tblptrh
  1558  001348                     	if	0	;tblptru may be non-zero
  1559  001348                     	endif
  1560  001348                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1561  001348  0E00               	movlw	low (__mediumconst shr (0+16))
  1562  00134A  6EF8               	movwf	tblptru,c
  1563  00134C                     	endif
  1564  00134C  0008               	tblrd		*
  1565  00134E  50F5               	movf	tablat,w,c
  1566  001350  0A2A               	xorlw	42
  1567  001352  A4D8               	btfss	status,2,c
  1568  001354  D023               	goto	l3378
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1572  001356  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1573  00135A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1574  00135E  2ADE               	incf	postinc2,f,c
  1575  001360  0E00               	movlw	0
  1576  001362  22DD               	addwfc	postdec2,f,c
  1577                           
  1578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1579  001364  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1580  001368  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1581  00136C  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1582  001370  0E02               	movlw	2
  1583  001372  26DE               	addwf	postinc2,f,c
  1584  001374  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1585  001378  0E00               	movlw	0
  1586  00137A  22DD               	addwfc	postdec2,f,c
  1587  00137C  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1588  001380  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1589  001384  CFDE F058          	movff	postinc2,_width
  1590  001388  CFDD F059          	movff	postdec2,_width+1
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1594  00138C  AE59               	btfss	_width+1,7,c
  1595  00138E  D041               	goto	u3170
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1599  001390  8178               	bsf	_flags& (0+255),0,b
  1600                           
  1601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1602  001392  6C58               	negf	_width,c
  1603  001394  1E59               	comf	_width+1,f,c
  1604  001396  B0D8               	btfsc	status,0,c
  1605  001398  2A59               	incf	_width+1,f,c
  1606  00139A  D03B               	goto	u3170
  1607  00139C                     l3378:
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1611  00139C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1612  0013A0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1613  0013A4  CFDE F00B          	movff	postinc2,atoi@s
  1614  0013A8  CFDD F00C          	movff	postdec2,atoi@s+1
  1615  0013AC  EC38  F00D         	call	_atoi	;wreg free
  1616  0013B0  C00B  F058         	movff	?_atoi,_width
  1617  0013B4  C00C  F059         	movff	?_atoi+1,_width+1
  1618                           
  1619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1620  0013B8  D007               	goto	l3382
  1621  0013BA                     l3380:
  1622                           
  1623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1624  0013BA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1625  0013BE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1626  0013C2  2ADE               	incf	postinc2,f,c
  1627  0013C4  0E00               	movlw	0
  1628  0013C6  22DD               	addwfc	postdec2,f,c
  1629  0013C8                     l3382:
  1630  0013C8  0ED0               	movlw	208
  1631  0013CA  6E45               	movwf	??_vfpfcnvrt& (0+255),c
  1632  0013CC  0EFF               	movlw	255
  1633  0013CE  6E46               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1634  0013D0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1635  0013D4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1636  0013D8  CFDE FFF6          	movff	postinc2,tblptrl
  1637  0013DC  CFDD FFF7          	movff	postdec2,tblptrh
  1638  0013E0                     	if	0	;tblptru may be non-zero
  1639  0013E0                     	endif
  1640  0013E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1641  0013E0  0E00               	movlw	low (__mediumconst shr (0+16))
  1642  0013E2  6EF8               	movwf	tblptru,c
  1643  0013E4                     	endif
  1644  0013E4  0008               	tblrd		*
  1645  0013E6  50F5               	movf	tablat,w,c
  1646  0013E8  6E47               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1647  0013EA  6A48               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1648  0013EC  5045               	movf	??_vfpfcnvrt,w,c
  1649  0013EE  2647               	addwf	??_vfpfcnvrt+2,f,c
  1650  0013F0  5046               	movf	??_vfpfcnvrt+1,w,c
  1651  0013F2  2248               	addwfc	??_vfpfcnvrt+3,f,c
  1652  0013F4  5048               	movf	??_vfpfcnvrt+3,w,c
  1653  0013F6  E106               	bnz	u3150
  1654  0013F8  0E0A               	movlw	10
  1655  0013FA  5C47               	subwf	??_vfpfcnvrt+2,w,c
  1656  0013FC  B0D8               	btfsc	status,0,c
  1657  0013FE  D002               	goto	u3150
  1658  001400  0E01               	movlw	1
  1659  001402  D001               	goto	u3160
  1660  001404                     u3150:
  1661  001404  0E00               	movlw	0
  1662  001406                     u3160:
  1663  001406  6E54               	movwf	_vfpfcnvrt$933,c
  1664  001408  6A55               	clrf	_vfpfcnvrt$933+1,c
  1665  00140A  5054               	movf	_vfpfcnvrt$933,w,c
  1666  00140C  1055               	iorwf	_vfpfcnvrt$933+1,w,c
  1667  00140E  A4D8               	btfss	status,2,c
  1668  001410  D7D4               	goto	l3380
  1669  001412                     u3170:
  1670                           
  1671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  1672  001412  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1673  001416  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1674  00141A  CFDE FFF6          	movff	postinc2,tblptrl
  1675  00141E  CFDD FFF7          	movff	postdec2,tblptrh
  1676  001422                     	if	0	;tblptru may be non-zero
  1677  001422                     	endif
  1678  001422                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1679  001422  0E00               	movlw	low (__mediumconst shr (0+16))
  1680  001424  6EF8               	movwf	tblptru,c
  1681  001426                     	endif
  1682  001426  0008               	tblrd		*
  1683  001428  50F5               	movf	tablat,w,c
  1684  00142A  0A63               	xorlw	99
  1685  00142C  A4D8               	btfss	status,2,c
  1686  00142E  D026               	goto	l3396
  1687                           
  1688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  1689  001430  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1690  001434  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1691  001438  2ADE               	incf	postinc2,f,c
  1692  00143A  0E00               	movlw	0
  1693  00143C  22DD               	addwfc	postdec2,f,c
  1694                           
  1695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1696  00143E  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1697  001442  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1698  001446  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1699  00144A  0E02               	movlw	2
  1700  00144C  26DE               	addwf	postinc2,f,c
  1701  00144E  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1702  001452  0E00               	movlw	0
  1703  001454  22DD               	addwfc	postdec2,f,c
  1704  001456  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1705  00145A  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1706  00145E  50DF               	movf	indf2,w,c
  1707  001460  6E51               	movwf	vfpfcnvrt@c,c
  1708                           
  1709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  1710  001462  C03F  F01F         	movff	vfpfcnvrt@fp,ctoa@fp
  1711  001466  C040  F020         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1712  00146A  C051  F021         	movff	vfpfcnvrt@c,ctoa@c
  1713  00146E  EC1B  F012         	call	_ctoa	;wreg free
  1714  001472  C01F  F03F         	movff	?_ctoa,?_vfpfcnvrt
  1715  001476  C020  F040         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1716  00147A  0012               	return	
  1717  00147C                     l3396:
  1718                           
  1719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1720  00147C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1721  001480  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1722  001484  CFDE FFF6          	movff	postinc2,tblptrl
  1723  001488  CFDD FFF7          	movff	postdec2,tblptrh
  1724  00148C                     	if	0	;tblptru may be non-zero
  1725  00148C                     	endif
  1726  00148C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1727  00148C  0E00               	movlw	low (__mediumconst shr (0+16))
  1728  00148E  6EF8               	movwf	tblptru,c
  1729  001490                     	endif
  1730  001490  0008               	tblrd		*
  1731  001492  50F5               	movf	tablat,w,c
  1732  001494  0A75               	xorlw	117
  1733  001496  A4D8               	btfss	status,2,c
  1734  001498  D040               	goto	l3404
  1735                           
  1736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1737  00149A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1738  00149E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1739  0014A2  2ADE               	incf	postinc2,f,c
  1740  0014A4  0E00               	movlw	0
  1741  0014A6  22DD               	addwfc	postdec2,f,c
  1742                           
  1743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1744  0014A8  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1745  0014AC  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1746  0014B0  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1747  0014B4  0E02               	movlw	2
  1748  0014B6  26DE               	addwf	postinc2,f,c
  1749  0014B8  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1750  0014BC  0E00               	movlw	0
  1751  0014BE  22DD               	addwfc	postdec2,f,c
  1752  0014C0  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1753  0014C4  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1754  0014C8  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  1755  0014CC  CFDD F048          	movff	postdec2,??_vfpfcnvrt+3
  1756  0014D0  C047  F049         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1757  0014D4  C048  F04A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1758  0014D8  6A4B               	clrf	vfpfcnvrt@llu+2,c
  1759  0014DA  6A4C               	clrf	vfpfcnvrt@llu+3,c
  1760  0014DC  6A4D               	clrf	vfpfcnvrt@llu+4,c
  1761  0014DE  6A4E               	clrf	vfpfcnvrt@llu+5,c
  1762  0014E0  6A4F               	clrf	vfpfcnvrt@llu+6,c
  1763  0014E2  6A50               	clrf	vfpfcnvrt@llu+7,c
  1764                           
  1765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1766  0014E4  C03F  F01F         	movff	vfpfcnvrt@fp,utoa@fp
  1767  0014E8  C040  F020         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1768  0014EC  C049  F021         	movff	vfpfcnvrt@llu,utoa@d
  1769  0014F0  C04A  F022         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1770  0014F4  C04B  F023         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1771  0014F8  C04C  F024         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1772  0014FC  C04D  F025         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1773  001500  C04E  F026         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1774  001504  C04F  F027         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1775  001508  C050  F028         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1776  00150C  EC60  F00C         	call	_utoa	;wreg free
  1777  001510  C01F  F03F         	movff	?_utoa,?_vfpfcnvrt
  1778  001514  C020  F040         	movff	?_utoa+1,?_vfpfcnvrt+1
  1779  001518  0012               	return	
  1780  00151A                     l3404:
  1781                           
  1782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1783  00151A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1784  00151E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1785  001522  CFDE FFF6          	movff	postinc2,tblptrl
  1786  001526  CFDD FFF7          	movff	postdec2,tblptrh
  1787  00152A                     	if	0	;tblptru may be non-zero
  1788  00152A                     	endif
  1789  00152A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1790  00152A  0E00               	movlw	low (__mediumconst shr (0+16))
  1791  00152C  6EF8               	movwf	tblptru,c
  1792  00152E                     	endif
  1793  00152E  0008               	tblrd		*
  1794  001530  50F5               	movf	tablat,w,c
  1795  001532  0A25               	xorlw	37
  1796  001534  A4D8               	btfss	status,2,c
  1797  001536  D016               	goto	l3414
  1798                           
  1799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1800  001538  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1801  00153C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1802  001540  2ADE               	incf	postinc2,f,c
  1803  001542  0E00               	movlw	0
  1804  001544  22DD               	addwfc	postdec2,f,c
  1805                           
  1806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1807  001546  0E00               	movlw	0
  1808  001548  6E05               	movwf	fputc@c+1,c
  1809  00154A  0E25               	movlw	37
  1810  00154C  6E04               	movwf	fputc@c,c
  1811  00154E  C03F  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1812  001552  C040  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1813  001556  ECF3  F010         	call	_fputc	;wreg free
  1814  00155A                     l3410:
  1815                           
  1816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1817  00155A  0E00               	movlw	0
  1818  00155C  6E40               	movwf	?_vfpfcnvrt+1,c
  1819  00155E  0E01               	movlw	1
  1820  001560  6E3F               	movwf	?_vfpfcnvrt,c
  1821  001562  0012               	return	
  1822  001564                     l3414:
  1823                           
  1824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1825  001564  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1826  001568  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1827  00156C  2ADE               	incf	postinc2,f,c
  1828  00156E  0E00               	movlw	0
  1829  001570  22DD               	addwfc	postdec2,f,c
  1830                           
  1831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1832  001572  0E00               	movlw	0
  1833  001574  6E40               	movwf	?_vfpfcnvrt+1,c
  1834  001576  0E00               	movlw	0
  1835  001578  6E3F               	movwf	?_vfpfcnvrt,c
  1836  00157A  0012               	return	
  1837  00157C                     l3420:
  1838                           
  1839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1840  00157C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1841  001580  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1842  001584  CFDE FFF6          	movff	postinc2,tblptrl
  1843  001588  CFDD FFF7          	movff	postdec2,tblptrh
  1844  00158C                     	if	0	;tblptru may be non-zero
  1845  00158C                     	endif
  1846  00158C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1847  00158C  0E00               	movlw	low (__mediumconst shr (0+16))
  1848  00158E  6EF8               	movwf	tblptru,c
  1849  001590                     	endif
  1850  001590  0008               	tblrd		*
  1851  001592  50F5               	movf	tablat,w,c
  1852  001594  6E04               	movwf	fputc@c,c
  1853  001596  6A05               	clrf	fputc@c+1,c
  1854  001598  C03F  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1855  00159C  C040  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1856  0015A0  ECF3  F010         	call	_fputc	;wreg free
  1857                           
  1858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1859  0015A4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1860  0015A8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1861  0015AC  2ADE               	incf	postinc2,f,c
  1862  0015AE  0E00               	movlw	0
  1863  0015B0  22DD               	addwfc	postdec2,f,c
  1864  0015B2  D7D3               	goto	l3410
  1865  0015B4                     __end_of_vfpfcnvrt:
  1866                           	opt callstack 0
  1867                           
  1868 ;; *************** function _utoa *****************
  1869 ;; Defined at:
  1870 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  1873 ;;		 -> sprintf@f(6), 
  1874 ;;  d               8   32[COMRAM] unsigned long long 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  n               8   52[COMRAM] unsigned long long 
  1877 ;;  i               2   60[COMRAM] int 
  1878 ;;  w               2   50[COMRAM] int 
  1879 ;;  p               2   48[COMRAM] int 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  2   30[COMRAM] int 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1889 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1891 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1892 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1893 ;;Total ram usage:       32 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    5
  1896 ;; This function calls:
  1897 ;;		___lodiv
  1898 ;;		___lomod
  1899 ;;		_pad
  1900 ;; This function is called by:
  1901 ;;		_vfpfcnvrt
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text5
  1906  0018C0                     __ptext5:
  1907                           	opt callstack 0
  1908  0018C0                     _utoa:
  1909                           	opt callstack 22
  1910                           
  1911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1912                           
  1913                           ;incstack = 0
  1914  0018C0  0100               	movlb	0	; () banked
  1915  0018C2  AF77               	btfss	(_prec+1)& (0+255),7,b
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1919  0018C4  9378               	bcf	_flags& (0+255),1,b
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1923  0018C6  BF77               	btfsc	(_prec+1)& (0+255),7,b
  1924  0018C8  D005               	goto	u2970
  1925  0018CA  5177               	movf	(_prec+1)& (0+255),w,b
  1926  0018CC  E108               	bnz	l240
  1927  0018CE  0576               	decf	_prec& (0+255),w,b
  1928  0018D0  B0D8               	btfsc	status,0,c
  1929  0018D2  D005               	goto	l240
  1930  0018D4                     u2970:
  1931                           
  1932                           ; BSR set to: 0
  1933  0018D4  0E00               	movlw	0
  1934  0018D6  6E32               	movwf	utoa@p+1,c
  1935  0018D8  0E01               	movlw	1
  1936  0018DA  6E31               	movwf	utoa@p,c
  1937  0018DC  D004               	goto	l242
  1938  0018DE                     l240:
  1939                           
  1940                           ; BSR set to: 0
  1941  0018DE  C076  F031         	movff	_prec,utoa@p
  1942  0018E2  C077  F032         	movff	_prec+1,utoa@p+1
  1943  0018E6                     l242:
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1947  0018E6  C058  F033         	movff	_width,utoa@w
  1948  0018EA  C059  F034         	movff	_width+1,utoa@w+1
  1949                           
  1950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1951  0018EE  C021  F035         	movff	utoa@d,utoa@n
  1952  0018F2  C022  F036         	movff	utoa@d+1,utoa@n+1
  1953  0018F6  C023  F037         	movff	utoa@d+2,utoa@n+2
  1954  0018FA  C024  F038         	movff	utoa@d+3,utoa@n+3
  1955  0018FE  C025  F039         	movff	utoa@d+4,utoa@n+4
  1956  001902  C026  F03A         	movff	utoa@d+5,utoa@n+5
  1957  001906  C027  F03B         	movff	utoa@d+6,utoa@n+6
  1958  00190A  C028  F03C         	movff	utoa@d+7,utoa@n+7
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1962  00190E  0E00               	movlw	0
  1963  001910  6E3E               	movwf	utoa@i+1,c
  1964  001912  0E1F               	movlw	31
  1965  001914  6E3D               	movwf	utoa@i,c
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1969  001916  0E00               	movlw	0
  1970  001918  6FA4               	movwf	(_dbuf+31)& (0+255),b
  1971                           
  1972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1973  00191A  D076               	goto	l3274
  1974  00191C                     l3264:
  1975                           
  1976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1977  00191C  063D               	decf	utoa@i,f,c
  1978  00191E  A0D8               	btfss	status,0,c
  1979  001920  063E               	decf	utoa@i+1,f,c
  1980                           
  1981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1982  001922  0E85               	movlw	low _dbuf
  1983  001924  243D               	addwf	utoa@i,w,c
  1984  001926  6ED9               	movwf	fsr2l,c
  1985  001928  0E00               	movlw	high _dbuf
  1986  00192A  203E               	addwfc	utoa@i+1,w,c
  1987  00192C  6EDA               	movwf	fsr2h,c
  1988  00192E  C035  F004         	movff	utoa@n,___lomod@dividend
  1989  001932  C036  F005         	movff	utoa@n+1,___lomod@dividend+1
  1990  001936  C037  F006         	movff	utoa@n+2,___lomod@dividend+2
  1991  00193A  C038  F007         	movff	utoa@n+3,___lomod@dividend+3
  1992  00193E  C039  F008         	movff	utoa@n+4,___lomod@dividend+4
  1993  001942  C03A  F009         	movff	utoa@n+5,___lomod@dividend+5
  1994  001946  C03B  F00A         	movff	utoa@n+6,___lomod@dividend+6
  1995  00194A  C03C  F00B         	movff	utoa@n+7,___lomod@dividend+7
  1996  00194E  0E0A               	movlw	10
  1997  001950  6E0C               	movwf	___lomod@divisor,c
  1998  001952  0E00               	movlw	0
  1999  001954  6E0D               	movwf	___lomod@divisor+1,c
  2000  001956  0E00               	movlw	0
  2001  001958  6E0E               	movwf	___lomod@divisor+2,c
  2002  00195A  0E00               	movlw	0
  2003  00195C  6E0F               	movwf	___lomod@divisor+3,c
  2004  00195E  0E00               	movlw	0
  2005  001960  6E10               	movwf	___lomod@divisor+4,c
  2006  001962  0E00               	movlw	0
  2007  001964  6E11               	movwf	___lomod@divisor+5,c
  2008  001966  0E00               	movlw	0
  2009  001968  6E12               	movwf	___lomod@divisor+6,c
  2010  00196A  0E00               	movlw	0
  2011  00196C  6E13               	movwf	___lomod@divisor+7,c
  2012  00196E  EC9C  F010         	call	___lomod	;wreg free
  2013  001972  C004  F029         	movff	?___lomod,??_utoa
  2014  001976  C005  F02A         	movff	?___lomod+1,??_utoa+1
  2015  00197A  C006  F02B         	movff	?___lomod+2,??_utoa+2
  2016  00197E  C007  F02C         	movff	?___lomod+3,??_utoa+3
  2017  001982  C008  F02D         	movff	?___lomod+4,??_utoa+4
  2018  001986  C009  F02E         	movff	?___lomod+5,??_utoa+5
  2019  00198A  C00A  F02F         	movff	?___lomod+6,??_utoa+6
  2020  00198E  C00B  F030         	movff	?___lomod+7,??_utoa+7
  2021  001992  5029               	movf	??_utoa,w,c
  2022  001994  0F30               	addlw	48
  2023  001996  6EDF               	movwf	indf2,c
  2024                           
  2025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  2026  001998  0631               	decf	utoa@p,f,c
  2027  00199A  A0D8               	btfss	status,0,c
  2028  00199C  0632               	decf	utoa@p+1,f,c
  2029                           
  2030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  2031  00199E  0633               	decf	utoa@w,f,c
  2032  0019A0  A0D8               	btfss	status,0,c
  2033  0019A2  0634               	decf	utoa@w+1,f,c
  2034                           
  2035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  2036  0019A4  C035  F004         	movff	utoa@n,___lodiv@dividend
  2037  0019A8  C036  F005         	movff	utoa@n+1,___lodiv@dividend+1
  2038  0019AC  C037  F006         	movff	utoa@n+2,___lodiv@dividend+2
  2039  0019B0  C038  F007         	movff	utoa@n+3,___lodiv@dividend+3
  2040  0019B4  C039  F008         	movff	utoa@n+4,___lodiv@dividend+4
  2041  0019B8  C03A  F009         	movff	utoa@n+5,___lodiv@dividend+5
  2042  0019BC  C03B  F00A         	movff	utoa@n+6,___lodiv@dividend+6
  2043  0019C0  C03C  F00B         	movff	utoa@n+7,___lodiv@dividend+7
  2044  0019C4  0E0A               	movlw	10
  2045  0019C6  6E0C               	movwf	___lodiv@divisor,c
  2046  0019C8  0E00               	movlw	0
  2047  0019CA  6E0D               	movwf	___lodiv@divisor+1,c
  2048  0019CC  0E00               	movlw	0
  2049  0019CE  6E0E               	movwf	___lodiv@divisor+2,c
  2050  0019D0  0E00               	movlw	0
  2051  0019D2  6E0F               	movwf	___lodiv@divisor+3,c
  2052  0019D4  0E00               	movlw	0
  2053  0019D6  6E10               	movwf	___lodiv@divisor+4,c
  2054  0019D8  0E00               	movlw	0
  2055  0019DA  6E11               	movwf	___lodiv@divisor+5,c
  2056  0019DC  0E00               	movlw	0
  2057  0019DE  6E12               	movwf	___lodiv@divisor+6,c
  2058  0019E0  0E00               	movlw	0
  2059  0019E2  6E13               	movwf	___lodiv@divisor+7,c
  2060  0019E4  ECD8  F00F         	call	___lodiv	;wreg free
  2061  0019E8  C004  F035         	movff	?___lodiv,utoa@n
  2062  0019EC  C005  F036         	movff	?___lodiv+1,utoa@n+1
  2063  0019F0  C006  F037         	movff	?___lodiv+2,utoa@n+2
  2064  0019F4  C007  F038         	movff	?___lodiv+3,utoa@n+3
  2065  0019F8  C008  F039         	movff	?___lodiv+4,utoa@n+4
  2066  0019FC  C009  F03A         	movff	?___lodiv+5,utoa@n+5
  2067  001A00  C00A  F03B         	movff	?___lodiv+6,utoa@n+6
  2068  001A04  C00B  F03C         	movff	?___lodiv+7,utoa@n+7
  2069  001A08                     l3274:
  2070                           
  2071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2072  001A08  503D               	movf	utoa@i,w,c
  2073  001A0A  103E               	iorwf	utoa@i+1,w,c
  2074  001A0C  B4D8               	btfsc	status,2,c
  2075  001A0E  D01B               	goto	u3020
  2076  001A10  5035               	movf	utoa@n,w,c
  2077  001A12  1036               	iorwf	utoa@n+1,w,c
  2078  001A14  1037               	iorwf	utoa@n+2,w,c
  2079  001A16  1038               	iorwf	utoa@n+3,w,c
  2080  001A18  1039               	iorwf	utoa@n+4,w,c
  2081  001A1A  103A               	iorwf	utoa@n+5,w,c
  2082  001A1C  103B               	iorwf	utoa@n+6,w,c
  2083  001A1E  103C               	iorwf	utoa@n+7,w,c
  2084  001A20  A4D8               	btfss	status,2,c
  2085  001A22  D77C               	goto	l3264
  2086  001A24  BE32               	btfsc	utoa@p+1,7,c
  2087  001A26  D005               	goto	u3000
  2088  001A28  5032               	movf	utoa@p+1,w,c
  2089  001A2A  E102               	bnz	u3001
  2090  001A2C  0431               	decf	utoa@p,w,c
  2091  001A2E  B0D8               	btfsc	status,0,c
  2092  001A30                     u3001:
  2093  001A30  D775               	goto	l3264
  2094  001A32                     u3000:
  2095  001A32  BE34               	btfsc	utoa@w+1,7,c
  2096  001A34  D008               	goto	u3020
  2097  001A36  5034               	movf	utoa@w+1,w,c
  2098  001A38  E103               	bnz	u3010
  2099  001A3A  0433               	decf	utoa@w,w,c
  2100  001A3C  A0D8               	btfss	status,0,c
  2101  001A3E  D003               	goto	u3020
  2102  001A40                     u3010:
  2103  001A40  0100               	movlb	0	; () banked
  2104  001A42  B378               	btfsc	_flags& (0+255),1,b
  2105  001A44  D76B               	goto	l3264
  2106  001A46                     u3020:
  2107                           
  2108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  2109  001A46  C01F  F014         	movff	utoa@fp,pad@fp
  2110  001A4A  C020  F015         	movff	utoa@fp+1,pad@fp+1
  2111  001A4E  0E85               	movlw	low _dbuf
  2112  001A50  243D               	addwf	utoa@i,w,c
  2113  001A52  6E16               	movwf	pad@buf,c
  2114  001A54  0E00               	movlw	high _dbuf
  2115  001A56  203E               	addwfc	utoa@i+1,w,c
  2116  001A58  6E17               	movwf	pad@buf+1,c
  2117  001A5A  C033  F018         	movff	utoa@w,pad@p
  2118  001A5E  C034  F019         	movff	utoa@w+1,pad@p+1
  2119  001A62  EC43  F011         	call	_pad	;wreg free
  2120  001A66  C014  F01F         	movff	?_pad,?_utoa
  2121  001A6A  C015  F020         	movff	?_pad+1,?_utoa+1
  2122  001A6E  0012               	return		;funcret
  2123  001A70                     __end_of_utoa:
  2124                           	opt callstack 0
  2125                           
  2126 ;; *************** function ___lomod *****************
  2127 ;; Defined at:
  2128 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  dividend        8    3[COMRAM] unsigned long long 
  2131 ;;  divisor         8   11[COMRAM] unsigned long long 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  counter         1   19[COMRAM] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  8    3[COMRAM] unsigned long long 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2143 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2146 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2147 ;;Total ram usage:       17 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    1
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_utoa
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text6
  2158  002138                     __ptext6:
  2159                           	opt callstack 0
  2160  002138                     ___lomod:
  2161                           	opt callstack 25
  2162                           
  2163                           ;incstack = 0
  2164  002138  500C               	movf	___lomod@divisor,w,c
  2165  00213A  100D               	iorwf	___lomod@divisor+1,w,c
  2166  00213C  100E               	iorwf	___lomod@divisor+2,w,c
  2167  00213E  100F               	iorwf	___lomod@divisor+3,w,c
  2168  002140  1010               	iorwf	___lomod@divisor+4,w,c
  2169  002142  1011               	iorwf	___lomod@divisor+5,w,c
  2170  002144  1012               	iorwf	___lomod@divisor+6,w,c
  2171  002146  1013               	iorwf	___lomod@divisor+7,w,c
  2172  002148  B4D8               	btfsc	status,2,c
  2173  00214A  D03C               	goto	l736
  2174  00214C  0E01               	movlw	1
  2175  00214E  6E14               	movwf	___lomod@counter,c
  2176  002150  D00A               	goto	l3216
  2177  002152                     l3214:
  2178  002152  90D8               	bcf	status,0,c
  2179  002154  360C               	rlcf	___lomod@divisor,f,c
  2180  002156  360D               	rlcf	___lomod@divisor+1,f,c
  2181  002158  360E               	rlcf	___lomod@divisor+2,f,c
  2182  00215A  360F               	rlcf	___lomod@divisor+3,f,c
  2183  00215C  3610               	rlcf	___lomod@divisor+4,f,c
  2184  00215E  3611               	rlcf	___lomod@divisor+5,f,c
  2185  002160  3612               	rlcf	___lomod@divisor+6,f,c
  2186  002162  3613               	rlcf	___lomod@divisor+7,f,c
  2187  002164  2A14               	incf	___lomod@counter,f,c
  2188  002166                     l3216:
  2189  002166  AE13               	btfss	___lomod@divisor+7,7,c
  2190  002168  D7F4               	goto	l3214
  2191  00216A                     u2910:
  2192  00216A  500C               	movf	___lomod@divisor,w,c
  2193  00216C  5C04               	subwf	___lomod@dividend,w,c
  2194  00216E  500D               	movf	___lomod@divisor+1,w,c
  2195  002170  5805               	subwfb	___lomod@dividend+1,w,c
  2196  002172  500E               	movf	___lomod@divisor+2,w,c
  2197  002174  5806               	subwfb	___lomod@dividend+2,w,c
  2198  002176  500F               	movf	___lomod@divisor+3,w,c
  2199  002178  5807               	subwfb	___lomod@dividend+3,w,c
  2200  00217A  5010               	movf	___lomod@divisor+4,w,c
  2201  00217C  5808               	subwfb	___lomod@dividend+4,w,c
  2202  00217E  5011               	movf	___lomod@divisor+5,w,c
  2203  002180  5809               	subwfb	___lomod@dividend+5,w,c
  2204  002182  5012               	movf	___lomod@divisor+6,w,c
  2205  002184  580A               	subwfb	___lomod@dividend+6,w,c
  2206  002186  5013               	movf	___lomod@divisor+7,w,c
  2207  002188  580B               	subwfb	___lomod@dividend+7,w,c
  2208  00218A  A0D8               	btfss	status,0,c
  2209  00218C  D010               	goto	l3222
  2210  00218E  500C               	movf	___lomod@divisor,w,c
  2211  002190  5E04               	subwf	___lomod@dividend,f,c
  2212  002192  500D               	movf	___lomod@divisor+1,w,c
  2213  002194  5A05               	subwfb	___lomod@dividend+1,f,c
  2214  002196  500E               	movf	___lomod@divisor+2,w,c
  2215  002198  5A06               	subwfb	___lomod@dividend+2,f,c
  2216  00219A  500F               	movf	___lomod@divisor+3,w,c
  2217  00219C  5A07               	subwfb	___lomod@dividend+3,f,c
  2218  00219E  5010               	movf	___lomod@divisor+4,w,c
  2219  0021A0  5A08               	subwfb	___lomod@dividend+4,f,c
  2220  0021A2  5011               	movf	___lomod@divisor+5,w,c
  2221  0021A4  5A09               	subwfb	___lomod@dividend+5,f,c
  2222  0021A6  5012               	movf	___lomod@divisor+6,w,c
  2223  0021A8  5A0A               	subwfb	___lomod@dividend+6,f,c
  2224  0021AA  5013               	movf	___lomod@divisor+7,w,c
  2225  0021AC  5A0B               	subwfb	___lomod@dividend+7,f,c
  2226  0021AE                     l3222:
  2227  0021AE  90D8               	bcf	status,0,c
  2228  0021B0  3213               	rrcf	___lomod@divisor+7,f,c
  2229  0021B2  3212               	rrcf	___lomod@divisor+6,f,c
  2230  0021B4  3211               	rrcf	___lomod@divisor+5,f,c
  2231  0021B6  3210               	rrcf	___lomod@divisor+4,f,c
  2232  0021B8  320F               	rrcf	___lomod@divisor+3,f,c
  2233  0021BA  320E               	rrcf	___lomod@divisor+2,f,c
  2234  0021BC  320D               	rrcf	___lomod@divisor+1,f,c
  2235  0021BE  320C               	rrcf	___lomod@divisor,f,c
  2236  0021C0  2E14               	decfsz	___lomod@counter,f,c
  2237  0021C2  D7D3               	goto	u2910
  2238  0021C4                     l736:
  2239  0021C4  C004  F004         	movff	___lomod@dividend,?___lomod
  2240  0021C8  C005  F005         	movff	___lomod@dividend+1,?___lomod+1
  2241  0021CC  C006  F006         	movff	___lomod@dividend+2,?___lomod+2
  2242  0021D0  C007  F007         	movff	___lomod@dividend+3,?___lomod+3
  2243  0021D4  C008  F008         	movff	___lomod@dividend+4,?___lomod+4
  2244  0021D8  C009  F009         	movff	___lomod@dividend+5,?___lomod+5
  2245  0021DC  C00A  F00A         	movff	___lomod@dividend+6,?___lomod+6
  2246  0021E0  C00B  F00B         	movff	___lomod@dividend+7,?___lomod+7
  2247  0021E4  0012               	return		;funcret
  2248  0021E6                     __end_of___lomod:
  2249                           	opt callstack 0
  2250                           
  2251 ;; *************** function ___lodiv *****************
  2252 ;; Defined at:
  2253 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  dividend        8    3[COMRAM] unsigned long long 
  2256 ;;  divisor         8   11[COMRAM] unsigned long long 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  quotient        8   19[COMRAM] unsigned long long 
  2259 ;;  counter         1   27[COMRAM] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  8    3[COMRAM] unsigned long long 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2269 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2270 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2272 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2273 ;;Total ram usage:       25 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    1
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_utoa
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text7
  2284  001FB0                     __ptext7:
  2285                           	opt callstack 0
  2286  001FB0                     ___lodiv:
  2287                           	opt callstack 25
  2288                           
  2289                           ;incstack = 0
  2290  001FB0  EE20  F014         	lfsr	2,___lodiv@quotient
  2291  001FB4  0E07               	movlw	7
  2292  001FB6                     u2861:
  2293  001FB6  6ADE               	clrf	postinc2,c
  2294  001FB8  06E8               	decf	wreg,f,c
  2295  001FBA  E2FD               	bc	u2861
  2296  001FBC  500C               	movf	___lodiv@divisor,w,c
  2297  001FBE  100D               	iorwf	___lodiv@divisor+1,w,c
  2298  001FC0  100E               	iorwf	___lodiv@divisor+2,w,c
  2299  001FC2  100F               	iorwf	___lodiv@divisor+3,w,c
  2300  001FC4  1010               	iorwf	___lodiv@divisor+4,w,c
  2301  001FC6  1011               	iorwf	___lodiv@divisor+5,w,c
  2302  001FC8  1012               	iorwf	___lodiv@divisor+6,w,c
  2303  001FCA  1013               	iorwf	___lodiv@divisor+7,w,c
  2304  001FCC  B4D8               	btfsc	status,2,c
  2305  001FCE  D046               	goto	l726
  2306  001FD0  0E01               	movlw	1
  2307  001FD2  6E1C               	movwf	___lodiv@counter,c
  2308  001FD4  D00A               	goto	l3196
  2309  001FD6                     l3194:
  2310  001FD6  90D8               	bcf	status,0,c
  2311  001FD8  360C               	rlcf	___lodiv@divisor,f,c
  2312  001FDA  360D               	rlcf	___lodiv@divisor+1,f,c
  2313  001FDC  360E               	rlcf	___lodiv@divisor+2,f,c
  2314  001FDE  360F               	rlcf	___lodiv@divisor+3,f,c
  2315  001FE0  3610               	rlcf	___lodiv@divisor+4,f,c
  2316  001FE2  3611               	rlcf	___lodiv@divisor+5,f,c
  2317  001FE4  3612               	rlcf	___lodiv@divisor+6,f,c
  2318  001FE6  3613               	rlcf	___lodiv@divisor+7,f,c
  2319  001FE8  2A1C               	incf	___lodiv@counter,f,c
  2320  001FEA                     l3196:
  2321  001FEA  AE13               	btfss	___lodiv@divisor+7,7,c
  2322  001FEC  D7F4               	goto	l3194
  2323  001FEE                     u2880:
  2324  001FEE  90D8               	bcf	status,0,c
  2325  001FF0  3614               	rlcf	___lodiv@quotient,f,c
  2326  001FF2  3615               	rlcf	___lodiv@quotient+1,f,c
  2327  001FF4  3616               	rlcf	___lodiv@quotient+2,f,c
  2328  001FF6  3617               	rlcf	___lodiv@quotient+3,f,c
  2329  001FF8  3618               	rlcf	___lodiv@quotient+4,f,c
  2330  001FFA  3619               	rlcf	___lodiv@quotient+5,f,c
  2331  001FFC  361A               	rlcf	___lodiv@quotient+6,f,c
  2332  001FFE  361B               	rlcf	___lodiv@quotient+7,f,c
  2333  002000  500C               	movf	___lodiv@divisor,w,c
  2334  002002  5C04               	subwf	___lodiv@dividend,w,c
  2335  002004  500D               	movf	___lodiv@divisor+1,w,c
  2336  002006  5805               	subwfb	___lodiv@dividend+1,w,c
  2337  002008  500E               	movf	___lodiv@divisor+2,w,c
  2338  00200A  5806               	subwfb	___lodiv@dividend+2,w,c
  2339  00200C  500F               	movf	___lodiv@divisor+3,w,c
  2340  00200E  5807               	subwfb	___lodiv@dividend+3,w,c
  2341  002010  5010               	movf	___lodiv@divisor+4,w,c
  2342  002012  5808               	subwfb	___lodiv@dividend+4,w,c
  2343  002014  5011               	movf	___lodiv@divisor+5,w,c
  2344  002016  5809               	subwfb	___lodiv@dividend+5,w,c
  2345  002018  5012               	movf	___lodiv@divisor+6,w,c
  2346  00201A  580A               	subwfb	___lodiv@dividend+6,w,c
  2347  00201C  5013               	movf	___lodiv@divisor+7,w,c
  2348  00201E  580B               	subwfb	___lodiv@dividend+7,w,c
  2349  002020  A0D8               	btfss	status,0,c
  2350  002022  D011               	goto	l3206
  2351  002024  500C               	movf	___lodiv@divisor,w,c
  2352  002026  5E04               	subwf	___lodiv@dividend,f,c
  2353  002028  500D               	movf	___lodiv@divisor+1,w,c
  2354  00202A  5A05               	subwfb	___lodiv@dividend+1,f,c
  2355  00202C  500E               	movf	___lodiv@divisor+2,w,c
  2356  00202E  5A06               	subwfb	___lodiv@dividend+2,f,c
  2357  002030  500F               	movf	___lodiv@divisor+3,w,c
  2358  002032  5A07               	subwfb	___lodiv@dividend+3,f,c
  2359  002034  5010               	movf	___lodiv@divisor+4,w,c
  2360  002036  5A08               	subwfb	___lodiv@dividend+4,f,c
  2361  002038  5011               	movf	___lodiv@divisor+5,w,c
  2362  00203A  5A09               	subwfb	___lodiv@dividend+5,f,c
  2363  00203C  5012               	movf	___lodiv@divisor+6,w,c
  2364  00203E  5A0A               	subwfb	___lodiv@dividend+6,f,c
  2365  002040  5013               	movf	___lodiv@divisor+7,w,c
  2366  002042  5A0B               	subwfb	___lodiv@dividend+7,f,c
  2367  002044  8014               	bsf	___lodiv@quotient,0,c
  2368  002046                     l3206:
  2369  002046  90D8               	bcf	status,0,c
  2370  002048  3213               	rrcf	___lodiv@divisor+7,f,c
  2371  00204A  3212               	rrcf	___lodiv@divisor+6,f,c
  2372  00204C  3211               	rrcf	___lodiv@divisor+5,f,c
  2373  00204E  3210               	rrcf	___lodiv@divisor+4,f,c
  2374  002050  320F               	rrcf	___lodiv@divisor+3,f,c
  2375  002052  320E               	rrcf	___lodiv@divisor+2,f,c
  2376  002054  320D               	rrcf	___lodiv@divisor+1,f,c
  2377  002056  320C               	rrcf	___lodiv@divisor,f,c
  2378  002058  2E1C               	decfsz	___lodiv@counter,f,c
  2379  00205A  D7C9               	goto	u2880
  2380  00205C                     l726:
  2381  00205C  C014  F004         	movff	___lodiv@quotient,?___lodiv
  2382  002060  C015  F005         	movff	___lodiv@quotient+1,?___lodiv+1
  2383  002064  C016  F006         	movff	___lodiv@quotient+2,?___lodiv+2
  2384  002068  C017  F007         	movff	___lodiv@quotient+3,?___lodiv+3
  2385  00206C  C018  F008         	movff	___lodiv@quotient+4,?___lodiv+4
  2386  002070  C019  F009         	movff	___lodiv@quotient+5,?___lodiv+5
  2387  002074  C01A  F00A         	movff	___lodiv@quotient+6,?___lodiv+6
  2388  002078  C01B  F00B         	movff	___lodiv@quotient+7,?___lodiv+7
  2389  00207C  0012               	return		;funcret
  2390  00207E                     __end_of___lodiv:
  2391                           	opt callstack 0
  2392                           
  2393 ;; *************** function _ctoa *****************
  2394 ;; Defined at:
  2395 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  2398 ;;		 -> sprintf@f(6), 
  2399 ;;  c               1   32[COMRAM] unsigned char 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  w               2   33[COMRAM] int 
  2402 ;;  l               2    0        int 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  2   30[COMRAM] int 
  2405 ;; Registers used:
  2406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2412 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2415 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2416 ;;Total ram usage:        5 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    5
  2419 ;; This function calls:
  2420 ;;		_pad
  2421 ;; This function is called by:
  2422 ;;		_vfpfcnvrt
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text8
  2427  002436                     __ptext8:
  2428                           	opt callstack 0
  2429  002436                     _ctoa:
  2430                           	opt callstack 22
  2431                           
  2432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  2433                           
  2434                           ;incstack = 0
  2435  002436  5058               	movf	_width,w,c
  2436  002438  1059               	iorwf	_width+1,w,c
  2437  00243A  A4D8               	btfss	status,2,c
  2438  00243C  D005               	goto	l3242
  2439  00243E  C058  F022         	movff	_width,ctoa@w
  2440  002442  C059  F023         	movff	_width+1,ctoa@w+1
  2441  002446  D006               	goto	l3244
  2442  002448                     l3242:
  2443  002448  0EFF               	movlw	255
  2444  00244A  2458               	addwf	_width,w,c
  2445  00244C  6E22               	movwf	ctoa@w,c
  2446  00244E  0EFF               	movlw	255
  2447  002450  2059               	addwfc	_width+1,w,c
  2448  002452  6E23               	movwf	ctoa@w+1,c
  2449  002454                     l3244:
  2450                           
  2451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  2452  002454  C021  F085         	movff	ctoa@c,_dbuf
  2453                           
  2454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  2455  002458  0E00               	movlw	0
  2456  00245A  0100               	movlb	0	; () banked
  2457  00245C  6F86               	movwf	(_dbuf+1)& (0+255),b
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  2461  00245E  C01F  F014         	movff	ctoa@fp,pad@fp
  2462  002462  C020  F015         	movff	ctoa@fp+1,pad@fp+1
  2463  002466  0E85               	movlw	low _dbuf
  2464  002468  6E16               	movwf	pad@buf,c
  2465  00246A  0E00               	movlw	high _dbuf
  2466  00246C  6E17               	movwf	pad@buf+1,c
  2467  00246E  C022  F018         	movff	ctoa@w,pad@p
  2468  002472  C023  F019         	movff	ctoa@w+1,pad@p+1
  2469  002476  EC43  F011         	call	_pad	;wreg free
  2470  00247A  C014  F01F         	movff	?_pad,?_ctoa
  2471  00247E  C015  F020         	movff	?_pad+1,?_ctoa+1
  2472  002482  0012               	return		;funcret
  2473  002484                     __end_of_ctoa:
  2474                           	opt callstack 0
  2475                           
  2476 ;; *************** function _pad *****************
  2477 ;; Defined at:
  2478 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  2481 ;;		 -> sprintf@f(6), 
  2482 ;;  buf             2   21[COMRAM] PTR unsigned char 
  2483 ;;		 -> dbuf(32), 
  2484 ;;  p               2   23[COMRAM] int 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  w               2   28[COMRAM] int 
  2487 ;;  i               2   26[COMRAM] int 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  2   19[COMRAM] int 
  2490 ;; Registers used:
  2491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2497 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2500 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2501 ;;Total ram usage:       11 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    4
  2504 ;; This function calls:
  2505 ;;		_fputc
  2506 ;;		_fputs
  2507 ;;		_strlen
  2508 ;; This function is called by:
  2509 ;;		_ctoa
  2510 ;;		_utoa
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text9
  2515  002286                     __ptext9:
  2516                           	opt callstack 0
  2517  002286                     _pad:
  2518                           	opt callstack 22
  2519                           
  2520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2521                           
  2522                           ;incstack = 0
  2523  002286  0100               	movlb	0	; () banked
  2524  002288  A178               	btfss	_flags& (0+255),0,b
  2525  00228A  D00A               	goto	l3160
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2529  00228C  C016  F00D         	movff	pad@buf,fputs@s
  2530  002290  C017  F00E         	movff	pad@buf+1,fputs@s+1
  2531  002294  C014  F00F         	movff	pad@fp,fputs@fp
  2532  002298  C015  F010         	movff	pad@fp+1,fputs@fp+1
  2533  00229C  EC85  F012         	call	_fputs	;wreg free
  2534  0022A0                     l3160:
  2535                           
  2536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2537  0022A0  BE19               	btfsc	pad@p+1,7,c
  2538  0022A2  D005               	goto	l3164
  2539  0022A4  C018  F01D         	movff	pad@p,pad@w
  2540  0022A8  C019  F01E         	movff	pad@p+1,pad@w+1
  2541  0022AC  D004               	goto	l223
  2542  0022AE                     l3164:
  2543  0022AE  0E00               	movlw	0
  2544  0022B0  6E1E               	movwf	pad@w+1,c
  2545  0022B2  0E00               	movlw	0
  2546  0022B4  6E1D               	movwf	pad@w,c
  2547  0022B6                     l223:
  2548                           
  2549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2550  0022B6  0E00               	movlw	0
  2551  0022B8  6E1C               	movwf	pad@i+1,c
  2552  0022BA  0E00               	movlw	0
  2553  0022BC  6E1B               	movwf	pad@i,c
  2554                           
  2555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2556  0022BE  D00C               	goto	l3170
  2557  0022C0                     l3166:
  2558                           
  2559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2560  0022C0  0E00               	movlw	0
  2561  0022C2  6E05               	movwf	fputc@c+1,c
  2562  0022C4  0E20               	movlw	32
  2563  0022C6  6E04               	movwf	fputc@c,c
  2564  0022C8  C014  F006         	movff	pad@fp,fputc@fp
  2565  0022CC  C015  F007         	movff	pad@fp+1,fputc@fp+1
  2566  0022D0  ECF3  F010         	call	_fputc	;wreg free
  2567                           
  2568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2569  0022D4  4A1B               	infsnz	pad@i,f,c
  2570  0022D6  2A1C               	incf	pad@i+1,f,c
  2571  0022D8                     l3170:
  2572                           
  2573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2574  0022D8  501D               	movf	pad@w,w,c
  2575  0022DA  5C1B               	subwf	pad@i,w,c
  2576  0022DC  501C               	movf	pad@i+1,w,c
  2577  0022DE  0A80               	xorlw	128
  2578  0022E0  6E1A               	movwf	??_pad& (0+255),c
  2579  0022E2  501E               	movf	pad@w+1,w,c
  2580  0022E4  0A80               	xorlw	128
  2581  0022E6  581A               	subwfb	??_pad& (0+255),w,c
  2582  0022E8  A0D8               	btfss	status,0,c
  2583  0022EA  D7EA               	goto	l3166
  2584                           
  2585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2586  0022EC  0100               	movlb	0	; () banked
  2587  0022EE  B178               	btfsc	_flags& (0+255),0,b
  2588  0022F0  D00A               	goto	l3174
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2592  0022F2  C016  F00D         	movff	pad@buf,fputs@s
  2593  0022F6  C017  F00E         	movff	pad@buf+1,fputs@s+1
  2594  0022FA  C014  F00F         	movff	pad@fp,fputs@fp
  2595  0022FE  C015  F010         	movff	pad@fp+1,fputs@fp+1
  2596  002302  EC85  F012         	call	_fputs	;wreg free
  2597  002306                     l3174:
  2598                           
  2599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2600  002306  C016  F004         	movff	pad@buf,strlen@s
  2601  00230A  C017  F005         	movff	pad@buf+1,strlen@s+1
  2602  00230E  ECEB  F012         	call	_strlen	;wreg free
  2603  002312  501D               	movf	pad@w,w,c
  2604  002314  2404               	addwf	?_strlen,w,c
  2605  002316  6E14               	movwf	?_pad,c
  2606  002318  501E               	movf	pad@w+1,w,c
  2607  00231A  2005               	addwfc	?_strlen+1,w,c
  2608  00231C  6E15               	movwf	?_pad+1,c
  2609  00231E  0012               	return		;funcret
  2610  002320                     __end_of_pad:
  2611                           	opt callstack 0
  2612                           
  2613 ;; *************** function _strlen *****************
  2614 ;; Defined at:
  2615 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  s               2    3[COMRAM] PTR const unsigned char 
  2618 ;;		 -> dbuf(32), 
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  a               2    5[COMRAM] PTR const unsigned char 
  2621 ;;		 -> dbuf(32), 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  2    3[COMRAM] unsigned int 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;Total ram usage:        4 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    1
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_pad
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text10
  2646  0025D6                     __ptext10:
  2647                           	opt callstack 0
  2648  0025D6                     _strlen:
  2649                           	opt callstack 24
  2650                           
  2651                           ;incstack = 0
  2652  0025D6  C004  F006         	movff	strlen@s,strlen@a
  2653  0025DA  C005  F007         	movff	strlen@s+1,strlen@a+1
  2654  0025DE  D002               	goto	l3150
  2655  0025E0                     l3148:
  2656  0025E0  4A04               	infsnz	strlen@s,f,c
  2657  0025E2  2A05               	incf	strlen@s+1,f,c
  2658  0025E4                     l3150:
  2659  0025E4  C004  FFD9         	movff	strlen@s,fsr2l
  2660  0025E8  C005  FFDA         	movff	strlen@s+1,fsr2h
  2661  0025EC  50DF               	movf	indf2,w,c
  2662  0025EE  A4D8               	btfss	status,2,c
  2663  0025F0  D7F7               	goto	l3148
  2664  0025F2  5006               	movf	strlen@a,w,c
  2665  0025F4  5C04               	subwf	strlen@s,w,c
  2666  0025F6  6E04               	movwf	?_strlen,c
  2667  0025F8  5007               	movf	strlen@a+1,w,c
  2668  0025FA  5805               	subwfb	strlen@s+1,w,c
  2669  0025FC  6E05               	movwf	?_strlen+1,c
  2670  0025FE  0012               	return		;funcret
  2671  002600                     __end_of_strlen:
  2672                           	opt callstack 0
  2673                           
  2674 ;; *************** function _fputs *****************
  2675 ;; Defined at:
  2676 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  s               2   12[COMRAM] PTR const unsigned char 
  2679 ;;		 -> dbuf(32), 
  2680 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2681 ;;		 -> sprintf@f(6), 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  i               2   17[COMRAM] int 
  2684 ;;  c               1   16[COMRAM] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  2   12[COMRAM] int 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2695 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2697 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;Total ram usage:        7 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    3
  2701 ;; This function calls:
  2702 ;;		_fputc
  2703 ;; This function is called by:
  2704 ;;		_pad
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text11
  2709  00250A                     __ptext11:
  2710                           	opt callstack 0
  2711  00250A                     _fputs:
  2712                           	opt callstack 22
  2713                           
  2714                           ;incstack = 0
  2715  00250A  0E00               	movlw	0
  2716  00250C  6E13               	movwf	fputs@i+1,c
  2717  00250E  0E00               	movlw	0
  2718  002510  6E12               	movwf	fputs@i,c
  2719  002512  D00B               	goto	l3144
  2720  002514                     l3140:
  2721  002514  C011  F004         	movff	fputs@c,fputc@c
  2722  002518  6A05               	clrf	fputc@c+1,c
  2723  00251A  C00F  F006         	movff	fputs@fp,fputc@fp
  2724  00251E  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  2725  002522  ECF3  F010         	call	_fputc	;wreg free
  2726  002526  4A12               	infsnz	fputs@i,f,c
  2727  002528  2A13               	incf	fputs@i+1,f,c
  2728  00252A                     l3144:
  2729  00252A  5012               	movf	fputs@i,w,c
  2730  00252C  240D               	addwf	fputs@s,w,c
  2731  00252E  6ED9               	movwf	fsr2l,c
  2732  002530  5013               	movf	fputs@i+1,w,c
  2733  002532  200E               	addwfc	fputs@s+1,w,c
  2734  002534  6EDA               	movwf	fsr2h,c
  2735  002536  50DF               	movf	indf2,w,c
  2736  002538  6E11               	movwf	fputs@c,c
  2737  00253A  5011               	movf	fputs@c,w,c
  2738  00253C  B4D8               	btfsc	status,2,c
  2739  00253E  0012               	return	
  2740  002540  D7E9               	goto	l3140
  2741  002542                     __end_of_fputs:
  2742                           	opt callstack 0
  2743                           
  2744 ;; *************** function _fputc *****************
  2745 ;; Defined at:
  2746 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  c               2    3[COMRAM] int 
  2749 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  2750 ;;		 -> sprintf@f(6), 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  2    3[COMRAM] int 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2764 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2765 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2766 ;;Total ram usage:        9 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    2
  2769 ;; This function calls:
  2770 ;;		_putch
  2771 ;; This function is called by:
  2772 ;;		_pad
  2773 ;;		_vfpfcnvrt
  2774 ;;		_fputs
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text12
  2779  0021E6                     __ptext12:
  2780                           	opt callstack 0
  2781  0021E6                     _fputc:
  2782                           	opt callstack 22
  2783                           
  2784                           ;incstack = 0
  2785  0021E6  5006               	movf	fputc@fp,w,c
  2786  0021E8  1007               	iorwf	fputc@fp+1,w,c
  2787  0021EA  B4D8               	btfsc	status,2,c
  2788  0021EC  D004               	goto	u2750
  2789  0021EE  5006               	movf	fputc@fp,w,c
  2790  0021F0  1007               	iorwf	fputc@fp+1,w,c
  2791  0021F2  A4D8               	btfss	status,2,c
  2792  0021F4  D004               	goto	l3130
  2793  0021F6                     u2750:
  2794  0021F6  5004               	movf	fputc@c,w,c
  2795  0021F8  EC70  F013         	call	_putch
  2796  0021FC  0012               	return	
  2797  0021FE                     l3130:
  2798  0021FE  EE20 F004          	lfsr	2,4
  2799  002202  5006               	movf	fputc@fp,w,c
  2800  002204  26D9               	addwf	fsr2l,f,c
  2801  002206  5007               	movf	fputc@fp+1,w,c
  2802  002208  22DA               	addwfc	fsr2h,f,c
  2803  00220A  50DE               	movf	postinc2,w,c
  2804  00220C  10DE               	iorwf	postinc2,w,c
  2805  00220E  B4D8               	btfsc	status,2,c
  2806  002210  D016               	goto	u2770
  2807  002212  EE20 F004          	lfsr	2,4
  2808  002216  5006               	movf	fputc@fp,w,c
  2809  002218  26D9               	addwf	fsr2l,f,c
  2810  00221A  5007               	movf	fputc@fp+1,w,c
  2811  00221C  22DA               	addwfc	fsr2h,f,c
  2812  00221E  EE10 F002          	lfsr	1,2
  2813  002222  5006               	movf	fputc@fp,w,c
  2814  002224  26E1               	addwf	fsr1l,f,c
  2815  002226  5007               	movf	fputc@fp+1,w,c
  2816  002228  22E2               	addwfc	fsr1h,f,c
  2817  00222A  50DE               	movf	postinc2,w,c
  2818  00222C  5CE6               	subwf	postinc1,w,c
  2819  00222E  50E6               	movf	postinc1,w,c
  2820  002230  0A80               	xorlw	128
  2821  002232  6E0C               	movwf	(??_fputc+4)& (0+255),c
  2822  002234  50DE               	movf	postinc2,w,c
  2823  002236  0A80               	xorlw	128
  2824  002238  580C               	subwfb	(??_fputc+4)& (0+255),w,c
  2825  00223A  B0D8               	btfsc	status,0,c
  2826  00223C  0012               	return	
  2827  00223E                     u2770:
  2828  00223E  EE20 F002          	lfsr	2,2
  2829  002242  5006               	movf	fputc@fp,w,c
  2830  002244  26D9               	addwf	fsr2l,f,c
  2831  002246  5007               	movf	fputc@fp+1,w,c
  2832  002248  22DA               	addwfc	fsr2h,f,c
  2833  00224A  CFDE F008          	movff	postinc2,??_fputc
  2834  00224E  CFDD F009          	movff	postdec2,??_fputc+1
  2835  002252  C006  FFD9         	movff	fputc@fp,fsr2l
  2836  002256  C007  FFDA         	movff	fputc@fp+1,fsr2h
  2837  00225A  CFDE F00A          	movff	postinc2,??_fputc+2
  2838  00225E  CFDD F00B          	movff	postdec2,??_fputc+3
  2839  002262  5008               	movf	??_fputc,w,c
  2840  002264  240A               	addwf	??_fputc+2,w,c
  2841  002266  6ED9               	movwf	fsr2l,c
  2842  002268  5009               	movf	??_fputc+1,w,c
  2843  00226A  200B               	addwfc	??_fputc+3,w,c
  2844  00226C  6EDA               	movwf	fsr2h,c
  2845  00226E  C004  FFDF         	movff	fputc@c,indf2
  2846  002272  EE20 F002          	lfsr	2,2
  2847  002276  5006               	movf	fputc@fp,w,c
  2848  002278  26D9               	addwf	fsr2l,f,c
  2849  00227A  5007               	movf	fputc@fp+1,w,c
  2850  00227C  22DA               	addwfc	fsr2h,f,c
  2851  00227E  2ADE               	incf	postinc2,f,c
  2852  002280  0E00               	movlw	0
  2853  002282  22DD               	addwfc	postdec2,f,c
  2854  002284  0012               	return		;funcret
  2855  002286                     __end_of_fputc:
  2856                           	opt callstack 0
  2857                           
  2858 ;; *************** function _putch *****************
  2859 ;; Defined at:
  2860 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  c               1    wreg     unsigned char 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  c               1    0[COMRAM] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2878 ;;Total ram usage:        0 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    1
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_fputc
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text13
  2889  0026E0                     __ptext13:
  2890                           	opt callstack 0
  2891  0026E0                     _putch:
  2892                           	opt callstack 22
  2893                           
  2894                           ;incstack = 0
  2895  0026E0  0012               	return		;funcret
  2896  0026E2                     __end_of_putch:
  2897                           	opt callstack 0
  2898                           
  2899 ;; *************** function _atoi *****************
  2900 ;; Defined at:
  2901 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2904 ;;		 -> STR_2(8), STR_1(7), 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  n               2   23[COMRAM] int 
  2907 ;;  neg             2   16[COMRAM] int 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  2   10[COMRAM] int 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2919 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2920 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2921 ;;Total ram usage:       15 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    2
  2924 ;; This function calls:
  2925 ;;		___wmul
  2926 ;;		_isdigit
  2927 ;;		_isspace
  2928 ;; This function is called by:
  2929 ;;		_vfpfcnvrt
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text14
  2934  001A70                     __ptext14:
  2935                           	opt callstack 0
  2936  001A70                     _atoi:
  2937                           	opt callstack 25
  2938                           
  2939                           ;incstack = 0
  2940  001A70  0E00               	movlw	0
  2941  001A72  6E19               	movwf	atoi@n+1,c
  2942  001A74  0E00               	movlw	0
  2943  001A76  6E18               	movwf	atoi@n,c
  2944  001A78  0E00               	movlw	0
  2945  001A7A  6E12               	movwf	atoi@neg+1,c
  2946  001A7C  0E00               	movlw	0
  2947  001A7E  6E11               	movwf	atoi@neg,c
  2948  001A80  D002               	goto	l3292
  2949  001A82                     l3290:
  2950  001A82  4A0B               	infsnz	atoi@s,f,c
  2951  001A84  2A0C               	incf	atoi@s+1,f,c
  2952  001A86                     l3292:
  2953  001A86  0E01               	movlw	1
  2954  001A88  6E17               	movwf	_atoi$1390,c
  2955  001A8A  C00B  FFF6         	movff	atoi@s,tblptrl
  2956  001A8E  C00C  FFF7         	movff	atoi@s+1,tblptrh
  2957  001A92                     	if	0	;tblptru may be non-zero
  2958  001A92                     	endif
  2959  001A92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2960  001A92  0E00               	movlw	low (__mediumconst shr (0+16))
  2961  001A94  6EF8               	movwf	tblptru,c
  2962  001A96                     	endif
  2963  001A96  0008               	tblrd		*
  2964  001A98  50F5               	movf	tablat,w,c
  2965  001A9A  0A20               	xorlw	32
  2966  001A9C  B4D8               	btfsc	status,2,c
  2967  001A9E  D01A               	goto	l3300
  2968  001AA0  0EF7               	movlw	247
  2969  001AA2  6E0D               	movwf	??_atoi& (0+255),c
  2970  001AA4  0EFF               	movlw	255
  2971  001AA6  6E0E               	movwf	(??_atoi+1)& (0+255),c
  2972  001AA8  C00B  FFF6         	movff	atoi@s,tblptrl
  2973  001AAC  C00C  FFF7         	movff	atoi@s+1,tblptrh
  2974  001AB0                     	if	0	;tblptru may be non-zero
  2975  001AB0                     	endif
  2976  001AB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2977  001AB0  0E00               	movlw	low (__mediumconst shr (0+16))
  2978  001AB2  6EF8               	movwf	tblptru,c
  2979  001AB4                     	endif
  2980  001AB4  0008               	tblrd		*
  2981  001AB6  50F5               	movf	tablat,w,c
  2982  001AB8  6E0F               	movwf	(??_atoi+2)& (0+255),c
  2983  001ABA  6A10               	clrf	(??_atoi+3)& (0+255),c
  2984  001ABC  500D               	movf	??_atoi,w,c
  2985  001ABE  260F               	addwf	??_atoi+2,f,c
  2986  001AC0  500E               	movf	??_atoi+1,w,c
  2987  001AC2  2210               	addwfc	??_atoi+3,f,c
  2988  001AC4  5010               	movf	??_atoi+3,w,c
  2989  001AC6  E104               	bnz	u3040
  2990  001AC8  0E05               	movlw	5
  2991  001ACA  5C0F               	subwf	??_atoi+2,w,c
  2992  001ACC  A0D8               	btfss	status,0,c
  2993  001ACE  D002               	goto	l3300
  2994  001AD0                     u3040:
  2995  001AD0  0E00               	movlw	0
  2996  001AD2  6E17               	movwf	_atoi$1390,c
  2997  001AD4                     l3300:
  2998  001AD4  C017  F013         	movff	_atoi$1390,_atoi$1389
  2999  001AD8  6A14               	clrf	_atoi$1389+1,c
  3000  001ADA  5013               	movf	_atoi$1389,w,c
  3001  001ADC  1014               	iorwf	_atoi$1389+1,w,c
  3002  001ADE  B4D8               	btfsc	status,2,c
  3003  001AE0  D008               	goto	l3310
  3004  001AE2  D7CF               	goto	l3290
  3005  001AE4                     l3306:
  3006  001AE4  0E00               	movlw	0
  3007  001AE6  6E12               	movwf	atoi@neg+1,c
  3008  001AE8  0E01               	movlw	1
  3009  001AEA  6E11               	movwf	atoi@neg,c
  3010  001AEC                     l3308:
  3011  001AEC  4A0B               	infsnz	atoi@s,f,c
  3012  001AEE  2A0C               	incf	atoi@s+1,f,c
  3013  001AF0  D032               	goto	l3316
  3014  001AF2                     l3310:
  3015  001AF2  C00B  FFF6         	movff	atoi@s,tblptrl
  3016  001AF6  C00C  FFF7         	movff	atoi@s+1,tblptrh
  3017  001AFA                     	if	0	;tblptru may be non-zero
  3018  001AFA                     	endif
  3019  001AFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3020  001AFA  0E00               	movlw	low (__mediumconst shr (0+16))
  3021  001AFC  6EF8               	movwf	tblptru,c
  3022  001AFE                     	endif
  3023  001AFE  0008               	tblrd		*
  3024  001B00  50F5               	movf	tablat,w,c
  3025  001B02  6E0D               	movwf	??_atoi& (0+255),c
  3026  001B04  6A0E               	clrf	(??_atoi+1)& (0+255),c
  3027                           
  3028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3029                           ; Switch size 1, requested type "simple"
  3030                           ; Number of cases is 1, Range of values is 0 to 0
  3031                           ; switch strategies available:
  3032                           ; Name         Instructions Cycles
  3033                           ; simple_byte            4     3 (average)
  3034                           ;	Chosen strategy is simple_byte
  3035  001B06  500E               	movf	??_atoi+1,w,c
  3036  001B08  0A00               	xorlw	0	; case 0
  3037  001B0A  A4D8               	btfss	status,2,c
  3038  001B0C  D024               	goto	l3316
  3039                           
  3040                           ; Switch size 1, requested type "simple"
  3041                           ; Number of cases is 2, Range of values is 43 to 45
  3042                           ; switch strategies available:
  3043                           ; Name         Instructions Cycles
  3044                           ; simple_byte            7     4 (average)
  3045                           ;	Chosen strategy is simple_byte
  3046  001B0E  500D               	movf	??_atoi,w,c
  3047  001B10  0A2B               	xorlw	43	; case 43
  3048  001B12  B4D8               	btfsc	status,2,c
  3049  001B14  D7EB               	goto	l3308
  3050  001B16  0A06               	xorlw	6	; case 45
  3051  001B18  B4D8               	btfsc	status,2,c
  3052  001B1A  D7E4               	goto	l3306
  3053  001B1C  D01C               	goto	l3316
  3054  001B1E                     l3312:
  3055  001B1E  C018  F004         	movff	atoi@n,___wmul@multiplier
  3056  001B22  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  3057  001B26  0E00               	movlw	0
  3058  001B28  6E07               	movwf	___wmul@multiplicand+1,c
  3059  001B2A  0E0A               	movlw	10
  3060  001B2C  6E06               	movwf	___wmul@multiplicand,c
  3061  001B2E  EC14  F013         	call	___wmul	;wreg free
  3062  001B32  C00B  FFF6         	movff	atoi@s,tblptrl
  3063  001B36  C00C  FFF7         	movff	atoi@s+1,tblptrh
  3064  001B3A                     	if	0	;tblptru may be non-zero
  3065  001B3A                     	endif
  3066  001B3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3067  001B3A  0E00               	movlw	low (__mediumconst shr (0+16))
  3068  001B3C  6EF8               	movwf	tblptru,c
  3069  001B3E                     	endif
  3070  001B3E  0008               	tblrd		*
  3071  001B40  50F5               	movf	tablat,w,c
  3072  001B42  5E04               	subwf	?___wmul,f,c
  3073  001B44  0E00               	movlw	0
  3074  001B46  5A05               	subwfb	?___wmul+1,f,c
  3075  001B48  0E30               	movlw	48
  3076  001B4A  2404               	addwf	?___wmul,w,c
  3077  001B4C  6E18               	movwf	atoi@n,c
  3078  001B4E  0E00               	movlw	0
  3079  001B50  2005               	addwfc	?___wmul+1,w,c
  3080  001B52  6E19               	movwf	atoi@n+1,c
  3081  001B54  D7CB               	goto	l3308
  3082  001B56                     l3316:
  3083  001B56  0ED0               	movlw	208
  3084  001B58  6E0D               	movwf	??_atoi& (0+255),c
  3085  001B5A  0EFF               	movlw	255
  3086  001B5C  6E0E               	movwf	(??_atoi+1)& (0+255),c
  3087  001B5E  C00B  FFF6         	movff	atoi@s,tblptrl
  3088  001B62  C00C  FFF7         	movff	atoi@s+1,tblptrh
  3089  001B66                     	if	0	;tblptru may be non-zero
  3090  001B66                     	endif
  3091  001B66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3092  001B66  0E00               	movlw	low (__mediumconst shr (0+16))
  3093  001B68  6EF8               	movwf	tblptru,c
  3094  001B6A                     	endif
  3095  001B6A  0008               	tblrd		*
  3096  001B6C  50F5               	movf	tablat,w,c
  3097  001B6E  6E0F               	movwf	(??_atoi+2)& (0+255),c
  3098  001B70  6A10               	clrf	(??_atoi+3)& (0+255),c
  3099  001B72  500D               	movf	??_atoi,w,c
  3100  001B74  260F               	addwf	??_atoi+2,f,c
  3101  001B76  500E               	movf	??_atoi+1,w,c
  3102  001B78  2210               	addwfc	??_atoi+3,f,c
  3103  001B7A  5010               	movf	??_atoi+3,w,c
  3104  001B7C  E106               	bnz	u3060
  3105  001B7E  0E0A               	movlw	10
  3106  001B80  5C0F               	subwf	??_atoi+2,w,c
  3107  001B82  B0D8               	btfsc	status,0,c
  3108  001B84  D002               	goto	u3060
  3109  001B86  0E01               	movlw	1
  3110  001B88  D001               	goto	u3070
  3111  001B8A                     u3060:
  3112  001B8A  0E00               	movlw	0
  3113  001B8C                     u3070:
  3114  001B8C  6E15               	movwf	_atoi$1391,c
  3115  001B8E  6A16               	clrf	_atoi$1391+1,c
  3116  001B90  5015               	movf	_atoi$1391,w,c
  3117  001B92  1016               	iorwf	_atoi$1391+1,w,c
  3118  001B94  A4D8               	btfss	status,2,c
  3119  001B96  D7C3               	goto	l3312
  3120  001B98  5011               	movf	atoi@neg,w,c
  3121  001B9A  1012               	iorwf	atoi@neg+1,w,c
  3122  001B9C  A4D8               	btfss	status,2,c
  3123  001B9E  D00D               	goto	l987
  3124  001BA0  C018  F00D         	movff	atoi@n,??_atoi
  3125  001BA4  C019  F00E         	movff	atoi@n+1,??_atoi+1
  3126  001BA8  1E0D               	comf	??_atoi,f,c
  3127  001BAA  1E0E               	comf	??_atoi+1,f,c
  3128  001BAC  4A0D               	infsnz	??_atoi,f,c
  3129  001BAE  2A0E               	incf	??_atoi+1,f,c
  3130  001BB0  C00D  F00B         	movff	??_atoi,?_atoi
  3131  001BB4  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  3132  001BB8  0012               	return	
  3133  001BBA                     l987:
  3134  001BBA  C018  F00B         	movff	atoi@n,?_atoi
  3135  001BBE  C019  F00C         	movff	atoi@n+1,?_atoi+1
  3136  001BC2  0012               	return		;funcret
  3137  001BC4                     __end_of_atoi:
  3138                           	opt callstack 0
  3139                           
  3140 ;; *************** function _isspace *****************
  3141 ;; Defined at:
  3142 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  c               2    3[COMRAM] int 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  2    3[COMRAM] int 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3158 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3159 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3160 ;;Total ram usage:        7 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    1
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_atoi
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text15
  3171  0024CC                     __ptext15:
  3172                           	opt callstack 0
  3173  0024CC                     _isspace:
  3174                           	opt callstack 25
  3175                           
  3176                           ;incstack = 0
  3177  0024CC  0E01               	movlw	1
  3178  0024CE  6E0A               	movwf	_isspace$1407,c
  3179  0024D0  0E20               	movlw	32
  3180  0024D2  1804               	xorwf	isspace@c,w,c
  3181  0024D4  1005               	iorwf	isspace@c+1,w,c
  3182  0024D6  B4D8               	btfsc	status,2,c
  3183  0024D8  D014               	goto	l3234
  3184  0024DA  0EF7               	movlw	247
  3185  0024DC  6E06               	movwf	??_isspace& (0+255),c
  3186  0024DE  0EFF               	movlw	255
  3187  0024E0  6E07               	movwf	(??_isspace+1)& (0+255),c
  3188  0024E2  C004  F008         	movff	isspace@c,??_isspace+2
  3189  0024E6  C005  F009         	movff	isspace@c+1,??_isspace+3
  3190  0024EA  5006               	movf	??_isspace,w,c
  3191  0024EC  2608               	addwf	??_isspace+2,f,c
  3192  0024EE  5007               	movf	??_isspace+1,w,c
  3193  0024F0  2209               	addwfc	??_isspace+3,f,c
  3194  0024F2  5009               	movf	??_isspace+3,w,c
  3195  0024F4  E104               	bnz	u2940
  3196  0024F6  0E05               	movlw	5
  3197  0024F8  5C08               	subwf	??_isspace+2,w,c
  3198  0024FA  A0D8               	btfss	status,0,c
  3199  0024FC  D002               	goto	l3234
  3200  0024FE                     u2940:
  3201  0024FE  0E00               	movlw	0
  3202  002500  6E0A               	movwf	_isspace$1407,c
  3203  002502                     l3234:
  3204  002502  C00A  F004         	movff	_isspace$1407,?_isspace
  3205  002506  6A05               	clrf	?_isspace+1,c
  3206  002508  0012               	return		;funcret
  3207  00250A                     __end_of_isspace:
  3208                           	opt callstack 0
  3209                           
  3210 ;; *************** function _isdigit *****************
  3211 ;; Defined at:
  3212 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  c               2    3[COMRAM] int 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  2    3[COMRAM] int 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3228 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3230 ;;Total ram usage:        6 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    1
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_vfpfcnvrt
  3237 ;;		_atoi
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text16
  3242  002576                     __ptext16:
  3243                           	opt callstack 0
  3244  002576                     _isdigit:
  3245                           	opt callstack 26
  3246                           
  3247                           ;incstack = 0
  3248  002576  0ED0               	movlw	208
  3249  002578  6E06               	movwf	??_isdigit& (0+255),c
  3250  00257A  0EFF               	movlw	255
  3251  00257C  6E07               	movwf	(??_isdigit+1)& (0+255),c
  3252  00257E  C004  F008         	movff	isdigit@c,??_isdigit+2
  3253  002582  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  3254  002586  5006               	movf	??_isdigit,w,c
  3255  002588  2608               	addwf	??_isdigit+2,f,c
  3256  00258A  5007               	movf	??_isdigit+1,w,c
  3257  00258C  2209               	addwfc	??_isdigit+3,f,c
  3258  00258E  5009               	movf	??_isdigit+3,w,c
  3259  002590  E106               	bnz	u2840
  3260  002592  0E0A               	movlw	10
  3261  002594  5C08               	subwf	??_isdigit+2,w,c
  3262  002596  B0D8               	btfsc	status,0,c
  3263  002598  D002               	goto	u2840
  3264  00259A  0E01               	movlw	1
  3265  00259C  D001               	goto	u2850
  3266  00259E                     u2840:
  3267  00259E  0E00               	movlw	0
  3268  0025A0                     u2850:
  3269  0025A0  6E04               	movwf	?_isdigit,c
  3270  0025A2  6A05               	clrf	?_isdigit+1,c
  3271  0025A4  0012               	return		;funcret
  3272  0025A6                     __end_of_isdigit:
  3273                           	opt callstack 0
  3274                           
  3275 ;; *************** function ___wmul *****************
  3276 ;; Defined at:
  3277 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  multiplier      2    3[COMRAM] unsigned int 
  3280 ;;  multiplicand    2    5[COMRAM] unsigned int 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  product         2    7[COMRAM] unsigned int 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  2    3[COMRAM] unsigned int 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0, prodl, prodh
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3295 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3296 ;;Total ram usage:        6 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    1
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_atoi
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text17
  3307  002628                     __ptext17:
  3308                           	opt callstack 0
  3309  002628                     ___wmul:
  3310                           	opt callstack 25
  3311                           
  3312                           ;incstack = 0
  3313  002628  5004               	movf	___wmul@multiplier,w,c
  3314  00262A  0206               	mulwf	___wmul@multiplicand,c
  3315  00262C  CFF3 F008          	movff	prodl,___wmul@product
  3316  002630  CFF4 F009          	movff	prodh,___wmul@product+1
  3317  002634  5004               	movf	___wmul@multiplier,w,c
  3318  002636  0207               	mulwf	___wmul@multiplicand+1,c
  3319  002638  50F3               	movf	prodl,w,c
  3320  00263A  2609               	addwf	___wmul@product+1,f,c
  3321  00263C  5005               	movf	___wmul@multiplier+1,w,c
  3322  00263E  0206               	mulwf	___wmul@multiplicand,c
  3323  002640  50F3               	movf	prodl,w,c
  3324  002642  2609               	addwf	___wmul@product+1,f,c
  3325  002644  C008  F004         	movff	___wmul@product,?___wmul
  3326  002648  C009  F005         	movff	___wmul@product+1,?___wmul+1
  3327  00264C  0012               	return		;funcret
  3328  00264E                     __end_of___wmul:
  3329                           	opt callstack 0
  3330                           
  3331 ;; *************** function _fijarVelocidad *****************
  3332 ;; Defined at:
  3333 ;;		line 20 in file "./../../LIBRERIAS/funciones_auto.h"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  speed           1    wreg     unsigned char 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  speed           1   66[COMRAM] unsigned char 
  3338 ;;  DC              4   58[COMRAM] float 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3349 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3351 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3352 ;;Total ram usage:        9 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    2
  3355 ;; This function calls:
  3356 ;;		___fladd
  3357 ;;		___flmul
  3358 ;;		___fltol
  3359 ;;		___xxtofl
  3360 ;; This function is called by:
  3361 ;;		_logicaEstadoSiguiente
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text18
  3366  001E00                     __ptext18:
  3367                           	opt callstack 0
  3368  001E00                     _fijarVelocidad:
  3369                           	opt callstack 27
  3370                           
  3371                           ;incstack = 0
  3372                           ;fijarVelocidad@speed stored from wreg
  3373  001E00  6E43               	movwf	fijarVelocidad@speed,c
  3374                           
  3375                           ;./../../LIBRERIAS/funciones_auto.h: 21:     float DC = 0.003 * speed + 0.6;
  3376  001E02  0EA6               	movlw	166
  3377  001E04  6E16               	movwf	___flmul@a,c
  3378  001E06  0E9B               	movlw	155
  3379  001E08  6E17               	movwf	___flmul@a+1,c
  3380  001E0A  0E44               	movlw	68
  3381  001E0C  6E18               	movwf	___flmul@a+2,c
  3382  001E0E  0E3B               	movlw	59
  3383  001E10  6E19               	movwf	___flmul@a+3,c
  3384  001E12  5043               	movf	fijarVelocidad@speed,w,c
  3385  001E14  6E04               	movwf	___xxtofl@val,c
  3386  001E16  6A05               	clrf	___xxtofl@val+1,c
  3387  001E18  6A06               	clrf	___xxtofl@val+2,c
  3388  001E1A  6A07               	clrf	___xxtofl@val+3,c
  3389  001E1C  0E01               	movlw	1
  3390  001E1E  ECE2  F00D         	call	___xxtofl
  3391  001E22  C004  F012         	movff	?___xxtofl,___flmul@b
  3392  001E26  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  3393  001E2A  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  3394  001E2E  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  3395  001E32  EC89  F007         	call	___flmul	;wreg free
  3396  001E36  C012  F02B         	movff	?___flmul,___fladd@b
  3397  001E3A  C013  F02C         	movff	?___flmul+1,___fladd@b+1
  3398  001E3E  C014  F02D         	movff	?___flmul+2,___fladd@b+2
  3399  001E42  C015  F02E         	movff	?___flmul+3,___fladd@b+3
  3400  001E46  0E9A               	movlw	154
  3401  001E48  6E2F               	movwf	___fladd@a,c
  3402  001E4A  0E99               	movlw	153
  3403  001E4C  6E30               	movwf	___fladd@a+1,c
  3404  001E4E  0E19               	movlw	25
  3405  001E50  6E31               	movwf	___fladd@a+2,c
  3406  001E52  0E3F               	movlw	63
  3407  001E54  6E32               	movwf	___fladd@a+3,c
  3408  001E56  ECDA  F00A         	call	___fladd	;wreg free
  3409  001E5A  C02B  F03B         	movff	?___fladd,fijarVelocidad@DC
  3410  001E5E  C02C  F03C         	movff	?___fladd+1,fijarVelocidad@DC+1
  3411  001E62  C02D  F03D         	movff	?___fladd+2,fijarVelocidad@DC+2
  3412  001E66  C02E  F03E         	movff	?___fladd+3,fijarVelocidad@DC+3
  3413                           
  3414                           ;./../../LIBRERIAS/funciones_auto.h: 22:     velocidad = 4 * DC * 125;
  3415  001E6A  0E00               	movlw	0
  3416  001E6C  6E16               	movwf	___flmul@a,c
  3417  001E6E  0E00               	movlw	0
  3418  001E70  6E17               	movwf	___flmul@a+1,c
  3419  001E72  0E80               	movlw	128
  3420  001E74  6E18               	movwf	___flmul@a+2,c
  3421  001E76  0E40               	movlw	64
  3422  001E78  6E19               	movwf	___flmul@a+3,c
  3423  001E7A  C03B  F012         	movff	fijarVelocidad@DC,___flmul@b
  3424  001E7E  C03C  F013         	movff	fijarVelocidad@DC+1,___flmul@b+1
  3425  001E82  C03D  F014         	movff	fijarVelocidad@DC+2,___flmul@b+2
  3426  001E86  C03E  F015         	movff	fijarVelocidad@DC+3,___flmul@b+3
  3427  001E8A  EC89  F007         	call	___flmul	;wreg free
  3428  001E8E  C012  F03F         	movff	?___flmul,_fijarVelocidad$1672
  3429  001E92  C013  F040         	movff	?___flmul+1,_fijarVelocidad$1672+1
  3430  001E96  C014  F041         	movff	?___flmul+2,_fijarVelocidad$1672+2
  3431  001E9A  C015  F042         	movff	?___flmul+3,_fijarVelocidad$1672+3
  3432                           
  3433                           ;./../../LIBRERIAS/funciones_auto.h: 22:     velocidad = 4 * DC * 125;
  3434  001E9E  0E00               	movlw	0
  3435  001EA0  6E16               	movwf	___flmul@a,c
  3436  001EA2  0E00               	movlw	0
  3437  001EA4  6E17               	movwf	___flmul@a+1,c
  3438  001EA6  0EFA               	movlw	250
  3439  001EA8  6E18               	movwf	___flmul@a+2,c
  3440  001EAA  0E42               	movlw	66
  3441  001EAC  6E19               	movwf	___flmul@a+3,c
  3442  001EAE  C03F  F012         	movff	_fijarVelocidad$1672,___flmul@b
  3443  001EB2  C040  F013         	movff	_fijarVelocidad$1672+1,___flmul@b+1
  3444  001EB6  C041  F014         	movff	_fijarVelocidad$1672+2,___flmul@b+2
  3445  001EBA  C042  F015         	movff	_fijarVelocidad$1672+3,___flmul@b+3
  3446  001EBE  EC89  F007         	call	___flmul	;wreg free
  3447  001EC2  C012  F02B         	movff	?___flmul,___fltol@f1
  3448  001EC6  C013  F02C         	movff	?___flmul+1,___fltol@f1+1
  3449  001ECA  C014  F02D         	movff	?___flmul+2,___fltol@f1+2
  3450  001ECE  C015  F02E         	movff	?___flmul+3,___fltol@f1+3
  3451  001ED2  EC3F  F010         	call	___fltol	;wreg free
  3452  001ED6  C02B  F082         	movff	?___fltol,_velocidad
  3453  001EDA  C02C  F083         	movff	?___fltol+1,_velocidad+1
  3454  001EDE  0012               	return		;funcret
  3455  001EE0                     __end_of_fijarVelocidad:
  3456                           	opt callstack 0
  3457                           
  3458 ;; *************** function ___xxtofl *****************
  3459 ;; Defined at:
  3460 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  sign            1    wreg     unsigned char 
  3463 ;;  val             4    3[COMRAM] long 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  sign            1   11[COMRAM] unsigned char 
  3466 ;;  arg             4   13[COMRAM] unsigned long 
  3467 ;;  exp             1   12[COMRAM] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  4    3[COMRAM] unsigned char 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3479 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3480 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3481 ;;Total ram usage:       14 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    1
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_fijarVelocidad
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text19
  3492  001BC4                     __ptext19:
  3493                           	opt callstack 0
  3494  001BC4                     ___xxtofl:
  3495                           	opt callstack 27
  3496                           
  3497                           ;incstack = 0
  3498                           ;___xxtofl@sign stored from wreg
  3499  001BC4  6E0C               	movwf	___xxtofl@sign,c
  3500  001BC6  500C               	movf	___xxtofl@sign,w,c
  3501  001BC8  A4D8               	btfss	status,2,c
  3502  001BCA  AE07               	btfss	___xxtofl@val+3,7,c
  3503  001BCC  D01A               	goto	l943
  3504  001BCE  C004  F008         	movff	___xxtofl@val,??___xxtofl
  3505  001BD2  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  3506  001BD6  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  3507  001BDA  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  3508  001BDE  1E08               	comf	??___xxtofl,f,c
  3509  001BE0  1E09               	comf	??___xxtofl+1,f,c
  3510  001BE2  1E0A               	comf	??___xxtofl+2,f,c
  3511  001BE4  1E0B               	comf	??___xxtofl+3,f,c
  3512  001BE6  2A08               	incf	??___xxtofl,f,c
  3513  001BE8  0E00               	movlw	0
  3514  001BEA  2209               	addwfc	??___xxtofl+1,f,c
  3515  001BEC  220A               	addwfc	??___xxtofl+2,f,c
  3516  001BEE  220B               	addwfc	??___xxtofl+3,f,c
  3517  001BF0  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  3518  001BF4  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  3519  001BF8  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  3520  001BFC  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  3521  001C00  D008               	goto	l2790
  3522  001C02                     l943:
  3523  001C02  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  3524  001C06  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3525  001C0A  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3526  001C0E  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3527  001C12                     l2790:
  3528  001C12  5004               	movf	___xxtofl@val,w,c
  3529  001C14  1005               	iorwf	___xxtofl@val+1,w,c
  3530  001C16  1006               	iorwf	___xxtofl@val+2,w,c
  3531  001C18  1007               	iorwf	___xxtofl@val+3,w,c
  3532  001C1A  A4D8               	btfss	status,2,c
  3533  001C1C  D009               	goto	l2796
  3534  001C1E  0E00               	movlw	0
  3535  001C20  6E04               	movwf	?___xxtofl,c
  3536  001C22  0E00               	movlw	0
  3537  001C24  6E05               	movwf	?___xxtofl+1,c
  3538  001C26  0E00               	movlw	0
  3539  001C28  6E06               	movwf	?___xxtofl+2,c
  3540  001C2A  0E00               	movlw	0
  3541  001C2C  6E07               	movwf	?___xxtofl+3,c
  3542  001C2E  0012               	return	
  3543  001C30                     l2796:
  3544  001C30  0E96               	movlw	150
  3545  001C32  6E0D               	movwf	___xxtofl@exp,c
  3546  001C34  D006               	goto	l2800
  3547  001C36                     l2798:
  3548  001C36  2A0D               	incf	___xxtofl@exp,f,c
  3549  001C38  90D8               	bcf	status,0,c
  3550  001C3A  3211               	rrcf	___xxtofl@arg+3,f,c
  3551  001C3C  3210               	rrcf	___xxtofl@arg+2,f,c
  3552  001C3E  320F               	rrcf	___xxtofl@arg+1,f,c
  3553  001C40  320E               	rrcf	___xxtofl@arg,f,c
  3554  001C42                     l2800:
  3555  001C42  0E00               	movlw	0
  3556  001C44  140E               	andwf	___xxtofl@arg,w,c
  3557  001C46  6E08               	movwf	??___xxtofl& (0+255),c
  3558  001C48  0E00               	movlw	0
  3559  001C4A  140F               	andwf	___xxtofl@arg+1,w,c
  3560  001C4C  6E09               	movwf	(??___xxtofl+1)& (0+255),c
  3561  001C4E  0E00               	movlw	0
  3562  001C50  1410               	andwf	___xxtofl@arg+2,w,c
  3563  001C52  6E0A               	movwf	(??___xxtofl+2)& (0+255),c
  3564  001C54  0EFE               	movlw	254
  3565  001C56  1411               	andwf	___xxtofl@arg+3,w,c
  3566  001C58  6E0B               	movwf	(??___xxtofl+3)& (0+255),c
  3567  001C5A  5008               	movf	??___xxtofl,w,c
  3568  001C5C  1009               	iorwf	??___xxtofl+1,w,c
  3569  001C5E  100A               	iorwf	??___xxtofl+2,w,c
  3570  001C60  100B               	iorwf	??___xxtofl+3,w,c
  3571  001C62  B4D8               	btfsc	status,2,c
  3572  001C64  D00D               	goto	l950
  3573  001C66  D7E7               	goto	l2798
  3574  001C68                     l2802:
  3575  001C68  2A0D               	incf	___xxtofl@exp,f,c
  3576  001C6A  0E01               	movlw	1
  3577  001C6C  260E               	addwf	___xxtofl@arg,f,c
  3578  001C6E  0E00               	movlw	0
  3579  001C70  220F               	addwfc	___xxtofl@arg+1,f,c
  3580  001C72  2210               	addwfc	___xxtofl@arg+2,f,c
  3581  001C74  2211               	addwfc	___xxtofl@arg+3,f,c
  3582  001C76  90D8               	bcf	status,0,c
  3583  001C78  3211               	rrcf	___xxtofl@arg+3,f,c
  3584  001C7A  3210               	rrcf	___xxtofl@arg+2,f,c
  3585  001C7C  320F               	rrcf	___xxtofl@arg+1,f,c
  3586  001C7E  320E               	rrcf	___xxtofl@arg,f,c
  3587  001C80                     l950:
  3588  001C80  0E00               	movlw	0
  3589  001C82  140E               	andwf	___xxtofl@arg,w,c
  3590  001C84  6E08               	movwf	??___xxtofl& (0+255),c
  3591  001C86  0E00               	movlw	0
  3592  001C88  140F               	andwf	___xxtofl@arg+1,w,c
  3593  001C8A  6E09               	movwf	(??___xxtofl+1)& (0+255),c
  3594  001C8C  0E00               	movlw	0
  3595  001C8E  1410               	andwf	___xxtofl@arg+2,w,c
  3596  001C90  6E0A               	movwf	(??___xxtofl+2)& (0+255),c
  3597  001C92  0EFF               	movlw	255
  3598  001C94  1411               	andwf	___xxtofl@arg+3,w,c
  3599  001C96  6E0B               	movwf	(??___xxtofl+3)& (0+255),c
  3600  001C98  5008               	movf	??___xxtofl,w,c
  3601  001C9A  1009               	iorwf	??___xxtofl+1,w,c
  3602  001C9C  100A               	iorwf	??___xxtofl+2,w,c
  3603  001C9E  100B               	iorwf	??___xxtofl+3,w,c
  3604  001CA0  B4D8               	btfsc	status,2,c
  3605  001CA2  D007               	goto	l2810
  3606  001CA4  D7E1               	goto	l2802
  3607  001CA6                     l2808:
  3608  001CA6  060D               	decf	___xxtofl@exp,f,c
  3609  001CA8  90D8               	bcf	status,0,c
  3610  001CAA  360E               	rlcf	___xxtofl@arg,f,c
  3611  001CAC  360F               	rlcf	___xxtofl@arg+1,f,c
  3612  001CAE  3610               	rlcf	___xxtofl@arg+2,f,c
  3613  001CB0  3611               	rlcf	___xxtofl@arg+3,f,c
  3614  001CB2                     l2810:
  3615  001CB2  BE10               	btfsc	___xxtofl@arg+2,7,c
  3616  001CB4  D003               	goto	u2570
  3617  001CB6  0E02               	movlw	2
  3618  001CB8  600D               	cpfslt	___xxtofl@exp,c
  3619  001CBA  D7F5               	goto	l2808
  3620  001CBC                     u2570:
  3621  001CBC  A00D               	btfss	___xxtofl@exp,0,c
  3622  001CBE  9E10               	bcf	___xxtofl@arg+2,7,c
  3623  001CC0  90D8               	bcf	status,0,c
  3624  001CC2  320D               	rrcf	___xxtofl@exp,f,c
  3625  001CC4  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  3626  001CC8  6A09               	clrf	(??___xxtofl+1)& (0+255),c
  3627  001CCA  6A0A               	clrf	(??___xxtofl+2)& (0+255),c
  3628  001CCC  6A0B               	clrf	(??___xxtofl+3)& (0+255),c
  3629  001CCE  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  3630  001CD2  6A0A               	clrf	??___xxtofl+2,c
  3631  001CD4  6A09               	clrf	??___xxtofl+1,c
  3632  001CD6  6A08               	clrf	??___xxtofl,c
  3633  001CD8  5008               	movf	??___xxtofl,w,c
  3634  001CDA  120E               	iorwf	___xxtofl@arg,f,c
  3635  001CDC  5009               	movf	??___xxtofl+1,w,c
  3636  001CDE  120F               	iorwf	___xxtofl@arg+1,f,c
  3637  001CE0  500A               	movf	??___xxtofl+2,w,c
  3638  001CE2  1210               	iorwf	___xxtofl@arg+2,f,c
  3639  001CE4  500B               	movf	??___xxtofl+3,w,c
  3640  001CE6  1211               	iorwf	___xxtofl@arg+3,f,c
  3641  001CE8  500C               	movf	___xxtofl@sign,w,c
  3642  001CEA  A4D8               	btfss	status,2,c
  3643  001CEC  AE07               	btfss	___xxtofl@val+3,7,c
  3644  001CEE  D001               	goto	l2826
  3645  001CF0  8E11               	bsf	___xxtofl@arg+3,7,c
  3646  001CF2                     l2826:
  3647  001CF2  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  3648  001CF6  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  3649  001CFA  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  3650  001CFE  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  3651  001D02  0012               	return		;funcret
  3652  001D04                     __end_of___xxtofl:
  3653                           	opt callstack 0
  3654                           
  3655 ;; *************** function ___fltol *****************
  3656 ;; Defined at:
  3657 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  f1              4   42[COMRAM] unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  exp1            1   51[COMRAM] unsigned char 
  3662 ;;  sign1           1   50[COMRAM] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  4   42[COMRAM] long 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3674 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;Total ram usage:       10 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    1
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_fijarVelocidad
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text20
  3687  00207E                     __ptext20:
  3688                           	opt callstack 0
  3689  00207E                     ___fltol:
  3690                           	opt callstack 27
  3691                           
  3692                           ;incstack = 0
  3693  00207E  342D               	rlcf	___fltol@f1+2,w,c
  3694  002080  342E               	rlcf	___fltol@f1+3,w,c
  3695  002082  6E34               	movwf	___fltol@exp1,c
  3696  002084  5034               	movf	___fltol@exp1,w,c
  3697  002086  A4D8               	btfss	status,2,c
  3698  002088  D009               	goto	l2746
  3699  00208A                     u2440:
  3700  00208A  0E00               	movlw	0
  3701  00208C  6E2B               	movwf	?___fltol,c
  3702  00208E  0E00               	movlw	0
  3703  002090  6E2C               	movwf	?___fltol+1,c
  3704  002092  0E00               	movlw	0
  3705  002094  6E2D               	movwf	?___fltol+2,c
  3706  002096  0E00               	movlw	0
  3707  002098  6E2E               	movwf	?___fltol+3,c
  3708  00209A  0012               	return	
  3709  00209C                     l2746:
  3710  00209C  C02B  F02F         	movff	___fltol@f1,??___fltol
  3711  0020A0  C02C  F030         	movff	___fltol@f1+1,??___fltol+1
  3712  0020A4  C02D  F031         	movff	___fltol@f1+2,??___fltol+2
  3713  0020A8  C02E  F032         	movff	___fltol@f1+3,??___fltol+3
  3714  0020AC  0E20               	movlw	32
  3715  0020AE  D005               	goto	u2450
  3716  0020B0                     u2455:
  3717  0020B0  90D8               	bcf	status,0,c
  3718  0020B2  3232               	rrcf	??___fltol+3,f,c
  3719  0020B4  3231               	rrcf	??___fltol+2,f,c
  3720  0020B6  3230               	rrcf	??___fltol+1,f,c
  3721  0020B8  322F               	rrcf	??___fltol,f,c
  3722  0020BA                     u2450:
  3723  0020BA  2EE8               	decfsz	wreg,f,c
  3724  0020BC  D7F9               	goto	u2455
  3725  0020BE  502F               	movf	??___fltol,w,c
  3726  0020C0  6E33               	movwf	___fltol@sign1,c
  3727  0020C2  8E2D               	bsf	___fltol@f1+2,7,c
  3728  0020C4  0EFF               	movlw	255
  3729  0020C6  162B               	andwf	___fltol@f1,f,c
  3730  0020C8  0EFF               	movlw	255
  3731  0020CA  162C               	andwf	___fltol@f1+1,f,c
  3732  0020CC  0EFF               	movlw	255
  3733  0020CE  162D               	andwf	___fltol@f1+2,f,c
  3734  0020D0  0E00               	movlw	0
  3735  0020D2  162E               	andwf	___fltol@f1+3,f,c
  3736  0020D4  0E96               	movlw	150
  3737  0020D6  5E34               	subwf	___fltol@exp1,f,c
  3738  0020D8  AE34               	btfss	___fltol@exp1,7,c
  3739  0020DA  D00D               	goto	l2766
  3740  0020DC  5034               	movf	___fltol@exp1,w,c
  3741  0020DE  0A80               	xorlw	128
  3742  0020E0  0F97               	addlw	151
  3743  0020E2  A0D8               	btfss	status,0,c
  3744  0020E4  D7D2               	goto	u2440
  3745  0020E6                     l2762:
  3746  0020E6  90D8               	bcf	status,0,c
  3747  0020E8  322E               	rrcf	___fltol@f1+3,f,c
  3748  0020EA  322D               	rrcf	___fltol@f1+2,f,c
  3749  0020EC  322C               	rrcf	___fltol@f1+1,f,c
  3750  0020EE  322B               	rrcf	___fltol@f1,f,c
  3751  0020F0  3E34               	incfsz	___fltol@exp1,f,c
  3752  0020F2  D7F9               	goto	l2762
  3753  0020F4  D00D               	goto	u2490
  3754  0020F6                     l2766:
  3755  0020F6  0E1F               	movlw	31
  3756  0020F8  6434               	cpfsgt	___fltol@exp1,c
  3757  0020FA  D007               	goto	l2774
  3758  0020FC  D7C6               	goto	u2440
  3759  0020FE                     l2772:
  3760  0020FE  90D8               	bcf	status,0,c
  3761  002100  362B               	rlcf	___fltol@f1,f,c
  3762  002102  362C               	rlcf	___fltol@f1+1,f,c
  3763  002104  362D               	rlcf	___fltol@f1+2,f,c
  3764  002106  362E               	rlcf	___fltol@f1+3,f,c
  3765  002108  0634               	decf	___fltol@exp1,f,c
  3766  00210A                     l2774:
  3767  00210A  5034               	movf	___fltol@exp1,w,c
  3768  00210C  A4D8               	btfss	status,2,c
  3769  00210E  D7F7               	goto	l2772
  3770  002110                     u2490:
  3771  002110  5033               	movf	___fltol@sign1,w,c
  3772  002112  B4D8               	btfsc	status,2,c
  3773  002114  D008               	goto	l2780
  3774  002116  1E2E               	comf	___fltol@f1+3,f,c
  3775  002118  1E2D               	comf	___fltol@f1+2,f,c
  3776  00211A  1E2C               	comf	___fltol@f1+1,f,c
  3777  00211C  6C2B               	negf	___fltol@f1,c
  3778  00211E  0E00               	movlw	0
  3779  002120  222C               	addwfc	___fltol@f1+1,f,c
  3780  002122  222D               	addwfc	___fltol@f1+2,f,c
  3781  002124  222E               	addwfc	___fltol@f1+3,f,c
  3782  002126                     l2780:
  3783  002126  C02B  F02B         	movff	___fltol@f1,?___fltol
  3784  00212A  C02C  F02C         	movff	___fltol@f1+1,?___fltol+1
  3785  00212E  C02D  F02D         	movff	___fltol@f1+2,?___fltol+2
  3786  002132  C02E  F02E         	movff	___fltol@f1+3,?___fltol+3
  3787  002136  0012               	return		;funcret
  3788  002138                     __end_of___fltol:
  3789                           	opt callstack 0
  3790                           
  3791 ;; *************** function ___flmul *****************
  3792 ;; Defined at:
  3793 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  b               4   17[COMRAM] long 
  3796 ;;  a               4   21[COMRAM] long 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  prod            4   36[COMRAM] struct .
  3799 ;;  grs             4   30[COMRAM] unsigned long 
  3800 ;;  temp            2   40[COMRAM] struct .
  3801 ;;  bexp            1   35[COMRAM] unsigned char 
  3802 ;;  aexp            1   34[COMRAM] unsigned char 
  3803 ;;  sign            1   29[COMRAM] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  4   17[COMRAM] unsigned char 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0, prodl, prodh
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3813 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3815 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3816 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3817 ;;Total ram usage:       25 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    1
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_fijarVelocidad
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text21
  3828  000F12                     __ptext21:
  3829                           	opt callstack 0
  3830  000F12                     ___flmul:
  3831                           	opt callstack 27
  3832                           
  3833                           ;incstack = 0
  3834  000F12  5015               	movf	___flmul@b+3,w,c
  3835  000F14  0B80               	andlw	128
  3836  000F16  6E1E               	movwf	___flmul@sign,c
  3837  000F18  5015               	movf	___flmul@b+3,w,c
  3838  000F1A  2415               	addwf	___flmul@b+3,w,c
  3839  000F1C  6E24               	movwf	___flmul@bexp,c
  3840  000F1E  BE14               	btfsc	___flmul@b+2,7,c
  3841  000F20  8024               	bsf	___flmul@bexp,0,c
  3842  000F22  5024               	movf	___flmul@bexp,w,c
  3843  000F24  B4D8               	btfsc	status,2,c
  3844  000F26  D00D               	goto	l2624
  3845  000F28  2824               	incf	___flmul@bexp,w,c
  3846  000F2A  A4D8               	btfss	status,2,c
  3847  000F2C  D008               	goto	l2622
  3848  000F2E  0E00               	movlw	0
  3849  000F30  6E12               	movwf	___flmul@b,c
  3850  000F32  0E00               	movlw	0
  3851  000F34  6E13               	movwf	___flmul@b+1,c
  3852  000F36  0E00               	movlw	0
  3853  000F38  6E14               	movwf	___flmul@b+2,c
  3854  000F3A  0E00               	movlw	0
  3855  000F3C  6E15               	movwf	___flmul@b+3,c
  3856  000F3E                     l2622:
  3857  000F3E  8E14               	bsf	___flmul@b+2,7,c
  3858  000F40  D008               	goto	l2626
  3859  000F42                     l2624:
  3860  000F42  0E00               	movlw	0
  3861  000F44  6E12               	movwf	___flmul@b,c
  3862  000F46  0E00               	movlw	0
  3863  000F48  6E13               	movwf	___flmul@b+1,c
  3864  000F4A  0E00               	movlw	0
  3865  000F4C  6E14               	movwf	___flmul@b+2,c
  3866  000F4E  0E00               	movlw	0
  3867  000F50  6E15               	movwf	___flmul@b+3,c
  3868  000F52                     l2626:
  3869  000F52  5019               	movf	___flmul@a+3,w,c
  3870  000F54  0B80               	andlw	128
  3871  000F56  1A1E               	xorwf	___flmul@sign,f,c
  3872  000F58  5019               	movf	___flmul@a+3,w,c
  3873  000F5A  2419               	addwf	___flmul@a+3,w,c
  3874  000F5C  6E23               	movwf	___flmul@aexp,c
  3875  000F5E  BE18               	btfsc	___flmul@a+2,7,c
  3876  000F60  8023               	bsf	___flmul@aexp,0,c
  3877  000F62  5023               	movf	___flmul@aexp,w,c
  3878  000F64  B4D8               	btfsc	status,2,c
  3879  000F66  D00D               	goto	l2642
  3880  000F68  2823               	incf	___flmul@aexp,w,c
  3881  000F6A  A4D8               	btfss	status,2,c
  3882  000F6C  D008               	goto	l2640
  3883  000F6E  0E00               	movlw	0
  3884  000F70  6E16               	movwf	___flmul@a,c
  3885  000F72  0E00               	movlw	0
  3886  000F74  6E17               	movwf	___flmul@a+1,c
  3887  000F76  0E00               	movlw	0
  3888  000F78  6E18               	movwf	___flmul@a+2,c
  3889  000F7A  0E00               	movlw	0
  3890  000F7C  6E19               	movwf	___flmul@a+3,c
  3891  000F7E                     l2640:
  3892  000F7E  8E18               	bsf	___flmul@a+2,7,c
  3893  000F80  D008               	goto	l902
  3894  000F82                     l2642:
  3895  000F82  0E00               	movlw	0
  3896  000F84  6E16               	movwf	___flmul@a,c
  3897  000F86  0E00               	movlw	0
  3898  000F88  6E17               	movwf	___flmul@a+1,c
  3899  000F8A  0E00               	movlw	0
  3900  000F8C  6E18               	movwf	___flmul@a+2,c
  3901  000F8E  0E00               	movlw	0
  3902  000F90  6E19               	movwf	___flmul@a+3,c
  3903  000F92                     l902:
  3904  000F92  5023               	movf	___flmul@aexp,w,c
  3905  000F94  B4D8               	btfsc	status,2,c
  3906  000F96  D003               	goto	u2320
  3907  000F98  5024               	movf	___flmul@bexp,w,c
  3908  000F9A  A4D8               	btfss	status,2,c
  3909  000F9C  D009               	goto	l2650
  3910  000F9E                     u2320:
  3911  000F9E  0E00               	movlw	0
  3912  000FA0  6E12               	movwf	?___flmul,c
  3913  000FA2  0E00               	movlw	0
  3914  000FA4  6E13               	movwf	?___flmul+1,c
  3915  000FA6  0E00               	movlw	0
  3916  000FA8  6E14               	movwf	?___flmul+2,c
  3917  000FAA  0E00               	movlw	0
  3918  000FAC  6E15               	movwf	?___flmul+3,c
  3919  000FAE  0012               	return	
  3920  000FB0                     l2650:
  3921  000FB0  5018               	movf	___flmul@a+2,w,c
  3922  000FB2  0212               	mulwf	___flmul@b,c
  3923  000FB4  CFF3 F029          	movff	prodl,___flmul@temp
  3924  000FB8  CFF4 F02A          	movff	prodh,___flmul@temp+1
  3925  000FBC  5029               	movf	___flmul@temp,w,c
  3926  000FBE  6E1F               	movwf	___flmul@grs,c
  3927  000FC0  6A20               	clrf	___flmul@grs+1,c
  3928  000FC2  6A21               	clrf	___flmul@grs+2,c
  3929  000FC4  6A22               	clrf	___flmul@grs+3,c
  3930  000FC6  502A               	movf	___flmul@temp+1,w,c
  3931  000FC8  6E25               	movwf	___flmul@prod,c
  3932  000FCA  6A26               	clrf	___flmul@prod+1,c
  3933  000FCC  6A27               	clrf	___flmul@prod+2,c
  3934  000FCE  6A28               	clrf	___flmul@prod+3,c
  3935  000FD0  5017               	movf	___flmul@a+1,w,c
  3936  000FD2  0213               	mulwf	___flmul@b+1,c
  3937  000FD4  CFF3 F029          	movff	prodl,___flmul@temp
  3938  000FD8  CFF4 F02A          	movff	prodh,___flmul@temp+1
  3939  000FDC  5029               	movf	___flmul@temp,w,c
  3940  000FDE  261F               	addwf	___flmul@grs,f,c
  3941  000FE0  0E00               	movlw	0
  3942  000FE2  2220               	addwfc	___flmul@grs+1,f,c
  3943  000FE4  2221               	addwfc	___flmul@grs+2,f,c
  3944  000FE6  2222               	addwfc	___flmul@grs+3,f,c
  3945  000FE8  502A               	movf	___flmul@temp+1,w,c
  3946  000FEA  2625               	addwf	___flmul@prod,f,c
  3947  000FEC  0E00               	movlw	0
  3948  000FEE  2226               	addwfc	___flmul@prod+1,f,c
  3949  000FF0  2227               	addwfc	___flmul@prod+2,f,c
  3950  000FF2  2228               	addwfc	___flmul@prod+3,f,c
  3951  000FF4  5016               	movf	___flmul@a,w,c
  3952  000FF6  0214               	mulwf	___flmul@b+2,c
  3953  000FF8  CFF3 F029          	movff	prodl,___flmul@temp
  3954  000FFC  CFF4 F02A          	movff	prodh,___flmul@temp+1
  3955  001000  5029               	movf	___flmul@temp,w,c
  3956  001002  261F               	addwf	___flmul@grs,f,c
  3957  001004  0E00               	movlw	0
  3958  001006  2220               	addwfc	___flmul@grs+1,f,c
  3959  001008  2221               	addwfc	___flmul@grs+2,f,c
  3960  00100A  2222               	addwfc	___flmul@grs+3,f,c
  3961  00100C  502A               	movf	___flmul@temp+1,w,c
  3962  00100E  2625               	addwf	___flmul@prod,f,c
  3963  001010  0E00               	movlw	0
  3964  001012  2226               	addwfc	___flmul@prod+1,f,c
  3965  001014  2227               	addwfc	___flmul@prod+2,f,c
  3966  001016  2228               	addwfc	___flmul@prod+3,f,c
  3967  001018  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  3968  00101C  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  3969  001020  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  3970  001024  6A1F               	clrf	___flmul@grs,c
  3971  001026  5016               	movf	___flmul@a,w,c
  3972  001028  0213               	mulwf	___flmul@b+1,c
  3973  00102A  CFF3 F029          	movff	prodl,___flmul@temp
  3974  00102E  CFF4 F02A          	movff	prodh,___flmul@temp+1
  3975  001032  5029               	movf	___flmul@temp,w,c
  3976  001034  261F               	addwf	___flmul@grs,f,c
  3977  001036  502A               	movf	___flmul@temp+1,w,c
  3978  001038  2220               	addwfc	___flmul@grs+1,f,c
  3979  00103A  0E00               	movlw	0
  3980  00103C  2221               	addwfc	___flmul@grs+2,f,c
  3981  00103E  0E00               	movlw	0
  3982  001040  2222               	addwfc	___flmul@grs+3,f,c
  3983  001042  5017               	movf	___flmul@a+1,w,c
  3984  001044  0212               	mulwf	___flmul@b,c
  3985  001046  CFF3 F029          	movff	prodl,___flmul@temp
  3986  00104A  CFF4 F02A          	movff	prodh,___flmul@temp+1
  3987  00104E  5029               	movf	___flmul@temp,w,c
  3988  001050  261F               	addwf	___flmul@grs,f,c
  3989  001052  502A               	movf	___flmul@temp+1,w,c
  3990  001054  2220               	addwfc	___flmul@grs+1,f,c
  3991  001056  0E00               	movlw	0
  3992  001058  2221               	addwfc	___flmul@grs+2,f,c
  3993  00105A  0E00               	movlw	0
  3994  00105C  2222               	addwfc	___flmul@grs+3,f,c
  3995  00105E  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  3996  001062  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  3997  001066  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  3998  00106A  6A1F               	clrf	___flmul@grs,c
  3999  00106C  5016               	movf	___flmul@a,w,c
  4000  00106E  0212               	mulwf	___flmul@b,c
  4001  001070  CFF3 F029          	movff	prodl,___flmul@temp
  4002  001074  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4003  001078  5029               	movf	___flmul@temp,w,c
  4004  00107A  261F               	addwf	___flmul@grs,f,c
  4005  00107C  502A               	movf	___flmul@temp+1,w,c
  4006  00107E  2220               	addwfc	___flmul@grs+1,f,c
  4007  001080  0E00               	movlw	0
  4008  001082  2221               	addwfc	___flmul@grs+2,f,c
  4009  001084  0E00               	movlw	0
  4010  001086  2222               	addwfc	___flmul@grs+3,f,c
  4011  001088  5018               	movf	___flmul@a+2,w,c
  4012  00108A  0213               	mulwf	___flmul@b+1,c
  4013  00108C  CFF3 F029          	movff	prodl,___flmul@temp
  4014  001090  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4015  001094  5029               	movf	___flmul@temp,w,c
  4016  001096  2625               	addwf	___flmul@prod,f,c
  4017  001098  502A               	movf	___flmul@temp+1,w,c
  4018  00109A  2226               	addwfc	___flmul@prod+1,f,c
  4019  00109C  0E00               	movlw	0
  4020  00109E  2227               	addwfc	___flmul@prod+2,f,c
  4021  0010A0  0E00               	movlw	0
  4022  0010A2  2228               	addwfc	___flmul@prod+3,f,c
  4023  0010A4  5017               	movf	___flmul@a+1,w,c
  4024  0010A6  0214               	mulwf	___flmul@b+2,c
  4025  0010A8  CFF3 F029          	movff	prodl,___flmul@temp
  4026  0010AC  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4027  0010B0  5029               	movf	___flmul@temp,w,c
  4028  0010B2  2625               	addwf	___flmul@prod,f,c
  4029  0010B4  502A               	movf	___flmul@temp+1,w,c
  4030  0010B6  2226               	addwfc	___flmul@prod+1,f,c
  4031  0010B8  0E00               	movlw	0
  4032  0010BA  2227               	addwfc	___flmul@prod+2,f,c
  4033  0010BC  0E00               	movlw	0
  4034  0010BE  2228               	addwfc	___flmul@prod+3,f,c
  4035  0010C0  5018               	movf	___flmul@a+2,w,c
  4036  0010C2  0214               	mulwf	___flmul@b+2,c
  4037  0010C4  CFF3 F029          	movff	prodl,___flmul@temp
  4038  0010C8  CFF4 F02A          	movff	prodh,___flmul@temp+1
  4039  0010CC  5029               	movf	___flmul@temp,w,c
  4040  0010CE  6E1A               	movwf	??___flmul& (0+255),c
  4041  0010D0  502A               	movf	___flmul@temp+1,w,c
  4042  0010D2  6E1B               	movwf	(??___flmul+1)& (0+255),c
  4043  0010D4  6A1C               	clrf	(??___flmul+2)& (0+255),c
  4044  0010D6  6A1D               	clrf	(??___flmul+3)& (0+255),c
  4045  0010D8  C01C  F01D         	movff	??___flmul+2,??___flmul+3
  4046  0010DC  C01B  F01C         	movff	??___flmul+1,??___flmul+2
  4047  0010E0  C01A  F01B         	movff	??___flmul,??___flmul+1
  4048  0010E4  6A1A               	clrf	??___flmul,c
  4049  0010E6  501A               	movf	??___flmul,w,c
  4050  0010E8  2625               	addwf	___flmul@prod,f,c
  4051  0010EA  501B               	movf	??___flmul+1,w,c
  4052  0010EC  2226               	addwfc	___flmul@prod+1,f,c
  4053  0010EE  501C               	movf	??___flmul+2,w,c
  4054  0010F0  2227               	addwfc	___flmul@prod+2,f,c
  4055  0010F2  501D               	movf	??___flmul+3,w,c
  4056  0010F4  2228               	addwfc	___flmul@prod+3,f,c
  4057  0010F6  C01F  F01A         	movff	___flmul@grs,??___flmul
  4058  0010FA  C020  F01B         	movff	___flmul@grs+1,??___flmul+1
  4059  0010FE  C021  F01C         	movff	___flmul@grs+2,??___flmul+2
  4060  001102  C022  F01D         	movff	___flmul@grs+3,??___flmul+3
  4061  001106  0E19               	movlw	25
  4062  001108  D005               	goto	u2330
  4063  00110A                     u2335:
  4064  00110A  90D8               	bcf	status,0,c
  4065  00110C  321D               	rrcf	??___flmul+3,f,c
  4066  00110E  321C               	rrcf	??___flmul+2,f,c
  4067  001110  321B               	rrcf	??___flmul+1,f,c
  4068  001112  321A               	rrcf	??___flmul,f,c
  4069  001114                     u2330:
  4070  001114  2EE8               	decfsz	wreg,f,c
  4071  001116  D7F9               	goto	u2335
  4072  001118  501A               	movf	??___flmul,w,c
  4073  00111A  2625               	addwf	___flmul@prod,f,c
  4074  00111C  501B               	movf	??___flmul+1,w,c
  4075  00111E  2226               	addwfc	___flmul@prod+1,f,c
  4076  001120  501C               	movf	??___flmul+2,w,c
  4077  001122  2227               	addwfc	___flmul@prod+2,f,c
  4078  001124  501D               	movf	??___flmul+3,w,c
  4079  001126  2228               	addwfc	___flmul@prod+3,f,c
  4080  001128  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  4081  00112C  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  4082  001130  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  4083  001134  6A1F               	clrf	___flmul@grs,c
  4084  001136  5023               	movf	___flmul@aexp,w,c
  4085  001138  C024  F01A         	movff	___flmul@bexp,??___flmul
  4086  00113C  6A1B               	clrf	(??___flmul+1)& (0+255),c
  4087  00113E  261A               	addwf	??___flmul,f,c
  4088  001140  0E00               	movlw	0
  4089  001142  221B               	addwfc	??___flmul+1,f,c
  4090  001144  0E82               	movlw	130
  4091  001146  241A               	addwf	??___flmul,w,c
  4092  001148  6E29               	movwf	___flmul@temp,c
  4093  00114A  0EFF               	movlw	255
  4094  00114C  201B               	addwfc	??___flmul+1,w,c
  4095  00114E  6E2A               	movwf	___flmul@temp+1,c
  4096  001150  D00F               	goto	l2698
  4097  001152                     l2692:
  4098  001152  90D8               	bcf	status,0,c
  4099  001154  3625               	rlcf	___flmul@prod,f,c
  4100  001156  3626               	rlcf	___flmul@prod+1,f,c
  4101  001158  3627               	rlcf	___flmul@prod+2,f,c
  4102  00115A  3628               	rlcf	___flmul@prod+3,f,c
  4103  00115C  BE22               	btfsc	___flmul@grs+3,7,c
  4104  00115E  8025               	bsf	___flmul@prod,0,c
  4105  001160  90D8               	bcf	status,0,c
  4106  001162  361F               	rlcf	___flmul@grs,f,c
  4107  001164  3620               	rlcf	___flmul@grs+1,f,c
  4108  001166  3621               	rlcf	___flmul@grs+2,f,c
  4109  001168  3622               	rlcf	___flmul@grs+3,f,c
  4110  00116A  0629               	decf	___flmul@temp,f,c
  4111  00116C  A0D8               	btfss	status,0,c
  4112  00116E  062A               	decf	___flmul@temp+1,f,c
  4113  001170                     l2698:
  4114  001170  AE27               	btfss	___flmul@prod+2,7,c
  4115  001172  D7EF               	goto	l2692
  4116  001174  0E00               	movlw	0
  4117  001176  6E23               	movwf	___flmul@aexp,c
  4118  001178  AE22               	btfss	___flmul@grs+3,7,c
  4119  00117A  D017               	goto	l911
  4120  00117C  0EFF               	movlw	255
  4121  00117E  141F               	andwf	___flmul@grs,w,c
  4122  001180  6E1A               	movwf	??___flmul& (0+255),c
  4123  001182  0EFF               	movlw	255
  4124  001184  1420               	andwf	___flmul@grs+1,w,c
  4125  001186  6E1B               	movwf	(??___flmul+1)& (0+255),c
  4126  001188  0EFF               	movlw	255
  4127  00118A  1421               	andwf	___flmul@grs+2,w,c
  4128  00118C  6E1C               	movwf	(??___flmul+2)& (0+255),c
  4129  00118E  0E7F               	movlw	127
  4130  001190  1422               	andwf	___flmul@grs+3,w,c
  4131  001192  6E1D               	movwf	(??___flmul+3)& (0+255),c
  4132  001194  501A               	movf	??___flmul,w,c
  4133  001196  101B               	iorwf	??___flmul+1,w,c
  4134  001198  101C               	iorwf	??___flmul+2,w,c
  4135  00119A  101D               	iorwf	??___flmul+3,w,c
  4136  00119C  B4D8               	btfsc	status,2,c
  4137  00119E  D003               	goto	l912
  4138  0011A0                     u2370:
  4139  0011A0  0E01               	movlw	1
  4140  0011A2  6E23               	movwf	___flmul@aexp,c
  4141  0011A4  D002               	goto	l911
  4142  0011A6                     l912:
  4143  0011A6  B025               	btfsc	___flmul@prod,0,c
  4144  0011A8  D7FB               	goto	u2370
  4145  0011AA                     l911:
  4146  0011AA  5023               	movf	___flmul@aexp,w,c
  4147  0011AC  B4D8               	btfsc	status,2,c
  4148  0011AE  D01F               	goto	l2718
  4149  0011B0  0E01               	movlw	1
  4150  0011B2  2625               	addwf	___flmul@prod,f,c
  4151  0011B4  0E00               	movlw	0
  4152  0011B6  2226               	addwfc	___flmul@prod+1,f,c
  4153  0011B8  2227               	addwfc	___flmul@prod+2,f,c
  4154  0011BA  2228               	addwfc	___flmul@prod+3,f,c
  4155  0011BC  A028               	btfss	___flmul@prod+3,0,c
  4156  0011BE  D017               	goto	l2718
  4157  0011C0  C025  F01A         	movff	___flmul@prod,??___flmul
  4158  0011C4  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
  4159  0011C8  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
  4160  0011CC  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
  4161  0011D0  341D               	rlcf	??___flmul+3,w,c
  4162  0011D2  321D               	rrcf	??___flmul+3,f,c
  4163  0011D4  321C               	rrcf	??___flmul+2,f,c
  4164  0011D6  321B               	rrcf	??___flmul+1,f,c
  4165  0011D8  321A               	rrcf	??___flmul,f,c
  4166  0011DA  C01A  F025         	movff	??___flmul,___flmul@prod
  4167  0011DE  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
  4168  0011E2  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
  4169  0011E6  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
  4170  0011EA  4A29               	infsnz	___flmul@temp,f,c
  4171  0011EC  2A2A               	incf	___flmul@temp+1,f,c
  4172  0011EE                     l2718:
  4173  0011EE  BE2A               	btfsc	___flmul@temp+1,7,c
  4174  0011F0  D00D               	goto	l2722
  4175  0011F2  502A               	movf	___flmul@temp+1,w,c
  4176  0011F4  E103               	bnz	u2410
  4177  0011F6  2829               	incf	___flmul@temp,w,c
  4178  0011F8  A0D8               	btfss	status,0,c
  4179  0011FA  D008               	goto	l2722
  4180  0011FC                     u2410:
  4181  0011FC  0E00               	movlw	0
  4182  0011FE  6E25               	movwf	___flmul@prod,c
  4183  001200  0E00               	movlw	0
  4184  001202  6E26               	movwf	___flmul@prod+1,c
  4185  001204  0E80               	movlw	128
  4186  001206  6E27               	movwf	___flmul@prod+2,c
  4187  001208  0E7F               	movlw	127
  4188  00120A  D020               	goto	L2
  4189  00120C                     l2722:
  4190  00120C  BE2A               	btfsc	___flmul@temp+1,7,c
  4191  00120E  D005               	goto	u2420
  4192  001210  502A               	movf	___flmul@temp+1,w,c
  4193  001212  E10E               	bnz	l919
  4194  001214  0429               	decf	___flmul@temp,w,c
  4195  001216  B0D8               	btfsc	status,0,c
  4196  001218  D00B               	goto	l919
  4197  00121A                     u2420:
  4198  00121A  0E00               	movlw	0
  4199  00121C  6E25               	movwf	___flmul@prod,c
  4200  00121E  0E00               	movlw	0
  4201  001220  6E26               	movwf	___flmul@prod+1,c
  4202  001222  0E00               	movlw	0
  4203  001224  6E27               	movwf	___flmul@prod+2,c
  4204  001226  0E00               	movlw	0
  4205  001228  6E28               	movwf	___flmul@prod+3,c
  4206  00122A  0E00               	movlw	0
  4207  00122C  6E1E               	movwf	___flmul@sign,c
  4208  00122E  D00F               	goto	l2734
  4209  001230                     l919:
  4210  001230  C029  F024         	movff	___flmul@temp,___flmul@bexp
  4211  001234  0EFF               	movlw	255
  4212  001236  1625               	andwf	___flmul@prod,f,c
  4213  001238  0EFF               	movlw	255
  4214  00123A  1626               	andwf	___flmul@prod+1,f,c
  4215  00123C  0E7F               	movlw	127
  4216  00123E  1627               	andwf	___flmul@prod+2,f,c
  4217  001240  0E00               	movlw	0
  4218  001242  1628               	andwf	___flmul@prod+3,f,c
  4219  001244  B024               	btfsc	___flmul@bexp,0,c
  4220  001246  8E27               	bsf	___flmul@prod+2,7,c
  4221  001248  90D8               	bcf	status,0,c
  4222  00124A  3024               	rrcf	___flmul@bexp,w,c
  4223  00124C                     L2:
  4224  00124C  6E28               	movwf	___flmul@prod+3,c
  4225  00124E                     l2734:
  4226  00124E  501E               	movf	___flmul@sign,w,c
  4227  001250  1228               	iorwf	___flmul@prod+3,f,c
  4228  001252  C025  F012         	movff	___flmul@prod,?___flmul
  4229  001256  C026  F013         	movff	___flmul@prod+1,?___flmul+1
  4230  00125A  C027  F014         	movff	___flmul@prod+2,?___flmul+2
  4231  00125E  C028  F015         	movff	___flmul@prod+3,?___flmul+3
  4232  001262  0012               	return		;funcret
  4233  001264                     __end_of___flmul:
  4234                           	opt callstack 0
  4235                           
  4236 ;; *************** function ___fladd *****************
  4237 ;; Defined at:
  4238 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  b               4   42[COMRAM] unsigned char 
  4241 ;;  a               4   46[COMRAM] unsigned char 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  grs             1   57[COMRAM] unsigned char 
  4244 ;;  bexp            1   56[COMRAM] unsigned char 
  4245 ;;  aexp            1   55[COMRAM] unsigned char 
  4246 ;;  signs           1   54[COMRAM] unsigned char 
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  4   42[COMRAM] unsigned char 
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4256 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4257 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4258 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4259 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4260 ;;Total ram usage:       16 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_fijarVelocidad
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text22
  4271  0015B4                     __ptext22:
  4272                           	opt callstack 0
  4273  0015B4                     ___fladd:
  4274                           	opt callstack 27
  4275                           
  4276                           ;incstack = 0
  4277  0015B4  502E               	movf	___fladd@b+3,w,c
  4278  0015B6  0B80               	andlw	128
  4279  0015B8  6E37               	movwf	___fladd@signs,c
  4280  0015BA  502E               	movf	___fladd@b+3,w,c
  4281  0015BC  242E               	addwf	___fladd@b+3,w,c
  4282  0015BE  6E39               	movwf	___fladd@bexp,c
  4283  0015C0  BE2D               	btfsc	___fladd@b+2,7,c
  4284  0015C2  8039               	bsf	___fladd@bexp,0,c
  4285  0015C4  5039               	movf	___fladd@bexp,w,c
  4286  0015C6  B4D8               	btfsc	status,2,c
  4287  0015C8  D00D               	goto	l2424
  4288  0015CA  2839               	incf	___fladd@bexp,w,c
  4289  0015CC  A4D8               	btfss	status,2,c
  4290  0015CE  D008               	goto	l2420
  4291  0015D0  0E00               	movlw	0
  4292  0015D2  6E2B               	movwf	___fladd@b,c
  4293  0015D4  0E00               	movlw	0
  4294  0015D6  6E2C               	movwf	___fladd@b+1,c
  4295  0015D8  0E00               	movlw	0
  4296  0015DA  6E2D               	movwf	___fladd@b+2,c
  4297  0015DC  0E00               	movlw	0
  4298  0015DE  6E2E               	movwf	___fladd@b+3,c
  4299  0015E0                     l2420:
  4300  0015E0  8E2D               	bsf	___fladd@b+2,7,c
  4301  0015E2  D006               	goto	L3
  4302  0015E4                     l2424:
  4303  0015E4  0E00               	movlw	0
  4304  0015E6  6E2B               	movwf	___fladd@b,c
  4305  0015E8  0E00               	movlw	0
  4306  0015EA  6E2C               	movwf	___fladd@b+1,c
  4307  0015EC  0E00               	movlw	0
  4308  0015EE  6E2D               	movwf	___fladd@b+2,c
  4309  0015F0                     L3:
  4310  0015F0  0E00               	movlw	0
  4311  0015F2  6E2E               	movwf	___fladd@b+3,c
  4312  0015F4  5032               	movf	___fladd@a+3,w,c
  4313  0015F6  0B80               	andlw	128
  4314  0015F8  6E38               	movwf	___fladd@aexp,c
  4315  0015FA  5037               	movf	___fladd@signs,w,c
  4316  0015FC  1838               	xorwf	___fladd@aexp,w,c
  4317  0015FE  A4D8               	btfss	status,2,c
  4318  001600  8C37               	bsf	___fladd@signs,6,c
  4319  001602  5032               	movf	___fladd@a+3,w,c
  4320  001604  2432               	addwf	___fladd@a+3,w,c
  4321  001606  6E38               	movwf	___fladd@aexp,c
  4322  001608  BE31               	btfsc	___fladd@a+2,7,c
  4323  00160A  8038               	bsf	___fladd@aexp,0,c
  4324  00160C  5038               	movf	___fladd@aexp,w,c
  4325  00160E  B4D8               	btfsc	status,2,c
  4326  001610  D00D               	goto	l2448
  4327  001612  2838               	incf	___fladd@aexp,w,c
  4328  001614  A4D8               	btfss	status,2,c
  4329  001616  D008               	goto	l2444
  4330  001618  0E00               	movlw	0
  4331  00161A  6E2F               	movwf	___fladd@a,c
  4332  00161C  0E00               	movlw	0
  4333  00161E  6E30               	movwf	___fladd@a+1,c
  4334  001620  0E00               	movlw	0
  4335  001622  6E31               	movwf	___fladd@a+2,c
  4336  001624  0E00               	movlw	0
  4337  001626  6E32               	movwf	___fladd@a+3,c
  4338  001628                     l2444:
  4339  001628  8E31               	bsf	___fladd@a+2,7,c
  4340  00162A  D006               	goto	L4
  4341  00162C                     l2448:
  4342  00162C  0E00               	movlw	0
  4343  00162E  6E2F               	movwf	___fladd@a,c
  4344  001630  0E00               	movlw	0
  4345  001632  6E30               	movwf	___fladd@a+1,c
  4346  001634  0E00               	movlw	0
  4347  001636  6E31               	movwf	___fladd@a+2,c
  4348  001638                     L4:
  4349  001638  0E00               	movlw	0
  4350  00163A  6E32               	movwf	___fladd@a+3,c
  4351  00163C  5039               	movf	___fladd@bexp,w,c
  4352  00163E  5C38               	subwf	___fladd@aexp,w,c
  4353  001640  B0D8               	btfsc	status,0,c
  4354  001642  D022               	goto	l2486
  4355  001644  AC37               	btfss	___fladd@signs,6,c
  4356  001646  D002               	goto	l2456
  4357  001648  0E80               	movlw	128
  4358  00164A  1A37               	xorwf	___fladd@signs,f,c
  4359  00164C                     l2456:
  4360  00164C  C039  F03A         	movff	___fladd@bexp,___fladd@grs
  4361  001650  C038  F039         	movff	___fladd@aexp,___fladd@bexp
  4362  001654  C03A  F038         	movff	___fladd@grs,___fladd@aexp
  4363  001658  C02B  F03A         	movff	___fladd@b,___fladd@grs
  4364  00165C  C02F  F02B         	movff	___fladd@a,___fladd@b
  4365  001660  C03A  F02F         	movff	___fladd@grs,___fladd@a
  4366  001664  C02C  F03A         	movff	___fladd@b+1,___fladd@grs
  4367  001668  C030  F02C         	movff	___fladd@a+1,___fladd@b+1
  4368  00166C  C03A  F030         	movff	___fladd@grs,___fladd@a+1
  4369  001670  C02D  F03A         	movff	___fladd@b+2,___fladd@grs
  4370  001674  C031  F02D         	movff	___fladd@a+2,___fladd@b+2
  4371  001678  C03A  F031         	movff	___fladd@grs,___fladd@a+2
  4372  00167C  C02E  F03A         	movff	___fladd@b+3,___fladd@grs
  4373  001680  C032  F02E         	movff	___fladd@a+3,___fladd@b+3
  4374  001684  C03A  F032         	movff	___fladd@grs,___fladd@a+3
  4375  001688                     l2486:
  4376  001688  0E00               	movlw	0
  4377  00168A  6E3A               	movwf	___fladd@grs,c
  4378  00168C  5039               	movf	___fladd@bexp,w,c
  4379  00168E  C038  F033         	movff	___fladd@aexp,??___fladd
  4380  001692  6A34               	clrf	(??___fladd+1)& (0+255),c
  4381  001694  5E33               	subwf	??___fladd,f,c
  4382  001696  0E00               	movlw	0
  4383  001698  5A34               	subwfb	??___fladd+1,f,c
  4384  00169A  BE34               	btfsc	??___fladd+1,7,c
  4385  00169C  D02C               	goto	l817
  4386  00169E  5034               	movf	??___fladd+1,w,c
  4387  0016A0  E104               	bnz	u1950
  4388  0016A2  0E1A               	movlw	26
  4389  0016A4  5C33               	subwf	??___fladd,w,c
  4390  0016A6  A0D8               	btfss	status,0,c
  4391  0016A8  D026               	goto	l817
  4392  0016AA                     u1950:
  4393  0016AA  502B               	movf	___fladd@b,w,c
  4394  0016AC  102C               	iorwf	___fladd@b+1,w,c
  4395  0016AE  102D               	iorwf	___fladd@b+2,w,c
  4396  0016B0  102E               	iorwf	___fladd@b+3,w,c
  4397  0016B2  B4D8               	btfsc	status,2,c
  4398  0016B4  D002               	goto	u1960
  4399  0016B6  0E01               	movlw	1
  4400  0016B8  D001               	goto	u1970
  4401  0016BA                     u1960:
  4402  0016BA  0E00               	movlw	0
  4403  0016BC                     u1970:
  4404  0016BC  6E3A               	movwf	___fladd@grs,c
  4405  0016BE  0E00               	movlw	0
  4406  0016C0  6E2B               	movwf	___fladd@b,c
  4407  0016C2  0E00               	movlw	0
  4408  0016C4  6E2C               	movwf	___fladd@b+1,c
  4409  0016C6  0E00               	movlw	0
  4410  0016C8  6E2D               	movwf	___fladd@b+2,c
  4411  0016CA  0E00               	movlw	0
  4412  0016CC  6E2E               	movwf	___fladd@b+3,c
  4413  0016CE  C038  F039         	movff	___fladd@aexp,___fladd@bexp
  4414  0016D2  D015               	goto	u2000
  4415  0016D4                     l818:
  4416  0016D4  A03A               	btfss	___fladd@grs,0,c
  4417  0016D6  D005               	goto	l2498
  4418  0016D8  90D8               	bcf	status,0,c
  4419  0016DA  303A               	rrcf	___fladd@grs,w,c
  4420  0016DC  0901               	iorlw	1
  4421  0016DE  6E3A               	movwf	___fladd@grs,c
  4422  0016E0  D002               	goto	l2500
  4423  0016E2                     l2498:
  4424  0016E2  90D8               	bcf	status,0,c
  4425  0016E4  323A               	rrcf	___fladd@grs,f,c
  4426  0016E6                     l2500:
  4427  0016E6  B02B               	btfsc	___fladd@b,0,c
  4428  0016E8  8E3A               	bsf	___fladd@grs,7,c
  4429  0016EA  342E               	rlcf	___fladd@b+3,w,c
  4430  0016EC  322E               	rrcf	___fladd@b+3,f,c
  4431  0016EE  322D               	rrcf	___fladd@b+2,f,c
  4432  0016F0  322C               	rrcf	___fladd@b+1,f,c
  4433  0016F2  322B               	rrcf	___fladd@b,f,c
  4434  0016F4  2A39               	incf	___fladd@bexp,f,c
  4435  0016F6                     l817:
  4436  0016F6  5038               	movf	___fladd@aexp,w,c
  4437  0016F8  5C39               	subwf	___fladd@bexp,w,c
  4438  0016FA  A0D8               	btfss	status,0,c
  4439  0016FC  D7EB               	goto	l818
  4440  0016FE                     u2000:
  4441  0016FE  BC37               	btfsc	___fladd@signs,6,c
  4442  001700  D028               	goto	l2532
  4443  001702  5039               	movf	___fladd@bexp,w,c
  4444  001704  A4D8               	btfss	status,2,c
  4445  001706  D009               	goto	l2514
  4446  001708  0E00               	movlw	0
  4447  00170A  6E2B               	movwf	?___fladd,c
  4448  00170C  0E00               	movlw	0
  4449  00170E  6E2C               	movwf	?___fladd+1,c
  4450  001710  0E00               	movlw	0
  4451  001712  6E2D               	movwf	?___fladd+2,c
  4452  001714  0E00               	movlw	0
  4453  001716  6E2E               	movwf	?___fladd+3,c
  4454  001718  0012               	return	
  4455  00171A                     l2514:
  4456  00171A  502F               	movf	___fladd@a,w,c
  4457  00171C  262B               	addwf	___fladd@b,f,c
  4458  00171E  5030               	movf	___fladd@a+1,w,c
  4459  001720  222C               	addwfc	___fladd@b+1,f,c
  4460  001722  5031               	movf	___fladd@a+2,w,c
  4461  001724  222D               	addwfc	___fladd@b+2,f,c
  4462  001726  5032               	movf	___fladd@a+3,w,c
  4463  001728  222E               	addwfc	___fladd@b+3,f,c
  4464  00172A  A02E               	btfss	___fladd@b+3,0,c
  4465  00172C  D071               	goto	u2130
  4466  00172E  A03A               	btfss	___fladd@grs,0,c
  4467  001730  D005               	goto	l2522
  4468  001732  90D8               	bcf	status,0,c
  4469  001734  303A               	rrcf	___fladd@grs,w,c
  4470  001736  0901               	iorlw	1
  4471  001738  6E3A               	movwf	___fladd@grs,c
  4472  00173A  D002               	goto	l2524
  4473  00173C                     l2522:
  4474  00173C  90D8               	bcf	status,0,c
  4475  00173E  323A               	rrcf	___fladd@grs,f,c
  4476  001740                     l2524:
  4477  001740  B02B               	btfsc	___fladd@b,0,c
  4478  001742  8E3A               	bsf	___fladd@grs,7,c
  4479  001744  342E               	rlcf	___fladd@b+3,w,c
  4480  001746  322E               	rrcf	___fladd@b+3,f,c
  4481  001748  322D               	rrcf	___fladd@b+2,f,c
  4482  00174A  322C               	rrcf	___fladd@b+1,f,c
  4483  00174C  322B               	rrcf	___fladd@b,f,c
  4484  00174E  2A39               	incf	___fladd@bexp,f,c
  4485  001750  D05F               	goto	u2130
  4486  001752                     l2532:
  4487  001752  502F               	movf	___fladd@a,w,c
  4488  001754  5C2B               	subwf	___fladd@b,w,c
  4489  001756  5030               	movf	___fladd@a+1,w,c
  4490  001758  582C               	subwfb	___fladd@b+1,w,c
  4491  00175A  5031               	movf	___fladd@a+2,w,c
  4492  00175C  582D               	subwfb	___fladd@b+2,w,c
  4493  00175E  502E               	movf	___fladd@b+3,w,c
  4494  001760  0A80               	xorlw	128
  4495  001762  6E33               	movwf	??___fladd& (0+255),c
  4496  001764  5032               	movf	___fladd@a+3,w,c
  4497  001766  0A80               	xorlw	128
  4498  001768  5833               	subwfb	??___fladd& (0+255),w,c
  4499  00176A  B0D8               	btfsc	status,0,c
  4500  00176C  D025               	goto	l2542
  4501  00176E  502B               	movf	___fladd@b,w,c
  4502  001770  5C2F               	subwf	___fladd@a,w,c
  4503  001772  6E33               	movwf	??___fladd& (0+255),c
  4504  001774  502C               	movf	___fladd@b+1,w,c
  4505  001776  5830               	subwfb	___fladd@a+1,w,c
  4506  001778  6E34               	movwf	(??___fladd+1)& (0+255),c
  4507  00177A  502D               	movf	___fladd@b+2,w,c
  4508  00177C  5831               	subwfb	___fladd@a+2,w,c
  4509  00177E  6E35               	movwf	(??___fladd+2)& (0+255),c
  4510  001780  502E               	movf	___fladd@b+3,w,c
  4511  001782  5832               	subwfb	___fladd@a+3,w,c
  4512  001784  6E36               	movwf	(??___fladd+3)& (0+255),c
  4513  001786  0EFF               	movlw	255
  4514  001788  2433               	addwf	??___fladd,w,c
  4515  00178A  6E2B               	movwf	___fladd@b,c
  4516  00178C  0EFF               	movlw	255
  4517  00178E  2034               	addwfc	??___fladd+1,w,c
  4518  001790  6E2C               	movwf	___fladd@b+1,c
  4519  001792  0EFF               	movlw	255
  4520  001794  2035               	addwfc	??___fladd+2,w,c
  4521  001796  6E2D               	movwf	___fladd@b+2,c
  4522  001798  0EFF               	movlw	255
  4523  00179A  2036               	addwfc	??___fladd+3,w,c
  4524  00179C  6E2E               	movwf	___fladd@b+3,c
  4525  00179E  0E80               	movlw	128
  4526  0017A0  1A37               	xorwf	___fladd@signs,f,c
  4527  0017A2  6C3A               	negf	___fladd@grs,c
  4528  0017A4  503A               	movf	___fladd@grs,w,c
  4529  0017A6  A4D8               	btfss	status,2,c
  4530  0017A8  D00F               	goto	l833
  4531  0017AA  0E01               	movlw	1
  4532  0017AC  262B               	addwf	___fladd@b,f,c
  4533  0017AE  0E00               	movlw	0
  4534  0017B0  222C               	addwfc	___fladd@b+1,f,c
  4535  0017B2  222D               	addwfc	___fladd@b+2,f,c
  4536  0017B4  222E               	addwfc	___fladd@b+3,f,c
  4537  0017B6  D008               	goto	l833
  4538  0017B8                     l2542:
  4539  0017B8  502F               	movf	___fladd@a,w,c
  4540  0017BA  5E2B               	subwf	___fladd@b,f,c
  4541  0017BC  5030               	movf	___fladd@a+1,w,c
  4542  0017BE  5A2C               	subwfb	___fladd@b+1,f,c
  4543  0017C0  5031               	movf	___fladd@a+2,w,c
  4544  0017C2  5A2D               	subwfb	___fladd@b+2,f,c
  4545  0017C4  5032               	movf	___fladd@a+3,w,c
  4546  0017C6  5A2E               	subwfb	___fladd@b+3,f,c
  4547  0017C8                     l833:
  4548  0017C8  502B               	movf	___fladd@b,w,c
  4549  0017CA  102C               	iorwf	___fladd@b+1,w,c
  4550  0017CC  102D               	iorwf	___fladd@b+2,w,c
  4551  0017CE  102E               	iorwf	___fladd@b+3,w,c
  4552  0017D0  A4D8               	btfss	status,2,c
  4553  0017D2  D01C               	goto	l2566
  4554  0017D4  503A               	movf	___fladd@grs,w,c
  4555  0017D6  A4D8               	btfss	status,2,c
  4556  0017D8  D019               	goto	l2566
  4557  0017DA  0E00               	movlw	0
  4558  0017DC  6E2B               	movwf	?___fladd,c
  4559  0017DE  0E00               	movlw	0
  4560  0017E0  6E2C               	movwf	?___fladd+1,c
  4561  0017E2  0E00               	movlw	0
  4562  0017E4  6E2D               	movwf	?___fladd+2,c
  4563  0017E6  0E00               	movlw	0
  4564  0017E8  6E2E               	movwf	?___fladd+3,c
  4565  0017EA  0012               	return	
  4566  0017EC                     l2550:
  4567  0017EC  90D8               	bcf	status,0,c
  4568  0017EE  362B               	rlcf	___fladd@b,f,c
  4569  0017F0  362C               	rlcf	___fladd@b+1,f,c
  4570  0017F2  362D               	rlcf	___fladd@b+2,f,c
  4571  0017F4  362E               	rlcf	___fladd@b+3,f,c
  4572  0017F6  BE3A               	btfsc	___fladd@grs,7,c
  4573  0017F8  802B               	bsf	___fladd@b,0,c
  4574  0017FA  A03A               	btfss	___fladd@grs,0,c
  4575  0017FC  D002               	goto	l2560
  4576  0017FE  80D8               	bsf	status,0,c
  4577  001800  D001               	goto	L5
  4578  001802                     l2560:
  4579  001802  90D8               	bcf	status,0,c
  4580  001804                     L5:
  4581  001804  363A               	rlcf	___fladd@grs,f,c
  4582  001806  5039               	movf	___fladd@bexp,w,c
  4583  001808  A4D8               	btfss	status,2,c
  4584  00180A  0639               	decf	___fladd@bexp,f,c
  4585  00180C                     l2566:
  4586  00180C  AE2D               	btfss	___fladd@b+2,7,c
  4587  00180E  D7EE               	goto	l2550
  4588  001810                     u2130:
  4589  001810  0E00               	movlw	0
  4590  001812  6E38               	movwf	___fladd@aexp,c
  4591  001814  AE3A               	btfss	___fladd@grs,7,c
  4592  001816  D00B               	goto	l842
  4593  001818  C03A  F033         	movff	___fladd@grs,??___fladd
  4594  00181C  0E7F               	movlw	127
  4595  00181E  1633               	andwf	??___fladd,f,c
  4596  001820  B4D8               	btfsc	status,2,c
  4597  001822  D003               	goto	l843
  4598  001824                     u2150:
  4599  001824  0E01               	movlw	1
  4600  001826  6E38               	movwf	___fladd@aexp,c
  4601  001828  D002               	goto	l842
  4602  00182A                     l843:
  4603  00182A  B02B               	btfsc	___fladd@b,0,c
  4604  00182C  D7FB               	goto	u2150
  4605  00182E                     l842:
  4606  00182E  5038               	movf	___fladd@aexp,w,c
  4607  001830  B4D8               	btfsc	status,2,c
  4608  001832  D020               	goto	l2586
  4609  001834  0E01               	movlw	1
  4610  001836  262B               	addwf	___fladd@b,f,c
  4611  001838  0E00               	movlw	0
  4612  00183A  222C               	addwfc	___fladd@b+1,f,c
  4613  00183C  222D               	addwfc	___fladd@b+2,f,c
  4614  00183E  222E               	addwfc	___fladd@b+3,f,c
  4615  001840  A02E               	btfss	___fladd@b+3,0,c
  4616  001842  D018               	goto	l2586
  4617  001844  C02B  F033         	movff	___fladd@b,??___fladd
  4618  001848  C02C  F034         	movff	___fladd@b+1,??___fladd+1
  4619  00184C  C02D  F035         	movff	___fladd@b+2,??___fladd+2
  4620  001850  C02E  F036         	movff	___fladd@b+3,??___fladd+3
  4621  001854  3436               	rlcf	??___fladd+3,w,c
  4622  001856  3236               	rrcf	??___fladd+3,f,c
  4623  001858  3235               	rrcf	??___fladd+2,f,c
  4624  00185A  3234               	rrcf	??___fladd+1,f,c
  4625  00185C  3233               	rrcf	??___fladd,f,c
  4626  00185E  C033  F02B         	movff	??___fladd,___fladd@b
  4627  001862  C034  F02C         	movff	??___fladd+1,___fladd@b+1
  4628  001866  C035  F02D         	movff	??___fladd+2,___fladd@b+2
  4629  00186A  C036  F02E         	movff	??___fladd+3,___fladd@b+3
  4630  00186E  2839               	incf	___fladd@bexp,w,c
  4631  001870  A4D8               	btfss	status,2,c
  4632  001872  2A39               	incf	___fladd@bexp,f,c
  4633  001874                     l2586:
  4634  001874  2839               	incf	___fladd@bexp,w,c
  4635  001876  B4D8               	btfsc	status,2,c
  4636  001878  D003               	goto	u2210
  4637  00187A  5039               	movf	___fladd@bexp,w,c
  4638  00187C  A4D8               	btfss	status,2,c
  4639  00187E  D00D               	goto	l2594
  4640  001880                     u2210:
  4641  001880  0E00               	movlw	0
  4642  001882  6E2B               	movwf	___fladd@b,c
  4643  001884  0E00               	movlw	0
  4644  001886  6E2C               	movwf	___fladd@b+1,c
  4645  001888  0E00               	movlw	0
  4646  00188A  6E2D               	movwf	___fladd@b+2,c
  4647  00188C  0E00               	movlw	0
  4648  00188E  6E2E               	movwf	___fladd@b+3,c
  4649  001890  5039               	movf	___fladd@bexp,w,c
  4650  001892  A4D8               	btfss	status,2,c
  4651  001894  D002               	goto	l2594
  4652  001896  0E00               	movlw	0
  4653  001898  6E37               	movwf	___fladd@signs,c
  4654  00189A                     l2594:
  4655  00189A  A039               	btfss	___fladd@bexp,0,c
  4656  00189C  D002               	goto	l2598
  4657  00189E  8E2D               	bsf	___fladd@b+2,7,c
  4658  0018A0  D001               	goto	l2600
  4659  0018A2                     l2598:
  4660  0018A2  9E2D               	bcf	___fladd@b+2,7,c
  4661  0018A4                     l2600:
  4662  0018A4  90D8               	bcf	status,0,c
  4663  0018A6  3039               	rrcf	___fladd@bexp,w,c
  4664  0018A8  6E2E               	movwf	___fladd@b+3,c
  4665  0018AA  BE37               	btfsc	___fladd@signs,7,c
  4666  0018AC  8E2E               	bsf	___fladd@b+3,7,c
  4667  0018AE  C02B  F02B         	movff	___fladd@b,?___fladd
  4668  0018B2  C02C  F02C         	movff	___fladd@b+1,?___fladd+1
  4669  0018B6  C02D  F02D         	movff	___fladd@b+2,?___fladd+2
  4670  0018BA  C02E  F02E         	movff	___fladd@b+3,?___fladd+3
  4671  0018BE  0012               	return		;funcret
  4672  0018C0                     __end_of___fladd:
  4673                           	opt callstack 0
  4674                           
  4675 ;; *************** function _enviarRS232 *****************
  4676 ;; Defined at:
  4677 ;;		line 31 in file "./../../LIBRERIAS/funciones_auto.h"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  valores         2    3[COMRAM] PTR unsigned char 
  4680 ;;		 -> logicaEstadoSiguiente@texto(20), main@text_adc(20), 
  4681 ;;  numero_valor    1    5[COMRAM] unsigned char 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  i               1    7[COMRAM] unsigned char 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4693 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4696 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4697 ;;Total ram usage:        5 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; Hardware stack levels required when called:    1
  4700 ;; This function calls:
  4701 ;;		Nothing
  4702 ;; This function is called by:
  4703 ;;		_main
  4704 ;;		_logicaEstadoSiguiente
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           	psect	text23
  4709  0025A6                     __ptext23:
  4710                           	opt callstack 0
  4711  0025A6                     _enviarRS232:
  4712                           	opt callstack 28
  4713                           
  4714                           ;./../../LIBRERIAS/funciones_auto.h: 32:     for(unsigned char i = 0; i<numero_valores; 
      +                          i++){
  4715                           
  4716                           ;incstack = 0
  4717  0025A6  0E00               	movlw	0
  4718  0025A8  6E08               	movwf	enviarRS232@i,c
  4719  0025AA  D010               	goto	l2874
  4720  0025AC                     l2868:
  4721                           
  4722                           ;./../../LIBRERIAS/funciones_auto.h: 33:         TXREG1 = valores[i];
  4723  0025AC  5008               	movf	enviarRS232@i,w,c
  4724  0025AE  2404               	addwf	enviarRS232@valores,w,c
  4725  0025B0  6ED9               	movwf	fsr2l,c
  4726  0025B2  0E00               	movlw	0
  4727  0025B4  2005               	addwfc	enviarRS232@valores+1,w,c
  4728  0025B6  6EDA               	movwf	fsr2h,c
  4729  0025B8  50DF               	movf	indf2,w,c
  4730  0025BA  6EAE               	movwf	4014,c	;volatile
  4731                           
  4732                           ;./../../LIBRERIAS/funciones_auto.h: 34:         _delay((unsigned long)((3)*(48000000/40
      +                          00.0)));
  4733  0025BC  0E2F               	movlw	47
  4734  0025BE  6E07               	movwf	??_enviarRS232& (0+255),c
  4735  0025C0  0EC0               	movlw	192
  4736  0025C2                     u3297:
  4737  0025C2  2EE8               	decfsz	wreg,f,c
  4738  0025C4  D7FE               	bra	u3297
  4739  0025C6  2E07               	decfsz	??_enviarRS232& (0+255),f,c
  4740  0025C8  D7FC               	bra	u3297
  4741                           
  4742                           ;./../../LIBRERIAS/funciones_auto.h: 35:     }
  4743  0025CA  2A08               	incf	enviarRS232@i,f,c
  4744  0025CC                     l2874:
  4745  0025CC  5006               	movf	enviarRS232@numero_valores,w,c
  4746  0025CE  5C08               	subwf	enviarRS232@i,w,c
  4747  0025D0  B0D8               	btfsc	status,0,c
  4748  0025D2  0012               	return	
  4749  0025D4  D7EB               	goto	l2868
  4750  0025D6                     __end_of_enviarRS232:
  4751                           	opt callstack 0
  4752                           
  4753 ;; *************** function _encenderMotor *****************
  4754 ;; Defined at:
  4755 ;;		line 25 in file "./../../LIBRERIAS/funciones_auto.h"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;		None
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  1    wreg      void 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4771 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4772 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4773 ;;Total ram usage:        2 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:    2
  4776 ;; This function calls:
  4777 ;;		_rutinaArranque
  4778 ;; This function is called by:
  4779 ;;		_logicaEstadoSiguiente
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text24
  4784  002542                     __ptext24:
  4785                           	opt callstack 0
  4786  002542                     _encenderMotor:
  4787                           	opt callstack 27
  4788                           
  4789                           ;./../../LIBRERIAS/funciones_auto.h: 26:     rutinaArranque();
  4790                           
  4791                           ;incstack = 0
  4792  002542  EC00  F013         	call	_rutinaArranque	;wreg free
  4793                           
  4794                           ;./../../LIBRERIAS/funciones_auto.h: 27:     CCP7CONbits.DC7B = velocidad & 0x0003;
  4795  002546  C082  F006         	movff	_velocidad,??_encenderMotor
  4796  00254A  0E03               	movlw	3
  4797  00254C  1606               	andwf	??_encenderMotor,f,c
  4798  00254E  3A06               	swapf	??_encenderMotor,f,c
  4799  002550  010F               	movlb	15	; () banked
  4800  002552  5109               	movf	9,w,b	;volatile
  4801  002554  1806               	xorwf	??_encenderMotor,w,c
  4802  002556  0BCF               	andlw	-49
  4803  002558  1806               	xorwf	??_encenderMotor,w,c
  4804  00255A  6F09               	movwf	9,b	;volatile
  4805                           
  4806                           ; BSR set to: 15
  4807                           ;./../../LIBRERIAS/funciones_auto.h: 28:     CCPR7L = velocidad>>2;
  4808  00255C  C082  F006         	movff	_velocidad,??_encenderMotor
  4809  002560  C083  F007         	movff	_velocidad+1,??_encenderMotor+1
  4810  002564  90D8               	bcf	status,0,c
  4811  002566  3207               	rrcf	??_encenderMotor+1,f,c
  4812  002568  3206               	rrcf	??_encenderMotor,f,c
  4813  00256A  90D8               	bcf	status,0,c
  4814  00256C  3207               	rrcf	??_encenderMotor+1,f,c
  4815  00256E  3206               	rrcf	??_encenderMotor,f,c
  4816  002570  5006               	movf	??_encenderMotor,w,c
  4817  002572  6F0A               	movwf	10,b	;volatile
  4818                           
  4819                           ; BSR set to: 15
  4820  002574  0012               	return		;funcret
  4821  002576                     __end_of_encenderMotor:
  4822                           	opt callstack 0
  4823                           
  4824 ;; *************** function _rutinaArranque *****************
  4825 ;; Defined at:
  4826 ;;		line 13 in file "./../../LIBRERIAS/funciones_auto.h"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;		None
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;		None
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  1    wreg      void 
  4833 ;; Registers used:
  4834 ;;		wreg, status,2
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4842 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4844 ;;Total ram usage:        2 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:    1
  4847 ;; This function calls:
  4848 ;;		Nothing
  4849 ;; This function is called by:
  4850 ;;		_encenderMotor
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text25
  4855  002600                     __ptext25:
  4856                           	opt callstack 0
  4857  002600                     _rutinaArranque:
  4858                           	opt callstack 27
  4859                           
  4860                           ;./../../LIBRERIAS/funciones_auto.h: 14:     CCP7CONbits.DC7B = cicle_90 & 0x0003;
  4861                           
  4862                           ; BSR set to: 15
  4863                           ;incstack = 0
  4864  002600  010F               	movlb	15	; () banked
  4865  002602  5109               	movf	9,w,b	;volatile
  4866  002604  0BCF               	andlw	-49
  4867  002606  0920               	iorlw	32
  4868  002608  6F09               	movwf	9,b	;volatile
  4869                           
  4870                           ;./../../LIBRERIAS/funciones_auto.h: 15:     CCPR7L = cicle_90>>2;
  4871  00260A  0E70               	movlw	112
  4872  00260C  6F0A               	movwf	10,b	;volatile
  4873                           
  4874                           ; BSR set to: 15
  4875                           ;./../../LIBRERIAS/funciones_auto.h: 16:     T2CONbits.TMR2ON = 1;
  4876  00260E  84CA               	bsf	4042,2,c	;volatile
  4877                           
  4878                           ; BSR set to: 15
  4879                           ;./../../LIBRERIAS/funciones_auto.h: 17:     _delay((unsigned long)((50)*(48000000/4000.
      +                          0)));
  4880  002610  0E04               	movlw	4
  4881  002612  6E05               	movwf	(??_rutinaArranque+1)& (0+255),c
  4882  002614  0E0C               	movlw	12
  4883  002616  6E04               	movwf	??_rutinaArranque& (0+255),c
  4884  002618  0E34               	movlw	52
  4885  00261A                     u3307:
  4886  00261A  2EE8               	decfsz	wreg,f,c
  4887  00261C  D7FE               	bra	u3307
  4888  00261E  2E04               	decfsz	??_rutinaArranque& (0+255),f,c
  4889  002620  D7FC               	bra	u3307
  4890  002622  2E05               	decfsz	(??_rutinaArranque+1)& (0+255),f,c
  4891  002624  D7FA               	bra	u3307
  4892  002626  0012               	return		;funcret
  4893  002628                     __end_of_rutinaArranque:
  4894                           	opt callstack 0
  4895                           
  4896 ;; *************** function _dirreccion *****************
  4897 ;; Defined at:
  4898 ;;		line 153 in file "sensores.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  degree          1    wreg     unsigned char 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  degree          1    5[COMRAM] unsigned char 
  4903 ;;  tiempo_1        1    6[COMRAM] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg, status,2, status,0
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4914 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4915 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4916 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4917 ;;Total ram usage:        4 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:    1
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_logicaEstadoSiguiente
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text26
  4928  002320                     __ptext26:
  4929                           	opt callstack 0
  4930  002320                     _dirreccion:
  4931                           	opt callstack 28
  4932                           
  4933                           ;incstack = 0
  4934                           ;dirreccion@degree stored from wreg
  4935  002320  6E06               	movwf	dirreccion@degree,c
  4936                           
  4937                           ;sensores.c: 154:     unsigned char tiempo_1 = 15;
  4938  002322  0E0F               	movlw	15
  4939  002324  6E07               	movwf	dirreccion@tiempo_1,c
  4940                           
  4941                           ;sensores.c: 155:     switch(degree){
  4942  002326  D007               	goto	l2906
  4943  002328                     l2898:
  4944                           
  4945                           ;sensores.c: 157:             tiempo_1 = 15;
  4946  002328  0E0F               	movlw	15
  4947  00232A  D003               	goto	L7
  4948  00232C                     l2900:
  4949                           
  4950                           ;sensores.c: 160:             tiempo_1 = 23;
  4951  00232C  0E17               	movlw	23
  4952  00232E  D001               	goto	L7
  4953  002330                     l2902:
  4954                           
  4955                           ;sensores.c: 163:             tiempo_1 = 5;
  4956  002330  0E05               	movlw	5
  4957  002332                     L7:
  4958  002332  6E07               	movwf	dirreccion@tiempo_1,c
  4959                           
  4960                           ;sensores.c: 164:             break;
  4961  002334  D011               	goto	l189
  4962  002336                     l2906:
  4963  002336  5006               	movf	dirreccion@degree,w,c
  4964  002338  6E04               	movwf	??_dirreccion& (0+255),c
  4965  00233A  6A05               	clrf	(??_dirreccion+1)& (0+255),c
  4966                           
  4967                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4968                           ; Switch size 1, requested type "simple"
  4969                           ; Number of cases is 1, Range of values is 0 to 0
  4970                           ; switch strategies available:
  4971                           ; Name         Instructions Cycles
  4972                           ; simple_byte            4     3 (average)
  4973                           ;	Chosen strategy is simple_byte
  4974  00233C  5005               	movf	??_dirreccion+1,w,c
  4975  00233E  0A00               	xorlw	0	; case 0
  4976  002340  A4D8               	btfss	status,2,c
  4977  002342  D00A               	goto	l189
  4978                           
  4979                           ; Switch size 1, requested type "simple"
  4980                           ; Number of cases is 3, Range of values is 0 to 180
  4981                           ; switch strategies available:
  4982                           ; Name         Instructions Cycles
  4983                           ; simple_byte           10     6 (average)
  4984                           ;	Chosen strategy is simple_byte
  4985  002344  5004               	movf	??_dirreccion,w,c
  4986  002346  0A00               	xorlw	0	; case 0
  4987  002348  B4D8               	btfsc	status,2,c
  4988  00234A  D7F0               	goto	l2900
  4989  00234C  0A5A               	xorlw	90	; case 90
  4990  00234E  B4D8               	btfsc	status,2,c
  4991  002350  D7EB               	goto	l2898
  4992  002352  0AEE               	xorlw	238	; case 180
  4993  002354  B4D8               	btfsc	status,2,c
  4994  002356  D7EC               	goto	l2902
  4995  002358                     l189:
  4996                           
  4997                           ;sensores.c: 166:     if(PORTDbits.RD4 != 1){
  4998  002358  B883               	btfsc	3971,4,c	;volatile
  4999  00235A  D006               	goto	l2910
  5000                           
  5001                           ;sensores.c: 167:         TIME_MAX = tiempo_1;
  5002  00235C  C007  F0FB         	movff	dirreccion@tiempo_1,_TIME_MAX
  5003  002360  0100               	movlb	0	; () banked
  5004  002362  6BFC               	clrf	(_TIME_MAX+1)& (0+255),b
  5005                           
  5006                           ;sensores.c: 168:         PORTDbits.RD4 = 1;
  5007  002364  8883               	bsf	3971,4,c	;volatile
  5008                           
  5009                           ;sensores.c: 169:     }
  5010  002366  D00A               	goto	l2914
  5011  002368                     l2910:
  5012                           
  5013                           ;sensores.c: 171:         TIME_MAX = 200 - tiempo_1;
  5014  002368  5007               	movf	dirreccion@tiempo_1,w,c
  5015  00236A  08C8               	sublw	200
  5016  00236C  0100               	movlb	0	; () banked
  5017  00236E  6FFB               	movwf	_TIME_MAX& (0+255),b
  5018  002370  0E00               	movlw	0
  5019  002372  A0D8               	btfss	status,0,c
  5020  002374  2AE8               	incf	wreg,f,c
  5021  002376  0800               	sublw	0
  5022  002378  6FFC               	movwf	(_TIME_MAX+1)& (0+255),b
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;sensores.c: 172:         PORTDbits.RD4 = 0;
  5026  00237A  9883               	bcf	3971,4,c	;volatile
  5027  00237C                     l2914:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;sensores.c: 174:     contador_timer_5 = 0;
  5031  00237C  0E00               	movlw	0
  5032  00237E  6F7D               	movwf	(_contador_timer_5+1)& (0+255),b
  5033  002380  0E00               	movlw	0
  5034  002382  6F7C               	movwf	_contador_timer_5& (0+255),b
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;sensores.c: 175:     T5CONbits.TMR5ON = 1;
  5038  002384  010F               	movlb	15	; () banked
  5039  002386  8122               	bsf	34,0,b	;volatile
  5040                           
  5041                           ; BSR set to: 15
  5042  002388  0012               	return		;funcret
  5043  00238A                     __end_of_dirreccion:
  5044                           	opt callstack 0
  5045                           
  5046 ;; *************** function _configuracionInicial *****************
  5047 ;; Defined at:
  5048 ;;		line 103 in file "sensores.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;		None
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;		None
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1    wreg      void 
  5055 ;; Registers used:
  5056 ;;		wreg, status,2, cstack
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5066 ;;Total ram usage:        0 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:    2
  5069 ;; This function calls:
  5070 ;;		_configuracionADC
  5071 ;;		_configurarInterrupciones
  5072 ;;		_configurarPWM7
  5073 ;;		_configurarPuertos
  5074 ;;		_configurarRS232
  5075 ;;		_configurarTMR5
  5076 ;; This function is called by:
  5077 ;;		_main
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text27
  5082  00266E                     __ptext27:
  5083                           	opt callstack 0
  5084  00266E                     _configuracionInicial:
  5085                           	opt callstack 28
  5086                           
  5087                           ;sensores.c: 104:     configurarPuertos();
  5088                           
  5089                           ; BSR set to: 15
  5090                           ;incstack = 0
  5091  00266E  EC65  F013         	call	_configurarPuertos	;wreg free
  5092                           
  5093                           ;sensores.c: 105:     configurarPWM7();
  5094  002672  EC27  F013         	call	_configurarPWM7	;wreg free
  5095                           
  5096                           ;sensores.c: 106:     configurarRS232();
  5097  002676  EC44  F013         	call	_configurarRS232	;wreg free
  5098                           
  5099                           ;sensores.c: 107:     configurarInterrupciones();
  5100  00267A  EC6B  F013         	call	_configurarInterrupciones	;wreg free
  5101                           
  5102                           ;sensores.c: 108:     configuracionADC();
  5103  00267E  EC5B  F013         	call	_configuracionADC	;wreg free
  5104                           
  5105                           ;sensores.c: 109:     configurarTMR5();
  5106  002682  EC50  F013         	call	_configurarTMR5	;wreg free
  5107  002686  0012               	return		;funcret
  5108  002688                     __end_of_configuracionInicial:
  5109                           	opt callstack 0
  5110                           
  5111 ;; *************** function _configurarTMR5 *****************
  5112 ;; Defined at:
  5113 ;;		line 36 in file "./../../LIBRERIAS/configuracion_auto.h"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;		None
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, status,2
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5131 ;;Total ram usage:        0 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:    1
  5134 ;; This function calls:
  5135 ;;		Nothing
  5136 ;; This function is called by:
  5137 ;;		_configuracionInicial
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text28
  5142  0026A0                     __ptext28:
  5143                           	opt callstack 0
  5144  0026A0                     _configurarTMR5:
  5145                           	opt callstack 28
  5146                           
  5147                           ;./../../LIBRERIAS/configuracion_auto.h: 37:     TRISDbits.TRISD4 = 0;
  5148                           
  5149                           ;incstack = 0
  5150  0026A0  9895               	bcf	3989,4,c	;volatile
  5151                           
  5152                           ;./../../LIBRERIAS/configuracion_auto.h: 38:     PORTDbits.RD4 = 0;
  5153  0026A2  9883               	bcf	3971,4,c	;volatile
  5154                           
  5155                           ;./../../LIBRERIAS/configuracion_auto.h: 39:     T5CON = 0x32;
  5156  0026A4  0E32               	movlw	50
  5157  0026A6  010F               	movlb	15	; () banked
  5158  0026A8  6F22               	movwf	34,b	;volatile
  5159                           
  5160                           ; BSR set to: 15
  5161                           ;./../../LIBRERIAS/configuracion_auto.h: 40:     TMR5H = 0xFF;
  5162  0026AA  6924               	setf	36,b	;volatile
  5163                           
  5164                           ;./../../LIBRERIAS/configuracion_auto.h: 41:     TMR5L = 0x6A;
  5165  0026AC  0E6A               	movlw	106
  5166  0026AE  6F23               	movwf	35,b	;volatile
  5167                           
  5168                           ; BSR set to: 15
  5169                           ;./../../LIBRERIAS/configuracion_auto.h: 42:     PIE5bits.TMR5IE = 1;
  5170  0026B0  8491               	bsf	3985,2,c	;volatile
  5171                           
  5172                           ; BSR set to: 15
  5173                           ;./../../LIBRERIAS/configuracion_auto.h: 43:     PIR5bits.TMR5IF = 0;
  5174  0026B2  9498               	bcf	3992,2,c	;volatile
  5175                           
  5176                           ; BSR set to: 15
  5177  0026B4  0012               	return		;funcret
  5178  0026B6                     __end_of_configurarTMR5:
  5179                           	opt callstack 0
  5180                           
  5181 ;; *************** function _configurarRS232 *****************
  5182 ;; Defined at:
  5183 ;;		line 25 in file "./../../LIBRERIAS/configuracion_auto.h"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    1
  5204 ;; This function calls:
  5205 ;;		Nothing
  5206 ;; This function is called by:
  5207 ;;		_configuracionInicial
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           	psect	text29
  5212  002688                     __ptext29:
  5213                           	opt callstack 0
  5214  002688                     _configurarRS232:
  5215                           	opt callstack 28
  5216                           
  5217                           ;./../../LIBRERIAS/configuracion_auto.h: 26:     TRISCbits.TRISC7 = 1;
  5218                           
  5219                           ; BSR set to: 15
  5220                           ;incstack = 0
  5221  002688  8E94               	bsf	3988,7,c	;volatile
  5222                           
  5223                           ;./../../LIBRERIAS/configuracion_auto.h: 27:     TRISCbits.TRISC6 = 0;
  5224  00268A  9C94               	bcf	3988,6,c	;volatile
  5225                           
  5226                           ;./../../LIBRERIAS/configuracion_auto.h: 28:     TXSTA1 = 0x22;
  5227  00268C  0E22               	movlw	34
  5228  00268E  6EAD               	movwf	4013,c	;volatile
  5229                           
  5230                           ;./../../LIBRERIAS/configuracion_auto.h: 29:     RCSTA1 = 0x90;
  5231  002690  0E90               	movlw	144
  5232  002692  6EAC               	movwf	4012,c	;volatile
  5233                           
  5234                           ;./../../LIBRERIAS/configuracion_auto.h: 30:     BAUDCON1bits.BRG16 = 0;
  5235  002694  967E               	bcf	3966,3,c	;volatile
  5236                           
  5237                           ;./../../LIBRERIAS/configuracion_auto.h: 31:     SPBRG1 = 77;
  5238  002696  0E4D               	movlw	77
  5239  002698  6EB0               	movwf	4016,c	;volatile
  5240                           
  5241                           ;./../../LIBRERIAS/configuracion_auto.h: 32:     PIR1bits.RC1IF = 0;
  5242  00269A  9A9E               	bcf	3998,5,c	;volatile
  5243                           
  5244                           ;./../../LIBRERIAS/configuracion_auto.h: 33:     PIE1bits.RC1IE = 1;
  5245  00269C  8A9D               	bsf	3997,5,c	;volatile
  5246  00269E  0012               	return		;funcret
  5247  0026A0                     __end_of_configurarRS232:
  5248                           	opt callstack 0
  5249                           
  5250 ;; *************** function _configurarPuertos *****************
  5251 ;; Defined at:
  5252 ;;		line 3 in file "./../../LIBRERIAS/configuracion_auto.h"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, status,2
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5270 ;;Total ram usage:        0 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    1
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_configuracionInicial
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text30
  5281  0026CA                     __ptext30:
  5282                           	opt callstack 0
  5283  0026CA                     _configurarPuertos:
  5284                           	opt callstack 28
  5285                           
  5286                           ;./../../LIBRERIAS/configuracion_auto.h: 4:     ANCON0 = 0x7F;
  5287                           
  5288                           ;incstack = 0
  5289  0026CA  0E7F               	movlw	127
  5290  0026CC  010F               	movlb	15	; () banked
  5291  0026CE  6F48               	movwf	72,b	;volatile
  5292                           
  5293                           ;./../../LIBRERIAS/configuracion_auto.h: 5:     ANCON1 = 0x1F;
  5294  0026D0  0E1F               	movlw	31
  5295  0026D2  6F49               	movwf	73,b	;volatile
  5296                           
  5297                           ; BSR set to: 15
  5298  0026D4  0012               	return		;funcret
  5299  0026D6                     __end_of_configurarPuertos:
  5300                           	opt callstack 0
  5301                           
  5302 ;; *************** function _configurarPWM7 *****************
  5303 ;; Defined at:
  5304 ;;		line 13 in file "./../../LIBRERIAS/configuracion_auto.h"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5322 ;;Total ram usage:        0 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    1
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_configuracionInicial
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text31
  5333  00264E                     __ptext31:
  5334                           	opt callstack 0
  5335  00264E                     _configurarPWM7:
  5336                           	opt callstack 28
  5337                           
  5338                           ;./../../LIBRERIAS/configuracion_auto.h: 14:     TRISBbits.TRISB4 = 0;
  5339                           
  5340                           ; BSR set to: 15
  5341                           ;incstack = 0
  5342  00264E  9893               	bcf	3987,4,c	;volatile
  5343                           
  5344                           ;./../../LIBRERIAS/configuracion_auto.h: 15:     TRISBbits.TRISB7 = 0;
  5345  002650  9E93               	bcf	3987,7,c	;volatile
  5346                           
  5347                           ;./../../LIBRERIAS/configuracion_auto.h: 16:     CCP7CONbits.CCP7M = 0xC;
  5348  002652  010F               	movlb	15	; () banked
  5349  002654  5109               	movf	9,w,b	;volatile
  5350  002656  0BF0               	andlw	-16
  5351  002658  090C               	iorlw	12
  5352  00265A  6F09               	movwf	9,b	;volatile
  5353                           
  5354                           ;./../../LIBRERIAS/configuracion_auto.h: 17:     CCPTMRS1bits.C7TSEL = 0b00;
  5355  00265C  0E3F               	movlw	-193
  5356  00265E  1751               	andwf	81,f,b	;volatile
  5357                           
  5358                           ;./../../LIBRERIAS/configuracion_auto.h: 19:     T2CON = 0x02;
  5359  002660  0E02               	movlw	2
  5360  002662  6ECA               	movwf	4042,c	;volatile
  5361                           
  5362                           ;./../../LIBRERIAS/configuracion_auto.h: 20:     PR2 = 124;
  5363  002664  0E7C               	movlw	124
  5364  002666  6ECB               	movwf	4043,c	;volatile
  5365                           
  5366                           ;./../../LIBRERIAS/configuracion_auto.h: 22:     TMR2 = 0x00;
  5367  002668  0E00               	movlw	0
  5368  00266A  6ECC               	movwf	4044,c	;volatile
  5369                           
  5370                           ; BSR set to: 15
  5371  00266C  0012               	return		;funcret
  5372  00266E                     __end_of_configurarPWM7:
  5373                           	opt callstack 0
  5374                           
  5375 ;; *************** function _configurarInterrupciones *****************
  5376 ;; Defined at:
  5377 ;;		line 8 in file "./../../LIBRERIAS/configuracion_auto.h"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;		None
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;		None
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		None
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5395 ;;Total ram usage:        0 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:    1
  5398 ;; This function calls:
  5399 ;;		Nothing
  5400 ;; This function is called by:
  5401 ;;		_configuracionInicial
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text32
  5406  0026D6                     __ptext32:
  5407                           	opt callstack 0
  5408  0026D6                     _configurarInterrupciones:
  5409                           	opt callstack 28
  5410                           
  5411                           ;./../../LIBRERIAS/configuracion_auto.h: 9:     INTCONbits.GIE = 1;
  5412                           
  5413                           ; BSR set to: 15
  5414                           ;incstack = 0
  5415  0026D6  8EF2               	bsf	4082,7,c	;volatile
  5416                           
  5417                           ;./../../LIBRERIAS/configuracion_auto.h: 10:     INTCONbits.PEIE = 1;
  5418  0026D8  8CF2               	bsf	4082,6,c	;volatile
  5419  0026DA  0012               	return		;funcret
  5420  0026DC                     __end_of_configurarInterrupciones:
  5421                           	opt callstack 0
  5422                           
  5423 ;; *************** function _configuracionADC *****************
  5424 ;; Defined at:
  5425 ;;		line 112 in file "sensores.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;		None
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  1    wreg      void 
  5432 ;; Registers used:
  5433 ;;		wreg, status,2
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5443 ;;Total ram usage:        0 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:    1
  5446 ;; This function calls:
  5447 ;;		Nothing
  5448 ;; This function is called by:
  5449 ;;		_configuracionInicial
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text33
  5454  0026B6                     __ptext33:
  5455                           	opt callstack 0
  5456  0026B6                     _configuracionADC:
  5457                           	opt callstack 28
  5458                           
  5459                           ;sensores.c: 113:     TRISEbits.TRISE2 = 1;
  5460                           
  5461                           ;incstack = 0
  5462  0026B6  8496               	bsf	3990,2,c	;volatile
  5463                           
  5464                           ;sensores.c: 114:     ANCON0bits.PCFG7 = 0;
  5465  0026B8  010F               	movlb	15	; () banked
  5466  0026BA  9F48               	bcf	72,7,b	;volatile
  5467                           
  5468                           ; BSR set to: 15
  5469                           ;sensores.c: 115:     ADCON0 = 0x1D;
  5470  0026BC  0E1D               	movlw	29
  5471  0026BE  6EC2               	movwf	4034,c	;volatile
  5472                           
  5473                           ;sensores.c: 116:     ADCON1 = 0xB6;
  5474  0026C0  0EB6               	movlw	182
  5475  0026C2  6EC1               	movwf	4033,c	;volatile
  5476                           
  5477                           ; BSR set to: 15
  5478                           ;sensores.c: 117:     PIR1bits.ADIF = 0;
  5479  0026C4  9C9E               	bcf	3998,6,c	;volatile
  5480                           
  5481                           ; BSR set to: 15
  5482                           ;sensores.c: 118:     PIE1bits.ADIE = 0;
  5483  0026C6  9C9D               	bcf	3997,6,c	;volatile
  5484                           
  5485                           ; BSR set to: 15
  5486  0026C8  0012               	return		;funcret
  5487  0026CA                     __end_of_configuracionADC:
  5488                           	opt callstack 0
  5489                           
  5490 ;; *************** function _rutina *****************
  5491 ;; Defined at:
  5492 ;;		line 38 in file "sensores.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  dato            1    2[COMRAM] unsigned char 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5508 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5509 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5510 ;;Total ram usage:        3 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		Interrupt level 2
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	intcode
  5520  000008                     __pintcode:
  5521                           	opt callstack 0
  5522  000008                     _rutina:
  5523                           	opt callstack 21
  5524                           
  5525                           ; BSR set to: 15
  5526                           ;incstack = 0
  5527  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5528  00000A  CFD9 F001          	movff	fsr2l,??_rutina
  5529  00000E  CFDA F002          	movff	fsr2h,??_rutina+1
  5530                           
  5531                           ;sensores.c: 39:     if(PIR1bits.RC1IF == 1){
  5532  000012  AA9E               	btfss	3998,5,c	;volatile
  5533  000014  D017               	goto	i2l2976
  5534                           
  5535                           ;sensores.c: 40:         unsigned char dato = RCREG1;
  5536  000016  CFAF F003          	movff	4015,rutina@dato	;volatile
  5537                           
  5538                           ;sensores.c: 41:         if(dato == 'P'){
  5539  00001A  0E50               	movlw	80
  5540  00001C  1803               	xorwf	rutina@dato,w,c
  5541  00001E  A4D8               	btfss	status,2,c
  5542  000020  D006               	goto	i2l144
  5543                           
  5544                           ;sensores.c: 42:             bandera = 1;
  5545  000022  0E01               	movlw	1
  5546  000024  0100               	movlb	0	; () banked
  5547  000026  6F84               	movwf	_bandera& (0+255),b
  5548                           
  5549                           ;sensores.c: 43:             indicador = 0;
  5550  000028  0E00               	movlw	0
  5551  00002A  6E5A               	movwf	_indicador,c
  5552                           
  5553                           ;sensores.c: 44:         }
  5554  00002C  D00B               	goto	i2l2976
  5555  00002E                     i2l144:
  5556                           
  5557                           ;sensores.c: 46:             TXREG1 = dato;
  5558  00002E  C003  FFAE         	movff	rutina@dato,4014	;volatile
  5559                           
  5560                           ;sensores.c: 47:             datos[indicador] = dato;
  5561  000032  0EA5               	movlw	low _datos
  5562  000034  245A               	addwf	_indicador,w,c
  5563  000036  6ED9               	movwf	fsr2l,c
  5564  000038  6ADA               	clrf	fsr2h,c
  5565  00003A  0E00               	movlw	high _datos
  5566  00003C  22DA               	addwfc	fsr2h,f,c
  5567  00003E  C003  FFDF         	movff	rutina@dato,indf2
  5568                           
  5569                           ;sensores.c: 48:             indicador++;
  5570  000042  2A5A               	incf	_indicador,f,c
  5571  000044                     i2l2976:
  5572                           
  5573                           ;sensores.c: 51:     if(PIR1bits.ADIF == 1){
  5574  000044  AC9E               	btfss	3998,6,c	;volatile
  5575  000046  D00A               	goto	i2l2982
  5576                           
  5577                           ;sensores.c: 52:         PIR1bits.ADIF = 0;
  5578  000048  9C9E               	bcf	3998,6,c	;volatile
  5579                           
  5580                           ;sensores.c: 53:         medicion_adc = ADRES;
  5581  00004A  CFC3 F080          	movff	4035,_medicion_adc	;volatile
  5582  00004E  CFC4 F081          	movff	4036,_medicion_adc+1	;volatile
  5583                           
  5584                           ;sensores.c: 54:         bandera_adc = 1;
  5585  000052  0E00               	movlw	0
  5586  000054  0100               	movlb	0	; () banked
  5587  000056  6F7F               	movwf	(_bandera_adc+1)& (0+255),b
  5588  000058  0E01               	movlw	1
  5589  00005A  6F7E               	movwf	_bandera_adc& (0+255),b
  5590  00005C                     i2l2982:
  5591                           
  5592                           ;sensores.c: 56:     if(PIR5bits.TMR5IF == 1){
  5593  00005C  A498               	btfss	3992,2,c	;volatile
  5594  00005E  D018               	goto	i2l149
  5595                           
  5596                           ;sensores.c: 57:         PIR5bits.TMR5IF = 0;
  5597  000060  9498               	bcf	3992,2,c	;volatile
  5598                           
  5599                           ;sensores.c: 58:         contador_timer_5++;
  5600  000062  0100               	movlb	0	; () banked
  5601  000064  4B7C               	infsnz	_contador_timer_5& (0+255),f,b
  5602  000066  2B7D               	incf	(_contador_timer_5+1)& (0+255),f,b
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;sensores.c: 59:         TMR5H = 0xFF;
  5606  000068  010F               	movlb	15	; () banked
  5607  00006A  6924               	setf	36,b	;volatile
  5608                           
  5609                           ; BSR set to: 15
  5610                           ;sensores.c: 60:         TMR5L = 0x6A;
  5611  00006C  0E6A               	movlw	106
  5612  00006E  6F23               	movwf	35,b	;volatile
  5613                           
  5614                           ; BSR set to: 15
  5615                           ;sensores.c: 61:         if(contador_timer_5 == TIME_MAX){
  5616  000070  0100               	movlb	0	; () banked
  5617  000072  51FB               	movf	_TIME_MAX& (0+255),w,b
  5618  000074  197C               	xorwf	_contador_timer_5& (0+255),w,b
  5619  000076  E10C               	bnz	i2l149
  5620  000078  51FC               	movf	(_TIME_MAX+1)& (0+255),w,b
  5621  00007A  197D               	xorwf	(_contador_timer_5+1)& (0+255),w,b
  5622  00007C  A4D8               	btfss	status,2,c
  5623  00007E  D008               	goto	i2l149
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;sensores.c: 62:             contador_timer_5 = 0;
  5627  000080  0E00               	movlw	0
  5628  000082  6F7D               	movwf	(_contador_timer_5+1)& (0+255),b
  5629  000084  0E00               	movlw	0
  5630  000086  6F7C               	movwf	_contador_timer_5& (0+255),b
  5631                           
  5632                           ;sensores.c: 63:             bandera_servo = 1;
  5633  000088  0E00               	movlw	0
  5634  00008A  6F7B               	movwf	(_bandera_servo+1)& (0+255),b
  5635  00008C  0E01               	movlw	1
  5636  00008E  6F7A               	movwf	_bandera_servo& (0+255),b
  5637  000090                     i2l149:
  5638  000090  C002  FFDA         	movff	??_rutina+1,fsr2h
  5639  000094  C001  FFD9         	movff	??_rutina,fsr2l
  5640  000098  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5641  00009A  0011               	retfie		f
  5642  00009C                     __end_of_rutina:
  5643                           	opt callstack 0
  5644                           
  5645                           	psect	rparam
  5646  0000                     
  5647                           	psect	temp
  5648  00005B                     btemp:
  5649                           	opt callstack 0
  5650  00005B                     	ds	1
  5651  0000                     int$flags	set	btemp
  5652  0000                     wtemp8	set	btemp+1
  5653  0000                     ttemp5	set	btemp+1
  5654  0000                     ttemp6	set	btemp+4
  5655  0000                     ttemp7	set	btemp+8
  5656                           tosu	equ	0xFFF
  5657                           tosh	equ	0xFFE
  5658                           tosl	equ	0xFFD
  5659                           stkptr	equ	0xFFC
  5660                           pclatu	equ	0xFFB
  5661                           pclath	equ	0xFFA
  5662                           pcl	equ	0xFF9
  5663                           tblptru	equ	0xFF8
  5664                           tblptrh	equ	0xFF7
  5665                           tblptrl	equ	0xFF6
  5666                           tablat	equ	0xFF5
  5667                           prodh	equ	0xFF4
  5668                           prodl	equ	0xFF3
  5669                           indf0	equ	0xFEF
  5670                           postinc0	equ	0xFEE
  5671                           postdec0	equ	0xFED
  5672                           preinc0	equ	0xFEC
  5673                           plusw0	equ	0xFEB
  5674                           fsr0h	equ	0xFEA
  5675                           fsr0l	equ	0xFE9
  5676                           wreg	equ	0xFE8
  5677                           indf1	equ	0xFE7
  5678                           postinc1	equ	0xFE6
  5679                           postdec1	equ	0xFE5
  5680                           preinc1	equ	0xFE4
  5681                           plusw1	equ	0xFE3
  5682                           fsr1h	equ	0xFE2
  5683                           fsr1l	equ	0xFE1
  5684                           bsr	equ	0xFE0
  5685                           indf2	equ	0xFDF
  5686                           postinc2	equ	0xFDE
  5687                           postdec2	equ	0xFDD
  5688                           preinc2	equ	0xFDC
  5689                           plusw2	equ	0xFDB
  5690                           fsr2h	equ	0xFDA
  5691                           fsr2l	equ	0xFD9
  5692                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    0
    Data        4
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      90
    BANK0           160     76     159
    BANK1           256      0      20
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> logicaEstadoSiguiente@texto(BANK0[20]), main@text_adc(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> logicaEstadoSiguiente@texto(BANK0[20]), main@text_adc(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1411_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> logicaEstadoSiguiente@texto(BANK0[20]), main@text_adc(BANK0[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> logicaEstadoSiguiente@texto(BANK0[20]), main@text_adc(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    logicaEstadoSiguiente@comand	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK0[10]), 

    enviarRS232@valores	PTR unsigned char  size(2) Largest target is 20
		 -> logicaEstadoSiguiente@texto(BANK0[20]), main@text_adc(BANK0[20]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _fijarVelocidad->___fladd
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fladd->___flmul
    _encenderMotor->_rutinaArranque

Critical Paths under _rutina in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_logicaEstadoSiguiente
    _logicaEstadoSiguiente->_sprintf
    _sprintf->_vfprintf

Critical Paths under _rutina in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rutina in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rutina in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rutina in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rutina in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rutina in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rutina in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rutina in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _rutina in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   35652
                                             53 BANK0     23    23      0
               _configuracionInicial
                        _enviarRS232
              _logicaEstadoSiguiente
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _logicaEstadoSiguiente                               29    27      2   20556
                                             24 BANK0     29    27      2
                         _dirreccion
                      _encenderMotor
                        _enviarRS232
                     _fijarVelocidad
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   14554
                                              6 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   13876
                                             85 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   13340
                                             62 COMRAM    23    17      6
                               _atoi
                               _ctoa
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5099
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              3 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              3 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3966
                                             30 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3687
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1615
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     512
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _fijarVelocidad                                       9     9      0    5207
                                             58 COMRAM     9     9      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             42 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2048
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2388
                                             42 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _enviarRS232                                          5     2      3     394
                                              3 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _encenderMotor                                        2     2      0       0
                                              5 COMRAM     2     2      0
                     _rutinaArranque
 ---------------------------------------------------------------------------------
 (3) _rutinaArranque                                       2     2      0       0
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _dirreccion                                           4     4      0      70
                                              3 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _configuracionInicial                                 0     0      0       0
                   _configuracionADC
           _configurarInterrupciones
                     _configurarPWM7
                  _configurarPuertos
                    _configurarRS232
                     _configurarTMR5
 ---------------------------------------------------------------------------------
 (2) _configurarTMR5                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarRS232                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPuertos                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPWM7                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarInterrupciones                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configuracionADC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rutina                                              3     3      0      67
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuracionInicial
     _configuracionADC
     _configurarInterrupciones
     _configurarPWM7
     _configurarPuertos
     _configurarRS232
     _configurarTMR5
   _enviarRS232
   _logicaEstadoSiguiente
     _dirreccion
     _encenderMotor
       _rutinaArranque
     _enviarRS232
     _fijarVelocidad
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 _rutina (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      14       8        7.8%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10D       6        0.0%
DATA                 0      0     10D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jun 14 19:30:27 2019

              ___wmul@multiplicand 0006                       __CFG_CP0$OFF 000000  
                              l223 22B6                                l240 18DE  
                              l160 1FA6                                l242 18E6  
                              l189 2358                                l902 0F92  
                              l726 205C                                l911 11AA  
                              l912 11A6                                l736 21C4  
                              l833 17C8                                l817 16F6  
                              l842 182E                                l818 16D4  
                              l843 182A                                l950 1C80  
                              l919 1230                                l943 1C02  
                              l987 1BBA                                _PR2 000FCB  
                  ?_configurarTMR5 0001                    ?_configurarPWM7 0001  
                              _pad 2286                   ??_fijarVelocidad 003B  
                              wreg 000FE8                       __CFG_IESO$ON 000000  
                     ___flmul@aexp 0023                       ___flmul@bexp 0024  
                     ___flmul@sign 001E                       ___flmul@temp 0029  
                     ___flmul@prod 0025                       ___fltol@exp1 0034  
                  ??_encenderMotor 0006      logicaEstadoSiguiente@medicion 00E2  
                             l3130 21FE                               l2500 16E6  
                             l2420 15E0                               l3300 1AD4  
                             l3140 2514                               l3310 1AF2  
                             l3150 25E4                               l3206 2046  
                             l3222 21AE                               l3214 2152  
                             l2600 18A4                               l2424 15E4  
                             l3312 1B1E                               l3144 252A  
                             l3160 22A0                               l3216 2166  
                             l2522 173C                               l2514 171A  
                             l3234 2502                               l3306 1AE4  
                             l3170 22D8                               l3242 2448  
                             l3410 155A                               l2524 1740  
                             l2532 1752                               l2444 1628  
                             l3316 1B56                               l3308 1AEC  
                             l3148 25E0                               l3164 22AE  
                             l3244 2454                               l3404 151A  
                             l3340 12AE                               l3420 157C  
                             l2550 17EC                               l2542 17B8  
                             l2622 0F3E                               l3174 2306  
                             l3166 22C0                               l3414 1564  
                             l3342 12B2                               l2560 1802  
                             l2456 164C                               l2448 162C  
                             l2640 0F7E                               l2624 0F42  
                             l2800 1C42                               l3264 191C  
                             l3360 12DA                               l3352 12CE  
                             l3344 12C2                               l3440 23C4  
                             l3504 1F16                               l2722 120C  
                             l2650 0FB0                               l2642 0F82  
                             l2626 0F52                               l2810 1CB2  
                             l2802 1C68                               l3290 1A82  
                             l3194 1FD6                               l3274 1A08  
                             l2900 232C                               l3292 1A86  
                             l3196 1FEA                               l3380 13BA  
                             l3364 12E4                               l3356 12D4  
                             l3348 12C8                               l3460 1D18  
                             l3516 1F78                               l2910 2368  
                             l2902 2330                               l2566 180C  
                             l2486 1688                               l2734 124E  
                             l2718 11EE                               l3382 13C8  
                             l3366 132A                               l3438 239E  
                             l3470 1D36                               l3462 1D1E  
                             l2808 1CA6                               l2914 237C  
                             l2906 2336                               l2594 189A  
                             l2586 1874                               l2498 16E2  
                             l2762 20E6                               l2746 209C  
                             l2826 1CF2                               l3378 139C  
                             l3474 1D5C                               l3466 1D26  
                             l3458 1D12                               l3482 1DC0  
                             l2692 1152                               l2780 2126  
                             l2772 20FE                               l3396 147C  
                             l3468 1D2E                               l2598 18A2  
                             l2774 210A                               l2766 20F6  
                             l2790 1C12                               ?_pad 0014  
                             l2874 25CC                               l2698 1170  
                             l3498 1EFE                               l2868 25AC  
                             l2796 1C30                               l2798 1C36  
                             l2898 2328                 __CFG_WPFP$PAGE_127 000000  
                             STR_1 0F09                               STR_2 0F01  
                             u2000 16FE                               u3000 1A32  
                             u3001 1A30                               u2210 1880  
                             u2130 1810                               u3010 1A40  
                             u3020 1A46                               u2150 1824  
                             u2320 0F9E                               u3040 1AD0  
                             u2410 11FC                               u2330 1114  
                             u2420 121A                               u3060 1B8A  
                             u3221 1D0A                               u3070 1B8C  
                             u3150 1404                               u2335 110A  
                             u3231 1EE6                               u2440 208A  
                             u3160 1406                               u2370 11A0  
                             u2450 20BA                               u3170 1412  
                             u3307 261A                               u2455 20B0  
                             u2490 2110                               u2570 1CBC  
                             u1950 16AA                               u2750 21F6  
                             u2910 216A                               u3287 1F68  
                             u1960 16BA                               u2840 259E  
                             u3297 25C2                               u1970 16BC  
                             u2850 25A0                               u2770 223E  
                             u2940 24FE                               u2861 1FB6  
                             u2880 1FEE                               u2970 18D4  
                             _TMR2 000FCC                   ?_configurarRS232 0001  
                     ?_enviarRS232 0004                      __CFG_FCMEN$ON 000000  
                             _dbuf 0085                               _atoi 1A70  
                             _ctoa 2436                               _main 1EE0  
                             _prec 0076                               _nout 0074  
                             pad@i 001B                               pad@p 0018  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 001D                               fsr2l 000FD9  
                             btemp 005B                               _utoa 18C0  
                             prodh 000FF4                               prodl 000FF3  
                             start 009C                       ___param_bank 000000  
                            ??_pad 001A                      __CFG_PLLDIV$3 000000  
                     _BAUDCON1bits 000F7E                      ___fltol@sign1 0033  
                            ?_atoi 000B                              ?_ctoa 001F  
                  __end_of___fladd 18C0                              ?_main 0001  
                            _ADRES 000FC3                    __end_of___flmul 1264  
                  __end_of___fltol 2138                              ?_utoa 001F  
                  __end_of___lodiv 207E                              _T2CON 000FCA  
                  __end_of___lomod 21E6                              _T5CON 000F22  
                            i2l144 002E                              i2l149 0090  
                     vfpfcnvrt@fmt 0041                       vfpfcnvrt@llu 0049  
                            _TMR5H 000F24                              _TMR5L 000F23  
                            _TXREG 000FAE                              _datos 00A5  
                            _flags 0078                  ?_configuracionADC 0001  
                            _fputc 21E6                              _fputs 250A  
                  __end_of_isdigit 25A6                     __CFG_CLKOEC$ON 000000  
                            atoi@n 0018                              pad@fp 0014  
                            atoi@s 000B                              _width 0058  
                            ctoa@c 0021                              _putch 26E0  
                            ctoa@w 0022                    __end_of_isspace 250A  
                            tablat 000FF5                 ??_configuracionADC 0004  
                     main@text_adc 00E6                              ttemp5 005C  
                            ttemp6 005F                              ttemp7 0063  
                            utoa@d 0021                              utoa@i 003D  
                            utoa@n 0035                              utoa@p 0031  
                            utoa@w 0033                              status 000FD8  
                            wtemp8 005C                    __end_of_sprintf 2436  
           ?_logicaEstadoSiguiente 00C7                   ___lodiv@dividend 0004  
          __CFG_DSWDTOSC$INTOSCREF 000000                    __initialization 2484  
                     __end_of_atoi 1BC4                       __end_of_ctoa 2484  
                     __end_of_main 1FB0                       __end_of_utoa 1A70  
                   __CFG_OSC$HSPLL 000000                             ??_atoi 000D  
                           ??_ctoa 0022                             ??_main 00E4  
                           ??_utoa 0029                      __activetblptr 000003  
                 dirreccion@degree 0006                   ___lodiv@quotient 0014  
                           _ADCON0 000FC2                             _ADCON1 000FC1  
                           ?_fputc 0004                             ?_fputs 000D  
                           _CCPR7L 000F0A                             _ANCON0 000F48  
                           _ANCON1 000F49                             ?_putch 0001  
                   __CFG_WDTEN$OFF 000000                             i2l2982 005C  
                           i2l2976 0044                             _RCREG1 000FAF  
                           _RCSTA1 000FAC                      vfpfcnvrt@done 0052  
                           _SPBRG1 000FB0                     __CFG_WPCFG$OFF 000000  
                           _TXREG1 000FAE                   __end_of___xxtofl 1D04  
                           _TXSTA1 000FAD                     __CFG_WPDIS$OFF 000000  
                 _contador_timer_5 007C                     __CFG_XINST$OFF 000000  
                     _CCPTMRS1bits 000F51                       vfprintf@cfmt 0056  
                        ??___fladd 0033                             ___wmul 2628  
                   __CFG_STVREN$ON 000000                          ??___flmul 001A  
                        ??___fltol 002F      __size_of_configuracionInicial 001A  
                        ??___lodiv 0014                          ??___lomod 0014  
                           clear_0 24AA                             clear_1 24B6  
                           pad@buf 0016                             ctoa@fp 001F  
                           _rutina 0008                             _strlen 25D6  
                _configurarPuertos 26CA                             fputc@c 0004  
                           fputs@c 0011                             fputs@i 0012  
                           fputs@s 000D                          ??_isdigit 0006  
               ?_configurarPuertos 0001                       __mediumconst 0000  
                        ??_isspace 0006                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                           putch@c 0001                   __end_of_vfprintf 23E4  
                           utoa@fp 001F                          ??_sprintf 0058  
              ??_configurarPuertos 0004               __CFG_LS48MHZ$SYS48X8 000000  
                     ___xxtofl@arg 000E                       ___xxtofl@exp 000D  
                     ___xxtofl@val 0004                         __accesstop 0060  
          __end_of__initialization 24C2           _configurarInterrupciones 26D6  
             __size_of_enviarRS232 0030                      ___rparam_used 000001  
                       ___fltol@f1 002B                       enviarRS232@i 0008  
                  __CFG_IOL1WAY$ON 000000               __CFG_WPEND$PAGE_WPFP 000000  
                   __pcstackCOMRAM 0001                       __pidataBANK0 26DC  
                 ??_configurarTMR5 0004                   ??_configurarPWM7 0004  
                    __end_of_fputc 2286                      __end_of_fputs 2542  
                    __end_of_putch 26E2          __end_of_configurarPuertos 26D6  
                  __CFG_DSWDTPS$G2 000000                            ??_fputc 0008  
                          ??_fputs 0011                            ??_putch 0004  
          __size_of_rutinaArranque 0028                         __pbssBANK0 0060  
                       __pbssBANK1 0100                            ?___wmul 0004  
                          ?_rutina 0001                            ?_strlen 0004  
                        ?___xxtofl 0004                 __size_of_vfpfcnvrt 0350  
                       _dirreccion 2320                   fijarVelocidad@DC 003B  
                    _bandera_servo 007A                   ___lomod@dividend 0004  
          ??_logicaEstadoSiguiente 00C9              __end_of_encenderMotor 2576  
                 __CFG_CFGPLLEN$ON 000000                            __Hparam 0000  
                          __Lparam 0000           __size_of_configurarRS232 0018  
        __size_of_configuracionADC 0014                            ___fladd 15B4  
                          ___flmul 0F12                            ___fltol 207E  
                  __size_of___wmul 0026                            ___lodiv 1FB0  
                          ___lomod 2138                          ?_vfprintf 00AF  
                     __psmallconst 0F00                            _bandera 0084  
       __size_of_configurarPuertos 000C                            __pcinit 2484  
                          __ramtop 0F00                            __ptext0 1EE0  
                          __ptext1 1D04                            __ptext2 23E4  
                          __ptext3 238A                            __ptext4 1264  
                          __ptext5 18C0                            __ptext6 2138  
                          __ptext7 1FB0                            __ptext8 2436  
                          __ptext9 2286                    __size_of_rutina 0094  
                  __size_of_strlen 002A                          _T2CONbits 000FCA  
                     __size_of_pad 009A                            _isdigit 2576  
                       ??___xxtofl 0008                            _isspace 24CC  
                        _T5CONbits 000F22                            atoi@neg 0011  
                          _sprintf 23E4               end_of_initialization 24C2  
                          fputc@fp 0006                            fputs@fp 000F  
          __size_of_fijarVelocidad 00E0                  __end_of_vfpfcnvrt 15B4  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                         ??_vfprintf 0056  
                          strlen@a 0006                            strlen@s 0004  
                        _PORTDbits 000F83                   __CFG_DSBOREN$OFF 000000  
                      ___fladd@grs 003A                   __CFG_CPUDIV$OSC1 000000  
                    ___xxtofl@sign 000C                          _TRISBbits 000F93  
                        _TRISCbits 000F94                          _TRISDbits 000F95  
                        _TRISEbits 000F96                        ?_dirreccion 0001  
       ??_configurarInterrupciones 0004       __end_of_configuracionInicial 2688  
                __CFG_SOSCSEL$HIGH 000000                     _rutinaArranque 2600  
                      ___flmul@grs 001F                        _CCP7CONbits 000F09  
              __CFG_MSSP7B_EN$MSK7 000000                        vfpfcnvrt@ap 0043  
                      vfpfcnvrt@fp 003F                     __end_of___wmul 264E  
                ??_configurarRS232 0004                   __CFG_DSWDTEN$OFF 000000  
                     _medicion_adc 0080                     __end_of_rutina 009C  
                   __end_of_strlen 2600                start_initialization 2484  
                  ___lodiv@divisor 000C                    ___lodiv@counter 001C  
           __end_of_rutinaArranque 2628                        __end_of_pad 2320  
                    ??_enviarRS232 0007                        _bandera_adc 007E  
                      vfprintf@fmt 00B1                   _configuracionADC 26B6  
              __size_of_dirreccion 006A                           ??___wmul 0008  
                __CFG_ADCSEL$BIT12 000000                        __pdataBANK0 00FB  
                         ??_rutina 0001                           ??_strlen 0006  
                        ___fladd@a 002F                          ___fladd@b 002B  
                        ___flmul@a 0016                          ___flmul@b 0012  
                      __pbssCOMRAM 0058                      __pcstackBANK0 00AF  
                  ?_rutinaArranque 0001                  __size_of___xxtofl 0140  
   __size_of_logicaEstadoSiguiente 00FC      __end_of_logicaEstadoSiguiente 1E00  
                   _fijarVelocidad 1E00                          _atoi$1390 0017  
                        _atoi$1391 0015                          _atoi$1389 0013  
              __end_of_enviarRS232 25D6                 enviarRS232@valores 0004  
                        __pintcode 0008                           ?___fladd 002B  
                         ?___flmul 0012                           ?___fltol 002B  
             _configuracionInicial 266E                 dirreccion@tiempo_1 0007  
                         ?___lodiv 0004                           ?___lomod 0004  
                __size_of_vfprintf 005A                    ___lomod@divisor 000C  
                      __smallconst 0F00                    ___lomod@counter 0014  
                         ?_isdigit 0004                          _indicador 005A  
             __CFG_RTCOSC$T1OSCREF 000000                           ?_isspace 0004  
 __end_of_configurarInterrupciones 26DC            __size_of_configurarPWM7 0020  
          __size_of_configurarTMR5 0016                           ?_sprintf 00B5  
                   __size_of_fputc 00A0                     __size_of_fputs 0038  
           __end_of_fijarVelocidad 1EE0                     __size_of_putch 0002  
      logicaEstadoSiguiente@comand 00C7                     ___wmul@product 0008  
                         _PIE1bits 000F9D                           _PIE5bits 000F91  
                         _PIR1bits 000F9E                           _PIR5bits 000F98  
                 __CFG_WDTPS$32768 000000              ?_configuracionInicial 0001  
                        main@F7088 0060                           _TIME_MAX 00FB  
                        _velocidad 0082                          _vfpfcnvrt 1264  
                       _ADCON0bits 000FC2                  ___wmul@multiplier 0004  
           __size_of_encenderMotor 0034          enviarRS232@numero_valores 0006  
                     ??_dirreccion 0004                       _isspace$1407 000A  
                       vfpfcnvrt@c 0051                          copy_data0 2498  
                  ?_fijarVelocidad 0001                        _enviarRS232 25A6  
                  _configurarRS232 2688                         _ANCON0bits 000F48  
                         __Hrparam 0000                         vfprintf@ap 00B3  
                         __Lrparam 0000                         vfprintf@fp 00AF  
               __end_of_dirreccion 238A                   __size_of___fladd 030C  
                 __size_of___flmul 0352                   __size_of___fltol 00BA  
                 __size_of___lodiv 00CE                   __size_of___lomod 00AE  
                       ?_vfpfcnvrt 003F                _fijarVelocidad$1672 003F  
                       sprintf@fmt 00B7                           _cicle_90 00FD  
                         ___xxtofl 1BC4                   __size_of_isdigit 0030  
       logicaEstadoSiguiente@F7096 0100                   __size_of_isspace 003E  
         __end_of_configuracionADC 26CA                           __ptext10 25D6  
                         __ptext11 250A                           __ptext20 207E  
                         __ptext12 21E6                           __ptext21 0F12  
                         __ptext13 26E0                           __ptext30 26CA  
                         __ptext22 15B4                           __ptext14 1A70  
                         __ptext31 264E                           __ptext23 25A6  
                         __ptext15 24CC                           __ptext32 26D6  
                         __ptext24 2542                           __ptext16 2576  
                         __ptext33 26B6                           __ptext25 2600  
                         __ptext17 2628                           __ptext26 2320  
                         __ptext18 1E00                           __ptext27 266E  
                         __ptext19 1BC4                           __ptext28 26A0  
                         __ptext29 2688                         rutina@dato 0003  
                 __size_of_sprintf 0052                      _encenderMotor 2542  
                    __size_of_atoi 0154                      __size_of_ctoa 004E  
                    __size_of_main 00D0                      __size_of_utoa 01B0  
       logicaEstadoSiguiente@texto 00CE             ??_configuracionInicial 0004  
__size_of_configurarInterrupciones 0006          ?_configurarInterrupciones 0001  
                         int$flags 005B                           _vfprintf 238A  
                 ??_rutinaArranque 0004                         _INTCONbits 000FF2  
                   _configurarTMR5 26A0                     _configurarPWM7 264E  
                         isdigit@c 0004              main@tiempo_anterior_1 00FA  
          __end_of_configurarRS232 26A0                           intlevel2 0000  
                        sprintf@ap 00BF                     ?_encenderMotor 0001  
                         isspace@c 0004                        ??_vfpfcnvrt 0045  
                    _vfpfcnvrt$933 0054                           sprintf@f 00C1  
                         sprintf@s 00B5             __end_of_configurarPWM7 266E  
           __end_of_configurarTMR5 26B6                      ___fladd@signs 0037  
              fijarVelocidad@speed 0043                       ___fladd@aexp 0038  
                     ___fladd@bexp 0039              _logicaEstadoSiguiente 1D04  
