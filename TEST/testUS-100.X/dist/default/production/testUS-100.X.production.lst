

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jun 22 23:01:07 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56  0000                     
    57                           ; Version 2.05
    58                           ; Generated 20/12/2018 GMT
    59                           ; 
    60                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F47J53 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataBANK0
    93  003516                     __pidataBANK0:
    94                           	opt callstack 0
    95                           
    96                           ;initializer for _velocidad
    97  003516  01C2               	dw	450
    98                           
    99                           ;initializer for _cicle_90
   100  003518  01C2               	dw	450
   101  0000                     _CCPR7L	set	3850
   102  0000                     _TMR5L	set	3875
   103  0000                     _TMR5H	set	3876
   104  0000                     _T5CON	set	3874
   105  0000                     _CCPTMRS1bits	set	3921
   106  0000                     _CCP7CONbits	set	3849
   107  0000                     _ANCON1	set	3913
   108  0000                     _ANCON0	set	3912
   109  0000                     _PORTBbits	set	3969
   110  0000                     _RCREG1	set	4015
   111  0000                     _TXREG1	set	4014
   112  0000                     _T2CONbits	set	4042
   113  0000                     _PIR5bits	set	3992
   114  0000                     _PIE5bits	set	3985
   115  0000                     _PORTDbits	set	3971
   116  0000                     _TRISDbits	set	3989
   117  0000                     _PIE1bits	set	3997
   118  0000                     _PIR1bits	set	3998
   119  0000                     _SPBRG1	set	4016
   120  0000                     _BAUDCON1bits	set	3966
   121  0000                     _RCSTA1	set	4012
   122  0000                     _TXSTA1	set	4013
   123  0000                     _TRISCbits	set	3988
   124  0000                     _TMR2	set	4044
   125  0000                     _PR2	set	4043
   126  0000                     _T2CON	set	4042
   127  0000                     _INTCON2bits	set	4081
   128  0000                     _INTCONbits	set	4082
   129  0000                     _TRISBbits	set	3987
   130  0000                     _TRISAbits	set	3986
   131                           
   132                           	psect	smallconst
   133  000F00                     __psmallconst:
   134                           	opt callstack 0
   135  000F00  00                 	db	0
   136  000F01                     STR_1:
   137  000F01  25                 	db	37
   138  000F02  33                 	db	51	;'3'
   139  000F03  2E                 	db	46
   140  000F04  32                 	db	50	;'2'
   141  000F05  66                 	db	102	;'f'
   142  000F06  20                 	db	32
   143  000F07  63                 	db	99	;'c'
   144  000F08  6D                 	db	109	;'m'
   145  000F09  00                 	db	0
   146  000F0A                     STR_2:
   147  000F0A  49                 	db	73	;'I'
   148  000F0B  4E                 	db	78	;'N'
   149  000F0C  46                 	db	70	;'F'
   150  000F0D  00                 	db	0
   151  000F0E                     STR_6:
   152  000F0E  4E                 	db	78	;'N'
   153  000F0F  41                 	db	65	;'A'
   154  000F10  4E                 	db	78	;'N'
   155  000F11  00                 	db	0
   156  000F12                     STR_3:
   157  000F12  69                 	db	105	;'i'
   158  000F13  6E                 	db	110	;'n'
   159  000F14  66                 	db	102	;'f'
   160  000F15  00                 	db	0
   161  000F16                     STR_7:
   162  000F16  6E                 	db	110	;'n'
   163  000F17  61                 	db	97	;'a'
   164  000F18  6E                 	db	110	;'n'
   165  000F19  00                 	db	0
   166  000F1A                     STR_10:
   167  000F1A  6C                 	db	108	;'l'
   168  000F1B  66                 	db	102	;'f'
   169  000F1C  00                 	db	0
   170  0000                     
   171                           ; #config settings
   172  000F1D  00                 	db	0	; dummy byte at the end
   173  0000                     
   174                           	psect	cinit
   175  0031F6                     __pcinit:
   176                           	opt callstack 0
   177  0031F6                     start_initialization:
   178                           	opt callstack 0
   179  0031F6                     __initialization:
   180                           	opt callstack 0
   181                           
   182                           ; Initialize objects allocated to BANK0 (4 bytes)
   183                           ; load TBLPTR registers with __pidataBANK0
   184  0031F6  0E16               	movlw	low __pidataBANK0
   185  0031F8  6EF6               	movwf	tblptrl,c
   186  0031FA  0E35               	movlw	high __pidataBANK0
   187  0031FC  6EF7               	movwf	tblptrh,c
   188  0031FE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   189  003200  6EF8               	movwf	tblptru,c
   190  003202  EE00  F0E8         	lfsr	0,__pdataBANK0
   191  003206  EE10 F004          	lfsr	1,4
   192  00320A                     copy_data0:
   193  00320A  0009               	tblrd		*+
   194  00320C  CFF5 FFEE          	movff	tablat,postinc0
   195  003210  50E5               	movf	postdec1,w,c
   196  003212  50E1               	movf	fsr1l,w,c
   197  003214  E1FA               	bnz	copy_data0
   198                           
   199                           ; Clear objects allocated to BANK1 (80 bytes)
   200  003216  EE01  F000         	lfsr	0,__pbssBANK1
   201  00321A  0E50               	movlw	80
   202  00321C                     clear_0:
   203  00321C  6AEE               	clrf	postinc0,c
   204  00321E  06E8               	decf	wreg,f,c
   205  003220  E1FD               	bnz	clear_0
   206                           
   207                           ; Clear objects allocated to BANK0 (36 bytes)
   208  003222  EE00  F0C4         	lfsr	0,__pbssBANK0
   209  003226  0E24               	movlw	36
   210  003228                     clear_1:
   211  003228  6AEE               	clrf	postinc0,c
   212  00322A  06E8               	decf	wreg,f,c
   213  00322C  E1FD               	bnz	clear_1
   214                           
   215                           ; Clear objects allocated to COMRAM (6 bytes)
   216  00322E  6A58               	clrf	(__pbssCOMRAM+5)& (0+255),c
   217  003230  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
   218  003232  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   219  003234  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   220  003236  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   221  003238  6A53               	clrf	__pbssCOMRAM& (0+255),c
   222  00323A                     end_of_initialization:
   223                           	opt callstack 0
   224  00323A                     __end_of__initialization:
   225                           	opt callstack 0
   226  00323A  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   227  00323C  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   228  00323E  0100               	movlb	0
   229  003240  EF6E  F016         	goto	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMRAM
   232  000053                     __pbssCOMRAM:
   233                           	opt callstack 0
   234  000053                     _prec:
   235                           	opt callstack 0
   236  000053                     	ds	2
   237  000055                     _flags:
   238                           	opt callstack 0
   239  000055                     	ds	2
   240  000057                     _indicador:
   241                           	opt callstack 0
   242  000057                     	ds	1
   243  000058                     _contador:
   244                           	opt callstack 0
   245  000058                     	ds	1
   246                           
   247                           	psect	bssBANK0
   248  0000C4                     __pbssBANK0:
   249                           	opt callstack 0
   250  0000C4                     _datos:
   251                           	opt callstack 0
   252  0000C4                     	ds	10
   253  0000CE                     floorf@F524:
   254                           	opt callstack 0
   255  0000CE                     	ds	4
   256  0000D2                     ___fpclassifyf@F463:
   257                           	opt callstack 0
   258  0000D2                     	ds	4
   259  0000D6                     _distancia:
   260                           	opt callstack 0
   261  0000D6                     	ds	4
   262  0000DA                     _nout:
   263                           	opt callstack 0
   264  0000DA                     	ds	2
   265  0000DC                     _width:
   266                           	opt callstack 0
   267  0000DC                     	ds	2
   268  0000DE                     _bandera:
   269                           	opt callstack 0
   270  0000DE                     	ds	1
   271  0000DF                     _time_pulse:
   272                           	opt callstack 0
   273  0000DF                     	ds	1
   274  0000E0                     _bandera_ultra_sonico:
   275                           	opt callstack 0
   276  0000E0                     	ds	1
   277  0000E1                     _motor:
   278                           	opt callstack 0
   279  0000E1                     	ds	1
   280  0000E2                     _texto:
   281                           	opt callstack 0
   282  0000E2                     	ds	6
   283                           
   284                           	psect	dataBANK0
   285  0000E8                     __pdataBANK0:
   286                           	opt callstack 0
   287  0000E8                     _velocidad:
   288                           	opt callstack 0
   289  0000E8                     	ds	2
   290  0000EA                     _cicle_90:
   291                           	opt callstack 0
   292  0000EA                     	ds	2
   293                           
   294                           	psect	bssBANK1
   295  000100                     __pbssBANK1:
   296                           	opt callstack 0
   297  000100                     _dbuf:
   298                           	opt callstack 0
   299  000100                     	ds	80
   300                           
   301                           	psect	cstackBANK0
   302  000060                     __pcstackBANK0:
   303                           	opt callstack 0
   304  000060                     efgtoa@ou:
   305                           	opt callstack 0
   306                           
   307                           ; 4 bytes @ 0x0
   308  000060                     	ds	4
   309  000064                     _efgtoa$976:
   310                           	opt callstack 0
   311                           
   312                           ; 2 bytes @ 0x4
   313  000064                     	ds	2
   314  000066                     _efgtoa$977:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0x6
   318  000066                     	ds	2
   319  000068                     _efgtoa$982:
   320                           	opt callstack 0
   321                           
   322                           ; 2 bytes @ 0x8
   323  000068                     	ds	2
   324  00006A                     _efgtoa$986:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0xA
   328  00006A                     	ds	2
   329  00006C                     _efgtoa$987:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0xC
   333  00006C                     	ds	2
   334  00006E                     _efgtoa$988:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0xE
   338  00006E                     	ds	2
   339  000070                     efgtoa@t:
   340                           	opt callstack 0
   341                           
   342                           ; 2 bytes @ 0x10
   343  000070                     	ds	2
   344  000072                     efgtoa@pp:
   345                           	opt callstack 0
   346                           
   347                           ; 2 bytes @ 0x12
   348  000072                     	ds	2
   349  000074                     efgtoa@m:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0x14
   353  000074                     	ds	2
   354  000076                     efgtoa@ne:
   355                           	opt callstack 0
   356                           
   357                           ; 2 bytes @ 0x16
   358  000076                     	ds	2
   359  000078                     efgtoa@d:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x18
   363  000078                     	ds	2
   364  00007A                     efgtoa@sign:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x1A
   368  00007A                     	ds	2
   369  00007C                     efgtoa@p:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x1C
   373  00007C                     	ds	2
   374  00007E                     efgtoa@nmode:
   375                           	opt callstack 0
   376                           
   377                           ; 1 bytes @ 0x1E
   378  00007E                     	ds	1
   379  00007F                     efgtoa@w:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x1F
   383  00007F                     	ds	2
   384  000081                     efgtoa@mode:
   385                           	opt callstack 0
   386                           
   387                           ; 1 bytes @ 0x21
   388  000081                     	ds	1
   389  000082                     efgtoa@h:
   390                           	opt callstack 0
   391                           
   392                           ; 4 bytes @ 0x22
   393  000082                     	ds	4
   394  000086                     efgtoa@l:
   395                           	opt callstack 0
   396                           
   397                           ; 4 bytes @ 0x26
   398  000086                     	ds	4
   399  00008A                     efgtoa@i:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x2A
   403  00008A                     	ds	2
   404  00008C                     efgtoa@g:
   405                           	opt callstack 0
   406                           
   407                           ; 4 bytes @ 0x2C
   408  00008C                     	ds	4
   409  000090                     efgtoa@e:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x30
   413  000090                     	ds	2
   414  000092                     efgtoa@n:
   415                           	opt callstack 0
   416                           
   417                           ; 2 bytes @ 0x32
   418  000092                     	ds	2
   419  000094                     efgtoa@u:
   420                           	opt callstack 0
   421                           
   422                           ; 4 bytes @ 0x34
   423  000094                     	ds	4
   424  000098                     ??_vfpfcnvrt:
   425                           
   426                           ; 1 bytes @ 0x38
   427  000098                     	ds	4
   428  00009C                     _vfpfcnvrt$1002:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x3C
   432  00009C                     	ds	2
   433  00009E                     _vfpfcnvrt$1003:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x3E
   437  00009E                     	ds	2
   438  0000A0                     _vfpfcnvrt$1007:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0x40
   442  0000A0                     	ds	2
   443  0000A2                     vfpfcnvrt@f:
   444                           	opt callstack 0
   445                           
   446                           ; 4 bytes @ 0x42
   447  0000A2                     	ds	4
   448  0000A6                     vfpfcnvrt@ct:
   449                           	opt callstack 0
   450                           
   451                           ; 3 bytes @ 0x46
   452  0000A6                     	ds	3
   453  0000A9                     vfpfcnvrt@c:
   454                           	opt callstack 0
   455                           
   456                           ; 1 bytes @ 0x49
   457  0000A9                     	ds	1
   458  0000AA                     ?_vfprintf:
   459                           	opt callstack 0
   460  0000AA                     vfprintf@fp:
   461                           	opt callstack 0
   462                           
   463                           ; 2 bytes @ 0x4A
   464  0000AA                     	ds	2
   465  0000AC                     vfprintf@fmt:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x4C
   469  0000AC                     	ds	2
   470  0000AE                     vfprintf@ap:
   471                           	opt callstack 0
   472                           
   473                           ; 2 bytes @ 0x4E
   474  0000AE                     	ds	2
   475  0000B0                     vfprintf@cfmt:
   476                           	opt callstack 0
   477                           
   478                           ; 2 bytes @ 0x50
   479  0000B0                     	ds	2
   480  0000B2                     ?_sprintf:
   481                           	opt callstack 0
   482  0000B2                     sprintf@s:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x52
   486  0000B2                     	ds	2
   487  0000B4                     sprintf@fmt:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x54
   491  0000B4                     	ds	8
   492  0000BC                     sprintf@ap:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x5C
   496  0000BC                     	ds	2
   497  0000BE                     sprintf@f:
   498                           	opt callstack 0
   499                           
   500                           ; 6 bytes @ 0x5E
   501  0000BE                     	ds	6
   502                           
   503                           	psect	cstackCOMRAM
   504  000001                     __pcstackCOMRAM:
   505                           	opt callstack 0
   506  000001                     ??_rutina:
   507  000001                     
   508                           ; 1 bytes @ 0x0
   509  000001                     	ds	4
   510  000005                     rutina@dato:
   511                           	opt callstack 0
   512                           
   513                           ; 1 bytes @ 0x4
   514  000005                     	ds	1
   515  000006                     ?_length:
   516                           	opt callstack 0
   517  000006                     ?_strlen:
   518                           	opt callstack 0
   519  000006                     ?___fpclassifyf:
   520                           	opt callstack 0
   521  000006                     ?_isupper:
   522                           	opt callstack 0
   523  000006                     ?_isdigit:
   524                           	opt callstack 0
   525  000006                     ?_strncmp:
   526                           	opt callstack 0
   527  000006                     ?_isspace:
   528                           	opt callstack 0
   529  000006                     ?___wmul:
   530                           	opt callstack 0
   531  000006                     ?___awdiv:
   532                           	opt callstack 0
   533  000006                     ?___awmod:
   534                           	opt callstack 0
   535  000006                     ?___fladd:
   536                           	opt callstack 0
   537  000006                     ?___flmul:
   538                           	opt callstack 0
   539  000006                     ?___flneg:
   540                           	opt callstack 0
   541  000006                     ?___fltol:
   542                           	opt callstack 0
   543  000006                     ?___xxtofl:
   544                           	opt callstack 0
   545  000006                     length@text:
   546                           	opt callstack 0
   547  000006                     ___wmul@multiplier:
   548                           	opt callstack 0
   549  000006                     ___awdiv@dividend:
   550                           	opt callstack 0
   551  000006                     ___awmod@dividend:
   552                           	opt callstack 0
   553  000006                     isdigit@c:
   554                           	opt callstack 0
   555  000006                     isspace@c:
   556                           	opt callstack 0
   557  000006                     isupper@c:
   558                           	opt callstack 0
   559  000006                     fputc@c:
   560                           	opt callstack 0
   561  000006                     strcpy@dest:
   562                           	opt callstack 0
   563  000006                     strlen@s:
   564                           	opt callstack 0
   565  000006                     strncmp@_l:
   566                           	opt callstack 0
   567  000006                     ___fleq@ff1:
   568                           	opt callstack 0
   569  000006                     ___flneg@f1:
   570                           	opt callstack 0
   571  000006                     ___fltol@f1:
   572                           	opt callstack 0
   573  000006                     ___fladd@b:
   574                           	opt callstack 0
   575  000006                     ___flmul@b:
   576                           	opt callstack 0
   577  000006                     ___xxtofl@val:
   578                           	opt callstack 0
   579  000006                     ___fpclassifyf@x:
   580                           	opt callstack 0
   581                           
   582                           ; 4 bytes @ 0x5
   583  000006                     	ds	2
   584  000008                     ??_isupper:
   585  000008                     ??_isdigit:
   586  000008                     ??_isspace:
   587  000008                     length@longitud:
   588                           	opt callstack 0
   589  000008                     ___wmul@multiplicand:
   590                           	opt callstack 0
   591  000008                     ___awdiv@divisor:
   592                           	opt callstack 0
   593  000008                     ___awmod@divisor:
   594                           	opt callstack 0
   595  000008                     fputc@fp:
   596                           	opt callstack 0
   597  000008                     strcpy@src:
   598                           	opt callstack 0
   599  000008                     strlen@a:
   600                           	opt callstack 0
   601  000008                     strncmp@_r:
   602                           	opt callstack 0
   603                           
   604                           ; 2 bytes @ 0x7
   605  000008                     	ds	2
   606  00000A                     ??_fputc:
   607  00000A                     ??___fpclassifyf:
   608  00000A                     ??_strcpy:
   609  00000A                     ??___fltol:
   610  00000A                     ??___xxtofl:
   611  00000A                     length@dato:
   612                           	opt callstack 0
   613  00000A                     ___awdiv@counter:
   614                           	opt callstack 0
   615  00000A                     ___awmod@counter:
   616                           	opt callstack 0
   617  00000A                     ___wmul@product:
   618                           	opt callstack 0
   619  00000A                     strncmp@n:
   620                           	opt callstack 0
   621  00000A                     ___fleq@ff2:
   622                           	opt callstack 0
   623  00000A                     ___fladd@a:
   624                           	opt callstack 0
   625  00000A                     ___flmul@a:
   626                           	opt callstack 0
   627                           
   628                           ; 4 bytes @ 0x9
   629  00000A                     	ds	1
   630  00000B                     length@i:
   631                           	opt callstack 0
   632  00000B                     ___awdiv@sign:
   633                           	opt callstack 0
   634  00000B                     ___awmod@sign:
   635                           	opt callstack 0
   636                           
   637                           ; 1 bytes @ 0xA
   638  00000B                     	ds	1
   639  00000C                     ??_strncmp:
   640  00000C                     ?_tolower:
   641                           	opt callstack 0
   642  00000C                     _isspace$1509:
   643                           	opt callstack 0
   644  00000C                     enviarRS232@valores:
   645                           	opt callstack 0
   646  00000C                     ___awdiv@quotient:
   647                           	opt callstack 0
   648  00000C                     strcpy@s:
   649                           	opt callstack 0
   650  00000C                     tolower@c:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0xB
   654  00000C                     	ds	1
   655  00000D                     ?_atoi:
   656                           	opt callstack 0
   657  00000D                     atoi@s:
   658                           	opt callstack 0
   659  00000D                     strncmp@l:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0xC
   663  00000D                     	ds	1
   664  00000E                     ??_tolower:
   665  00000E                     ??___fladd:
   666  00000E                     ??___flmul:
   667  00000E                     ??_enviarRS232:
   668  00000E                     ??___fleq:
   669  00000E                     ___fltol@sign1:
   670                           	opt callstack 0
   671  00000E                     ___xxtofl@sign:
   672                           	opt callstack 0
   673  00000E                     ___fpclassifyf@e:
   674                           	opt callstack 0
   675  00000E                     strcpy@d:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0xD
   679  00000E                     	ds	1
   680  00000F                     ??_atoi:
   681  00000F                     ___fltol@exp1:
   682                           	opt callstack 0
   683  00000F                     ___xxtofl@exp:
   684                           	opt callstack 0
   685  00000F                     fputs@s:
   686                           	opt callstack 0
   687  00000F                     strncmp@r:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0xE
   691  00000F                     	ds	1
   692  000010                     enviarRS232@longitud_texto:
   693                           	opt callstack 0
   694  000010                     ___xxtofl@arg:
   695                           	opt callstack 0
   696  000010                     ___fpclassifyf@u:
   697                           	opt callstack 0
   698                           
   699                           ; 4 bytes @ 0xF
   700  000010                     	ds	1
   701  000011                     fputs@fp:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x10
   705  000011                     	ds	1
   706  000012                     enviarRS232@i:
   707                           	opt callstack 0
   708  000012                     ___fladd@signs:
   709                           	opt callstack 0
   710  000012                     ___flmul@sign:
   711                           	opt callstack 0
   712  000012                     _tolower$1594:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x11
   716  000012                     	ds	1
   717  000013                     ___fladd@aexp:
   718                           	opt callstack 0
   719  000013                     ___flmul@aexp:
   720                           	opt callstack 0
   721  000013                     fputs@c:
   722                           	opt callstack 0
   723  000013                     atoi@neg:
   724                           	opt callstack 0
   725                           
   726                           ; 2 bytes @ 0x12
   727  000013                     	ds	1
   728  000014                     ?___fldiv:
   729                           	opt callstack 0
   730  000014                     ___fladd@bexp:
   731                           	opt callstack 0
   732  000014                     fputs@i:
   733                           	opt callstack 0
   734  000014                     ___fldiv@b:
   735                           	opt callstack 0
   736  000014                     ___flmul@grs:
   737                           	opt callstack 0
   738                           
   739                           ; 4 bytes @ 0x13
   740  000014                     	ds	1
   741  000015                     ___fladd@grs:
   742                           	opt callstack 0
   743  000015                     _atoi$1478:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x14
   747  000015                     	ds	1
   748  000016                     ?_pad:
   749                           	opt callstack 0
   750  000016                     pad@fp:
   751                           	opt callstack 0
   752                           
   753                           ; 2 bytes @ 0x15
   754  000016                     	ds	1
   755  000017                     _atoi$1480:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x16
   759  000017                     	ds	1
   760  000018                     ___flmul@bexp:
   761                           	opt callstack 0
   762  000018                     pad@buf:
   763                           	opt callstack 0
   764  000018                     ___fldiv@a:
   765                           	opt callstack 0
   766                           
   767                           ; 4 bytes @ 0x17
   768  000018                     	ds	1
   769  000019                     _atoi$1479:
   770                           	opt callstack 0
   771  000019                     ___flmul@prod:
   772                           	opt callstack 0
   773                           
   774                           ; 4 bytes @ 0x18
   775  000019                     	ds	1
   776  00001A                     pad@p:
   777                           	opt callstack 0
   778  00001A                     atoi@n:
   779                           	opt callstack 0
   780                           
   781                           ; 2 bytes @ 0x19
   782  00001A                     	ds	2
   783  00001C                     ??___fldiv:
   784  00001C                     ??_pad:
   785                           
   786                           ; 1 bytes @ 0x1B
   787  00001C                     	ds	1
   788  00001D                     pad@i:
   789                           	opt callstack 0
   790  00001D                     ___flmul@temp:
   791                           	opt callstack 0
   792                           
   793                           ; 2 bytes @ 0x1C
   794  00001D                     	ds	2
   795  00001F                     ?___flsub:
   796                           	opt callstack 0
   797  00001F                     pad@w:
   798                           	opt callstack 0
   799  00001F                     ___flge@ff1:
   800                           	opt callstack 0
   801  00001F                     ___flsub@b:
   802                           	opt callstack 0
   803                           
   804                           ; 4 bytes @ 0x1E
   805  00001F                     	ds	1
   806  000020                     ___fldiv@rem:
   807                           	opt callstack 0
   808                           
   809                           ; 4 bytes @ 0x1F
   810  000020                     	ds	3
   811  000023                     ___flge@ff2:
   812                           	opt callstack 0
   813  000023                     ___flsub@a:
   814                           	opt callstack 0
   815                           
   816                           ; 4 bytes @ 0x22
   817  000023                     	ds	1
   818  000024                     ___fldiv@sign:
   819                           	opt callstack 0
   820                           
   821                           ; 1 bytes @ 0x23
   822  000024                     	ds	1
   823  000025                     ___fldiv@new_exp:
   824                           	opt callstack 0
   825                           
   826                           ; 2 bytes @ 0x24
   827  000025                     	ds	2
   828  000027                     ??___flge:
   829  000027                     ___fldiv@grs:
   830                           	opt callstack 0
   831                           
   832                           ; 4 bytes @ 0x26
   833  000027                     	ds	4
   834  00002B                     ___fldiv@bexp:
   835                           	opt callstack 0
   836                           
   837                           ; 1 bytes @ 0x2A
   838  00002B                     	ds	1
   839  00002C                     ___fldiv@aexp:
   840                           	opt callstack 0
   841                           
   842                           ; 1 bytes @ 0x2B
   843  00002C                     	ds	1
   844  00002D                     ?_floorf:
   845                           	opt callstack 0
   846  00002D                     floorf@x:
   847                           	opt callstack 0
   848                           
   849                           ; 4 bytes @ 0x2C
   850  00002D                     	ds	4
   851  000031                     ??_floorf:
   852                           
   853                           ; 1 bytes @ 0x30
   854  000031                     	ds	6
   855  000037                     floorf@m:
   856                           	opt callstack 0
   857                           
   858                           ; 4 bytes @ 0x36
   859  000037                     	ds	4
   860  00003B                     floorf@e:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x3A
   864  00003B                     	ds	2
   865  00003D                     floorf@u:
   866                           	opt callstack 0
   867                           
   868                           ; 4 bytes @ 0x3C
   869  00003D                     	ds	4
   870  000041                     ?_efgtoa:
   871                           	opt callstack 0
   872  000041                     efgtoa@fp:
   873                           	opt callstack 0
   874                           
   875                           ; 2 bytes @ 0x40
   876  000041                     	ds	2
   877  000043                     efgtoa@f:
   878                           	opt callstack 0
   879                           
   880                           ; 4 bytes @ 0x42
   881  000043                     	ds	4
   882  000047                     efgtoa@c:
   883                           	opt callstack 0
   884                           
   885                           ; 1 bytes @ 0x46
   886  000047                     	ds	1
   887  000048                     ??_efgtoa:
   888                           
   889                           ; 1 bytes @ 0x47
   890  000048                     	ds	5
   891  00004D                     ?_vfpfcnvrt:
   892                           	opt callstack 0
   893  00004D                     vfpfcnvrt@fp:
   894                           	opt callstack 0
   895                           
   896                           ; 2 bytes @ 0x4C
   897  00004D                     	ds	2
   898  00004F                     vfpfcnvrt@fmt:
   899                           	opt callstack 0
   900                           
   901                           ; 2 bytes @ 0x4E
   902  00004F                     	ds	2
   903  000051                     vfpfcnvrt@ap:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0x50
   907  000051                     	ds	2
   908  000053                     
   909                           ; 1 bytes @ 0x52
   910 ;;
   911 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   912 ;;
   913 ;; *************** function _main *****************
   914 ;; Defined at:
   915 ;;		line 54 in file "Us-100.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels required when called:    9
   935 ;; This function calls:
   936 ;;		___fldiv
   937 ;;		___xxtofl
   938 ;;		_configuracionInicial
   939 ;;		_enviarRS232
   940 ;;		_sprintf
   941 ;; This function is called by:
   942 ;;		Startup code after reset
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text0
   947  002CDC                     __ptext0:
   948                           	opt callstack 0
   949  002CDC                     _main:
   950                           	opt callstack 22
   951                           
   952                           ;Us-100.c: 55:     configuracionInicial();
   953                           
   954                           ;incstack = 0
   955  002CDC  EC73  F01A         	call	_configuracionInicial	;wreg free
   956                           
   957                           ;Us-100.c: 56:     TRISBbits.TRISB1 = 0;
   958  002CE0  9293               	bcf	3987,1,c	;volatile
   959                           
   960                           ;Us-100.c: 57:     TXREG1 = 'H';
   961  002CE2  0E48               	movlw	72
   962  002CE4  6EAE               	movwf	4014,c	;volatile
   963  002CE6                     l5407:
   964                           
   965                           ;Us-100.c: 59:         if(bandera == 1){
   966  002CE6  0100               	movlb	0	; () banked
   967  002CE8  05DE               	decf	_bandera& (0+255),w,b
   968  002CEA  A4D8               	btfss	status,2,c
   969  002CEC  D7FC               	goto	l5407
   970                           
   971                           ; BSR set to: 0
   972                           ;Us-100.c: 60:             bandera = 0;
   973  002CEE  0E00               	movlw	0
   974  002CF0  6FDE               	movwf	_bandera& (0+255),b
   975                           
   976                           ; BSR set to: 0
   977                           ;Us-100.c: 61:             if(datos[0] == 'w'){
   978  002CF2  0E77               	movlw	119
   979  002CF4  19C4               	xorwf	_datos& (0+255),w,b
   980  002CF6  A4D8               	btfss	status,2,c
   981  002CF8  D00B               	goto	l5423
   982                           
   983                           ; BSR set to: 0
   984                           ;Us-100.c: 62:                 PORTBbits.RB1 = 0;
   985  002CFA  9281               	bcf	3969,1,c	;volatile
   986                           
   987                           ; BSR set to: 0
   988                           ;Us-100.c: 63:                 _delay((unsigned long)((2)*(48000000/4000000.0)));
   989  002CFC  0E08               	movlw	8
   990  002CFE                     u7357:
   991  002CFE  2EE8               	decfsz	wreg,f,c
   992  002D00  D7FE               	bra	u7357
   993                           
   994                           ;Us-100.c: 64:                 PORTBbits.RB1 = 1;
   995  002D02  8281               	bsf	3969,1,c	;volatile
   996                           
   997                           ;Us-100.c: 65:                 _delay((unsigned long)((10)*(48000000/4000000.0)));
   998  002D04  0E28               	movlw	40
   999  002D06                     u7367:
  1000  002D06  2EE8               	decfsz	wreg,f,c
  1001  002D08  D7FE               	bra	u7367
  1002                           
  1003                           ;Us-100.c: 66:                 PORTBbits.RB1 = 0;
  1004  002D0A  9281               	bcf	3969,1,c	;volatile
  1005                           
  1006                           ;Us-100.c: 67:                 contador = 0;
  1007  002D0C  0E00               	movlw	0
  1008  002D0E  6E58               	movwf	_contador,c
  1009  002D10                     l5423:
  1010                           
  1011                           ;Us-100.c: 70:             if(bandera_ultra_sonico == 1){
  1012  002D10  0100               	movlb	0	; () banked
  1013  002D12  05E0               	decf	_bandera_ultra_sonico& (0+255),w,b
  1014  002D14  A4D8               	btfss	status,2,c
  1015  002D16  D7E7               	goto	l5407
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;Us-100.c: 71:                 bandera_ultra_sonico = 0;
  1019  002D18  0E00               	movlw	0
  1020  002D1A  6FE0               	movwf	_bandera_ultra_sonico& (0+255),b
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;Us-100.c: 72:                 distancia = time_pulse / 29.1;
  1024  002D1C  51DF               	movf	_time_pulse& (0+255),w,b
  1025  002D1E  6E06               	movwf	___xxtofl@val,c
  1026  002D20  6A07               	clrf	___xxtofl@val+1,c
  1027  002D22  6A08               	clrf	___xxtofl@val+2,c
  1028  002D24  6A09               	clrf	___xxtofl@val+3,c
  1029  002D26  0E01               	movlw	1
  1030  002D28  ECA3  F014         	call	___xxtofl
  1031  002D2C  C006  F014         	movff	?___xxtofl,___fldiv@b
  1032  002D30  C007  F015         	movff	?___xxtofl+1,___fldiv@b+1
  1033  002D34  C008  F016         	movff	?___xxtofl+2,___fldiv@b+2
  1034  002D38  C009  F017         	movff	?___xxtofl+3,___fldiv@b+3
  1035  002D3C  0ECD               	movlw	205
  1036  002D3E  6E18               	movwf	___fldiv@a,c
  1037  002D40  0ECC               	movlw	204
  1038  002D42  6E19               	movwf	___fldiv@a+1,c
  1039  002D44  0EE8               	movlw	232
  1040  002D46  6E1A               	movwf	___fldiv@a+2,c
  1041  002D48  0E41               	movlw	65
  1042  002D4A  6E1B               	movwf	___fldiv@a+3,c
  1043  002D4C  ECDA  F011         	call	___fldiv	;wreg free
  1044  002D50  C014  F0D6         	movff	?___fldiv,_distancia
  1045  002D54  C015  F0D7         	movff	?___fldiv+1,_distancia+1
  1046  002D58  C016  F0D8         	movff	?___fldiv+2,_distancia+2
  1047  002D5C  C017  F0D9         	movff	?___fldiv+3,_distancia+3
  1048                           
  1049                           ;Us-100.c: 73:                 sprintf(texto, "%3.2f cm",distancia);
  1050  002D60  0EE2               	movlw	low _texto
  1051  002D62  0100               	movlb	0	; () banked
  1052  002D64  6FB2               	movwf	sprintf@s& (0+255),b
  1053  002D66  0E00               	movlw	high _texto
  1054  002D68  6FB3               	movwf	(sprintf@s+1)& (0+255),b
  1055  002D6A  0E01               	movlw	low STR_1
  1056  002D6C  6FB4               	movwf	sprintf@fmt& (0+255),b
  1057  002D6E  0E0F               	movlw	high STR_1
  1058  002D70  6FB5               	movwf	(sprintf@fmt+1)& (0+255),b
  1059  002D72  C0D6  F0B6         	movff	_distancia,?_sprintf+4
  1060  002D76  C0D7  F0B7         	movff	_distancia+1,?_sprintf+5
  1061  002D7A  C0D8  F0B8         	movff	_distancia+2,?_sprintf+6
  1062  002D7E  C0D9  F0B9         	movff	_distancia+3,?_sprintf+7
  1063  002D82  ECD2  F018         	call	_sprintf	;wreg free
  1064                           
  1065                           ;Us-100.c: 74:                 enviarRS232(texto);
  1066  002D86  0EE2               	movlw	low _texto
  1067  002D88  6E0C               	movwf	enviarRS232@valores,c
  1068  002D8A  0E00               	movlw	high _texto
  1069  002D8C  6E0D               	movwf	enviarRS232@valores+1,c
  1070  002D8E  EC22  F019         	call	_enviarRS232	;wreg free
  1071  002D92  D7A9               	goto	l5407
  1072  002D94                     __end_of_main:
  1073                           	opt callstack 0
  1074                           
  1075 ;; *************** function _sprintf *****************
  1076 ;; Defined at:
  1077 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  s               2   82[BANK0 ] PTR unsigned char 
  1080 ;;		 -> texto(6), 
  1081 ;;  fmt             2   84[BANK0 ] PTR const unsigned char 
  1082 ;;		 -> STR_1(9), 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  f               6   94[BANK0 ] struct _IO_FILE
  1085 ;;  ap              2   92[BANK0 ] PTR void [1]
  1086 ;;		 -> ?_sprintf(2), 
  1087 ;;  ret             2    0        int 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  2   82[BANK0 ] int 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1097 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1098 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1100 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1101 ;;Total ram usage:       18 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    8
  1104 ;; This function calls:
  1105 ;;		_vfprintf
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text1
  1112  0031A4                     __ptext1:
  1113                           	opt callstack 0
  1114  0031A4                     _sprintf:
  1115                           	opt callstack 22
  1116                           
  1117                           ;incstack = 0
  1118  0031A4  0EB6               	movlw	low (?_sprintf+4)
  1119  0031A6  0100               	movlb	0	; () banked
  1120  0031A8  6FBC               	movwf	sprintf@ap& (0+255),b
  1121  0031AA  0E00               	movlw	high (?_sprintf+4)
  1122  0031AC  6FBD               	movwf	(sprintf@ap+1)& (0+255),b
  1123  0031AE  C0B2  F0BE         	movff	sprintf@s,sprintf@f
  1124  0031B2  C0B3  F0BF         	movff	sprintf@s+1,sprintf@f+1
  1125                           
  1126                           ; BSR set to: 0
  1127  0031B6  0E00               	movlw	0
  1128  0031B8  6FC1               	movwf	(sprintf@f+3)& (0+255),b
  1129  0031BA  0E00               	movlw	0
  1130  0031BC  6FC0               	movwf	(sprintf@f+2)& (0+255),b
  1131                           
  1132                           ; BSR set to: 0
  1133  0031BE  0E00               	movlw	0
  1134  0031C0  6FC3               	movwf	(sprintf@f+5)& (0+255),b
  1135  0031C2  0E00               	movlw	0
  1136  0031C4  6FC2               	movwf	(sprintf@f+4)& (0+255),b
  1137                           
  1138                           ; BSR set to: 0
  1139  0031C6  0EBE               	movlw	low sprintf@f
  1140  0031C8  6FAA               	movwf	vfprintf@fp& (0+255),b
  1141  0031CA  0E00               	movlw	high sprintf@f
  1142  0031CC  6FAB               	movwf	(vfprintf@fp+1)& (0+255),b
  1143  0031CE  C0B4  F0AC         	movff	sprintf@fmt,vfprintf@fmt
  1144  0031D2  C0B5  F0AD         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1145  0031D6  0EBC               	movlw	low sprintf@ap
  1146  0031D8  6FAE               	movwf	vfprintf@ap& (0+255),b
  1147  0031DA  0E00               	movlw	high sprintf@ap
  1148  0031DC  6FAF               	movwf	(vfprintf@ap+1)& (0+255),b
  1149  0031DE  EC7B  F018         	call	_vfprintf	;wreg free
  1150  0031E2  0100               	movlb	0	; () banked
  1151  0031E4  51C0               	movf	(sprintf@f+2)& (0+255),w,b
  1152  0031E6  25B2               	addwf	sprintf@s& (0+255),w,b
  1153  0031E8  6ED9               	movwf	fsr2l,c
  1154  0031EA  51C1               	movf	(sprintf@f+3)& (0+255),w,b
  1155  0031EC  21B3               	addwfc	(sprintf@s+1)& (0+255),w,b
  1156  0031EE  6EDA               	movwf	fsr2h,c
  1157  0031F0  0E00               	movlw	0
  1158  0031F2  6EDF               	movwf	indf2,c
  1159                           
  1160                           ; BSR set to: 0
  1161  0031F4  0012               	return		;funcret
  1162  0031F6                     __end_of_sprintf:
  1163                           	opt callstack 0
  1164                           
  1165 ;; *************** function _vfprintf *****************
  1166 ;; Defined at:
  1167 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  1170 ;;		 -> sprintf@f(6), 
  1171 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  1172 ;;		 -> STR_1(9), 
  1173 ;;  ap              2   78[BANK0 ] PTR PTR void 
  1174 ;;		 -> sprintf@ap(2), 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  cfmt            2   80[BANK0 ] PTR unsigned char 
  1177 ;;		 -> STR_1(9), 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  2   74[BANK0 ] int 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1187 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1188 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1190 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1191 ;;Total ram usage:        8 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    7
  1194 ;; This function calls:
  1195 ;;		_vfpfcnvrt
  1196 ;; This function is called by:
  1197 ;;		_sprintf
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text2
  1202  0030F6                     __ptext2:
  1203                           	opt callstack 0
  1204  0030F6                     _vfprintf:
  1205                           	opt callstack 22
  1206                           
  1207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;incstack = 0
  1211  0030F6  C0AC  F0B0         	movff	vfprintf@fmt,vfprintf@cfmt
  1212  0030FA  C0AD  F0B1         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1213                           
  1214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1215  0030FE  0E00               	movlw	0
  1216  003100  0100               	movlb	0	; () banked
  1217  003102  6FDB               	movwf	(_nout+1)& (0+255),b
  1218  003104  0E00               	movlw	0
  1219  003106  6FDA               	movwf	_nout& (0+255),b
  1220                           
  1221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1222  003108  D013               	goto	l5385
  1223  00310A                     l5383:
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1227  00310A  C0AA  F04D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1228  00310E  C0AB  F04E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1229  003112  0EB0               	movlw	low vfprintf@cfmt
  1230  003114  6E4F               	movwf	vfpfcnvrt@fmt,c
  1231  003116  0E00               	movlw	high vfprintf@cfmt
  1232  003118  6E50               	movwf	vfpfcnvrt@fmt+1,c
  1233  00311A  C0AE  F051         	movff	vfprintf@ap,vfpfcnvrt@ap
  1234  00311E  C0AF  F052         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1235  003122  EC4E  F00C         	call	_vfpfcnvrt	;wreg free
  1236  003126  504D               	movf	?_vfpfcnvrt,w,c
  1237  003128  0100               	movlb	0	; () banked
  1238  00312A  27DA               	addwf	_nout& (0+255),f,b
  1239  00312C  504E               	movf	?_vfpfcnvrt+1,w,c
  1240  00312E  23DB               	addwfc	(_nout+1)& (0+255),f,b
  1241  003130                     l5385:
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1245  003130  C0B0  FFF6         	movff	vfprintf@cfmt,tblptrl
  1246  003134  C0B1  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1247  003138                     	if	0	;tblptru may be non-zero
  1248  003138                     	endif
  1249  003138                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1250  003138  0E00               	movlw	low (__mediumconst shr (0+16))
  1251  00313A  6EF8               	movwf	tblptru,c
  1252  00313C                     	endif
  1253  00313C  0008               	tblrd		*
  1254  00313E  50F5               	movf	tablat,w,c
  1255  003140  0900               	iorlw	0
  1256  003142  A4D8               	btfss	status,2,c
  1257  003144  D7E2               	goto	l5383
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1261  003146  C0DA  F0AA         	movff	_nout,?_vfprintf
  1262  00314A  C0DB  F0AB         	movff	_nout+1,?_vfprintf+1
  1263                           
  1264                           ; BSR set to: 0
  1265  00314E  0012               	return		;funcret
  1266  003150                     __end_of_vfprintf:
  1267                           	opt callstack 0
  1268                           
  1269 ;; *************** function _vfpfcnvrt *****************
  1270 ;; Defined at:
  1271 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  fp              2   76[COMRAM] PTR struct _IO_FILE
  1274 ;;		 -> sprintf@f(6), 
  1275 ;;  fmt             2   78[COMRAM] PTR PTR unsigned char 
  1276 ;;		 -> vfprintf@cfmt(2), 
  1277 ;;  ap              2   80[COMRAM] PTR PTR void 
  1278 ;;		 -> sprintf@ap(2), 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  llu             8    0        unsigned long long 
  1281 ;;  ll              8    0        long long 
  1282 ;;  f               4   66[BANK0 ] long long 
  1283 ;;  ct              3   70[BANK0 ] unsigned char [3]
  1284 ;;  vp              3    0        PTR void 
  1285 ;;  cp              3    0        PTR unsigned char 
  1286 ;;  i               2    0        int 
  1287 ;;  done            2    0        int 
  1288 ;;  c               1   73[BANK0 ] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  2   76[COMRAM] int 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1298 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1299 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1300 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1301 ;;      Totals:         6      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1302 ;;Total ram usage:       24 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    6
  1305 ;; This function calls:
  1306 ;;		_atoi
  1307 ;;		_efgtoa
  1308 ;;		_fputc
  1309 ;;		_isdigit
  1310 ;;		_isupper
  1311 ;;		_strncmp
  1312 ;;		_tolower
  1313 ;; This function is called by:
  1314 ;;		_vfprintf
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text3
  1319  00189C                     __ptext3:
  1320                           	opt callstack 0
  1321  00189C                     _vfpfcnvrt:
  1322                           	opt callstack 22
  1323                           
  1324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;incstack = 0
  1328  00189C  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1329  0018A0  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1330  0018A4  CFDE FFF6          	movff	postinc2,tblptrl
  1331  0018A8  CFDD FFF7          	movff	postdec2,tblptrh
  1332  0018AC                     	if	0	;tblptru may be non-zero
  1333  0018AC                     	endif
  1334  0018AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1335  0018AC  0E00               	movlw	low (__mediumconst shr (0+16))
  1336  0018AE  6EF8               	movwf	tblptru,c
  1337  0018B0                     	endif
  1338  0018B0  0008               	tblrd		*
  1339  0018B2  50F5               	movf	tablat,w,c
  1340  0018B4  0A25               	xorlw	37
  1341  0018B6  A4D8               	btfss	status,2,c
  1342  0018B8  D232               	goto	l5371
  1343                           
  1344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1345  0018BA  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1346  0018BE  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1347  0018C2  2ADE               	incf	postinc2,f,c
  1348  0018C4  0E00               	movlw	0
  1349  0018C6  22DD               	addwfc	postdec2,f,c
  1350                           
  1351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1352  0018C8  0E00               	movlw	0
  1353  0018CA  0100               	movlb	0	; () banked
  1354  0018CC  6FDD               	movwf	(_width+1)& (0+255),b
  1355  0018CE  0E00               	movlw	0
  1356  0018D0  6FDC               	movwf	_width& (0+255),b
  1357  0018D2  C0DC  F055         	movff	_width,_flags
  1358  0018D6  C0DD  F056         	movff	_width+1,_flags+1
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1362  0018DA  6853               	setf	_prec,c
  1363  0018DC  6854               	setf	_prec+1,c
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1367  0018DE  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1368  0018E2  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1369  0018E6  CFDE FFF6          	movff	postinc2,tblptrl
  1370  0018EA  CFDD FFF7          	movff	postdec2,tblptrh
  1371  0018EE                     	if	0	;tblptru may be non-zero
  1372  0018EE                     	endif
  1373  0018EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1374  0018EE  0E00               	movlw	low (__mediumconst shr (0+16))
  1375  0018F0  6EF8               	movwf	tblptru,c
  1376  0018F2                     	endif
  1377  0018F2  0008               	tblrd		*
  1378  0018F4  50F5               	movf	tablat,w,c
  1379  0018F6  0A2A               	xorlw	42
  1380  0018F8  A4D8               	btfss	status,2,c
  1381  0018FA  D023               	goto	l5287
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1385  0018FC  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1386  001900  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1387  001904  2ADE               	incf	postinc2,f,c
  1388  001906  0E00               	movlw	0
  1389  001908  22DD               	addwfc	postdec2,f,c
  1390                           
  1391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1392  00190A  C051  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1393  00190E  C052  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1394  001912  CFDF F098          	movff	indf2,??_vfpfcnvrt
  1395  001916  0E02               	movlw	2
  1396  001918  26DE               	addwf	postinc2,f,c
  1397  00191A  CFDF F099          	movff	indf2,??_vfpfcnvrt+1
  1398  00191E  0E00               	movlw	0
  1399  001920  22DD               	addwfc	postdec2,f,c
  1400  001922  C098  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1401  001926  C099  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1402  00192A  CFDE F0DC          	movff	postinc2,_width
  1403  00192E  CFDD F0DD          	movff	postdec2,_width+1
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1407  001932  AFDD               	btfss	(_width+1)& (0+255),7,b
  1408  001934  D042               	goto	u7170
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1412  001936  8055               	bsf	_flags,0,c
  1413                           
  1414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1415  001938  6DDC               	negf	_width& (0+255),b
  1416  00193A  1FDD               	comf	(_width+1)& (0+255),f,b
  1417  00193C  B0D8               	btfsc	status,0,c
  1418  00193E  2BDD               	incf	(_width+1)& (0+255),f,b
  1419  001940  D03C               	goto	u7170
  1420  001942                     l5287:
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1424  001942  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1425  001946  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1426  00194A  CFDE F00D          	movff	postinc2,atoi@s
  1427  00194E  CFDD F00E          	movff	postdec2,atoi@s+1
  1428  001952  ECF9  F013         	call	_atoi	;wreg free
  1429  001956  C00D  F0DC         	movff	?_atoi,_width
  1430  00195A  C00E  F0DD         	movff	?_atoi+1,_width+1
  1431                           
  1432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1433  00195E  D007               	goto	l5291
  1434  001960                     l5289:
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1438  001960  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1439  001964  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1440  001968  2ADE               	incf	postinc2,f,c
  1441  00196A  0E00               	movlw	0
  1442  00196C  22DD               	addwfc	postdec2,f,c
  1443  00196E                     l5291:
  1444  00196E  0ED0               	movlw	208
  1445  001970  0100               	movlb	0	; () banked
  1446  001972  6F98               	movwf	??_vfpfcnvrt& (0+255),b
  1447  001974  0EFF               	movlw	255
  1448  001976  6F99               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1449  001978  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1450  00197C  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1451  001980  CFDE FFF6          	movff	postinc2,tblptrl
  1452  001984  CFDD FFF7          	movff	postdec2,tblptrh
  1453  001988                     	if	0	;tblptru may be non-zero
  1454  001988                     	endif
  1455  001988                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1456  001988  0E00               	movlw	low (__mediumconst shr (0+16))
  1457  00198A  6EF8               	movwf	tblptru,c
  1458  00198C                     	endif
  1459  00198C  0008               	tblrd		*
  1460  00198E  50F5               	movf	tablat,w,c
  1461  001990  6F9A               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1462  001992  6B9B               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1463  001994  5198               	movf	??_vfpfcnvrt& (0+255),w,b
  1464  001996  279A               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1465  001998  5199               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1466  00199A  239B               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1467  00199C  519B               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1468  00199E  E106               	bnz	u7150
  1469  0019A0  0E0A               	movlw	10
  1470  0019A2  5D9A               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1471  0019A4  B0D8               	btfsc	status,0,c
  1472  0019A6  D002               	goto	u7150
  1473  0019A8  0E01               	movlw	1
  1474  0019AA  D001               	goto	u7160
  1475  0019AC                     u7150:
  1476  0019AC  0E00               	movlw	0
  1477  0019AE                     u7160:
  1478  0019AE  6F9C               	movwf	_vfpfcnvrt$1002& (0+255),b
  1479  0019B0  6B9D               	clrf	(_vfpfcnvrt$1002+1)& (0+255),b
  1480                           
  1481                           ; BSR set to: 0
  1482  0019B2  519C               	movf	_vfpfcnvrt$1002& (0+255),w,b
  1483  0019B4  119D               	iorwf	(_vfpfcnvrt$1002+1)& (0+255),w,b
  1484  0019B6  A4D8               	btfss	status,2,c
  1485  0019B8  D7D3               	goto	l5289
  1486  0019BA                     u7170:
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1490  0019BA  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1491  0019BE  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1492  0019C2  CFDE FFF6          	movff	postinc2,tblptrl
  1493  0019C6  CFDD FFF7          	movff	postdec2,tblptrh
  1494  0019CA                     	if	0	;tblptru may be non-zero
  1495  0019CA                     	endif
  1496  0019CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1497  0019CA  0E00               	movlw	low (__mediumconst shr (0+16))
  1498  0019CC  6EF8               	movwf	tblptru,c
  1499  0019CE                     	endif
  1500  0019CE  0008               	tblrd		*
  1501  0019D0  50F5               	movf	tablat,w,c
  1502  0019D2  0A2E               	xorlw	46
  1503  0019D4  A4D8               	btfss	status,2,c
  1504  0019D6  D072               	goto	u7220
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1508  0019D8  0E00               	movlw	0
  1509  0019DA  6E54               	movwf	_prec+1,c
  1510  0019DC  0E00               	movlw	0
  1511  0019DE  6E53               	movwf	_prec,c
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1515  0019E0  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1516  0019E4  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1517  0019E8  2ADE               	incf	postinc2,f,c
  1518  0019EA  0E00               	movlw	0
  1519  0019EC  22DD               	addwfc	postdec2,f,c
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1523  0019EE  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1524  0019F2  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1525  0019F6  CFDE FFF6          	movff	postinc2,tblptrl
  1526  0019FA  CFDD FFF7          	movff	postdec2,tblptrh
  1527  0019FE                     	if	0	;tblptru may be non-zero
  1528  0019FE                     	endif
  1529  0019FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1530  0019FE  0E00               	movlw	low (__mediumconst shr (0+16))
  1531  001A00  6EF8               	movwf	tblptru,c
  1532  001A02                     	endif
  1533  001A02  0008               	tblrd		*
  1534  001A04  50F5               	movf	tablat,w,c
  1535  001A06  0A2A               	xorlw	42
  1536  001A08  A4D8               	btfss	status,2,c
  1537  001A0A  D01C               	goto	l5307
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1541  001A0C  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1542  001A10  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1543  001A14  2ADE               	incf	postinc2,f,c
  1544  001A16  0E00               	movlw	0
  1545  001A18  22DD               	addwfc	postdec2,f,c
  1546                           
  1547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1548  001A1A  C051  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1549  001A1E  C052  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1550  001A22  CFDF F098          	movff	indf2,??_vfpfcnvrt
  1551  001A26  0E02               	movlw	2
  1552  001A28  26DE               	addwf	postinc2,f,c
  1553  001A2A  CFDF F099          	movff	indf2,??_vfpfcnvrt+1
  1554  001A2E  0E00               	movlw	0
  1555  001A30  22DD               	addwfc	postdec2,f,c
  1556  001A32  C098  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1557  001A36  C099  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1558  001A3A  CFDE F053          	movff	postinc2,_prec
  1559  001A3E  CFDD F054          	movff	postdec2,_prec+1
  1560                           
  1561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1562  001A42  D03C               	goto	u7220
  1563  001A44                     l5307:
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1567  001A44  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1568  001A48  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1569  001A4C  CFDE F00D          	movff	postinc2,atoi@s
  1570  001A50  CFDD F00E          	movff	postdec2,atoi@s+1
  1571  001A54  ECF9  F013         	call	_atoi	;wreg free
  1572  001A58  C00D  F053         	movff	?_atoi,_prec
  1573  001A5C  C00E  F054         	movff	?_atoi+1,_prec+1
  1574                           
  1575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1576  001A60  D007               	goto	l5311
  1577  001A62                     l5309:
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1581  001A62  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1582  001A66  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1583  001A6A  2ADE               	incf	postinc2,f,c
  1584  001A6C  0E00               	movlw	0
  1585  001A6E  22DD               	addwfc	postdec2,f,c
  1586  001A70                     l5311:
  1587  001A70  0ED0               	movlw	208
  1588  001A72  0100               	movlb	0	; () banked
  1589  001A74  6F98               	movwf	??_vfpfcnvrt& (0+255),b
  1590  001A76  0EFF               	movlw	255
  1591  001A78  6F99               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1592  001A7A  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1593  001A7E  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1594  001A82  CFDE FFF6          	movff	postinc2,tblptrl
  1595  001A86  CFDD FFF7          	movff	postdec2,tblptrh
  1596  001A8A                     	if	0	;tblptru may be non-zero
  1597  001A8A                     	endif
  1598  001A8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1599  001A8A  0E00               	movlw	low (__mediumconst shr (0+16))
  1600  001A8C  6EF8               	movwf	tblptru,c
  1601  001A8E                     	endif
  1602  001A8E  0008               	tblrd		*
  1603  001A90  50F5               	movf	tablat,w,c
  1604  001A92  6F9A               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1605  001A94  6B9B               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1606  001A96  5198               	movf	??_vfpfcnvrt& (0+255),w,b
  1607  001A98  279A               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1608  001A9A  5199               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1609  001A9C  239B               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1610  001A9E  519B               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1611  001AA0  E106               	bnz	u7200
  1612  001AA2  0E0A               	movlw	10
  1613  001AA4  5D9A               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1614  001AA6  B0D8               	btfsc	status,0,c
  1615  001AA8  D002               	goto	u7200
  1616  001AAA  0E01               	movlw	1
  1617  001AAC  D001               	goto	u7210
  1618  001AAE                     u7200:
  1619  001AAE  0E00               	movlw	0
  1620  001AB0                     u7210:
  1621  001AB0  6F9E               	movwf	_vfpfcnvrt$1003& (0+255),b
  1622  001AB2  6B9F               	clrf	(_vfpfcnvrt$1003+1)& (0+255),b
  1623                           
  1624                           ; BSR set to: 0
  1625  001AB4  519E               	movf	_vfpfcnvrt$1003& (0+255),w,b
  1626  001AB6  119F               	iorwf	(_vfpfcnvrt$1003+1)& (0+255),w,b
  1627  001AB8  A4D8               	btfss	status,2,c
  1628  001ABA  D7D3               	goto	l5309
  1629  001ABC                     u7220:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  1633  001ABC  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1634  001AC0  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1635  001AC4  CFDE FFF6          	movff	postinc2,tblptrl
  1636  001AC8  CFDD FFF7          	movff	postdec2,tblptrh
  1637  001ACC                     	if	0	;tblptru may be non-zero
  1638  001ACC                     	endif
  1639  001ACC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1640  001ACC  0E00               	movlw	low (__mediumconst shr (0+16))
  1641  001ACE  6EF8               	movwf	tblptru,c
  1642  001AD0                     	endif
  1643  001AD0  0008               	tblrd		*
  1644  001AD2  50F5               	movf	tablat,w,c
  1645  001AD4  6E0C               	movwf	tolower@c,c
  1646  001AD6  6A0D               	clrf	tolower@c+1,c
  1647  001AD8  EC49  F019         	call	_tolower	;wreg free
  1648  001ADC  500C               	movf	?_tolower,w,c
  1649  001ADE  0100               	movlb	0	; () banked
  1650  001AE0  6FA6               	movwf	vfpfcnvrt@ct& (0+255),b
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  1654  001AE2  51A6               	movf	vfpfcnvrt@ct& (0+255),w,b
  1655  001AE4  B4D8               	btfsc	status,2,c
  1656  001AE6  D039               	goto	l5327
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  1660  001AE8  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1661  001AEC  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1662  001AF0  CFDE F098          	movff	postinc2,??_vfpfcnvrt
  1663  001AF4  CFDD F099          	movff	postdec2,??_vfpfcnvrt+1
  1664  001AF8  0E01               	movlw	1
  1665  001AFA  2798               	addwf	??_vfpfcnvrt& (0+255),f,b
  1666  001AFC  0E00               	movlw	0
  1667  001AFE  2399               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1668  001B00  C098  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1669  001B04  C099  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1670  001B08                     	if	0	;tblptru may be non-zero
  1671  001B08                     	endif
  1672  001B08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1673  001B08  0E00               	movlw	low (__mediumconst shr (0+16))
  1674  001B0A  6EF8               	movwf	tblptru,c
  1675  001B0C                     	endif
  1676  001B0C  0008               	tblrd		*
  1677  001B0E  50F5               	movf	tablat,w,c
  1678  001B10  6E0C               	movwf	tolower@c,c
  1679  001B12  6A0D               	clrf	tolower@c+1,c
  1680  001B14  EC49  F019         	call	_tolower	;wreg free
  1681  001B18  500C               	movf	?_tolower,w,c
  1682  001B1A  0100               	movlb	0	; () banked
  1683  001B1C  6FA7               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  1687  001B1E  51A7               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1688  001B20  B4D8               	btfsc	status,2,c
  1689  001B22  D01B               	goto	l5327
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  1693  001B24  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1694  001B28  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1695  001B2C  CFDE F098          	movff	postinc2,??_vfpfcnvrt
  1696  001B30  CFDD F099          	movff	postdec2,??_vfpfcnvrt+1
  1697  001B34  0E02               	movlw	2
  1698  001B36  2798               	addwf	??_vfpfcnvrt& (0+255),f,b
  1699  001B38  0E00               	movlw	0
  1700  001B3A  2399               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1701  001B3C  C098  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1702  001B40  C099  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1703  001B44                     	if	0	;tblptru may be non-zero
  1704  001B44                     	endif
  1705  001B44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1706  001B44  0E00               	movlw	low (__mediumconst shr (0+16))
  1707  001B46  6EF8               	movwf	tblptru,c
  1708  001B48                     	endif
  1709  001B48  0008               	tblrd		*
  1710  001B4A  50F5               	movf	tablat,w,c
  1711  001B4C  6E0C               	movwf	tolower@c,c
  1712  001B4E  6A0D               	clrf	tolower@c+1,c
  1713  001B50  EC49  F019         	call	_tolower	;wreg free
  1714  001B54  500C               	movf	?_tolower,w,c
  1715  001B56  0100               	movlb	0	; () banked
  1716  001B58  6FA8               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1717  001B5A                     l5327:
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  1721  001B5A  0E66               	movlw	102
  1722  001B5C  19A6               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1723  001B5E  A4D8               	btfss	status,2,c
  1724  001B60  D041               	goto	l5339
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  1728  001B62  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1729  001B66  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1730  001B6A  CFDE FFF6          	movff	postinc2,tblptrl
  1731  001B6E  CFDD FFF7          	movff	postdec2,tblptrh
  1732  001B72                     	if	0	;tblptru may be non-zero
  1733  001B72                     	endif
  1734  001B72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1735  001B72  0E00               	movlw	low (__mediumconst shr (0+16))
  1736  001B74  6EF8               	movwf	tblptru,c
  1737  001B76                     	endif
  1738  001B76  0008               	tblrd		*
  1739  001B78  CFF5 F0A9          	movff	tablat,vfpfcnvrt@c
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  1743  001B7C  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1744  001B80  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1745  001B84  2ADE               	incf	postinc2,f,c
  1746  001B86  0E00               	movlw	0
  1747  001B88  22DD               	addwfc	postdec2,f,c
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1751  001B8A  C051  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1752  001B8E  C052  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1753  001B92  CFDF F098          	movff	indf2,??_vfpfcnvrt
  1754  001B96  0E04               	movlw	4
  1755  001B98  26DE               	addwf	postinc2,f,c
  1756  001B9A  CFDF F099          	movff	indf2,??_vfpfcnvrt+1
  1757  001B9E  0E00               	movlw	0
  1758  001BA0  22DD               	addwfc	postdec2,f,c
  1759  001BA2  C098  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1760  001BA6  C099  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1761  001BAA  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  1762  001BAE  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  1763  001BB2  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  1764  001BB6  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  1765  001BBA                     l5335:
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  1769  001BBA  C04D  F041         	movff	vfpfcnvrt@fp,efgtoa@fp
  1770  001BBE  C04E  F042         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1771  001BC2  C0A2  F043         	movff	vfpfcnvrt@f,efgtoa@f
  1772  001BC6  C0A3  F044         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1773  001BCA  C0A4  F045         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1774  001BCE  C0A5  F046         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1775  001BD2  C0A9  F047         	movff	vfpfcnvrt@c,efgtoa@c
  1776  001BD6  EC8F  F007         	call	_efgtoa	;wreg free
  1777  001BDA  C041  F04D         	movff	?_efgtoa,?_vfpfcnvrt
  1778  001BDE  C042  F04E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1779  001BE2  0012               	return	
  1780  001BE4                     l5339:
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1784  001BE4  0EA6               	movlw	low vfpfcnvrt@ct
  1785  001BE6  6E06               	movwf	strncmp@_l,c
  1786  001BE8  0E00               	movlw	high vfpfcnvrt@ct
  1787  001BEA  6E07               	movwf	strncmp@_l+1,c
  1788  001BEC  0E1A               	movlw	low STR_10
  1789  001BEE  6E08               	movwf	strncmp@_r,c
  1790  001BF0  0E0F               	movlw	high STR_10
  1791  001BF2  6E09               	movwf	strncmp@_r+1,c
  1792  001BF4  0E00               	movlw	0
  1793  001BF6  6E0B               	movwf	strncmp@n+1,c
  1794  001BF8  0E02               	movlw	2
  1795  001BFA  6E0A               	movwf	strncmp@n,c
  1796  001BFC  ECCA  F016         	call	_strncmp	;wreg free
  1797  001C00  5006               	movf	?_strncmp,w,c
  1798  001C02  1007               	iorwf	?_strncmp+1,w,c
  1799  001C04  A4D8               	btfss	status,2,c
  1800  001C06  D05A               	goto	l5355
  1801                           
  1802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1803  001C08  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1804  001C0C  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1805  001C10  CFDE F098          	movff	postinc2,??_vfpfcnvrt
  1806  001C14  CFDD F099          	movff	postdec2,??_vfpfcnvrt+1
  1807  001C18  0E01               	movlw	1
  1808  001C1A  0100               	movlb	0	; () banked
  1809  001C1C  2798               	addwf	??_vfpfcnvrt& (0+255),f,b
  1810  001C1E  0E00               	movlw	0
  1811  001C20  2399               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1812  001C22  C098  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1813  001C26  C099  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1814  001C2A                     	if	0	;tblptru may be non-zero
  1815  001C2A                     	endif
  1816  001C2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1817  001C2A  0E00               	movlw	low (__mediumconst shr (0+16))
  1818  001C2C  6EF8               	movwf	tblptru,c
  1819  001C2E                     	endif
  1820  001C2E  0008               	tblrd		*
  1821  001C30  CFF5 F0A9          	movff	tablat,vfpfcnvrt@c
  1822  001C34  0EBF               	movlw	191
  1823  001C36  6F98               	movwf	??_vfpfcnvrt& (0+255),b
  1824  001C38  0EFF               	movlw	255
  1825  001C3A  6F99               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1826  001C3C  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1827  001C40  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1828  001C44  CFDE FFF6          	movff	postinc2,tblptrl
  1829  001C48  CFDD FFF7          	movff	postdec2,tblptrh
  1830  001C4C                     	if	0	;tblptru may be non-zero
  1831  001C4C                     	endif
  1832  001C4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1833  001C4C  0E00               	movlw	low (__mediumconst shr (0+16))
  1834  001C4E  6EF8               	movwf	tblptru,c
  1835  001C50                     	endif
  1836  001C50  0008               	tblrd		*
  1837  001C52  50F5               	movf	tablat,w,c
  1838  001C54  6F9A               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1839  001C56  6B9B               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1840  001C58  5198               	movf	??_vfpfcnvrt& (0+255),w,b
  1841  001C5A  279A               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1842  001C5C  5199               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1843  001C5E  239B               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1844  001C60  519B               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1845  001C62  E106               	bnz	u7270
  1846  001C64  0E1A               	movlw	26
  1847  001C66  5D9A               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1848  001C68  B0D8               	btfsc	status,0,c
  1849  001C6A  D002               	goto	u7270
  1850  001C6C  0E01               	movlw	1
  1851  001C6E  D001               	goto	u7280
  1852  001C70                     u7270:
  1853  001C70  0E00               	movlw	0
  1854  001C72                     u7280:
  1855  001C72  6FA0               	movwf	_vfpfcnvrt$1007& (0+255),b
  1856  001C74  6BA1               	clrf	(_vfpfcnvrt$1007+1)& (0+255),b
  1857                           
  1858                           ; BSR set to: 0
  1859  001C76  51A0               	movf	_vfpfcnvrt$1007& (0+255),w,b
  1860  001C78  11A1               	iorwf	(_vfpfcnvrt$1007+1)& (0+255),w,b
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1864                           
  1865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1869  001C7A  C051  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1870  001C7E  C052  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1871  001C82  CFDF F098          	movff	indf2,??_vfpfcnvrt
  1872  001C86  0E04               	movlw	4
  1873  001C88  26DE               	addwf	postinc2,f,c
  1874  001C8A  CFDF F099          	movff	indf2,??_vfpfcnvrt+1
  1875  001C8E  0E00               	movlw	0
  1876  001C90  22DD               	addwfc	postdec2,f,c
  1877  001C92  C098  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1878  001C96  C099  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1879  001C9A  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  1880  001C9E  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  1881  001CA2  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  1882  001CA6  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1886                           
  1887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  1888  001CAA  0E02               	movlw	2
  1889  001CAC  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1890  001CB0  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1891  001CB4  26DE               	addwf	postinc2,f,c
  1892  001CB6  0E00               	movlw	0
  1893  001CB8  22DD               	addwfc	postdec2,f,c
  1894  001CBA  D77F               	goto	l5335
  1895  001CBC                     l5355:
  1896                           
  1897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1898  001CBC  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1899  001CC0  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1900  001CC4  CFDE FFF6          	movff	postinc2,tblptrl
  1901  001CC8  CFDD FFF7          	movff	postdec2,tblptrh
  1902  001CCC                     	if	0	;tblptru may be non-zero
  1903  001CCC                     	endif
  1904  001CCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1905  001CCC  0E00               	movlw	low (__mediumconst shr (0+16))
  1906  001CCE  6EF8               	movwf	tblptru,c
  1907  001CD0                     	endif
  1908  001CD0  0008               	tblrd		*
  1909  001CD2  50F5               	movf	tablat,w,c
  1910  001CD4  0A25               	xorlw	37
  1911  001CD6  A4D8               	btfss	status,2,c
  1912  001CD8  D016               	goto	l5365
  1913                           
  1914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1915  001CDA  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1916  001CDE  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1917  001CE2  2ADE               	incf	postinc2,f,c
  1918  001CE4  0E00               	movlw	0
  1919  001CE6  22DD               	addwfc	postdec2,f,c
  1920                           
  1921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1922  001CE8  0E00               	movlw	0
  1923  001CEA  6E07               	movwf	fputc@c+1,c
  1924  001CEC  0E25               	movlw	37
  1925  001CEE  6E06               	movwf	fputc@c,c
  1926  001CF0  C04D  F008         	movff	vfpfcnvrt@fp,fputc@fp
  1927  001CF4  C04E  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1928  001CF8  EC21  F017         	call	_fputc	;wreg free
  1929  001CFC                     l5361:
  1930                           
  1931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1932  001CFC  0E00               	movlw	0
  1933  001CFE  6E4E               	movwf	?_vfpfcnvrt+1,c
  1934  001D00  0E01               	movlw	1
  1935  001D02  6E4D               	movwf	?_vfpfcnvrt,c
  1936  001D04  0012               	return	
  1937  001D06                     l5365:
  1938                           
  1939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1940  001D06  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1941  001D0A  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1942  001D0E  2ADE               	incf	postinc2,f,c
  1943  001D10  0E00               	movlw	0
  1944  001D12  22DD               	addwfc	postdec2,f,c
  1945                           
  1946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1947  001D14  0E00               	movlw	0
  1948  001D16  6E4E               	movwf	?_vfpfcnvrt+1,c
  1949  001D18  0E00               	movlw	0
  1950  001D1A  6E4D               	movwf	?_vfpfcnvrt,c
  1951  001D1C  0012               	return	
  1952  001D1E                     l5371:
  1953                           
  1954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1955  001D1E  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1956  001D22  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1957  001D26  CFDE FFF6          	movff	postinc2,tblptrl
  1958  001D2A  CFDD FFF7          	movff	postdec2,tblptrh
  1959  001D2E                     	if	0	;tblptru may be non-zero
  1960  001D2E                     	endif
  1961  001D2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1962  001D2E  0E00               	movlw	low (__mediumconst shr (0+16))
  1963  001D30  6EF8               	movwf	tblptru,c
  1964  001D32                     	endif
  1965  001D32  0008               	tblrd		*
  1966  001D34  50F5               	movf	tablat,w,c
  1967  001D36  6E06               	movwf	fputc@c,c
  1968  001D38  6A07               	clrf	fputc@c+1,c
  1969  001D3A  C04D  F008         	movff	vfpfcnvrt@fp,fputc@fp
  1970  001D3E  C04E  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1971  001D42  EC21  F017         	call	_fputc	;wreg free
  1972                           
  1973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1974  001D46  C04F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1975  001D4A  C050  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1976  001D4E  2ADE               	incf	postinc2,f,c
  1977  001D50  0E00               	movlw	0
  1978  001D52  22DD               	addwfc	postdec2,f,c
  1979  001D54  D7D3               	goto	l5361
  1980  001D56                     __end_of_vfpfcnvrt:
  1981                           	opt callstack 0
  1982                           
  1983 ;; *************** function _strncmp *****************
  1984 ;; Defined at:
  1985 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  1988 ;;		 -> vfpfcnvrt@ct(3), 
  1989 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  1990 ;;		 -> STR_12(3), 
  1991 ;;  n               2    9[COMRAM] unsigned int 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  r               2   14[COMRAM] PTR const unsigned char 
  1994 ;;		 -> STR_12(3), 
  1995 ;;  l               2   12[COMRAM] PTR const unsigned char 
  1996 ;;		 -> vfpfcnvrt@ct(3), 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  2    5[COMRAM] int 
  1999 ;; Registers used:
  2000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2006 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2007 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2009 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2010 ;;Total ram usage:       11 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    1
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_vfpfcnvrt
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text4
  2021  002D94                     __ptext4:
  2022                           	opt callstack 0
  2023  002D94                     _strncmp:
  2024                           	opt callstack 26
  2025                           
  2026                           ;incstack = 0
  2027  002D94  C006  F00D         	movff	strncmp@_l,strncmp@l
  2028  002D98  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  2029  002D9C  C008  F00F         	movff	strncmp@_r,strncmp@r
  2030  002DA0  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  2031  002DA4  060A               	decf	strncmp@n,f,c
  2032  002DA6  A0D8               	btfss	status,0,c
  2033  002DA8  060B               	decf	strncmp@n+1,f,c
  2034  002DAA  280A               	incf	strncmp@n,w,c
  2035  002DAC  E10F               	bnz	l5259
  2036  002DAE  280B               	incf	strncmp@n+1,w,c
  2037  002DB0  A4D8               	btfss	status,2,c
  2038  002DB2  D00C               	goto	l5259
  2039  002DB4  0E00               	movlw	0
  2040  002DB6  6E07               	movwf	?_strncmp+1,c
  2041  002DB8  0E00               	movlw	0
  2042  002DBA  6E06               	movwf	?_strncmp,c
  2043  002DBC  0012               	return	
  2044  002DBE                     l5257:
  2045  002DBE  4A0D               	infsnz	strncmp@l,f,c
  2046  002DC0  2A0E               	incf	strncmp@l+1,f,c
  2047  002DC2  4A0F               	infsnz	strncmp@r,f,c
  2048  002DC4  2A10               	incf	strncmp@r+1,f,c
  2049  002DC6  060A               	decf	strncmp@n,f,c
  2050  002DC8  A0D8               	btfss	status,0,c
  2051  002DCA  060B               	decf	strncmp@n+1,f,c
  2052  002DCC                     l5259:
  2053  002DCC  C00D  FFD9         	movff	strncmp@l,fsr2l
  2054  002DD0  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2055  002DD4  50DF               	movf	indf2,w,c
  2056  002DD6  B4D8               	btfsc	status,2,c
  2057  002DD8  D020               	goto	u7110
  2058  002DDA  C00F  FFF6         	movff	strncmp@r,tblptrl
  2059  002DDE  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2060  002DE2                     	if	0	;tblptru may be non-zero
  2061  002DE2                     	endif
  2062  002DE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2063  002DE2  0E00               	movlw	low (__mediumconst shr (0+16))
  2064  002DE4  6EF8               	movwf	tblptru,c
  2065  002DE6                     	endif
  2066  002DE6  0008               	tblrd		*
  2067  002DE8  50F5               	movf	tablat,w,c
  2068  002DEA  0900               	iorlw	0
  2069  002DEC  B4D8               	btfsc	status,2,c
  2070  002DEE  D015               	goto	u7110
  2071  002DF0  500A               	movf	strncmp@n,w,c
  2072  002DF2  100B               	iorwf	strncmp@n+1,w,c
  2073  002DF4  B4D8               	btfsc	status,2,c
  2074  002DF6  D011               	goto	u7110
  2075  002DF8  C00D  FFD9         	movff	strncmp@l,fsr2l
  2076  002DFC  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2077  002E00  50DF               	movf	indf2,w,c
  2078  002E02  6E0C               	movwf	??_strncmp& (0+255),c
  2079  002E04  C00F  FFF6         	movff	strncmp@r,tblptrl
  2080  002E08  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2081  002E0C                     	if	0	;tblptru may be non-zero
  2082  002E0C                     	endif
  2083  002E0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2084  002E0C  0E00               	movlw	low (__mediumconst shr (0+16))
  2085  002E0E  6EF8               	movwf	tblptru,c
  2086  002E10                     	endif
  2087  002E10  0008               	tblrd		*
  2088  002E12  50F5               	movf	tablat,w,c
  2089  002E14  180C               	xorwf	??_strncmp,w,c
  2090  002E16  B4D8               	btfsc	status,2,c
  2091  002E18  D7D2               	goto	l5257
  2092  002E1A                     u7110:
  2093  002E1A  C00D  FFD9         	movff	strncmp@l,fsr2l
  2094  002E1E  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2095  002E22  50DF               	movf	indf2,w,c
  2096  002E24  6E0C               	movwf	??_strncmp& (0+255),c
  2097  002E26  C00F  FFF6         	movff	strncmp@r,tblptrl
  2098  002E2A  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2099  002E2E                     	if	0	;tblptru may be non-zero
  2100  002E2E                     	endif
  2101  002E2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2102  002E2E  0E00               	movlw	low (__mediumconst shr (0+16))
  2103  002E30  6EF8               	movwf	tblptru,c
  2104  002E32                     	endif
  2105  002E32  0008               	tblrd		*
  2106  002E34  50F5               	movf	tablat,w,c
  2107  002E36  5C0C               	subwf	??_strncmp,w,c
  2108  002E38  6E06               	movwf	?_strncmp,c
  2109  002E3A  6A07               	clrf	?_strncmp+1,c
  2110  002E3C  A0D8               	btfss	status,0,c
  2111  002E3E  0607               	decf	?_strncmp+1,f,c
  2112  002E40  0012               	return		;funcret
  2113  002E42                     __end_of_strncmp:
  2114                           	opt callstack 0
  2115                           
  2116 ;; *************** function _efgtoa *****************
  2117 ;; Defined at:
  2118 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  2121 ;;		 -> sprintf@f(6), 
  2122 ;;  f               4   66[COMRAM] PTR struct _IO_FILE
  2123 ;;  c               1   70[COMRAM] unsigned char 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  u               4   52[BANK0 ] unsigned char 
  2126 ;;  g               4   44[BANK0 ] unsigned char 
  2127 ;;  l               4   38[BANK0 ] unsigned char 
  2128 ;;  h               4   34[BANK0 ] unsigned char 
  2129 ;;  ou              4    0[BANK0 ] unsigned char 
  2130 ;;  n               2   50[BANK0 ] int 
  2131 ;;  e               2   48[BANK0 ] int 
  2132 ;;  i               2   42[BANK0 ] int 
  2133 ;;  w               2   31[BANK0 ] int 
  2134 ;;  p               2   28[BANK0 ] int 
  2135 ;;  sign            2   26[BANK0 ] int 
  2136 ;;  d               2   24[BANK0 ] int 
  2137 ;;  ne              2   22[BANK0 ] int 
  2138 ;;  m               2   20[BANK0 ] int 
  2139 ;;  pp              2   18[BANK0 ] int 
  2140 ;;  t               2   16[BANK0 ] int 
  2141 ;;  mode            1   33[BANK0 ] unsigned char 
  2142 ;;  nmode           1   30[BANK0 ] unsigned char 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  2   64[COMRAM] int 
  2145 ;; Registers used:
  2146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2152 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2153 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2154 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2155 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2156 ;;Total ram usage:       68 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    5
  2159 ;; This function calls:
  2160 ;;		___awdiv
  2161 ;;		___awmod
  2162 ;;		___fladd
  2163 ;;		___fldiv
  2164 ;;		___fleq
  2165 ;;		___flge
  2166 ;;		___flmul
  2167 ;;		___flneg
  2168 ;;		___flsub
  2169 ;;		___fltol
  2170 ;;		___fpclassifyf
  2171 ;;		_floorf
  2172 ;;		_isupper
  2173 ;;		_pad
  2174 ;;		_strcpy
  2175 ;;		_tolower
  2176 ;; This function is called by:
  2177 ;;		_vfpfcnvrt
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text5
  2182  000F1E                     __ptext5:
  2183                           	opt callstack 0
  2184  000F1E                     _efgtoa:
  2185                           	opt callstack 22
  2186                           
  2187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2188                           
  2189                           ;incstack = 0
  2190  000F1E  0E00               	movlw	0
  2191  000F20  0100               	movlb	0	; () banked
  2192  000F22  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2193  000F24  0E00               	movlw	0
  2194  000F26  6F7A               	movwf	efgtoa@sign& (0+255),b
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2198  000F28  C043  F08C         	movff	efgtoa@f,efgtoa@g
  2199  000F2C  C044  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2200  000F30  C045  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2201  000F34  C046  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2205  000F38  AF8F               	btfss	(efgtoa@g+3)& (0+255),7,b
  2206  000F3A  D016               	goto	l4921
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2210  000F3C  0E00               	movlw	0
  2211  000F3E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2212  000F40  0E01               	movlw	1
  2213  000F42  6F7A               	movwf	efgtoa@sign& (0+255),b
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2217  000F44  C08C  F006         	movff	efgtoa@g,___flneg@f1
  2218  000F48  C08D  F007         	movff	efgtoa@g+1,___flneg@f1+1
  2219  000F4C  C08E  F008         	movff	efgtoa@g+2,___flneg@f1+2
  2220  000F50  C08F  F009         	movff	efgtoa@g+3,___flneg@f1+3
  2221  000F54  EC1D  F01A         	call	___flneg	;wreg free
  2222  000F58  C006  F08C         	movff	?___flneg,efgtoa@g
  2223  000F5C  C007  F08D         	movff	?___flneg+1,efgtoa@g+1
  2224  000F60  C008  F08E         	movff	?___flneg+2,efgtoa@g+2
  2225  000F64  C009  F08F         	movff	?___flneg+3,efgtoa@g+3
  2226  000F68                     l4921:
  2227                           
  2228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2229  000F68  0E00               	movlw	0
  2230  000F6A  0100               	movlb	0	; () banked
  2231  000F6C  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2232  000F6E  0E00               	movlw	0
  2233  000F70  6F92               	movwf	efgtoa@n& (0+255),b
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2237  000F72  C0DC  F07F         	movff	_width,efgtoa@w
  2238  000F76  C0DD  F080         	movff	_width+1,efgtoa@w+1
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2242  000F7A  517A               	movf	efgtoa@sign& (0+255),w,b
  2243  000F7C  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2244  000F7E  A4D8               	btfss	status,2,c
  2245  000F80  D002               	goto	u6500
  2246                           
  2247                           ; BSR set to: 0
  2248  000F82  A455               	btfss	_flags,2,c
  2249  000F84  D013               	goto	l4941
  2250  000F86                     u6500:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2254  000F86  517A               	movf	efgtoa@sign& (0+255),w,b
  2255  000F88  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2256  000F8A  A4D8               	btfss	status,2,c
  2257  000F8C  D004               	goto	l4933
  2258                           
  2259                           ; BSR set to: 0
  2260  000F8E  0E00               	movlw	0
  2261  000F90  6F65               	movwf	(_efgtoa$976+1)& (0+255),b
  2262  000F92  0E2B               	movlw	43
  2263  000F94  D003               	goto	L1
  2264  000F96                     l4933:
  2265                           
  2266                           ; BSR set to: 0
  2267  000F96  0E00               	movlw	0
  2268  000F98  6F65               	movwf	(_efgtoa$976+1)& (0+255),b
  2269  000F9A  0E2D               	movlw	45
  2270  000F9C                     L1:
  2271  000F9C  6F64               	movwf	_efgtoa$976& (0+255),b
  2272                           
  2273                           ; BSR set to: 0
  2274  000F9E  C064  F100         	movff	_efgtoa$976,_dbuf
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2278  000FA2  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2279  000FA4  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2283  000FA6  077F               	decf	efgtoa@w& (0+255),f,b
  2284  000FA8  A0D8               	btfss	status,0,c
  2285  000FAA  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2286  000FAC                     l4941:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2290  000FAC  C08C  F006         	movff	efgtoa@g,___fpclassifyf@x
  2291  000FB0  C08D  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2292  000FB4  C08E  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2293  000FB8  C08F  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2294  000FBC  ECAB  F015         	call	___fpclassifyf	;wreg free
  2295  000FC0  0406               	decf	?___fpclassifyf,w,c
  2296  000FC2  1007               	iorwf	?___fpclassifyf+1,w,c
  2297  000FC4  A4D8               	btfss	status,2,c
  2298  000FC6  D04C               	goto	l4959
  2299  000FC8  0EBF               	movlw	191
  2300  000FCA  6E48               	movwf	??_efgtoa& (0+255),c
  2301  000FCC  0EFF               	movlw	255
  2302  000FCE  6E49               	movwf	(??_efgtoa+1)& (0+255),c
  2303  000FD0  5047               	movf	efgtoa@c,w,c
  2304  000FD2  6E4A               	movwf	(??_efgtoa+2)& (0+255),c
  2305  000FD4  6A4B               	clrf	(??_efgtoa+3)& (0+255),c
  2306  000FD6  5048               	movf	??_efgtoa,w,c
  2307  000FD8  264A               	addwf	??_efgtoa+2,f,c
  2308  000FDA  5049               	movf	??_efgtoa+1,w,c
  2309  000FDC  224B               	addwfc	??_efgtoa+3,f,c
  2310  000FDE  504B               	movf	??_efgtoa+3,w,c
  2311  000FE0  E106               	bnz	u6530
  2312  000FE2  0E1A               	movlw	26
  2313  000FE4  5C4A               	subwf	??_efgtoa+2,w,c
  2314  000FE6  B0D8               	btfsc	status,0,c
  2315  000FE8  D002               	goto	u6530
  2316  000FEA  0E01               	movlw	1
  2317  000FEC  D001               	goto	u6540
  2318  000FEE                     u6530:
  2319  000FEE  0E00               	movlw	0
  2320  000FF0                     u6540:
  2321  000FF0  0100               	movlb	0	; () banked
  2322  000FF2  6F66               	movwf	_efgtoa$977& (0+255),b
  2323  000FF4  6B67               	clrf	(_efgtoa$977+1)& (0+255),b
  2324                           
  2325                           ; BSR set to: 0
  2326  000FF6  5166               	movf	_efgtoa$977& (0+255),w,b
  2327  000FF8  1167               	iorwf	(_efgtoa$977+1)& (0+255),w,b
  2328  000FFA  B4D8               	btfsc	status,2,c
  2329  000FFC  D00D               	goto	l4951
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2333  000FFE  0E00               	movlw	low _dbuf
  2334  001000  2592               	addwf	efgtoa@n& (0+255),w,b
  2335  001002  6E06               	movwf	strcpy@dest,c
  2336  001004  0E01               	movlw	high _dbuf
  2337  001006  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2338  001008  6E07               	movwf	strcpy@dest+1,c
  2339  00100A  0E0A               	movlw	low STR_2
  2340  00100C  6E08               	movwf	strcpy@src,c
  2341  00100E  0E0F               	movlw	high STR_2
  2342  001010  6E09               	movwf	strcpy@src+1,c
  2343  001012  ECA8  F018         	call	_strcpy	;wreg free
  2344                           
  2345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2346  001016  D00C               	goto	l4953
  2347  001018                     l4951:
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2351  001018  0E00               	movlw	low _dbuf
  2352  00101A  2592               	addwf	efgtoa@n& (0+255),w,b
  2353  00101C  6E06               	movwf	strcpy@dest,c
  2354  00101E  0E01               	movlw	high _dbuf
  2355  001020  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2356  001022  6E07               	movwf	strcpy@dest+1,c
  2357  001024  0E12               	movlw	low STR_3
  2358  001026  6E08               	movwf	strcpy@src,c
  2359  001028  0E0F               	movlw	high STR_3
  2360  00102A  6E09               	movwf	strcpy@src+1,c
  2361  00102C  ECA8  F018         	call	_strcpy	;wreg free
  2362  001030                     l4953:
  2363                           
  2364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2365  001030  0100               	movlb	0	; () banked
  2366  001032  0EFD               	movlw	253
  2367  001034  277F               	addwf	efgtoa@w& (0+255),f,b
  2368  001036  0EFF               	movlw	255
  2369  001038  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2370  00103A                     l4955:
  2371                           
  2372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2373  00103A  C041  F016         	movff	efgtoa@fp,pad@fp
  2374  00103E  C042  F017         	movff	efgtoa@fp+1,pad@fp+1
  2375  001042  0E00               	movlw	low _dbuf
  2376  001044  6E18               	movwf	pad@buf,c
  2377  001046  0E01               	movlw	high _dbuf
  2378  001048  6E19               	movwf	pad@buf+1,c
  2379  00104A  C07F  F01A         	movff	efgtoa@w,pad@p
  2380  00104E  C080  F01B         	movff	efgtoa@w+1,pad@p+1
  2381  001052  EC71  F017         	call	_pad	;wreg free
  2382  001056  C016  F041         	movff	?_pad,?_efgtoa
  2383  00105A  C017  F042         	movff	?_pad+1,?_efgtoa+1
  2384  00105E  0012               	return	
  2385  001060                     l4959:
  2386                           
  2387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2388  001060  C08C  F006         	movff	efgtoa@g,___fpclassifyf@x
  2389  001064  C08D  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2390  001068  C08E  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2391  00106C  C08F  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2392  001070  ECAB  F015         	call	___fpclassifyf	;wreg free
  2393  001074  5006               	movf	?___fpclassifyf,w,c
  2394  001076  1007               	iorwf	?___fpclassifyf+1,w,c
  2395  001078  A4D8               	btfss	status,2,c
  2396  00107A  D035               	goto	l4977
  2397  00107C  0EBF               	movlw	191
  2398  00107E  6E48               	movwf	??_efgtoa& (0+255),c
  2399  001080  0EFF               	movlw	255
  2400  001082  6E49               	movwf	(??_efgtoa+1)& (0+255),c
  2401  001084  5047               	movf	efgtoa@c,w,c
  2402  001086  6E4A               	movwf	(??_efgtoa+2)& (0+255),c
  2403  001088  6A4B               	clrf	(??_efgtoa+3)& (0+255),c
  2404  00108A  5048               	movf	??_efgtoa,w,c
  2405  00108C  264A               	addwf	??_efgtoa+2,f,c
  2406  00108E  5049               	movf	??_efgtoa+1,w,c
  2407  001090  224B               	addwfc	??_efgtoa+3,f,c
  2408  001092  504B               	movf	??_efgtoa+3,w,c
  2409  001094  E106               	bnz	u6570
  2410  001096  0E1A               	movlw	26
  2411  001098  5C4A               	subwf	??_efgtoa+2,w,c
  2412  00109A  B0D8               	btfsc	status,0,c
  2413  00109C  D002               	goto	u6570
  2414  00109E  0E01               	movlw	1
  2415  0010A0  D001               	goto	u6580
  2416  0010A2                     u6570:
  2417  0010A2  0E00               	movlw	0
  2418  0010A4                     u6580:
  2419  0010A4  0100               	movlb	0	; () banked
  2420  0010A6  6F68               	movwf	_efgtoa$982& (0+255),b
  2421  0010A8  6B69               	clrf	(_efgtoa$982+1)& (0+255),b
  2422                           
  2423                           ; BSR set to: 0
  2424  0010AA  5168               	movf	_efgtoa$982& (0+255),w,b
  2425  0010AC  1169               	iorwf	(_efgtoa$982+1)& (0+255),w,b
  2426  0010AE  B4D8               	btfsc	status,2,c
  2427  0010B0  D00D               	goto	l4969
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2431  0010B2  0E00               	movlw	low _dbuf
  2432  0010B4  2592               	addwf	efgtoa@n& (0+255),w,b
  2433  0010B6  6E06               	movwf	strcpy@dest,c
  2434  0010B8  0E01               	movlw	high _dbuf
  2435  0010BA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2436  0010BC  6E07               	movwf	strcpy@dest+1,c
  2437  0010BE  0E0E               	movlw	low STR_6
  2438  0010C0  6E08               	movwf	strcpy@src,c
  2439  0010C2  0E0F               	movlw	high STR_6
  2440  0010C4  6E09               	movwf	strcpy@src+1,c
  2441  0010C6  ECA8  F018         	call	_strcpy	;wreg free
  2442                           
  2443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2444  0010CA  D7B2               	goto	l4953
  2445  0010CC                     l4969:
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2449  0010CC  0E00               	movlw	low _dbuf
  2450  0010CE  2592               	addwf	efgtoa@n& (0+255),w,b
  2451  0010D0  6E06               	movwf	strcpy@dest,c
  2452  0010D2  0E01               	movlw	high _dbuf
  2453  0010D4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2454  0010D6  6E07               	movwf	strcpy@dest+1,c
  2455  0010D8  0E16               	movlw	low STR_7
  2456  0010DA  6E08               	movwf	strcpy@src,c
  2457  0010DC  0E0F               	movlw	high STR_7
  2458  0010DE  6E09               	movwf	strcpy@src+1,c
  2459  0010E0  ECA8  F018         	call	_strcpy	;wreg free
  2460  0010E4  D7A5               	goto	l4953
  2461  0010E6                     l4977:
  2462                           
  2463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  2464  0010E6  0E00               	movlw	0
  2465  0010E8  0100               	movlb	0	; () banked
  2466  0010EA  6F94               	movwf	efgtoa@u& (0+255),b
  2467  0010EC  0E00               	movlw	0
  2468  0010EE  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2469  0010F0  0E80               	movlw	128
  2470  0010F2  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2471  0010F4  0E3F               	movlw	63
  2472  0010F6  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2473                           
  2474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  2475  0010F8  0E00               	movlw	0
  2476  0010FA  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2477  0010FC  0E00               	movlw	0
  2478  0010FE  6F90               	movwf	efgtoa@e& (0+255),b
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  2482  001100  C08C  F006         	movff	efgtoa@g,___fleq@ff1
  2483  001104  C08D  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  2484  001108  C08E  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  2485  00110C  C08F  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  2486  001110  0E00               	movlw	0
  2487  001112  6E0A               	movwf	___fleq@ff2,c
  2488  001114  0E00               	movlw	0
  2489  001116  6E0B               	movwf	___fleq@ff2+1,c
  2490  001118  0E00               	movlw	0
  2491  00111A  6E0C               	movwf	___fleq@ff2+2,c
  2492  00111C  0E00               	movlw	0
  2493  00111E  6E0D               	movwf	___fleq@ff2+3,c
  2494  001120  ECBC  F017         	call	___fleq	;wreg free
  2495  001124  A0D8               	btfss	status,0,c
  2496  001126  D01E               	goto	l4987
  2497  001128  D076               	goto	u6620
  2498  00112A                     l4983:
  2499                           
  2500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  2501  00112A  C094  F006         	movff	efgtoa@u,___flmul@b
  2502  00112E  C095  F007         	movff	efgtoa@u+1,___flmul@b+1
  2503  001132  C096  F008         	movff	efgtoa@u+2,___flmul@b+2
  2504  001136  C097  F009         	movff	efgtoa@u+3,___flmul@b+3
  2505  00113A  0E00               	movlw	0
  2506  00113C  6E0A               	movwf	___flmul@a,c
  2507  00113E  0E00               	movlw	0
  2508  001140  6E0B               	movwf	___flmul@a+1,c
  2509  001142  0E20               	movlw	32
  2510  001144  6E0C               	movwf	___flmul@a+2,c
  2511  001146  0E41               	movlw	65
  2512  001148  6E0D               	movwf	___flmul@a+3,c
  2513  00114A  ECAB  F00E         	call	___flmul	;wreg free
  2514  00114E  C006  F094         	movff	?___flmul,efgtoa@u
  2515  001152  C007  F095         	movff	?___flmul+1,efgtoa@u+1
  2516  001156  C008  F096         	movff	?___flmul+2,efgtoa@u+2
  2517  00115A  C009  F097         	movff	?___flmul+3,efgtoa@u+3
  2518                           
  2519                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  2520  00115E  0100               	movlb	0	; () banked
  2521  001160  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2522  001162  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2523  001164                     l4987:
  2524                           
  2525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  2526  001164  C08C  F01F         	movff	efgtoa@g,___flge@ff1
  2527  001168  C08D  F020         	movff	efgtoa@g+1,___flge@ff1+1
  2528  00116C  C08E  F021         	movff	efgtoa@g+2,___flge@ff1+2
  2529  001170  C08F  F022         	movff	efgtoa@g+3,___flge@ff1+3
  2530  001174  0E00               	movlw	0
  2531  001176  6E0A               	movwf	___flmul@a,c
  2532  001178  0E00               	movlw	0
  2533  00117A  6E0B               	movwf	___flmul@a+1,c
  2534  00117C  0E20               	movlw	32
  2535  00117E  6E0C               	movwf	___flmul@a+2,c
  2536  001180  0E41               	movlw	65
  2537  001182  6E0D               	movwf	___flmul@a+3,c
  2538  001184  C094  F006         	movff	efgtoa@u,___flmul@b
  2539  001188  C095  F007         	movff	efgtoa@u+1,___flmul@b+1
  2540  00118C  C096  F008         	movff	efgtoa@u+2,___flmul@b+2
  2541  001190  C097  F009         	movff	efgtoa@u+3,___flmul@b+3
  2542  001194  ECAB  F00E         	call	___flmul	;wreg free
  2543  001198  C006  F023         	movff	?___flmul,___flge@ff2
  2544  00119C  C007  F024         	movff	?___flmul+1,___flge@ff2+1
  2545  0011A0  C008  F025         	movff	?___flmul+2,___flge@ff2+2
  2546  0011A4  C009  F026         	movff	?___flmul+3,___flge@ff2+3
  2547  0011A8  EC43  F015         	call	___flge	;wreg free
  2548  0011AC  A0D8               	btfss	status,0,c
  2549  0011AE  D01F               	goto	l4993
  2550  0011B0  D7BC               	goto	l4983
  2551  0011B2                     l4989:
  2552                           
  2553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  2554  0011B2  C094  F014         	movff	efgtoa@u,___fldiv@b
  2555  0011B6  C095  F015         	movff	efgtoa@u+1,___fldiv@b+1
  2556  0011BA  C096  F016         	movff	efgtoa@u+2,___fldiv@b+2
  2557  0011BE  C097  F017         	movff	efgtoa@u+3,___fldiv@b+3
  2558  0011C2  0E00               	movlw	0
  2559  0011C4  6E18               	movwf	___fldiv@a,c
  2560  0011C6  0E00               	movlw	0
  2561  0011C8  6E19               	movwf	___fldiv@a+1,c
  2562  0011CA  0E20               	movlw	32
  2563  0011CC  6E1A               	movwf	___fldiv@a+2,c
  2564  0011CE  0E41               	movlw	65
  2565  0011D0  6E1B               	movwf	___fldiv@a+3,c
  2566  0011D2  ECDA  F011         	call	___fldiv	;wreg free
  2567  0011D6  C014  F094         	movff	?___fldiv,efgtoa@u
  2568  0011DA  C015  F095         	movff	?___fldiv+1,efgtoa@u+1
  2569  0011DE  C016  F096         	movff	?___fldiv+2,efgtoa@u+2
  2570  0011E2  C017  F097         	movff	?___fldiv+3,efgtoa@u+3
  2571                           
  2572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  2573  0011E6  0100               	movlb	0	; () banked
  2574  0011E8  0790               	decf	efgtoa@e& (0+255),f,b
  2575  0011EA  A0D8               	btfss	status,0,c
  2576  0011EC  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2577  0011EE                     l4993:
  2578                           
  2579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  2580  0011EE  C08C  F01F         	movff	efgtoa@g,___flge@ff1
  2581  0011F2  C08D  F020         	movff	efgtoa@g+1,___flge@ff1+1
  2582  0011F6  C08E  F021         	movff	efgtoa@g+2,___flge@ff1+2
  2583  0011FA  C08F  F022         	movff	efgtoa@g+3,___flge@ff1+3
  2584  0011FE  C094  F023         	movff	efgtoa@u,___flge@ff2
  2585  001202  C095  F024         	movff	efgtoa@u+1,___flge@ff2+1
  2586  001206  C096  F025         	movff	efgtoa@u+2,___flge@ff2+2
  2587  00120A  C097  F026         	movff	efgtoa@u+3,___flge@ff2+3
  2588  00120E  EC43  F015         	call	___flge	;wreg free
  2589  001212  A0D8               	btfss	status,0,c
  2590  001214  D7CE               	goto	l4989
  2591  001216                     u6620:
  2592                           
  2593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  2594  001216  C047  F00C         	movff	efgtoa@c,tolower@c
  2595  00121A  6A0D               	clrf	tolower@c+1,c
  2596  00121C  EC49  F019         	call	_tolower	;wreg free
  2597  001220  500C               	movf	?_tolower,w,c
  2598  001222  0100               	movlb	0	; () banked
  2599  001224  6F81               	movwf	efgtoa@mode& (0+255),b
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  2603  001226  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  2607  00122A  0E67               	movlw	103
  2608  00122C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2609  00122E  A4D8               	btfss	status,2,c
  2610  001230  D019               	goto	l5009
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  2614  001232  5053               	movf	_prec,w,c
  2615  001234  1054               	iorwf	_prec+1,w,c
  2616  001236  A4D8               	btfss	status,2,c
  2617  001238  D004               	goto	l5005
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  2621  00123A  0E00               	movlw	0
  2622  00123C  6E54               	movwf	_prec+1,c
  2623  00123E  0E01               	movlw	1
  2624  001240  6E53               	movwf	_prec,c
  2625  001242                     l5005:
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  2629  001242  BE54               	btfsc	_prec+1,7,c
  2630  001244  D005               	goto	u6650
  2631  001246  5054               	movf	_prec+1,w,c
  2632  001248  E108               	bnz	l242
  2633  00124A  0453               	decf	_prec,w,c
  2634  00124C  B0D8               	btfsc	status,0,c
  2635  00124E  D005               	goto	l242
  2636  001250                     u6650:
  2637                           
  2638                           ; BSR set to: 0
  2639  001250  0E00               	movlw	0
  2640  001252  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2641  001254  0E06               	movlw	6
  2642  001256  6F7C               	movwf	efgtoa@p& (0+255),b
  2643  001258  D008               	goto	l5015
  2644  00125A                     l242:
  2645                           
  2646                           ; BSR set to: 0
  2647  00125A  C053  F07C         	movff	_prec,efgtoa@p
  2648  00125E  C054  F07D         	movff	_prec+1,efgtoa@p+1
  2649  001262  D003               	goto	l5015
  2650  001264                     l5009:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  2654  001264  AE54               	btfss	_prec+1,7,c
  2655  001266  D7F9               	goto	l242
  2656  001268  D7F3               	goto	u6650
  2657  00126A                     l5015:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  2661  00126A  0E67               	movlw	103
  2662  00126C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2663  00126E  A4D8               	btfss	status,2,c
  2664  001270  D022               	goto	l5025
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  2668  001272  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2669  001274  D006               	goto	u6680
  2670  001276  0EFC               	movlw	252
  2671  001278  5D90               	subwf	efgtoa@e& (0+255),w,b
  2672  00127A  0EFF               	movlw	255
  2673  00127C  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2674  00127E  A0D8               	btfss	status,0,c
  2675  001280  D018               	goto	l5023
  2676  001282                     u6680:
  2677                           
  2678                           ; BSR set to: 0
  2679  001282  0EFF               	movlw	255
  2680  001284  6E48               	movwf	??_efgtoa& (0+255),c
  2681  001286  0EFF               	movlw	255
  2682  001288  6E49               	movwf	(??_efgtoa+1)& (0+255),c
  2683  00128A  C07C  F04A         	movff	efgtoa@p,??_efgtoa+2
  2684  00128E  C07D  F04B         	movff	efgtoa@p+1,??_efgtoa+3
  2685  001292  5048               	movf	??_efgtoa,w,c
  2686  001294  264A               	addwf	??_efgtoa+2,f,c
  2687  001296  5049               	movf	??_efgtoa+1,w,c
  2688  001298  224B               	addwfc	??_efgtoa+3,f,c
  2689  00129A  5190               	movf	efgtoa@e& (0+255),w,b
  2690  00129C  5C4A               	subwf	??_efgtoa+2,w,c
  2691  00129E  504B               	movf	??_efgtoa+3,w,c
  2692  0012A0  0A80               	xorlw	128
  2693  0012A2  6E4C               	movwf	(??_efgtoa+4)& (0+255),c
  2694  0012A4  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2695  0012A6  0A80               	xorlw	128
  2696  0012A8  584C               	subwfb	(??_efgtoa+4)& (0+255),w,c
  2697  0012AA  A0D8               	btfss	status,0,c
  2698  0012AC  D002               	goto	l5023
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  2702  0012AE  0E66               	movlw	102
  2703  0012B0  D001               	goto	L2
  2704  0012B2                     l5023:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  2708  0012B2  0E65               	movlw	101
  2709  0012B4                     L2:
  2710  0012B4  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2711  0012B6                     l5025:
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  2715  0012B6  C07C  F074         	movff	efgtoa@p,efgtoa@m
  2716  0012BA  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  2720  0012BE  0E67               	movlw	103
  2721  0012C0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2722  0012C2  A4D8               	btfss	status,2,c
  2723  0012C4  D005               	goto	u6720
  2724                           
  2725                           ; BSR set to: 0
  2726  0012C6  0E66               	movlw	102
  2727  0012C8  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2728  0012CA  B4D8               	btfsc	status,2,c
  2729                           
  2730                           ; BSR set to: 0
  2731  0012CC  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2732  0012CE  D002               	goto	l5035
  2733  0012D0                     u6720:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  2737  0012D0  4B74               	infsnz	efgtoa@m& (0+255),f,b
  2738  0012D2  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  2739  0012D4                     l5035:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  2743  0012D4  0E66               	movlw	102
  2744  0012D6  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2745  0012D8  A4D8               	btfss	status,2,c
  2746  0012DA  D016               	goto	l5045
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  2750  0012DC  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2751  0012DE  D00C               	goto	l5041
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  2755  0012E0  0E00               	movlw	0
  2756  0012E2  6F94               	movwf	efgtoa@u& (0+255),b
  2757  0012E4  0E00               	movlw	0
  2758  0012E6  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2759  0012E8  0E80               	movlw	128
  2760  0012EA  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2761  0012EC  0E3F               	movlw	63
  2762  0012EE  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2763                           
  2764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  2765  0012F0  0E00               	movlw	0
  2766  0012F2  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2767  0012F4  0E00               	movlw	0
  2768  0012F6  6F90               	movwf	efgtoa@e& (0+255),b
  2769  0012F8                     l5041:
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  2773  0012F8  0E67               	movlw	103
  2774  0012FA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2775  0012FC  B4D8               	btfsc	status,2,c
  2776  0012FE  D004               	goto	l5045
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  2780  001300  5190               	movf	efgtoa@e& (0+255),w,b
  2781  001302  2774               	addwf	efgtoa@m& (0+255),f,b
  2782  001304  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2783  001306  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2784  001308                     l5045:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  2788  001308  0E00               	movlw	0
  2789  00130A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2790  00130C  0E00               	movlw	0
  2791  00130E  6F8A               	movwf	efgtoa@i& (0+255),b
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  2795  001310  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2796  001314  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2797  001318  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2798  00131C  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  2802  001320  C094  F060         	movff	efgtoa@u,efgtoa@ou
  2803  001324  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  2804  001328  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  2805  00132C  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  2806                           
  2807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2808  001330  D07B               	goto	l5059
  2809  001332                     l5051:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  2813  001332  C082  F014         	movff	efgtoa@h,___fldiv@b
  2814  001336  C083  F015         	movff	efgtoa@h+1,___fldiv@b+1
  2815  00133A  C084  F016         	movff	efgtoa@h+2,___fldiv@b+2
  2816  00133E  C085  F017         	movff	efgtoa@h+3,___fldiv@b+3
  2817  001342  C094  F018         	movff	efgtoa@u,___fldiv@a
  2818  001346  C095  F019         	movff	efgtoa@u+1,___fldiv@a+1
  2819  00134A  C096  F01A         	movff	efgtoa@u+2,___fldiv@a+2
  2820  00134E  C097  F01B         	movff	efgtoa@u+3,___fldiv@a+3
  2821  001352  ECDA  F011         	call	___fldiv	;wreg free
  2822  001356  C014  F02D         	movff	?___fldiv,floorf@x
  2823  00135A  C015  F02E         	movff	?___fldiv+1,floorf@x+1
  2824  00135E  C016  F02F         	movff	?___fldiv+2,floorf@x+2
  2825  001362  C017  F030         	movff	?___fldiv+3,floorf@x+3
  2826  001366  EC1E  F013         	call	_floorf	;wreg free
  2827  00136A  C02D  F086         	movff	?_floorf,efgtoa@l
  2828  00136E  C02E  F087         	movff	?_floorf+1,efgtoa@l+1
  2829  001372  C02F  F088         	movff	?_floorf+2,efgtoa@l+2
  2830  001376  C030  F089         	movff	?_floorf+3,efgtoa@l+3
  2831                           
  2832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  2833  00137A  C086  F006         	movff	efgtoa@l,___fltol@f1
  2834  00137E  C087  F007         	movff	efgtoa@l+1,___fltol@f1+1
  2835  001382  C088  F008         	movff	efgtoa@l+2,___fltol@f1+2
  2836  001386  C089  F009         	movff	efgtoa@l+3,___fltol@f1+3
  2837  00138A  EC11  F016         	call	___fltol	;wreg free
  2838  00138E  C006  F078         	movff	?___fltol,efgtoa@d
  2839  001392  C007  F079         	movff	?___fltol+1,efgtoa@d+1
  2840                           
  2841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  2842  001396  C082  F01F         	movff	efgtoa@h,___flsub@b
  2843  00139A  C083  F020         	movff	efgtoa@h+1,___flsub@b+1
  2844  00139E  C084  F021         	movff	efgtoa@h+2,___flsub@b+2
  2845  0013A2  C085  F022         	movff	efgtoa@h+3,___flsub@b+3
  2846  0013A6  C094  F00A         	movff	efgtoa@u,___flmul@a
  2847  0013AA  C095  F00B         	movff	efgtoa@u+1,___flmul@a+1
  2848  0013AE  C096  F00C         	movff	efgtoa@u+2,___flmul@a+2
  2849  0013B2  C097  F00D         	movff	efgtoa@u+3,___flmul@a+3
  2850  0013B6  C086  F006         	movff	efgtoa@l,___flmul@b
  2851  0013BA  C087  F007         	movff	efgtoa@l+1,___flmul@b+1
  2852  0013BE  C088  F008         	movff	efgtoa@l+2,___flmul@b+2
  2853  0013C2  C089  F009         	movff	efgtoa@l+3,___flmul@b+3
  2854  0013C6  ECAB  F00E         	call	___flmul	;wreg free
  2855  0013CA  C006  F023         	movff	?___flmul,___flsub@a
  2856  0013CE  C007  F024         	movff	?___flmul+1,___flsub@a+1
  2857  0013D2  C008  F025         	movff	?___flmul+2,___flsub@a+2
  2858  0013D6  C009  F026         	movff	?___flmul+3,___flsub@a+3
  2859  0013DA  EC6F  F019         	call	___flsub	;wreg free
  2860  0013DE  C01F  F082         	movff	?___flsub,efgtoa@h
  2861  0013E2  C020  F083         	movff	?___flsub+1,efgtoa@h+1
  2862  0013E6  C021  F084         	movff	?___flsub+2,efgtoa@h+2
  2863  0013EA  C022  F085         	movff	?___flsub+3,efgtoa@h+3
  2864                           
  2865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  2866  0013EE  C094  F014         	movff	efgtoa@u,___fldiv@b
  2867  0013F2  C095  F015         	movff	efgtoa@u+1,___fldiv@b+1
  2868  0013F6  C096  F016         	movff	efgtoa@u+2,___fldiv@b+2
  2869  0013FA  C097  F017         	movff	efgtoa@u+3,___fldiv@b+3
  2870  0013FE  0E00               	movlw	0
  2871  001400  6E18               	movwf	___fldiv@a,c
  2872  001402  0E00               	movlw	0
  2873  001404  6E19               	movwf	___fldiv@a+1,c
  2874  001406  0E20               	movlw	32
  2875  001408  6E1A               	movwf	___fldiv@a+2,c
  2876  00140A  0E41               	movlw	65
  2877  00140C  6E1B               	movwf	___fldiv@a+3,c
  2878  00140E  ECDA  F011         	call	___fldiv	;wreg free
  2879  001412  C014  F094         	movff	?___fldiv,efgtoa@u
  2880  001416  C015  F095         	movff	?___fldiv+1,efgtoa@u+1
  2881  00141A  C016  F096         	movff	?___fldiv+2,efgtoa@u+2
  2882  00141E  C017  F097         	movff	?___fldiv+3,efgtoa@u+3
  2883                           
  2884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  2885  001422  0100               	movlb	0	; () banked
  2886  001424  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  2887  001426  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  2888  001428                     l5059:
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2892  001428  5174               	movf	efgtoa@m& (0+255),w,b
  2893  00142A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  2894  00142C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  2895  00142E  0A80               	xorlw	128
  2896  001430  6E48               	movwf	??_efgtoa& (0+255),c
  2897  001432  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  2898  001434  0A80               	xorlw	128
  2899  001436  5848               	subwfb	??_efgtoa& (0+255),w,c
  2900  001438  A0D8               	btfss	status,0,c
  2901  00143A  D77B               	goto	l5051
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  2905  00143C  C094  F006         	movff	efgtoa@u,___flmul@b
  2906  001440  C095  F007         	movff	efgtoa@u+1,___flmul@b+1
  2907  001444  C096  F008         	movff	efgtoa@u+2,___flmul@b+2
  2908  001448  C097  F009         	movff	efgtoa@u+3,___flmul@b+3
  2909  00144C  0E00               	movlw	0
  2910  00144E  6E0A               	movwf	___flmul@a,c
  2911  001450  0E00               	movlw	0
  2912  001452  6E0B               	movwf	___flmul@a+1,c
  2913  001454  0EA0               	movlw	160
  2914  001456  6E0C               	movwf	___flmul@a+2,c
  2915  001458  0E40               	movlw	64
  2916  00145A  6E0D               	movwf	___flmul@a+3,c
  2917  00145C  ECAB  F00E         	call	___flmul	;wreg free
  2918  001460  C006  F086         	movff	?___flmul,efgtoa@l
  2919  001464  C007  F087         	movff	?___flmul+1,efgtoa@l+1
  2920  001468  C008  F088         	movff	?___flmul+2,efgtoa@l+2
  2921  00146C  C009  F089         	movff	?___flmul+3,efgtoa@l+3
  2922                           
  2923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  2924  001470  C082  F01F         	movff	efgtoa@h,___flge@ff1
  2925  001474  C083  F020         	movff	efgtoa@h+1,___flge@ff1+1
  2926  001478  C084  F021         	movff	efgtoa@h+2,___flge@ff1+2
  2927  00147C  C085  F022         	movff	efgtoa@h+3,___flge@ff1+3
  2928  001480  C086  F023         	movff	efgtoa@l,___flge@ff2
  2929  001484  C087  F024         	movff	efgtoa@l+1,___flge@ff2+1
  2930  001488  C088  F025         	movff	efgtoa@l+2,___flge@ff2+2
  2931  00148C  C089  F026         	movff	efgtoa@l+3,___flge@ff2+3
  2932  001490  EC43  F015         	call	___flge	;wreg free
  2933  001494  B0D8               	btfsc	status,0,c
  2934  001496  D003               	goto	l5067
  2935                           
  2936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  2937  001498  0E00               	movlw	0
  2938  00149A  0100               	movlb	0	; () banked
  2939  00149C  D018               	goto	L3
  2940  00149E                     l5067:
  2941                           
  2942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  2943  00149E  C082  F006         	movff	efgtoa@h,___fleq@ff1
  2944  0014A2  C083  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  2945  0014A6  C084  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  2946  0014AA  C085  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  2947  0014AE  C086  F00A         	movff	efgtoa@l,___fleq@ff2
  2948  0014B2  C087  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  2949  0014B6  C088  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  2950  0014BA  C089  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  2951  0014BE  ECBC  F017         	call	___fleq	;wreg free
  2952  0014C2  A0D8               	btfss	status,0,c
  2953  0014C4  D00B               	goto	l5073
  2954  0014C6  0100               	movlb	0	; () banked
  2955  0014C8  B178               	btfsc	efgtoa@d& (0+255),0,b
  2956  0014CA  D008               	goto	l5073
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  2960  0014CC  0E00               	movlw	0
  2961  0014CE                     L3:
  2962  0014CE  6F86               	movwf	efgtoa@l& (0+255),b
  2963  0014D0  0E00               	movlw	0
  2964  0014D2  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2965  0014D4  0E00               	movlw	0
  2966  0014D6  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2967  0014D8  0E00               	movlw	0
  2968  0014DA  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2969  0014DC                     l5073:
  2970                           
  2971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  2972  0014DC  C08C  F006         	movff	efgtoa@g,___fladd@b
  2973  0014E0  C08D  F007         	movff	efgtoa@g+1,___fladd@b+1
  2974  0014E4  C08E  F008         	movff	efgtoa@g+2,___fladd@b+2
  2975  0014E8  C08F  F009         	movff	efgtoa@g+3,___fladd@b+3
  2976  0014EC  C086  F00A         	movff	efgtoa@l,___fladd@a
  2977  0014F0  C087  F00B         	movff	efgtoa@l+1,___fladd@a+1
  2978  0014F4  C088  F00C         	movff	efgtoa@l+2,___fladd@a+2
  2979  0014F8  C089  F00D         	movff	efgtoa@l+3,___fladd@a+3
  2980  0014FC  EC54  F010         	call	___fladd	;wreg free
  2981  001500  C006  F082         	movff	?___fladd,efgtoa@h
  2982  001504  C007  F083         	movff	?___fladd+1,efgtoa@h+1
  2983  001508  C008  F084         	movff	?___fladd+2,efgtoa@h+2
  2984  00150C  C009  F085         	movff	?___fladd+3,efgtoa@h+3
  2985                           
  2986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  2987  001510  C060  F094         	movff	efgtoa@ou,efgtoa@u
  2988  001514  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  2989  001518  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  2990  00151C  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  2991                           
  2992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  2993  001520  0E65               	movlw	101
  2994  001522  0100               	movlb	0	; () banked
  2995  001524  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2996  001526  B4D8               	btfsc	status,2,c
  2997  001528  D005               	goto	l5081
  2998                           
  2999                           ; BSR set to: 0
  3000  00152A  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3001  00152E  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3002  001532  D004               	goto	l268
  3003  001534                     l5081:
  3004                           
  3005                           ; BSR set to: 0
  3006  001534  0E00               	movlw	0
  3007  001536  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3008  001538  0E00               	movlw	0
  3009  00153A  6F76               	movwf	efgtoa@ne& (0+255),b
  3010  00153C                     l268:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3014  00153C  0E00               	movlw	0
  3015  00153E  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3016  001540  0E00               	movlw	0
  3017  001542  6F72               	movwf	efgtoa@pp& (0+255),b
  3018                           
  3019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3020  001544  0E00               	movlw	0
  3021  001546  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3022  001548  0E00               	movlw	0
  3023  00154A  6F70               	movwf	efgtoa@t& (0+255),b
  3024                           
  3025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3026  00154C  0E00               	movlw	0
  3027  00154E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3028  001550  0E00               	movlw	0
  3029  001552  6F8A               	movwf	efgtoa@i& (0+255),b
  3030                           
  3031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3032  001554  D0C7               	goto	l5131
  3033  001556                     l5083:
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3037  001556  C082  F014         	movff	efgtoa@h,___fldiv@b
  3038  00155A  C083  F015         	movff	efgtoa@h+1,___fldiv@b+1
  3039  00155E  C084  F016         	movff	efgtoa@h+2,___fldiv@b+2
  3040  001562  C085  F017         	movff	efgtoa@h+3,___fldiv@b+3
  3041  001566  C094  F018         	movff	efgtoa@u,___fldiv@a
  3042  00156A  C095  F019         	movff	efgtoa@u+1,___fldiv@a+1
  3043  00156E  C096  F01A         	movff	efgtoa@u+2,___fldiv@a+2
  3044  001572  C097  F01B         	movff	efgtoa@u+3,___fldiv@a+3
  3045  001576  ECDA  F011         	call	___fldiv	;wreg free
  3046  00157A  C014  F02D         	movff	?___fldiv,floorf@x
  3047  00157E  C015  F02E         	movff	?___fldiv+1,floorf@x+1
  3048  001582  C016  F02F         	movff	?___fldiv+2,floorf@x+2
  3049  001586  C017  F030         	movff	?___fldiv+3,floorf@x+3
  3050  00158A  EC1E  F013         	call	_floorf	;wreg free
  3051  00158E  C02D  F086         	movff	?_floorf,efgtoa@l
  3052  001592  C02E  F087         	movff	?_floorf+1,efgtoa@l+1
  3053  001596  C02F  F088         	movff	?_floorf+2,efgtoa@l+2
  3054  00159A  C030  F089         	movff	?_floorf+3,efgtoa@l+3
  3055                           
  3056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3057  00159E  C086  F006         	movff	efgtoa@l,___fltol@f1
  3058  0015A2  C087  F007         	movff	efgtoa@l+1,___fltol@f1+1
  3059  0015A6  C088  F008         	movff	efgtoa@l+2,___fltol@f1+2
  3060  0015AA  C089  F009         	movff	efgtoa@l+3,___fltol@f1+3
  3061  0015AE  EC11  F016         	call	___fltol	;wreg free
  3062  0015B2  C006  F078         	movff	?___fltol,efgtoa@d
  3063  0015B6  C007  F079         	movff	?___fltol+1,efgtoa@d+1
  3064                           
  3065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3066  0015BA  B855               	btfsc	_flags,4,c
  3067  0015BC  D00D               	goto	l5095
  3068  0015BE  0100               	movlb	0	; () banked
  3069  0015C0  5178               	movf	efgtoa@d& (0+255),w,b
  3070  0015C2  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3071  0015C4  A4D8               	btfss	status,2,c
  3072  0015C6  D008               	goto	l5095
  3073                           
  3074                           ; BSR set to: 0
  3075  0015C8  0E67               	movlw	103
  3076  0015CA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3077  0015CC  B4D8               	btfsc	status,2,c
  3078                           
  3079                           ; BSR set to: 0
  3080  0015CE  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3081  0015D0  D003               	goto	l5095
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3085  0015D2  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3086  0015D4  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3087                           
  3088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3089  0015D6  D03A               	goto	l5123
  3090  0015D8                     l5095:
  3091                           
  3092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3093  0015D8  0100               	movlb	0	; () banked
  3094  0015DA  5172               	movf	efgtoa@pp& (0+255),w,b
  3095  0015DC  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3096  0015DE  B4D8               	btfsc	status,2,c
  3097                           
  3098                           ; BSR set to: 0
  3099  0015E0  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3100  0015E2  D022               	goto	l5115
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3104  0015E4  0E00               	movlw	low _dbuf
  3105  0015E6  2592               	addwf	efgtoa@n& (0+255),w,b
  3106  0015E8  6ED9               	movwf	fsr2l,c
  3107  0015EA  0E01               	movlw	high _dbuf
  3108  0015EC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3109  0015EE  6EDA               	movwf	fsr2h,c
  3110  0015F0  0E2E               	movlw	46
  3111  0015F2  6EDF               	movwf	indf2,c
  3112                           
  3113                           ; BSR set to: 0
  3114  0015F4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3115  0015F6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3119  0015F8  077F               	decf	efgtoa@w& (0+255),f,b
  3120  0015FA  A0D8               	btfss	status,0,c
  3121  0015FC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3125  0015FE  0E00               	movlw	0
  3126  001600  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3127  001602  0E01               	movlw	1
  3128  001604  6F72               	movwf	efgtoa@pp& (0+255),b
  3129  001606  D010               	goto	l5115
  3130  001608                     l5107:
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3134  001608  0E00               	movlw	low _dbuf
  3135  00160A  2592               	addwf	efgtoa@n& (0+255),w,b
  3136  00160C  6ED9               	movwf	fsr2l,c
  3137  00160E  0E01               	movlw	high _dbuf
  3138  001610  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3139  001612  6EDA               	movwf	fsr2h,c
  3140  001614  0E30               	movlw	48
  3141  001616  6EDF               	movwf	indf2,c
  3142                           
  3143                           ; BSR set to: 0
  3144  001618  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3145  00161A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3149  00161C  077F               	decf	efgtoa@w& (0+255),f,b
  3150  00161E  A0D8               	btfss	status,0,c
  3151  001620  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3155  001622  0770               	decf	efgtoa@t& (0+255),f,b
  3156  001624  A0D8               	btfss	status,0,c
  3157  001626  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3158  001628                     l5115:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3162  001628  5170               	movf	efgtoa@t& (0+255),w,b
  3163  00162A  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3164  00162C  A4D8               	btfss	status,2,c
  3165  00162E  D7EC               	goto	l5107
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3169  001630  0E00               	movlw	low _dbuf
  3170  001632  2592               	addwf	efgtoa@n& (0+255),w,b
  3171  001634  6ED9               	movwf	fsr2l,c
  3172  001636  0E01               	movlw	high _dbuf
  3173  001638  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3174  00163A  6EDA               	movwf	fsr2h,c
  3175  00163C  5178               	movf	efgtoa@d& (0+255),w,b
  3176  00163E  0F30               	addlw	48
  3177  001640  6EDF               	movwf	indf2,c
  3178                           
  3179                           ; BSR set to: 0
  3180  001642  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3181  001644  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3185  001646  077F               	decf	efgtoa@w& (0+255),f,b
  3186  001648  A0D8               	btfss	status,0,c
  3187  00164A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3188  00164C                     l5123:
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3192  00164C  C082  F01F         	movff	efgtoa@h,___flsub@b
  3193  001650  C083  F020         	movff	efgtoa@h+1,___flsub@b+1
  3194  001654  C084  F021         	movff	efgtoa@h+2,___flsub@b+2
  3195  001658  C085  F022         	movff	efgtoa@h+3,___flsub@b+3
  3196  00165C  C094  F00A         	movff	efgtoa@u,___flmul@a
  3197  001660  C095  F00B         	movff	efgtoa@u+1,___flmul@a+1
  3198  001664  C096  F00C         	movff	efgtoa@u+2,___flmul@a+2
  3199  001668  C097  F00D         	movff	efgtoa@u+3,___flmul@a+3
  3200  00166C  C086  F006         	movff	efgtoa@l,___flmul@b
  3201  001670  C087  F007         	movff	efgtoa@l+1,___flmul@b+1
  3202  001674  C088  F008         	movff	efgtoa@l+2,___flmul@b+2
  3203  001678  C089  F009         	movff	efgtoa@l+3,___flmul@b+3
  3204  00167C  ECAB  F00E         	call	___flmul	;wreg free
  3205  001680  C006  F023         	movff	?___flmul,___flsub@a
  3206  001684  C007  F024         	movff	?___flmul+1,___flsub@a+1
  3207  001688  C008  F025         	movff	?___flmul+2,___flsub@a+2
  3208  00168C  C009  F026         	movff	?___flmul+3,___flsub@a+3
  3209  001690  EC6F  F019         	call	___flsub	;wreg free
  3210  001694  C01F  F082         	movff	?___flsub,efgtoa@h
  3211  001698  C020  F083         	movff	?___flsub+1,efgtoa@h+1
  3212  00169C  C021  F084         	movff	?___flsub+2,efgtoa@h+2
  3213  0016A0  C022  F085         	movff	?___flsub+3,efgtoa@h+3
  3214                           
  3215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3216  0016A4  C094  F014         	movff	efgtoa@u,___fldiv@b
  3217  0016A8  C095  F015         	movff	efgtoa@u+1,___fldiv@b+1
  3218  0016AC  C096  F016         	movff	efgtoa@u+2,___fldiv@b+2
  3219  0016B0  C097  F017         	movff	efgtoa@u+3,___fldiv@b+3
  3220  0016B4  0E00               	movlw	0
  3221  0016B6  6E18               	movwf	___fldiv@a,c
  3222  0016B8  0E00               	movlw	0
  3223  0016BA  6E19               	movwf	___fldiv@a+1,c
  3224  0016BC  0E20               	movlw	32
  3225  0016BE  6E1A               	movwf	___fldiv@a+2,c
  3226  0016C0  0E41               	movlw	65
  3227  0016C2  6E1B               	movwf	___fldiv@a+3,c
  3228  0016C4  ECDA  F011         	call	___fldiv	;wreg free
  3229  0016C8  C014  F094         	movff	?___fldiv,efgtoa@u
  3230  0016CC  C015  F095         	movff	?___fldiv+1,efgtoa@u+1
  3231  0016D0  C016  F096         	movff	?___fldiv+2,efgtoa@u+2
  3232  0016D4  C017  F097         	movff	?___fldiv+3,efgtoa@u+3
  3233                           
  3234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3235  0016D8  0100               	movlb	0	; () banked
  3236  0016DA  0776               	decf	efgtoa@ne& (0+255),f,b
  3237  0016DC  A0D8               	btfss	status,0,c
  3238  0016DE  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3242  0016E0  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3243  0016E2  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3244  0016E4                     l5131:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3248  0016E4  5174               	movf	efgtoa@m& (0+255),w,b
  3249  0016E6  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3250  0016E8  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3251  0016EA  0A80               	xorlw	128
  3252  0016EC  6E48               	movwf	??_efgtoa& (0+255),c
  3253  0016EE  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3254  0016F0  0A80               	xorlw	128
  3255  0016F2  5848               	subwfb	??_efgtoa& (0+255),w,c
  3256  0016F4  B0D8               	btfsc	status,0,c
  3257  0016F6  D008               	goto	u6890
  3258                           
  3259                           ; BSR set to: 0
  3260  0016F8  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3261  0016FA  D72D               	goto	l5083
  3262  0016FC  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3263  0016FE  E104               	bnz	u6890
  3264  001700  0E4B               	movlw	75
  3265  001702  5D92               	subwf	efgtoa@n& (0+255),w,b
  3266  001704  A0D8               	btfss	status,0,c
  3267  001706  D727               	goto	l5083
  3268  001708                     u6890:
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3272  001708  5172               	movf	efgtoa@pp& (0+255),w,b
  3273  00170A  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3274  00170C  B4D8               	btfsc	status,2,c
  3275                           
  3276                           ; BSR set to: 0
  3277  00170E  A855               	btfss	_flags,4,c
  3278  001710  D00A               	goto	l5143
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3282  001712  0E00               	movlw	low _dbuf
  3283  001714  2592               	addwf	efgtoa@n& (0+255),w,b
  3284  001716  6ED9               	movwf	fsr2l,c
  3285  001718  0E01               	movlw	high _dbuf
  3286  00171A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3287  00171C  6EDA               	movwf	fsr2h,c
  3288  00171E  0E2E               	movlw	46
  3289  001720  6EDF               	movwf	indf2,c
  3290                           
  3291                           ; BSR set to: 0
  3292  001722  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3293  001724  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3294  001726                     l5143:
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3298  001726  0E00               	movlw	low _dbuf
  3299  001728  2592               	addwf	efgtoa@n& (0+255),w,b
  3300  00172A  6ED9               	movwf	fsr2l,c
  3301  00172C  0E01               	movlw	high _dbuf
  3302  00172E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3303  001730  6EDA               	movwf	fsr2h,c
  3304  001732  0E00               	movlw	0
  3305  001734  6EDF               	movwf	indf2,c
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3309  001736  0E65               	movlw	101
  3310  001738  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3311  00173A  A4D8               	btfss	status,2,c
  3312  00173C  D47E               	goto	l4955
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3316  00173E  0E00               	movlw	0
  3317  001740  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3318  001742  0E4F               	movlw	79
  3319  001744  6F8A               	movwf	efgtoa@i& (0+255),b
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3323  001746  0E00               	movlw	low _dbuf
  3324  001748  258A               	addwf	efgtoa@i& (0+255),w,b
  3325  00174A  6ED9               	movwf	fsr2l,c
  3326  00174C  0E01               	movlw	high _dbuf
  3327  00174E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3328  001750  6EDA               	movwf	fsr2h,c
  3329  001752  0E00               	movlw	0
  3330  001754  6EDF               	movwf	indf2,c
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3334  001756  0E00               	movlw	0
  3335  001758  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3336  00175A  0E00               	movlw	0
  3337  00175C  6F7A               	movwf	efgtoa@sign& (0+255),b
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3341  00175E  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3342  001760  D008               	goto	l5159
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3346  001762  0E00               	movlw	0
  3347  001764  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3348  001766  0E01               	movlw	1
  3349  001768  6F7A               	movwf	efgtoa@sign& (0+255),b
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3353  00176A  6D90               	negf	efgtoa@e& (0+255),b
  3354  00176C  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3355  00176E  B0D8               	btfsc	status,0,c
  3356  001770  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3357  001772                     l5159:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3361  001772  0E00               	movlw	0
  3362  001774  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3363  001776  0E02               	movlw	2
  3364  001778  6F7C               	movwf	efgtoa@p& (0+255),b
  3365                           
  3366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3367  00177A  D02B               	goto	l5171
  3368  00177C                     l5161:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3372  00177C  078A               	decf	efgtoa@i& (0+255),f,b
  3373  00177E  A0D8               	btfss	status,0,c
  3374  001780  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3378  001782  0E00               	movlw	low _dbuf
  3379  001784  258A               	addwf	efgtoa@i& (0+255),w,b
  3380  001786  6ED9               	movwf	fsr2l,c
  3381  001788  0E01               	movlw	high _dbuf
  3382  00178A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3383  00178C  6EDA               	movwf	fsr2h,c
  3384  00178E  C090  F006         	movff	efgtoa@e,___awmod@dividend
  3385  001792  C091  F007         	movff	efgtoa@e+1,___awmod@dividend+1
  3386  001796  0E00               	movlw	0
  3387  001798  6E09               	movwf	___awmod@divisor+1,c
  3388  00179A  0E0A               	movlw	10
  3389  00179C  6E08               	movwf	___awmod@divisor,c
  3390  00179E  EC43  F018         	call	___awmod	;wreg free
  3391  0017A2  5006               	movf	?___awmod,w,c
  3392  0017A4  0F30               	addlw	48
  3393  0017A6  6EDF               	movwf	indf2,c
  3394                           
  3395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3396  0017A8  C090  F006         	movff	efgtoa@e,___awdiv@dividend
  3397  0017AC  C091  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  3398  0017B0  0E00               	movlw	0
  3399  0017B2  6E09               	movwf	___awdiv@divisor+1,c
  3400  0017B4  0E0A               	movlw	10
  3401  0017B6  6E08               	movwf	___awdiv@divisor,c
  3402  0017B8  EC01  F018         	call	___awdiv	;wreg free
  3403  0017BC  C006  F090         	movff	?___awdiv,efgtoa@e
  3404  0017C0  C007  F091         	movff	?___awdiv+1,efgtoa@e+1
  3405                           
  3406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3407  0017C4  0100               	movlb	0	; () banked
  3408  0017C6  077C               	decf	efgtoa@p& (0+255),f,b
  3409  0017C8  A0D8               	btfss	status,0,c
  3410  0017CA  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3414  0017CC  077F               	decf	efgtoa@w& (0+255),f,b
  3415  0017CE  A0D8               	btfss	status,0,c
  3416  0017D0  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3417  0017D2                     l5171:
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3421  0017D2  5190               	movf	efgtoa@e& (0+255),w,b
  3422  0017D4  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3423  0017D6  A4D8               	btfss	status,2,c
  3424  0017D8  D7D1               	goto	l5161
  3425                           
  3426                           ; BSR set to: 0
  3427  0017DA  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3428  0017DC  D005               	goto	u6950
  3429  0017DE  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3430  0017E0  E1CD               	bnz	l5161
  3431  0017E2  057C               	decf	efgtoa@p& (0+255),w,b
  3432  0017E4  B0D8               	btfsc	status,0,c
  3433  0017E6  D7CA               	goto	l5161
  3434  0017E8                     u6950:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  3438  0017E8  078A               	decf	efgtoa@i& (0+255),f,b
  3439  0017EA  A0D8               	btfss	status,0,c
  3440  0017EC  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  3444  0017EE  517A               	movf	efgtoa@sign& (0+255),w,b
  3445  0017F0  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3446  0017F2  A4D8               	btfss	status,2,c
  3447  0017F4  D004               	goto	l5181
  3448                           
  3449                           ; BSR set to: 0
  3450  0017F6  0E00               	movlw	0
  3451  0017F8  6F6B               	movwf	(_efgtoa$986+1)& (0+255),b
  3452  0017FA  0E2B               	movlw	43
  3453  0017FC  D003               	goto	L4
  3454  0017FE                     l5181:
  3455                           
  3456                           ; BSR set to: 0
  3457  0017FE  0E00               	movlw	0
  3458  001800  6F6B               	movwf	(_efgtoa$986+1)& (0+255),b
  3459  001802  0E2D               	movlw	45
  3460  001804                     L4:
  3461  001804  6F6A               	movwf	_efgtoa$986& (0+255),b
  3462                           
  3463                           ; BSR set to: 0
  3464  001806  0E00               	movlw	low _dbuf
  3465  001808  258A               	addwf	efgtoa@i& (0+255),w,b
  3466  00180A  6ED9               	movwf	fsr2l,c
  3467  00180C  0E01               	movlw	high _dbuf
  3468  00180E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3469  001810  6EDA               	movwf	fsr2h,c
  3470  001812  C06A  FFDF         	movff	_efgtoa$986,indf2
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  3474  001816  077F               	decf	efgtoa@w& (0+255),f,b
  3475  001818  A0D8               	btfss	status,0,c
  3476  00181A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3480  00181C  078A               	decf	efgtoa@i& (0+255),f,b
  3481  00181E  A0D8               	btfss	status,0,c
  3482  001820  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3483                           
  3484                           ; BSR set to: 0
  3485  001822  0EBF               	movlw	191
  3486  001824  6E48               	movwf	??_efgtoa& (0+255),c
  3487  001826  0EFF               	movlw	255
  3488  001828  6E49               	movwf	(??_efgtoa+1)& (0+255),c
  3489  00182A  5047               	movf	efgtoa@c,w,c
  3490  00182C  6E4A               	movwf	(??_efgtoa+2)& (0+255),c
  3491  00182E  6A4B               	clrf	(??_efgtoa+3)& (0+255),c
  3492  001830  5048               	movf	??_efgtoa,w,c
  3493  001832  264A               	addwf	??_efgtoa+2,f,c
  3494  001834  5049               	movf	??_efgtoa+1,w,c
  3495  001836  224B               	addwfc	??_efgtoa+3,f,c
  3496  001838  504B               	movf	??_efgtoa+3,w,c
  3497  00183A  E106               	bnz	u6970
  3498  00183C  0E1A               	movlw	26
  3499  00183E  5C4A               	subwf	??_efgtoa+2,w,c
  3500  001840  B0D8               	btfsc	status,0,c
  3501  001842  D002               	goto	u6970
  3502  001844  0E01               	movlw	1
  3503  001846  D001               	goto	u6980
  3504  001848                     u6970:
  3505  001848  0E00               	movlw	0
  3506  00184A                     u6980:
  3507  00184A  6F6E               	movwf	_efgtoa$988& (0+255),b
  3508  00184C  6B6F               	clrf	(_efgtoa$988+1)& (0+255),b
  3509                           
  3510                           ; BSR set to: 0
  3511  00184E  516E               	movf	_efgtoa$988& (0+255),w,b
  3512  001850  116F               	iorwf	(_efgtoa$988+1)& (0+255),w,b
  3513  001852  A4D8               	btfss	status,2,c
  3514  001854  D004               	goto	l5197
  3515                           
  3516                           ; BSR set to: 0
  3517  001856  0E00               	movlw	0
  3518  001858  6F6D               	movwf	(_efgtoa$987+1)& (0+255),b
  3519  00185A  0E65               	movlw	101
  3520  00185C  D003               	goto	L5
  3521  00185E                     l5197:
  3522                           
  3523                           ; BSR set to: 0
  3524  00185E  0E00               	movlw	0
  3525  001860  6F6D               	movwf	(_efgtoa$987+1)& (0+255),b
  3526  001862  0E45               	movlw	69
  3527  001864                     L5:
  3528  001864  6F6C               	movwf	_efgtoa$987& (0+255),b
  3529                           
  3530                           ; BSR set to: 0
  3531  001866  0E00               	movlw	low _dbuf
  3532  001868  258A               	addwf	efgtoa@i& (0+255),w,b
  3533  00186A  6ED9               	movwf	fsr2l,c
  3534  00186C  0E01               	movlw	high _dbuf
  3535  00186E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3536  001870  6EDA               	movwf	fsr2h,c
  3537  001872  C06C  FFDF         	movff	_efgtoa$987,indf2
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  3541  001876  077F               	decf	efgtoa@w& (0+255),f,b
  3542  001878  A0D8               	btfss	status,0,c
  3543  00187A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  3547  00187C  0E00               	movlw	low _dbuf
  3548  00187E  2592               	addwf	efgtoa@n& (0+255),w,b
  3549  001880  6E06               	movwf	strcpy@dest,c
  3550  001882  0E01               	movlw	high _dbuf
  3551  001884  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3552  001886  6E07               	movwf	strcpy@dest+1,c
  3553  001888  0E00               	movlw	low _dbuf
  3554  00188A  258A               	addwf	efgtoa@i& (0+255),w,b
  3555  00188C  6E08               	movwf	strcpy@src,c
  3556  00188E  0E01               	movlw	high _dbuf
  3557  001890  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3558  001892  6E09               	movwf	strcpy@src+1,c
  3559  001894  ECA8  F018         	call	_strcpy	;wreg free
  3560  001898  EF1D  F008         	goto	l4955
  3561  00189C                     __end_of_efgtoa:
  3562                           	opt callstack 0
  3563                           
  3564 ;; *************** function _tolower *****************
  3565 ;; Defined at:
  3566 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;  c               2   11[COMRAM] int 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  2   11[COMRAM] int 
  3573 ;; Registers used:
  3574 ;;		wreg, status,2, status,0
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3582 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3583 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3584 ;;Total ram usage:        8 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    2
  3587 ;; This function calls:
  3588 ;;		_isupper
  3589 ;; This function is called by:
  3590 ;;		_efgtoa
  3591 ;;		_vfpfcnvrt
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text6
  3596  003292                     __ptext6:
  3597                           	opt callstack 0
  3598  003292                     _tolower:
  3599                           	opt callstack 25
  3600                           
  3601                           ;incstack = 0
  3602  003292  0EBF               	movlw	191
  3603  003294  6E0E               	movwf	??_tolower& (0+255),c
  3604  003296  0EFF               	movlw	255
  3605  003298  6E0F               	movwf	(??_tolower+1)& (0+255),c
  3606  00329A  C00C  F010         	movff	tolower@c,??_tolower+2
  3607  00329E  C00D  F011         	movff	tolower@c+1,??_tolower+3
  3608  0032A2  500E               	movf	??_tolower,w,c
  3609  0032A4  2610               	addwf	??_tolower+2,f,c
  3610  0032A6  500F               	movf	??_tolower+1,w,c
  3611  0032A8  2211               	addwfc	??_tolower+3,f,c
  3612  0032AA  5011               	movf	??_tolower+3,w,c
  3613  0032AC  E106               	bnz	u5610
  3614  0032AE  0E1A               	movlw	26
  3615  0032B0  5C10               	subwf	??_tolower+2,w,c
  3616  0032B2  B0D8               	btfsc	status,0,c
  3617  0032B4  D002               	goto	u5610
  3618  0032B6  0E01               	movlw	1
  3619  0032B8  D001               	goto	u5620
  3620  0032BA                     u5610:
  3621  0032BA  0E00               	movlw	0
  3622  0032BC                     u5620:
  3623  0032BC  6E12               	movwf	_tolower$1594,c
  3624  0032BE  6A13               	clrf	_tolower$1594+1,c
  3625  0032C0  5012               	movf	_tolower$1594,w,c
  3626  0032C2  1013               	iorwf	_tolower$1594+1,w,c
  3627  0032C4  B4D8               	btfsc	status,2,c
  3628  0032C6  D006               	goto	l1143
  3629  0032C8  0E20               	movlw	32
  3630  0032CA  100C               	iorwf	tolower@c,w,c
  3631  0032CC  6E0C               	movwf	?_tolower,c
  3632  0032CE  500D               	movf	tolower@c+1,w,c
  3633  0032D0  6E0D               	movwf	?_tolower+1,c
  3634  0032D2  0012               	return	
  3635  0032D4                     l1143:
  3636  0032D4  C00C  F00C         	movff	tolower@c,?_tolower
  3637  0032D8  C00D  F00D         	movff	tolower@c+1,?_tolower+1
  3638  0032DC  0012               	return		;funcret
  3639  0032DE                     __end_of_tolower:
  3640                           	opt callstack 0
  3641                           
  3642 ;; *************** function _isupper *****************
  3643 ;; Defined at:
  3644 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  c               2    5[COMRAM] int 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  2    5[COMRAM] int 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3660 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3661 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;Total ram usage:        6 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    1
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_efgtoa
  3669 ;;		_vfpfcnvrt
  3670 ;;		_tolower
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text7
  3675  0033DA                     __ptext7:
  3676                           	opt callstack 0
  3677  0033DA                     _isupper:
  3678                           	opt callstack 25
  3679                           
  3680                           ;incstack = 0
  3681  0033DA  0EBF               	movlw	191
  3682  0033DC  6E08               	movwf	??_isupper& (0+255),c
  3683  0033DE  0EFF               	movlw	255
  3684  0033E0  6E09               	movwf	(??_isupper+1)& (0+255),c
  3685  0033E2  C006  F00A         	movff	isupper@c,??_isupper+2
  3686  0033E6  C007  F00B         	movff	isupper@c+1,??_isupper+3
  3687  0033EA  5008               	movf	??_isupper,w,c
  3688  0033EC  260A               	addwf	??_isupper+2,f,c
  3689  0033EE  5009               	movf	??_isupper+1,w,c
  3690  0033F0  220B               	addwfc	??_isupper+3,f,c
  3691  0033F2  500B               	movf	??_isupper+3,w,c
  3692  0033F4  E106               	bnz	u5070
  3693  0033F6  0E1A               	movlw	26
  3694  0033F8  5C0A               	subwf	??_isupper+2,w,c
  3695  0033FA  B0D8               	btfsc	status,0,c
  3696  0033FC  D002               	goto	u5070
  3697  0033FE  0E01               	movlw	1
  3698  003400  D001               	goto	u5080
  3699  003402                     u5070:
  3700  003402  0E00               	movlw	0
  3701  003404                     u5080:
  3702  003404  6E06               	movwf	?_isupper,c
  3703  003406  6A07               	clrf	?_isupper+1,c
  3704  003408  0012               	return		;funcret
  3705  00340A                     __end_of_isupper:
  3706                           	opt callstack 0
  3707                           
  3708 ;; *************** function _strcpy *****************
  3709 ;; Defined at:
  3710 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  dest            2    5[COMRAM] PTR unsigned char 
  3713 ;;		 -> dbuf(80), 
  3714 ;;  src             2    7[COMRAM] PTR const unsigned char 
  3715 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3716 ;;		 -> dbuf(80), 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  d               2   13[COMRAM] PTR unsigned char 
  3719 ;;		 -> dbuf(80), 
  3720 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3721 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3722 ;;		 -> dbuf(80), 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  2    5[COMRAM] PTR unsigned char 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3732 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3734 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3735 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3736 ;;Total ram usage:       10 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    1
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_efgtoa
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text8
  3747  003150                     __ptext8:
  3748                           	opt callstack 0
  3749  003150                     _strcpy:
  3750                           	opt callstack 25
  3751                           
  3752                           ;incstack = 0
  3753  003150  C008  F00C         	movff	strcpy@src,strcpy@s
  3754  003154  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
  3755  003158  C006  F00E         	movff	strcpy@dest,strcpy@d
  3756  00315C  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
  3757  003160                     l4405:
  3758  003160  500C               	movf	strcpy@s,w,c
  3759  003162  6E0A               	movwf	??_strcpy& (0+255),c
  3760  003164  500D               	movf	strcpy@s+1,w,c
  3761  003166  6E0B               	movwf	(??_strcpy+1)& (0+255),c
  3762  003168  4A0C               	infsnz	strcpy@s,f,c
  3763  00316A  2A0D               	incf	strcpy@s+1,f,c
  3764  00316C  C00A  FFF6         	movff	??_strcpy,tblptrl
  3765  003170  C00B  FFF7         	movff	??_strcpy+1,tblptrh
  3766  003174  0E00               	movlw	low (__smallconst shr (0+16))
  3767  003176  6EF8               	movwf	tblptru,c
  3768  003178  C00E  FFD9         	movff	strcpy@d,fsr2l
  3769  00317C  C00F  FFDA         	movff	strcpy@d+1,fsr2h
  3770  003180  4A0E               	infsnz	strcpy@d,f,c
  3771  003182  2A0F               	incf	strcpy@d+1,f,c
  3772  003184  0E0E               	movlw	(high __ramtop+-1)
  3773  003186  64F7               	cpfsgt	tblptrh,c
  3774  003188  D003               	bra	u5597
  3775  00318A  0008               	tblrd		*
  3776  00318C  50F5               	movf	tablat,w,c
  3777  00318E  D005               	bra	u5590
  3778  003190                     u5597:
  3779  003190  CFF6 FFE9          	movff	tblptrl,fsr0l
  3780  003194  CFF7 FFEA          	movff	tblptrh,fsr0h
  3781  003198  50EF               	movf	indf0,w,c
  3782  00319A                     u5590:
  3783  00319A  6EDF               	movwf	indf2,c
  3784  00319C  50DF               	movf	indf2,w,c
  3785  00319E  B4D8               	btfsc	status,2,c
  3786  0031A0  0012               	return	
  3787  0031A2  D7DE               	goto	l4405
  3788  0031A4                     __end_of_strcpy:
  3789                           	opt callstack 0
  3790                           
  3791 ;; *************** function _pad *****************
  3792 ;; Defined at:
  3793 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  3796 ;;		 -> sprintf@f(6), 
  3797 ;;  buf             2   23[COMRAM] PTR unsigned char 
  3798 ;;		 -> dbuf(80), 
  3799 ;;  p               2   25[COMRAM] int 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  w               2   30[COMRAM] int 
  3802 ;;  i               2   28[COMRAM] int 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  2   21[COMRAM] int 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3812 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3815 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3816 ;;Total ram usage:       11 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    4
  3819 ;; This function calls:
  3820 ;;		_fputc
  3821 ;;		_fputs
  3822 ;;		_strlen
  3823 ;; This function is called by:
  3824 ;;		_efgtoa
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text9
  3829  002EE2                     __ptext9:
  3830                           	opt callstack 0
  3831  002EE2                     _pad:
  3832                           	opt callstack 22
  3833                           
  3834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3835                           
  3836                           ;incstack = 0
  3837  002EE2  A055               	btfss	_flags,0,c
  3838  002EE4  D00A               	goto	l4363
  3839                           
  3840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3841  002EE6  C018  F00F         	movff	pad@buf,fputs@s
  3842  002EEA  C019  F010         	movff	pad@buf+1,fputs@s+1
  3843  002EEE  C016  F011         	movff	pad@fp,fputs@fp
  3844  002EF2  C017  F012         	movff	pad@fp+1,fputs@fp+1
  3845  002EF6  ECD1  F019         	call	_fputs	;wreg free
  3846  002EFA                     l4363:
  3847                           
  3848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3849  002EFA  BE1B               	btfsc	pad@p+1,7,c
  3850  002EFC  D005               	goto	l4367
  3851  002EFE  C01A  F01F         	movff	pad@p,pad@w
  3852  002F02  C01B  F020         	movff	pad@p+1,pad@w+1
  3853  002F06  D004               	goto	l201
  3854  002F08                     l4367:
  3855  002F08  0E00               	movlw	0
  3856  002F0A  6E20               	movwf	pad@w+1,c
  3857  002F0C  0E00               	movlw	0
  3858  002F0E  6E1F               	movwf	pad@w,c
  3859  002F10                     l201:
  3860                           
  3861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3862  002F10  0E00               	movlw	0
  3863  002F12  6E1E               	movwf	pad@i+1,c
  3864  002F14  0E00               	movlw	0
  3865  002F16  6E1D               	movwf	pad@i,c
  3866                           
  3867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3868  002F18  D00C               	goto	l4373
  3869  002F1A                     l4369:
  3870                           
  3871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3872  002F1A  0E00               	movlw	0
  3873  002F1C  6E07               	movwf	fputc@c+1,c
  3874  002F1E  0E20               	movlw	32
  3875  002F20  6E06               	movwf	fputc@c,c
  3876  002F22  C016  F008         	movff	pad@fp,fputc@fp
  3877  002F26  C017  F009         	movff	pad@fp+1,fputc@fp+1
  3878  002F2A  EC21  F017         	call	_fputc	;wreg free
  3879                           
  3880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3881  002F2E  4A1D               	infsnz	pad@i,f,c
  3882  002F30  2A1E               	incf	pad@i+1,f,c
  3883  002F32                     l4373:
  3884                           
  3885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3886  002F32  501F               	movf	pad@w,w,c
  3887  002F34  5C1D               	subwf	pad@i,w,c
  3888  002F36  501E               	movf	pad@i+1,w,c
  3889  002F38  0A80               	xorlw	128
  3890  002F3A  6E1C               	movwf	??_pad& (0+255),c
  3891  002F3C  5020               	movf	pad@w+1,w,c
  3892  002F3E  0A80               	xorlw	128
  3893  002F40  581C               	subwfb	??_pad& (0+255),w,c
  3894  002F42  A0D8               	btfss	status,0,c
  3895  002F44  D7EA               	goto	l4369
  3896                           
  3897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3898  002F46  B055               	btfsc	_flags,0,c
  3899  002F48  D00A               	goto	l4377
  3900                           
  3901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3902  002F4A  C018  F00F         	movff	pad@buf,fputs@s
  3903  002F4E  C019  F010         	movff	pad@buf+1,fputs@s+1
  3904  002F52  C016  F011         	movff	pad@fp,fputs@fp
  3905  002F56  C017  F012         	movff	pad@fp+1,fputs@fp+1
  3906  002F5A  ECD1  F019         	call	_fputs	;wreg free
  3907  002F5E                     l4377:
  3908                           
  3909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3910  002F5E  C018  F006         	movff	pad@buf,strlen@s
  3911  002F62  C019  F007         	movff	pad@buf+1,strlen@s+1
  3912  002F66  EC34  F01A         	call	_strlen	;wreg free
  3913  002F6A  501F               	movf	pad@w,w,c
  3914  002F6C  2406               	addwf	?_strlen,w,c
  3915  002F6E  6E16               	movwf	?_pad,c
  3916  002F70  5020               	movf	pad@w+1,w,c
  3917  002F72  2007               	addwfc	?_strlen+1,w,c
  3918  002F74  6E17               	movwf	?_pad+1,c
  3919  002F76  0012               	return		;funcret
  3920  002F78                     __end_of_pad:
  3921                           	opt callstack 0
  3922                           
  3923 ;; *************** function _strlen *****************
  3924 ;; Defined at:
  3925 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  s               2    5[COMRAM] PTR const unsigned char 
  3928 ;;		 -> dbuf(80), 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  a               2    7[COMRAM] PTR const unsigned char 
  3931 ;;		 -> dbuf(80), 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  2    5[COMRAM] unsigned int 
  3934 ;; Registers used:
  3935 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3944 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3945 ;;Total ram usage:        4 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    1
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_pad
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text10
  3956  003468                     __ptext10:
  3957                           	opt callstack 0
  3958  003468                     _strlen:
  3959                           	opt callstack 24
  3960                           
  3961                           ;incstack = 0
  3962  003468  C006  F008         	movff	strlen@s,strlen@a
  3963  00346C  C007  F009         	movff	strlen@s+1,strlen@a+1
  3964  003470  D002               	goto	l4147
  3965  003472                     l4145:
  3966  003472  4A06               	infsnz	strlen@s,f,c
  3967  003474  2A07               	incf	strlen@s+1,f,c
  3968  003476                     l4147:
  3969  003476  C006  FFD9         	movff	strlen@s,fsr2l
  3970  00347A  C007  FFDA         	movff	strlen@s+1,fsr2h
  3971  00347E  50DF               	movf	indf2,w,c
  3972  003480  A4D8               	btfss	status,2,c
  3973  003482  D7F7               	goto	l4145
  3974  003484  5008               	movf	strlen@a,w,c
  3975  003486  5C06               	subwf	strlen@s,w,c
  3976  003488  6E06               	movwf	?_strlen,c
  3977  00348A  5009               	movf	strlen@a+1,w,c
  3978  00348C  5807               	subwfb	strlen@s+1,w,c
  3979  00348E  6E07               	movwf	?_strlen+1,c
  3980  003490  0012               	return		;funcret
  3981  003492                     __end_of_strlen:
  3982                           	opt callstack 0
  3983                           
  3984 ;; *************** function _fputs *****************
  3985 ;; Defined at:
  3986 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  s               2   14[COMRAM] PTR const unsigned char 
  3989 ;;		 -> dbuf(80), 
  3990 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3991 ;;		 -> sprintf@f(6), 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  i               2   19[COMRAM] int 
  3994 ;;  c               1   18[COMRAM] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  2   14[COMRAM] int 
  3997 ;; Registers used:
  3998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4005 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4007 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4008 ;;Total ram usage:        7 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    3
  4011 ;; This function calls:
  4012 ;;		_fputc
  4013 ;; This function is called by:
  4014 ;;		_pad
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text11
  4019  0033A2                     __ptext11:
  4020                           	opt callstack 0
  4021  0033A2                     _fputs:
  4022                           	opt callstack 22
  4023                           
  4024                           ;incstack = 0
  4025  0033A2  0E00               	movlw	0
  4026  0033A4  6E15               	movwf	fputs@i+1,c
  4027  0033A6  0E00               	movlw	0
  4028  0033A8  6E14               	movwf	fputs@i,c
  4029  0033AA  D00B               	goto	l4141
  4030  0033AC                     l4137:
  4031  0033AC  C013  F006         	movff	fputs@c,fputc@c
  4032  0033B0  6A07               	clrf	fputc@c+1,c
  4033  0033B2  C011  F008         	movff	fputs@fp,fputc@fp
  4034  0033B6  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  4035  0033BA  EC21  F017         	call	_fputc	;wreg free
  4036  0033BE  4A14               	infsnz	fputs@i,f,c
  4037  0033C0  2A15               	incf	fputs@i+1,f,c
  4038  0033C2                     l4141:
  4039  0033C2  5014               	movf	fputs@i,w,c
  4040  0033C4  240F               	addwf	fputs@s,w,c
  4041  0033C6  6ED9               	movwf	fsr2l,c
  4042  0033C8  5015               	movf	fputs@i+1,w,c
  4043  0033CA  2010               	addwfc	fputs@s+1,w,c
  4044  0033CC  6EDA               	movwf	fsr2h,c
  4045  0033CE  50DF               	movf	indf2,w,c
  4046  0033D0  6E13               	movwf	fputs@c,c
  4047  0033D2  5013               	movf	fputs@c,w,c
  4048  0033D4  B4D8               	btfsc	status,2,c
  4049  0033D6  0012               	return	
  4050  0033D8  D7E9               	goto	l4137
  4051  0033DA                     __end_of_fputs:
  4052                           	opt callstack 0
  4053                           
  4054 ;; *************** function _fputc *****************
  4055 ;; Defined at:
  4056 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  c               2    5[COMRAM] int 
  4059 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  4060 ;;		 -> sprintf@f(6), 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  2    5[COMRAM] int 
  4065 ;; Registers used:
  4066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4072 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4074 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4075 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4076 ;;Total ram usage:        9 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    2
  4079 ;; This function calls:
  4080 ;;		_putch
  4081 ;; This function is called by:
  4082 ;;		_pad
  4083 ;;		_vfpfcnvrt
  4084 ;;		_fputs
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text12
  4089  002E42                     __ptext12:
  4090                           	opt callstack 0
  4091  002E42                     _fputc:
  4092                           	opt callstack 25
  4093                           
  4094                           ;incstack = 0
  4095  002E42  5008               	movf	fputc@fp,w,c
  4096  002E44  1009               	iorwf	fputc@fp+1,w,c
  4097  002E46  B4D8               	btfsc	status,2,c
  4098  002E48  D004               	goto	u5020
  4099  002E4A  5008               	movf	fputc@fp,w,c
  4100  002E4C  1009               	iorwf	fputc@fp+1,w,c
  4101  002E4E  A4D8               	btfss	status,2,c
  4102  002E50  D004               	goto	l4127
  4103  002E52                     u5020:
  4104  002E52  5006               	movf	fputc@c,w,c
  4105  002E54  EC8D  F01A         	call	_putch
  4106  002E58  0012               	return	
  4107  002E5A                     l4127:
  4108  002E5A  EE20 F004          	lfsr	2,4
  4109  002E5E  5008               	movf	fputc@fp,w,c
  4110  002E60  26D9               	addwf	fsr2l,f,c
  4111  002E62  5009               	movf	fputc@fp+1,w,c
  4112  002E64  22DA               	addwfc	fsr2h,f,c
  4113  002E66  50DE               	movf	postinc2,w,c
  4114  002E68  10DE               	iorwf	postinc2,w,c
  4115  002E6A  B4D8               	btfsc	status,2,c
  4116  002E6C  D016               	goto	u5040
  4117  002E6E  EE20 F004          	lfsr	2,4
  4118  002E72  5008               	movf	fputc@fp,w,c
  4119  002E74  26D9               	addwf	fsr2l,f,c
  4120  002E76  5009               	movf	fputc@fp+1,w,c
  4121  002E78  22DA               	addwfc	fsr2h,f,c
  4122  002E7A  EE10 F002          	lfsr	1,2
  4123  002E7E  5008               	movf	fputc@fp,w,c
  4124  002E80  26E1               	addwf	fsr1l,f,c
  4125  002E82  5009               	movf	fputc@fp+1,w,c
  4126  002E84  22E2               	addwfc	fsr1h,f,c
  4127  002E86  50DE               	movf	postinc2,w,c
  4128  002E88  5CE6               	subwf	postinc1,w,c
  4129  002E8A  50E6               	movf	postinc1,w,c
  4130  002E8C  0A80               	xorlw	128
  4131  002E8E  6E0E               	movwf	(??_fputc+4)& (0+255),c
  4132  002E90  50DE               	movf	postinc2,w,c
  4133  002E92  0A80               	xorlw	128
  4134  002E94  580E               	subwfb	(??_fputc+4)& (0+255),w,c
  4135  002E96  B0D8               	btfsc	status,0,c
  4136  002E98  0012               	return	
  4137  002E9A                     u5040:
  4138  002E9A  EE20 F002          	lfsr	2,2
  4139  002E9E  5008               	movf	fputc@fp,w,c
  4140  002EA0  26D9               	addwf	fsr2l,f,c
  4141  002EA2  5009               	movf	fputc@fp+1,w,c
  4142  002EA4  22DA               	addwfc	fsr2h,f,c
  4143  002EA6  CFDE F00A          	movff	postinc2,??_fputc
  4144  002EAA  CFDD F00B          	movff	postdec2,??_fputc+1
  4145  002EAE  C008  FFD9         	movff	fputc@fp,fsr2l
  4146  002EB2  C009  FFDA         	movff	fputc@fp+1,fsr2h
  4147  002EB6  CFDE F00C          	movff	postinc2,??_fputc+2
  4148  002EBA  CFDD F00D          	movff	postdec2,??_fputc+3
  4149  002EBE  500A               	movf	??_fputc,w,c
  4150  002EC0  240C               	addwf	??_fputc+2,w,c
  4151  002EC2  6ED9               	movwf	fsr2l,c
  4152  002EC4  500B               	movf	??_fputc+1,w,c
  4153  002EC6  200D               	addwfc	??_fputc+3,w,c
  4154  002EC8  6EDA               	movwf	fsr2h,c
  4155  002ECA  C006  FFDF         	movff	fputc@c,indf2
  4156  002ECE  EE20 F002          	lfsr	2,2
  4157  002ED2  5008               	movf	fputc@fp,w,c
  4158  002ED4  26D9               	addwf	fsr2l,f,c
  4159  002ED6  5009               	movf	fputc@fp+1,w,c
  4160  002ED8  22DA               	addwfc	fsr2h,f,c
  4161  002EDA  2ADE               	incf	postinc2,f,c
  4162  002EDC  0E00               	movlw	0
  4163  002EDE  22DD               	addwfc	postdec2,f,c
  4164  002EE0  0012               	return		;funcret
  4165  002EE2                     __end_of_fputc:
  4166                           	opt callstack 0
  4167                           
  4168 ;; *************** function _putch *****************
  4169 ;; Defined at:
  4170 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  c               1    wreg     unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  c               1    0[COMRAM] unsigned char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4188 ;;Total ram usage:        0 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    1
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_fputc
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text13
  4199  00351A                     __ptext13:
  4200                           	opt callstack 0
  4201  00351A                     _putch:
  4202                           	opt callstack 25
  4203                           
  4204                           ;incstack = 0
  4205  00351A  0012               	return		;funcret
  4206  00351C                     __end_of_putch:
  4207                           	opt callstack 0
  4208                           
  4209 ;; *************** function _floorf *****************
  4210 ;; Defined at:
  4211 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  x               4   44[COMRAM] float 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  u               4   60[COMRAM] struct .
  4216 ;;  m               4   54[COMRAM] unsigned long 
  4217 ;;  e               2   58[COMRAM] int 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  4   44[COMRAM] float 
  4220 ;; Registers used:
  4221 ;;		wreg, status,2, status,0
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4228 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4229 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4230 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4231 ;;Total ram usage:       20 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:    1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_efgtoa
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text14
  4242  00263C                     __ptext14:
  4243                           	opt callstack 0
  4244  00263C                     _floorf:
  4245                           	opt callstack 25
  4246                           
  4247                           ;incstack = 0
  4248  00263C  C0CE  F03D         	movff	floorf@F524,floorf@u
  4249  002640  C0CF  F03E         	movff	floorf@F524+1,floorf@u+1
  4250  002644  C0D0  F03F         	movff	floorf@F524+2,floorf@u+2
  4251  002648  C0D1  F040         	movff	floorf@F524+3,floorf@u+3
  4252  00264C  C02D  F03D         	movff	floorf@x,floorf@u
  4253  002650  C02E  F03E         	movff	floorf@x+1,floorf@u+1
  4254  002654  C02F  F03F         	movff	floorf@x+2,floorf@u+2
  4255  002658  C030  F040         	movff	floorf@x+3,floorf@u+3
  4256  00265C  0E81               	movlw	129
  4257  00265E  6E31               	movwf	??_floorf& (0+255),c
  4258  002660  0EFF               	movlw	255
  4259  002662  6E32               	movwf	(??_floorf+1)& (0+255),c
  4260  002664  C03D  F033         	movff	floorf@u,??_floorf+2
  4261  002668  C03E  F034         	movff	floorf@u+1,??_floorf+3
  4262  00266C  C03F  F035         	movff	floorf@u+2,??_floorf+4
  4263  002670  C040  F036         	movff	floorf@u+3,??_floorf+5
  4264  002674  0E18               	movlw	24
  4265  002676  D005               	goto	u5640
  4266  002678                     u5645:
  4267  002678  90D8               	bcf	status,0,c
  4268  00267A  3236               	rrcf	??_floorf+5,f,c
  4269  00267C  3235               	rrcf	??_floorf+4,f,c
  4270  00267E  3234               	rrcf	??_floorf+3,f,c
  4271  002680  3233               	rrcf	??_floorf+2,f,c
  4272  002682                     u5640:
  4273  002682  2EE8               	decfsz	wreg,f,c
  4274  002684  D7F9               	goto	u5645
  4275  002686  5033               	movf	??_floorf+2,w,c
  4276  002688  2431               	addwf	??_floorf,w,c
  4277  00268A  6E3B               	movwf	floorf@e,c
  4278  00268C  0E00               	movlw	0
  4279  00268E  2032               	addwfc	??_floorf+1,w,c
  4280  002690  6E3C               	movwf	floorf@e+1,c
  4281  002692  BE3C               	btfsc	floorf@e+1,7,c
  4282  002694  D00F               	goto	l4423
  4283  002696  503C               	movf	floorf@e+1,w,c
  4284  002698  E104               	bnz	u5650
  4285  00269A  0E17               	movlw	23
  4286  00269C  5C3B               	subwf	floorf@e,w,c
  4287  00269E  A0D8               	btfss	status,0,c
  4288  0026A0  D009               	goto	l4423
  4289  0026A2                     u5650:
  4290  0026A2  C02D  F02D         	movff	floorf@x,?_floorf
  4291  0026A6  C02E  F02E         	movff	floorf@x+1,?_floorf+1
  4292  0026AA  C02F  F02F         	movff	floorf@x+2,?_floorf+2
  4293  0026AE  C030  F030         	movff	floorf@x+3,?_floorf+3
  4294  0026B2  0012               	return	
  4295  0026B4                     l4423:
  4296  0026B4  BE3C               	btfsc	floorf@e+1,7,c
  4297  0026B6  D05E               	goto	l4433
  4298  0026B8  C03B  F031         	movff	floorf@e,??_floorf
  4299  0026BC  0EFF               	movlw	255
  4300  0026BE  6E32               	movwf	(??_floorf+1)& (0+255),c
  4301  0026C0  0EFF               	movlw	255
  4302  0026C2  6E33               	movwf	(??_floorf+2)& (0+255),c
  4303  0026C4  0E7F               	movlw	127
  4304  0026C6  6E34               	movwf	(??_floorf+3)& (0+255),c
  4305  0026C8  0E00               	movlw	0
  4306  0026CA  6E35               	movwf	(??_floorf+4)& (0+255),c
  4307  0026CC                     u5675:
  4308  0026CC  6631               	tstfsz	??_floorf,c
  4309  0026CE  D001               	goto	u5676
  4310  0026D0  D007               	goto	u5677
  4311  0026D2                     u5676:
  4312  0026D2  3435               	rlcf	??_floorf+4,w,c
  4313  0026D4  3235               	rrcf	??_floorf+4,f,c
  4314  0026D6  3234               	rrcf	??_floorf+3,f,c
  4315  0026D8  3233               	rrcf	??_floorf+2,f,c
  4316  0026DA  3232               	rrcf	??_floorf+1,f,c
  4317  0026DC  2E31               	decfsz	??_floorf,f,c
  4318  0026DE  D7F6               	goto	u5675
  4319  0026E0                     u5677:
  4320  0026E0  C032  F037         	movff	??_floorf+1,floorf@m
  4321  0026E4  C033  F038         	movff	??_floorf+2,floorf@m+1
  4322  0026E8  C034  F039         	movff	??_floorf+3,floorf@m+2
  4323  0026EC  C035  F03A         	movff	??_floorf+4,floorf@m+3
  4324  0026F0  5037               	movf	floorf@m,w,c
  4325  0026F2  143D               	andwf	floorf@u,w,c
  4326  0026F4  6E31               	movwf	??_floorf& (0+255),c
  4327  0026F6  5038               	movf	floorf@m+1,w,c
  4328  0026F8  143E               	andwf	floorf@u+1,w,c
  4329  0026FA  6E32               	movwf	(??_floorf+1)& (0+255),c
  4330  0026FC  5039               	movf	floorf@m+2,w,c
  4331  0026FE  143F               	andwf	floorf@u+2,w,c
  4332  002700  6E33               	movwf	(??_floorf+2)& (0+255),c
  4333  002702  503A               	movf	floorf@m+3,w,c
  4334  002704  1440               	andwf	floorf@u+3,w,c
  4335  002706  6E34               	movwf	(??_floorf+3)& (0+255),c
  4336  002708  5031               	movf	??_floorf,w,c
  4337  00270A  1032               	iorwf	??_floorf+1,w,c
  4338  00270C  1033               	iorwf	??_floorf+2,w,c
  4339  00270E  1034               	iorwf	??_floorf+3,w,c
  4340  002710  B4D8               	btfsc	status,2,c
  4341  002712  D7C7               	goto	u5650
  4342  002714  C03D  F031         	movff	floorf@u,??_floorf
  4343  002718  C03E  F032         	movff	floorf@u+1,??_floorf+1
  4344  00271C  C03F  F033         	movff	floorf@u+2,??_floorf+2
  4345  002720  C040  F034         	movff	floorf@u+3,??_floorf+3
  4346  002724  0E20               	movlw	32
  4347  002726  D005               	goto	u5690
  4348  002728                     u5695:
  4349  002728  90D8               	bcf	status,0,c
  4350  00272A  3234               	rrcf	??_floorf+3,f,c
  4351  00272C  3233               	rrcf	??_floorf+2,f,c
  4352  00272E  3232               	rrcf	??_floorf+1,f,c
  4353  002730  3231               	rrcf	??_floorf,f,c
  4354  002732                     u5690:
  4355  002732  2EE8               	decfsz	wreg,f,c
  4356  002734  D7F9               	goto	u5695
  4357  002736  5031               	movf	??_floorf,w,c
  4358  002738  1032               	iorwf	??_floorf+1,w,c
  4359  00273A  1033               	iorwf	??_floorf+2,w,c
  4360  00273C  1034               	iorwf	??_floorf+3,w,c
  4361  00273E  B4D8               	btfsc	status,2,c
  4362  002740  D008               	goto	l1063
  4363  002742  5037               	movf	floorf@m,w,c
  4364  002744  263D               	addwf	floorf@u,f,c
  4365  002746  5038               	movf	floorf@m+1,w,c
  4366  002748  223E               	addwfc	floorf@u+1,f,c
  4367  00274A  5039               	movf	floorf@m+2,w,c
  4368  00274C  223F               	addwfc	floorf@u+2,f,c
  4369  00274E  503A               	movf	floorf@m+3,w,c
  4370  002750  2240               	addwfc	floorf@u+3,f,c
  4371  002752                     l1063:
  4372  002752  1C37               	comf	floorf@m,w,c
  4373  002754  6E31               	movwf	??_floorf& (0+255),c
  4374  002756  1C38               	comf	floorf@m+1,w,c
  4375  002758  6E32               	movwf	(??_floorf+1)& (0+255),c
  4376  00275A  1C39               	comf	floorf@m+2,w,c
  4377  00275C  6E33               	movwf	(??_floorf+2)& (0+255),c
  4378  00275E  1C3A               	comf	floorf@m+3,w,c
  4379  002760  6E34               	movwf	(??_floorf+3)& (0+255),c
  4380  002762  5031               	movf	??_floorf,w,c
  4381  002764  163D               	andwf	floorf@u,f,c
  4382  002766  5032               	movf	??_floorf+1,w,c
  4383  002768  163E               	andwf	floorf@u+1,f,c
  4384  00276A  5033               	movf	??_floorf+2,w,c
  4385  00276C  163F               	andwf	floorf@u+2,f,c
  4386  00276E  5034               	movf	??_floorf+3,w,c
  4387  002770  1640               	andwf	floorf@u+3,f,c
  4388  002772  D036               	goto	l4441
  4389  002774                     l4433:
  4390  002774  C03D  F031         	movff	floorf@u,??_floorf
  4391  002778  C03E  F032         	movff	floorf@u+1,??_floorf+1
  4392  00277C  C03F  F033         	movff	floorf@u+2,??_floorf+2
  4393  002780  C040  F034         	movff	floorf@u+3,??_floorf+3
  4394  002784  0E20               	movlw	32
  4395  002786  D005               	goto	u5710
  4396  002788                     u5715:
  4397  002788  90D8               	bcf	status,0,c
  4398  00278A  3234               	rrcf	??_floorf+3,f,c
  4399  00278C  3233               	rrcf	??_floorf+2,f,c
  4400  00278E  3232               	rrcf	??_floorf+1,f,c
  4401  002790  3231               	rrcf	??_floorf,f,c
  4402  002792                     u5710:
  4403  002792  2EE8               	decfsz	wreg,f,c
  4404  002794  D7F9               	goto	u5715
  4405  002796  5031               	movf	??_floorf,w,c
  4406  002798  1032               	iorwf	??_floorf+1,w,c
  4407  00279A  1033               	iorwf	??_floorf+2,w,c
  4408  00279C  1034               	iorwf	??_floorf+3,w,c
  4409  00279E  A4D8               	btfss	status,2,c
  4410  0027A0  D008               	goto	l4437
  4411  0027A2  0E00               	movlw	0
  4412  0027A4  6E3D               	movwf	floorf@u,c
  4413  0027A6  0E00               	movlw	0
  4414  0027A8  6E3E               	movwf	floorf@u+1,c
  4415  0027AA  0E00               	movlw	0
  4416  0027AC  6E3F               	movwf	floorf@u+2,c
  4417  0027AE  0E00               	movlw	0
  4418  0027B0  D016               	goto	L6
  4419  0027B2                     l4437:
  4420  0027B2  90D8               	bcf	status,0,c
  4421  0027B4  343D               	rlcf	floorf@u,w,c
  4422  0027B6  6E31               	movwf	??_floorf& (0+255),c
  4423  0027B8  343E               	rlcf	floorf@u+1,w,c
  4424  0027BA  6E32               	movwf	(??_floorf+1)& (0+255),c
  4425  0027BC  343F               	rlcf	floorf@u+2,w,c
  4426  0027BE  6E33               	movwf	(??_floorf+2)& (0+255),c
  4427  0027C0  3440               	rlcf	floorf@u+3,w,c
  4428  0027C2  6E34               	movwf	(??_floorf+3)& (0+255),c
  4429  0027C4  5031               	movf	??_floorf,w,c
  4430  0027C6  1032               	iorwf	??_floorf+1,w,c
  4431  0027C8  1033               	iorwf	??_floorf+2,w,c
  4432  0027CA  1034               	iorwf	??_floorf+3,w,c
  4433  0027CC  B4D8               	btfsc	status,2,c
  4434  0027CE  D008               	goto	l4441
  4435  0027D0  0E00               	movlw	0
  4436  0027D2  6E3D               	movwf	floorf@u,c
  4437  0027D4  0E00               	movlw	0
  4438  0027D6  6E3E               	movwf	floorf@u+1,c
  4439  0027D8  0E80               	movlw	128
  4440  0027DA  6E3F               	movwf	floorf@u+2,c
  4441  0027DC  0EBF               	movlw	191
  4442  0027DE                     L6:
  4443  0027DE  6E40               	movwf	floorf@u+3,c
  4444  0027E0                     l4441:
  4445  0027E0  C03D  F02D         	movff	floorf@u,?_floorf
  4446  0027E4  C03E  F02E         	movff	floorf@u+1,?_floorf+1
  4447  0027E8  C03F  F02F         	movff	floorf@u+2,?_floorf+2
  4448  0027EC  C040  F030         	movff	floorf@u+3,?_floorf+3
  4449  0027F0  0012               	return		;funcret
  4450  0027F2                     __end_of_floorf:
  4451                           	opt callstack 0
  4452                           
  4453 ;; *************** function ___fpclassifyf *****************
  4454 ;; Defined at:
  4455 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  x               4    5[COMRAM] float 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;  u               4   15[COMRAM] struct .
  4460 ;;  e               2   13[COMRAM] int 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  2    5[COMRAM] int 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4471 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4472 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4473 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4474 ;;Total ram usage:       14 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:    1
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_efgtoa
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text15
  4485  002B56                     __ptext15:
  4486                           	opt callstack 0
  4487  002B56                     ___fpclassifyf:
  4488                           	opt callstack 25
  4489                           
  4490                           ;incstack = 0
  4491  002B56  C0D2  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4492  002B5A  C0D3  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4493  002B5E  C0D4  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4494  002B62  C0D5  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4495  002B66  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  4496  002B6A  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4497  002B6E  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4498  002B72  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4499  002B76  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  4500  002B7A  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4501  002B7E  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4502  002B82  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4503  002B86  0E18               	movlw	24
  4504  002B88  D005               	goto	u5520
  4505  002B8A                     u5525:
  4506  002B8A  90D8               	bcf	status,0,c
  4507  002B8C  320D               	rrcf	??___fpclassifyf+3,f,c
  4508  002B8E  320C               	rrcf	??___fpclassifyf+2,f,c
  4509  002B90  320B               	rrcf	??___fpclassifyf+1,f,c
  4510  002B92  320A               	rrcf	??___fpclassifyf,f,c
  4511  002B94                     u5520:
  4512  002B94  2EE8               	decfsz	wreg,f,c
  4513  002B96  D7F9               	goto	u5525
  4514  002B98  500A               	movf	??___fpclassifyf,w,c
  4515  002B9A  6E0E               	movwf	___fpclassifyf@e,c
  4516  002B9C  6A0F               	clrf	___fpclassifyf@e+1,c
  4517  002B9E  500E               	movf	___fpclassifyf@e,w,c
  4518  002BA0  100F               	iorwf	___fpclassifyf@e+1,w,c
  4519  002BA2  A4D8               	btfss	status,2,c
  4520  002BA4  D019               	goto	l4393
  4521  002BA6  90D8               	bcf	status,0,c
  4522  002BA8  3410               	rlcf	___fpclassifyf@u,w,c
  4523  002BAA  6E0A               	movwf	??___fpclassifyf& (0+255),c
  4524  002BAC  3411               	rlcf	___fpclassifyf@u+1,w,c
  4525  002BAE  6E0B               	movwf	(??___fpclassifyf+1)& (0+255),c
  4526  002BB0  3412               	rlcf	___fpclassifyf@u+2,w,c
  4527  002BB2  6E0C               	movwf	(??___fpclassifyf+2)& (0+255),c
  4528  002BB4  3413               	rlcf	___fpclassifyf@u+3,w,c
  4529  002BB6  6E0D               	movwf	(??___fpclassifyf+3)& (0+255),c
  4530  002BB8  500A               	movf	??___fpclassifyf,w,c
  4531  002BBA  100B               	iorwf	??___fpclassifyf+1,w,c
  4532  002BBC  100C               	iorwf	??___fpclassifyf+2,w,c
  4533  002BBE  100D               	iorwf	??___fpclassifyf+3,w,c
  4534  002BC0  A4D8               	btfss	status,2,c
  4535  002BC2  D005               	goto	l4389
  4536  002BC4  0E00               	movlw	0
  4537  002BC6  6E07               	movwf	?___fpclassifyf+1,c
  4538  002BC8  0E02               	movlw	2
  4539  002BCA  6E06               	movwf	?___fpclassifyf,c
  4540  002BCC  0012               	return	
  4541  002BCE                     l4389:
  4542  002BCE  0E00               	movlw	0
  4543  002BD0  6E07               	movwf	?___fpclassifyf+1,c
  4544  002BD2  0E03               	movlw	3
  4545  002BD4  6E06               	movwf	?___fpclassifyf,c
  4546  002BD6  0012               	return	
  4547  002BD8                     l4393:
  4548  002BD8  280E               	incf	___fpclassifyf@e,w,c
  4549  002BDA  100F               	iorwf	___fpclassifyf@e+1,w,c
  4550  002BDC  A4D8               	btfss	status,2,c
  4551  002BDE  D01C               	goto	l4399
  4552  002BE0  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  4553  002BE4  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4554  002BE8  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4555  002BEC  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4556  002BF0  0E09               	movlw	9
  4557  002BF2                     u5565:
  4558  002BF2  90D8               	bcf	status,0,c
  4559  002BF4  360A               	rlcf	??___fpclassifyf,f,c
  4560  002BF6  360B               	rlcf	??___fpclassifyf+1,f,c
  4561  002BF8  360C               	rlcf	??___fpclassifyf+2,f,c
  4562  002BFA  360D               	rlcf	??___fpclassifyf+3,f,c
  4563  002BFC  2EE8               	decfsz	wreg,f,c
  4564  002BFE  D7F9               	goto	u5565
  4565  002C00  500A               	movf	??___fpclassifyf,w,c
  4566  002C02  100B               	iorwf	??___fpclassifyf+1,w,c
  4567  002C04  100C               	iorwf	??___fpclassifyf+2,w,c
  4568  002C06  100D               	iorwf	??___fpclassifyf+3,w,c
  4569  002C08  A4D8               	btfss	status,2,c
  4570  002C0A  D002               	goto	u5570
  4571  002C0C  0E01               	movlw	1
  4572  002C0E  D001               	goto	u5580
  4573  002C10                     u5570:
  4574  002C10  0E00               	movlw	0
  4575  002C12                     u5580:
  4576  002C12  6E06               	movwf	?___fpclassifyf,c
  4577  002C14  6A07               	clrf	?___fpclassifyf+1,c
  4578  002C16  0012               	return	
  4579  002C18                     l4399:
  4580  002C18  0E00               	movlw	0
  4581  002C1A  6E07               	movwf	?___fpclassifyf+1,c
  4582  002C1C  0E04               	movlw	4
  4583  002C1E  6E06               	movwf	?___fpclassifyf,c
  4584  002C20  0012               	return		;funcret
  4585  002C22                     __end_of___fpclassifyf:
  4586                           	opt callstack 0
  4587                           
  4588 ;; *************** function ___fltol *****************
  4589 ;; Defined at:
  4590 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  f1              4    5[COMRAM] int 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  exp1            1   14[COMRAM] unsigned char 
  4595 ;;  sign1           1   13[COMRAM] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  4    5[COMRAM] long 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4607 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4608 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4609 ;;Total ram usage:       10 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    1
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_efgtoa
  4616 ;;		_fijarVelocidad
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text16
  4621  002C22                     __ptext16:
  4622                           	opt callstack 0
  4623  002C22                     ___fltol:
  4624                           	opt callstack 25
  4625                           
  4626                           ;incstack = 0
  4627  002C22  3408               	rlcf	___fltol@f1+2,w,c
  4628  002C24  3409               	rlcf	___fltol@f1+3,w,c
  4629  002C26  6E0F               	movwf	___fltol@exp1,c
  4630  002C28  500F               	movf	___fltol@exp1,w,c
  4631  002C2A  A4D8               	btfss	status,2,c
  4632  002C2C  D009               	goto	l4861
  4633  002C2E                     u6390:
  4634  002C2E  0E00               	movlw	0
  4635  002C30  6E06               	movwf	?___fltol,c
  4636  002C32  0E00               	movlw	0
  4637  002C34  6E07               	movwf	?___fltol+1,c
  4638  002C36  0E00               	movlw	0
  4639  002C38  6E08               	movwf	?___fltol+2,c
  4640  002C3A  0E00               	movlw	0
  4641  002C3C  6E09               	movwf	?___fltol+3,c
  4642  002C3E  0012               	return	
  4643  002C40                     l4861:
  4644  002C40  C006  F00A         	movff	___fltol@f1,??___fltol
  4645  002C44  C007  F00B         	movff	___fltol@f1+1,??___fltol+1
  4646  002C48  C008  F00C         	movff	___fltol@f1+2,??___fltol+2
  4647  002C4C  C009  F00D         	movff	___fltol@f1+3,??___fltol+3
  4648  002C50  0E20               	movlw	32
  4649  002C52  D005               	goto	u6400
  4650  002C54                     u6405:
  4651  002C54  90D8               	bcf	status,0,c
  4652  002C56  320D               	rrcf	??___fltol+3,f,c
  4653  002C58  320C               	rrcf	??___fltol+2,f,c
  4654  002C5A  320B               	rrcf	??___fltol+1,f,c
  4655  002C5C  320A               	rrcf	??___fltol,f,c
  4656  002C5E                     u6400:
  4657  002C5E  2EE8               	decfsz	wreg,f,c
  4658  002C60  D7F9               	goto	u6405
  4659  002C62  500A               	movf	??___fltol,w,c
  4660  002C64  6E0E               	movwf	___fltol@sign1,c
  4661  002C66  8E08               	bsf	___fltol@f1+2,7,c
  4662  002C68  0EFF               	movlw	255
  4663  002C6A  1606               	andwf	___fltol@f1,f,c
  4664  002C6C  0EFF               	movlw	255
  4665  002C6E  1607               	andwf	___fltol@f1+1,f,c
  4666  002C70  0EFF               	movlw	255
  4667  002C72  1608               	andwf	___fltol@f1+2,f,c
  4668  002C74  0E00               	movlw	0
  4669  002C76  1609               	andwf	___fltol@f1+3,f,c
  4670  002C78  0E96               	movlw	150
  4671  002C7A  5E0F               	subwf	___fltol@exp1,f,c
  4672  002C7C  AE0F               	btfss	___fltol@exp1,7,c
  4673  002C7E  D00D               	goto	l4881
  4674  002C80  500F               	movf	___fltol@exp1,w,c
  4675  002C82  0A80               	xorlw	128
  4676  002C84  0F97               	addlw	151
  4677  002C86  A0D8               	btfss	status,0,c
  4678  002C88  D7D2               	goto	u6390
  4679  002C8A                     l4877:
  4680  002C8A  90D8               	bcf	status,0,c
  4681  002C8C  3209               	rrcf	___fltol@f1+3,f,c
  4682  002C8E  3208               	rrcf	___fltol@f1+2,f,c
  4683  002C90  3207               	rrcf	___fltol@f1+1,f,c
  4684  002C92  3206               	rrcf	___fltol@f1,f,c
  4685  002C94  3E0F               	incfsz	___fltol@exp1,f,c
  4686  002C96  D7F9               	goto	l4877
  4687  002C98  D00D               	goto	u6440
  4688  002C9A                     l4881:
  4689  002C9A  0E1F               	movlw	31
  4690  002C9C  640F               	cpfsgt	___fltol@exp1,c
  4691  002C9E  D007               	goto	l4889
  4692  002CA0  D7C6               	goto	u6390
  4693  002CA2                     l4887:
  4694  002CA2  90D8               	bcf	status,0,c
  4695  002CA4  3606               	rlcf	___fltol@f1,f,c
  4696  002CA6  3607               	rlcf	___fltol@f1+1,f,c
  4697  002CA8  3608               	rlcf	___fltol@f1+2,f,c
  4698  002CAA  3609               	rlcf	___fltol@f1+3,f,c
  4699  002CAC  060F               	decf	___fltol@exp1,f,c
  4700  002CAE                     l4889:
  4701  002CAE  500F               	movf	___fltol@exp1,w,c
  4702  002CB0  A4D8               	btfss	status,2,c
  4703  002CB2  D7F7               	goto	l4887
  4704  002CB4                     u6440:
  4705  002CB4  500E               	movf	___fltol@sign1,w,c
  4706  002CB6  B4D8               	btfsc	status,2,c
  4707  002CB8  D008               	goto	l4895
  4708  002CBA  1E09               	comf	___fltol@f1+3,f,c
  4709  002CBC  1E08               	comf	___fltol@f1+2,f,c
  4710  002CBE  1E07               	comf	___fltol@f1+1,f,c
  4711  002CC0  6C06               	negf	___fltol@f1,c
  4712  002CC2  0E00               	movlw	0
  4713  002CC4  2207               	addwfc	___fltol@f1+1,f,c
  4714  002CC6  2208               	addwfc	___fltol@f1+2,f,c
  4715  002CC8  2209               	addwfc	___fltol@f1+3,f,c
  4716  002CCA                     l4895:
  4717  002CCA  C006  F006         	movff	___fltol@f1,?___fltol
  4718  002CCE  C007  F007         	movff	___fltol@f1+1,?___fltol+1
  4719  002CD2  C008  F008         	movff	___fltol@f1+2,?___fltol+2
  4720  002CD6  C009  F009         	movff	___fltol@f1+3,?___fltol+3
  4721  002CDA  0012               	return		;funcret
  4722  002CDC                     __end_of___fltol:
  4723                           	opt callstack 0
  4724                           
  4725 ;; *************** function ___flsub *****************
  4726 ;; Defined at:
  4727 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  b               4   30[COMRAM] long 
  4730 ;;  a               4   34[COMRAM] long 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  4   30[COMRAM] long 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4742 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4745 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4746 ;;Total ram usage:        8 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    2
  4749 ;; This function calls:
  4750 ;;		___fladd
  4751 ;; This function is called by:
  4752 ;;		_efgtoa
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text17
  4757  0032DE                     __ptext17:
  4758                           	opt callstack 0
  4759  0032DE                     ___flsub:
  4760                           	opt callstack 24
  4761                           
  4762                           ;incstack = 0
  4763  0032DE  0E00               	movlw	0
  4764  0032E0  1A23               	xorwf	___flsub@a,f,c
  4765  0032E2  0E00               	movlw	0
  4766  0032E4  1A24               	xorwf	___flsub@a+1,f,c
  4767  0032E6  0E00               	movlw	0
  4768  0032E8  1A25               	xorwf	___flsub@a+2,f,c
  4769  0032EA  0E80               	movlw	128
  4770  0032EC  1A26               	xorwf	___flsub@a+3,f,c
  4771  0032EE  C01F  F006         	movff	___flsub@b,___fladd@b
  4772  0032F2  C020  F007         	movff	___flsub@b+1,___fladd@b+1
  4773  0032F6  C021  F008         	movff	___flsub@b+2,___fladd@b+2
  4774  0032FA  C022  F009         	movff	___flsub@b+3,___fladd@b+3
  4775  0032FE  C023  F00A         	movff	___flsub@a,___fladd@a
  4776  003302  C024  F00B         	movff	___flsub@a+1,___fladd@a+1
  4777  003306  C025  F00C         	movff	___flsub@a+2,___fladd@a+2
  4778  00330A  C026  F00D         	movff	___flsub@a+3,___fladd@a+3
  4779  00330E  EC54  F010         	call	___fladd	;wreg free
  4780  003312  C006  F01F         	movff	?___fladd,?___flsub
  4781  003316  C007  F020         	movff	?___fladd+1,?___flsub+1
  4782  00331A  C008  F021         	movff	?___fladd+2,?___flsub+2
  4783  00331E  C009  F022         	movff	?___fladd+3,?___flsub+3
  4784  003322  0012               	return		;funcret
  4785  003324                     __end_of___flsub:
  4786                           	opt callstack 0
  4787                           
  4788 ;; *************** function ___fladd *****************
  4789 ;; Defined at:
  4790 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  b               4    5[COMRAM] long 
  4793 ;;  a               4    9[COMRAM] long 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  grs             1   20[COMRAM] unsigned char 
  4796 ;;  bexp            1   19[COMRAM] unsigned char 
  4797 ;;  aexp            1   18[COMRAM] unsigned char 
  4798 ;;  signs           1   17[COMRAM] unsigned char 
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  4    5[COMRAM] unsigned char 
  4801 ;; Registers used:
  4802 ;;		wreg, status,2, status,0
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4808 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4809 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4810 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4811 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4812 ;;Total ram usage:       16 bytes
  4813 ;; Hardware stack levels used:    1
  4814 ;; Hardware stack levels required when called:    1
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_efgtoa
  4819 ;;		___flsub
  4820 ;;		_fijarVelocidad
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text18
  4825  0020A8                     __ptext18:
  4826                           	opt callstack 0
  4827  0020A8                     ___fladd:
  4828                           	opt callstack 24
  4829                           
  4830                           ;incstack = 0
  4831  0020A8  5009               	movf	___fladd@b+3,w,c
  4832  0020AA  0B80               	andlw	128
  4833  0020AC  6E12               	movwf	___fladd@signs,c
  4834  0020AE  5009               	movf	___fladd@b+3,w,c
  4835  0020B0  2409               	addwf	___fladd@b+3,w,c
  4836  0020B2  6E14               	movwf	___fladd@bexp,c
  4837  0020B4  BE08               	btfsc	___fladd@b+2,7,c
  4838  0020B6  8014               	bsf	___fladd@bexp,0,c
  4839  0020B8  5014               	movf	___fladd@bexp,w,c
  4840  0020BA  B4D8               	btfsc	status,2,c
  4841  0020BC  D00D               	goto	l4173
  4842  0020BE  2814               	incf	___fladd@bexp,w,c
  4843  0020C0  A4D8               	btfss	status,2,c
  4844  0020C2  D008               	goto	l4169
  4845  0020C4  0E00               	movlw	0
  4846  0020C6  6E06               	movwf	___fladd@b,c
  4847  0020C8  0E00               	movlw	0
  4848  0020CA  6E07               	movwf	___fladd@b+1,c
  4849  0020CC  0E00               	movlw	0
  4850  0020CE  6E08               	movwf	___fladd@b+2,c
  4851  0020D0  0E00               	movlw	0
  4852  0020D2  6E09               	movwf	___fladd@b+3,c
  4853  0020D4                     l4169:
  4854  0020D4  8E08               	bsf	___fladd@b+2,7,c
  4855  0020D6  D006               	goto	L7
  4856  0020D8                     l4173:
  4857  0020D8  0E00               	movlw	0
  4858  0020DA  6E06               	movwf	___fladd@b,c
  4859  0020DC  0E00               	movlw	0
  4860  0020DE  6E07               	movwf	___fladd@b+1,c
  4861  0020E0  0E00               	movlw	0
  4862  0020E2  6E08               	movwf	___fladd@b+2,c
  4863  0020E4                     L7:
  4864  0020E4  0E00               	movlw	0
  4865  0020E6  6E09               	movwf	___fladd@b+3,c
  4866  0020E8  500D               	movf	___fladd@a+3,w,c
  4867  0020EA  0B80               	andlw	128
  4868  0020EC  6E13               	movwf	___fladd@aexp,c
  4869  0020EE  5012               	movf	___fladd@signs,w,c
  4870  0020F0  1813               	xorwf	___fladd@aexp,w,c
  4871  0020F2  A4D8               	btfss	status,2,c
  4872  0020F4  8C12               	bsf	___fladd@signs,6,c
  4873  0020F6  500D               	movf	___fladd@a+3,w,c
  4874  0020F8  240D               	addwf	___fladd@a+3,w,c
  4875  0020FA  6E13               	movwf	___fladd@aexp,c
  4876  0020FC  BE0C               	btfsc	___fladd@a+2,7,c
  4877  0020FE  8013               	bsf	___fladd@aexp,0,c
  4878  002100  5013               	movf	___fladd@aexp,w,c
  4879  002102  B4D8               	btfsc	status,2,c
  4880  002104  D00D               	goto	l4197
  4881  002106  2813               	incf	___fladd@aexp,w,c
  4882  002108  A4D8               	btfss	status,2,c
  4883  00210A  D008               	goto	l4193
  4884  00210C  0E00               	movlw	0
  4885  00210E  6E0A               	movwf	___fladd@a,c
  4886  002110  0E00               	movlw	0
  4887  002112  6E0B               	movwf	___fladd@a+1,c
  4888  002114  0E00               	movlw	0
  4889  002116  6E0C               	movwf	___fladd@a+2,c
  4890  002118  0E00               	movlw	0
  4891  00211A  6E0D               	movwf	___fladd@a+3,c
  4892  00211C                     l4193:
  4893  00211C  8E0C               	bsf	___fladd@a+2,7,c
  4894  00211E  D006               	goto	L8
  4895  002120                     l4197:
  4896  002120  0E00               	movlw	0
  4897  002122  6E0A               	movwf	___fladd@a,c
  4898  002124  0E00               	movlw	0
  4899  002126  6E0B               	movwf	___fladd@a+1,c
  4900  002128  0E00               	movlw	0
  4901  00212A  6E0C               	movwf	___fladd@a+2,c
  4902  00212C                     L8:
  4903  00212C  0E00               	movlw	0
  4904  00212E  6E0D               	movwf	___fladd@a+3,c
  4905  002130  5014               	movf	___fladd@bexp,w,c
  4906  002132  5C13               	subwf	___fladd@aexp,w,c
  4907  002134  B0D8               	btfsc	status,0,c
  4908  002136  D022               	goto	l4235
  4909  002138  AC12               	btfss	___fladd@signs,6,c
  4910  00213A  D002               	goto	l4205
  4911  00213C  0E80               	movlw	128
  4912  00213E  1A12               	xorwf	___fladd@signs,f,c
  4913  002140                     l4205:
  4914  002140  C014  F015         	movff	___fladd@bexp,___fladd@grs
  4915  002144  C013  F014         	movff	___fladd@aexp,___fladd@bexp
  4916  002148  C015  F013         	movff	___fladd@grs,___fladd@aexp
  4917  00214C  C006  F015         	movff	___fladd@b,___fladd@grs
  4918  002150  C00A  F006         	movff	___fladd@a,___fladd@b
  4919  002154  C015  F00A         	movff	___fladd@grs,___fladd@a
  4920  002158  C007  F015         	movff	___fladd@b+1,___fladd@grs
  4921  00215C  C00B  F007         	movff	___fladd@a+1,___fladd@b+1
  4922  002160  C015  F00B         	movff	___fladd@grs,___fladd@a+1
  4923  002164  C008  F015         	movff	___fladd@b+2,___fladd@grs
  4924  002168  C00C  F008         	movff	___fladd@a+2,___fladd@b+2
  4925  00216C  C015  F00C         	movff	___fladd@grs,___fladd@a+2
  4926  002170  C009  F015         	movff	___fladd@b+3,___fladd@grs
  4927  002174  C00D  F009         	movff	___fladd@a+3,___fladd@b+3
  4928  002178  C015  F00D         	movff	___fladd@grs,___fladd@a+3
  4929  00217C                     l4235:
  4930  00217C  0E00               	movlw	0
  4931  00217E  6E15               	movwf	___fladd@grs,c
  4932  002180  5014               	movf	___fladd@bexp,w,c
  4933  002182  C013  F00E         	movff	___fladd@aexp,??___fladd
  4934  002186  6A0F               	clrf	(??___fladd+1)& (0+255),c
  4935  002188  5E0E               	subwf	??___fladd,f,c
  4936  00218A  0E00               	movlw	0
  4937  00218C  5A0F               	subwfb	??___fladd+1,f,c
  4938  00218E  BE0F               	btfsc	??___fladd+1,7,c
  4939  002190  D02C               	goto	l870
  4940  002192  500F               	movf	??___fladd+1,w,c
  4941  002194  E104               	bnz	u5180
  4942  002196  0E1A               	movlw	26
  4943  002198  5C0E               	subwf	??___fladd,w,c
  4944  00219A  A0D8               	btfss	status,0,c
  4945  00219C  D026               	goto	l870
  4946  00219E                     u5180:
  4947  00219E  5006               	movf	___fladd@b,w,c
  4948  0021A0  1007               	iorwf	___fladd@b+1,w,c
  4949  0021A2  1008               	iorwf	___fladd@b+2,w,c
  4950  0021A4  1009               	iorwf	___fladd@b+3,w,c
  4951  0021A6  B4D8               	btfsc	status,2,c
  4952  0021A8  D002               	goto	u5190
  4953  0021AA  0E01               	movlw	1
  4954  0021AC  D001               	goto	u5200
  4955  0021AE                     u5190:
  4956  0021AE  0E00               	movlw	0
  4957  0021B0                     u5200:
  4958  0021B0  6E15               	movwf	___fladd@grs,c
  4959  0021B2  0E00               	movlw	0
  4960  0021B4  6E06               	movwf	___fladd@b,c
  4961  0021B6  0E00               	movlw	0
  4962  0021B8  6E07               	movwf	___fladd@b+1,c
  4963  0021BA  0E00               	movlw	0
  4964  0021BC  6E08               	movwf	___fladd@b+2,c
  4965  0021BE  0E00               	movlw	0
  4966  0021C0  6E09               	movwf	___fladd@b+3,c
  4967  0021C2  C013  F014         	movff	___fladd@aexp,___fladd@bexp
  4968  0021C6  D015               	goto	u5230
  4969  0021C8                     l871:
  4970  0021C8  A015               	btfss	___fladd@grs,0,c
  4971  0021CA  D005               	goto	l4247
  4972  0021CC  90D8               	bcf	status,0,c
  4973  0021CE  3015               	rrcf	___fladd@grs,w,c
  4974  0021D0  0901               	iorlw	1
  4975  0021D2  6E15               	movwf	___fladd@grs,c
  4976  0021D4  D002               	goto	l4249
  4977  0021D6                     l4247:
  4978  0021D6  90D8               	bcf	status,0,c
  4979  0021D8  3215               	rrcf	___fladd@grs,f,c
  4980  0021DA                     l4249:
  4981  0021DA  B006               	btfsc	___fladd@b,0,c
  4982  0021DC  8E15               	bsf	___fladd@grs,7,c
  4983  0021DE  3409               	rlcf	___fladd@b+3,w,c
  4984  0021E0  3209               	rrcf	___fladd@b+3,f,c
  4985  0021E2  3208               	rrcf	___fladd@b+2,f,c
  4986  0021E4  3207               	rrcf	___fladd@b+1,f,c
  4987  0021E6  3206               	rrcf	___fladd@b,f,c
  4988  0021E8  2A14               	incf	___fladd@bexp,f,c
  4989  0021EA                     l870:
  4990  0021EA  5013               	movf	___fladd@aexp,w,c
  4991  0021EC  5C14               	subwf	___fladd@bexp,w,c
  4992  0021EE  A0D8               	btfss	status,0,c
  4993  0021F0  D7EB               	goto	l871
  4994  0021F2                     u5230:
  4995  0021F2  BC12               	btfsc	___fladd@signs,6,c
  4996  0021F4  D028               	goto	l4281
  4997  0021F6  5014               	movf	___fladd@bexp,w,c
  4998  0021F8  A4D8               	btfss	status,2,c
  4999  0021FA  D009               	goto	l4263
  5000  0021FC  0E00               	movlw	0
  5001  0021FE  6E06               	movwf	?___fladd,c
  5002  002200  0E00               	movlw	0
  5003  002202  6E07               	movwf	?___fladd+1,c
  5004  002204  0E00               	movlw	0
  5005  002206  6E08               	movwf	?___fladd+2,c
  5006  002208  0E00               	movlw	0
  5007  00220A  6E09               	movwf	?___fladd+3,c
  5008  00220C  0012               	return	
  5009  00220E                     l4263:
  5010  00220E  500A               	movf	___fladd@a,w,c
  5011  002210  2606               	addwf	___fladd@b,f,c
  5012  002212  500B               	movf	___fladd@a+1,w,c
  5013  002214  2207               	addwfc	___fladd@b+1,f,c
  5014  002216  500C               	movf	___fladd@a+2,w,c
  5015  002218  2208               	addwfc	___fladd@b+2,f,c
  5016  00221A  500D               	movf	___fladd@a+3,w,c
  5017  00221C  2209               	addwfc	___fladd@b+3,f,c
  5018  00221E  A009               	btfss	___fladd@b+3,0,c
  5019  002220  D071               	goto	u5360
  5020  002222  A015               	btfss	___fladd@grs,0,c
  5021  002224  D005               	goto	l4271
  5022  002226  90D8               	bcf	status,0,c
  5023  002228  3015               	rrcf	___fladd@grs,w,c
  5024  00222A  0901               	iorlw	1
  5025  00222C  6E15               	movwf	___fladd@grs,c
  5026  00222E  D002               	goto	l4273
  5027  002230                     l4271:
  5028  002230  90D8               	bcf	status,0,c
  5029  002232  3215               	rrcf	___fladd@grs,f,c
  5030  002234                     l4273:
  5031  002234  B006               	btfsc	___fladd@b,0,c
  5032  002236  8E15               	bsf	___fladd@grs,7,c
  5033  002238  3409               	rlcf	___fladd@b+3,w,c
  5034  00223A  3209               	rrcf	___fladd@b+3,f,c
  5035  00223C  3208               	rrcf	___fladd@b+2,f,c
  5036  00223E  3207               	rrcf	___fladd@b+1,f,c
  5037  002240  3206               	rrcf	___fladd@b,f,c
  5038  002242  2A14               	incf	___fladd@bexp,f,c
  5039  002244  D05F               	goto	u5360
  5040  002246                     l4281:
  5041  002246  500A               	movf	___fladd@a,w,c
  5042  002248  5C06               	subwf	___fladd@b,w,c
  5043  00224A  500B               	movf	___fladd@a+1,w,c
  5044  00224C  5807               	subwfb	___fladd@b+1,w,c
  5045  00224E  500C               	movf	___fladd@a+2,w,c
  5046  002250  5808               	subwfb	___fladd@b+2,w,c
  5047  002252  5009               	movf	___fladd@b+3,w,c
  5048  002254  0A80               	xorlw	128
  5049  002256  6E0E               	movwf	??___fladd& (0+255),c
  5050  002258  500D               	movf	___fladd@a+3,w,c
  5051  00225A  0A80               	xorlw	128
  5052  00225C  580E               	subwfb	??___fladd& (0+255),w,c
  5053  00225E  B0D8               	btfsc	status,0,c
  5054  002260  D025               	goto	l4291
  5055  002262  5006               	movf	___fladd@b,w,c
  5056  002264  5C0A               	subwf	___fladd@a,w,c
  5057  002266  6E0E               	movwf	??___fladd& (0+255),c
  5058  002268  5007               	movf	___fladd@b+1,w,c
  5059  00226A  580B               	subwfb	___fladd@a+1,w,c
  5060  00226C  6E0F               	movwf	(??___fladd+1)& (0+255),c
  5061  00226E  5008               	movf	___fladd@b+2,w,c
  5062  002270  580C               	subwfb	___fladd@a+2,w,c
  5063  002272  6E10               	movwf	(??___fladd+2)& (0+255),c
  5064  002274  5009               	movf	___fladd@b+3,w,c
  5065  002276  580D               	subwfb	___fladd@a+3,w,c
  5066  002278  6E11               	movwf	(??___fladd+3)& (0+255),c
  5067  00227A  0EFF               	movlw	255
  5068  00227C  240E               	addwf	??___fladd,w,c
  5069  00227E  6E06               	movwf	___fladd@b,c
  5070  002280  0EFF               	movlw	255
  5071  002282  200F               	addwfc	??___fladd+1,w,c
  5072  002284  6E07               	movwf	___fladd@b+1,c
  5073  002286  0EFF               	movlw	255
  5074  002288  2010               	addwfc	??___fladd+2,w,c
  5075  00228A  6E08               	movwf	___fladd@b+2,c
  5076  00228C  0EFF               	movlw	255
  5077  00228E  2011               	addwfc	??___fladd+3,w,c
  5078  002290  6E09               	movwf	___fladd@b+3,c
  5079  002292  0E80               	movlw	128
  5080  002294  1A12               	xorwf	___fladd@signs,f,c
  5081  002296  6C15               	negf	___fladd@grs,c
  5082  002298  5015               	movf	___fladd@grs,w,c
  5083  00229A  A4D8               	btfss	status,2,c
  5084  00229C  D00F               	goto	l886
  5085  00229E  0E01               	movlw	1
  5086  0022A0  2606               	addwf	___fladd@b,f,c
  5087  0022A2  0E00               	movlw	0
  5088  0022A4  2207               	addwfc	___fladd@b+1,f,c
  5089  0022A6  2208               	addwfc	___fladd@b+2,f,c
  5090  0022A8  2209               	addwfc	___fladd@b+3,f,c
  5091  0022AA  D008               	goto	l886
  5092  0022AC                     l4291:
  5093  0022AC  500A               	movf	___fladd@a,w,c
  5094  0022AE  5E06               	subwf	___fladd@b,f,c
  5095  0022B0  500B               	movf	___fladd@a+1,w,c
  5096  0022B2  5A07               	subwfb	___fladd@b+1,f,c
  5097  0022B4  500C               	movf	___fladd@a+2,w,c
  5098  0022B6  5A08               	subwfb	___fladd@b+2,f,c
  5099  0022B8  500D               	movf	___fladd@a+3,w,c
  5100  0022BA  5A09               	subwfb	___fladd@b+3,f,c
  5101  0022BC                     l886:
  5102  0022BC  5006               	movf	___fladd@b,w,c
  5103  0022BE  1007               	iorwf	___fladd@b+1,w,c
  5104  0022C0  1008               	iorwf	___fladd@b+2,w,c
  5105  0022C2  1009               	iorwf	___fladd@b+3,w,c
  5106  0022C4  A4D8               	btfss	status,2,c
  5107  0022C6  D01C               	goto	l4315
  5108  0022C8  5015               	movf	___fladd@grs,w,c
  5109  0022CA  A4D8               	btfss	status,2,c
  5110  0022CC  D019               	goto	l4315
  5111  0022CE  0E00               	movlw	0
  5112  0022D0  6E06               	movwf	?___fladd,c
  5113  0022D2  0E00               	movlw	0
  5114  0022D4  6E07               	movwf	?___fladd+1,c
  5115  0022D6  0E00               	movlw	0
  5116  0022D8  6E08               	movwf	?___fladd+2,c
  5117  0022DA  0E00               	movlw	0
  5118  0022DC  6E09               	movwf	?___fladd+3,c
  5119  0022DE  0012               	return	
  5120  0022E0                     l4299:
  5121  0022E0  90D8               	bcf	status,0,c
  5122  0022E2  3606               	rlcf	___fladd@b,f,c
  5123  0022E4  3607               	rlcf	___fladd@b+1,f,c
  5124  0022E6  3608               	rlcf	___fladd@b+2,f,c
  5125  0022E8  3609               	rlcf	___fladd@b+3,f,c
  5126  0022EA  BE15               	btfsc	___fladd@grs,7,c
  5127  0022EC  8006               	bsf	___fladd@b,0,c
  5128  0022EE  A015               	btfss	___fladd@grs,0,c
  5129  0022F0  D002               	goto	l4309
  5130  0022F2  80D8               	bsf	status,0,c
  5131  0022F4  D001               	goto	L9
  5132  0022F6                     l4309:
  5133  0022F6  90D8               	bcf	status,0,c
  5134  0022F8                     L9:
  5135  0022F8  3615               	rlcf	___fladd@grs,f,c
  5136  0022FA  5014               	movf	___fladd@bexp,w,c
  5137  0022FC  A4D8               	btfss	status,2,c
  5138  0022FE  0614               	decf	___fladd@bexp,f,c
  5139  002300                     l4315:
  5140  002300  AE08               	btfss	___fladd@b+2,7,c
  5141  002302  D7EE               	goto	l4299
  5142  002304                     u5360:
  5143  002304  0E00               	movlw	0
  5144  002306  6E13               	movwf	___fladd@aexp,c
  5145  002308  AE15               	btfss	___fladd@grs,7,c
  5146  00230A  D00B               	goto	l895
  5147  00230C  C015  F00E         	movff	___fladd@grs,??___fladd
  5148  002310  0E7F               	movlw	127
  5149  002312  160E               	andwf	??___fladd,f,c
  5150  002314  B4D8               	btfsc	status,2,c
  5151  002316  D003               	goto	l896
  5152  002318                     u5380:
  5153  002318  0E01               	movlw	1
  5154  00231A  6E13               	movwf	___fladd@aexp,c
  5155  00231C  D002               	goto	l895
  5156  00231E                     l896:
  5157  00231E  B006               	btfsc	___fladd@b,0,c
  5158  002320  D7FB               	goto	u5380
  5159  002322                     l895:
  5160  002322  5013               	movf	___fladd@aexp,w,c
  5161  002324  B4D8               	btfsc	status,2,c
  5162  002326  D020               	goto	l4335
  5163  002328  0E01               	movlw	1
  5164  00232A  2606               	addwf	___fladd@b,f,c
  5165  00232C  0E00               	movlw	0
  5166  00232E  2207               	addwfc	___fladd@b+1,f,c
  5167  002330  2208               	addwfc	___fladd@b+2,f,c
  5168  002332  2209               	addwfc	___fladd@b+3,f,c
  5169  002334  A009               	btfss	___fladd@b+3,0,c
  5170  002336  D018               	goto	l4335
  5171  002338  C006  F00E         	movff	___fladd@b,??___fladd
  5172  00233C  C007  F00F         	movff	___fladd@b+1,??___fladd+1
  5173  002340  C008  F010         	movff	___fladd@b+2,??___fladd+2
  5174  002344  C009  F011         	movff	___fladd@b+3,??___fladd+3
  5175  002348  3411               	rlcf	??___fladd+3,w,c
  5176  00234A  3211               	rrcf	??___fladd+3,f,c
  5177  00234C  3210               	rrcf	??___fladd+2,f,c
  5178  00234E  320F               	rrcf	??___fladd+1,f,c
  5179  002350  320E               	rrcf	??___fladd,f,c
  5180  002352  C00E  F006         	movff	??___fladd,___fladd@b
  5181  002356  C00F  F007         	movff	??___fladd+1,___fladd@b+1
  5182  00235A  C010  F008         	movff	??___fladd+2,___fladd@b+2
  5183  00235E  C011  F009         	movff	??___fladd+3,___fladd@b+3
  5184  002362  2814               	incf	___fladd@bexp,w,c
  5185  002364  A4D8               	btfss	status,2,c
  5186  002366  2A14               	incf	___fladd@bexp,f,c
  5187  002368                     l4335:
  5188  002368  2814               	incf	___fladd@bexp,w,c
  5189  00236A  B4D8               	btfsc	status,2,c
  5190  00236C  D003               	goto	u5440
  5191  00236E  5014               	movf	___fladd@bexp,w,c
  5192  002370  A4D8               	btfss	status,2,c
  5193  002372  D00D               	goto	l4343
  5194  002374                     u5440:
  5195  002374  0E00               	movlw	0
  5196  002376  6E06               	movwf	___fladd@b,c
  5197  002378  0E00               	movlw	0
  5198  00237A  6E07               	movwf	___fladd@b+1,c
  5199  00237C  0E00               	movlw	0
  5200  00237E  6E08               	movwf	___fladd@b+2,c
  5201  002380  0E00               	movlw	0
  5202  002382  6E09               	movwf	___fladd@b+3,c
  5203  002384  5014               	movf	___fladd@bexp,w,c
  5204  002386  A4D8               	btfss	status,2,c
  5205  002388  D002               	goto	l4343
  5206  00238A  0E00               	movlw	0
  5207  00238C  6E12               	movwf	___fladd@signs,c
  5208  00238E                     l4343:
  5209  00238E  A014               	btfss	___fladd@bexp,0,c
  5210  002390  D002               	goto	l4347
  5211  002392  8E08               	bsf	___fladd@b+2,7,c
  5212  002394  D001               	goto	l4349
  5213  002396                     l4347:
  5214  002396  9E08               	bcf	___fladd@b+2,7,c
  5215  002398                     l4349:
  5216  002398  90D8               	bcf	status,0,c
  5217  00239A  3014               	rrcf	___fladd@bexp,w,c
  5218  00239C  6E09               	movwf	___fladd@b+3,c
  5219  00239E  BE12               	btfsc	___fladd@signs,7,c
  5220  0023A0  8E09               	bsf	___fladd@b+3,7,c
  5221  0023A2  C006  F006         	movff	___fladd@b,?___fladd
  5222  0023A6  C007  F007         	movff	___fladd@b+1,?___fladd+1
  5223  0023AA  C008  F008         	movff	___fladd@b+2,?___fladd+2
  5224  0023AE  C009  F009         	movff	___fladd@b+3,?___fladd+3
  5225  0023B2  0012               	return		;funcret
  5226  0023B4                     __end_of___fladd:
  5227                           	opt callstack 0
  5228                           
  5229 ;; *************** function ___flneg *****************
  5230 ;; Defined at:
  5231 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  f1              4    5[COMRAM] unsigned char 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;		None
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  4    5[COMRAM] unsigned char 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5245 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5248 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5249 ;;Total ram usage:        4 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    1
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_efgtoa
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text19
  5260  00343A                     __ptext19:
  5261                           	opt callstack 0
  5262  00343A                     ___flneg:
  5263                           	opt callstack 25
  5264                           
  5265                           ;incstack = 0
  5266  00343A  5006               	movf	___flneg@f1,w,c
  5267  00343C  1007               	iorwf	___flneg@f1+1,w,c
  5268  00343E  1008               	iorwf	___flneg@f1+2,w,c
  5269  003440  1009               	iorwf	___flneg@f1+3,w,c
  5270  003442  B4D8               	btfsc	status,2,c
  5271  003444  D008               	goto	l4851
  5272  003446  0E00               	movlw	0
  5273  003448  1A06               	xorwf	___flneg@f1,f,c
  5274  00344A  0E00               	movlw	0
  5275  00344C  1A07               	xorwf	___flneg@f1+1,f,c
  5276  00344E  0E00               	movlw	0
  5277  003450  1A08               	xorwf	___flneg@f1+2,f,c
  5278  003452  0E80               	movlw	128
  5279  003454  1A09               	xorwf	___flneg@f1+3,f,c
  5280  003456                     l4851:
  5281  003456  C006  F006         	movff	___flneg@f1,?___flneg
  5282  00345A  C007  F007         	movff	___flneg@f1+1,?___flneg+1
  5283  00345E  C008  F008         	movff	___flneg@f1+2,?___flneg+2
  5284  003462  C009  F009         	movff	___flneg@f1+3,?___flneg+3
  5285  003466  0012               	return		;funcret
  5286  003468                     __end_of___flneg:
  5287                           	opt callstack 0
  5288                           
  5289 ;; *************** function ___flmul *****************
  5290 ;; Defined at:
  5291 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  b               4    5[COMRAM] unsigned char 
  5294 ;;  a               4    9[COMRAM] unsigned char 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  prod            4   24[COMRAM] struct .
  5297 ;;  grs             4   19[COMRAM] unsigned long 
  5298 ;;  temp            2   28[COMRAM] struct .
  5299 ;;  bexp            1   23[COMRAM] unsigned char 
  5300 ;;  aexp            1   18[COMRAM] unsigned char 
  5301 ;;  sign            1   17[COMRAM] unsigned char 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  4    5[COMRAM] unsigned char 
  5304 ;; Registers used:
  5305 ;;		wreg, status,2, status,0, prodl, prodh
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5311 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5312 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5313 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5314 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5315 ;;Total ram usage:       25 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    1
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_efgtoa
  5322 ;;		_fijarVelocidad
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text20
  5327  001D56                     __ptext20:
  5328                           	opt callstack 0
  5329  001D56                     ___flmul:
  5330                           	opt callstack 25
  5331                           
  5332                           ;incstack = 0
  5333  001D56  5009               	movf	___flmul@b+3,w,c
  5334  001D58  0B80               	andlw	128
  5335  001D5A  6E12               	movwf	___flmul@sign,c
  5336  001D5C  5009               	movf	___flmul@b+3,w,c
  5337  001D5E  2409               	addwf	___flmul@b+3,w,c
  5338  001D60  6E18               	movwf	___flmul@bexp,c
  5339  001D62  BE08               	btfsc	___flmul@b+2,7,c
  5340  001D64  8018               	bsf	___flmul@bexp,0,c
  5341  001D66  5018               	movf	___flmul@bexp,w,c
  5342  001D68  B4D8               	btfsc	status,2,c
  5343  001D6A  D00D               	goto	l4607
  5344  001D6C  2818               	incf	___flmul@bexp,w,c
  5345  001D6E  A4D8               	btfss	status,2,c
  5346  001D70  D008               	goto	l4605
  5347  001D72  0E00               	movlw	0
  5348  001D74  6E06               	movwf	___flmul@b,c
  5349  001D76  0E00               	movlw	0
  5350  001D78  6E07               	movwf	___flmul@b+1,c
  5351  001D7A  0E00               	movlw	0
  5352  001D7C  6E08               	movwf	___flmul@b+2,c
  5353  001D7E  0E00               	movlw	0
  5354  001D80  6E09               	movwf	___flmul@b+3,c
  5355  001D82                     l4605:
  5356  001D82  8E08               	bsf	___flmul@b+2,7,c
  5357  001D84  D008               	goto	l4609
  5358  001D86                     l4607:
  5359  001D86  0E00               	movlw	0
  5360  001D88  6E06               	movwf	___flmul@b,c
  5361  001D8A  0E00               	movlw	0
  5362  001D8C  6E07               	movwf	___flmul@b+1,c
  5363  001D8E  0E00               	movlw	0
  5364  001D90  6E08               	movwf	___flmul@b+2,c
  5365  001D92  0E00               	movlw	0
  5366  001D94  6E09               	movwf	___flmul@b+3,c
  5367  001D96                     l4609:
  5368  001D96  500D               	movf	___flmul@a+3,w,c
  5369  001D98  0B80               	andlw	128
  5370  001D9A  1A12               	xorwf	___flmul@sign,f,c
  5371  001D9C  500D               	movf	___flmul@a+3,w,c
  5372  001D9E  240D               	addwf	___flmul@a+3,w,c
  5373  001DA0  6E13               	movwf	___flmul@aexp,c
  5374  001DA2  BE0C               	btfsc	___flmul@a+2,7,c
  5375  001DA4  8013               	bsf	___flmul@aexp,0,c
  5376  001DA6  5013               	movf	___flmul@aexp,w,c
  5377  001DA8  B4D8               	btfsc	status,2,c
  5378  001DAA  D00D               	goto	l4625
  5379  001DAC  2813               	incf	___flmul@aexp,w,c
  5380  001DAE  A4D8               	btfss	status,2,c
  5381  001DB0  D008               	goto	l4623
  5382  001DB2  0E00               	movlw	0
  5383  001DB4  6E0A               	movwf	___flmul@a,c
  5384  001DB6  0E00               	movlw	0
  5385  001DB8  6E0B               	movwf	___flmul@a+1,c
  5386  001DBA  0E00               	movlw	0
  5387  001DBC  6E0C               	movwf	___flmul@a+2,c
  5388  001DBE  0E00               	movlw	0
  5389  001DC0  6E0D               	movwf	___flmul@a+3,c
  5390  001DC2                     l4623:
  5391  001DC2  8E0C               	bsf	___flmul@a+2,7,c
  5392  001DC4  D008               	goto	l955
  5393  001DC6                     l4625:
  5394  001DC6  0E00               	movlw	0
  5395  001DC8  6E0A               	movwf	___flmul@a,c
  5396  001DCA  0E00               	movlw	0
  5397  001DCC  6E0B               	movwf	___flmul@a+1,c
  5398  001DCE  0E00               	movlw	0
  5399  001DD0  6E0C               	movwf	___flmul@a+2,c
  5400  001DD2  0E00               	movlw	0
  5401  001DD4  6E0D               	movwf	___flmul@a+3,c
  5402  001DD6                     l955:
  5403  001DD6  5013               	movf	___flmul@aexp,w,c
  5404  001DD8  B4D8               	btfsc	status,2,c
  5405  001DDA  D003               	goto	u6060
  5406  001DDC  5018               	movf	___flmul@bexp,w,c
  5407  001DDE  A4D8               	btfss	status,2,c
  5408  001DE0  D009               	goto	l4633
  5409  001DE2                     u6060:
  5410  001DE2  0E00               	movlw	0
  5411  001DE4  6E06               	movwf	?___flmul,c
  5412  001DE6  0E00               	movlw	0
  5413  001DE8  6E07               	movwf	?___flmul+1,c
  5414  001DEA  0E00               	movlw	0
  5415  001DEC  6E08               	movwf	?___flmul+2,c
  5416  001DEE  0E00               	movlw	0
  5417  001DF0  6E09               	movwf	?___flmul+3,c
  5418  001DF2  0012               	return	
  5419  001DF4                     l4633:
  5420  001DF4  500C               	movf	___flmul@a+2,w,c
  5421  001DF6  0206               	mulwf	___flmul@b,c
  5422  001DF8  CFF3 F01D          	movff	prodl,___flmul@temp
  5423  001DFC  CFF4 F01E          	movff	prodh,___flmul@temp+1
  5424  001E00  501D               	movf	___flmul@temp,w,c
  5425  001E02  6E14               	movwf	___flmul@grs,c
  5426  001E04  6A15               	clrf	___flmul@grs+1,c
  5427  001E06  6A16               	clrf	___flmul@grs+2,c
  5428  001E08  6A17               	clrf	___flmul@grs+3,c
  5429  001E0A  501E               	movf	___flmul@temp+1,w,c
  5430  001E0C  6E19               	movwf	___flmul@prod,c
  5431  001E0E  6A1A               	clrf	___flmul@prod+1,c
  5432  001E10  6A1B               	clrf	___flmul@prod+2,c
  5433  001E12  6A1C               	clrf	___flmul@prod+3,c
  5434  001E14  500B               	movf	___flmul@a+1,w,c
  5435  001E16  0207               	mulwf	___flmul@b+1,c
  5436  001E18  CFF3 F01D          	movff	prodl,___flmul@temp
  5437  001E1C  CFF4 F01E          	movff	prodh,___flmul@temp+1
  5438  001E20  501D               	movf	___flmul@temp,w,c
  5439  001E22  2614               	addwf	___flmul@grs,f,c
  5440  001E24  0E00               	movlw	0
  5441  001E26  2215               	addwfc	___flmul@grs+1,f,c
  5442  001E28  2216               	addwfc	___flmul@grs+2,f,c
  5443  001E2A  2217               	addwfc	___flmul@grs+3,f,c
  5444  001E2C  501E               	movf	___flmul@temp+1,w,c
  5445  001E2E  2619               	addwf	___flmul@prod,f,c
  5446  001E30  0E00               	movlw	0
  5447  001E32  221A               	addwfc	___flmul@prod+1,f,c
  5448  001E34  221B               	addwfc	___flmul@prod+2,f,c
  5449  001E36  221C               	addwfc	___flmul@prod+3,f,c
  5450  001E38  500A               	movf	___flmul@a,w,c
  5451  001E3A  0208               	mulwf	___flmul@b+2,c
  5452  001E3C  CFF3 F01D          	movff	prodl,___flmul@temp
  5453  001E40  CFF4 F01E          	movff	prodh,___flmul@temp+1
  5454  001E44  501D               	movf	___flmul@temp,w,c
  5455  001E46  2614               	addwf	___flmul@grs,f,c
  5456  001E48  0E00               	movlw	0
  5457  001E4A  2215               	addwfc	___flmul@grs+1,f,c
  5458  001E4C  2216               	addwfc	___flmul@grs+2,f,c
  5459  001E4E  2217               	addwfc	___flmul@grs+3,f,c
  5460  001E50  501E               	movf	___flmul@temp+1,w,c
  5461  001E52  2619               	addwf	___flmul@prod,f,c
  5462  001E54  0E00               	movlw	0
  5463  001E56  221A               	addwfc	___flmul@prod+1,f,c
  5464  001E58  221B               	addwfc	___flmul@prod+2,f,c
  5465  001E5A  221C               	addwfc	___flmul@prod+3,f,c
  5466  001E5C  C016  F017         	movff	___flmul@grs+2,___flmul@grs+3
  5467  001E60  C015  F016         	movff	___flmul@grs+1,___flmul@grs+2
  5468  001E64  C014  F015         	movff	___flmul@grs,___flmul@grs+1
  5469  001E68  6A14               	clrf	___flmul@grs,c
  5470  001E6A  500A               	movf	___flmul@a,w,c
  5471  001E6C  0207               	mulwf	___flmul@b+1,c
  5472  001E6E  CFF3 F01D          	movff	prodl,___flmul@temp
  5473  001E72  CFF4 F01E          	movff	prodh,___flmul@temp+1
  5474  001E76  501D               	movf	___flmul@temp,w,c
  5475  001E78  2614               	addwf	___flmul@grs,f,c
  5476  001E7A  501E               	movf	___flmul@temp+1,w,c
  5477  001E7C  2215               	addwfc	___flmul@grs+1,f,c
  5478  001E7E  0E00               	movlw	0
  5479  001E80  2216               	addwfc	___flmul@grs+2,f,c
  5480  001E82  0E00               	movlw	0
  5481  001E84  2217               	addwfc	___flmul@grs+3,f,c
  5482  001E86  500B               	movf	___flmul@a+1,w,c
  5483  001E88  0206               	mulwf	___flmul@b,c
  5484  001E8A  CFF3 F01D          	movff	prodl,___flmul@temp
  5485  001E8E  CFF4 F01E          	movff	prodh,___flmul@temp+1
  5486  001E92  501D               	movf	___flmul@temp,w,c
  5487  001E94  2614               	addwf	___flmul@grs,f,c
  5488  001E96  501E               	movf	___flmul@temp+1,w,c
  5489  001E98  2215               	addwfc	___flmul@grs+1,f,c
  5490  001E9A  0E00               	movlw	0
  5491  001E9C  2216               	addwfc	___flmul@grs+2,f,c
  5492  001E9E  0E00               	movlw	0
  5493  001EA0  2217               	addwfc	___flmul@grs+3,f,c
  5494  001EA2  C016  F017         	movff	___flmul@grs+2,___flmul@grs+3
  5495  001EA6  C015  F016         	movff	___flmul@grs+1,___flmul@grs+2
  5496  001EAA  C014  F015         	movff	___flmul@grs,___flmul@grs+1
  5497  001EAE  6A14               	clrf	___flmul@grs,c
  5498  001EB0  500A               	movf	___flmul@a,w,c
  5499  001EB2  0206               	mulwf	___flmul@b,c
  5500  001EB4  CFF3 F01D          	movff	prodl,___flmul@temp
  5501  001EB8  CFF4 F01E          	movff	prodh,___flmul@temp+1
  5502  001EBC  501D               	movf	___flmul@temp,w,c
  5503  001EBE  2614               	addwf	___flmul@grs,f,c
  5504  001EC0  501E               	movf	___flmul@temp+1,w,c
  5505  001EC2  2215               	addwfc	___flmul@grs+1,f,c
  5506  001EC4  0E00               	movlw	0
  5507  001EC6  2216               	addwfc	___flmul@grs+2,f,c
  5508  001EC8  0E00               	movlw	0
  5509  001ECA  2217               	addwfc	___flmul@grs+3,f,c
  5510  001ECC  500C               	movf	___flmul@a+2,w,c
  5511  001ECE  0207               	mulwf	___flmul@b+1,c
  5512  001ED0  CFF3 F01D          	movff	prodl,___flmul@temp
  5513  001ED4  CFF4 F01E          	movff	prodh,___flmul@temp+1
  5514  001ED8  501D               	movf	___flmul@temp,w,c
  5515  001EDA  2619               	addwf	___flmul@prod,f,c
  5516  001EDC  501E               	movf	___flmul@temp+1,w,c
  5517  001EDE  221A               	addwfc	___flmul@prod+1,f,c
  5518  001EE0  0E00               	movlw	0
  5519  001EE2  221B               	addwfc	___flmul@prod+2,f,c
  5520  001EE4  0E00               	movlw	0
  5521  001EE6  221C               	addwfc	___flmul@prod+3,f,c
  5522  001EE8  500B               	movf	___flmul@a+1,w,c
  5523  001EEA  0208               	mulwf	___flmul@b+2,c
  5524  001EEC  CFF3 F01D          	movff	prodl,___flmul@temp
  5525  001EF0  CFF4 F01E          	movff	prodh,___flmul@temp+1
  5526  001EF4  501D               	movf	___flmul@temp,w,c
  5527  001EF6  2619               	addwf	___flmul@prod,f,c
  5528  001EF8  501E               	movf	___flmul@temp+1,w,c
  5529  001EFA  221A               	addwfc	___flmul@prod+1,f,c
  5530  001EFC  0E00               	movlw	0
  5531  001EFE  221B               	addwfc	___flmul@prod+2,f,c
  5532  001F00  0E00               	movlw	0
  5533  001F02  221C               	addwfc	___flmul@prod+3,f,c
  5534  001F04  500C               	movf	___flmul@a+2,w,c
  5535  001F06  0208               	mulwf	___flmul@b+2,c
  5536  001F08  CFF3 F01D          	movff	prodl,___flmul@temp
  5537  001F0C  CFF4 F01E          	movff	prodh,___flmul@temp+1
  5538  001F10  501D               	movf	___flmul@temp,w,c
  5539  001F12  6E0E               	movwf	??___flmul& (0+255),c
  5540  001F14  501E               	movf	___flmul@temp+1,w,c
  5541  001F16  6E0F               	movwf	(??___flmul+1)& (0+255),c
  5542  001F18  6A10               	clrf	(??___flmul+2)& (0+255),c
  5543  001F1A  6A11               	clrf	(??___flmul+3)& (0+255),c
  5544  001F1C  C010  F011         	movff	??___flmul+2,??___flmul+3
  5545  001F20  C00F  F010         	movff	??___flmul+1,??___flmul+2
  5546  001F24  C00E  F00F         	movff	??___flmul,??___flmul+1
  5547  001F28  6A0E               	clrf	??___flmul,c
  5548  001F2A  500E               	movf	??___flmul,w,c
  5549  001F2C  2619               	addwf	___flmul@prod,f,c
  5550  001F2E  500F               	movf	??___flmul+1,w,c
  5551  001F30  221A               	addwfc	___flmul@prod+1,f,c
  5552  001F32  5010               	movf	??___flmul+2,w,c
  5553  001F34  221B               	addwfc	___flmul@prod+2,f,c
  5554  001F36  5011               	movf	??___flmul+3,w,c
  5555  001F38  221C               	addwfc	___flmul@prod+3,f,c
  5556  001F3A  C014  F00E         	movff	___flmul@grs,??___flmul
  5557  001F3E  C015  F00F         	movff	___flmul@grs+1,??___flmul+1
  5558  001F42  C016  F010         	movff	___flmul@grs+2,??___flmul+2
  5559  001F46  C017  F011         	movff	___flmul@grs+3,??___flmul+3
  5560  001F4A  0E19               	movlw	25
  5561  001F4C  D005               	goto	u6070
  5562  001F4E                     u6075:
  5563  001F4E  90D8               	bcf	status,0,c
  5564  001F50  3211               	rrcf	??___flmul+3,f,c
  5565  001F52  3210               	rrcf	??___flmul+2,f,c
  5566  001F54  320F               	rrcf	??___flmul+1,f,c
  5567  001F56  320E               	rrcf	??___flmul,f,c
  5568  001F58                     u6070:
  5569  001F58  2EE8               	decfsz	wreg,f,c
  5570  001F5A  D7F9               	goto	u6075
  5571  001F5C  500E               	movf	??___flmul,w,c
  5572  001F5E  2619               	addwf	___flmul@prod,f,c
  5573  001F60  500F               	movf	??___flmul+1,w,c
  5574  001F62  221A               	addwfc	___flmul@prod+1,f,c
  5575  001F64  5010               	movf	??___flmul+2,w,c
  5576  001F66  221B               	addwfc	___flmul@prod+2,f,c
  5577  001F68  5011               	movf	??___flmul+3,w,c
  5578  001F6A  221C               	addwfc	___flmul@prod+3,f,c
  5579  001F6C  C016  F017         	movff	___flmul@grs+2,___flmul@grs+3
  5580  001F70  C015  F016         	movff	___flmul@grs+1,___flmul@grs+2
  5581  001F74  C014  F015         	movff	___flmul@grs,___flmul@grs+1
  5582  001F78  6A14               	clrf	___flmul@grs,c
  5583  001F7A  5013               	movf	___flmul@aexp,w,c
  5584  001F7C  C018  F00E         	movff	___flmul@bexp,??___flmul
  5585  001F80  6A0F               	clrf	(??___flmul+1)& (0+255),c
  5586  001F82  260E               	addwf	??___flmul,f,c
  5587  001F84  0E00               	movlw	0
  5588  001F86  220F               	addwfc	??___flmul+1,f,c
  5589  001F88  0E82               	movlw	130
  5590  001F8A  240E               	addwf	??___flmul,w,c
  5591  001F8C  6E1D               	movwf	___flmul@temp,c
  5592  001F8E  0EFF               	movlw	255
  5593  001F90  200F               	addwfc	??___flmul+1,w,c
  5594  001F92  6E1E               	movwf	___flmul@temp+1,c
  5595  001F94  D00F               	goto	l4681
  5596  001F96                     l4675:
  5597  001F96  90D8               	bcf	status,0,c
  5598  001F98  3619               	rlcf	___flmul@prod,f,c
  5599  001F9A  361A               	rlcf	___flmul@prod+1,f,c
  5600  001F9C  361B               	rlcf	___flmul@prod+2,f,c
  5601  001F9E  361C               	rlcf	___flmul@prod+3,f,c
  5602  001FA0  BE17               	btfsc	___flmul@grs+3,7,c
  5603  001FA2  8019               	bsf	___flmul@prod,0,c
  5604  001FA4  90D8               	bcf	status,0,c
  5605  001FA6  3614               	rlcf	___flmul@grs,f,c
  5606  001FA8  3615               	rlcf	___flmul@grs+1,f,c
  5607  001FAA  3616               	rlcf	___flmul@grs+2,f,c
  5608  001FAC  3617               	rlcf	___flmul@grs+3,f,c
  5609  001FAE  061D               	decf	___flmul@temp,f,c
  5610  001FB0  A0D8               	btfss	status,0,c
  5611  001FB2  061E               	decf	___flmul@temp+1,f,c
  5612  001FB4                     l4681:
  5613  001FB4  AE1B               	btfss	___flmul@prod+2,7,c
  5614  001FB6  D7EF               	goto	l4675
  5615  001FB8  0E00               	movlw	0
  5616  001FBA  6E13               	movwf	___flmul@aexp,c
  5617  001FBC  AE17               	btfss	___flmul@grs+3,7,c
  5618  001FBE  D017               	goto	l964
  5619  001FC0  0EFF               	movlw	255
  5620  001FC2  1414               	andwf	___flmul@grs,w,c
  5621  001FC4  6E0E               	movwf	??___flmul& (0+255),c
  5622  001FC6  0EFF               	movlw	255
  5623  001FC8  1415               	andwf	___flmul@grs+1,w,c
  5624  001FCA  6E0F               	movwf	(??___flmul+1)& (0+255),c
  5625  001FCC  0EFF               	movlw	255
  5626  001FCE  1416               	andwf	___flmul@grs+2,w,c
  5627  001FD0  6E10               	movwf	(??___flmul+2)& (0+255),c
  5628  001FD2  0E7F               	movlw	127
  5629  001FD4  1417               	andwf	___flmul@grs+3,w,c
  5630  001FD6  6E11               	movwf	(??___flmul+3)& (0+255),c
  5631  001FD8  500E               	movf	??___flmul,w,c
  5632  001FDA  100F               	iorwf	??___flmul+1,w,c
  5633  001FDC  1010               	iorwf	??___flmul+2,w,c
  5634  001FDE  1011               	iorwf	??___flmul+3,w,c
  5635  001FE0  B4D8               	btfsc	status,2,c
  5636  001FE2  D003               	goto	l965
  5637  001FE4                     u6110:
  5638  001FE4  0E01               	movlw	1
  5639  001FE6  6E13               	movwf	___flmul@aexp,c
  5640  001FE8  D002               	goto	l964
  5641  001FEA                     l965:
  5642  001FEA  B019               	btfsc	___flmul@prod,0,c
  5643  001FEC  D7FB               	goto	u6110
  5644  001FEE                     l964:
  5645  001FEE  5013               	movf	___flmul@aexp,w,c
  5646  001FF0  B4D8               	btfsc	status,2,c
  5647  001FF2  D01F               	goto	l4701
  5648  001FF4  0E01               	movlw	1
  5649  001FF6  2619               	addwf	___flmul@prod,f,c
  5650  001FF8  0E00               	movlw	0
  5651  001FFA  221A               	addwfc	___flmul@prod+1,f,c
  5652  001FFC  221B               	addwfc	___flmul@prod+2,f,c
  5653  001FFE  221C               	addwfc	___flmul@prod+3,f,c
  5654  002000  A01C               	btfss	___flmul@prod+3,0,c
  5655  002002  D017               	goto	l4701
  5656  002004  C019  F00E         	movff	___flmul@prod,??___flmul
  5657  002008  C01A  F00F         	movff	___flmul@prod+1,??___flmul+1
  5658  00200C  C01B  F010         	movff	___flmul@prod+2,??___flmul+2
  5659  002010  C01C  F011         	movff	___flmul@prod+3,??___flmul+3
  5660  002014  3411               	rlcf	??___flmul+3,w,c
  5661  002016  3211               	rrcf	??___flmul+3,f,c
  5662  002018  3210               	rrcf	??___flmul+2,f,c
  5663  00201A  320F               	rrcf	??___flmul+1,f,c
  5664  00201C  320E               	rrcf	??___flmul,f,c
  5665  00201E  C00E  F019         	movff	??___flmul,___flmul@prod
  5666  002022  C00F  F01A         	movff	??___flmul+1,___flmul@prod+1
  5667  002026  C010  F01B         	movff	??___flmul+2,___flmul@prod+2
  5668  00202A  C011  F01C         	movff	??___flmul+3,___flmul@prod+3
  5669  00202E  4A1D               	infsnz	___flmul@temp,f,c
  5670  002030  2A1E               	incf	___flmul@temp+1,f,c
  5671  002032                     l4701:
  5672  002032  BE1E               	btfsc	___flmul@temp+1,7,c
  5673  002034  D00D               	goto	l4705
  5674  002036  501E               	movf	___flmul@temp+1,w,c
  5675  002038  E103               	bnz	u6150
  5676  00203A  281D               	incf	___flmul@temp,w,c
  5677  00203C  A0D8               	btfss	status,0,c
  5678  00203E  D008               	goto	l4705
  5679  002040                     u6150:
  5680  002040  0E00               	movlw	0
  5681  002042  6E19               	movwf	___flmul@prod,c
  5682  002044  0E00               	movlw	0
  5683  002046  6E1A               	movwf	___flmul@prod+1,c
  5684  002048  0E80               	movlw	128
  5685  00204A  6E1B               	movwf	___flmul@prod+2,c
  5686  00204C  0E7F               	movlw	127
  5687  00204E  D020               	goto	L10
  5688  002050                     l4705:
  5689  002050  BE1E               	btfsc	___flmul@temp+1,7,c
  5690  002052  D005               	goto	u6160
  5691  002054  501E               	movf	___flmul@temp+1,w,c
  5692  002056  E10E               	bnz	l972
  5693  002058  041D               	decf	___flmul@temp,w,c
  5694  00205A  B0D8               	btfsc	status,0,c
  5695  00205C  D00B               	goto	l972
  5696  00205E                     u6160:
  5697  00205E  0E00               	movlw	0
  5698  002060  6E19               	movwf	___flmul@prod,c
  5699  002062  0E00               	movlw	0
  5700  002064  6E1A               	movwf	___flmul@prod+1,c
  5701  002066  0E00               	movlw	0
  5702  002068  6E1B               	movwf	___flmul@prod+2,c
  5703  00206A  0E00               	movlw	0
  5704  00206C  6E1C               	movwf	___flmul@prod+3,c
  5705  00206E  0E00               	movlw	0
  5706  002070  6E12               	movwf	___flmul@sign,c
  5707  002072  D00F               	goto	l4717
  5708  002074                     l972:
  5709  002074  C01D  F018         	movff	___flmul@temp,___flmul@bexp
  5710  002078  0EFF               	movlw	255
  5711  00207A  1619               	andwf	___flmul@prod,f,c
  5712  00207C  0EFF               	movlw	255
  5713  00207E  161A               	andwf	___flmul@prod+1,f,c
  5714  002080  0E7F               	movlw	127
  5715  002082  161B               	andwf	___flmul@prod+2,f,c
  5716  002084  0E00               	movlw	0
  5717  002086  161C               	andwf	___flmul@prod+3,f,c
  5718  002088  B018               	btfsc	___flmul@bexp,0,c
  5719  00208A  8E1B               	bsf	___flmul@prod+2,7,c
  5720  00208C  90D8               	bcf	status,0,c
  5721  00208E  3018               	rrcf	___flmul@bexp,w,c
  5722  002090                     L10:
  5723  002090  6E1C               	movwf	___flmul@prod+3,c
  5724  002092                     l4717:
  5725  002092  5012               	movf	___flmul@sign,w,c
  5726  002094  121C               	iorwf	___flmul@prod+3,f,c
  5727  002096  C019  F006         	movff	___flmul@prod,?___flmul
  5728  00209A  C01A  F007         	movff	___flmul@prod+1,?___flmul+1
  5729  00209E  C01B  F008         	movff	___flmul@prod+2,?___flmul+2
  5730  0020A2  C01C  F009         	movff	___flmul@prod+3,?___flmul+3
  5731  0020A6  0012               	return		;funcret
  5732  0020A8                     __end_of___flmul:
  5733                           	opt callstack 0
  5734                           
  5735 ;; *************** function ___flge *****************
  5736 ;; Defined at:
  5737 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  ff1             4   30[COMRAM] unsigned char 
  5740 ;;  ff2             4   34[COMRAM] unsigned char 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;		None
  5743 ;; Return value:  Size  Location     Type
  5744 ;;		None               void
  5745 ;; Registers used:
  5746 ;;		wreg, status,2, status,0
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5752 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5754 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5755 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5756 ;;Total ram usage:       12 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:    1
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_efgtoa
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text21
  5767  002A86                     __ptext21:
  5768                           	opt callstack 0
  5769  002A86                     ___flge:
  5770                           	opt callstack 25
  5771                           
  5772                           ;incstack = 0
  5773  002A86  0E00               	movlw	0
  5774  002A88  141F               	andwf	___flge@ff1,w,c
  5775  002A8A  6E27               	movwf	??___flge& (0+255),c
  5776  002A8C  0E00               	movlw	0
  5777  002A8E  1420               	andwf	___flge@ff1+1,w,c
  5778  002A90  6E28               	movwf	(??___flge+1)& (0+255),c
  5779  002A92  0E80               	movlw	128
  5780  002A94  1421               	andwf	___flge@ff1+2,w,c
  5781  002A96  6E29               	movwf	(??___flge+2)& (0+255),c
  5782  002A98  0E7F               	movlw	127
  5783  002A9A  1422               	andwf	___flge@ff1+3,w,c
  5784  002A9C  6E2A               	movwf	(??___flge+3)& (0+255),c
  5785  002A9E  5027               	movf	??___flge,w,c
  5786  002AA0  1028               	iorwf	??___flge+1,w,c
  5787  002AA2  1029               	iorwf	??___flge+2,w,c
  5788  002AA4  102A               	iorwf	??___flge+3,w,c
  5789  002AA6  A4D8               	btfss	status,2,c
  5790  002AA8  D008               	goto	l4829
  5791  002AAA  0E00               	movlw	0
  5792  002AAC  6E1F               	movwf	___flge@ff1,c
  5793  002AAE  0E00               	movlw	0
  5794  002AB0  6E20               	movwf	___flge@ff1+1,c
  5795  002AB2  0E00               	movlw	0
  5796  002AB4  6E21               	movwf	___flge@ff1+2,c
  5797  002AB6  0E00               	movlw	0
  5798  002AB8  6E22               	movwf	___flge@ff1+3,c
  5799  002ABA                     l4829:
  5800  002ABA  0E00               	movlw	0
  5801  002ABC  1423               	andwf	___flge@ff2,w,c
  5802  002ABE  6E27               	movwf	??___flge& (0+255),c
  5803  002AC0  0E00               	movlw	0
  5804  002AC2  1424               	andwf	___flge@ff2+1,w,c
  5805  002AC4  6E28               	movwf	(??___flge+1)& (0+255),c
  5806  002AC6  0E80               	movlw	128
  5807  002AC8  1425               	andwf	___flge@ff2+2,w,c
  5808  002ACA  6E29               	movwf	(??___flge+2)& (0+255),c
  5809  002ACC  0E7F               	movlw	127
  5810  002ACE  1426               	andwf	___flge@ff2+3,w,c
  5811  002AD0  6E2A               	movwf	(??___flge+3)& (0+255),c
  5812  002AD2  5027               	movf	??___flge,w,c
  5813  002AD4  1028               	iorwf	??___flge+1,w,c
  5814  002AD6  1029               	iorwf	??___flge+2,w,c
  5815  002AD8  102A               	iorwf	??___flge+3,w,c
  5816  002ADA  A4D8               	btfss	status,2,c
  5817  002ADC  D008               	goto	l4833
  5818  002ADE  0E00               	movlw	0
  5819  002AE0  6E23               	movwf	___flge@ff2,c
  5820  002AE2  0E00               	movlw	0
  5821  002AE4  6E24               	movwf	___flge@ff2+1,c
  5822  002AE6  0E00               	movlw	0
  5823  002AE8  6E25               	movwf	___flge@ff2+2,c
  5824  002AEA  0E00               	movlw	0
  5825  002AEC  6E26               	movwf	___flge@ff2+3,c
  5826  002AEE                     l4833:
  5827  002AEE  AE22               	btfss	___flge@ff1+3,7,c
  5828  002AF0  D009               	goto	l4837
  5829  002AF2  6C1F               	negf	___flge@ff1,c
  5830  002AF4  1E20               	comf	___flge@ff1+1,f,c
  5831  002AF6  B0D8               	btfsc	status,0,c
  5832  002AF8  2A20               	incf	___flge@ff1+1,f,c
  5833  002AFA  1E21               	comf	___flge@ff1+2,f,c
  5834  002AFC  B0D8               	btfsc	status,0,c
  5835  002AFE  2A21               	incf	___flge@ff1+2,f,c
  5836  002B00  0E80               	movlw	128
  5837  002B02  5622               	subfwb	___flge@ff1+3,f,c
  5838  002B04                     l4837:
  5839  002B04  AE26               	btfss	___flge@ff2+3,7,c
  5840  002B06  D009               	goto	l606
  5841  002B08  6C23               	negf	___flge@ff2,c
  5842  002B0A  1E24               	comf	___flge@ff2+1,f,c
  5843  002B0C  B0D8               	btfsc	status,0,c
  5844  002B0E  2A24               	incf	___flge@ff2+1,f,c
  5845  002B10  1E25               	comf	___flge@ff2+2,f,c
  5846  002B12  B0D8               	btfsc	status,0,c
  5847  002B14  2A25               	incf	___flge@ff2+2,f,c
  5848  002B16  0E80               	movlw	128
  5849  002B18  5626               	subfwb	___flge@ff2+3,f,c
  5850  002B1A                     l606:
  5851  002B1A  0E00               	movlw	0
  5852  002B1C  1A1F               	xorwf	___flge@ff1,f,c
  5853  002B1E  0E00               	movlw	0
  5854  002B20  1A20               	xorwf	___flge@ff1+1,f,c
  5855  002B22  0E00               	movlw	0
  5856  002B24  1A21               	xorwf	___flge@ff1+2,f,c
  5857  002B26  0E80               	movlw	128
  5858  002B28  1A22               	xorwf	___flge@ff1+3,f,c
  5859  002B2A  0E00               	movlw	0
  5860  002B2C  1A23               	xorwf	___flge@ff2,f,c
  5861  002B2E  0E00               	movlw	0
  5862  002B30  1A24               	xorwf	___flge@ff2+1,f,c
  5863  002B32  0E00               	movlw	0
  5864  002B34  1A25               	xorwf	___flge@ff2+2,f,c
  5865  002B36  0E80               	movlw	128
  5866  002B38  1A26               	xorwf	___flge@ff2+3,f,c
  5867  002B3A  5023               	movf	___flge@ff2,w,c
  5868  002B3C  5C1F               	subwf	___flge@ff1,w,c
  5869  002B3E  5024               	movf	___flge@ff2+1,w,c
  5870  002B40  5820               	subwfb	___flge@ff1+1,w,c
  5871  002B42  5025               	movf	___flge@ff2+2,w,c
  5872  002B44  5821               	subwfb	___flge@ff1+2,w,c
  5873  002B46  5026               	movf	___flge@ff2+3,w,c
  5874  002B48  5822               	subwfb	___flge@ff1+3,w,c
  5875  002B4A  B0D8               	btfsc	status,0,c
  5876  002B4C  D002               	goto	l4843
  5877  002B4E  90D8               	bcf	status,0,c
  5878  002B50  0012               	return	
  5879  002B52                     l4843:
  5880  002B52  80D8               	bsf	status,0,c
  5881  002B54  0012               	return		;funcret
  5882  002B56                     __end_of___flge:
  5883                           	opt callstack 0
  5884                           
  5885 ;; *************** function ___fleq *****************
  5886 ;; Defined at:
  5887 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;  ff1             4    5[COMRAM] unsigned char 
  5890 ;;  ff2             4    9[COMRAM] unsigned char 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;		None
  5893 ;; Return value:  Size  Location     Type
  5894 ;;		None               void
  5895 ;; Registers used:
  5896 ;;		wreg, status,2, status,0
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5902 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5904 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5905 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5906 ;;Total ram usage:       12 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:    1
  5909 ;; This function calls:
  5910 ;;		Nothing
  5911 ;; This function is called by:
  5912 ;;		_efgtoa
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text22
  5917  002F78                     __ptext22:
  5918                           	opt callstack 0
  5919  002F78                     ___fleq:
  5920                           	opt callstack 25
  5921                           
  5922                           ;incstack = 0
  5923  002F78  0E00               	movlw	0
  5924  002F7A  1406               	andwf	___fleq@ff1,w,c
  5925  002F7C  6E0E               	movwf	??___fleq& (0+255),c
  5926  002F7E  0E00               	movlw	0
  5927  002F80  1407               	andwf	___fleq@ff1+1,w,c
  5928  002F82  6E0F               	movwf	(??___fleq+1)& (0+255),c
  5929  002F84  0E80               	movlw	128
  5930  002F86  1408               	andwf	___fleq@ff1+2,w,c
  5931  002F88  6E10               	movwf	(??___fleq+2)& (0+255),c
  5932  002F8A  0E7F               	movlw	127
  5933  002F8C  1409               	andwf	___fleq@ff1+3,w,c
  5934  002F8E  6E11               	movwf	(??___fleq+3)& (0+255),c
  5935  002F90  500E               	movf	??___fleq,w,c
  5936  002F92  100F               	iorwf	??___fleq+1,w,c
  5937  002F94  1010               	iorwf	??___fleq+2,w,c
  5938  002F96  1011               	iorwf	??___fleq+3,w,c
  5939  002F98  A4D8               	btfss	status,2,c
  5940  002F9A  D008               	goto	l4813
  5941  002F9C  0E00               	movlw	0
  5942  002F9E  6E06               	movwf	___fleq@ff1,c
  5943  002FA0  0E00               	movlw	0
  5944  002FA2  6E07               	movwf	___fleq@ff1+1,c
  5945  002FA4  0E00               	movlw	0
  5946  002FA6  6E08               	movwf	___fleq@ff1+2,c
  5947  002FA8  0E00               	movlw	0
  5948  002FAA  6E09               	movwf	___fleq@ff1+3,c
  5949  002FAC                     l4813:
  5950  002FAC  0E00               	movlw	0
  5951  002FAE  140A               	andwf	___fleq@ff2,w,c
  5952  002FB0  6E0E               	movwf	??___fleq& (0+255),c
  5953  002FB2  0E00               	movlw	0
  5954  002FB4  140B               	andwf	___fleq@ff2+1,w,c
  5955  002FB6  6E0F               	movwf	(??___fleq+1)& (0+255),c
  5956  002FB8  0E80               	movlw	128
  5957  002FBA  140C               	andwf	___fleq@ff2+2,w,c
  5958  002FBC  6E10               	movwf	(??___fleq+2)& (0+255),c
  5959  002FBE  0E7F               	movlw	127
  5960  002FC0  140D               	andwf	___fleq@ff2+3,w,c
  5961  002FC2  6E11               	movwf	(??___fleq+3)& (0+255),c
  5962  002FC4  500E               	movf	??___fleq,w,c
  5963  002FC6  100F               	iorwf	??___fleq+1,w,c
  5964  002FC8  1010               	iorwf	??___fleq+2,w,c
  5965  002FCA  1011               	iorwf	??___fleq+3,w,c
  5966  002FCC  A4D8               	btfss	status,2,c
  5967  002FCE  D008               	goto	l4817
  5968  002FD0  0E00               	movlw	0
  5969  002FD2  6E0A               	movwf	___fleq@ff2,c
  5970  002FD4  0E00               	movlw	0
  5971  002FD6  6E0B               	movwf	___fleq@ff2+1,c
  5972  002FD8  0E00               	movlw	0
  5973  002FDA  6E0C               	movwf	___fleq@ff2+2,c
  5974  002FDC  0E00               	movlw	0
  5975  002FDE  6E0D               	movwf	___fleq@ff2+3,c
  5976  002FE0                     l4817:
  5977  002FE0  500A               	movf	___fleq@ff2,w,c
  5978  002FE2  1806               	xorwf	___fleq@ff1,w,c
  5979  002FE4  E10A               	bnz	u6320
  5980  002FE6  500B               	movf	___fleq@ff2+1,w,c
  5981  002FE8  1807               	xorwf	___fleq@ff1+1,w,c
  5982  002FEA  E107               	bnz	u6320
  5983  002FEC  500C               	movf	___fleq@ff2+2,w,c
  5984  002FEE  1808               	xorwf	___fleq@ff1+2,w,c
  5985  002FF0  E104               	bnz	u6320
  5986  002FF2  500D               	movf	___fleq@ff2+3,w,c
  5987  002FF4  1809               	xorwf	___fleq@ff1+3,w,c
  5988  002FF6  B4D8               	btfsc	status,2,c
  5989  002FF8  D002               	goto	l4821
  5990  002FFA                     u6320:
  5991  002FFA  90D8               	bcf	status,0,c
  5992  002FFC  0012               	return	
  5993  002FFE                     l4821:
  5994  002FFE  80D8               	bsf	status,0,c
  5995  003000  0012               	return		;funcret
  5996  003002                     __end_of___fleq:
  5997                           	opt callstack 0
  5998                           
  5999 ;; *************** function ___fldiv *****************
  6000 ;; Defined at:
  6001 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;  b               4   19[COMRAM] unsigned char 
  6004 ;;  a               4   23[COMRAM] unsigned char 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  grs             4   38[COMRAM] unsigned long 
  6007 ;;  rem             4   31[COMRAM] unsigned long 
  6008 ;;  new_exp         2   36[COMRAM] short 
  6009 ;;  aexp            1   43[COMRAM] unsigned char 
  6010 ;;  bexp            1   42[COMRAM] unsigned char 
  6011 ;;  sign            1   35[COMRAM] unsigned char 
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  4   19[COMRAM] unsigned char 
  6014 ;; Registers used:
  6015 ;;		wreg, status,2, status,0
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6021 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6022 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6023 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6024 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6025 ;;Total ram usage:       25 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    1
  6028 ;; This function calls:
  6029 ;;		Nothing
  6030 ;; This function is called by:
  6031 ;;		_main
  6032 ;;		_efgtoa
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           	psect	text23
  6037  0023B4                     __ptext23:
  6038                           	opt callstack 0
  6039  0023B4                     ___fldiv:
  6040                           	opt callstack 25
  6041                           
  6042                           ;incstack = 0
  6043  0023B4  5017               	movf	___fldiv@b+3,w,c
  6044  0023B6  0B80               	andlw	128
  6045  0023B8  6E24               	movwf	___fldiv@sign,c
  6046  0023BA  5017               	movf	___fldiv@b+3,w,c
  6047  0023BC  2417               	addwf	___fldiv@b+3,w,c
  6048  0023BE  6E2B               	movwf	___fldiv@bexp,c
  6049  0023C0  BE16               	btfsc	___fldiv@b+2,7,c
  6050  0023C2  802B               	bsf	___fldiv@bexp,0,c
  6051  0023C4  502B               	movf	___fldiv@bexp,w,c
  6052  0023C6  B4D8               	btfsc	status,2,c
  6053  0023C8  D00D               	goto	l4471
  6054  0023CA  282B               	incf	___fldiv@bexp,w,c
  6055  0023CC  A4D8               	btfss	status,2,c
  6056  0023CE  D008               	goto	l4467
  6057  0023D0  0E00               	movlw	0
  6058  0023D2  6E14               	movwf	___fldiv@b,c
  6059  0023D4  0E00               	movlw	0
  6060  0023D6  6E15               	movwf	___fldiv@b+1,c
  6061  0023D8  0E00               	movlw	0
  6062  0023DA  6E16               	movwf	___fldiv@b+2,c
  6063  0023DC  0E00               	movlw	0
  6064  0023DE  6E17               	movwf	___fldiv@b+3,c
  6065  0023E0                     l4467:
  6066  0023E0  8E16               	bsf	___fldiv@b+2,7,c
  6067  0023E2  D006               	goto	L11
  6068  0023E4                     l4471:
  6069  0023E4  0E00               	movlw	0
  6070  0023E6  6E14               	movwf	___fldiv@b,c
  6071  0023E8  0E00               	movlw	0
  6072  0023EA  6E15               	movwf	___fldiv@b+1,c
  6073  0023EC  0E00               	movlw	0
  6074  0023EE  6E16               	movwf	___fldiv@b+2,c
  6075  0023F0                     L11:
  6076  0023F0  0E00               	movlw	0
  6077  0023F2  6E17               	movwf	___fldiv@b+3,c
  6078  0023F4  501B               	movf	___fldiv@a+3,w,c
  6079  0023F6  0B80               	andlw	128
  6080  0023F8  1A24               	xorwf	___fldiv@sign,f,c
  6081  0023FA  501B               	movf	___fldiv@a+3,w,c
  6082  0023FC  241B               	addwf	___fldiv@a+3,w,c
  6083  0023FE  6E2C               	movwf	___fldiv@aexp,c
  6084  002400  BE1A               	btfsc	___fldiv@a+2,7,c
  6085  002402  802C               	bsf	___fldiv@aexp,0,c
  6086  002404  502C               	movf	___fldiv@aexp,w,c
  6087  002406  B4D8               	btfsc	status,2,c
  6088  002408  D00D               	goto	l4491
  6089  00240A  282C               	incf	___fldiv@aexp,w,c
  6090  00240C  A4D8               	btfss	status,2,c
  6091  00240E  D008               	goto	l4487
  6092  002410  0E00               	movlw	0
  6093  002412  6E18               	movwf	___fldiv@a,c
  6094  002414  0E00               	movlw	0
  6095  002416  6E19               	movwf	___fldiv@a+1,c
  6096  002418  0E00               	movlw	0
  6097  00241A  6E1A               	movwf	___fldiv@a+2,c
  6098  00241C  0E00               	movlw	0
  6099  00241E  6E1B               	movwf	___fldiv@a+3,c
  6100  002420                     l4487:
  6101  002420  8E1A               	bsf	___fldiv@a+2,7,c
  6102  002422  D006               	goto	L12
  6103  002424                     l4491:
  6104  002424  0E00               	movlw	0
  6105  002426  6E18               	movwf	___fldiv@a,c
  6106  002428  0E00               	movlw	0
  6107  00242A  6E19               	movwf	___fldiv@a+1,c
  6108  00242C  0E00               	movlw	0
  6109  00242E  6E1A               	movwf	___fldiv@a+2,c
  6110  002430                     L12:
  6111  002430  0E00               	movlw	0
  6112  002432  6E1B               	movwf	___fldiv@a+3,c
  6113  002434  5018               	movf	___fldiv@a,w,c
  6114  002436  1019               	iorwf	___fldiv@a+1,w,c
  6115  002438  101A               	iorwf	___fldiv@a+2,w,c
  6116  00243A  101B               	iorwf	___fldiv@a+3,w,c
  6117  00243C  A4D8               	btfss	status,2,c
  6118  00243E  D017               	goto	l4505
  6119  002440  0E00               	movlw	0
  6120  002442  6E14               	movwf	___fldiv@b,c
  6121  002444  0E00               	movlw	0
  6122  002446  6E15               	movwf	___fldiv@b+1,c
  6123  002448  0E00               	movlw	0
  6124  00244A  6E16               	movwf	___fldiv@b+2,c
  6125  00244C  0E00               	movlw	0
  6126  00244E  6E17               	movwf	___fldiv@b+3,c
  6127  002450  0E80               	movlw	128
  6128  002452  1216               	iorwf	___fldiv@b+2,f,c
  6129  002454  0E7F               	movlw	127
  6130  002456  1217               	iorwf	___fldiv@b+3,f,c
  6131  002458                     l4499:
  6132  002458  5024               	movf	___fldiv@sign,w,c
  6133  00245A  1217               	iorwf	___fldiv@b+3,f,c
  6134  00245C  C014  F014         	movff	___fldiv@b,?___fldiv
  6135  002460  C015  F015         	movff	___fldiv@b+1,?___fldiv+1
  6136  002464  C016  F016         	movff	___fldiv@b+2,?___fldiv+2
  6137  002468  C017  F017         	movff	___fldiv@b+3,?___fldiv+3
  6138  00246C  0012               	return	
  6139  00246E                     l4505:
  6140  00246E  502B               	movf	___fldiv@bexp,w,c
  6141  002470  A4D8               	btfss	status,2,c
  6142  002472  D009               	goto	l4513
  6143  002474  0E00               	movlw	0
  6144  002476  6E14               	movwf	?___fldiv,c
  6145  002478  0E00               	movlw	0
  6146  00247A  6E15               	movwf	?___fldiv+1,c
  6147  00247C  0E00               	movlw	0
  6148  00247E  6E16               	movwf	?___fldiv+2,c
  6149  002480  0E00               	movlw	0
  6150  002482  6E17               	movwf	?___fldiv+3,c
  6151  002484  0012               	return	
  6152  002486                     l4513:
  6153  002486  502C               	movf	___fldiv@aexp,w,c
  6154  002488  C02B  F01C         	movff	___fldiv@bexp,??___fldiv
  6155  00248C  6A1D               	clrf	(??___fldiv+1)& (0+255),c
  6156  00248E  5E1C               	subwf	??___fldiv,f,c
  6157  002490  0E00               	movlw	0
  6158  002492  5A1D               	subwfb	??___fldiv+1,f,c
  6159  002494  0E7F               	movlw	127
  6160  002496  241C               	addwf	??___fldiv,w,c
  6161  002498  6E25               	movwf	___fldiv@new_exp,c
  6162  00249A  0E00               	movlw	0
  6163  00249C  201D               	addwfc	??___fldiv+1,w,c
  6164  00249E  6E26               	movwf	___fldiv@new_exp+1,c
  6165  0024A0  C014  F020         	movff	___fldiv@b,___fldiv@rem
  6166  0024A4  C015  F021         	movff	___fldiv@b+1,___fldiv@rem+1
  6167  0024A8  C016  F022         	movff	___fldiv@b+2,___fldiv@rem+2
  6168  0024AC  C017  F023         	movff	___fldiv@b+3,___fldiv@rem+3
  6169  0024B0  0E00               	movlw	0
  6170  0024B2  6E14               	movwf	___fldiv@b,c
  6171  0024B4  0E00               	movlw	0
  6172  0024B6  6E15               	movwf	___fldiv@b+1,c
  6173  0024B8  0E00               	movlw	0
  6174  0024BA  6E16               	movwf	___fldiv@b+2,c
  6175  0024BC  0E00               	movlw	0
  6176  0024BE  6E17               	movwf	___fldiv@b+3,c
  6177  0024C0  0E00               	movlw	0
  6178  0024C2  6E27               	movwf	___fldiv@grs,c
  6179  0024C4  0E00               	movlw	0
  6180  0024C6  6E28               	movwf	___fldiv@grs+1,c
  6181  0024C8  0E00               	movlw	0
  6182  0024CA  6E29               	movwf	___fldiv@grs+2,c
  6183  0024CC  0E00               	movlw	0
  6184  0024CE  6E2A               	movwf	___fldiv@grs+3,c
  6185  0024D0  0E00               	movlw	0
  6186  0024D2  6E2C               	movwf	___fldiv@aexp,c
  6187  0024D4  D028               	goto	l925
  6188  0024D6                     l4523:
  6189  0024D6  502C               	movf	___fldiv@aexp,w,c
  6190  0024D8  B4D8               	btfsc	status,2,c
  6191  0024DA  D011               	goto	l4531
  6192  0024DC  90D8               	bcf	status,0,c
  6193  0024DE  3620               	rlcf	___fldiv@rem,f,c
  6194  0024E0  3621               	rlcf	___fldiv@rem+1,f,c
  6195  0024E2  3622               	rlcf	___fldiv@rem+2,f,c
  6196  0024E4  3623               	rlcf	___fldiv@rem+3,f,c
  6197  0024E6  90D8               	bcf	status,0,c
  6198  0024E8  3614               	rlcf	___fldiv@b,f,c
  6199  0024EA  3615               	rlcf	___fldiv@b+1,f,c
  6200  0024EC  3616               	rlcf	___fldiv@b+2,f,c
  6201  0024EE  3617               	rlcf	___fldiv@b+3,f,c
  6202  0024F0  BE2A               	btfsc	___fldiv@grs+3,7,c
  6203  0024F2  8014               	bsf	___fldiv@b,0,c
  6204  0024F4  90D8               	bcf	status,0,c
  6205  0024F6  3627               	rlcf	___fldiv@grs,f,c
  6206  0024F8  3628               	rlcf	___fldiv@grs+1,f,c
  6207  0024FA  3629               	rlcf	___fldiv@grs+2,f,c
  6208  0024FC  362A               	rlcf	___fldiv@grs+3,f,c
  6209  0024FE                     l4531:
  6210  0024FE  5018               	movf	___fldiv@a,w,c
  6211  002500  5C20               	subwf	___fldiv@rem,w,c
  6212  002502  5019               	movf	___fldiv@a+1,w,c
  6213  002504  5821               	subwfb	___fldiv@rem+1,w,c
  6214  002506  501A               	movf	___fldiv@a+2,w,c
  6215  002508  5822               	subwfb	___fldiv@rem+2,w,c
  6216  00250A  501B               	movf	___fldiv@a+3,w,c
  6217  00250C  5823               	subwfb	___fldiv@rem+3,w,c
  6218  00250E  A0D8               	btfss	status,0,c
  6219  002510  D009               	goto	l4537
  6220  002512  8C2A               	bsf	___fldiv@grs+3,6,c
  6221  002514  5018               	movf	___fldiv@a,w,c
  6222  002516  5E20               	subwf	___fldiv@rem,f,c
  6223  002518  5019               	movf	___fldiv@a+1,w,c
  6224  00251A  5A21               	subwfb	___fldiv@rem+1,f,c
  6225  00251C  501A               	movf	___fldiv@a+2,w,c
  6226  00251E  5A22               	subwfb	___fldiv@rem+2,f,c
  6227  002520  501B               	movf	___fldiv@a+3,w,c
  6228  002522  5A23               	subwfb	___fldiv@rem+3,f,c
  6229  002524                     l4537:
  6230  002524  2A2C               	incf	___fldiv@aexp,f,c
  6231  002526                     l925:
  6232  002526  0E19               	movlw	25
  6233  002528  642C               	cpfsgt	___fldiv@aexp,c
  6234  00252A  D7D5               	goto	l4523
  6235  00252C  5020               	movf	___fldiv@rem,w,c
  6236  00252E  1021               	iorwf	___fldiv@rem+1,w,c
  6237  002530  1022               	iorwf	___fldiv@rem+2,w,c
  6238  002532  1023               	iorwf	___fldiv@rem+3,w,c
  6239  002534  B4D8               	btfsc	status,2,c
  6240  002536  D011               	goto	l4549
  6241  002538  8027               	bsf	___fldiv@grs,0,c
  6242  00253A  D00F               	goto	l4549
  6243  00253C                     l4543:
  6244  00253C  90D8               	bcf	status,0,c
  6245  00253E  3614               	rlcf	___fldiv@b,f,c
  6246  002540  3615               	rlcf	___fldiv@b+1,f,c
  6247  002542  3616               	rlcf	___fldiv@b+2,f,c
  6248  002544  3617               	rlcf	___fldiv@b+3,f,c
  6249  002546  BE2A               	btfsc	___fldiv@grs+3,7,c
  6250  002548  8014               	bsf	___fldiv@b,0,c
  6251  00254A  90D8               	bcf	status,0,c
  6252  00254C  3627               	rlcf	___fldiv@grs,f,c
  6253  00254E  3628               	rlcf	___fldiv@grs+1,f,c
  6254  002550  3629               	rlcf	___fldiv@grs+2,f,c
  6255  002552  362A               	rlcf	___fldiv@grs+3,f,c
  6256  002554  0625               	decf	___fldiv@new_exp,f,c
  6257  002556  A0D8               	btfss	status,0,c
  6258  002558  0626               	decf	___fldiv@new_exp+1,f,c
  6259  00255A                     l4549:
  6260  00255A  AE16               	btfss	___fldiv@b+2,7,c
  6261  00255C  D7EF               	goto	l4543
  6262  00255E  0E00               	movlw	0
  6263  002560  6E2C               	movwf	___fldiv@aexp,c
  6264  002562  AE2A               	btfss	___fldiv@grs+3,7,c
  6265  002564  D017               	goto	l936
  6266  002566  0EFF               	movlw	255
  6267  002568  1427               	andwf	___fldiv@grs,w,c
  6268  00256A  6E1C               	movwf	??___fldiv& (0+255),c
  6269  00256C  0EFF               	movlw	255
  6270  00256E  1428               	andwf	___fldiv@grs+1,w,c
  6271  002570  6E1D               	movwf	(??___fldiv+1)& (0+255),c
  6272  002572  0EFF               	movlw	255
  6273  002574  1429               	andwf	___fldiv@grs+2,w,c
  6274  002576  6E1E               	movwf	(??___fldiv+2)& (0+255),c
  6275  002578  0E7F               	movlw	127
  6276  00257A  142A               	andwf	___fldiv@grs+3,w,c
  6277  00257C  6E1F               	movwf	(??___fldiv+3)& (0+255),c
  6278  00257E  501C               	movf	??___fldiv,w,c
  6279  002580  101D               	iorwf	??___fldiv+1,w,c
  6280  002582  101E               	iorwf	??___fldiv+2,w,c
  6281  002584  101F               	iorwf	??___fldiv+3,w,c
  6282  002586  B4D8               	btfsc	status,2,c
  6283  002588  D003               	goto	l937
  6284  00258A                     u5920:
  6285  00258A  0E01               	movlw	1
  6286  00258C  6E2C               	movwf	___fldiv@aexp,c
  6287  00258E  D002               	goto	l936
  6288  002590                     l937:
  6289  002590  B014               	btfsc	___fldiv@b,0,c
  6290  002592  D7FB               	goto	u5920
  6291  002594                     l936:
  6292  002594  502C               	movf	___fldiv@aexp,w,c
  6293  002596  B4D8               	btfsc	status,2,c
  6294  002598  D01F               	goto	l4569
  6295  00259A  0E01               	movlw	1
  6296  00259C  2614               	addwf	___fldiv@b,f,c
  6297  00259E  0E00               	movlw	0
  6298  0025A0  2215               	addwfc	___fldiv@b+1,f,c
  6299  0025A2  2216               	addwfc	___fldiv@b+2,f,c
  6300  0025A4  2217               	addwfc	___fldiv@b+3,f,c
  6301  0025A6  A017               	btfss	___fldiv@b+3,0,c
  6302  0025A8  D017               	goto	l4569
  6303  0025AA  C014  F01C         	movff	___fldiv@b,??___fldiv
  6304  0025AE  C015  F01D         	movff	___fldiv@b+1,??___fldiv+1
  6305  0025B2  C016  F01E         	movff	___fldiv@b+2,??___fldiv+2
  6306  0025B6  C017  F01F         	movff	___fldiv@b+3,??___fldiv+3
  6307  0025BA  341F               	rlcf	??___fldiv+3,w,c
  6308  0025BC  321F               	rrcf	??___fldiv+3,f,c
  6309  0025BE  321E               	rrcf	??___fldiv+2,f,c
  6310  0025C0  321D               	rrcf	??___fldiv+1,f,c
  6311  0025C2  321C               	rrcf	??___fldiv,f,c
  6312  0025C4  C01C  F014         	movff	??___fldiv,___fldiv@b
  6313  0025C8  C01D  F015         	movff	??___fldiv+1,___fldiv@b+1
  6314  0025CC  C01E  F016         	movff	??___fldiv+2,___fldiv@b+2
  6315  0025D0  C01F  F017         	movff	??___fldiv+3,___fldiv@b+3
  6316  0025D4  4A25               	infsnz	___fldiv@new_exp,f,c
  6317  0025D6  2A26               	incf	___fldiv@new_exp+1,f,c
  6318  0025D8                     l4569:
  6319  0025D8  BE26               	btfsc	___fldiv@new_exp+1,7,c
  6320  0025DA  D010               	goto	l4573
  6321  0025DC  5026               	movf	___fldiv@new_exp+1,w,c
  6322  0025DE  E103               	bnz	u5960
  6323  0025E0  2825               	incf	___fldiv@new_exp,w,c
  6324  0025E2  A0D8               	btfss	status,0,c
  6325  0025E4  D00B               	goto	l4573
  6326  0025E6                     u5960:
  6327  0025E6  0E00               	movlw	0
  6328  0025E8  6E26               	movwf	___fldiv@new_exp+1,c
  6329  0025EA  6825               	setf	___fldiv@new_exp,c
  6330  0025EC  0E00               	movlw	0
  6331  0025EE  6E14               	movwf	___fldiv@b,c
  6332  0025F0  0E00               	movlw	0
  6333  0025F2  6E15               	movwf	___fldiv@b+1,c
  6334  0025F4  0E00               	movlw	0
  6335  0025F6  6E16               	movwf	___fldiv@b+2,c
  6336  0025F8  0E00               	movlw	0
  6337  0025FA  6E17               	movwf	___fldiv@b+3,c
  6338  0025FC                     l4573:
  6339  0025FC  BE26               	btfsc	___fldiv@new_exp+1,7,c
  6340  0025FE  D005               	goto	u5970
  6341  002600  5026               	movf	___fldiv@new_exp+1,w,c
  6342  002602  E111               	bnz	l4577
  6343  002604  0425               	decf	___fldiv@new_exp,w,c
  6344  002606  B0D8               	btfsc	status,0,c
  6345  002608  D00E               	goto	l4577
  6346  00260A                     u5970:
  6347  00260A  0E00               	movlw	0
  6348  00260C  6E26               	movwf	___fldiv@new_exp+1,c
  6349  00260E  0E00               	movlw	0
  6350  002610  6E25               	movwf	___fldiv@new_exp,c
  6351  002612  0E00               	movlw	0
  6352  002614  6E14               	movwf	___fldiv@b,c
  6353  002616  0E00               	movlw	0
  6354  002618  6E15               	movwf	___fldiv@b+1,c
  6355  00261A  0E00               	movlw	0
  6356  00261C  6E16               	movwf	___fldiv@b+2,c
  6357  00261E  0E00               	movlw	0
  6358  002620  6E17               	movwf	___fldiv@b+3,c
  6359  002622  0E00               	movlw	0
  6360  002624  6E24               	movwf	___fldiv@sign,c
  6361  002626                     l4577:
  6362  002626  C025  F02B         	movff	___fldiv@new_exp,___fldiv@bexp
  6363  00262A  A02B               	btfss	___fldiv@bexp,0,c
  6364  00262C  D002               	goto	l4583
  6365  00262E  8E16               	bsf	___fldiv@b+2,7,c
  6366  002630  D001               	goto	l4585
  6367  002632                     l4583:
  6368  002632  9E16               	bcf	___fldiv@b+2,7,c
  6369  002634                     l4585:
  6370  002634  90D8               	bcf	status,0,c
  6371  002636  302B               	rrcf	___fldiv@bexp,w,c
  6372  002638  6E17               	movwf	___fldiv@b+3,c
  6373  00263A  D70E               	goto	l4499
  6374  00263C                     __end_of___fldiv:
  6375                           	opt callstack 0
  6376                           
  6377 ;; *************** function ___awmod *****************
  6378 ;; Defined at:
  6379 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  dividend        2    5[COMRAM] int 
  6382 ;;  divisor         2    7[COMRAM] int 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;  sign            1   10[COMRAM] unsigned char 
  6385 ;;  counter         1    9[COMRAM] unsigned char 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  2    5[COMRAM] int 
  6388 ;; Registers used:
  6389 ;;		wreg, status,2, status,0
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6398 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6399 ;;Total ram usage:        6 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:    1
  6402 ;; This function calls:
  6403 ;;		Nothing
  6404 ;; This function is called by:
  6405 ;;		_efgtoa
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text24
  6410  003086                     __ptext24:
  6411                           	opt callstack 0
  6412  003086                     ___awmod:
  6413                           	opt callstack 25
  6414                           
  6415                           ;incstack = 0
  6416  003086  0E00               	movlw	0
  6417  003088  6E0B               	movwf	___awmod@sign,c
  6418  00308A  AE07               	btfss	___awmod@dividend+1,7,c
  6419  00308C  D006               	goto	l4781
  6420  00308E  6C06               	negf	___awmod@dividend,c
  6421  003090  1E07               	comf	___awmod@dividend+1,f,c
  6422  003092  B0D8               	btfsc	status,0,c
  6423  003094  2A07               	incf	___awmod@dividend+1,f,c
  6424  003096  0E01               	movlw	1
  6425  003098  6E0B               	movwf	___awmod@sign,c
  6426  00309A                     l4781:
  6427  00309A  AE09               	btfss	___awmod@divisor+1,7,c
  6428  00309C  D004               	goto	l4785
  6429  00309E  6C08               	negf	___awmod@divisor,c
  6430  0030A0  1E09               	comf	___awmod@divisor+1,f,c
  6431  0030A2  B0D8               	btfsc	status,0,c
  6432  0030A4  2A09               	incf	___awmod@divisor+1,f,c
  6433  0030A6                     l4785:
  6434  0030A6  5008               	movf	___awmod@divisor,w,c
  6435  0030A8  1009               	iorwf	___awmod@divisor+1,w,c
  6436  0030AA  B4D8               	btfsc	status,2,c
  6437  0030AC  D018               	goto	l4801
  6438  0030AE  0E01               	movlw	1
  6439  0030B0  6E0A               	movwf	___awmod@counter,c
  6440  0030B2  D004               	goto	l4791
  6441  0030B4                     l4789:
  6442  0030B4  90D8               	bcf	status,0,c
  6443  0030B6  3608               	rlcf	___awmod@divisor,f,c
  6444  0030B8  3609               	rlcf	___awmod@divisor+1,f,c
  6445  0030BA  2A0A               	incf	___awmod@counter,f,c
  6446  0030BC                     l4791:
  6447  0030BC  AE09               	btfss	___awmod@divisor+1,7,c
  6448  0030BE  D7FA               	goto	l4789
  6449  0030C0                     u6270:
  6450  0030C0  5008               	movf	___awmod@divisor,w,c
  6451  0030C2  5C06               	subwf	___awmod@dividend,w,c
  6452  0030C4  5009               	movf	___awmod@divisor+1,w,c
  6453  0030C6  5807               	subwfb	___awmod@dividend+1,w,c
  6454  0030C8  A0D8               	btfss	status,0,c
  6455  0030CA  D004               	goto	l4797
  6456  0030CC  5008               	movf	___awmod@divisor,w,c
  6457  0030CE  5E06               	subwf	___awmod@dividend,f,c
  6458  0030D0  5009               	movf	___awmod@divisor+1,w,c
  6459  0030D2  5A07               	subwfb	___awmod@dividend+1,f,c
  6460  0030D4                     l4797:
  6461  0030D4  90D8               	bcf	status,0,c
  6462  0030D6  3209               	rrcf	___awmod@divisor+1,f,c
  6463  0030D8  3208               	rrcf	___awmod@divisor,f,c
  6464  0030DA  2E0A               	decfsz	___awmod@counter,f,c
  6465  0030DC  D7F1               	goto	u6270
  6466  0030DE                     l4801:
  6467  0030DE  500B               	movf	___awmod@sign,w,c
  6468  0030E0  B4D8               	btfsc	status,2,c
  6469  0030E2  D004               	goto	l4805
  6470  0030E4  6C06               	negf	___awmod@dividend,c
  6471  0030E6  1E07               	comf	___awmod@dividend+1,f,c
  6472  0030E8  B0D8               	btfsc	status,0,c
  6473  0030EA  2A07               	incf	___awmod@dividend+1,f,c
  6474  0030EC                     l4805:
  6475  0030EC  C006  F006         	movff	___awmod@dividend,?___awmod
  6476  0030F0  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  6477  0030F4  0012               	return		;funcret
  6478  0030F6                     __end_of___awmod:
  6479                           	opt callstack 0
  6480                           
  6481 ;; *************** function ___awdiv *****************
  6482 ;; Defined at:
  6483 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  dividend        2    5[COMRAM] int 
  6486 ;;  divisor         2    7[COMRAM] int 
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;  quotient        2   11[COMRAM] int 
  6489 ;;  sign            1   10[COMRAM] unsigned char 
  6490 ;;  counter         1    9[COMRAM] unsigned char 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  2    5[COMRAM] int 
  6493 ;; Registers used:
  6494 ;;		wreg, status,2, status,0
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6501 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6503 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6504 ;;Total ram usage:        8 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    1
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_efgtoa
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text25
  6515  003002                     __ptext25:
  6516                           	opt callstack 0
  6517  003002                     ___awdiv:
  6518                           	opt callstack 25
  6519                           
  6520                           ;incstack = 0
  6521  003002  0E00               	movlw	0
  6522  003004  6E0B               	movwf	___awdiv@sign,c
  6523  003006  AE09               	btfss	___awdiv@divisor+1,7,c
  6524  003008  D006               	goto	l4737
  6525  00300A  6C08               	negf	___awdiv@divisor,c
  6526  00300C  1E09               	comf	___awdiv@divisor+1,f,c
  6527  00300E  B0D8               	btfsc	status,0,c
  6528  003010  2A09               	incf	___awdiv@divisor+1,f,c
  6529  003012  0E01               	movlw	1
  6530  003014  6E0B               	movwf	___awdiv@sign,c
  6531  003016                     l4737:
  6532  003016  AE07               	btfss	___awdiv@dividend+1,7,c
  6533  003018  D006               	goto	l4743
  6534  00301A  6C06               	negf	___awdiv@dividend,c
  6535  00301C  1E07               	comf	___awdiv@dividend+1,f,c
  6536  00301E  B0D8               	btfsc	status,0,c
  6537  003020  2A07               	incf	___awdiv@dividend+1,f,c
  6538  003022  0E01               	movlw	1
  6539  003024  1A0B               	xorwf	___awdiv@sign,f,c
  6540  003026                     l4743:
  6541  003026  0E00               	movlw	0
  6542  003028  6E0D               	movwf	___awdiv@quotient+1,c
  6543  00302A  0E00               	movlw	0
  6544  00302C  6E0C               	movwf	___awdiv@quotient,c
  6545  00302E  5008               	movf	___awdiv@divisor,w,c
  6546  003030  1009               	iorwf	___awdiv@divisor+1,w,c
  6547  003032  B4D8               	btfsc	status,2,c
  6548  003034  D01C               	goto	l4765
  6549  003036  0E01               	movlw	1
  6550  003038  6E0A               	movwf	___awdiv@counter,c
  6551  00303A  D004               	goto	l4751
  6552  00303C                     l4749:
  6553  00303C  90D8               	bcf	status,0,c
  6554  00303E  3608               	rlcf	___awdiv@divisor,f,c
  6555  003040  3609               	rlcf	___awdiv@divisor+1,f,c
  6556  003042  2A0A               	incf	___awdiv@counter,f,c
  6557  003044                     l4751:
  6558  003044  AE09               	btfss	___awdiv@divisor+1,7,c
  6559  003046  D7FA               	goto	l4749
  6560  003048                     u6210:
  6561  003048  90D8               	bcf	status,0,c
  6562  00304A  360C               	rlcf	___awdiv@quotient,f,c
  6563  00304C  360D               	rlcf	___awdiv@quotient+1,f,c
  6564  00304E  5008               	movf	___awdiv@divisor,w,c
  6565  003050  5C06               	subwf	___awdiv@dividend,w,c
  6566  003052  5009               	movf	___awdiv@divisor+1,w,c
  6567  003054  5807               	subwfb	___awdiv@dividend+1,w,c
  6568  003056  A0D8               	btfss	status,0,c
  6569  003058  D005               	goto	l4761
  6570  00305A  5008               	movf	___awdiv@divisor,w,c
  6571  00305C  5E06               	subwf	___awdiv@dividend,f,c
  6572  00305E  5009               	movf	___awdiv@divisor+1,w,c
  6573  003060  5A07               	subwfb	___awdiv@dividend+1,f,c
  6574  003062  800C               	bsf	___awdiv@quotient,0,c
  6575  003064                     l4761:
  6576  003064  90D8               	bcf	status,0,c
  6577  003066  3209               	rrcf	___awdiv@divisor+1,f,c
  6578  003068  3208               	rrcf	___awdiv@divisor,f,c
  6579  00306A  2E0A               	decfsz	___awdiv@counter,f,c
  6580  00306C  D7ED               	goto	u6210
  6581  00306E                     l4765:
  6582  00306E  500B               	movf	___awdiv@sign,w,c
  6583  003070  B4D8               	btfsc	status,2,c
  6584  003072  D004               	goto	l4769
  6585  003074  6C0C               	negf	___awdiv@quotient,c
  6586  003076  1E0D               	comf	___awdiv@quotient+1,f,c
  6587  003078  B0D8               	btfsc	status,0,c
  6588  00307A  2A0D               	incf	___awdiv@quotient+1,f,c
  6589  00307C                     l4769:
  6590  00307C  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  6591  003080  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  6592  003084  0012               	return		;funcret
  6593  003086                     __end_of___awdiv:
  6594                           	opt callstack 0
  6595                           
  6596 ;; *************** function _atoi *****************
  6597 ;; Defined at:
  6598 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;  s               2   12[COMRAM] PTR const unsigned char 
  6601 ;;		 -> STR_1(9), 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;  n               2   25[COMRAM] int 
  6604 ;;  neg             2   18[COMRAM] int 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  2   12[COMRAM] int 
  6607 ;; Registers used:
  6608 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6615 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6618 ;;Total ram usage:       15 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:    2
  6621 ;; This function calls:
  6622 ;;		___wmul
  6623 ;;		_isdigit
  6624 ;;		_isspace
  6625 ;; This function is called by:
  6626 ;;		_vfpfcnvrt
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text26
  6631  0027F2                     __ptext26:
  6632                           	opt callstack 0
  6633  0027F2                     _atoi:
  6634                           	opt callstack 25
  6635                           
  6636                           ;incstack = 0
  6637  0027F2  0E00               	movlw	0
  6638  0027F4  6E1B               	movwf	atoi@n+1,c
  6639  0027F6  0E00               	movlw	0
  6640  0027F8  6E1A               	movwf	atoi@n,c
  6641  0027FA  0E00               	movlw	0
  6642  0027FC  6E14               	movwf	atoi@neg+1,c
  6643  0027FE  0E00               	movlw	0
  6644  002800  6E13               	movwf	atoi@neg,c
  6645  002802  D002               	goto	l5213
  6646  002804                     l5211:
  6647  002804  4A0D               	infsnz	atoi@s,f,c
  6648  002806  2A0E               	incf	atoi@s+1,f,c
  6649  002808                     l5213:
  6650  002808  0E01               	movlw	1
  6651  00280A  6E19               	movwf	_atoi$1479,c
  6652  00280C  C00D  FFF6         	movff	atoi@s,tblptrl
  6653  002810  C00E  FFF7         	movff	atoi@s+1,tblptrh
  6654  002814                     	if	0	;tblptru may be non-zero
  6655  002814                     	endif
  6656  002814                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6657  002814  0E00               	movlw	low (__mediumconst shr (0+16))
  6658  002816  6EF8               	movwf	tblptru,c
  6659  002818                     	endif
  6660  002818  0008               	tblrd		*
  6661  00281A  50F5               	movf	tablat,w,c
  6662  00281C  0A20               	xorlw	32
  6663  00281E  B4D8               	btfsc	status,2,c
  6664  002820  D01A               	goto	l5221
  6665  002822  0EF7               	movlw	247
  6666  002824  6E0F               	movwf	??_atoi& (0+255),c
  6667  002826  0EFF               	movlw	255
  6668  002828  6E10               	movwf	(??_atoi+1)& (0+255),c
  6669  00282A  C00D  FFF6         	movff	atoi@s,tblptrl
  6670  00282E  C00E  FFF7         	movff	atoi@s+1,tblptrh
  6671  002832                     	if	0	;tblptru may be non-zero
  6672  002832                     	endif
  6673  002832                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6674  002832  0E00               	movlw	low (__mediumconst shr (0+16))
  6675  002834  6EF8               	movwf	tblptru,c
  6676  002836                     	endif
  6677  002836  0008               	tblrd		*
  6678  002838  50F5               	movf	tablat,w,c
  6679  00283A  6E11               	movwf	(??_atoi+2)& (0+255),c
  6680  00283C  6A12               	clrf	(??_atoi+3)& (0+255),c
  6681  00283E  500F               	movf	??_atoi,w,c
  6682  002840  2611               	addwf	??_atoi+2,f,c
  6683  002842  5010               	movf	??_atoi+1,w,c
  6684  002844  2212               	addwfc	??_atoi+3,f,c
  6685  002846  5012               	movf	??_atoi+3,w,c
  6686  002848  E104               	bnz	u7010
  6687  00284A  0E05               	movlw	5
  6688  00284C  5C11               	subwf	??_atoi+2,w,c
  6689  00284E  A0D8               	btfss	status,0,c
  6690  002850  D002               	goto	l5221
  6691  002852                     u7010:
  6692  002852  0E00               	movlw	0
  6693  002854  6E19               	movwf	_atoi$1479,c
  6694  002856                     l5221:
  6695  002856  C019  F015         	movff	_atoi$1479,_atoi$1478
  6696  00285A  6A16               	clrf	_atoi$1478+1,c
  6697  00285C  5015               	movf	_atoi$1478,w,c
  6698  00285E  1016               	iorwf	_atoi$1478+1,w,c
  6699  002860  B4D8               	btfsc	status,2,c
  6700  002862  D008               	goto	l5231
  6701  002864  D7CF               	goto	l5211
  6702  002866                     l5227:
  6703  002866  0E00               	movlw	0
  6704  002868  6E14               	movwf	atoi@neg+1,c
  6705  00286A  0E01               	movlw	1
  6706  00286C  6E13               	movwf	atoi@neg,c
  6707  00286E                     l5229:
  6708  00286E  4A0D               	infsnz	atoi@s,f,c
  6709  002870  2A0E               	incf	atoi@s+1,f,c
  6710  002872  D032               	goto	l5237
  6711  002874                     l5231:
  6712  002874  C00D  FFF6         	movff	atoi@s,tblptrl
  6713  002878  C00E  FFF7         	movff	atoi@s+1,tblptrh
  6714  00287C                     	if	0	;tblptru may be non-zero
  6715  00287C                     	endif
  6716  00287C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6717  00287C  0E00               	movlw	low (__mediumconst shr (0+16))
  6718  00287E  6EF8               	movwf	tblptru,c
  6719  002880                     	endif
  6720  002880  0008               	tblrd		*
  6721  002882  50F5               	movf	tablat,w,c
  6722  002884  6E0F               	movwf	??_atoi& (0+255),c
  6723  002886  6A10               	clrf	(??_atoi+1)& (0+255),c
  6724                           
  6725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6726                           ; Switch size 1, requested type "simple"
  6727                           ; Number of cases is 1, Range of values is 0 to 0
  6728                           ; switch strategies available:
  6729                           ; Name         Instructions Cycles
  6730                           ; simple_byte            4     3 (average)
  6731                           ;	Chosen strategy is simple_byte
  6732  002888  5010               	movf	??_atoi+1,w,c
  6733  00288A  0A00               	xorlw	0	; case 0
  6734  00288C  A4D8               	btfss	status,2,c
  6735  00288E  D024               	goto	l5237
  6736                           
  6737                           ; Switch size 1, requested type "simple"
  6738                           ; Number of cases is 2, Range of values is 43 to 45
  6739                           ; switch strategies available:
  6740                           ; Name         Instructions Cycles
  6741                           ; simple_byte            7     4 (average)
  6742                           ;	Chosen strategy is simple_byte
  6743  002890  500F               	movf	??_atoi,w,c
  6744  002892  0A2B               	xorlw	43	; case 43
  6745  002894  B4D8               	btfsc	status,2,c
  6746  002896  D7EB               	goto	l5229
  6747  002898  0A06               	xorlw	6	; case 45
  6748  00289A  B4D8               	btfsc	status,2,c
  6749  00289C  D7E4               	goto	l5227
  6750  00289E  D01C               	goto	l5237
  6751  0028A0                     l5233:
  6752  0028A0  C01A  F006         	movff	atoi@n,___wmul@multiplier
  6753  0028A4  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  6754  0028A8  0E00               	movlw	0
  6755  0028AA  6E09               	movwf	___wmul@multiplicand+1,c
  6756  0028AC  0E0A               	movlw	10
  6757  0028AE  6E08               	movwf	___wmul@multiplicand,c
  6758  0028B0  EC49  F01A         	call	___wmul	;wreg free
  6759  0028B4  C00D  FFF6         	movff	atoi@s,tblptrl
  6760  0028B8  C00E  FFF7         	movff	atoi@s+1,tblptrh
  6761  0028BC                     	if	0	;tblptru may be non-zero
  6762  0028BC                     	endif
  6763  0028BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6764  0028BC  0E00               	movlw	low (__mediumconst shr (0+16))
  6765  0028BE  6EF8               	movwf	tblptru,c
  6766  0028C0                     	endif
  6767  0028C0  0008               	tblrd		*
  6768  0028C2  50F5               	movf	tablat,w,c
  6769  0028C4  5E06               	subwf	?___wmul,f,c
  6770  0028C6  0E00               	movlw	0
  6771  0028C8  5A07               	subwfb	?___wmul+1,f,c
  6772  0028CA  0E30               	movlw	48
  6773  0028CC  2406               	addwf	?___wmul,w,c
  6774  0028CE  6E1A               	movwf	atoi@n,c
  6775  0028D0  0E00               	movlw	0
  6776  0028D2  2007               	addwfc	?___wmul+1,w,c
  6777  0028D4  6E1B               	movwf	atoi@n+1,c
  6778  0028D6  D7CB               	goto	l5229
  6779  0028D8                     l5237:
  6780  0028D8  0ED0               	movlw	208
  6781  0028DA  6E0F               	movwf	??_atoi& (0+255),c
  6782  0028DC  0EFF               	movlw	255
  6783  0028DE  6E10               	movwf	(??_atoi+1)& (0+255),c
  6784  0028E0  C00D  FFF6         	movff	atoi@s,tblptrl
  6785  0028E4  C00E  FFF7         	movff	atoi@s+1,tblptrh
  6786  0028E8                     	if	0	;tblptru may be non-zero
  6787  0028E8                     	endif
  6788  0028E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6789  0028E8  0E00               	movlw	low (__mediumconst shr (0+16))
  6790  0028EA  6EF8               	movwf	tblptru,c
  6791  0028EC                     	endif
  6792  0028EC  0008               	tblrd		*
  6793  0028EE  50F5               	movf	tablat,w,c
  6794  0028F0  6E11               	movwf	(??_atoi+2)& (0+255),c
  6795  0028F2  6A12               	clrf	(??_atoi+3)& (0+255),c
  6796  0028F4  500F               	movf	??_atoi,w,c
  6797  0028F6  2611               	addwf	??_atoi+2,f,c
  6798  0028F8  5010               	movf	??_atoi+1,w,c
  6799  0028FA  2212               	addwfc	??_atoi+3,f,c
  6800  0028FC  5012               	movf	??_atoi+3,w,c
  6801  0028FE  E106               	bnz	u7030
  6802  002900  0E0A               	movlw	10
  6803  002902  5C11               	subwf	??_atoi+2,w,c
  6804  002904  B0D8               	btfsc	status,0,c
  6805  002906  D002               	goto	u7030
  6806  002908  0E01               	movlw	1
  6807  00290A  D001               	goto	u7040
  6808  00290C                     u7030:
  6809  00290C  0E00               	movlw	0
  6810  00290E                     u7040:
  6811  00290E  6E17               	movwf	_atoi$1480,c
  6812  002910  6A18               	clrf	_atoi$1480+1,c
  6813  002912  5017               	movf	_atoi$1480,w,c
  6814  002914  1018               	iorwf	_atoi$1480+1,w,c
  6815  002916  A4D8               	btfss	status,2,c
  6816  002918  D7C3               	goto	l5233
  6817  00291A  5013               	movf	atoi@neg,w,c
  6818  00291C  1014               	iorwf	atoi@neg+1,w,c
  6819  00291E  A4D8               	btfss	status,2,c
  6820  002920  D00D               	goto	l1051
  6821  002922  C01A  F00F         	movff	atoi@n,??_atoi
  6822  002926  C01B  F010         	movff	atoi@n+1,??_atoi+1
  6823  00292A  1E0F               	comf	??_atoi,f,c
  6824  00292C  1E10               	comf	??_atoi+1,f,c
  6825  00292E  4A0F               	infsnz	??_atoi,f,c
  6826  002930  2A10               	incf	??_atoi+1,f,c
  6827  002932  C00F  F00D         	movff	??_atoi,?_atoi
  6828  002936  C010  F00E         	movff	??_atoi+1,?_atoi+1
  6829  00293A  0012               	return	
  6830  00293C                     l1051:
  6831  00293C  C01A  F00D         	movff	atoi@n,?_atoi
  6832  002940  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  6833  002944  0012               	return		;funcret
  6834  002946                     __end_of_atoi:
  6835                           	opt callstack 0
  6836                           
  6837 ;; *************** function _isspace *****************
  6838 ;; Defined at:
  6839 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  c               2    5[COMRAM] int 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;		None
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  2    5[COMRAM] int 
  6846 ;; Registers used:
  6847 ;;		wreg, status,2, status,0
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6855 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6856 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6857 ;;Total ram usage:        7 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    1
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_atoi
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text27
  6868  003364                     __ptext27:
  6869                           	opt callstack 0
  6870  003364                     _isspace:
  6871                           	opt callstack 25
  6872                           
  6873                           ;incstack = 0
  6874  003364  0E01               	movlw	1
  6875  003366  6E0C               	movwf	_isspace$1509,c
  6876  003368  0E20               	movlw	32
  6877  00336A  1806               	xorwf	isspace@c,w,c
  6878  00336C  1007               	iorwf	isspace@c+1,w,c
  6879  00336E  B4D8               	btfsc	status,2,c
  6880  003370  D014               	goto	l4907
  6881  003372  0EF7               	movlw	247
  6882  003374  6E08               	movwf	??_isspace& (0+255),c
  6883  003376  0EFF               	movlw	255
  6884  003378  6E09               	movwf	(??_isspace+1)& (0+255),c
  6885  00337A  C006  F00A         	movff	isspace@c,??_isspace+2
  6886  00337E  C007  F00B         	movff	isspace@c+1,??_isspace+3
  6887  003382  5008               	movf	??_isspace,w,c
  6888  003384  260A               	addwf	??_isspace+2,f,c
  6889  003386  5009               	movf	??_isspace+1,w,c
  6890  003388  220B               	addwfc	??_isspace+3,f,c
  6891  00338A  500B               	movf	??_isspace+3,w,c
  6892  00338C  E104               	bnz	u6470
  6893  00338E  0E05               	movlw	5
  6894  003390  5C0A               	subwf	??_isspace+2,w,c
  6895  003392  A0D8               	btfss	status,0,c
  6896  003394  D002               	goto	l4907
  6897  003396                     u6470:
  6898  003396  0E00               	movlw	0
  6899  003398  6E0C               	movwf	_isspace$1509,c
  6900  00339A                     l4907:
  6901  00339A  C00C  F006         	movff	_isspace$1509,?_isspace
  6902  00339E  6A07               	clrf	?_isspace+1,c
  6903  0033A0  0012               	return		;funcret
  6904  0033A2                     __end_of_isspace:
  6905                           	opt callstack 0
  6906                           
  6907 ;; *************** function _isdigit *****************
  6908 ;; Defined at:
  6909 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;  c               2    5[COMRAM] int 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  2    5[COMRAM] int 
  6916 ;; Registers used:
  6917 ;;		wreg, status,2, status,0
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6925 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6926 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6927 ;;Total ram usage:        6 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    1
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_vfpfcnvrt
  6934 ;;		_atoi
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text28
  6939  00340A                     __ptext28:
  6940                           	opt callstack 0
  6941  00340A                     _isdigit:
  6942                           	opt callstack 26
  6943                           
  6944                           ;incstack = 0
  6945  00340A  0ED0               	movlw	208
  6946  00340C  6E08               	movwf	??_isdigit& (0+255),c
  6947  00340E  0EFF               	movlw	255
  6948  003410  6E09               	movwf	(??_isdigit+1)& (0+255),c
  6949  003412  C006  F00A         	movff	isdigit@c,??_isdigit+2
  6950  003416  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  6951  00341A  5008               	movf	??_isdigit,w,c
  6952  00341C  260A               	addwf	??_isdigit+2,f,c
  6953  00341E  5009               	movf	??_isdigit+1,w,c
  6954  003420  220B               	addwfc	??_isdigit+3,f,c
  6955  003422  500B               	movf	??_isdigit+3,w,c
  6956  003424  E106               	bnz	u5740
  6957  003426  0E0A               	movlw	10
  6958  003428  5C0A               	subwf	??_isdigit+2,w,c
  6959  00342A  B0D8               	btfsc	status,0,c
  6960  00342C  D002               	goto	u5740
  6961  00342E  0E01               	movlw	1
  6962  003430  D001               	goto	u5750
  6963  003432                     u5740:
  6964  003432  0E00               	movlw	0
  6965  003434                     u5750:
  6966  003434  6E06               	movwf	?_isdigit,c
  6967  003436  6A07               	clrf	?_isdigit+1,c
  6968  003438  0012               	return		;funcret
  6969  00343A                     __end_of_isdigit:
  6970                           	opt callstack 0
  6971                           
  6972 ;; *************** function ___wmul *****************
  6973 ;; Defined at:
  6974 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  multiplier      2    5[COMRAM] unsigned int 
  6977 ;;  multiplicand    2    7[COMRAM] unsigned int 
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  product         2    9[COMRAM] unsigned int 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  2    5[COMRAM] unsigned int 
  6982 ;; Registers used:
  6983 ;;		wreg, status,2, status,0, prodl, prodh
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6990 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6992 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6993 ;;Total ram usage:        6 bytes
  6994 ;; Hardware stack levels used:    1
  6995 ;; Hardware stack levels required when called:    1
  6996 ;; This function calls:
  6997 ;;		Nothing
  6998 ;; This function is called by:
  6999 ;;		_atoi
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text29
  7004  003492                     __ptext29:
  7005                           	opt callstack 0
  7006  003492                     ___wmul:
  7007                           	opt callstack 25
  7008                           
  7009                           ;incstack = 0
  7010  003492  5006               	movf	___wmul@multiplier,w,c
  7011  003494  0208               	mulwf	___wmul@multiplicand,c
  7012  003496  CFF3 F00A          	movff	prodl,___wmul@product
  7013  00349A  CFF4 F00B          	movff	prodh,___wmul@product+1
  7014  00349E  5006               	movf	___wmul@multiplier,w,c
  7015  0034A0  0209               	mulwf	___wmul@multiplicand+1,c
  7016  0034A2  50F3               	movf	prodl,w,c
  7017  0034A4  260B               	addwf	___wmul@product+1,f,c
  7018  0034A6  5007               	movf	___wmul@multiplier+1,w,c
  7019  0034A8  0208               	mulwf	___wmul@multiplicand,c
  7020  0034AA  50F3               	movf	prodl,w,c
  7021  0034AC  260B               	addwf	___wmul@product+1,f,c
  7022  0034AE  C00A  F006         	movff	___wmul@product,?___wmul
  7023  0034B2  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7024  0034B6  0012               	return		;funcret
  7025  0034B8                     __end_of___wmul:
  7026                           	opt callstack 0
  7027                           
  7028 ;; *************** function _enviarRS232 *****************
  7029 ;; Defined at:
  7030 ;;		line 51 in file "./../../LIBRERIAS/funciones_auto.h"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  valores         2   11[COMRAM] PTR unsigned char 
  7033 ;;		 -> texto(6), 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  i               1   17[COMRAM] unsigned char 
  7036 ;;  longitud_tex    2   15[COMRAM] unsigned int 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  1    wreg      void 
  7039 ;; Registers used:
  7040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7047 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;Total ram usage:        7 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:    2
  7053 ;; This function calls:
  7054 ;;		_length
  7055 ;; This function is called by:
  7056 ;;		_main
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text30
  7061  003244                     __ptext30:
  7062                           	opt callstack 0
  7063  003244                     _enviarRS232:
  7064                           	opt callstack 28
  7065                           
  7066                           ;./../../LIBRERIAS/funciones_auto.h: 52:     unsigned int longitud_texto = length(valore
      +                          s);
  7067                           
  7068                           ;incstack = 0
  7069  003244  C00C  F006         	movff	enviarRS232@valores,length@text
  7070  003248  C00D  F007         	movff	enviarRS232@valores+1,length@text+1
  7071  00324C  EC92  F019         	call	_length	;wreg free
  7072  003250  C006  F010         	movff	?_length,enviarRS232@longitud_texto
  7073  003254  C007  F011         	movff	?_length+1,enviarRS232@longitud_texto+1
  7074                           
  7075                           ;./../../LIBRERIAS/funciones_auto.h: 53:     for(unsigned char i = 0; i<longitud_texto; 
      +                          i++){
  7076  003258  0E00               	movlw	0
  7077  00325A  6E12               	movwf	enviarRS232@i,c
  7078  00325C  D010               	goto	l3963
  7079  00325E                     l3957:
  7080                           
  7081                           ;./../../LIBRERIAS/funciones_auto.h: 54:         TXREG1 = valores[i];
  7082  00325E  5012               	movf	enviarRS232@i,w,c
  7083  003260  240C               	addwf	enviarRS232@valores,w,c
  7084  003262  6ED9               	movwf	fsr2l,c
  7085  003264  0E00               	movlw	0
  7086  003266  200D               	addwfc	enviarRS232@valores+1,w,c
  7087  003268  6EDA               	movwf	fsr2h,c
  7088  00326A  50DF               	movf	indf2,w,c
  7089  00326C  6EAE               	movwf	4014,c	;volatile
  7090                           
  7091                           ;./../../LIBRERIAS/funciones_auto.h: 55:         _delay((unsigned long)((3)*(48000000/40
      +                          00.0)));
  7092  00326E  0E2F               	movlw	47
  7093  003270  6E0E               	movwf	??_enviarRS232& (0+255),c
  7094  003272  0EC0               	movlw	192
  7095  003274                     u7377:
  7096  003274  2EE8               	decfsz	wreg,f,c
  7097  003276  D7FE               	bra	u7377
  7098  003278  2E0E               	decfsz	??_enviarRS232& (0+255),f,c
  7099  00327A  D7FC               	bra	u7377
  7100                           
  7101                           ;./../../LIBRERIAS/funciones_auto.h: 56:     }
  7102  00327C  2A12               	incf	enviarRS232@i,f,c
  7103  00327E                     l3963:
  7104  00327E  5012               	movf	enviarRS232@i,w,c
  7105  003280  6E0E               	movwf	??_enviarRS232& (0+255),c
  7106  003282  6A0F               	clrf	(??_enviarRS232+1)& (0+255),c
  7107  003284  5010               	movf	enviarRS232@longitud_texto,w,c
  7108  003286  5C0E               	subwf	??_enviarRS232,w,c
  7109  003288  5011               	movf	enviarRS232@longitud_texto+1,w,c
  7110  00328A  580F               	subwfb	??_enviarRS232+1,w,c
  7111  00328C  B0D8               	btfsc	status,0,c
  7112  00328E  0012               	return	
  7113  003290  D7E6               	goto	l3957
  7114  003292                     __end_of_enviarRS232:
  7115                           	opt callstack 0
  7116                           
  7117 ;; *************** function _length *****************
  7118 ;; Defined at:
  7119 ;;		line 59 in file "./../../LIBRERIAS/funciones_auto.h"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  text            2    5[COMRAM] PTR unsigned char 
  7122 ;;		 -> texto(6), 
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;  longitud        2    7[COMRAM] int 
  7125 ;;  i               1   10[COMRAM] unsigned char 
  7126 ;;  dato            1    9[COMRAM] unsigned char 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  2    5[COMRAM] int 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7137 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7139 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7140 ;;Total ram usage:        6 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:    1
  7143 ;; This function calls:
  7144 ;;		Nothing
  7145 ;; This function is called by:
  7146 ;;		_enviarRS232
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text31
  7151  003324                     __ptext31:
  7152                           	opt callstack 0
  7153  003324                     _length:
  7154                           	opt callstack 28
  7155                           
  7156                           ;./../../LIBRERIAS/funciones_auto.h: 60:     unsigned char dato = text[0], i = 1;
  7157                           
  7158                           ;incstack = 0
  7159  003324  C006  FFD9         	movff	length@text,fsr2l
  7160  003328  C007  FFDA         	movff	length@text+1,fsr2h
  7161  00332C  50DF               	movf	indf2,w,c
  7162  00332E  6E0A               	movwf	length@dato,c
  7163  003330  0E01               	movlw	1
  7164  003332  6E0B               	movwf	length@i,c
  7165                           
  7166                           ;./../../LIBRERIAS/funciones_auto.h: 61:     int longitud = 0;
  7167  003334  0E00               	movlw	0
  7168  003336  6E09               	movwf	length@longitud+1,c
  7169  003338  0E00               	movlw	0
  7170  00333A  6E08               	movwf	length@longitud,c
  7171                           
  7172                           ;./../../LIBRERIAS/funciones_auto.h: 62:     while(dato != '\0'){
  7173  00333C  D00B               	goto	l3937
  7174  00333E                     l3931:
  7175                           
  7176                           ;./../../LIBRERIAS/funciones_auto.h: 63:         dato = text[i];
  7177  00333E  500B               	movf	length@i,w,c
  7178  003340  2406               	addwf	length@text,w,c
  7179  003342  6ED9               	movwf	fsr2l,c
  7180  003344  0E00               	movlw	0
  7181  003346  2007               	addwfc	length@text+1,w,c
  7182  003348  6EDA               	movwf	fsr2h,c
  7183  00334A  50DF               	movf	indf2,w,c
  7184  00334C  6E0A               	movwf	length@dato,c
  7185                           
  7186                           ;./../../LIBRERIAS/funciones_auto.h: 64:         i++;
  7187  00334E  2A0B               	incf	length@i,f,c
  7188                           
  7189                           ;./../../LIBRERIAS/funciones_auto.h: 65:         longitud++;
  7190  003350  4A08               	infsnz	length@longitud,f,c
  7191  003352  2A09               	incf	length@longitud+1,f,c
  7192  003354                     l3937:
  7193                           
  7194                           ;./../../LIBRERIAS/funciones_auto.h: 62:     while(dato != '\0'){
  7195  003354  500A               	movf	length@dato,w,c
  7196  003356  A4D8               	btfss	status,2,c
  7197  003358  D7F2               	goto	l3931
  7198                           
  7199                           ;./../../LIBRERIAS/funciones_auto.h: 67:     return longitud;
  7200  00335A  C008  F006         	movff	length@longitud,?_length
  7201  00335E  C009  F007         	movff	length@longitud+1,?_length+1
  7202  003362  0012               	return		;funcret
  7203  003364                     __end_of_length:
  7204                           	opt callstack 0
  7205                           
  7206 ;; *************** function _configuracionInicial *****************
  7207 ;; Defined at:
  7208 ;;		line 82 in file "Us-100.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;		None
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;		None
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  1    wreg      void 
  7215 ;; Registers used:
  7216 ;;		wreg, status,2, cstack
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7226 ;;Total ram usage:        0 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    2
  7229 ;; This function calls:
  7230 ;;		_configurarInterrupciones
  7231 ;;		_configurarPuertos
  7232 ;;		_configurarRS232
  7233 ;;		_configurarTMR5
  7234 ;; This function is called by:
  7235 ;;		_main
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           	psect	text32
  7240  0034E6                     __ptext32:
  7241                           	opt callstack 0
  7242  0034E6                     _configuracionInicial:
  7243                           	opt callstack 28
  7244                           
  7245                           ;Us-100.c: 83:     configurarPuertos();
  7246                           
  7247                           ;incstack = 0
  7248  0034E6  EC7C  F01A         	call	_configurarPuertos	;wreg free
  7249                           
  7250                           ;Us-100.c: 84:     configurarInterrupciones();
  7251  0034EA  EC84  F01A         	call	_configurarInterrupciones	;wreg free
  7252                           
  7253                           ;Us-100.c: 85:     configurarRS232();
  7254  0034EE  EC5C  F01A         	call	_configurarRS232	;wreg free
  7255                           
  7256                           ;Us-100.c: 86:     configurarTMR5();
  7257  0034F2  EC68  F01A         	call	_configurarTMR5	;wreg free
  7258  0034F6  0012               	return		;funcret
  7259  0034F8                     __end_of_configuracionInicial:
  7260                           	opt callstack 0
  7261                           
  7262 ;; *************** function _configurarTMR5 *****************
  7263 ;; Defined at:
  7264 ;;		line 43 in file "./../../LIBRERIAS/configuracion_auto.h"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;		None
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		wreg, status,2
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7282 ;;Total ram usage:        0 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:    1
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_configuracionInicial
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text33
  7293  0034D0                     __ptext33:
  7294                           	opt callstack 0
  7295  0034D0                     _configurarTMR5:
  7296                           	opt callstack 28
  7297                           
  7298                           ;./../../LIBRERIAS/configuracion_auto.h: 44:     TRISDbits.TRISD4 = 0;
  7299                           
  7300                           ;incstack = 0
  7301  0034D0  9895               	bcf	3989,4,c	;volatile
  7302                           
  7303                           ;./../../LIBRERIAS/configuracion_auto.h: 45:     PORTDbits.RD4 = 0;
  7304  0034D2  9883               	bcf	3971,4,c	;volatile
  7305                           
  7306                           ;./../../LIBRERIAS/configuracion_auto.h: 46:     T5CON = 0x32;
  7307  0034D4  0E32               	movlw	50
  7308  0034D6  010F               	movlb	15	; () banked
  7309  0034D8  6F22               	movwf	34,b	;volatile
  7310                           
  7311                           ; BSR set to: 15
  7312                           ;./../../LIBRERIAS/configuracion_auto.h: 47:     TMR5H = 0xFF;
  7313  0034DA  6924               	setf	36,b	;volatile
  7314                           
  7315                           ;./../../LIBRERIAS/configuracion_auto.h: 48:     TMR5L = 0x6A;
  7316  0034DC  0E6A               	movlw	106
  7317  0034DE  6F23               	movwf	35,b	;volatile
  7318                           
  7319                           ; BSR set to: 15
  7320                           ;./../../LIBRERIAS/configuracion_auto.h: 49:     PIE5bits.TMR5IE = 1;
  7321  0034E0  8491               	bsf	3985,2,c	;volatile
  7322                           
  7323                           ; BSR set to: 15
  7324                           ;./../../LIBRERIAS/configuracion_auto.h: 50:     PIR5bits.TMR5IF = 0;
  7325  0034E2  9498               	bcf	3992,2,c	;volatile
  7326                           
  7327                           ; BSR set to: 15
  7328  0034E4  0012               	return		;funcret
  7329  0034E6                     __end_of_configurarTMR5:
  7330                           	opt callstack 0
  7331                           
  7332 ;; *************** function _configurarRS232 *****************
  7333 ;; Defined at:
  7334 ;;		line 32 in file "./../../LIBRERIAS/configuracion_auto.h"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;		None
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;		None
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  1    wreg      void 
  7341 ;; Registers used:
  7342 ;;		wreg, status,2
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7352 ;;Total ram usage:        0 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:    1
  7355 ;; This function calls:
  7356 ;;		Nothing
  7357 ;; This function is called by:
  7358 ;;		_configuracionInicial
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text34
  7363  0034B8                     __ptext34:
  7364                           	opt callstack 0
  7365  0034B8                     _configurarRS232:
  7366                           	opt callstack 28
  7367                           
  7368                           ;./../../LIBRERIAS/configuracion_auto.h: 33:     TRISCbits.TRISC7 = 1;
  7369                           
  7370                           ; BSR set to: 15
  7371                           ;incstack = 0
  7372  0034B8  8E94               	bsf	3988,7,c	;volatile
  7373                           
  7374                           ;./../../LIBRERIAS/configuracion_auto.h: 34:     TRISCbits.TRISC6 = 0;
  7375  0034BA  9C94               	bcf	3988,6,c	;volatile
  7376                           
  7377                           ;./../../LIBRERIAS/configuracion_auto.h: 35:     TXSTA1 = 0x22;
  7378  0034BC  0E22               	movlw	34
  7379  0034BE  6EAD               	movwf	4013,c	;volatile
  7380                           
  7381                           ;./../../LIBRERIAS/configuracion_auto.h: 36:     RCSTA1 = 0x90;
  7382  0034C0  0E90               	movlw	144
  7383  0034C2  6EAC               	movwf	4012,c	;volatile
  7384                           
  7385                           ;./../../LIBRERIAS/configuracion_auto.h: 37:     BAUDCON1bits.BRG16 = 0;
  7386  0034C4  967E               	bcf	3966,3,c	;volatile
  7387                           
  7388                           ;./../../LIBRERIAS/configuracion_auto.h: 38:     SPBRG1 = 77;
  7389  0034C6  0E4D               	movlw	77
  7390  0034C8  6EB0               	movwf	4016,c	;volatile
  7391                           
  7392                           ;./../../LIBRERIAS/configuracion_auto.h: 39:     PIR1bits.RC1IF = 0;
  7393  0034CA  9A9E               	bcf	3998,5,c	;volatile
  7394                           
  7395                           ;./../../LIBRERIAS/configuracion_auto.h: 40:     PIE1bits.RC1IE = 1;
  7396  0034CC  8A9D               	bsf	3997,5,c	;volatile
  7397  0034CE  0012               	return		;funcret
  7398  0034D0                     __end_of_configurarRS232:
  7399                           	opt callstack 0
  7400                           
  7401 ;; *************** function _configurarPuertos *****************
  7402 ;; Defined at:
  7403 ;;		line 3 in file "./../../LIBRERIAS/configuracion_auto.h"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;		None
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      void 
  7410 ;; Registers used:
  7411 ;;		wreg, status,2
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7421 ;;Total ram usage:        0 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    1
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_configuracionInicial
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           	psect	text35
  7432  0034F8                     __ptext35:
  7433                           	opt callstack 0
  7434  0034F8                     _configurarPuertos:
  7435                           	opt callstack 28
  7436                           
  7437                           ;./../../LIBRERIAS/configuracion_auto.h: 4:     ANCON0 = 0x7F;
  7438                           
  7439                           ;incstack = 0
  7440  0034F8  0E7F               	movlw	127
  7441  0034FA  010F               	movlb	15	; () banked
  7442  0034FC  6F48               	movwf	72,b	;volatile
  7443                           
  7444                           ;./../../LIBRERIAS/configuracion_auto.h: 5:     ANCON1 = 0x1F;
  7445  0034FE  0E1F               	movlw	31
  7446  003500  6F49               	movwf	73,b	;volatile
  7447                           
  7448                           ; BSR set to: 15
  7449                           ;./../../LIBRERIAS/configuracion_auto.h: 6:     TRISAbits.TRISA0 = 0;
  7450  003502  9092               	bcf	3986,0,c	;volatile
  7451                           
  7452                           ; BSR set to: 15
  7453                           ;./../../LIBRERIAS/configuracion_auto.h: 7:     TRISAbits.TRISA1 = 0;
  7454  003504  9292               	bcf	3986,1,c	;volatile
  7455                           
  7456                           ; BSR set to: 15
  7457  003506  0012               	return		;funcret
  7458  003508                     __end_of_configurarPuertos:
  7459                           	opt callstack 0
  7460                           
  7461 ;; *************** function _configurarInterrupciones *****************
  7462 ;; Defined at:
  7463 ;;		line 10 in file "./../../LIBRERIAS/configuracion_auto.h"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;		None
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;		None
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      void 
  7470 ;; Registers used:
  7471 ;;		None
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7481 ;;Total ram usage:        0 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:    1
  7484 ;; This function calls:
  7485 ;;		Nothing
  7486 ;; This function is called by:
  7487 ;;		_configuracionInicial
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text36
  7492  003508                     __ptext36:
  7493                           	opt callstack 0
  7494  003508                     _configurarInterrupciones:
  7495                           	opt callstack 28
  7496                           
  7497                           ;./../../LIBRERIAS/configuracion_auto.h: 11:     TRISBbits.TRISB0 = 1;
  7498                           
  7499                           ; BSR set to: 15
  7500                           ;incstack = 0
  7501  003508  8093               	bsf	3987,0,c	;volatile
  7502                           
  7503                           ;./../../LIBRERIAS/configuracion_auto.h: 12:     INTCONbits.GIE = 1;
  7504  00350A  8EF2               	bsf	4082,7,c	;volatile
  7505                           
  7506                           ;./../../LIBRERIAS/configuracion_auto.h: 13:     INTCONbits.PEIE = 1;
  7507  00350C  8CF2               	bsf	4082,6,c	;volatile
  7508                           
  7509                           ;./../../LIBRERIAS/configuracion_auto.h: 14:     INTCON2bits.INTEDG0=0;
  7510  00350E  9CF1               	bcf	4081,6,c	;volatile
  7511                           
  7512                           ;./../../LIBRERIAS/configuracion_auto.h: 15:     INTCONbits.INT0F = 0;
  7513  003510  92F2               	bcf	4082,1,c	;volatile
  7514                           
  7515                           ;./../../LIBRERIAS/configuracion_auto.h: 16:     INTCONbits.INT0E = 1;
  7516  003512  88F2               	bsf	4082,4,c	;volatile
  7517  003514  0012               	return		;funcret
  7518  003516                     __end_of_configurarInterrupciones:
  7519                           	opt callstack 0
  7520                           
  7521 ;; *************** function ___xxtofl *****************
  7522 ;; Defined at:
  7523 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;  sign            1    wreg     unsigned char 
  7526 ;;  val             4    5[COMRAM] long 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  sign            1   13[COMRAM] unsigned char 
  7529 ;;  arg             4   15[COMRAM] unsigned long 
  7530 ;;  exp             1   14[COMRAM] unsigned char 
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  4    5[COMRAM] unsigned char 
  7533 ;; Registers used:
  7534 ;;		wreg, status,2, status,0
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7541 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7542 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7543 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7544 ;;Total ram usage:       14 bytes
  7545 ;; Hardware stack levels used:    1
  7546 ;; Hardware stack levels required when called:    1
  7547 ;; This function calls:
  7548 ;;		Nothing
  7549 ;; This function is called by:
  7550 ;;		_main
  7551 ;;		_fijarVelocidad
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           	psect	text37
  7556  002946                     __ptext37:
  7557                           	opt callstack 0
  7558  002946                     ___xxtofl:
  7559                           	opt callstack 29
  7560                           
  7561                           ;incstack = 0
  7562                           ;___xxtofl@sign stored from wreg
  7563  002946  6E0E               	movwf	___xxtofl@sign,c
  7564  002948  500E               	movf	___xxtofl@sign,w,c
  7565  00294A  A4D8               	btfss	status,2,c
  7566  00294C  AE09               	btfss	___xxtofl@val+3,7,c
  7567  00294E  D01A               	goto	l996
  7568  002950  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  7569  002954  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  7570  002958  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  7571  00295C  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  7572  002960  1E0A               	comf	??___xxtofl,f,c
  7573  002962  1E0B               	comf	??___xxtofl+1,f,c
  7574  002964  1E0C               	comf	??___xxtofl+2,f,c
  7575  002966  1E0D               	comf	??___xxtofl+3,f,c
  7576  002968  2A0A               	incf	??___xxtofl,f,c
  7577  00296A  0E00               	movlw	0
  7578  00296C  220B               	addwfc	??___xxtofl+1,f,c
  7579  00296E  220C               	addwfc	??___xxtofl+2,f,c
  7580  002970  220D               	addwfc	??___xxtofl+3,f,c
  7581  002972  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  7582  002976  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  7583  00297A  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  7584  00297E  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  7585  002982  D008               	goto	l3991
  7586  002984                     l996:
  7587  002984  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  7588  002988  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7589  00298C  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7590  002990  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7591  002994                     l3991:
  7592  002994  5006               	movf	___xxtofl@val,w,c
  7593  002996  1007               	iorwf	___xxtofl@val+1,w,c
  7594  002998  1008               	iorwf	___xxtofl@val+2,w,c
  7595  00299A  1009               	iorwf	___xxtofl@val+3,w,c
  7596  00299C  A4D8               	btfss	status,2,c
  7597  00299E  D009               	goto	l3997
  7598  0029A0  0E00               	movlw	0
  7599  0029A2  6E06               	movwf	?___xxtofl,c
  7600  0029A4  0E00               	movlw	0
  7601  0029A6  6E07               	movwf	?___xxtofl+1,c
  7602  0029A8  0E00               	movlw	0
  7603  0029AA  6E08               	movwf	?___xxtofl+2,c
  7604  0029AC  0E00               	movlw	0
  7605  0029AE  6E09               	movwf	?___xxtofl+3,c
  7606  0029B0  0012               	return	
  7607  0029B2                     l3997:
  7608  0029B2  0E96               	movlw	150
  7609  0029B4  6E0F               	movwf	___xxtofl@exp,c
  7610  0029B6  D006               	goto	l4001
  7611  0029B8                     l3999:
  7612  0029B8  2A0F               	incf	___xxtofl@exp,f,c
  7613  0029BA  90D8               	bcf	status,0,c
  7614  0029BC  3213               	rrcf	___xxtofl@arg+3,f,c
  7615  0029BE  3212               	rrcf	___xxtofl@arg+2,f,c
  7616  0029C0  3211               	rrcf	___xxtofl@arg+1,f,c
  7617  0029C2  3210               	rrcf	___xxtofl@arg,f,c
  7618  0029C4                     l4001:
  7619  0029C4  0E00               	movlw	0
  7620  0029C6  1410               	andwf	___xxtofl@arg,w,c
  7621  0029C8  6E0A               	movwf	??___xxtofl& (0+255),c
  7622  0029CA  0E00               	movlw	0
  7623  0029CC  1411               	andwf	___xxtofl@arg+1,w,c
  7624  0029CE  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  7625  0029D0  0E00               	movlw	0
  7626  0029D2  1412               	andwf	___xxtofl@arg+2,w,c
  7627  0029D4  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  7628  0029D6  0EFE               	movlw	254
  7629  0029D8  1413               	andwf	___xxtofl@arg+3,w,c
  7630  0029DA  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  7631  0029DC  500A               	movf	??___xxtofl,w,c
  7632  0029DE  100B               	iorwf	??___xxtofl+1,w,c
  7633  0029E0  100C               	iorwf	??___xxtofl+2,w,c
  7634  0029E2  100D               	iorwf	??___xxtofl+3,w,c
  7635  0029E4  B4D8               	btfsc	status,2,c
  7636  0029E6  D00D               	goto	l1003
  7637  0029E8  D7E7               	goto	l3999
  7638  0029EA                     l4003:
  7639  0029EA  2A0F               	incf	___xxtofl@exp,f,c
  7640  0029EC  0E01               	movlw	1
  7641  0029EE  2610               	addwf	___xxtofl@arg,f,c
  7642  0029F0  0E00               	movlw	0
  7643  0029F2  2211               	addwfc	___xxtofl@arg+1,f,c
  7644  0029F4  2212               	addwfc	___xxtofl@arg+2,f,c
  7645  0029F6  2213               	addwfc	___xxtofl@arg+3,f,c
  7646  0029F8  90D8               	bcf	status,0,c
  7647  0029FA  3213               	rrcf	___xxtofl@arg+3,f,c
  7648  0029FC  3212               	rrcf	___xxtofl@arg+2,f,c
  7649  0029FE  3211               	rrcf	___xxtofl@arg+1,f,c
  7650  002A00  3210               	rrcf	___xxtofl@arg,f,c
  7651  002A02                     l1003:
  7652  002A02  0E00               	movlw	0
  7653  002A04  1410               	andwf	___xxtofl@arg,w,c
  7654  002A06  6E0A               	movwf	??___xxtofl& (0+255),c
  7655  002A08  0E00               	movlw	0
  7656  002A0A  1411               	andwf	___xxtofl@arg+1,w,c
  7657  002A0C  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  7658  002A0E  0E00               	movlw	0
  7659  002A10  1412               	andwf	___xxtofl@arg+2,w,c
  7660  002A12  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  7661  002A14  0EFF               	movlw	255
  7662  002A16  1413               	andwf	___xxtofl@arg+3,w,c
  7663  002A18  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  7664  002A1A  500A               	movf	??___xxtofl,w,c
  7665  002A1C  100B               	iorwf	??___xxtofl+1,w,c
  7666  002A1E  100C               	iorwf	??___xxtofl+2,w,c
  7667  002A20  100D               	iorwf	??___xxtofl+3,w,c
  7668  002A22  B4D8               	btfsc	status,2,c
  7669  002A24  D007               	goto	l4011
  7670  002A26  D7E1               	goto	l4003
  7671  002A28                     l4009:
  7672  002A28  060F               	decf	___xxtofl@exp,f,c
  7673  002A2A  90D8               	bcf	status,0,c
  7674  002A2C  3610               	rlcf	___xxtofl@arg,f,c
  7675  002A2E  3611               	rlcf	___xxtofl@arg+1,f,c
  7676  002A30  3612               	rlcf	___xxtofl@arg+2,f,c
  7677  002A32  3613               	rlcf	___xxtofl@arg+3,f,c
  7678  002A34                     l4011:
  7679  002A34  BE12               	btfsc	___xxtofl@arg+2,7,c
  7680  002A36  D003               	goto	u4900
  7681  002A38  0E02               	movlw	2
  7682  002A3A  600F               	cpfslt	___xxtofl@exp,c
  7683  002A3C  D7F5               	goto	l4009
  7684  002A3E                     u4900:
  7685  002A3E  A00F               	btfss	___xxtofl@exp,0,c
  7686  002A40  9E12               	bcf	___xxtofl@arg+2,7,c
  7687  002A42  90D8               	bcf	status,0,c
  7688  002A44  320F               	rrcf	___xxtofl@exp,f,c
  7689  002A46  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  7690  002A4A  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  7691  002A4C  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  7692  002A4E  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  7693  002A50  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  7694  002A54  6A0C               	clrf	??___xxtofl+2,c
  7695  002A56  6A0B               	clrf	??___xxtofl+1,c
  7696  002A58  6A0A               	clrf	??___xxtofl,c
  7697  002A5A  500A               	movf	??___xxtofl,w,c
  7698  002A5C  1210               	iorwf	___xxtofl@arg,f,c
  7699  002A5E  500B               	movf	??___xxtofl+1,w,c
  7700  002A60  1211               	iorwf	___xxtofl@arg+1,f,c
  7701  002A62  500C               	movf	??___xxtofl+2,w,c
  7702  002A64  1212               	iorwf	___xxtofl@arg+2,f,c
  7703  002A66  500D               	movf	??___xxtofl+3,w,c
  7704  002A68  1213               	iorwf	___xxtofl@arg+3,f,c
  7705  002A6A  500E               	movf	___xxtofl@sign,w,c
  7706  002A6C  A4D8               	btfss	status,2,c
  7707  002A6E  AE09               	btfss	___xxtofl@val+3,7,c
  7708  002A70  D001               	goto	l4027
  7709  002A72  8E13               	bsf	___xxtofl@arg+3,7,c
  7710  002A74                     l4027:
  7711  002A74  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  7712  002A78  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  7713  002A7C  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  7714  002A80  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  7715  002A84  0012               	return		;funcret
  7716  002A86                     __end_of___xxtofl:
  7717                           	opt callstack 0
  7718                           
  7719 ;; *************** function _rutina *****************
  7720 ;; Defined at:
  7721 ;;		line 27 in file "Us-100.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  dato            1    4[COMRAM] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7737 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7738 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7739 ;;Total ram usage:        5 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; This function calls:
  7742 ;;		Nothing
  7743 ;; This function is called by:
  7744 ;;		Interrupt level 2
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           	psect	intcode
  7749  000008                     __pintcode:
  7750                           	opt callstack 0
  7751  000008                     _rutina:
  7752                           	opt callstack 22
  7753                           
  7754                           ;incstack = 0
  7755  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7756  00000A  CFD9 F001          	movff	fsr2l,??_rutina
  7757  00000E  CFDA F002          	movff	fsr2h,??_rutina+1
  7758  000012  CFF3 F003          	movff	prodl,??_rutina+2
  7759  000016  CFF4 F004          	movff	prodh,??_rutina+3
  7760                           
  7761                           ;Us-100.c: 28:     if(INTCONbits.INT0F == 1){
  7762  00001A  A2F2               	btfss	4082,1,c	;volatile
  7763  00001C  D00B               	goto	i2l139
  7764                           
  7765                           ;Us-100.c: 29:         INTCONbits.INT0F = 0;
  7766  00001E  92F2               	bcf	4082,1,c	;volatile
  7767                           
  7768                           ;Us-100.c: 30:         time_pulse = contador * 5;
  7769  000020  5058               	movf	_contador,w,c
  7770  000022  0D05               	mullw	5
  7771  000024  CFF3 F0DF          	movff	prodl,_time_pulse
  7772                           
  7773                           ;Us-100.c: 31:         contador = 0;
  7774  000028  0E00               	movlw	0
  7775  00002A  6E58               	movwf	_contador,c
  7776                           
  7777                           ;Us-100.c: 32:         bandera_ultra_sonico = 1;
  7778  00002C  0E01               	movlw	1
  7779  00002E  0100               	movlb	0	; () banked
  7780  000030  6FE0               	movwf	_bandera_ultra_sonico& (0+255),b
  7781                           
  7782                           ;Us-100.c: 33:     }
  7783  000032  D022               	goto	i2l146
  7784  000034                     i2l139:
  7785  000034  AA9E               	btfss	3998,5,c	;volatile
  7786  000036  D018               	goto	i2l141
  7787                           
  7788                           ;Us-100.c: 35:         unsigned char dato = RCREG1;
  7789  000038  CFAF F005          	movff	4015,rutina@dato	;volatile
  7790                           
  7791                           ;Us-100.c: 36:         if(dato == 'P'){
  7792  00003C  0E50               	movlw	80
  7793  00003E  1805               	xorwf	rutina@dato,w,c
  7794  000040  A4D8               	btfss	status,2,c
  7795  000042  D006               	goto	i2l142
  7796                           
  7797                           ;Us-100.c: 37:             bandera = 1;
  7798  000044  0E01               	movlw	1
  7799  000046  0100               	movlb	0	; () banked
  7800  000048  6FDE               	movwf	_bandera& (0+255),b
  7801                           
  7802                           ;Us-100.c: 38:             indicador = 0;
  7803  00004A  0E00               	movlw	0
  7804  00004C  6E57               	movwf	_indicador,c
  7805                           
  7806                           ;Us-100.c: 39:         }
  7807  00004E  D014               	goto	i2l146
  7808  000050                     i2l142:
  7809                           
  7810                           ;Us-100.c: 41:             TXREG1 = dato;
  7811  000050  C005  FFAE         	movff	rutina@dato,4014	;volatile
  7812                           
  7813                           ;Us-100.c: 42:             datos[indicador] = dato;
  7814  000054  0EC4               	movlw	low _datos
  7815  000056  2457               	addwf	_indicador,w,c
  7816  000058  6ED9               	movwf	fsr2l,c
  7817  00005A  6ADA               	clrf	fsr2h,c
  7818  00005C  0E00               	movlw	high _datos
  7819  00005E  22DA               	addwfc	fsr2h,f,c
  7820  000060  C005  FFDF         	movff	rutina@dato,indf2
  7821                           
  7822                           ;Us-100.c: 43:             indicador++;
  7823  000064  2A57               	incf	_indicador,f,c
  7824  000066  D008               	goto	i2l146
  7825  000068                     i2l141:
  7826  000068  A498               	btfss	3992,2,c	;volatile
  7827  00006A  D006               	goto	i2l146
  7828                           
  7829                           ;Us-100.c: 47:         PIR5bits.TMR5IF = 0;
  7830  00006C  9498               	bcf	3992,2,c	;volatile
  7831                           
  7832                           ;Us-100.c: 48:         TMR5H = 0xFF;
  7833  00006E  010F               	movlb	15	; () banked
  7834  000070  6924               	setf	36,b	;volatile
  7835                           
  7836                           ; BSR set to: 15
  7837                           ;Us-100.c: 49:         TMR5L = 0x6A;
  7838  000072  0E6A               	movlw	106
  7839  000074  6F23               	movwf	35,b	;volatile
  7840                           
  7841                           ; BSR set to: 15
  7842                           ;Us-100.c: 50:         contador ++;
  7843  000076  2A58               	incf	_contador,f,c
  7844  000078                     i2l146:
  7845  000078  C004  FFF4         	movff	??_rutina+3,prodh
  7846  00007C  C003  FFF3         	movff	??_rutina+2,prodl
  7847  000080  C002  FFDA         	movff	??_rutina+1,fsr2h
  7848  000084  C001  FFD9         	movff	??_rutina,fsr2l
  7849  000088  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7850  00008A  0011               	retfie		f
  7851  00008C                     __end_of_rutina:
  7852                           	opt callstack 0
  7853                           
  7854                           	psect	rparam
  7855  0000                     
  7856                           	psect	temp
  7857  000059                     btemp:
  7858                           	opt callstack 0
  7859  000059                     	ds	1
  7860  0000                     int$flags	set	btemp
  7861  0000                     wtemp8	set	btemp+1
  7862  0000                     ttemp5	set	btemp+1
  7863  0000                     ttemp6	set	btemp+4
  7864  0000                     ttemp7	set	btemp+8
  7865                           tosu	equ	0xFFF
  7866                           tosh	equ	0xFFE
  7867                           tosl	equ	0xFFD
  7868                           stkptr	equ	0xFFC
  7869                           pclatu	equ	0xFFB
  7870                           pclath	equ	0xFFA
  7871                           pcl	equ	0xFF9
  7872                           tblptru	equ	0xFF8
  7873                           tblptrh	equ	0xFF7
  7874                           tblptrl	equ	0xFF6
  7875                           tablat	equ	0xFF5
  7876                           prodh	equ	0xFF4
  7877                           prodl	equ	0xFF3
  7878                           indf0	equ	0xFEF
  7879                           postinc0	equ	0xFEE
  7880                           postdec0	equ	0xFED
  7881                           preinc0	equ	0xFEC
  7882                           plusw0	equ	0xFEB
  7883                           fsr0h	equ	0xFEA
  7884                           fsr0l	equ	0xFE9
  7885                           wreg	equ	0xFE8
  7886                           indf1	equ	0xFE7
  7887                           postinc1	equ	0xFE6
  7888                           postdec1	equ	0xFE5
  7889                           preinc1	equ	0xFE4
  7890                           plusw1	equ	0xFE3
  7891                           fsr1h	equ	0xFE2
  7892                           fsr1l	equ	0xFE1
  7893                           bsr	equ	0xFE0
  7894                           indf2	equ	0xFDF
  7895                           postinc2	equ	0xFDE
  7896                           postdec2	equ	0xFDD
  7897                           preinc2	equ	0xFDC
  7898                           plusw2	equ	0xFDB
  7899                           fsr2h	equ	0xFDA
  7900                           fsr2l	equ	0xFD9
  7901                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      88
    BANK0           160    100     140
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> texto(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> texto(BANK0[6]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1522_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> texto(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> texto(BANK0[6]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    length@text	PTR unsigned char  size(2) Largest target is 6
		 -> texto(BANK0[6]), 

    enviarRS232@valores	PTR unsigned char  size(2) Largest target is 6
		 -> texto(BANK0[6]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->_isspace
    _enviarRS232->_length

Critical Paths under _rutina in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _rutina in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rutina in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rutina in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rutina in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rutina in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rutina in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rutina in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rutina in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _rutina in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42189
                            ___fldiv
                           ___xxtofl
               _configuracionInicial
                        _enviarRS232
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   38431
                                             82 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   37921
                                             74 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   37370
                                             76 COMRAM     6     0      6
                                             56 BANK0     18    18      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   30037
                                             64 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             44 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4187
                                             30 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3622
                                              5 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3773
                                              5 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             30 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2903
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1695
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _enviarRS232                                          7     5      2     381
                                             11 COMRAM     7     5      2
                             _length
 ---------------------------------------------------------------------------------
 (2) _length                                               6     4      2     192
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _configuracionInicial                                 0     0      0       0
           _configurarInterrupciones
                  _configurarPuertos
                    _configurarRS232
                     _configurarTMR5
 ---------------------------------------------------------------------------------
 (2) _configurarTMR5                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarRS232                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarPuertos                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configurarInterrupciones                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _rutina                                               5     5      0      67
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
   ___xxtofl
   _configuracionInicial
     _configurarInterrupciones
     _configurarPuertos
     _configurarRS232
     _configurarTMR5
   _enviarRS232
     _length
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _rutina (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      50       8       31.3%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     64      8C       5       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      58       1       93.6%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     134       6        0.0%
DATA                 0      0     134       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jun 22 23:01:07 2019

                     ___fldiv@aexp 002C                       ___fldiv@bexp 002B  
                     ___fldiv@sign 0024                       ___awdiv@sign 000B  
              ___wmul@multiplicand 0008                       __CFG_CP0$OFF 000000  
                              l201 2F10                                l242 125A  
                              l268 153C                                l606 2B1A  
                              l925 2526                                l870 21EA  
                              l871 21C8                                l936 2594  
                              l937 2590                                l955 1DD6  
                              l972 2074                                l964 1FEE  
                              l965 1FEA                                l886 22BC  
                              l895 2322                                l896 231E  
                              l996 2984                                _PR2 000FCB  
                  ?_configurarTMR5 0001                                _pad 2EE2  
                     ___awmod@sign 000B                                wreg 000FE8  
                     __CFG_IESO$ON 000000                       ___flmul@aexp 0013  
                     ___flmul@bexp 0018                       ___flmul@sign 0012  
                     ___flmul@temp 001D                       ___flmul@prod 0019  
                     ___fltol@exp1 000F                               l1003 2A02  
                             l1051 293C                               l1063 2752  
                             l1143 32D4                               l4001 29C4  
                             l4011 2A34                               l4003 29EA  
                             l4009 2A28                               l4027 2A74  
                             l4205 2140                               l4141 33C2  
                             l5005 1242                               l4127 2E5A  
                             l5023 12B2                               l5015 126A  
                             l4137 33AC                               l4145 3472  
                             l5041 12F8                               l5025 12B6  
                             l5009 1264                               l5211 2804  
                             l4315 2300                               l4235 217C  
                             l4147 3476                               l5107 1608  
                             l5115 1628                               l5123 164C  
                             l5131 16E4                               l5051 1332  
                             l5035 12D4                               l5221 2856  
                             l5213 2808                               l4309 22F6  
                             l4173 20D8                               l4405 3160  
                             l5045 1308                               l5231 2874  
                             l4343 238E                               l4335 2368  
                             l4271 2230                               l4263 220E  
                             l4247 21D6                               l4423 26B4  
                             l5143 1726                               l5311 1A70  
                             l5233 28A0                               l4513 2486  
                             l4505 246E                               l4273 2234  
                             l4281 2246                               l4249 21DA  
                             l4193 211C                               l4169 20D4  
                             l4441 27E0                               l4433 2774  
                             l5161 177C                               l5081 1534  
                             l5073 14DC                               l5227 2866  
                             l4531 24FE                               l4523 24D6  
                             l4347 2396                               l4291 22AC  
                             l4363 2EFA                               l5171 17D2  
                             l5083 1556                               l5067 149E  
                             l5059 1428                               l5307 1A44  
                             l5237 28D8                               l5229 286E  
                             l4701 2032                               l4605 1D82  
                             l4349 2398                               l4197 2120  
                             l4437 27B2                               l4373 2F32  
                             l5181 17FE                               l5309 1A62  
                             ?_pad 0016                               l4543 253C  
                             l4471 23E4                               l4623 1DC2  
                             l4607 1D86                               l4367 2F08  
                             l5159 1772                               l5095 15D8  
                             l5335 1BBA                               l5327 1B5A  
                             l5423 2D10                               l5407 2CE6  
                             l4801 30DE                               l4537 2524  
                             l4705 2050                               l4633 1DF4  
                             l4625 1DC6                               l4609 1D96  
                             l4393 2BD8                               l4377 2F5E  
                             l4369 2F1A                               l5257 2DBE  
                             l5361 1CFC                               l3931 333E  
                             l4491 2424                               l4467 23E0  
                             l4299 22E0                               l5259 2DCC  
                             l5355 1CBC                               l5339 1BE4  
                             l5291 196E                               l5371 1D1E  
                             l4805 30EC                               l4573 25FC  
                             l4549 255A                               l4821 2FFE  
                             l4813 2FAC                               l4717 2092  
                             l4389 2BCE                               l5197 185E  
                             l5365 1D06                               l4751 3044  
                             l4743 3026                               l4583 2632  
                             l4487 2420                               l4399 2C18  
                             l5287 1942                               l5383 310A  
                             l3937 3354                               l4761 3064  
                             l4737 3016                               l4585 2634  
                             l4577 2626                               l4569 25D8  
                             l4817 2FE0                               l4833 2AEE  
                             l4681 1FB4                               l4921 0F68  
                             l5289 1960                               l5385 3130  
                             l3963 327E                               l4907 339A  
                             l4499 2458                               l4843 2B52  
                             l4675 1F96                               l4851 3456  
                             l3957 325E                               l4749 303C  
                             l4765 306E                               l4781 309A  
                             l4837 2B04                               l4829 2ABA  
                             l4861 2C40                               l4933 0F96  
                             l4941 0FAC                               l3991 2994  
                             l4791 30BC                               l4951 1018  
               __CFG_WPFP$PAGE_127 000000                               l4769 307C  
                             l4785 30A6                               l4881 2C9A  
                             l4953 1030                               l4955 103A  
                             l3997 29B2                               l4797 30D4  
                             l4789 30B4                               l4877 2C8A  
                             l3999 29B8                               l4895 2CCA  
                             l4887 2CA2                               l4983 112A  
                             l4959 1060                               l4889 2CAE  
                             l4993 11EE                               l4969 10CC  
                             l4977 10E6                               l4987 1164  
                             l4989 11B2                               STR_1 0F01  
                             STR_2 0F0A                               STR_3 0F12  
                             STR_6 0F0E                               STR_7 0F16  
                             u5020 2E52                               u5200 21B0  
                             u5040 2E9A                               u6110 1FE4  
                             u5230 21F2                               u5070 3402  
                             u5080 3404                               u7010 2852  
                             u6210 3048                               u6060 1DE2  
                             u5180 219E                               u7030 290C  
                             u6150 2040                               u6070 1F58  
                             u5190 21AE                               u7110 2E1A  
                             u7040 290E                               u6320 2FFA  
                             u6160 205E                               u5440 2374  
                             u5360 2304                               u6400 2C5E  
                             u5520 2B94                               u7200 1AAE  
                             u5610 32BA                               u7210 1AB0  
                             u6075 1F4E                               u4900 2A3E  
                             u5380 2318                               u5620 32BC  
                             u6500 0F86                               u7220 1ABC  
                             u6405 2C54                               u5525 2B8A  
                             u6270 30C0                               u5710 2792  
                             u7150 19AC                               u6440 2CB4  
                             u5640 2682                               u7160 19AE  
                             u5570 2C10                               u5650 26A2  
                             u6530 0FEE                               u7170 19BA  
                             u5715 2788                               u5740 3432  
                             u5580 2C12                               u6620 1216  
                             u6540 0FF0                               u5565 2BF2  
                             u5645 2678                               u5750 3434  
                             u6470 3396                               u6390 2C2E  
                             u5590 319A                               u7270 1C70  
                             u5920 258A                               u6720 12D0  
                             u7280 1C72                               u5690 2732  
                             u6650 1250                               u6570 10A2  
                             u5675 26CC                               u5676 26D2  
                             u6580 10A4                               u5677 26E0  
                             u5597 3190                               u7357 2CFE  
                             u5695 2728                               u7367 2D06  
                             u5960 25E6                               u6680 1282  
                             u7377 3274                               u5970 260A  
                             u6950 17E8                               u6970 1848  
                             u6890 1708                               u6980 184A  
                             _TMR2 000FCC                   ?_configurarRS232 0001  
                     ?_enviarRS232 000C                      __CFG_FCMEN$ON 000000  
                             _dbuf 0100                               _atoi 27F2  
                             _main 2CDC                               _prec 0053  
                             _nout 00DA                               pad@i 001D  
                             pad@p 001A                               fsr0h 000FEA  
                             fsr1h 000FE2                               indf0 000FEF  
                             fsr2h 000FDA                               fsr0l 000FE9  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 001F                               fsr2l 000FD9  
                             btemp 0059                      ___fpclassifyf 2B56  
                             prodh 000FF4                               prodl 000FF3  
                             start 008C                    ___fldiv@new_exp 0025  
                     _tolower$1594 0012                       ___param_bank 000000  
                            ??_pad 001C                      __CFG_PLLDIV$3 000000  
                     _BAUDCON1bits 000F7E                      ___fltol@sign1 000E  
                            ?_atoi 000D                    __end_of___fladd 23B4  
                            ?_main 0001                    __end_of___fldiv 263C  
                  __end_of___awdiv 3086                    __end_of___flneg 3468  
                            STR_10 0F1A                              STR_12 0F1A  
                  __end_of___awmod 30F6                    __end_of___flmul 20A8  
                  __end_of___flsub 3324                    __end_of___fltol 2CDC  
                  ___awdiv@divisor 0008                              _T2CON 000FCA  
                            _T5CON 000F22                              i2l141 0068  
                            i2l142 0050                              i2l146 0078  
                            i2l139 0034                    ___awdiv@counter 000A  
                     vfpfcnvrt@fmt 004F                              _TMR5H 000F24  
                            _TMR5L 000F23                              _datos 00C4  
                            _flags 0055                              _fputc 2E42  
                            _fputs 33A2                    __end_of_isdigit 343A  
                   __CFG_CLKOEC$ON 000000                              _motor 00E1  
                            atoi@n 001A                              pad@fp 0016  
                            atoi@s 000D                              _width 00DC  
                            _texto 00E2                              _putch 351A  
                  __end_of_isspace 33A2                    __end_of_isupper 340A  
                            tablat 000FF5                              ttemp5 005A  
                            ttemp6 005D                              ttemp7 0061  
                            status 000FD8                              wtemp8 005A  
                  __end_of_sprintf 31F6                     ?___fpclassifyf 0006  
                  __end_of_tolower 32DE                    __end_of_strncmp 2E42  
        enviarRS232@longitud_texto 0010            __CFG_DSWDTOSC$INTOSCREF 000000  
                  __initialization 31F6                       __end_of_atoi 2946  
                     __end_of_main 2D94                     __CFG_OSC$HSPLL 000000  
                           ??_atoi 000F                             ??_main 0053  
                    __activetblptr 000003                             ?_fputc 0006  
                           ?_fputs 000F                             _CCPR7L 000F0A  
                           _ANCON0 000F48                             _ANCON1 000F49  
                 ___awdiv@dividend 0006                             ?_putch 0001  
                   __CFG_WDTEN$OFF 000000                             _RCREG1 000FAF  
                           _RCSTA1 000FAC                             _SPBRG1 000FB0  
                   __CFG_WPCFG$OFF 000000                             _TXREG1 000FAE  
                 __end_of___xxtofl 2A86                             _TXSTA1 000FAD  
                   __CFG_WPDIS$OFF 000000                     __CFG_XINST$OFF 000000  
                     _CCPTMRS1bits 000F51                       vfprintf@cfmt 00B0  
                           ___flge 2A86                             ___fleq 2F78  
                        ??___fladd 000E                             ___wmul 3492  
                        ??___fldiv 001C                          ??___awdiv 000A  
                        ??___flneg 000A                     __CFG_STVREN$ON 000000  
                        ??___awmod 000A                          ??___flmul 000E  
                        ??___flsub 0027                          ??___fltol 000A  
    __size_of_configuracionInicial 0012                             _efgtoa 0F1E  
                           _floorf 263C                             _length 3324  
                           clear_0 321C                             clear_1 3228  
                 ___awdiv@quotient 000C                    ___awmod@divisor 0008  
                  ___awmod@counter 000A                             pad@buf 0018  
                           _rutina 0008                             _strcpy 3150  
                           _strlen 3468                  _configurarPuertos 34F8  
                           fputc@c 0006                             fputs@c 0013  
                           fputs@i 0014                             fputs@s 000F  
                        ??_isdigit 0008                    ___fpclassifyf@e 000E  
                  ___fpclassifyf@u 0010                    ___fpclassifyf@x 0006  
               ?_configurarPuertos 0001                       __mediumconst 0000  
                        ??_isspace 0008                             tblptrh 000FF7  
                        ??_isupper 0008                             tblptrl 000FF6  
                           tblptru 000FF8                             putch@c 0001  
                 __end_of_vfprintf 3150                          ??_sprintf 0053  
                        ??_tolower 000E                          ??_strncmp 000C  
              ??_configurarPuertos 0006                         ___flge@ff1 001F  
                       ___flge@ff2 0023                    ??___fpclassifyf 000A  
             __CFG_LS48MHZ$SYS48X8 000000                       ___xxtofl@arg 0010  
                     ___xxtofl@exp 000F                       ___xxtofl@val 0006  
                       ___fleq@ff1 0006                         ___fleq@ff2 000A  
                       __accesstop 0060            __end_of__initialization 323A  
                       ___flneg@f1 0006           _configurarInterrupciones 3508  
             __size_of_enviarRS232 004E                      ___rparam_used 000001  
                       ___fltol@f1 0006                       enviarRS232@i 0012  
                  __CFG_IOL1WAY$ON 000000               __CFG_WPEND$PAGE_WPFP 000000  
                   __pcstackCOMRAM 0001                       __pidataBANK0 3516  
                 ??_configurarTMR5 0006                      __end_of_fputc 2EE2  
                    __end_of_fputs 33DA                      __end_of_putch 351C  
        __end_of_configurarPuertos 3508                    __CFG_DSWDTPS$G2 000000  
                          ??_fputc 000A                            ??_fputs 0013  
                          ??_putch 0006                         __pbssBANK0 00C4  
                       __pbssBANK1 0100                         _efgtoa$982 0068  
                       _efgtoa$976 0064                         _efgtoa$977 0066  
                       _efgtoa$986 006A                         _efgtoa$987 006C  
                       _efgtoa$988 006E                            ?___flge 001F  
                          ?___fleq 0006                            ?___wmul 0006  
                          ?_efgtoa 0041                            ?_floorf 002D  
                          ?_length 0006                            ?_rutina 0001  
                          ?_strcpy 0006                            ?_strlen 0006  
                        ?___xxtofl 0006                 __size_of_vfpfcnvrt 04BA  
                 __CFG_CFGPLLEN$ON 000000                            __Hparam 0000  
                          __Lparam 0000           __size_of_configurarRS232 0018  
                  __size_of___flge 00D0                    __size_of___fleq 008A  
                          ___fladd 20A8                            ___fldiv 23B4  
                          ___awdiv 3002                            ___flneg 343A  
                          ___awmod 3086                            ___flmul 1D56  
                          ___flsub 32DE                            ___fltol 2C22  
                  __size_of___wmul 0026                          ?_vfprintf 00AA  
                     __psmallconst 0F00                    __size_of_efgtoa 097E  
                          _bandera 00DE         __size_of_configurarPuertos 0010  
                  __size_of_floorf 01B6                            __pcinit 31F6  
                  __size_of_length 0040                            __ramtop 0F00  
                          __ptext0 2CDC                            __ptext1 31A4  
                          __ptext2 30F6                            __ptext3 189C  
                          __ptext4 2D94                            __ptext5 0F1E  
                          __ptext6 3292                            __ptext7 33DA  
                          __ptext8 3150                            __ptext9 2EE2  
                  __size_of_rutina 0084                    __size_of_strcpy 0054  
                  __size_of_strlen 002A                          _T2CONbits 000FCA  
                     __size_of_pad 0096                            _isdigit 340A  
                       ??___xxtofl 000A                   ___awmod@dividend 0006  
                          _isspace 3364                            _isupper 33DA  
                          efgtoa@c 0047                            efgtoa@d 0078  
                          efgtoa@e 0090                            efgtoa@f 0043  
                          efgtoa@g 008C                            efgtoa@h 0082  
                          efgtoa@i 008A                            efgtoa@l 0086  
                          efgtoa@m 0074                            efgtoa@n 0092  
                          efgtoa@p 007C                            efgtoa@t 0070  
                          efgtoa@u 0094                            efgtoa@w 007F  
                          atoi@neg 0013                     length@longitud 0008  
                          _sprintf 31A4                            _tolower 3292  
                          _strncmp 2D94               end_of_initialization 323A  
                          floorf@e 003B                            floorf@m 0037  
                          floorf@u 003D                            floorf@x 002D  
                          length@i 000B                            fputc@fp 0008  
                          fputs@fp 0011                  __end_of_vfpfcnvrt 1D56  
                       efgtoa@mode 0081                         efgtoa@sign 007A  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                         ??_vfprintf 0053  
                          strcpy@d 000E                            strlen@a 0008  
                          strcpy@s 000C                            strlen@s 0006  
                       _time_pulse 00DF                          _PORTBbits 000F81  
                        _PORTDbits 000F83                   __CFG_DSBOREN$OFF 000000  
                      ___fladd@grs 0015                   __CFG_CPUDIV$OSC1 000000  
                    ___xxtofl@sign 000E                          _TRISAbits 000F92  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                        _TRISDbits 000F95         ??_configurarInterrupciones 0006  
                      ___fldiv@grs 0027       __end_of_configuracionInicial 34F8  
                      ___fldiv@rem 0020                  __CFG_SOSCSEL$HIGH 000000  
                      ___flmul@grs 0014                        _CCP7CONbits 000F09  
              __CFG_MSSP7B_EN$MSK7 000000                     __end_of___flge 2B56  
                   __end_of___fleq 3002                        vfpfcnvrt@ap 0051  
                      vfpfcnvrt@ct 00A6                        vfpfcnvrt@fp 004D  
                   __end_of___wmul 34B8                     __end_of_efgtoa 189C  
                ??_configurarRS232 0006                     __end_of_floorf 27F2  
                   __end_of_length 3364                         floorf@F524 00CE  
                 __CFG_DSWDTEN$OFF 000000                     __end_of_rutina 008C  
                   __end_of_strcpy 31A4                     __end_of_strlen 3492  
              start_initialization 31F6                        __end_of_pad 2F78  
                    ??_enviarRS232 000E              __end_of___fpclassifyf 2C22  
                       length@dato 000A                         length@text 0006  
                      vfprintf@fmt 00AC                           ??___flge 0027  
                         ??___fleq 000E                           ??___wmul 000A  
                         ??_efgtoa 0048                  __CFG_ADCSEL$BIT12 000000  
                      __pdataBANK0 00E8                           ??_floorf 0031  
                         ??_length 0008                           ??_rutina 0001  
                         ??_strcpy 000A                           ??_strlen 0008  
                        ___fladd@a 000A                          ___fladd@b 0006  
                        ___fldiv@a 0018                          ___fldiv@b 0014  
                        ___flmul@a 000A                          ___flmul@b 0006  
                      __pbssCOMRAM 0053                          ___flsub@a 0023  
                        ___flsub@b 001F                      __pcstackBANK0 0060  
                __size_of___xxtofl 0140                          _atoi$1480 0017  
                        _atoi$1478 0015                          _atoi$1479 0019  
              __end_of_enviarRS232 3292                 enviarRS232@valores 000C  
                        __pintcode 0008                           ?___fladd 0006  
                         ?___fldiv 0014                           ?___awdiv 0006  
                         ?___flneg 0006                           ?___awmod 0006  
                         ?___flmul 0006                           ?___flsub 001F  
                         ?___fltol 0006               _configuracionInicial 34E6  
                        _distancia 00D6                  __size_of_vfprintf 005A  
                      __smallconst 0F00                           ?_isdigit 0006  
                        _indicador 0057               __CFG_RTCOSC$T1OSCREF 000000  
                         ?_isspace 0006   __end_of_configurarInterrupciones 3516  
                         ?_isupper 0006            __size_of_configurarTMR5 0016  
                         ?_sprintf 00B2                           ?_tolower 000C  
                   __size_of_fputc 00A0                     __size_of_fputs 0038  
                         ?_strncmp 0006                     __size_of_putch 0002  
                   ___wmul@product 000A                           _PIE1bits 000F9D  
                         _PIE5bits 000F91                           _PIR1bits 000F9E  
                         _PIR5bits 000F98                   __CFG_WDTPS$32768 000000  
            ?_configuracionInicial 0001                          _velocidad 00E8  
                        _vfpfcnvrt 189C                  ___wmul@multiplier 0006  
                     _isspace$1509 000C                         vfpfcnvrt@c 00A9  
                       vfpfcnvrt@f 00A2                        _INTCON2bits 000FF1  
                        copy_data0 320A                        _enviarRS232 3244  
                  _configurarRS232 34B8                           __Hrparam 0000  
                       vfprintf@ap 00AE                           __Lrparam 0000  
                       vfprintf@fp 00AA                   __size_of___fladd 030C  
                 __size_of___fldiv 0288                   __size_of___awdiv 0084  
                 __size_of___flneg 002E                   __size_of___awmod 0070  
                 __size_of___flmul 0352                   __size_of___flsub 0046  
                 __size_of___fltol 00BA                         ?_vfpfcnvrt 004D  
               ___fpclassifyf@F463 00D2                         sprintf@fmt 00B4  
                         _cicle_90 00EA                           ___xxtofl 2946  
                 __size_of_isdigit 0030                   __size_of_isspace 003E  
                         __ptext10 3468                           __ptext11 33A2  
                         __ptext20 1D56                           __ptext12 2E42  
                         __ptext21 2A86                           __ptext13 351A  
                         __ptext30 3244                           __ptext22 2F78  
                         __ptext14 263C                           __ptext31 3324  
                         __ptext23 23B4                           __ptext15 2B56  
                         __ptext32 34E6                           __ptext24 3086  
                         __ptext16 2C22                           __ptext33 34D0  
                         __ptext25 3002                           __ptext17 32DE  
                         __ptext34 34B8                           __ptext26 27F2  
                         __ptext18 20A8                           __ptext35 34F8  
                         __ptext27 3364                           __ptext19 343A  
                         __ptext36 3508                           __ptext28 340A  
                         __ptext37 2946                           __ptext29 3492  
                 __size_of_isupper 0030                           _contador 0058  
                       rutina@dato 0005                   __size_of_sprintf 0052  
                 __size_of_tolower 004C                         strcpy@dest 0006  
                 __size_of_strncmp 00AE                      __size_of_atoi 0154  
                    __size_of_main 00B8             ??_configuracionInicial 0006  
                         efgtoa@fp 0041                           efgtoa@ne 0076  
                         efgtoa@pp 0072  __size_of_configurarInterrupciones 000E  
                         efgtoa@ou 0060          ?_configurarInterrupciones 0001  
                         int$flags 0059                           _vfprintf 30F6  
                   _vfpfcnvrt$1002 009C                     _vfpfcnvrt$1003 009E  
                   _vfpfcnvrt$1007 00A0                         _INTCONbits 000FF2  
                   _configurarTMR5 34D0                           isdigit@c 0006  
          __end_of_configurarRS232 34D0                           intlevel2 0000  
                        sprintf@ap 00BC                           isspace@c 0006  
                        strcpy@src 0008                           isupper@c 0006  
             _bandera_ultra_sonico 00E0                          strncmp@_l 0006  
                        strncmp@_r 0008                        efgtoa@nmode 007E  
                      ??_vfpfcnvrt 0098                           sprintf@f 00BE  
                         tolower@c 000C                           sprintf@s 00B2  
           __end_of_configurarTMR5 34E6             __size_of___fpclassifyf 00CC  
                         strncmp@l 000D                           strncmp@n 000A  
                         strncmp@r 000F                      ___fladd@signs 0012  
                     ___fladd@aexp 0013                       ___fladd@bexp 0014  
