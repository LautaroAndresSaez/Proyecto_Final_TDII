

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jun 14 15:56:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 2.05
    38                           ; Generated 20/12/2018 GMT
    39                           ; 
    40                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F47J53 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  001D3E                     __pidataCOMRAM:
    74                           	opt callstack 0
    75                           
    76                           ;initializer for _cicle_90
    77  001D3E  01C2               	dw	450
    78                           
    79                           ;initializer for _fuego
    80  001D40  01                 	db	1
    81  0000                     _CCPR7L	set	3850
    82  0000                     _CCPTMRS1bits	set	3921
    83  0000                     _CCP7CONbits	set	3849
    84  0000                     _ANCON1	set	3913
    85  0000                     _ANCON0	set	3912
    86  0000                     _PORTDbits	set	3971
    87  0000                     _PORTD	set	3971
    88  0000                     _RCREG1	set	4015
    89  0000                     _TXREG1	set	4014
    90  0000                     _T2CONbits	set	4042
    91  0000                     _PIE1bits	set	3997
    92  0000                     _PIR1bits	set	3998
    93  0000                     _SPBRG1	set	4016
    94  0000                     _BAUDCON1bits	set	3966
    95  0000                     _RCSTA1	set	4012
    96  0000                     _TXSTA1	set	4013
    97  0000                     _TRISCbits	set	3988
    98  0000                     _TMR2	set	4044
    99  0000                     _PR2	set	4043
   100  0000                     _T2CON	set	4042
   101  0000                     _TRISBbits	set	3987
   102  0000                     _INTCONbits	set	4082
   103  0000                     _TRISDbits	set	3989
   104                           
   105                           	psect	smallconst
   106  000F00                     __psmallconst:
   107                           	opt callstack 0
   108  000F00  00                 	db	0
   109  000F01                     STR_1:
   110  000F01  53                 	db	83	;'S'
   111  000F02  45                 	db	69	;'E'
   112  000F03  52                 	db	82	;'R'
   113  000F04  56                 	db	86	;'V'
   114  000F05  4F                 	db	79	;'O'
   115  000F06  20                 	db	32
   116  000F07  2B                 	db	43
   117  000F08  2B                 	db	43
   118  000F09  00                 	db	0
   119  000F0A                     STR_2:
   120  000F0A  53                 	db	83	;'S'
   121  000F0B  54                 	db	84	;'T'
   122  000F0C  4F                 	db	79	;'O'
   123  000F0D  50                 	db	80	;'P'
   124  000F0E  20                 	db	32
   125  000F0F  2B                 	db	43
   126  000F10  2B                 	db	43
   127  000F11  00                 	db	0
   128  000F12                     STR_4:
   129  000F12  41                 	db	65	;'A'
   130  000F13  50                 	db	80	;'P'
   131  000F14  41                 	db	65	;'A'
   132  000F15  47                 	db	71	;'G'
   133  000F16  41                 	db	65	;'A'
   134  000F17  44                 	db	68	;'D'
   135  000F18  4F                 	db	79	;'O'
   136  000F19  00                 	db	0
   137  000F1A                     STR_3:
   138  000F1A  46                 	db	70	;'F'
   139  000F1B  55                 	db	85	;'U'
   140  000F1C  45                 	db	69	;'E'
   141  000F1D  47                 	db	71	;'G'
   142  000F1E  4F                 	db	79	;'O'
   143  000F1F  21                 	db	33
   144  000F20  00                 	db	0
   145                           
   146                           ; #config settings
   147  000F21  00                 	db	0	; dummy byte at the end
   148  0000                     
   149                           	psect	cinit
   150  001C58                     __pcinit:
   151                           	opt callstack 0
   152  001C58                     start_initialization:
   153                           	opt callstack 0
   154  001C58                     __initialization:
   155                           	opt callstack 0
   156                           
   157                           ; Initialize objects allocated to COMRAM (3 bytes)
   158                           ; load TBLPTR registers with __pidataCOMRAM
   159  001C58  0E3E               	movlw	low __pidataCOMRAM
   160  001C5A  6EF6               	movwf	tblptrl,c
   161  001C5C  0E1D               	movlw	high __pidataCOMRAM
   162  001C5E  6EF7               	movwf	tblptrh,c
   163  001C60  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   164  001C62  6EF8               	movwf	tblptru,c
   165  001C64  0009               	tblrd		*+	;fetch initializer
   166  001C66  CFF5 F058          	movff	tablat,__pdataCOMRAM
   167  001C6A  0009               	tblrd		*+	;fetch initializer
   168  001C6C  CFF5 F059          	movff	tablat,__pdataCOMRAM+1
   169  001C70  0009               	tblrd		*+	;fetch initializer
   170  001C72  CFF5 F05A          	movff	tablat,__pdataCOMRAM+2
   171                           
   172                           ; Clear objects allocated to BANK0 (62 bytes)
   173  001C76  EE00  F060         	lfsr	0,__pbssBANK0
   174  001C7A  0E3E               	movlw	62
   175  001C7C                     clear_0:
   176  001C7C  6AEE               	clrf	postinc0,c
   177  001C7E  06E8               	decf	wreg,f,c
   178  001C80  E1FD               	bnz	clear_0
   179                           
   180                           ; Clear objects allocated to COMRAM (12 bytes)
   181  001C82  EE00  F04C         	lfsr	0,__pbssCOMRAM
   182  001C86  0E0C               	movlw	12
   183  001C88                     clear_1:
   184  001C88  6AEE               	clrf	postinc0,c
   185  001C8A  06E8               	decf	wreg,f,c
   186  001C8C  E1FD               	bnz	clear_1
   187  001C8E                     end_of_initialization:
   188                           	opt callstack 0
   189  001C8E                     __end_of__initialization:
   190                           	opt callstack 0
   191  001C8E  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   192  001C90  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   193  001C92  0100               	movlb	0
   194  001C94  EF73  F00D         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMRAM
   197  00004C                     __pbssCOMRAM:
   198                           	opt callstack 0
   199  00004C                     _nout:
   200                           	opt callstack 0
   201  00004C                     	ds	2
   202  00004E                     _width:
   203                           	opt callstack 0
   204  00004E                     	ds	2
   205  000050                     _prec:
   206                           	opt callstack 0
   207  000050                     	ds	2
   208  000052                     _flags:
   209                           	opt callstack 0
   210  000052                     	ds	2
   211  000054                     _velocidad:
   212                           	opt callstack 0
   213  000054                     	ds	2
   214  000056                     _indicador:
   215                           	opt callstack 0
   216  000056                     	ds	1
   217  000057                     _bandera:
   218                           	opt callstack 0
   219  000057                     	ds	1
   220                           
   221                           	psect	dataCOMRAM
   222  000058                     __pdataCOMRAM:
   223                           	opt callstack 0
   224  000058                     _cicle_90:
   225                           	opt callstack 0
   226  000058                     	ds	2
   227  00005A                     _fuego:
   228                           	opt callstack 0
   229  00005A                     	ds	1
   230                           
   231                           	psect	bssBANK0
   232  000060                     __pbssBANK0:
   233                           	opt callstack 0
   234  000060                     	ds	32
   235  000080                     	ds	20
   236  000094                     _datos:
   237                           	opt callstack 0
   238  000094                     	ds	10
   239                           
   240                           	psect	cstackBANK0
   241  00009E                     __pcstackBANK0:
   242                           	opt callstack 0
   243  00009E                     logicaEstadoSiguiente@texto:
   244                           	opt callstack 0
   245                           
   246                           ; 20 bytes @ 0x0
   247  00009E                     	ds	20
   248  0000B2                     logicaEstadoSiguiente@medicion:
   249                           	opt callstack 0
   250                           
   251                           ; 2 bytes @ 0x14
   252  0000B2                     	ds	2
   253                           
   254                           	psect	cstackCOMRAM
   255  000001                     __pcstackCOMRAM:
   256                           	opt callstack 0
   257  000001                     ??_rutina:
   258  000001                     
   259                           ; 1 bytes @ 0x0
   260  000001                     	ds	3
   261  000004                     rutina@dato:
   262                           	opt callstack 0
   263                           
   264                           ; 1 bytes @ 0x3
   265  000004                     	ds	1
   266  000005                     ??_rutinaArranque:
   267  000005                     ?___xxtofl:
   268                           	opt callstack 0
   269  000005                     enviarRS232@valores:
   270                           	opt callstack 0
   271  000005                     fputc@c:
   272                           	opt callstack 0
   273  000005                     ___xxtofl@val:
   274                           	opt callstack 0
   275                           
   276                           ; 4 bytes @ 0x4
   277  000005                     	ds	2
   278  000007                     ??_encenderMotor:
   279  000007                     enviarRS232@numero_valores:
   280                           	opt callstack 0
   281  000007                     fputc@fp:
   282                           	opt callstack 0
   283                           
   284                           ; 2 bytes @ 0x6
   285  000007                     	ds	1
   286  000008                     ??_enviarRS232:
   287                           
   288                           ; 1 bytes @ 0x7
   289  000008                     	ds	1
   290  000009                     ??_fputc:
   291  000009                     ??___xxtofl:
   292                           
   293                           ; 1 bytes @ 0x8
   294  000009                     	ds	1
   295  00000A                     enviarRS232@i:
   296                           	opt callstack 0
   297                           
   298                           ; 1 bytes @ 0x9
   299  00000A                     	ds	3
   300  00000D                     ___xxtofl@sign:
   301                           	opt callstack 0
   302                           
   303                           ; 1 bytes @ 0xC
   304  00000D                     	ds	1
   305  00000E                     ?_vfpfcnvrt:
   306                           	opt callstack 0
   307  00000E                     ___xxtofl@exp:
   308                           	opt callstack 0
   309  00000E                     vfpfcnvrt@fp:
   310                           	opt callstack 0
   311                           
   312                           ; 2 bytes @ 0xD
   313  00000E                     	ds	1
   314  00000F                     ___xxtofl@arg:
   315                           	opt callstack 0
   316                           
   317                           ; 4 bytes @ 0xE
   318  00000F                     	ds	1
   319  000010                     vfpfcnvrt@fmt:
   320                           	opt callstack 0
   321                           
   322                           ; 2 bytes @ 0xF
   323  000010                     	ds	2
   324  000012                     vfpfcnvrt@ap:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0x11
   328  000012                     	ds	1
   329  000013                     ?___flmul:
   330                           	opt callstack 0
   331  000013                     ___flmul@b:
   332                           	opt callstack 0
   333                           
   334                           ; 4 bytes @ 0x12
   335  000013                     	ds	1
   336  000014                     ?_vfprintf:
   337                           	opt callstack 0
   338  000014                     vfprintf@fp:
   339                           	opt callstack 0
   340                           
   341                           ; 2 bytes @ 0x13
   342  000014                     	ds	2
   343  000016                     vfprintf@fmt:
   344                           	opt callstack 0
   345                           
   346                           ; 2 bytes @ 0x15
   347  000016                     	ds	1
   348  000017                     ___flmul@a:
   349                           	opt callstack 0
   350                           
   351                           ; 4 bytes @ 0x16
   352  000017                     	ds	1
   353  000018                     vfprintf@ap:
   354                           	opt callstack 0
   355                           
   356                           ; 2 bytes @ 0x17
   357  000018                     	ds	2
   358  00001A                     vfprintf@cfmt:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0x19
   362  00001A                     	ds	1
   363  00001B                     ??___flmul:
   364                           
   365                           ; 1 bytes @ 0x1A
   366  00001B                     	ds	1
   367  00001C                     ?_sprintf:
   368                           	opt callstack 0
   369  00001C                     sprintf@s:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x1B
   373  00001C                     	ds	2
   374  00001E                     sprintf@fmt:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x1D
   378  00001E                     	ds	1
   379  00001F                     ___flmul@sign:
   380                           	opt callstack 0
   381                           
   382                           ; 1 bytes @ 0x1E
   383  00001F                     	ds	1
   384  000020                     ___flmul@grs:
   385                           	opt callstack 0
   386                           
   387                           ; 4 bytes @ 0x1F
   388  000020                     	ds	2
   389  000022                     sprintf@ap:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0x21
   393  000022                     	ds	2
   394  000024                     ___flmul@aexp:
   395                           	opt callstack 0
   396  000024                     sprintf@f:
   397                           	opt callstack 0
   398                           
   399                           ; 6 bytes @ 0x23
   400  000024                     	ds	1
   401  000025                     ___flmul@bexp:
   402                           	opt callstack 0
   403                           
   404                           ; 1 bytes @ 0x24
   405  000025                     	ds	1
   406  000026                     ___flmul@prod:
   407                           	opt callstack 0
   408                           
   409                           ; 4 bytes @ 0x25
   410  000026                     	ds	4
   411  00002A                     ___flmul@temp:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x29
   415  00002A                     	ds	2
   416  00002C                     ?___fladd:
   417                           	opt callstack 0
   418  00002C                     ?___fltol:
   419                           	opt callstack 0
   420  00002C                     ___fltol@f1:
   421                           	opt callstack 0
   422  00002C                     ___fladd@b:
   423                           	opt callstack 0
   424                           
   425                           ; 4 bytes @ 0x2B
   426  00002C                     	ds	4
   427  000030                     ??___fltol:
   428  000030                     ___fladd@a:
   429                           	opt callstack 0
   430                           
   431                           ; 4 bytes @ 0x2F
   432  000030                     	ds	4
   433  000034                     ??___fladd:
   434  000034                     ___fltol@sign1:
   435                           	opt callstack 0
   436                           
   437                           ; 1 bytes @ 0x33
   438  000034                     	ds	1
   439  000035                     ___fltol@exp1:
   440                           	opt callstack 0
   441                           
   442                           ; 1 bytes @ 0x34
   443  000035                     	ds	3
   444  000038                     ___fladd@signs:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0x37
   448  000038                     	ds	1
   449  000039                     ___fladd@aexp:
   450                           	opt callstack 0
   451                           
   452                           ; 1 bytes @ 0x38
   453  000039                     	ds	1
   454  00003A                     ___fladd@bexp:
   455                           	opt callstack 0
   456                           
   457                           ; 1 bytes @ 0x39
   458  00003A                     	ds	1
   459  00003B                     ___fladd@grs:
   460                           	opt callstack 0
   461                           
   462                           ; 1 bytes @ 0x3A
   463  00003B                     	ds	1
   464  00003C                     fijarVelocidad@DC:
   465                           	opt callstack 0
   466                           
   467                           ; 4 bytes @ 0x3B
   468  00003C                     	ds	4
   469  000040                     _fijarVelocidad$1328:
   470                           	opt callstack 0
   471                           
   472                           ; 4 bytes @ 0x3F
   473  000040                     	ds	4
   474  000044                     fijarVelocidad@speed:
   475                           	opt callstack 0
   476                           
   477                           ; 1 bytes @ 0x43
   478  000044                     	ds	1
   479  000045                     logicaEstadoSiguiente@comand:
   480                           	opt callstack 0
   481                           
   482                           ; 2 bytes @ 0x44
   483  000045                     	ds	2
   484  000047                     ??_logicaEstadoSiguiente:
   485                           
   486                           ; 1 bytes @ 0x46
   487  000047                     	ds	5
   488  00004C                     
   489                           ; 1 bytes @ 0x4B
   490 ;;
   491 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   492 ;;
   493 ;; *************** function _main *****************
   494 ;; Defined at:
   495 ;;		line 40 in file "Test_PWM_bluethoot.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   513 ;;Total ram usage:        0 bytes
   514 ;; Hardware stack levels required when called:    7
   515 ;; This function calls:
   516 ;;		_configurarInterrupciones
   517 ;;		_configurarPWM7
   518 ;;		_configurarPuertos
   519 ;;		_configurarRS232
   520 ;;		_enviarRS232
   521 ;;		_logicaEstadoSiguiente
   522 ;; This function is called by:
   523 ;;		Startup code after reset
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text0
   528  001AE6                     __ptext0:
   529                           	opt callstack 0
   530  001AE6                     _main:
   531                           	opt callstack 24
   532                           
   533                           ;Test_PWM_bluethoot.c: 41:     configurarPuertos();
   534                           
   535                           ;incstack = 0
   536  001AE6  EC96  F00E         	call	_configurarPuertos	;wreg free
   537                           
   538                           ;Test_PWM_bluethoot.c: 42:     configurarPWM7();
   539  001AEA  EC7A  F00E         	call	_configurarPWM7	;wreg free
   540                           
   541                           ;Test_PWM_bluethoot.c: 43:     configurarRS232();
   542  001AEE  EC8A  F00E         	call	_configurarRS232	;wreg free
   543                           
   544                           ;Test_PWM_bluethoot.c: 44:     configurarInterrupciones();
   545  001AF2  EC9C  F00E         	call	_configurarInterrupciones	;wreg free
   546                           
   547                           ;Test_PWM_bluethoot.c: 45:     TRISDbits.TRISD4 = 0;
   548  001AF6  9895               	bcf	3989,4,c	;volatile
   549                           
   550                           ;Test_PWM_bluethoot.c: 46:     TXREG1 = 'H';
   551  001AF8  0E48               	movlw	72
   552  001AFA  6EAE               	movwf	4014,c	;volatile
   553                           
   554                           ;Test_PWM_bluethoot.c: 47:     PORTD = 0x00;
   555  001AFC  0E00               	movlw	0
   556  001AFE  6E83               	movwf	3971,c	;volatile
   557                           
   558                           ;Test_PWM_bluethoot.c: 48:     CCP7CONbits.DC7B = 0b10;
   559  001B00  010F               	movlb	15	; () banked
   560  001B02  5109               	movf	9,w,b	;volatile
   561  001B04  0BCF               	andlw	-49
   562  001B06  0920               	iorlw	32
   563  001B08  6F09               	movwf	9,b	;volatile
   564                           
   565                           ;Test_PWM_bluethoot.c: 49:     CCPR7L = 0x07;
   566  001B0A  0E07               	movlw	7
   567  001B0C  6F0A               	movwf	10,b	;volatile
   568                           
   569                           ; BSR set to: 15
   570                           ;Test_PWM_bluethoot.c: 50:     T2CONbits.TMR2ON = 1;
   571  001B0E  84CA               	bsf	4042,2,c	;volatile
   572  001B10                     l2123:
   573                           
   574                           ;Test_PWM_bluethoot.c: 52:         if(bandera == 1){
   575  001B10  0457               	decf	_bandera,w,c
   576  001B12  A4D8               	btfss	status,2,c
   577  001B14  D008               	goto	l2129
   578                           
   579                           ;Test_PWM_bluethoot.c: 53:             bandera = 0;
   580  001B16  0E00               	movlw	0
   581  001B18  6E57               	movwf	_bandera,c
   582                           
   583                           ;Test_PWM_bluethoot.c: 54:             logicaEstadoSiguiente(datos);
   584  001B1A  0E94               	movlw	low _datos
   585  001B1C  6E45               	movwf	logicaEstadoSiguiente@comand,c
   586  001B1E  0E00               	movlw	high _datos
   587  001B20  6E46               	movwf	logicaEstadoSiguiente@comand+1,c
   588  001B22  EC60  F00B         	call	_logicaEstadoSiguiente	;wreg free
   589  001B26                     l2129:
   590                           
   591                           ;Test_PWM_bluethoot.c: 56:         if(PORTDbits.RD5 == 1 && fuego==1){
   592  001B26  AA83               	btfss	3971,5,c	;volatile
   593  001B28  D00D               	goto	l2137
   594  001B2A  045A               	decf	_fuego,w,c
   595  001B2C  A4D8               	btfss	status,2,c
   596  001B2E  D00A               	goto	l2137
   597                           
   598                           ;Test_PWM_bluethoot.c: 57:             enviarRS232("FUEGO!", 6);
   599  001B30  0E1A               	movlw	low STR_3
   600  001B32  6E05               	movwf	enviarRS232@valores,c
   601  001B34  0E0F               	movlw	high STR_3
   602  001B36  6E06               	movwf	enviarRS232@valores+1,c
   603  001B38  0E06               	movlw	6
   604  001B3A  6E07               	movwf	enviarRS232@numero_valores,c
   605  001B3C  ECDD  F00D         	call	_enviarRS232	;wreg free
   606                           
   607                           ;Test_PWM_bluethoot.c: 58:             fuego = 0;
   608  001B40  0E00               	movlw	0
   609  001B42  6E5A               	movwf	_fuego,c
   610  001B44                     l2137:
   611                           
   612                           ;Test_PWM_bluethoot.c: 60:         if(PORTDbits.RD5 == 0 && fuego==0){
   613  001B44  BA83               	btfsc	3971,5,c	;volatile
   614  001B46  D7E4               	goto	l2123
   615  001B48  505A               	movf	_fuego,w,c
   616  001B4A  A4D8               	btfss	status,2,c
   617  001B4C  D7E1               	goto	l2123
   618                           
   619                           ;Test_PWM_bluethoot.c: 61:             enviarRS232("APAGADO", 7);
   620  001B4E  0E12               	movlw	low STR_4
   621  001B50  6E05               	movwf	enviarRS232@valores,c
   622  001B52  0E0F               	movlw	high STR_4
   623  001B54  6E06               	movwf	enviarRS232@valores+1,c
   624  001B56  0E07               	movlw	7
   625  001B58  6E07               	movwf	enviarRS232@numero_valores,c
   626  001B5A  ECDD  F00D         	call	_enviarRS232	;wreg free
   627                           
   628                           ;Test_PWM_bluethoot.c: 62:             fuego = 1;
   629  001B5E  0E01               	movlw	1
   630  001B60  6E5A               	movwf	_fuego,c
   631  001B62  D7D6               	goto	l2123
   632  001B64                     __end_of_main:
   633                           	opt callstack 0
   634                           
   635 ;; *************** function _logicaEstadoSiguiente *****************
   636 ;; Defined at:
   637 ;;		line 12 in file "./../../LIBRERIAS/Estados.h"
   638 ;; Parameters:    Size  Location     Type
   639 ;;  comand          2   68[COMRAM] PTR unsigned char 
   640 ;;		 -> datos(10), 
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  texto          20    0[BANK0 ] unsigned char [20]
   643 ;;  medicion        2   20[BANK0 ] unsigned int 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   654 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   655 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   656 ;;      Totals:         7      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   657 ;;Total ram usage:       29 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    6
   660 ;; This function calls:
   661 ;;		_encenderMotor
   662 ;;		_enviarRS232
   663 ;;		_fijarVelocidad
   664 ;;		_sprintf
   665 ;; This function is called by:
   666 ;;		_main
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text1
   671  0016C0                     __ptext1:
   672                           	opt callstack 0
   673  0016C0                     _logicaEstadoSiguiente:
   674                           	opt callstack 24
   675                           
   676                           ;./../../LIBRERIAS/Estados.h: 14:     unsigned char texto[20] = {'\0'};
   677                           
   678                           ;incstack = 0
   679  0016C0  EE20  F09E         	lfsr	2,logicaEstadoSiguiente@texto
   680  0016C4  0E13               	movlw	19
   681  0016C6                     u1781:
   682  0016C6  6ADE               	clrf	postinc2,c
   683  0016C8  06E8               	decf	wreg,f,c
   684  0016CA  E2FD               	bc	u1781
   685                           
   686                           ;./../../LIBRERIAS/Estados.h: 15:     switch (comand[0]){
   687  0016CC  D063               	goto	l2091
   688  0016CE                     l2067:
   689                           
   690                           ;./../../LIBRERIAS/Estados.h: 17:             fijarVelocidad(0);
   691  0016CE  0E00               	movlw	0
   692  0016D0  ECE9  F00B         	call	_fijarVelocidad
   693  0016D4                     l2069:
   694                           
   695                           ;./../../LIBRERIAS/Estados.h: 18:             encenderMotor();
   696  0016D4  EC4C  F00E         	call	_encenderMotor	;wreg free
   697                           
   698                           ;./../../LIBRERIAS/Estados.h: 19:             break;
   699  0016D8  0012               	return	
   700  0016DA                     l2071:
   701                           
   702                           ;./../../LIBRERIAS/Estados.h: 21:             fijarVelocidad(50);
   703  0016DA  0E32               	movlw	50
   704  0016DC  ECE9  F00B         	call	_fijarVelocidad
   705  0016E0  D7F9               	goto	l2069
   706  0016E2                     l2075:
   707                           
   708                           ;./../../LIBRERIAS/Estados.h: 25:             sprintf(texto,"SERVO ++");
   709  0016E2  0E9E               	movlw	low logicaEstadoSiguiente@texto
   710  0016E4  6E1C               	movwf	sprintf@s,c
   711  0016E6  0E00               	movlw	high logicaEstadoSiguiente@texto
   712  0016E8  6E1D               	movwf	sprintf@s+1,c
   713  0016EA  0E01               	movlw	low STR_1
   714  0016EC  6E1E               	movwf	sprintf@fmt,c
   715  0016EE  0E0F               	movlw	high STR_1
   716  0016F0  6E1F               	movwf	sprintf@fmt+1,c
   717  0016F2  EC05  F00E         	call	_sprintf	;wreg free
   718                           
   719                           ;./../../LIBRERIAS/Estados.h: 26:             enviarRS232(texto, 8);
   720  0016F6  0E9E               	movlw	low logicaEstadoSiguiente@texto
   721  0016F8  6E05               	movwf	enviarRS232@valores,c
   722  0016FA  0E00               	movlw	high logicaEstadoSiguiente@texto
   723  0016FC  6E06               	movwf	enviarRS232@valores+1,c
   724  0016FE  0E08               	movlw	8
   725  001700  6E07               	movwf	enviarRS232@numero_valores,c
   726  001702  ECDD  F00D         	call	_enviarRS232	;wreg free
   727                           
   728                           ;./../../LIBRERIAS/Estados.h: 27:             break;
   729  001706  0012               	return	
   730  001708                     l2079:
   731                           
   732                           ;./../../LIBRERIAS/Estados.h: 32:             sprintf(texto, "STOP ++");
   733  001708  0E9E               	movlw	low logicaEstadoSiguiente@texto
   734  00170A  6E1C               	movwf	sprintf@s,c
   735  00170C  0E00               	movlw	high logicaEstadoSiguiente@texto
   736  00170E  6E1D               	movwf	sprintf@s+1,c
   737  001710  0E0A               	movlw	low STR_2
   738  001712  6E1E               	movwf	sprintf@fmt,c
   739  001714  0E0F               	movlw	high STR_2
   740  001716  6E1F               	movwf	sprintf@fmt+1,c
   741  001718  EC05  F00E         	call	_sprintf	;wreg free
   742                           
   743                           ;./../../LIBRERIAS/Estados.h: 33:             enviarRS232(texto, 7);
   744  00171C  0E9E               	movlw	low logicaEstadoSiguiente@texto
   745  00171E  6E05               	movwf	enviarRS232@valores,c
   746  001720  0E00               	movlw	high logicaEstadoSiguiente@texto
   747  001722  6E06               	movwf	enviarRS232@valores+1,c
   748  001724  0E07               	movlw	7
   749  001726  6E07               	movwf	enviarRS232@numero_valores,c
   750  001728  ECDD  F00D         	call	_enviarRS232	;wreg free
   751                           
   752                           ;./../../LIBRERIAS/Estados.h: 34:             break;
   753  00172C  0012               	return	
   754  00172E                     l2083:
   755                           
   756                           ;./../../LIBRERIAS/Estados.h: 36:             medicion = (comand[1] - 0x30)*100 + (coman
      +                          d[2] - 0x30)*10 + comand[3] - 0x30;
   757  00172E  EE20 F001          	lfsr	2,1
   758  001732  5045               	movf	logicaEstadoSiguiente@comand,w,c
   759  001734  26D9               	addwf	fsr2l,f,c
   760  001736  5046               	movf	logicaEstadoSiguiente@comand+1,w,c
   761  001738  22DA               	addwfc	fsr2h,f,c
   762  00173A  50DF               	movf	indf2,w,c
   763  00173C  6E47               	movwf	??_logicaEstadoSiguiente& (0+255),c
   764  00173E  5047               	movf	??_logicaEstadoSiguiente,w,c
   765  001740  0D64               	mullw	100
   766  001742  CFF3 F048          	movff	prodl,??_logicaEstadoSiguiente+1
   767  001746  CFF4 F049          	movff	prodh,??_logicaEstadoSiguiente+2
   768  00174A  EE20 F002          	lfsr	2,2
   769  00174E  5045               	movf	logicaEstadoSiguiente@comand,w,c
   770  001750  26D9               	addwf	fsr2l,f,c
   771  001752  5046               	movf	logicaEstadoSiguiente@comand+1,w,c
   772  001754  22DA               	addwfc	fsr2h,f,c
   773  001756  50DF               	movf	indf2,w,c
   774  001758  6E4A               	movwf	(??_logicaEstadoSiguiente+3)& (0+255),c
   775  00175A  504A               	movf	??_logicaEstadoSiguiente+3,w,c
   776  00175C  0D0A               	mullw	10
   777  00175E  50F3               	movf	prodl,w,c
   778  001760  2648               	addwf	??_logicaEstadoSiguiente+1,f,c
   779  001762  50F4               	movf	prodh,w,c
   780  001764  2249               	addwfc	??_logicaEstadoSiguiente+2,f,c
   781  001766  EE20 F003          	lfsr	2,3
   782  00176A  5045               	movf	logicaEstadoSiguiente@comand,w,c
   783  00176C  26D9               	addwf	fsr2l,f,c
   784  00176E  5046               	movf	logicaEstadoSiguiente@comand+1,w,c
   785  001770  22DA               	addwfc	fsr2h,f,c
   786  001772  50DF               	movf	indf2,w,c
   787  001774  6E4B               	movwf	(??_logicaEstadoSiguiente+4)& (0+255),c
   788  001776  504B               	movf	??_logicaEstadoSiguiente+4,w,c
   789  001778  2648               	addwf	??_logicaEstadoSiguiente+1,f,c
   790  00177A  0E00               	movlw	0
   791  00177C  2249               	addwfc	??_logicaEstadoSiguiente+2,f,c
   792  00177E  0E30               	movlw	48
   793  001780  2448               	addwf	??_logicaEstadoSiguiente+1,w,c
   794  001782  0100               	movlb	0	; () banked
   795  001784  6FB2               	movwf	logicaEstadoSiguiente@medicion& (0+255),b
   796  001786  0EEB               	movlw	235
   797  001788  2049               	addwfc	??_logicaEstadoSiguiente+2,w,c
   798  00178A  6FB3               	movwf	(logicaEstadoSiguiente@medicion+1)& (0+255),b
   799                           
   800                           ; BSR set to: 0
   801                           ;./../../LIBRERIAS/Estados.h: 37:             fijarVelocidad(medicion);
   802  00178C  51B2               	movf	logicaEstadoSiguiente@medicion& (0+255),w,b
   803  00178E  ECE9  F00B         	call	_fijarVelocidad
   804  001792  D7A0               	goto	l2069
   805  001794                     l2091:
   806  001794  C045  FFD9         	movff	logicaEstadoSiguiente@comand,fsr2l
   807  001798  C046  FFDA         	movff	logicaEstadoSiguiente@comand+1,fsr2h
   808  00179C  50DF               	movf	indf2,w,c
   809  00179E  6E47               	movwf	??_logicaEstadoSiguiente& (0+255),c
   810  0017A0  6A48               	clrf	(??_logicaEstadoSiguiente+1)& (0+255),c
   811                           
   812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   813                           ; Switch size 1, requested type "simple"
   814                           ; Number of cases is 1, Range of values is 0 to 0
   815                           ; switch strategies available:
   816                           ; Name         Instructions Cycles
   817                           ; simple_byte            4     3 (average)
   818                           ;	Chosen strategy is simple_byte
   819  0017A2  5048               	movf	??_logicaEstadoSiguiente+1,w,c
   820  0017A4  0A00               	xorlw	0	; case 0
   821  0017A6  A4D8               	btfss	status,2,c
   822  0017A8  0012               	return	
   823                           
   824                           ; Switch size 1, requested type "simple"
   825                           ; Number of cases is 6, Range of values is 70 to 119
   826                           ; switch strategies available:
   827                           ; Name         Instructions Cycles
   828                           ; simple_byte           19    10 (average)
   829                           ;	Chosen strategy is simple_byte
   830  0017AA  5047               	movf	??_logicaEstadoSiguiente,w,c
   831  0017AC  0A46               	xorlw	70	; case 70
   832  0017AE  B4D8               	btfsc	status,2,c
   833  0017B0  D7BE               	goto	l2083
   834  0017B2  0A27               	xorlw	39	; case 97
   835  0017B4  B4D8               	btfsc	status,2,c
   836  0017B6  D795               	goto	l2075
   837  0017B8  0A02               	xorlw	2	; case 99
   838  0017BA  B4D8               	btfsc	status,2,c
   839  0017BC  D7A5               	goto	l2079
   840  0017BE  0A07               	xorlw	7	; case 100
   841  0017C0  B4D8               	btfsc	status,2,c
   842  0017C2  0012               	return	
   843  0017C4  0A17               	xorlw	23	; case 115
   844  0017C6  B4D8               	btfsc	status,2,c
   845  0017C8  D788               	goto	l2071
   846  0017CA  0A04               	xorlw	4	; case 119
   847  0017CC  A4D8               	btfss	status,2,c
   848  0017CE  0012               	return	
   849  0017D0  D77E               	goto	l2067
   850  0017D2                     __end_of_logicaEstadoSiguiente:
   851                           	opt callstack 0
   852                           
   853 ;; *************** function _sprintf *****************
   854 ;; Defined at:
   855 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  s               2   27[COMRAM] PTR unsigned char 
   858 ;;		 -> logicaEstadoSiguiente@texto(20), 
   859 ;;  fmt             2   29[COMRAM] PTR const unsigned char 
   860 ;;		 -> STR_2(8), STR_1(9), 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  f               6   35[COMRAM] struct _IO_FILE
   863 ;;  ap              2   33[COMRAM] PTR void [1]
   864 ;;		 -> ?_sprintf(2), 
   865 ;;  ret             2    0        int 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  2   27[COMRAM] int 
   868 ;; Registers used:
   869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   876 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   878 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   879 ;;Total ram usage:       14 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    5
   882 ;; This function calls:
   883 ;;		_vfprintf
   884 ;; This function is called by:
   885 ;;		_logicaEstadoSiguiente
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text2
   890  001C0A                     __ptext2:
   891                           	opt callstack 0
   892  001C0A                     _sprintf:
   893                           	opt callstack 24
   894                           
   895                           ;incstack = 0
   896  001C0A  0E20               	movlw	low (?_sprintf+4)
   897  001C0C  6E22               	movwf	sprintf@ap,c
   898  001C0E  0E00               	movlw	high (?_sprintf+4)
   899  001C10  6E23               	movwf	sprintf@ap+1,c
   900  001C12  C01C  F024         	movff	sprintf@s,sprintf@f
   901  001C16  C01D  F025         	movff	sprintf@s+1,sprintf@f+1
   902  001C1A  0E00               	movlw	0
   903  001C1C  6E27               	movwf	sprintf@f+3,c
   904  001C1E  0E00               	movlw	0
   905  001C20  6E26               	movwf	sprintf@f+2,c
   906  001C22  0E00               	movlw	0
   907  001C24  6E29               	movwf	sprintf@f+5,c
   908  001C26  0E00               	movlw	0
   909  001C28  6E28               	movwf	sprintf@f+4,c
   910  001C2A  0E24               	movlw	low sprintf@f
   911  001C2C  6E14               	movwf	vfprintf@fp,c
   912  001C2E  0E00               	movlw	high sprintf@f
   913  001C30  6E15               	movwf	vfprintf@fp+1,c
   914  001C32  C01E  F016         	movff	sprintf@fmt,vfprintf@fmt
   915  001C36  C01F  F017         	movff	sprintf@fmt+1,vfprintf@fmt+1
   916  001C3A  0E22               	movlw	low sprintf@ap
   917  001C3C  6E18               	movwf	vfprintf@ap,c
   918  001C3E  0E00               	movlw	high sprintf@ap
   919  001C40  6E19               	movwf	vfprintf@ap+1,c
   920  001C42  ECB2  F00D         	call	_vfprintf	;wreg free
   921  001C46  5026               	movf	sprintf@f+2,w,c
   922  001C48  241C               	addwf	sprintf@s,w,c
   923  001C4A  6ED9               	movwf	fsr2l,c
   924  001C4C  5027               	movf	sprintf@f+3,w,c
   925  001C4E  201D               	addwfc	sprintf@s+1,w,c
   926  001C50  6EDA               	movwf	fsr2h,c
   927  001C52  0E00               	movlw	0
   928  001C54  6EDF               	movwf	indf2,c
   929  001C56  0012               	return		;funcret
   930  001C58                     __end_of_sprintf:
   931                           	opt callstack 0
   932                           
   933 ;; *************** function _vfprintf *****************
   934 ;; Defined at:
   935 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
   938 ;;		 -> sprintf@f(6), 
   939 ;;  fmt             2   21[COMRAM] PTR const unsigned char 
   940 ;;		 -> STR_2(8), STR_1(9), 
   941 ;;  ap              2   23[COMRAM] PTR PTR void 
   942 ;;		 -> sprintf@ap(2), 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  cfmt            2   25[COMRAM] PTR unsigned char 
   945 ;;		 -> STR_2(8), STR_1(9), 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  2   19[COMRAM] int 
   948 ;; Registers used:
   949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   955 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   958 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   959 ;;Total ram usage:        8 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    4
   962 ;; This function calls:
   963 ;;		_vfpfcnvrt
   964 ;; This function is called by:
   965 ;;		_sprintf
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text3
   970  001B64                     __ptext3:
   971                           	opt callstack 0
   972  001B64                     _vfprintf:
   973                           	opt callstack 24
   974                           
   975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   976                           
   977                           ;incstack = 0
   978  001B64  C016  F01A         	movff	vfprintf@fmt,vfprintf@cfmt
   979  001B68  C017  F01B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   980                           
   981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   982  001B6C  0E00               	movlw	0
   983  001B6E  6E4D               	movwf	_nout+1,c
   984  001B70  0E00               	movlw	0
   985  001B72  6E4C               	movwf	_nout,c
   986                           
   987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   988  001B74  D012               	goto	l1587
   989  001B76                     l1585:
   990                           
   991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   992  001B76  C014  F00E         	movff	vfprintf@fp,vfpfcnvrt@fp
   993  001B7A  C015  F00F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   994  001B7E  0E1A               	movlw	low vfprintf@cfmt
   995  001B80  6E10               	movwf	vfpfcnvrt@fmt,c
   996  001B82  0E00               	movlw	high vfprintf@cfmt
   997  001B84  6E11               	movwf	vfpfcnvrt@fmt+1,c
   998  001B86  C018  F012         	movff	vfprintf@ap,vfpfcnvrt@ap
   999  001B8A  C019  F013         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1000  001B8E  EC59  F00C         	call	_vfpfcnvrt	;wreg free
  1001  001B92  500E               	movf	?_vfpfcnvrt,w,c
  1002  001B94  264C               	addwf	_nout,f,c
  1003  001B96  500F               	movf	?_vfpfcnvrt+1,w,c
  1004  001B98  224D               	addwfc	_nout+1,f,c
  1005  001B9A                     l1587:
  1006                           
  1007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1008  001B9A  C01A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1009  001B9E  C01B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1010  001BA2                     	if	0	;tblptru may be non-zero
  1011  001BA2                     	endif
  1012  001BA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1013  001BA2  0E00               	movlw	low (__mediumconst shr (0+16))
  1014  001BA4  6EF8               	movwf	tblptru,c
  1015  001BA6                     	endif
  1016  001BA6  0008               	tblrd		*
  1017  001BA8  50F5               	movf	tablat,w,c
  1018  001BAA  0900               	iorlw	0
  1019  001BAC  A4D8               	btfss	status,2,c
  1020  001BAE  D7E3               	goto	l1585
  1021                           
  1022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1023  001BB0  C04C  F014         	movff	_nout,?_vfprintf
  1024  001BB4  C04D  F015         	movff	_nout+1,?_vfprintf+1
  1025  001BB8  0012               	return		;funcret
  1026  001BBA                     __end_of_vfprintf:
  1027                           	opt callstack 0
  1028                           
  1029 ;; *************** function _vfpfcnvrt *****************
  1030 ;; Defined at:
  1031 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1034 ;;		 -> sprintf@f(6), 
  1035 ;;  fmt             2   15[COMRAM] PTR PTR unsigned char 
  1036 ;;		 -> vfprintf@cfmt(2), 
  1037 ;;  ap              2   17[COMRAM] PTR PTR void 
  1038 ;;		 -> sprintf@ap(2), 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  llu             8    0        unsigned long long 
  1041 ;;  ll              8    0        long long 
  1042 ;;  f               4    0        long long 
  1043 ;;  vp              3    0        PTR void 
  1044 ;;  ct              3    0        unsigned char [3]
  1045 ;;  cp              3    0        PTR unsigned char 
  1046 ;;  i               2    0        int 
  1047 ;;  done            2    0        int 
  1048 ;;  c               1    0        unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  2   13[COMRAM] int 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1058 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1062 ;;Total ram usage:        6 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    3
  1065 ;; This function calls:
  1066 ;;		_fputc
  1067 ;; This function is called by:
  1068 ;;		_vfprintf
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text4
  1073  0018B2                     __ptext4:
  1074                           	opt callstack 0
  1075  0018B2                     _vfpfcnvrt:
  1076                           	opt callstack 24
  1077                           
  1078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1079                           
  1080                           ;incstack = 0
  1081  0018B2  C010  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1082  0018B6  C011  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1083  0018BA  CFDE FFF6          	movff	postinc2,tblptrl
  1084  0018BE  CFDD FFF7          	movff	postdec2,tblptrh
  1085  0018C2                     	if	0	;tblptru may be non-zero
  1086  0018C2                     	endif
  1087  0018C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1088  0018C2  0E00               	movlw	low (__mediumconst shr (0+16))
  1089  0018C4  6EF8               	movwf	tblptru,c
  1090  0018C6                     	endif
  1091  0018C6  0008               	tblrd		*
  1092  0018C8  50F5               	movf	tablat,w,c
  1093  0018CA  0A25               	xorlw	37
  1094  0018CC  A4D8               	btfss	status,2,c
  1095  0018CE  D042               	goto	l1567
  1096                           
  1097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1098  0018D0  C010  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1099  0018D4  C011  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1100  0018D8  2ADE               	incf	postinc2,f,c
  1101  0018DA  0E00               	movlw	0
  1102  0018DC  22DD               	addwfc	postdec2,f,c
  1103                           
  1104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1105  0018DE  0E00               	movlw	0
  1106  0018E0  6E4F               	movwf	_width+1,c
  1107  0018E2  0E00               	movlw	0
  1108  0018E4  6E4E               	movwf	_width,c
  1109  0018E6  C04E  F052         	movff	_width,_flags
  1110  0018EA  C04F  F053         	movff	_width+1,_flags+1
  1111                           
  1112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1113  0018EE  6850               	setf	_prec,c
  1114  0018F0  6851               	setf	_prec+1,c
  1115                           
  1116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1117  0018F2  C010  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1118  0018F6  C011  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1119  0018FA  CFDE FFF6          	movff	postinc2,tblptrl
  1120  0018FE  CFDD FFF7          	movff	postdec2,tblptrh
  1121  001902                     	if	0	;tblptru may be non-zero
  1122  001902                     	endif
  1123  001902                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1124  001902  0E00               	movlw	low (__mediumconst shr (0+16))
  1125  001904  6EF8               	movwf	tblptru,c
  1126  001906                     	endif
  1127  001906  0008               	tblrd		*
  1128  001908  50F5               	movf	tablat,w,c
  1129  00190A  0A25               	xorlw	37
  1130  00190C  A4D8               	btfss	status,2,c
  1131  00190E  D016               	goto	l1561
  1132                           
  1133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1134  001910  C010  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1135  001914  C011  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1136  001918  2ADE               	incf	postinc2,f,c
  1137  00191A  0E00               	movlw	0
  1138  00191C  22DD               	addwfc	postdec2,f,c
  1139                           
  1140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1141  00191E  0E00               	movlw	0
  1142  001920  6E06               	movwf	fputc@c+1,c
  1143  001922  0E25               	movlw	37
  1144  001924  6E05               	movwf	fputc@c,c
  1145  001926  C00E  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1146  00192A  C00F  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1147  00192E  EC23  F00D         	call	_fputc	;wreg free
  1148  001932                     l1557:
  1149                           
  1150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1151  001932  0E00               	movlw	0
  1152  001934  6E0F               	movwf	?_vfpfcnvrt+1,c
  1153  001936  0E01               	movlw	1
  1154  001938  6E0E               	movwf	?_vfpfcnvrt,c
  1155  00193A  0012               	return	
  1156  00193C                     l1561:
  1157                           
  1158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1159  00193C  C010  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1160  001940  C011  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1161  001944  2ADE               	incf	postinc2,f,c
  1162  001946  0E00               	movlw	0
  1163  001948  22DD               	addwfc	postdec2,f,c
  1164                           
  1165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1166  00194A  0E00               	movlw	0
  1167  00194C  6E0F               	movwf	?_vfpfcnvrt+1,c
  1168  00194E  0E00               	movlw	0
  1169  001950  6E0E               	movwf	?_vfpfcnvrt,c
  1170  001952  0012               	return	
  1171  001954                     l1567:
  1172                           
  1173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1174  001954  C010  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1175  001958  C011  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1176  00195C  CFDE FFF6          	movff	postinc2,tblptrl
  1177  001960  CFDD FFF7          	movff	postdec2,tblptrh
  1178  001964                     	if	0	;tblptru may be non-zero
  1179  001964                     	endif
  1180  001964                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1181  001964  0E00               	movlw	low (__mediumconst shr (0+16))
  1182  001966  6EF8               	movwf	tblptru,c
  1183  001968                     	endif
  1184  001968  0008               	tblrd		*
  1185  00196A  50F5               	movf	tablat,w,c
  1186  00196C  6E05               	movwf	fputc@c,c
  1187  00196E  6A06               	clrf	fputc@c+1,c
  1188  001970  C00E  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1189  001974  C00F  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1190  001978  EC23  F00D         	call	_fputc	;wreg free
  1191                           
  1192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1193  00197C  C010  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1194  001980  C011  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1195  001984  2ADE               	incf	postinc2,f,c
  1196  001986  0E00               	movlw	0
  1197  001988  22DD               	addwfc	postdec2,f,c
  1198  00198A  D7D3               	goto	l1557
  1199  00198C                     __end_of_vfpfcnvrt:
  1200                           	opt callstack 0
  1201                           
  1202 ;; *************** function _fputc *****************
  1203 ;; Defined at:
  1204 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  c               2    4[COMRAM] int 
  1207 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1208 ;;		 -> sprintf@f(6), 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  2    4[COMRAM] int 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1222 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1223 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1224 ;;Total ram usage:        9 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    2
  1227 ;; This function calls:
  1228 ;;		_putch
  1229 ;; This function is called by:
  1230 ;;		_vfpfcnvrt
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text5
  1235  001A46                     __ptext5:
  1236                           	opt callstack 0
  1237  001A46                     _fputc:
  1238                           	opt callstack 24
  1239                           
  1240                           ;incstack = 0
  1241  001A46  5007               	movf	fputc@fp,w,c
  1242  001A48  1008               	iorwf	fputc@fp+1,w,c
  1243  001A4A  B4D8               	btfsc	status,2,c
  1244  001A4C  D004               	goto	u950
  1245  001A4E  5007               	movf	fputc@fp,w,c
  1246  001A50  1008               	iorwf	fputc@fp+1,w,c
  1247  001A52  A4D8               	btfss	status,2,c
  1248  001A54  D004               	goto	l1535
  1249  001A56                     u950:
  1250  001A56  5005               	movf	fputc@c,w,c
  1251  001A58  ECA1  F00E         	call	_putch
  1252  001A5C  0012               	return	
  1253  001A5E                     l1535:
  1254  001A5E  EE20 F004          	lfsr	2,4
  1255  001A62  5007               	movf	fputc@fp,w,c
  1256  001A64  26D9               	addwf	fsr2l,f,c
  1257  001A66  5008               	movf	fputc@fp+1,w,c
  1258  001A68  22DA               	addwfc	fsr2h,f,c
  1259  001A6A  50DE               	movf	postinc2,w,c
  1260  001A6C  10DE               	iorwf	postinc2,w,c
  1261  001A6E  B4D8               	btfsc	status,2,c
  1262  001A70  D016               	goto	u970
  1263  001A72  EE20 F004          	lfsr	2,4
  1264  001A76  5007               	movf	fputc@fp,w,c
  1265  001A78  26D9               	addwf	fsr2l,f,c
  1266  001A7A  5008               	movf	fputc@fp+1,w,c
  1267  001A7C  22DA               	addwfc	fsr2h,f,c
  1268  001A7E  EE10 F002          	lfsr	1,2
  1269  001A82  5007               	movf	fputc@fp,w,c
  1270  001A84  26E1               	addwf	fsr1l,f,c
  1271  001A86  5008               	movf	fputc@fp+1,w,c
  1272  001A88  22E2               	addwfc	fsr1h,f,c
  1273  001A8A  50DE               	movf	postinc2,w,c
  1274  001A8C  5CE6               	subwf	postinc1,w,c
  1275  001A8E  50E6               	movf	postinc1,w,c
  1276  001A90  0A80               	xorlw	128
  1277  001A92  6E0D               	movwf	(??_fputc+4)& (0+255),c
  1278  001A94  50DE               	movf	postinc2,w,c
  1279  001A96  0A80               	xorlw	128
  1280  001A98  580D               	subwfb	(??_fputc+4)& (0+255),w,c
  1281  001A9A  B0D8               	btfsc	status,0,c
  1282  001A9C  0012               	return	
  1283  001A9E                     u970:
  1284  001A9E  EE20 F002          	lfsr	2,2
  1285  001AA2  5007               	movf	fputc@fp,w,c
  1286  001AA4  26D9               	addwf	fsr2l,f,c
  1287  001AA6  5008               	movf	fputc@fp+1,w,c
  1288  001AA8  22DA               	addwfc	fsr2h,f,c
  1289  001AAA  CFDE F009          	movff	postinc2,??_fputc
  1290  001AAE  CFDD F00A          	movff	postdec2,??_fputc+1
  1291  001AB2  C007  FFD9         	movff	fputc@fp,fsr2l
  1292  001AB6  C008  FFDA         	movff	fputc@fp+1,fsr2h
  1293  001ABA  CFDE F00B          	movff	postinc2,??_fputc+2
  1294  001ABE  CFDD F00C          	movff	postdec2,??_fputc+3
  1295  001AC2  5009               	movf	??_fputc,w,c
  1296  001AC4  240B               	addwf	??_fputc+2,w,c
  1297  001AC6  6ED9               	movwf	fsr2l,c
  1298  001AC8  500A               	movf	??_fputc+1,w,c
  1299  001ACA  200C               	addwfc	??_fputc+3,w,c
  1300  001ACC  6EDA               	movwf	fsr2h,c
  1301  001ACE  C005  FFDF         	movff	fputc@c,indf2
  1302  001AD2  EE20 F002          	lfsr	2,2
  1303  001AD6  5007               	movf	fputc@fp,w,c
  1304  001AD8  26D9               	addwf	fsr2l,f,c
  1305  001ADA  5008               	movf	fputc@fp+1,w,c
  1306  001ADC  22DA               	addwfc	fsr2h,f,c
  1307  001ADE  2ADE               	incf	postinc2,f,c
  1308  001AE0  0E00               	movlw	0
  1309  001AE2  22DD               	addwfc	postdec2,f,c
  1310  001AE4  0012               	return		;funcret
  1311  001AE6                     __end_of_fputc:
  1312                           	opt callstack 0
  1313                           
  1314 ;; *************** function _putch *****************
  1315 ;; Defined at:
  1316 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  c               1    wreg     unsigned char 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  c               1    0[COMRAM] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1334 ;;Total ram usage:        0 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:    1
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_fputc
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text6
  1345  001D42                     __ptext6:
  1346                           	opt callstack 0
  1347  001D42                     _putch:
  1348                           	opt callstack 24
  1349                           
  1350                           ;incstack = 0
  1351  001D42  0012               	return		;funcret
  1352  001D44                     __end_of_putch:
  1353                           	opt callstack 0
  1354                           
  1355 ;; *************** function _fijarVelocidad *****************
  1356 ;; Defined at:
  1357 ;;		line 22 in file "./../../LIBRERIAS/funciones_auto.h"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  speed           1    wreg     unsigned char 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  speed           1   67[COMRAM] unsigned char 
  1362 ;;  DC              4   59[COMRAM] float 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1373 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;Total ram usage:        9 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    2
  1379 ;; This function calls:
  1380 ;;		___fladd
  1381 ;;		___flmul
  1382 ;;		___fltol
  1383 ;;		___xxtofl
  1384 ;; This function is called by:
  1385 ;;		_logicaEstadoSiguiente
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text7
  1390  0017D2                     __ptext7:
  1391                           	opt callstack 0
  1392  0017D2                     _fijarVelocidad:
  1393                           	opt callstack 27
  1394                           
  1395                           ;incstack = 0
  1396                           ;fijarVelocidad@speed stored from wreg
  1397  0017D2  6E44               	movwf	fijarVelocidad@speed,c
  1398                           
  1399                           ;./../../LIBRERIAS/funciones_auto.h: 23:     float DC = 0.003 * speed + 0.6;
  1400  0017D4  0EA6               	movlw	166
  1401  0017D6  6E17               	movwf	___flmul@a,c
  1402  0017D8  0E9B               	movlw	155
  1403  0017DA  6E18               	movwf	___flmul@a+1,c
  1404  0017DC  0E44               	movlw	68
  1405  0017DE  6E19               	movwf	___flmul@a+2,c
  1406  0017E0  0E3B               	movlw	59
  1407  0017E2  6E1A               	movwf	___flmul@a+3,c
  1408  0017E4  5044               	movf	fijarVelocidad@speed,w,c
  1409  0017E6  6E05               	movwf	___xxtofl@val,c
  1410  0017E8  6A06               	clrf	___xxtofl@val+1,c
  1411  0017EA  6A07               	clrf	___xxtofl@val+2,c
  1412  0017EC  6A08               	clrf	___xxtofl@val+3,c
  1413  0017EE  0E01               	movlw	1
  1414  0017F0  ECC0  F00A         	call	___xxtofl
  1415  0017F4  C005  F013         	movff	?___xxtofl,___flmul@b
  1416  0017F8  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1417  0017FC  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1418  001800  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1419  001804  EC91  F007         	call	___flmul	;wreg free
  1420  001808  C013  F02C         	movff	?___flmul,___fladd@b
  1421  00180C  C014  F02D         	movff	?___flmul+1,___fladd@b+1
  1422  001810  C015  F02E         	movff	?___flmul+2,___fladd@b+2
  1423  001814  C016  F02F         	movff	?___flmul+3,___fladd@b+3
  1424  001818  0E9A               	movlw	154
  1425  00181A  6E30               	movwf	___fladd@a,c
  1426  00181C  0E99               	movlw	153
  1427  00181E  6E31               	movwf	___fladd@a+1,c
  1428  001820  0E19               	movlw	25
  1429  001822  6E32               	movwf	___fladd@a+2,c
  1430  001824  0E3F               	movlw	63
  1431  001826  6E33               	movwf	___fladd@a+3,c
  1432  001828  EC3A  F009         	call	___fladd	;wreg free
  1433  00182C  C02C  F03C         	movff	?___fladd,fijarVelocidad@DC
  1434  001830  C02D  F03D         	movff	?___fladd+1,fijarVelocidad@DC+1
  1435  001834  C02E  F03E         	movff	?___fladd+2,fijarVelocidad@DC+2
  1436  001838  C02F  F03F         	movff	?___fladd+3,fijarVelocidad@DC+3
  1437                           
  1438                           ;./../../LIBRERIAS/funciones_auto.h: 24:     velocidad = 4 * DC * 125;
  1439  00183C  0E00               	movlw	0
  1440  00183E  6E17               	movwf	___flmul@a,c
  1441  001840  0E00               	movlw	0
  1442  001842  6E18               	movwf	___flmul@a+1,c
  1443  001844  0E80               	movlw	128
  1444  001846  6E19               	movwf	___flmul@a+2,c
  1445  001848  0E40               	movlw	64
  1446  00184A  6E1A               	movwf	___flmul@a+3,c
  1447  00184C  C03C  F013         	movff	fijarVelocidad@DC,___flmul@b
  1448  001850  C03D  F014         	movff	fijarVelocidad@DC+1,___flmul@b+1
  1449  001854  C03E  F015         	movff	fijarVelocidad@DC+2,___flmul@b+2
  1450  001858  C03F  F016         	movff	fijarVelocidad@DC+3,___flmul@b+3
  1451  00185C  EC91  F007         	call	___flmul	;wreg free
  1452  001860  C013  F040         	movff	?___flmul,_fijarVelocidad$1328
  1453  001864  C014  F041         	movff	?___flmul+1,_fijarVelocidad$1328+1
  1454  001868  C015  F042         	movff	?___flmul+2,_fijarVelocidad$1328+2
  1455  00186C  C016  F043         	movff	?___flmul+3,_fijarVelocidad$1328+3
  1456                           
  1457                           ;./../../LIBRERIAS/funciones_auto.h: 24:     velocidad = 4 * DC * 125;
  1458  001870  0E00               	movlw	0
  1459  001872  6E17               	movwf	___flmul@a,c
  1460  001874  0E00               	movlw	0
  1461  001876  6E18               	movwf	___flmul@a+1,c
  1462  001878  0EFA               	movlw	250
  1463  00187A  6E19               	movwf	___flmul@a+2,c
  1464  00187C  0E42               	movlw	66
  1465  00187E  6E1A               	movwf	___flmul@a+3,c
  1466  001880  C040  F013         	movff	_fijarVelocidad$1328,___flmul@b
  1467  001884  C041  F014         	movff	_fijarVelocidad$1328+1,___flmul@b+1
  1468  001888  C042  F015         	movff	_fijarVelocidad$1328+2,___flmul@b+2
  1469  00188C  C043  F016         	movff	_fijarVelocidad$1328+3,___flmul@b+3
  1470  001890  EC91  F007         	call	___flmul	;wreg free
  1471  001894  C013  F02C         	movff	?___flmul,___fltol@f1
  1472  001898  C014  F02D         	movff	?___flmul+1,___fltol@f1+1
  1473  00189C  C015  F02E         	movff	?___flmul+2,___fltol@f1+2
  1474  0018A0  C016  F02F         	movff	?___flmul+3,___fltol@f1+3
  1475  0018A4  ECC6  F00C         	call	___fltol	;wreg free
  1476  0018A8  C02C  F054         	movff	?___fltol,_velocidad
  1477  0018AC  C02D  F055         	movff	?___fltol+1,_velocidad+1
  1478  0018B0  0012               	return		;funcret
  1479  0018B2                     __end_of_fijarVelocidad:
  1480                           	opt callstack 0
  1481                           
  1482 ;; *************** function ___xxtofl *****************
  1483 ;; Defined at:
  1484 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  sign            1    wreg     unsigned char 
  1487 ;;  val             4    4[COMRAM] long 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  sign            1   12[COMRAM] unsigned char 
  1490 ;;  arg             4   14[COMRAM] unsigned long 
  1491 ;;  exp             1   13[COMRAM] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  4    4[COMRAM] unsigned char 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1502 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1503 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1504 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1505 ;;Total ram usage:       14 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_fijarVelocidad
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text8
  1516  001580                     __ptext8:
  1517                           	opt callstack 0
  1518  001580                     ___xxtofl:
  1519                           	opt callstack 27
  1520                           
  1521                           ;incstack = 0
  1522                           ;___xxtofl@sign stored from wreg
  1523  001580  6E0D               	movwf	___xxtofl@sign,c
  1524  001582  500D               	movf	___xxtofl@sign,w,c
  1525  001584  A4D8               	btfss	status,2,c
  1526  001586  AE08               	btfss	___xxtofl@val+3,7,c
  1527  001588  D01A               	goto	l825
  1528  00158A  C005  F009         	movff	___xxtofl@val,??___xxtofl
  1529  00158E  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  1530  001592  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  1531  001596  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  1532  00159A  1E09               	comf	??___xxtofl,f,c
  1533  00159C  1E0A               	comf	??___xxtofl+1,f,c
  1534  00159E  1E0B               	comf	??___xxtofl+2,f,c
  1535  0015A0  1E0C               	comf	??___xxtofl+3,f,c
  1536  0015A2  2A09               	incf	??___xxtofl,f,c
  1537  0015A4  0E00               	movlw	0
  1538  0015A6  220A               	addwfc	??___xxtofl+1,f,c
  1539  0015A8  220B               	addwfc	??___xxtofl+2,f,c
  1540  0015AA  220C               	addwfc	??___xxtofl+3,f,c
  1541  0015AC  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  1542  0015B0  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  1543  0015B4  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  1544  0015B8  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  1545  0015BC  D008               	goto	l1971
  1546  0015BE                     l825:
  1547  0015BE  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  1548  0015C2  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1549  0015C6  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1550  0015CA  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1551  0015CE                     l1971:
  1552  0015CE  5005               	movf	___xxtofl@val,w,c
  1553  0015D0  1006               	iorwf	___xxtofl@val+1,w,c
  1554  0015D2  1007               	iorwf	___xxtofl@val+2,w,c
  1555  0015D4  1008               	iorwf	___xxtofl@val+3,w,c
  1556  0015D6  A4D8               	btfss	status,2,c
  1557  0015D8  D009               	goto	l1977
  1558  0015DA  0E00               	movlw	0
  1559  0015DC  6E05               	movwf	?___xxtofl,c
  1560  0015DE  0E00               	movlw	0
  1561  0015E0  6E06               	movwf	?___xxtofl+1,c
  1562  0015E2  0E00               	movlw	0
  1563  0015E4  6E07               	movwf	?___xxtofl+2,c
  1564  0015E6  0E00               	movlw	0
  1565  0015E8  6E08               	movwf	?___xxtofl+3,c
  1566  0015EA  0012               	return	
  1567  0015EC                     l1977:
  1568  0015EC  0E96               	movlw	150
  1569  0015EE  6E0E               	movwf	___xxtofl@exp,c
  1570  0015F0  D006               	goto	l1981
  1571  0015F2                     l1979:
  1572  0015F2  2A0E               	incf	___xxtofl@exp,f,c
  1573  0015F4  90D8               	bcf	status,0,c
  1574  0015F6  3212               	rrcf	___xxtofl@arg+3,f,c
  1575  0015F8  3211               	rrcf	___xxtofl@arg+2,f,c
  1576  0015FA  3210               	rrcf	___xxtofl@arg+1,f,c
  1577  0015FC  320F               	rrcf	___xxtofl@arg,f,c
  1578  0015FE                     l1981:
  1579  0015FE  0E00               	movlw	0
  1580  001600  140F               	andwf	___xxtofl@arg,w,c
  1581  001602  6E09               	movwf	??___xxtofl& (0+255),c
  1582  001604  0E00               	movlw	0
  1583  001606  1410               	andwf	___xxtofl@arg+1,w,c
  1584  001608  6E0A               	movwf	(??___xxtofl+1)& (0+255),c
  1585  00160A  0E00               	movlw	0
  1586  00160C  1411               	andwf	___xxtofl@arg+2,w,c
  1587  00160E  6E0B               	movwf	(??___xxtofl+2)& (0+255),c
  1588  001610  0EFE               	movlw	254
  1589  001612  1412               	andwf	___xxtofl@arg+3,w,c
  1590  001614  6E0C               	movwf	(??___xxtofl+3)& (0+255),c
  1591  001616  5009               	movf	??___xxtofl,w,c
  1592  001618  100A               	iorwf	??___xxtofl+1,w,c
  1593  00161A  100B               	iorwf	??___xxtofl+2,w,c
  1594  00161C  100C               	iorwf	??___xxtofl+3,w,c
  1595  00161E  B4D8               	btfsc	status,2,c
  1596  001620  D00D               	goto	l832
  1597  001622  D7E7               	goto	l1979
  1598  001624                     l1983:
  1599  001624  2A0E               	incf	___xxtofl@exp,f,c
  1600  001626  0E01               	movlw	1
  1601  001628  260F               	addwf	___xxtofl@arg,f,c
  1602  00162A  0E00               	movlw	0
  1603  00162C  2210               	addwfc	___xxtofl@arg+1,f,c
  1604  00162E  2211               	addwfc	___xxtofl@arg+2,f,c
  1605  001630  2212               	addwfc	___xxtofl@arg+3,f,c
  1606  001632  90D8               	bcf	status,0,c
  1607  001634  3212               	rrcf	___xxtofl@arg+3,f,c
  1608  001636  3211               	rrcf	___xxtofl@arg+2,f,c
  1609  001638  3210               	rrcf	___xxtofl@arg+1,f,c
  1610  00163A  320F               	rrcf	___xxtofl@arg,f,c
  1611  00163C                     l832:
  1612  00163C  0E00               	movlw	0
  1613  00163E  140F               	andwf	___xxtofl@arg,w,c
  1614  001640  6E09               	movwf	??___xxtofl& (0+255),c
  1615  001642  0E00               	movlw	0
  1616  001644  1410               	andwf	___xxtofl@arg+1,w,c
  1617  001646  6E0A               	movwf	(??___xxtofl+1)& (0+255),c
  1618  001648  0E00               	movlw	0
  1619  00164A  1411               	andwf	___xxtofl@arg+2,w,c
  1620  00164C  6E0B               	movwf	(??___xxtofl+2)& (0+255),c
  1621  00164E  0EFF               	movlw	255
  1622  001650  1412               	andwf	___xxtofl@arg+3,w,c
  1623  001652  6E0C               	movwf	(??___xxtofl+3)& (0+255),c
  1624  001654  5009               	movf	??___xxtofl,w,c
  1625  001656  100A               	iorwf	??___xxtofl+1,w,c
  1626  001658  100B               	iorwf	??___xxtofl+2,w,c
  1627  00165A  100C               	iorwf	??___xxtofl+3,w,c
  1628  00165C  B4D8               	btfsc	status,2,c
  1629  00165E  D007               	goto	l1991
  1630  001660  D7E1               	goto	l1983
  1631  001662                     l1989:
  1632  001662  060E               	decf	___xxtofl@exp,f,c
  1633  001664  90D8               	bcf	status,0,c
  1634  001666  360F               	rlcf	___xxtofl@arg,f,c
  1635  001668  3610               	rlcf	___xxtofl@arg+1,f,c
  1636  00166A  3611               	rlcf	___xxtofl@arg+2,f,c
  1637  00166C  3612               	rlcf	___xxtofl@arg+3,f,c
  1638  00166E                     l1991:
  1639  00166E  BE11               	btfsc	___xxtofl@arg+2,7,c
  1640  001670  D003               	goto	u1720
  1641  001672  0E02               	movlw	2
  1642  001674  600E               	cpfslt	___xxtofl@exp,c
  1643  001676  D7F5               	goto	l1989
  1644  001678                     u1720:
  1645  001678  A00E               	btfss	___xxtofl@exp,0,c
  1646  00167A  9E11               	bcf	___xxtofl@arg+2,7,c
  1647  00167C  90D8               	bcf	status,0,c
  1648  00167E  320E               	rrcf	___xxtofl@exp,f,c
  1649  001680  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  1650  001684  6A0A               	clrf	(??___xxtofl+1)& (0+255),c
  1651  001686  6A0B               	clrf	(??___xxtofl+2)& (0+255),c
  1652  001688  6A0C               	clrf	(??___xxtofl+3)& (0+255),c
  1653  00168A  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  1654  00168E  6A0B               	clrf	??___xxtofl+2,c
  1655  001690  6A0A               	clrf	??___xxtofl+1,c
  1656  001692  6A09               	clrf	??___xxtofl,c
  1657  001694  5009               	movf	??___xxtofl,w,c
  1658  001696  120F               	iorwf	___xxtofl@arg,f,c
  1659  001698  500A               	movf	??___xxtofl+1,w,c
  1660  00169A  1210               	iorwf	___xxtofl@arg+1,f,c
  1661  00169C  500B               	movf	??___xxtofl+2,w,c
  1662  00169E  1211               	iorwf	___xxtofl@arg+2,f,c
  1663  0016A0  500C               	movf	??___xxtofl+3,w,c
  1664  0016A2  1212               	iorwf	___xxtofl@arg+3,f,c
  1665  0016A4  500D               	movf	___xxtofl@sign,w,c
  1666  0016A6  A4D8               	btfss	status,2,c
  1667  0016A8  AE08               	btfss	___xxtofl@val+3,7,c
  1668  0016AA  D001               	goto	l2007
  1669  0016AC  8E12               	bsf	___xxtofl@arg+3,7,c
  1670  0016AE                     l2007:
  1671  0016AE  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  1672  0016B2  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  1673  0016B6  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  1674  0016BA  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  1675  0016BE  0012               	return		;funcret
  1676  0016C0                     __end_of___xxtofl:
  1677                           	opt callstack 0
  1678                           
  1679 ;; *************** function ___fltol *****************
  1680 ;; Defined at:
  1681 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  f1              4   43[COMRAM] unsigned char 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  exp1            1   52[COMRAM] unsigned char 
  1686 ;;  sign1           1   51[COMRAM] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  4   43[COMRAM] long 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1697 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1698 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1699 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1700 ;;Total ram usage:       10 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    1
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_fijarVelocidad
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text9
  1711  00198C                     __ptext9:
  1712                           	opt callstack 0
  1713  00198C                     ___fltol:
  1714                           	opt callstack 27
  1715                           
  1716                           ;incstack = 0
  1717  00198C  342E               	rlcf	___fltol@f1+2,w,c
  1718  00198E  342F               	rlcf	___fltol@f1+3,w,c
  1719  001990  6E35               	movwf	___fltol@exp1,c
  1720  001992  5035               	movf	___fltol@exp1,w,c
  1721  001994  A4D8               	btfss	status,2,c
  1722  001996  D009               	goto	l1927
  1723  001998                     u1590:
  1724  001998  0E00               	movlw	0
  1725  00199A  6E2C               	movwf	?___fltol,c
  1726  00199C  0E00               	movlw	0
  1727  00199E  6E2D               	movwf	?___fltol+1,c
  1728  0019A0  0E00               	movlw	0
  1729  0019A2  6E2E               	movwf	?___fltol+2,c
  1730  0019A4  0E00               	movlw	0
  1731  0019A6  6E2F               	movwf	?___fltol+3,c
  1732  0019A8  0012               	return	
  1733  0019AA                     l1927:
  1734  0019AA  C02C  F030         	movff	___fltol@f1,??___fltol
  1735  0019AE  C02D  F031         	movff	___fltol@f1+1,??___fltol+1
  1736  0019B2  C02E  F032         	movff	___fltol@f1+2,??___fltol+2
  1737  0019B6  C02F  F033         	movff	___fltol@f1+3,??___fltol+3
  1738  0019BA  0E20               	movlw	32
  1739  0019BC  D005               	goto	u1600
  1740  0019BE                     u1605:
  1741  0019BE  90D8               	bcf	status,0,c
  1742  0019C0  3233               	rrcf	??___fltol+3,f,c
  1743  0019C2  3232               	rrcf	??___fltol+2,f,c
  1744  0019C4  3231               	rrcf	??___fltol+1,f,c
  1745  0019C6  3230               	rrcf	??___fltol,f,c
  1746  0019C8                     u1600:
  1747  0019C8  2EE8               	decfsz	wreg,f,c
  1748  0019CA  D7F9               	goto	u1605
  1749  0019CC  5030               	movf	??___fltol,w,c
  1750  0019CE  6E34               	movwf	___fltol@sign1,c
  1751  0019D0  8E2E               	bsf	___fltol@f1+2,7,c
  1752  0019D2  0EFF               	movlw	255
  1753  0019D4  162C               	andwf	___fltol@f1,f,c
  1754  0019D6  0EFF               	movlw	255
  1755  0019D8  162D               	andwf	___fltol@f1+1,f,c
  1756  0019DA  0EFF               	movlw	255
  1757  0019DC  162E               	andwf	___fltol@f1+2,f,c
  1758  0019DE  0E00               	movlw	0
  1759  0019E0  162F               	andwf	___fltol@f1+3,f,c
  1760  0019E2  0E96               	movlw	150
  1761  0019E4  5E35               	subwf	___fltol@exp1,f,c
  1762  0019E6  AE35               	btfss	___fltol@exp1,7,c
  1763  0019E8  D00D               	goto	l1947
  1764  0019EA  5035               	movf	___fltol@exp1,w,c
  1765  0019EC  0A80               	xorlw	128
  1766  0019EE  0F97               	addlw	151
  1767  0019F0  A0D8               	btfss	status,0,c
  1768  0019F2  D7D2               	goto	u1590
  1769  0019F4                     l1943:
  1770  0019F4  90D8               	bcf	status,0,c
  1771  0019F6  322F               	rrcf	___fltol@f1+3,f,c
  1772  0019F8  322E               	rrcf	___fltol@f1+2,f,c
  1773  0019FA  322D               	rrcf	___fltol@f1+1,f,c
  1774  0019FC  322C               	rrcf	___fltol@f1,f,c
  1775  0019FE  3E35               	incfsz	___fltol@exp1,f,c
  1776  001A00  D7F9               	goto	l1943
  1777  001A02  D00D               	goto	u1640
  1778  001A04                     l1947:
  1779  001A04  0E1F               	movlw	31
  1780  001A06  6435               	cpfsgt	___fltol@exp1,c
  1781  001A08  D007               	goto	l1955
  1782  001A0A  D7C6               	goto	u1590
  1783  001A0C                     l1953:
  1784  001A0C  90D8               	bcf	status,0,c
  1785  001A0E  362C               	rlcf	___fltol@f1,f,c
  1786  001A10  362D               	rlcf	___fltol@f1+1,f,c
  1787  001A12  362E               	rlcf	___fltol@f1+2,f,c
  1788  001A14  362F               	rlcf	___fltol@f1+3,f,c
  1789  001A16  0635               	decf	___fltol@exp1,f,c
  1790  001A18                     l1955:
  1791  001A18  5035               	movf	___fltol@exp1,w,c
  1792  001A1A  A4D8               	btfss	status,2,c
  1793  001A1C  D7F7               	goto	l1953
  1794  001A1E                     u1640:
  1795  001A1E  5034               	movf	___fltol@sign1,w,c
  1796  001A20  B4D8               	btfsc	status,2,c
  1797  001A22  D008               	goto	l1961
  1798  001A24  1E2F               	comf	___fltol@f1+3,f,c
  1799  001A26  1E2E               	comf	___fltol@f1+2,f,c
  1800  001A28  1E2D               	comf	___fltol@f1+1,f,c
  1801  001A2A  6C2C               	negf	___fltol@f1,c
  1802  001A2C  0E00               	movlw	0
  1803  001A2E  222D               	addwfc	___fltol@f1+1,f,c
  1804  001A30  222E               	addwfc	___fltol@f1+2,f,c
  1805  001A32  222F               	addwfc	___fltol@f1+3,f,c
  1806  001A34                     l1961:
  1807  001A34  C02C  F02C         	movff	___fltol@f1,?___fltol
  1808  001A38  C02D  F02D         	movff	___fltol@f1+1,?___fltol+1
  1809  001A3C  C02E  F02E         	movff	___fltol@f1+2,?___fltol+2
  1810  001A40  C02F  F02F         	movff	___fltol@f1+3,?___fltol+3
  1811  001A44  0012               	return		;funcret
  1812  001A46                     __end_of___fltol:
  1813                           	opt callstack 0
  1814                           
  1815 ;; *************** function ___flmul *****************
  1816 ;; Defined at:
  1817 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  b               4   18[COMRAM] long 
  1820 ;;  a               4   22[COMRAM] long 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  prod            4   37[COMRAM] struct .
  1823 ;;  grs             4   31[COMRAM] unsigned long 
  1824 ;;  temp            2   41[COMRAM] struct .
  1825 ;;  bexp            1   36[COMRAM] unsigned char 
  1826 ;;  aexp            1   35[COMRAM] unsigned char 
  1827 ;;  sign            1   30[COMRAM] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  4   18[COMRAM] unsigned char 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, prodl, prodh
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1837 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;Total ram usage:       25 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    1
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_fijarVelocidad
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text10
  1852  000F22                     __ptext10:
  1853                           	opt callstack 0
  1854  000F22                     ___flmul:
  1855                           	opt callstack 27
  1856                           
  1857                           ;incstack = 0
  1858  000F22  5016               	movf	___flmul@b+3,w,c
  1859  000F24  0B80               	andlw	128
  1860  000F26  6E1F               	movwf	___flmul@sign,c
  1861  000F28  5016               	movf	___flmul@b+3,w,c
  1862  000F2A  2416               	addwf	___flmul@b+3,w,c
  1863  000F2C  6E25               	movwf	___flmul@bexp,c
  1864  000F2E  BE15               	btfsc	___flmul@b+2,7,c
  1865  000F30  8025               	bsf	___flmul@bexp,0,c
  1866  000F32  5025               	movf	___flmul@bexp,w,c
  1867  000F34  B4D8               	btfsc	status,2,c
  1868  000F36  D00D               	goto	l1805
  1869  000F38  2825               	incf	___flmul@bexp,w,c
  1870  000F3A  A4D8               	btfss	status,2,c
  1871  000F3C  D008               	goto	l1803
  1872  000F3E  0E00               	movlw	0
  1873  000F40  6E13               	movwf	___flmul@b,c
  1874  000F42  0E00               	movlw	0
  1875  000F44  6E14               	movwf	___flmul@b+1,c
  1876  000F46  0E00               	movlw	0
  1877  000F48  6E15               	movwf	___flmul@b+2,c
  1878  000F4A  0E00               	movlw	0
  1879  000F4C  6E16               	movwf	___flmul@b+3,c
  1880  000F4E                     l1803:
  1881  000F4E  8E15               	bsf	___flmul@b+2,7,c
  1882  000F50  D008               	goto	l1807
  1883  000F52                     l1805:
  1884  000F52  0E00               	movlw	0
  1885  000F54  6E13               	movwf	___flmul@b,c
  1886  000F56  0E00               	movlw	0
  1887  000F58  6E14               	movwf	___flmul@b+1,c
  1888  000F5A  0E00               	movlw	0
  1889  000F5C  6E15               	movwf	___flmul@b+2,c
  1890  000F5E  0E00               	movlw	0
  1891  000F60  6E16               	movwf	___flmul@b+3,c
  1892  000F62                     l1807:
  1893  000F62  501A               	movf	___flmul@a+3,w,c
  1894  000F64  0B80               	andlw	128
  1895  000F66  1A1F               	xorwf	___flmul@sign,f,c
  1896  000F68  501A               	movf	___flmul@a+3,w,c
  1897  000F6A  241A               	addwf	___flmul@a+3,w,c
  1898  000F6C  6E24               	movwf	___flmul@aexp,c
  1899  000F6E  BE19               	btfsc	___flmul@a+2,7,c
  1900  000F70  8024               	bsf	___flmul@aexp,0,c
  1901  000F72  5024               	movf	___flmul@aexp,w,c
  1902  000F74  B4D8               	btfsc	status,2,c
  1903  000F76  D00D               	goto	l1823
  1904  000F78  2824               	incf	___flmul@aexp,w,c
  1905  000F7A  A4D8               	btfss	status,2,c
  1906  000F7C  D008               	goto	l1821
  1907  000F7E  0E00               	movlw	0
  1908  000F80  6E17               	movwf	___flmul@a,c
  1909  000F82  0E00               	movlw	0
  1910  000F84  6E18               	movwf	___flmul@a+1,c
  1911  000F86  0E00               	movlw	0
  1912  000F88  6E19               	movwf	___flmul@a+2,c
  1913  000F8A  0E00               	movlw	0
  1914  000F8C  6E1A               	movwf	___flmul@a+3,c
  1915  000F8E                     l1821:
  1916  000F8E  8E19               	bsf	___flmul@a+2,7,c
  1917  000F90  D008               	goto	l784
  1918  000F92                     l1823:
  1919  000F92  0E00               	movlw	0
  1920  000F94  6E17               	movwf	___flmul@a,c
  1921  000F96  0E00               	movlw	0
  1922  000F98  6E18               	movwf	___flmul@a+1,c
  1923  000F9A  0E00               	movlw	0
  1924  000F9C  6E19               	movwf	___flmul@a+2,c
  1925  000F9E  0E00               	movlw	0
  1926  000FA0  6E1A               	movwf	___flmul@a+3,c
  1927  000FA2                     l784:
  1928  000FA2  5024               	movf	___flmul@aexp,w,c
  1929  000FA4  B4D8               	btfsc	status,2,c
  1930  000FA6  D003               	goto	u1470
  1931  000FA8  5025               	movf	___flmul@bexp,w,c
  1932  000FAA  A4D8               	btfss	status,2,c
  1933  000FAC  D009               	goto	l1831
  1934  000FAE                     u1470:
  1935  000FAE  0E00               	movlw	0
  1936  000FB0  6E13               	movwf	?___flmul,c
  1937  000FB2  0E00               	movlw	0
  1938  000FB4  6E14               	movwf	?___flmul+1,c
  1939  000FB6  0E00               	movlw	0
  1940  000FB8  6E15               	movwf	?___flmul+2,c
  1941  000FBA  0E00               	movlw	0
  1942  000FBC  6E16               	movwf	?___flmul+3,c
  1943  000FBE  0012               	return	
  1944  000FC0                     l1831:
  1945  000FC0  5019               	movf	___flmul@a+2,w,c
  1946  000FC2  0213               	mulwf	___flmul@b,c
  1947  000FC4  CFF3 F02A          	movff	prodl,___flmul@temp
  1948  000FC8  CFF4 F02B          	movff	prodh,___flmul@temp+1
  1949  000FCC  502A               	movf	___flmul@temp,w,c
  1950  000FCE  6E20               	movwf	___flmul@grs,c
  1951  000FD0  6A21               	clrf	___flmul@grs+1,c
  1952  000FD2  6A22               	clrf	___flmul@grs+2,c
  1953  000FD4  6A23               	clrf	___flmul@grs+3,c
  1954  000FD6  502B               	movf	___flmul@temp+1,w,c
  1955  000FD8  6E26               	movwf	___flmul@prod,c
  1956  000FDA  6A27               	clrf	___flmul@prod+1,c
  1957  000FDC  6A28               	clrf	___flmul@prod+2,c
  1958  000FDE  6A29               	clrf	___flmul@prod+3,c
  1959  000FE0  5018               	movf	___flmul@a+1,w,c
  1960  000FE2  0214               	mulwf	___flmul@b+1,c
  1961  000FE4  CFF3 F02A          	movff	prodl,___flmul@temp
  1962  000FE8  CFF4 F02B          	movff	prodh,___flmul@temp+1
  1963  000FEC  502A               	movf	___flmul@temp,w,c
  1964  000FEE  2620               	addwf	___flmul@grs,f,c
  1965  000FF0  0E00               	movlw	0
  1966  000FF2  2221               	addwfc	___flmul@grs+1,f,c
  1967  000FF4  2222               	addwfc	___flmul@grs+2,f,c
  1968  000FF6  2223               	addwfc	___flmul@grs+3,f,c
  1969  000FF8  502B               	movf	___flmul@temp+1,w,c
  1970  000FFA  2626               	addwf	___flmul@prod,f,c
  1971  000FFC  0E00               	movlw	0
  1972  000FFE  2227               	addwfc	___flmul@prod+1,f,c
  1973  001000  2228               	addwfc	___flmul@prod+2,f,c
  1974  001002  2229               	addwfc	___flmul@prod+3,f,c
  1975  001004  5017               	movf	___flmul@a,w,c
  1976  001006  0215               	mulwf	___flmul@b+2,c
  1977  001008  CFF3 F02A          	movff	prodl,___flmul@temp
  1978  00100C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  1979  001010  502A               	movf	___flmul@temp,w,c
  1980  001012  2620               	addwf	___flmul@grs,f,c
  1981  001014  0E00               	movlw	0
  1982  001016  2221               	addwfc	___flmul@grs+1,f,c
  1983  001018  2222               	addwfc	___flmul@grs+2,f,c
  1984  00101A  2223               	addwfc	___flmul@grs+3,f,c
  1985  00101C  502B               	movf	___flmul@temp+1,w,c
  1986  00101E  2626               	addwf	___flmul@prod,f,c
  1987  001020  0E00               	movlw	0
  1988  001022  2227               	addwfc	___flmul@prod+1,f,c
  1989  001024  2228               	addwfc	___flmul@prod+2,f,c
  1990  001026  2229               	addwfc	___flmul@prod+3,f,c
  1991  001028  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  1992  00102C  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  1993  001030  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  1994  001034  6A20               	clrf	___flmul@grs,c
  1995  001036  5017               	movf	___flmul@a,w,c
  1996  001038  0214               	mulwf	___flmul@b+1,c
  1997  00103A  CFF3 F02A          	movff	prodl,___flmul@temp
  1998  00103E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  1999  001042  502A               	movf	___flmul@temp,w,c
  2000  001044  2620               	addwf	___flmul@grs,f,c
  2001  001046  502B               	movf	___flmul@temp+1,w,c
  2002  001048  2221               	addwfc	___flmul@grs+1,f,c
  2003  00104A  0E00               	movlw	0
  2004  00104C  2222               	addwfc	___flmul@grs+2,f,c
  2005  00104E  0E00               	movlw	0
  2006  001050  2223               	addwfc	___flmul@grs+3,f,c
  2007  001052  5018               	movf	___flmul@a+1,w,c
  2008  001054  0213               	mulwf	___flmul@b,c
  2009  001056  CFF3 F02A          	movff	prodl,___flmul@temp
  2010  00105A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2011  00105E  502A               	movf	___flmul@temp,w,c
  2012  001060  2620               	addwf	___flmul@grs,f,c
  2013  001062  502B               	movf	___flmul@temp+1,w,c
  2014  001064  2221               	addwfc	___flmul@grs+1,f,c
  2015  001066  0E00               	movlw	0
  2016  001068  2222               	addwfc	___flmul@grs+2,f,c
  2017  00106A  0E00               	movlw	0
  2018  00106C  2223               	addwfc	___flmul@grs+3,f,c
  2019  00106E  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2020  001072  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2021  001076  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2022  00107A  6A20               	clrf	___flmul@grs,c
  2023  00107C  5017               	movf	___flmul@a,w,c
  2024  00107E  0213               	mulwf	___flmul@b,c
  2025  001080  CFF3 F02A          	movff	prodl,___flmul@temp
  2026  001084  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2027  001088  502A               	movf	___flmul@temp,w,c
  2028  00108A  2620               	addwf	___flmul@grs,f,c
  2029  00108C  502B               	movf	___flmul@temp+1,w,c
  2030  00108E  2221               	addwfc	___flmul@grs+1,f,c
  2031  001090  0E00               	movlw	0
  2032  001092  2222               	addwfc	___flmul@grs+2,f,c
  2033  001094  0E00               	movlw	0
  2034  001096  2223               	addwfc	___flmul@grs+3,f,c
  2035  001098  5019               	movf	___flmul@a+2,w,c
  2036  00109A  0214               	mulwf	___flmul@b+1,c
  2037  00109C  CFF3 F02A          	movff	prodl,___flmul@temp
  2038  0010A0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2039  0010A4  502A               	movf	___flmul@temp,w,c
  2040  0010A6  2626               	addwf	___flmul@prod,f,c
  2041  0010A8  502B               	movf	___flmul@temp+1,w,c
  2042  0010AA  2227               	addwfc	___flmul@prod+1,f,c
  2043  0010AC  0E00               	movlw	0
  2044  0010AE  2228               	addwfc	___flmul@prod+2,f,c
  2045  0010B0  0E00               	movlw	0
  2046  0010B2  2229               	addwfc	___flmul@prod+3,f,c
  2047  0010B4  5018               	movf	___flmul@a+1,w,c
  2048  0010B6  0215               	mulwf	___flmul@b+2,c
  2049  0010B8  CFF3 F02A          	movff	prodl,___flmul@temp
  2050  0010BC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2051  0010C0  502A               	movf	___flmul@temp,w,c
  2052  0010C2  2626               	addwf	___flmul@prod,f,c
  2053  0010C4  502B               	movf	___flmul@temp+1,w,c
  2054  0010C6  2227               	addwfc	___flmul@prod+1,f,c
  2055  0010C8  0E00               	movlw	0
  2056  0010CA  2228               	addwfc	___flmul@prod+2,f,c
  2057  0010CC  0E00               	movlw	0
  2058  0010CE  2229               	addwfc	___flmul@prod+3,f,c
  2059  0010D0  5019               	movf	___flmul@a+2,w,c
  2060  0010D2  0215               	mulwf	___flmul@b+2,c
  2061  0010D4  CFF3 F02A          	movff	prodl,___flmul@temp
  2062  0010D8  CFF4 F02B          	movff	prodh,___flmul@temp+1
  2063  0010DC  502A               	movf	___flmul@temp,w,c
  2064  0010DE  6E1B               	movwf	??___flmul& (0+255),c
  2065  0010E0  502B               	movf	___flmul@temp+1,w,c
  2066  0010E2  6E1C               	movwf	(??___flmul+1)& (0+255),c
  2067  0010E4  6A1D               	clrf	(??___flmul+2)& (0+255),c
  2068  0010E6  6A1E               	clrf	(??___flmul+3)& (0+255),c
  2069  0010E8  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  2070  0010EC  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  2071  0010F0  C01B  F01C         	movff	??___flmul,??___flmul+1
  2072  0010F4  6A1B               	clrf	??___flmul,c
  2073  0010F6  501B               	movf	??___flmul,w,c
  2074  0010F8  2626               	addwf	___flmul@prod,f,c
  2075  0010FA  501C               	movf	??___flmul+1,w,c
  2076  0010FC  2227               	addwfc	___flmul@prod+1,f,c
  2077  0010FE  501D               	movf	??___flmul+2,w,c
  2078  001100  2228               	addwfc	___flmul@prod+2,f,c
  2079  001102  501E               	movf	??___flmul+3,w,c
  2080  001104  2229               	addwfc	___flmul@prod+3,f,c
  2081  001106  C020  F01B         	movff	___flmul@grs,??___flmul
  2082  00110A  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  2083  00110E  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  2084  001112  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  2085  001116  0E19               	movlw	25
  2086  001118  D005               	goto	u1480
  2087  00111A                     u1485:
  2088  00111A  90D8               	bcf	status,0,c
  2089  00111C  321E               	rrcf	??___flmul+3,f,c
  2090  00111E  321D               	rrcf	??___flmul+2,f,c
  2091  001120  321C               	rrcf	??___flmul+1,f,c
  2092  001122  321B               	rrcf	??___flmul,f,c
  2093  001124                     u1480:
  2094  001124  2EE8               	decfsz	wreg,f,c
  2095  001126  D7F9               	goto	u1485
  2096  001128  501B               	movf	??___flmul,w,c
  2097  00112A  2626               	addwf	___flmul@prod,f,c
  2098  00112C  501C               	movf	??___flmul+1,w,c
  2099  00112E  2227               	addwfc	___flmul@prod+1,f,c
  2100  001130  501D               	movf	??___flmul+2,w,c
  2101  001132  2228               	addwfc	___flmul@prod+2,f,c
  2102  001134  501E               	movf	??___flmul+3,w,c
  2103  001136  2229               	addwfc	___flmul@prod+3,f,c
  2104  001138  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  2105  00113C  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  2106  001140  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  2107  001144  6A20               	clrf	___flmul@grs,c
  2108  001146  5024               	movf	___flmul@aexp,w,c
  2109  001148  C025  F01B         	movff	___flmul@bexp,??___flmul
  2110  00114C  6A1C               	clrf	(??___flmul+1)& (0+255),c
  2111  00114E  261B               	addwf	??___flmul,f,c
  2112  001150  0E00               	movlw	0
  2113  001152  221C               	addwfc	??___flmul+1,f,c
  2114  001154  0E82               	movlw	130
  2115  001156  241B               	addwf	??___flmul,w,c
  2116  001158  6E2A               	movwf	___flmul@temp,c
  2117  00115A  0EFF               	movlw	255
  2118  00115C  201C               	addwfc	??___flmul+1,w,c
  2119  00115E  6E2B               	movwf	___flmul@temp+1,c
  2120  001160  D00F               	goto	l1879
  2121  001162                     l1873:
  2122  001162  90D8               	bcf	status,0,c
  2123  001164  3626               	rlcf	___flmul@prod,f,c
  2124  001166  3627               	rlcf	___flmul@prod+1,f,c
  2125  001168  3628               	rlcf	___flmul@prod+2,f,c
  2126  00116A  3629               	rlcf	___flmul@prod+3,f,c
  2127  00116C  BE23               	btfsc	___flmul@grs+3,7,c
  2128  00116E  8026               	bsf	___flmul@prod,0,c
  2129  001170  90D8               	bcf	status,0,c
  2130  001172  3620               	rlcf	___flmul@grs,f,c
  2131  001174  3621               	rlcf	___flmul@grs+1,f,c
  2132  001176  3622               	rlcf	___flmul@grs+2,f,c
  2133  001178  3623               	rlcf	___flmul@grs+3,f,c
  2134  00117A  062A               	decf	___flmul@temp,f,c
  2135  00117C  A0D8               	btfss	status,0,c
  2136  00117E  062B               	decf	___flmul@temp+1,f,c
  2137  001180                     l1879:
  2138  001180  AE28               	btfss	___flmul@prod+2,7,c
  2139  001182  D7EF               	goto	l1873
  2140  001184  0E00               	movlw	0
  2141  001186  6E24               	movwf	___flmul@aexp,c
  2142  001188  AE23               	btfss	___flmul@grs+3,7,c
  2143  00118A  D017               	goto	l793
  2144  00118C  0EFF               	movlw	255
  2145  00118E  1420               	andwf	___flmul@grs,w,c
  2146  001190  6E1B               	movwf	??___flmul& (0+255),c
  2147  001192  0EFF               	movlw	255
  2148  001194  1421               	andwf	___flmul@grs+1,w,c
  2149  001196  6E1C               	movwf	(??___flmul+1)& (0+255),c
  2150  001198  0EFF               	movlw	255
  2151  00119A  1422               	andwf	___flmul@grs+2,w,c
  2152  00119C  6E1D               	movwf	(??___flmul+2)& (0+255),c
  2153  00119E  0E7F               	movlw	127
  2154  0011A0  1423               	andwf	___flmul@grs+3,w,c
  2155  0011A2  6E1E               	movwf	(??___flmul+3)& (0+255),c
  2156  0011A4  501B               	movf	??___flmul,w,c
  2157  0011A6  101C               	iorwf	??___flmul+1,w,c
  2158  0011A8  101D               	iorwf	??___flmul+2,w,c
  2159  0011AA  101E               	iorwf	??___flmul+3,w,c
  2160  0011AC  B4D8               	btfsc	status,2,c
  2161  0011AE  D003               	goto	l794
  2162  0011B0                     u1520:
  2163  0011B0  0E01               	movlw	1
  2164  0011B2  6E24               	movwf	___flmul@aexp,c
  2165  0011B4  D002               	goto	l793
  2166  0011B6                     l794:
  2167  0011B6  B026               	btfsc	___flmul@prod,0,c
  2168  0011B8  D7FB               	goto	u1520
  2169  0011BA                     l793:
  2170  0011BA  5024               	movf	___flmul@aexp,w,c
  2171  0011BC  B4D8               	btfsc	status,2,c
  2172  0011BE  D01F               	goto	l1899
  2173  0011C0  0E01               	movlw	1
  2174  0011C2  2626               	addwf	___flmul@prod,f,c
  2175  0011C4  0E00               	movlw	0
  2176  0011C6  2227               	addwfc	___flmul@prod+1,f,c
  2177  0011C8  2228               	addwfc	___flmul@prod+2,f,c
  2178  0011CA  2229               	addwfc	___flmul@prod+3,f,c
  2179  0011CC  A029               	btfss	___flmul@prod+3,0,c
  2180  0011CE  D017               	goto	l1899
  2181  0011D0  C026  F01B         	movff	___flmul@prod,??___flmul
  2182  0011D4  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  2183  0011D8  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  2184  0011DC  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  2185  0011E0  341E               	rlcf	??___flmul+3,w,c
  2186  0011E2  321E               	rrcf	??___flmul+3,f,c
  2187  0011E4  321D               	rrcf	??___flmul+2,f,c
  2188  0011E6  321C               	rrcf	??___flmul+1,f,c
  2189  0011E8  321B               	rrcf	??___flmul,f,c
  2190  0011EA  C01B  F026         	movff	??___flmul,___flmul@prod
  2191  0011EE  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  2192  0011F2  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  2193  0011F6  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  2194  0011FA  4A2A               	infsnz	___flmul@temp,f,c
  2195  0011FC  2A2B               	incf	___flmul@temp+1,f,c
  2196  0011FE                     l1899:
  2197  0011FE  BE2B               	btfsc	___flmul@temp+1,7,c
  2198  001200  D00D               	goto	l1903
  2199  001202  502B               	movf	___flmul@temp+1,w,c
  2200  001204  E103               	bnz	u1560
  2201  001206  282A               	incf	___flmul@temp,w,c
  2202  001208  A0D8               	btfss	status,0,c
  2203  00120A  D008               	goto	l1903
  2204  00120C                     u1560:
  2205  00120C  0E00               	movlw	0
  2206  00120E  6E26               	movwf	___flmul@prod,c
  2207  001210  0E00               	movlw	0
  2208  001212  6E27               	movwf	___flmul@prod+1,c
  2209  001214  0E80               	movlw	128
  2210  001216  6E28               	movwf	___flmul@prod+2,c
  2211  001218  0E7F               	movlw	127
  2212  00121A  D020               	goto	L1
  2213  00121C                     l1903:
  2214  00121C  BE2B               	btfsc	___flmul@temp+1,7,c
  2215  00121E  D005               	goto	u1570
  2216  001220  502B               	movf	___flmul@temp+1,w,c
  2217  001222  E10E               	bnz	l801
  2218  001224  042A               	decf	___flmul@temp,w,c
  2219  001226  B0D8               	btfsc	status,0,c
  2220  001228  D00B               	goto	l801
  2221  00122A                     u1570:
  2222  00122A  0E00               	movlw	0
  2223  00122C  6E26               	movwf	___flmul@prod,c
  2224  00122E  0E00               	movlw	0
  2225  001230  6E27               	movwf	___flmul@prod+1,c
  2226  001232  0E00               	movlw	0
  2227  001234  6E28               	movwf	___flmul@prod+2,c
  2228  001236  0E00               	movlw	0
  2229  001238  6E29               	movwf	___flmul@prod+3,c
  2230  00123A  0E00               	movlw	0
  2231  00123C  6E1F               	movwf	___flmul@sign,c
  2232  00123E  D00F               	goto	l1915
  2233  001240                     l801:
  2234  001240  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  2235  001244  0EFF               	movlw	255
  2236  001246  1626               	andwf	___flmul@prod,f,c
  2237  001248  0EFF               	movlw	255
  2238  00124A  1627               	andwf	___flmul@prod+1,f,c
  2239  00124C  0E7F               	movlw	127
  2240  00124E  1628               	andwf	___flmul@prod+2,f,c
  2241  001250  0E00               	movlw	0
  2242  001252  1629               	andwf	___flmul@prod+3,f,c
  2243  001254  B025               	btfsc	___flmul@bexp,0,c
  2244  001256  8E28               	bsf	___flmul@prod+2,7,c
  2245  001258  90D8               	bcf	status,0,c
  2246  00125A  3025               	rrcf	___flmul@bexp,w,c
  2247  00125C                     L1:
  2248  00125C  6E29               	movwf	___flmul@prod+3,c
  2249  00125E                     l1915:
  2250  00125E  501F               	movf	___flmul@sign,w,c
  2251  001260  1229               	iorwf	___flmul@prod+3,f,c
  2252  001262  C026  F013         	movff	___flmul@prod,?___flmul
  2253  001266  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  2254  00126A  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  2255  00126E  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  2256  001272  0012               	return		;funcret
  2257  001274                     __end_of___flmul:
  2258                           	opt callstack 0
  2259                           
  2260 ;; *************** function ___fladd *****************
  2261 ;; Defined at:
  2262 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  b               4   43[COMRAM] unsigned char 
  2265 ;;  a               4   47[COMRAM] unsigned char 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  grs             1   58[COMRAM] unsigned char 
  2268 ;;  bexp            1   57[COMRAM] unsigned char 
  2269 ;;  aexp            1   56[COMRAM] unsigned char 
  2270 ;;  signs           1   55[COMRAM] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  4   43[COMRAM] unsigned char 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2280 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2281 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2282 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2283 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2284 ;;Total ram usage:       16 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    1
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_fijarVelocidad
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text11
  2295  001274                     __ptext11:
  2296                           	opt callstack 0
  2297  001274                     ___fladd:
  2298                           	opt callstack 27
  2299                           
  2300                           ;incstack = 0
  2301  001274  502F               	movf	___fladd@b+3,w,c
  2302  001276  0B80               	andlw	128
  2303  001278  6E38               	movwf	___fladd@signs,c
  2304  00127A  502F               	movf	___fladd@b+3,w,c
  2305  00127C  242F               	addwf	___fladd@b+3,w,c
  2306  00127E  6E3A               	movwf	___fladd@bexp,c
  2307  001280  BE2E               	btfsc	___fladd@b+2,7,c
  2308  001282  803A               	bsf	___fladd@bexp,0,c
  2309  001284  503A               	movf	___fladd@bexp,w,c
  2310  001286  B4D8               	btfsc	status,2,c
  2311  001288  D00D               	goto	l1605
  2312  00128A  283A               	incf	___fladd@bexp,w,c
  2313  00128C  A4D8               	btfss	status,2,c
  2314  00128E  D008               	goto	l1601
  2315  001290  0E00               	movlw	0
  2316  001292  6E2C               	movwf	___fladd@b,c
  2317  001294  0E00               	movlw	0
  2318  001296  6E2D               	movwf	___fladd@b+1,c
  2319  001298  0E00               	movlw	0
  2320  00129A  6E2E               	movwf	___fladd@b+2,c
  2321  00129C  0E00               	movlw	0
  2322  00129E  6E2F               	movwf	___fladd@b+3,c
  2323  0012A0                     l1601:
  2324  0012A0  8E2E               	bsf	___fladd@b+2,7,c
  2325  0012A2  D006               	goto	L2
  2326  0012A4                     l1605:
  2327  0012A4  0E00               	movlw	0
  2328  0012A6  6E2C               	movwf	___fladd@b,c
  2329  0012A8  0E00               	movlw	0
  2330  0012AA  6E2D               	movwf	___fladd@b+1,c
  2331  0012AC  0E00               	movlw	0
  2332  0012AE  6E2E               	movwf	___fladd@b+2,c
  2333  0012B0                     L2:
  2334  0012B0  0E00               	movlw	0
  2335  0012B2  6E2F               	movwf	___fladd@b+3,c
  2336  0012B4  5033               	movf	___fladd@a+3,w,c
  2337  0012B6  0B80               	andlw	128
  2338  0012B8  6E39               	movwf	___fladd@aexp,c
  2339  0012BA  5038               	movf	___fladd@signs,w,c
  2340  0012BC  1839               	xorwf	___fladd@aexp,w,c
  2341  0012BE  A4D8               	btfss	status,2,c
  2342  0012C0  8C38               	bsf	___fladd@signs,6,c
  2343  0012C2  5033               	movf	___fladd@a+3,w,c
  2344  0012C4  2433               	addwf	___fladd@a+3,w,c
  2345  0012C6  6E39               	movwf	___fladd@aexp,c
  2346  0012C8  BE32               	btfsc	___fladd@a+2,7,c
  2347  0012CA  8039               	bsf	___fladd@aexp,0,c
  2348  0012CC  5039               	movf	___fladd@aexp,w,c
  2349  0012CE  B4D8               	btfsc	status,2,c
  2350  0012D0  D00D               	goto	l1629
  2351  0012D2  2839               	incf	___fladd@aexp,w,c
  2352  0012D4  A4D8               	btfss	status,2,c
  2353  0012D6  D008               	goto	l1625
  2354  0012D8  0E00               	movlw	0
  2355  0012DA  6E30               	movwf	___fladd@a,c
  2356  0012DC  0E00               	movlw	0
  2357  0012DE  6E31               	movwf	___fladd@a+1,c
  2358  0012E0  0E00               	movlw	0
  2359  0012E2  6E32               	movwf	___fladd@a+2,c
  2360  0012E4  0E00               	movlw	0
  2361  0012E6  6E33               	movwf	___fladd@a+3,c
  2362  0012E8                     l1625:
  2363  0012E8  8E32               	bsf	___fladd@a+2,7,c
  2364  0012EA  D006               	goto	L3
  2365  0012EC                     l1629:
  2366  0012EC  0E00               	movlw	0
  2367  0012EE  6E30               	movwf	___fladd@a,c
  2368  0012F0  0E00               	movlw	0
  2369  0012F2  6E31               	movwf	___fladd@a+1,c
  2370  0012F4  0E00               	movlw	0
  2371  0012F6  6E32               	movwf	___fladd@a+2,c
  2372  0012F8                     L3:
  2373  0012F8  0E00               	movlw	0
  2374  0012FA  6E33               	movwf	___fladd@a+3,c
  2375  0012FC  503A               	movf	___fladd@bexp,w,c
  2376  0012FE  5C39               	subwf	___fladd@aexp,w,c
  2377  001300  B0D8               	btfsc	status,0,c
  2378  001302  D022               	goto	l1667
  2379  001304  AC38               	btfss	___fladd@signs,6,c
  2380  001306  D002               	goto	l1637
  2381  001308  0E80               	movlw	128
  2382  00130A  1A38               	xorwf	___fladd@signs,f,c
  2383  00130C                     l1637:
  2384  00130C  C03A  F03B         	movff	___fladd@bexp,___fladd@grs
  2385  001310  C039  F03A         	movff	___fladd@aexp,___fladd@bexp
  2386  001314  C03B  F039         	movff	___fladd@grs,___fladd@aexp
  2387  001318  C02C  F03B         	movff	___fladd@b,___fladd@grs
  2388  00131C  C030  F02C         	movff	___fladd@a,___fladd@b
  2389  001320  C03B  F030         	movff	___fladd@grs,___fladd@a
  2390  001324  C02D  F03B         	movff	___fladd@b+1,___fladd@grs
  2391  001328  C031  F02D         	movff	___fladd@a+1,___fladd@b+1
  2392  00132C  C03B  F031         	movff	___fladd@grs,___fladd@a+1
  2393  001330  C02E  F03B         	movff	___fladd@b+2,___fladd@grs
  2394  001334  C032  F02E         	movff	___fladd@a+2,___fladd@b+2
  2395  001338  C03B  F032         	movff	___fladd@grs,___fladd@a+2
  2396  00133C  C02F  F03B         	movff	___fladd@b+3,___fladd@grs
  2397  001340  C033  F02F         	movff	___fladd@a+3,___fladd@b+3
  2398  001344  C03B  F033         	movff	___fladd@grs,___fladd@a+3
  2399  001348                     l1667:
  2400  001348  0E00               	movlw	0
  2401  00134A  6E3B               	movwf	___fladd@grs,c
  2402  00134C  503A               	movf	___fladd@bexp,w,c
  2403  00134E  C039  F034         	movff	___fladd@aexp,??___fladd
  2404  001352  6A35               	clrf	(??___fladd+1)& (0+255),c
  2405  001354  5E34               	subwf	??___fladd,f,c
  2406  001356  0E00               	movlw	0
  2407  001358  5A35               	subwfb	??___fladd+1,f,c
  2408  00135A  BE35               	btfsc	??___fladd+1,7,c
  2409  00135C  D02C               	goto	l699
  2410  00135E  5035               	movf	??___fladd+1,w,c
  2411  001360  E104               	bnz	u1100
  2412  001362  0E1A               	movlw	26
  2413  001364  5C34               	subwf	??___fladd,w,c
  2414  001366  A0D8               	btfss	status,0,c
  2415  001368  D026               	goto	l699
  2416  00136A                     u1100:
  2417  00136A  502C               	movf	___fladd@b,w,c
  2418  00136C  102D               	iorwf	___fladd@b+1,w,c
  2419  00136E  102E               	iorwf	___fladd@b+2,w,c
  2420  001370  102F               	iorwf	___fladd@b+3,w,c
  2421  001372  B4D8               	btfsc	status,2,c
  2422  001374  D002               	goto	u1110
  2423  001376  0E01               	movlw	1
  2424  001378  D001               	goto	u1120
  2425  00137A                     u1110:
  2426  00137A  0E00               	movlw	0
  2427  00137C                     u1120:
  2428  00137C  6E3B               	movwf	___fladd@grs,c
  2429  00137E  0E00               	movlw	0
  2430  001380  6E2C               	movwf	___fladd@b,c
  2431  001382  0E00               	movlw	0
  2432  001384  6E2D               	movwf	___fladd@b+1,c
  2433  001386  0E00               	movlw	0
  2434  001388  6E2E               	movwf	___fladd@b+2,c
  2435  00138A  0E00               	movlw	0
  2436  00138C  6E2F               	movwf	___fladd@b+3,c
  2437  00138E  C039  F03A         	movff	___fladd@aexp,___fladd@bexp
  2438  001392  D015               	goto	u1150
  2439  001394                     l700:
  2440  001394  A03B               	btfss	___fladd@grs,0,c
  2441  001396  D005               	goto	l1679
  2442  001398  90D8               	bcf	status,0,c
  2443  00139A  303B               	rrcf	___fladd@grs,w,c
  2444  00139C  0901               	iorlw	1
  2445  00139E  6E3B               	movwf	___fladd@grs,c
  2446  0013A0  D002               	goto	l1681
  2447  0013A2                     l1679:
  2448  0013A2  90D8               	bcf	status,0,c
  2449  0013A4  323B               	rrcf	___fladd@grs,f,c
  2450  0013A6                     l1681:
  2451  0013A6  B02C               	btfsc	___fladd@b,0,c
  2452  0013A8  8E3B               	bsf	___fladd@grs,7,c
  2453  0013AA  342F               	rlcf	___fladd@b+3,w,c
  2454  0013AC  322F               	rrcf	___fladd@b+3,f,c
  2455  0013AE  322E               	rrcf	___fladd@b+2,f,c
  2456  0013B0  322D               	rrcf	___fladd@b+1,f,c
  2457  0013B2  322C               	rrcf	___fladd@b,f,c
  2458  0013B4  2A3A               	incf	___fladd@bexp,f,c
  2459  0013B6                     l699:
  2460  0013B6  5039               	movf	___fladd@aexp,w,c
  2461  0013B8  5C3A               	subwf	___fladd@bexp,w,c
  2462  0013BA  A0D8               	btfss	status,0,c
  2463  0013BC  D7EB               	goto	l700
  2464  0013BE                     u1150:
  2465  0013BE  BC38               	btfsc	___fladd@signs,6,c
  2466  0013C0  D028               	goto	l1713
  2467  0013C2  503A               	movf	___fladd@bexp,w,c
  2468  0013C4  A4D8               	btfss	status,2,c
  2469  0013C6  D009               	goto	l1695
  2470  0013C8  0E00               	movlw	0
  2471  0013CA  6E2C               	movwf	?___fladd,c
  2472  0013CC  0E00               	movlw	0
  2473  0013CE  6E2D               	movwf	?___fladd+1,c
  2474  0013D0  0E00               	movlw	0
  2475  0013D2  6E2E               	movwf	?___fladd+2,c
  2476  0013D4  0E00               	movlw	0
  2477  0013D6  6E2F               	movwf	?___fladd+3,c
  2478  0013D8  0012               	return	
  2479  0013DA                     l1695:
  2480  0013DA  5030               	movf	___fladd@a,w,c
  2481  0013DC  262C               	addwf	___fladd@b,f,c
  2482  0013DE  5031               	movf	___fladd@a+1,w,c
  2483  0013E0  222D               	addwfc	___fladd@b+1,f,c
  2484  0013E2  5032               	movf	___fladd@a+2,w,c
  2485  0013E4  222E               	addwfc	___fladd@b+2,f,c
  2486  0013E6  5033               	movf	___fladd@a+3,w,c
  2487  0013E8  222F               	addwfc	___fladd@b+3,f,c
  2488  0013EA  A02F               	btfss	___fladd@b+3,0,c
  2489  0013EC  D071               	goto	u1280
  2490  0013EE  A03B               	btfss	___fladd@grs,0,c
  2491  0013F0  D005               	goto	l1703
  2492  0013F2  90D8               	bcf	status,0,c
  2493  0013F4  303B               	rrcf	___fladd@grs,w,c
  2494  0013F6  0901               	iorlw	1
  2495  0013F8  6E3B               	movwf	___fladd@grs,c
  2496  0013FA  D002               	goto	l1705
  2497  0013FC                     l1703:
  2498  0013FC  90D8               	bcf	status,0,c
  2499  0013FE  323B               	rrcf	___fladd@grs,f,c
  2500  001400                     l1705:
  2501  001400  B02C               	btfsc	___fladd@b,0,c
  2502  001402  8E3B               	bsf	___fladd@grs,7,c
  2503  001404  342F               	rlcf	___fladd@b+3,w,c
  2504  001406  322F               	rrcf	___fladd@b+3,f,c
  2505  001408  322E               	rrcf	___fladd@b+2,f,c
  2506  00140A  322D               	rrcf	___fladd@b+1,f,c
  2507  00140C  322C               	rrcf	___fladd@b,f,c
  2508  00140E  2A3A               	incf	___fladd@bexp,f,c
  2509  001410  D05F               	goto	u1280
  2510  001412                     l1713:
  2511  001412  5030               	movf	___fladd@a,w,c
  2512  001414  5C2C               	subwf	___fladd@b,w,c
  2513  001416  5031               	movf	___fladd@a+1,w,c
  2514  001418  582D               	subwfb	___fladd@b+1,w,c
  2515  00141A  5032               	movf	___fladd@a+2,w,c
  2516  00141C  582E               	subwfb	___fladd@b+2,w,c
  2517  00141E  502F               	movf	___fladd@b+3,w,c
  2518  001420  0A80               	xorlw	128
  2519  001422  6E34               	movwf	??___fladd& (0+255),c
  2520  001424  5033               	movf	___fladd@a+3,w,c
  2521  001426  0A80               	xorlw	128
  2522  001428  5834               	subwfb	??___fladd& (0+255),w,c
  2523  00142A  B0D8               	btfsc	status,0,c
  2524  00142C  D025               	goto	l1723
  2525  00142E  502C               	movf	___fladd@b,w,c
  2526  001430  5C30               	subwf	___fladd@a,w,c
  2527  001432  6E34               	movwf	??___fladd& (0+255),c
  2528  001434  502D               	movf	___fladd@b+1,w,c
  2529  001436  5831               	subwfb	___fladd@a+1,w,c
  2530  001438  6E35               	movwf	(??___fladd+1)& (0+255),c
  2531  00143A  502E               	movf	___fladd@b+2,w,c
  2532  00143C  5832               	subwfb	___fladd@a+2,w,c
  2533  00143E  6E36               	movwf	(??___fladd+2)& (0+255),c
  2534  001440  502F               	movf	___fladd@b+3,w,c
  2535  001442  5833               	subwfb	___fladd@a+3,w,c
  2536  001444  6E37               	movwf	(??___fladd+3)& (0+255),c
  2537  001446  0EFF               	movlw	255
  2538  001448  2434               	addwf	??___fladd,w,c
  2539  00144A  6E2C               	movwf	___fladd@b,c
  2540  00144C  0EFF               	movlw	255
  2541  00144E  2035               	addwfc	??___fladd+1,w,c
  2542  001450  6E2D               	movwf	___fladd@b+1,c
  2543  001452  0EFF               	movlw	255
  2544  001454  2036               	addwfc	??___fladd+2,w,c
  2545  001456  6E2E               	movwf	___fladd@b+2,c
  2546  001458  0EFF               	movlw	255
  2547  00145A  2037               	addwfc	??___fladd+3,w,c
  2548  00145C  6E2F               	movwf	___fladd@b+3,c
  2549  00145E  0E80               	movlw	128
  2550  001460  1A38               	xorwf	___fladd@signs,f,c
  2551  001462  6C3B               	negf	___fladd@grs,c
  2552  001464  503B               	movf	___fladd@grs,w,c
  2553  001466  A4D8               	btfss	status,2,c
  2554  001468  D00F               	goto	l715
  2555  00146A  0E01               	movlw	1
  2556  00146C  262C               	addwf	___fladd@b,f,c
  2557  00146E  0E00               	movlw	0
  2558  001470  222D               	addwfc	___fladd@b+1,f,c
  2559  001472  222E               	addwfc	___fladd@b+2,f,c
  2560  001474  222F               	addwfc	___fladd@b+3,f,c
  2561  001476  D008               	goto	l715
  2562  001478                     l1723:
  2563  001478  5030               	movf	___fladd@a,w,c
  2564  00147A  5E2C               	subwf	___fladd@b,f,c
  2565  00147C  5031               	movf	___fladd@a+1,w,c
  2566  00147E  5A2D               	subwfb	___fladd@b+1,f,c
  2567  001480  5032               	movf	___fladd@a+2,w,c
  2568  001482  5A2E               	subwfb	___fladd@b+2,f,c
  2569  001484  5033               	movf	___fladd@a+3,w,c
  2570  001486  5A2F               	subwfb	___fladd@b+3,f,c
  2571  001488                     l715:
  2572  001488  502C               	movf	___fladd@b,w,c
  2573  00148A  102D               	iorwf	___fladd@b+1,w,c
  2574  00148C  102E               	iorwf	___fladd@b+2,w,c
  2575  00148E  102F               	iorwf	___fladd@b+3,w,c
  2576  001490  A4D8               	btfss	status,2,c
  2577  001492  D01C               	goto	l1747
  2578  001494  503B               	movf	___fladd@grs,w,c
  2579  001496  A4D8               	btfss	status,2,c
  2580  001498  D019               	goto	l1747
  2581  00149A  0E00               	movlw	0
  2582  00149C  6E2C               	movwf	?___fladd,c
  2583  00149E  0E00               	movlw	0
  2584  0014A0  6E2D               	movwf	?___fladd+1,c
  2585  0014A2  0E00               	movlw	0
  2586  0014A4  6E2E               	movwf	?___fladd+2,c
  2587  0014A6  0E00               	movlw	0
  2588  0014A8  6E2F               	movwf	?___fladd+3,c
  2589  0014AA  0012               	return	
  2590  0014AC                     l1731:
  2591  0014AC  90D8               	bcf	status,0,c
  2592  0014AE  362C               	rlcf	___fladd@b,f,c
  2593  0014B0  362D               	rlcf	___fladd@b+1,f,c
  2594  0014B2  362E               	rlcf	___fladd@b+2,f,c
  2595  0014B4  362F               	rlcf	___fladd@b+3,f,c
  2596  0014B6  BE3B               	btfsc	___fladd@grs,7,c
  2597  0014B8  802C               	bsf	___fladd@b,0,c
  2598  0014BA  A03B               	btfss	___fladd@grs,0,c
  2599  0014BC  D002               	goto	l1741
  2600  0014BE  80D8               	bsf	status,0,c
  2601  0014C0  D001               	goto	L4
  2602  0014C2                     l1741:
  2603  0014C2  90D8               	bcf	status,0,c
  2604  0014C4                     L4:
  2605  0014C4  363B               	rlcf	___fladd@grs,f,c
  2606  0014C6  503A               	movf	___fladd@bexp,w,c
  2607  0014C8  A4D8               	btfss	status,2,c
  2608  0014CA  063A               	decf	___fladd@bexp,f,c
  2609  0014CC                     l1747:
  2610  0014CC  AE2E               	btfss	___fladd@b+2,7,c
  2611  0014CE  D7EE               	goto	l1731
  2612  0014D0                     u1280:
  2613  0014D0  0E00               	movlw	0
  2614  0014D2  6E39               	movwf	___fladd@aexp,c
  2615  0014D4  AE3B               	btfss	___fladd@grs,7,c
  2616  0014D6  D00B               	goto	l724
  2617  0014D8  C03B  F034         	movff	___fladd@grs,??___fladd
  2618  0014DC  0E7F               	movlw	127
  2619  0014DE  1634               	andwf	??___fladd,f,c
  2620  0014E0  B4D8               	btfsc	status,2,c
  2621  0014E2  D003               	goto	l725
  2622  0014E4                     u1300:
  2623  0014E4  0E01               	movlw	1
  2624  0014E6  6E39               	movwf	___fladd@aexp,c
  2625  0014E8  D002               	goto	l724
  2626  0014EA                     l725:
  2627  0014EA  B02C               	btfsc	___fladd@b,0,c
  2628  0014EC  D7FB               	goto	u1300
  2629  0014EE                     l724:
  2630  0014EE  5039               	movf	___fladd@aexp,w,c
  2631  0014F0  B4D8               	btfsc	status,2,c
  2632  0014F2  D020               	goto	l1767
  2633  0014F4  0E01               	movlw	1
  2634  0014F6  262C               	addwf	___fladd@b,f,c
  2635  0014F8  0E00               	movlw	0
  2636  0014FA  222D               	addwfc	___fladd@b+1,f,c
  2637  0014FC  222E               	addwfc	___fladd@b+2,f,c
  2638  0014FE  222F               	addwfc	___fladd@b+3,f,c
  2639  001500  A02F               	btfss	___fladd@b+3,0,c
  2640  001502  D018               	goto	l1767
  2641  001504  C02C  F034         	movff	___fladd@b,??___fladd
  2642  001508  C02D  F035         	movff	___fladd@b+1,??___fladd+1
  2643  00150C  C02E  F036         	movff	___fladd@b+2,??___fladd+2
  2644  001510  C02F  F037         	movff	___fladd@b+3,??___fladd+3
  2645  001514  3437               	rlcf	??___fladd+3,w,c
  2646  001516  3237               	rrcf	??___fladd+3,f,c
  2647  001518  3236               	rrcf	??___fladd+2,f,c
  2648  00151A  3235               	rrcf	??___fladd+1,f,c
  2649  00151C  3234               	rrcf	??___fladd,f,c
  2650  00151E  C034  F02C         	movff	??___fladd,___fladd@b
  2651  001522  C035  F02D         	movff	??___fladd+1,___fladd@b+1
  2652  001526  C036  F02E         	movff	??___fladd+2,___fladd@b+2
  2653  00152A  C037  F02F         	movff	??___fladd+3,___fladd@b+3
  2654  00152E  283A               	incf	___fladd@bexp,w,c
  2655  001530  A4D8               	btfss	status,2,c
  2656  001532  2A3A               	incf	___fladd@bexp,f,c
  2657  001534                     l1767:
  2658  001534  283A               	incf	___fladd@bexp,w,c
  2659  001536  B4D8               	btfsc	status,2,c
  2660  001538  D003               	goto	u1360
  2661  00153A  503A               	movf	___fladd@bexp,w,c
  2662  00153C  A4D8               	btfss	status,2,c
  2663  00153E  D00D               	goto	l1775
  2664  001540                     u1360:
  2665  001540  0E00               	movlw	0
  2666  001542  6E2C               	movwf	___fladd@b,c
  2667  001544  0E00               	movlw	0
  2668  001546  6E2D               	movwf	___fladd@b+1,c
  2669  001548  0E00               	movlw	0
  2670  00154A  6E2E               	movwf	___fladd@b+2,c
  2671  00154C  0E00               	movlw	0
  2672  00154E  6E2F               	movwf	___fladd@b+3,c
  2673  001550  503A               	movf	___fladd@bexp,w,c
  2674  001552  A4D8               	btfss	status,2,c
  2675  001554  D002               	goto	l1775
  2676  001556  0E00               	movlw	0
  2677  001558  6E38               	movwf	___fladd@signs,c
  2678  00155A                     l1775:
  2679  00155A  A03A               	btfss	___fladd@bexp,0,c
  2680  00155C  D002               	goto	l1779
  2681  00155E  8E2E               	bsf	___fladd@b+2,7,c
  2682  001560  D001               	goto	l1781
  2683  001562                     l1779:
  2684  001562  9E2E               	bcf	___fladd@b+2,7,c
  2685  001564                     l1781:
  2686  001564  90D8               	bcf	status,0,c
  2687  001566  303A               	rrcf	___fladd@bexp,w,c
  2688  001568  6E2F               	movwf	___fladd@b+3,c
  2689  00156A  BE38               	btfsc	___fladd@signs,7,c
  2690  00156C  8E2F               	bsf	___fladd@b+3,7,c
  2691  00156E  C02C  F02C         	movff	___fladd@b,?___fladd
  2692  001572  C02D  F02D         	movff	___fladd@b+1,?___fladd+1
  2693  001576  C02E  F02E         	movff	___fladd@b+2,?___fladd+2
  2694  00157A  C02F  F02F         	movff	___fladd@b+3,?___fladd+3
  2695  00157E  0012               	return		;funcret
  2696  001580                     __end_of___fladd:
  2697                           	opt callstack 0
  2698                           
  2699 ;; *************** function _enviarRS232 *****************
  2700 ;; Defined at:
  2701 ;;		line 33 in file "./../../LIBRERIAS/funciones_auto.h"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  valores         2    4[COMRAM] PTR unsigned char 
  2704 ;;		 -> STR_4(8), STR_3(7), logicaEstadoSiguiente@texto(20), 
  2705 ;;  numero_valor    1    6[COMRAM] unsigned char 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  i               1    9[COMRAM] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2717 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2719 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2720 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2721 ;;Total ram usage:        6 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    1
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_logicaEstadoSiguiente
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text12
  2733  001BBA                     __ptext12:
  2734                           	opt callstack 0
  2735  001BBA                     _enviarRS232:
  2736                           	opt callstack 28
  2737                           
  2738                           ;./../../LIBRERIAS/funciones_auto.h: 34:     for(unsigned char i = 0; i<numero_valores; 
      +                          i++){
  2739                           
  2740                           ;incstack = 0
  2741  001BBA  0E00               	movlw	0
  2742  001BBC  6E0A               	movwf	enviarRS232@i,c
  2743  001BBE  D020               	goto	l2027
  2744  001BC0                     l2021:
  2745                           
  2746                           ;./../../LIBRERIAS/funciones_auto.h: 35:         TXREG1 = valores[i];
  2747  001BC0  500A               	movf	enviarRS232@i,w,c
  2748  001BC2  2405               	addwf	enviarRS232@valores,w,c
  2749  001BC4  6E08               	movwf	??_enviarRS232& (0+255),c
  2750  001BC6  0E00               	movlw	0
  2751  001BC8  2006               	addwfc	enviarRS232@valores+1,w,c
  2752  001BCA  6E09               	movwf	(??_enviarRS232+1)& (0+255),c
  2753  001BCC  C008  FFF6         	movff	??_enviarRS232,tblptrl
  2754  001BD0  C009  FFF7         	movff	??_enviarRS232+1,tblptrh
  2755  001BD4  0E00               	movlw	low (__smallconst shr (0+16))
  2756  001BD6  6EF8               	movwf	tblptru,c
  2757  001BD8  0E0E               	movlw	(high __ramtop+-1)
  2758  001BDA  64F7               	cpfsgt	tblptrh,c
  2759  001BDC  D003               	bra	u1767
  2760  001BDE  0008               	tblrd		*
  2761  001BE0  50F5               	movf	tablat,w,c
  2762  001BE2  D005               	bra	u1760
  2763  001BE4                     u1767:
  2764  001BE4  CFF6 FFE1          	movff	tblptrl,fsr1l
  2765  001BE8  CFF7 FFE2          	movff	tblptrh,fsr1h
  2766  001BEC  50E7               	movf	indf1,w,c
  2767  001BEE                     u1760:
  2768  001BEE  6EAE               	movwf	4014,c	;volatile
  2769                           
  2770                           ;./../../LIBRERIAS/funciones_auto.h: 36:         _delay((unsigned long)((3)*(48000000/40
      +                          00.0)));
  2771  001BF0  0E2F               	movlw	47
  2772  001BF2  6E08               	movwf	??_enviarRS232& (0+255),c
  2773  001BF4  0EC0               	movlw	192
  2774  001BF6                     u1867:
  2775  001BF6  2EE8               	decfsz	wreg,f,c
  2776  001BF8  D7FE               	bra	u1867
  2777  001BFA  2E08               	decfsz	??_enviarRS232& (0+255),f,c
  2778  001BFC  D7FC               	bra	u1867
  2779                           
  2780                           ;./../../LIBRERIAS/funciones_auto.h: 37:     }
  2781  001BFE  2A0A               	incf	enviarRS232@i,f,c
  2782  001C00                     l2027:
  2783  001C00  5007               	movf	enviarRS232@numero_valores,w,c
  2784  001C02  5C0A               	subwf	enviarRS232@i,w,c
  2785  001C04  B0D8               	btfsc	status,0,c
  2786  001C06  0012               	return	
  2787  001C08  D7DB               	goto	l2021
  2788  001C0A                     __end_of_enviarRS232:
  2789                           	opt callstack 0
  2790                           
  2791 ;; *************** function _encenderMotor *****************
  2792 ;; Defined at:
  2793 ;;		line 27 in file "./../../LIBRERIAS/funciones_auto.h"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2811 ;;Total ram usage:        2 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    2
  2814 ;; This function calls:
  2815 ;;		_rutinaArranque
  2816 ;; This function is called by:
  2817 ;;		_logicaEstadoSiguiente
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text13
  2822  001C98                     __ptext13:
  2823                           	opt callstack 0
  2824  001C98                     _encenderMotor:
  2825                           	opt callstack 27
  2826                           
  2827                           ;./../../LIBRERIAS/funciones_auto.h: 28:     rutinaArranque();
  2828                           
  2829                           ;incstack = 0
  2830  001C98  EC66  F00E         	call	_rutinaArranque	;wreg free
  2831                           
  2832                           ;./../../LIBRERIAS/funciones_auto.h: 29:     CCP7CONbits.DC7B = velocidad & 0x0003;
  2833  001C9C  C054  F007         	movff	_velocidad,??_encenderMotor
  2834  001CA0  0E03               	movlw	3
  2835  001CA2  1607               	andwf	??_encenderMotor,f,c
  2836  001CA4  3A07               	swapf	??_encenderMotor,f,c
  2837  001CA6  010F               	movlb	15	; () banked
  2838  001CA8  5109               	movf	9,w,b	;volatile
  2839  001CAA  1807               	xorwf	??_encenderMotor,w,c
  2840  001CAC  0BCF               	andlw	-49
  2841  001CAE  1807               	xorwf	??_encenderMotor,w,c
  2842  001CB0  6F09               	movwf	9,b	;volatile
  2843                           
  2844                           ; BSR set to: 15
  2845                           ;./../../LIBRERIAS/funciones_auto.h: 30:     CCPR7L = velocidad>>2;
  2846  001CB2  C054  F007         	movff	_velocidad,??_encenderMotor
  2847  001CB6  C055  F008         	movff	_velocidad+1,??_encenderMotor+1
  2848  001CBA  90D8               	bcf	status,0,c
  2849  001CBC  3208               	rrcf	??_encenderMotor+1,f,c
  2850  001CBE  3207               	rrcf	??_encenderMotor,f,c
  2851  001CC0  90D8               	bcf	status,0,c
  2852  001CC2  3208               	rrcf	??_encenderMotor+1,f,c
  2853  001CC4  3207               	rrcf	??_encenderMotor,f,c
  2854  001CC6  5007               	movf	??_encenderMotor,w,c
  2855  001CC8  6F0A               	movwf	10,b	;volatile
  2856                           
  2857                           ; BSR set to: 15
  2858  001CCA  0012               	return		;funcret
  2859  001CCC                     __end_of_encenderMotor:
  2860                           	opt callstack 0
  2861                           
  2862 ;; *************** function _rutinaArranque *****************
  2863 ;; Defined at:
  2864 ;;		line 15 in file "./../../LIBRERIAS/funciones_auto.h"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2882 ;;Total ram usage:        2 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    1
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_encenderMotor
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text14
  2893  001CCC                     __ptext14:
  2894                           	opt callstack 0
  2895  001CCC                     _rutinaArranque:
  2896                           	opt callstack 27
  2897                           
  2898                           ;./../../LIBRERIAS/funciones_auto.h: 16:     CCP7CONbits.DC7B = cicle_90 & 0x0003;
  2899                           
  2900                           ; BSR set to: 15
  2901                           ;incstack = 0
  2902  001CCC  010F               	movlb	15	; () banked
  2903  001CCE  5109               	movf	9,w,b	;volatile
  2904  001CD0  0BCF               	andlw	-49
  2905  001CD2  0920               	iorlw	32
  2906  001CD4  6F09               	movwf	9,b	;volatile
  2907                           
  2908                           ;./../../LIBRERIAS/funciones_auto.h: 17:     CCPR7L = cicle_90>>2;
  2909  001CD6  0E70               	movlw	112
  2910  001CD8  6F0A               	movwf	10,b	;volatile
  2911                           
  2912                           ; BSR set to: 15
  2913                           ;./../../LIBRERIAS/funciones_auto.h: 18:     T2CONbits.TMR2ON = 1;
  2914  001CDA  84CA               	bsf	4042,2,c	;volatile
  2915                           
  2916                           ; BSR set to: 15
  2917                           ;./../../LIBRERIAS/funciones_auto.h: 19:     _delay((unsigned long)((50)*(48000000/4000.
      +                          0)));
  2918  001CDC  0E04               	movlw	4
  2919  001CDE  6E06               	movwf	(??_rutinaArranque+1)& (0+255),c
  2920  001CE0  0E0C               	movlw	12
  2921  001CE2  6E05               	movwf	??_rutinaArranque& (0+255),c
  2922  001CE4  0E34               	movlw	52
  2923  001CE6                     u1877:
  2924  001CE6  2EE8               	decfsz	wreg,f,c
  2925  001CE8  D7FE               	bra	u1877
  2926  001CEA  2E05               	decfsz	??_rutinaArranque& (0+255),f,c
  2927  001CEC  D7FC               	bra	u1877
  2928  001CEE  2E06               	decfsz	(??_rutinaArranque+1)& (0+255),f,c
  2929  001CF0  D7FA               	bra	u1877
  2930  001CF2  0012               	return		;funcret
  2931  001CF4                     __end_of_rutinaArranque:
  2932                           	opt callstack 0
  2933                           
  2934 ;; *************** function _configurarRS232 *****************
  2935 ;; Defined at:
  2936 ;;		line 26 in file "./../../LIBRERIAS/configuracion_auto.h"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2954 ;;Total ram usage:        0 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    1
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text15
  2965  001D14                     __ptext15:
  2966                           	opt callstack 0
  2967  001D14                     _configurarRS232:
  2968                           	opt callstack 29
  2969                           
  2970                           ;./../../LIBRERIAS/configuracion_auto.h: 27:     TRISCbits.TRISC7 = 1;
  2971                           
  2972                           ;incstack = 0
  2973  001D14  8E94               	bsf	3988,7,c	;volatile
  2974                           
  2975                           ;./../../LIBRERIAS/configuracion_auto.h: 28:     TRISCbits.TRISC6 = 0;
  2976  001D16  9C94               	bcf	3988,6,c	;volatile
  2977                           
  2978                           ;./../../LIBRERIAS/configuracion_auto.h: 29:     TXSTA1 = 0x22;
  2979  001D18  0E22               	movlw	34
  2980  001D1A  6EAD               	movwf	4013,c	;volatile
  2981                           
  2982                           ;./../../LIBRERIAS/configuracion_auto.h: 30:     RCSTA1 = 0x90;
  2983  001D1C  0E90               	movlw	144
  2984  001D1E  6EAC               	movwf	4012,c	;volatile
  2985                           
  2986                           ;./../../LIBRERIAS/configuracion_auto.h: 31:     BAUDCON1bits.BRG16 = 0;
  2987  001D20  967E               	bcf	3966,3,c	;volatile
  2988                           
  2989                           ;./../../LIBRERIAS/configuracion_auto.h: 32:     SPBRG1 = 77;
  2990  001D22  0E4D               	movlw	77
  2991  001D24  6EB0               	movwf	4016,c	;volatile
  2992                           
  2993                           ;./../../LIBRERIAS/configuracion_auto.h: 33:     PIR1bits.RC1IF = 0;
  2994  001D26  9A9E               	bcf	3998,5,c	;volatile
  2995                           
  2996                           ;./../../LIBRERIAS/configuracion_auto.h: 34:     PIE1bits.RC1IE = 1;
  2997  001D28  8A9D               	bsf	3997,5,c	;volatile
  2998  001D2A  0012               	return		;funcret
  2999  001D2C                     __end_of_configurarRS232:
  3000                           	opt callstack 0
  3001                           
  3002 ;; *************** function _configurarPuertos *****************
  3003 ;; Defined at:
  3004 ;;		line 3 in file "./../../LIBRERIAS/configuracion_auto.h"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3022 ;;Total ram usage:        0 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    1
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text16
  3033  001D2C                     __ptext16:
  3034                           	opt callstack 0
  3035  001D2C                     _configurarPuertos:
  3036                           	opt callstack 29
  3037                           
  3038                           ;./../../LIBRERIAS/configuracion_auto.h: 4:     ANCON0 = 0xFF;
  3039                           
  3040                           ;incstack = 0
  3041  001D2C  010F               	movlb	15	; () banked
  3042  001D2E  6948               	setf	72,b	;volatile
  3043                           
  3044                           ; BSR set to: 15
  3045                           ;./../../LIBRERIAS/configuracion_auto.h: 5:     ANCON1 = 0x1F;
  3046  001D30  0E1F               	movlw	31
  3047  001D32  6F49               	movwf	73,b	;volatile
  3048                           
  3049                           ; BSR set to: 15
  3050                           ;./../../LIBRERIAS/configuracion_auto.h: 6:     TRISDbits.TRISD5 = 1;
  3051  001D34  8A95               	bsf	3989,5,c	;volatile
  3052                           
  3053                           ; BSR set to: 15
  3054  001D36  0012               	return		;funcret
  3055  001D38                     __end_of_configurarPuertos:
  3056                           	opt callstack 0
  3057                           
  3058 ;; *************** function _configurarPWM7 *****************
  3059 ;; Defined at:
  3060 ;;		line 14 in file "./../../LIBRERIAS/configuracion_auto.h"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3078 ;;Total ram usage:        0 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    1
  3081 ;; This function calls:
  3082 ;;		Nothing
  3083 ;; This function is called by:
  3084 ;;		_main
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text17
  3089  001CF4                     __ptext17:
  3090                           	opt callstack 0
  3091  001CF4                     _configurarPWM7:
  3092                           	opt callstack 29
  3093                           
  3094                           ;./../../LIBRERIAS/configuracion_auto.h: 15:     TRISBbits.TRISB4 = 0;
  3095                           
  3096                           ; BSR set to: 15
  3097                           ;incstack = 0
  3098  001CF4  9893               	bcf	3987,4,c	;volatile
  3099                           
  3100                           ;./../../LIBRERIAS/configuracion_auto.h: 16:     TRISBbits.TRISB7 = 0;
  3101  001CF6  9E93               	bcf	3987,7,c	;volatile
  3102                           
  3103                           ;./../../LIBRERIAS/configuracion_auto.h: 17:     CCP7CONbits.CCP7M = 0xC;
  3104  001CF8  010F               	movlb	15	; () banked
  3105  001CFA  5109               	movf	9,w,b	;volatile
  3106  001CFC  0BF0               	andlw	-16
  3107  001CFE  090C               	iorlw	12
  3108  001D00  6F09               	movwf	9,b	;volatile
  3109                           
  3110                           ;./../../LIBRERIAS/configuracion_auto.h: 18:     CCPTMRS1bits.C7TSEL = 0b00;
  3111  001D02  0E3F               	movlw	-193
  3112  001D04  1751               	andwf	81,f,b	;volatile
  3113                           
  3114                           ;./../../LIBRERIAS/configuracion_auto.h: 20:     T2CON = 0x02;
  3115  001D06  0E02               	movlw	2
  3116  001D08  6ECA               	movwf	4042,c	;volatile
  3117                           
  3118                           ;./../../LIBRERIAS/configuracion_auto.h: 21:     PR2 = 124;
  3119  001D0A  0E7C               	movlw	124
  3120  001D0C  6ECB               	movwf	4043,c	;volatile
  3121                           
  3122                           ;./../../LIBRERIAS/configuracion_auto.h: 23:     TMR2 = 0x00;
  3123  001D0E  0E00               	movlw	0
  3124  001D10  6ECC               	movwf	4044,c	;volatile
  3125                           
  3126                           ; BSR set to: 15
  3127  001D12  0012               	return		;funcret
  3128  001D14                     __end_of_configurarPWM7:
  3129                           	opt callstack 0
  3130                           
  3131 ;; *************** function _configurarInterrupciones *****************
  3132 ;; Defined at:
  3133 ;;		line 9 in file "./../../LIBRERIAS/configuracion_auto.h"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      void 
  3140 ;; Registers used:
  3141 ;;		None
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3151 ;;Total ram usage:        0 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    1
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_main
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text18
  3162  001D38                     __ptext18:
  3163                           	opt callstack 0
  3164  001D38                     _configurarInterrupciones:
  3165                           	opt callstack 29
  3166                           
  3167                           ;./../../LIBRERIAS/configuracion_auto.h: 10:     INTCONbits.GIE = 1;
  3168                           
  3169                           ; BSR set to: 15
  3170                           ;incstack = 0
  3171  001D38  8EF2               	bsf	4082,7,c	;volatile
  3172                           
  3173                           ;./../../LIBRERIAS/configuracion_auto.h: 11:     INTCONbits.PEIE = 1;
  3174  001D3A  8CF2               	bsf	4082,6,c	;volatile
  3175  001D3C  0012               	return		;funcret
  3176  001D3E                     __end_of_configurarInterrupciones:
  3177                           	opt callstack 0
  3178                           
  3179 ;; *************** function _rutina *****************
  3180 ;; Defined at:
  3181 ;;		line 23 in file "Test_PWM_bluethoot.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  dato            1    3[COMRAM] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3197 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3198 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;Total ram usage:        4 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		Interrupt level 2
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	intcode
  3209  000008                     __pintcode:
  3210                           	opt callstack 0
  3211  000008                     _rutina:
  3212                           	opt callstack 24
  3213                           
  3214                           ;incstack = 0
  3215  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3216  00000A  CFD9 F002          	movff	fsr2l,??_rutina+1
  3217  00000E  CFDA F003          	movff	fsr2h,??_rutina+2
  3218                           
  3219                           ;Test_PWM_bluethoot.c: 24:     if(PIR1bits.RC1IF == 1){
  3220  000012  AA9E               	btfss	3998,5,c	;volatile
  3221  000014  D020               	goto	i2l117
  3222                           
  3223                           ;Test_PWM_bluethoot.c: 25:         unsigned char dato = RCREG1;
  3224  000016  CFAF F004          	movff	4015,rutina@dato	;volatile
  3225                           
  3226                           ;Test_PWM_bluethoot.c: 26:         if(dato == 'P'){
  3227  00001A  0E50               	movlw	80
  3228  00001C  1804               	xorwf	rutina@dato,w,c
  3229  00001E  A4D8               	btfss	status,2,c
  3230  000020  D005               	goto	i2l2105
  3231                           
  3232                           ;Test_PWM_bluethoot.c: 27:             bandera = 1;
  3233  000022  0E01               	movlw	1
  3234  000024  6E57               	movwf	_bandera,c
  3235                           
  3236                           ;Test_PWM_bluethoot.c: 28:             indicador = 0;
  3237  000026  0E00               	movlw	0
  3238  000028  6E56               	movwf	_indicador,c
  3239                           
  3240                           ;Test_PWM_bluethoot.c: 29:         }
  3241  00002A  D015               	goto	i2l117
  3242  00002C                     i2l2105:
  3243                           
  3244                           ;Test_PWM_bluethoot.c: 31:             datos[indicador] = dato;
  3245  00002C  0E94               	movlw	low _datos
  3246  00002E  2456               	addwf	_indicador,w,c
  3247  000030  6ED9               	movwf	fsr2l,c
  3248  000032  6ADA               	clrf	fsr2h,c
  3249  000034  0E00               	movlw	high _datos
  3250  000036  22DA               	addwfc	fsr2h,f,c
  3251  000038  C004  FFDF         	movff	rutina@dato,indf2
  3252                           
  3253                           ;Test_PWM_bluethoot.c: 32:             indicador++;
  3254  00003C  2A56               	incf	_indicador,f,c
  3255                           
  3256                           ;Test_PWM_bluethoot.c: 33:             TXREG1 = dato;
  3257  00003E  C004  FFAE         	movff	rutina@dato,4014	;volatile
  3258                           
  3259                           ;Test_PWM_bluethoot.c: 34:             _delay((unsigned long)((5)*(48000000/4000.0)));
  3260  000042  0E4E               	movlw	78
  3261  000044  6E01               	movwf	??_rutina& (0+255),c
  3262  000046  0EEB               	movlw	235
  3263  000048                     i2u188_47:
  3264  000048  2EE8               	decfsz	wreg,f,c
  3265  00004A  D7FE               	bra	i2u188_47
  3266  00004C  2E01               	decfsz	??_rutina& (0+255),f,c
  3267  00004E  D7FC               	bra	i2u188_47
  3268  000050  F000               	nop	
  3269                           
  3270                           ;Test_PWM_bluethoot.c: 35:             TXREG1 = '-';
  3271  000052  0E2D               	movlw	45
  3272  000054  6EAE               	movwf	4014,c	;volatile
  3273  000056                     i2l117:
  3274  000056  C003  FFDA         	movff	??_rutina+2,fsr2h
  3275  00005A  C002  FFD9         	movff	??_rutina+1,fsr2l
  3276  00005E  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3277  000060  0011               	retfie		f
  3278  000062                     __end_of_rutina:
  3279                           	opt callstack 0
  3280                           
  3281                           	psect	rparam
  3282  0000                     
  3283                           	psect	temp
  3284  00005B                     btemp:
  3285                           	opt callstack 0
  3286  00005B                     	ds	1
  3287  0000                     int$flags	set	btemp
  3288  0000                     wtemp8	set	btemp+1
  3289  0000                     ttemp5	set	btemp+1
  3290  0000                     ttemp6	set	btemp+4
  3291  0000                     ttemp7	set	btemp+8
  3292                           tosu	equ	0xFFF
  3293                           tosh	equ	0xFFE
  3294                           tosl	equ	0xFFD
  3295                           stkptr	equ	0xFFC
  3296                           pclatu	equ	0xFFB
  3297                           pclath	equ	0xFFA
  3298                           pcl	equ	0xFF9
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           prodh	equ	0xFF4
  3304                           prodl	equ	0xFF3
  3305                           indf0	equ	0xFEF
  3306                           postinc0	equ	0xFEE
  3307                           postdec0	equ	0xFED
  3308                           preinc0	equ	0xFEC
  3309                           plusw0	equ	0xFEB
  3310                           fsr0h	equ	0xFEA
  3311                           fsr0l	equ	0xFE9
  3312                           wreg	equ	0xFE8
  3313                           indf1	equ	0xFE7
  3314                           postinc1	equ	0xFE6
  3315                           postdec1	equ	0xFE5
  3316                           preinc1	equ	0xFE4
  3317                           plusw1	equ	0xFE3
  3318                           fsr1h	equ	0xFE2
  3319                           fsr1l	equ	0xFE1
  3320                           bsr	equ	0xFE0
  3321                           indf2	equ	0xFDF
  3322                           postinc2	equ	0xFDE
  3323                           postdec2	equ	0xFDD
  3324                           preinc2	equ	0xFDC
  3325                           plusw2	equ	0xFDB
  3326                           fsr2h	equ	0xFDA
  3327                           fsr2l	equ	0xFD9
  3328                           status	equ	0xFD8


Data Sizes:
    Strings     32
    Constant    0
    Data        3
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     75      90
    BANK0           160     22      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[8]), STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> logicaEstadoSiguiente@texto(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> logicaEstadoSiguiente@texto(BANK0[20]), 

    S1076_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> logicaEstadoSiguiente@texto(BANK0[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> logicaEstadoSiguiente@texto(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[8]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[8]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    logicaEstadoSiguiente@comand	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK0[10]), 

    enviarRS232@valores	PTR unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[8]), STR_3(CODE[7]), logicaEstadoSiguiente@texto(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_logicaEstadoSiguiente
    _logicaEstadoSiguiente->_fijarVelocidad
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fijarVelocidad->___fladd
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fladd->___flmul
    _encenderMotor->_rutinaArranque

Critical Paths under _rutina in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_logicaEstadoSiguiente

Critical Paths under _rutina in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutina in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutina in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutina in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rutina in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rutina in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rutina in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rutina in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rutina in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rutina in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rutina in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rutina in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rutina in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rutina in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _rutina in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8944
           _configurarInterrupciones
                     _configurarPWM7
                  _configurarPuertos
                    _configurarRS232
                        _enviarRS232
              _logicaEstadoSiguiente
 ---------------------------------------------------------------------------------
 (1) _logicaEstadoSiguiente                               29    27      2    8246
                                             68 COMRAM     7     5      2
                                              0 BANK0     22    22      0
                      _encenderMotor
                        _enviarRS232
                     _fijarVelocidad
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14    10      4    2059
                                             27 COMRAM    14    10      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    1558
                                             19 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    34      6    1208
                                             13 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     782
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _fijarVelocidad                                       9     9      0    5207
                                             59 COMRAM     9     9      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             43 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2048
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2388
                                             43 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _enviarRS232                                          6     3      3     698
                                              4 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _encenderMotor                                        2     2      0       0
                                              6 COMRAM     2     2      0
                     _rutinaArranque
 ---------------------------------------------------------------------------------
 (3) _rutinaArranque                                       2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _configurarRS232                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarPuertos                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarPWM7                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarInterrupciones                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _rutina                                               4     4      0      67
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configurarInterrupciones
   _configurarPWM7
   _configurarPuertos
   _configurarRS232
   _enviarRS232
   _logicaEstadoSiguiente
     _encenderMotor
       _rutinaArranque
     _enviarRS232
     _fijarVelocidad
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch

 _rutina (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      54       5       52.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4B      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AE       6        0.0%
DATA                 0      0      AE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jun 14 15:56:11 2019

                     __CFG_CP0$OFF 000000                                l700 1394  
                              l801 1240                                l715 1488  
                              l724 14EE                                l725 14EA  
                              l832 163C                                l825 15BE  
                              l784 0FA2                                l793 11BA  
                              l794 11B6                                l699 13B6  
                              _PR2 000FCB                                u950 1A56  
                              u970 1A9E                    ?_configurarPWM7 0001  
                 ??_fijarVelocidad 003C                                wreg 000FE8  
                     __CFG_IESO$ON 000000                       ___flmul@aexp 0024  
                     ___flmul@bexp 0025                       ___flmul@sign 001F  
                     ___flmul@temp 002A                       ___flmul@prod 0026  
                     ___fltol@exp1 0035                    ??_encenderMotor 0007  
    logicaEstadoSiguiente@medicion 00B2                               l2021 1BC0  
                             l2007 16AE                               l2027 1C00  
                             l2123 1B10                               l2071 16DA  
                             l1601 12A0                               l2137 1B44  
                             l2129 1B26                               l2083 172E  
                             l2075 16E2                               l2067 16CE  
                             l2091 1794                               l1605 12A4  
                             l2069 16D4                               l1703 13FC  
                             l1535 1A5E                               l2079 1708  
                             l1705 1400                               l1713 1412  
                             l1625 12E8                               l1561 193C  
                             l1731 14AC                               l1723 1478  
                             l1803 0F4E                               l1741 14C2  
                             l1637 130C                               l1629 12EC  
                             l1821 0F8E                               l1805 0F52  
                             l1557 1932                               l1903 121C  
                             l1831 0FC0                               l1823 0F92  
                             l1807 0F62                               l1567 1954  
                             l1681 13A6                               l1585 1B76  
                             l1747 14CC                               l1667 1348  
                             l1915 125E                               l1587 1B9A  
                             l1781 1564                               l1775 155A  
                             l1767 1534                               l1695 13DA  
                             l1679 13A2                               l1943 19F4  
                             l1927 19AA                               l1873 1162  
                             l1961 1A34                               l1953 1A0C  
                             l1779 1562                               l1955 1A18  
                             l1947 1A04                               l1971 15CE  
                             l1981 15FE                               l1879 1180  
                             l1991 166E                               l1983 1624  
                             l1977 15EC                               l1899 11FE  
                             l1979 15F2                               l1989 1662  
               __CFG_WPFP$PAGE_127 000000                               STR_1 0F01  
                             STR_2 0F0A                               STR_3 0F1A  
                             STR_4 0F12                               u1100 136A  
                             u1110 137A                               u1120 137C  
                             u1300 14E4                               u1150 13BE  
                             u1360 1540                               u1280 14D0  
                             u1520 11B0                               u1600 19C8  
                             u1605 19BE                               u1470 0FAE  
                             u1560 120C                               u1480 1124  
                             u1640 1A1E                               u1720 1678  
                             u1570 122A                               u1485 111A  
                             u1590 1998                               u1760 1BEE  
                             u1781 16C6                               u1767 1BE4  
                             u1867 1BF6                               u1877 1CE6  
                             _TMR2 000FCC                   ?_configurarRS232 0001  
                     ?_enviarRS232 0005                      __CFG_FCMEN$ON 000000  
                             _dbuf 0060                               _main 1AE6  
                             _prec 0050                               _nout 004C  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf1 000FE7                               indf2 000FDF  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             btemp 005B                               prodh 000FF4  
                             prodl 000FF3                               start 0062  
                     ___param_bank 000000                      __CFG_PLLDIV$3 000000  
                     _BAUDCON1bits 000F7E                      ___fltol@sign1 0034  
                  __end_of___fladd 1580                              ?_main 0001  
                  __end_of___flmul 1274                    __end_of___fltol 1A46  
                            _T2CON 000FCA                              i2l117 0056  
                     vfpfcnvrt@fmt 0010                              _PORTD 000F83  
                            _datos 0094                              _flags 0052  
                            _fuego 005A                              _fputc 1A46  
                   __CFG_CLKOEC$ON 000000                              _width 004E  
                            _putch 1D42                              tablat 000FF5  
                            ttemp5 005C                              ttemp6 005F  
                            ttemp7 0063                              status 000FD8  
                            wtemp8 005C                    __end_of_sprintf 1C58  
           ?_logicaEstadoSiguiente 0045            __CFG_DSWDTOSC$INTOSCREF 000000  
                  __initialization 1C58                       __end_of_main 1B64  
                   __CFG_OSC$HSPLL 000000                             ??_main 004C  
                    __activetblptr 000003                             ?_fputc 0005  
                           _CCPR7L 000F0A                             _ANCON0 000F48  
                           _ANCON1 000F49                             ?_putch 0001  
                           i2l2105 002C                     __CFG_WDTEN$OFF 000000  
                           _RCREG1 000FAF                             _RCSTA1 000FAC  
                           _SPBRG1 000FB0                     __CFG_WPCFG$OFF 000000  
                           _TXREG1 000FAE                   __end_of___xxtofl 16C0  
                           _TXSTA1 000FAD                     __CFG_WPDIS$OFF 000000  
                   __CFG_XINST$OFF 000000                       _CCPTMRS1bits 000F51  
                     vfprintf@cfmt 001A                          ??___fladd 0034  
                   __CFG_STVREN$ON 000000                          ??___flmul 001B  
                        ??___fltol 0030                             clear_0 1C7C  
                           clear_1 1C88                             _rutina 0008  
                _configurarPuertos 1D2C                             fputc@c 0005  
                     __pdataCOMRAM 0058                 ?_configurarPuertos 0001  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                           putch@c 0001                   __end_of_vfprintf 1BBA  
                        ??_sprintf 0020                ??_configurarPuertos 0005  
             __CFG_LS48MHZ$SYS48X8 000000                       ___xxtofl@arg 000F  
                     ___xxtofl@exp 000E                       ___xxtofl@val 0005  
                       __accesstop 0060            __end_of__initialization 1C8E  
         _configurarInterrupciones 1D38               __size_of_enviarRS232 0050  
                    ___rparam_used 000001                         ___fltol@f1 002C  
                     enviarRS232@i 000A                    __CFG_IOL1WAY$ON 000000  
             __CFG_WPEND$PAGE_WPFP 000000                     __pcstackCOMRAM 0001  
                 ??_configurarPWM7 0005                      __end_of_fputc 1AE6  
                    __end_of_putch 1D44          __end_of_configurarPuertos 1D38  
                  __CFG_DSWDTPS$G2 000000                            ??_fputc 0009  
                          ??_putch 0005            __size_of_rutinaArranque 0028  
                       __pbssBANK0 0060                            ?_rutina 0001  
                        ?___xxtofl 0005                 __size_of_vfpfcnvrt 00DA  
                 fijarVelocidad@DC 003C            ??_logicaEstadoSiguiente 0047  
            __end_of_encenderMotor 1CCC                   __CFG_CFGPLLEN$ON 000000  
                          __Hparam 0000                            __Lparam 0000  
         __size_of_configurarRS232 0018                            ___fladd 1274  
                          ___flmul 0F22                            ___fltol 198C  
                        ?_vfprintf 0014                       __psmallconst 0F00  
                          _bandera 0057         __size_of_configurarPuertos 000C  
                          __pcinit 1C58                            __ramtop 0F00  
                          __ptext0 1AE6                            __ptext1 16C0  
                          __ptext2 1C0A                            __ptext3 1B64  
                          __ptext4 18B2                            __ptext5 1A46  
                          __ptext6 1D42                            __ptext7 17D2  
                          __ptext8 1580                            __ptext9 198C  
                  __size_of_rutina 005A                          _T2CONbits 000FCA  
                       ??___xxtofl 0009                            _sprintf 1C0A  
             end_of_initialization 1C8E                            fputc@fp 0007  
          __size_of_fijarVelocidad 00E0                  __end_of_vfpfcnvrt 198C  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                       ??_vfprintf 001A                          _PORTDbits 000F83  
                 __CFG_DSBOREN$OFF 000000                        ___fladd@grs 003B  
                 __CFG_CPUDIV$OSC1 000000                      ___xxtofl@sign 000D  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                        _TRISDbits 000F95         ??_configurarInterrupciones 0005  
                __CFG_SOSCSEL$HIGH 000000                     _rutinaArranque 1CCC  
                      ___flmul@grs 0020                        _CCP7CONbits 000F09  
              __CFG_MSSP7B_EN$MSK7 000000                        vfpfcnvrt@ap 0012  
                      vfpfcnvrt@fp 000E                      __pidataCOMRAM 1D3E  
                ??_configurarRS232 0005                   __CFG_DSWDTEN$OFF 000000  
                   __end_of_rutina 0062                start_initialization 1C58  
           __end_of_rutinaArranque 1CF4                      ??_enviarRS232 0008  
                      vfprintf@fmt 0016                  __CFG_ADCSEL$BIT12 000000  
                         ??_rutina 0001                          ___fladd@a 0030  
                        ___fladd@b 002C                          ___flmul@a 0017  
                        ___flmul@b 0013                        __pbssCOMRAM 004C  
                    __pcstackBANK0 009E                    ?_rutinaArranque 0001  
                __size_of___xxtofl 0140     __size_of_logicaEstadoSiguiente 0112  
    __end_of_logicaEstadoSiguiente 17D2                     _fijarVelocidad 17D2  
              __end_of_enviarRS232 1C0A                 enviarRS232@valores 0005  
                        __pintcode 0008                           ?___fladd 002C  
                         ?___flmul 0013                           ?___fltol 002C  
                __size_of_vfprintf 0056                        __smallconst 0F00  
                        _indicador 0056               __CFG_RTCOSC$T1OSCREF 000000  
 __end_of_configurarInterrupciones 1D3E            __size_of_configurarPWM7 0020  
                         ?_sprintf 001C                     __size_of_fputc 00A0  
           __end_of_fijarVelocidad 18B2                     __size_of_putch 0002  
      logicaEstadoSiguiente@comand 0045                           _PIE1bits 000F9D  
                         _PIR1bits 000F9E                           i2u188_47 0048  
                 __CFG_WDTPS$32768 000000                          _velocidad 0054  
                        _vfpfcnvrt 18B2             __size_of_encenderMotor 0034  
        enviarRS232@numero_valores 0007                    ?_fijarVelocidad 0001  
                      _enviarRS232 1BBA                    _configurarRS232 1D14  
                         __Hrparam 0000                         vfprintf@ap 0018  
                         __Lrparam 0000                         vfprintf@fp 0014  
                 __size_of___fladd 030C                   __size_of___flmul 0352  
                 __size_of___fltol 00BA                         ?_vfpfcnvrt 000E  
              _fijarVelocidad$1328 0040                         sprintf@fmt 001E  
                         _cicle_90 0058                           ___xxtofl 1580  
       logicaEstadoSiguiente@F7074 0080                           __ptext10 0F22  
                         __ptext11 1274                           __ptext12 1BBA  
                         __ptext13 1C98                           __ptext14 1CCC  
                         __ptext15 1D14                           __ptext16 1D2C  
                         __ptext17 1CF4                           __ptext18 1D38  
                       rutina@dato 0004                   __size_of_sprintf 004E  
                    _encenderMotor 1C98                      __size_of_main 007E  
       logicaEstadoSiguiente@texto 009E  __size_of_configurarInterrupciones 0006  
        ?_configurarInterrupciones 0001                           int$flags 005B  
                         _vfprintf 1B64                   ??_rutinaArranque 0005  
                       _INTCONbits 000FF2                     _configurarPWM7 1CF4  
          __end_of_configurarRS232 1D2C                           intlevel2 0000  
                        sprintf@ap 0022                     ?_encenderMotor 0001  
                      ??_vfpfcnvrt 0014                           sprintf@f 0024  
                         sprintf@s 001C             __end_of_configurarPWM7 1D14  
                    ___fladd@signs 0038                fijarVelocidad@speed 0044  
                     ___fladd@aexp 0039                       ___fladd@bexp 003A  
            _logicaEstadoSiguiente 16C0  
